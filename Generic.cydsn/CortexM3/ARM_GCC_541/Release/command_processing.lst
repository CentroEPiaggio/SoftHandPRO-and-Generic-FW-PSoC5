ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E24B     		ldr	r3, .L50
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E04B     		ldr	r3, .L50
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DD48     		ldr	r0, .L50
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DA4B     		ldr	r3, .L50
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D84A     		ldr	r2, .L50
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D64B     		ldr	r3, .L50
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 49E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A72B     		cmp	r3, #167
  79 0042 00F24582 		bhi	.L49
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 71030000 		.word	.L5+1
  85 0050 53030000 		.word	.L7+1
  86 0054 D1040000 		.word	.L49+1
  87 0058 77030000 		.word	.L8+1
  88 005c 7D030000 		.word	.L9+1
  89 0060 A1030000 		.word	.L10+1
  90 0064 3B030000 		.word	.L11+1
  91 0068 D1040000 		.word	.L49+1
  92 006c D1040000 		.word	.L49+1
  93 0070 D5030000 		.word	.L12+1
  94 0074 BB030000 		.word	.L13+1
  95 0078 D1040000 		.word	.L49+1
  96 007c 59030000 		.word	.L14+1
  97 0080 F7030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 4


  98 0084 D1040000 		.word	.L49+1
  99 0088 D1040000 		.word	.L49+1
 100 008c D1040000 		.word	.L49+1
 101 0090 D1040000 		.word	.L49+1
 102 0094 D1040000 		.word	.L49+1
 103 0098 D1040000 		.word	.L49+1
 104 009c D1040000 		.word	.L49+1
 105 00a0 D1040000 		.word	.L49+1
 106 00a4 D1040000 		.word	.L49+1
 107 00a8 D1040000 		.word	.L49+1
 108 00ac D1040000 		.word	.L49+1
 109 00b0 D1040000 		.word	.L49+1
 110 00b4 D1040000 		.word	.L49+1
 111 00b8 D1040000 		.word	.L49+1
 112 00bc D1040000 		.word	.L49+1
 113 00c0 D1040000 		.word	.L49+1
 114 00c4 D1040000 		.word	.L49+1
 115 00c8 D1040000 		.word	.L49+1
 116 00cc D1040000 		.word	.L49+1
 117 00d0 D1040000 		.word	.L49+1
 118 00d4 D1040000 		.word	.L49+1
 119 00d8 D1040000 		.word	.L49+1
 120 00dc D1040000 		.word	.L49+1
 121 00e0 D1040000 		.word	.L49+1
 122 00e4 D1040000 		.word	.L49+1
 123 00e8 D1040000 		.word	.L49+1
 124 00ec D1040000 		.word	.L49+1
 125 00f0 D1040000 		.word	.L49+1
 126 00f4 D1040000 		.word	.L49+1
 127 00f8 D1040000 		.word	.L49+1
 128 00fc D1040000 		.word	.L49+1
 129 0100 D1040000 		.word	.L49+1
 130 0104 D1040000 		.word	.L49+1
 131 0108 D1040000 		.word	.L49+1
 132 010c D1040000 		.word	.L49+1
 133 0110 D1040000 		.word	.L49+1
 134 0114 D1040000 		.word	.L49+1
 135 0118 D1040000 		.word	.L49+1
 136 011c D1040000 		.word	.L49+1
 137 0120 D1040000 		.word	.L49+1
 138 0124 D1040000 		.word	.L49+1
 139 0128 D1040000 		.word	.L49+1
 140 012c D1040000 		.word	.L49+1
 141 0130 D1040000 		.word	.L49+1
 142 0134 D1040000 		.word	.L49+1
 143 0138 D1040000 		.word	.L49+1
 144 013c D1040000 		.word	.L49+1
 145 0140 D1040000 		.word	.L49+1
 146 0144 D1040000 		.word	.L49+1
 147 0148 D1040000 		.word	.L49+1
 148 014c D1040000 		.word	.L49+1
 149 0150 D1040000 		.word	.L49+1
 150 0154 D1040000 		.word	.L49+1
 151 0158 D1040000 		.word	.L49+1
 152 015c D1040000 		.word	.L49+1
 153 0160 D1040000 		.word	.L49+1
 154 0164 D1040000 		.word	.L49+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 5


 155 0168 D1040000 		.word	.L49+1
 156 016c D1040000 		.word	.L49+1
 157 0170 D1040000 		.word	.L49+1
 158 0174 D1040000 		.word	.L49+1
 159 0178 D1040000 		.word	.L49+1
 160 017c D1040000 		.word	.L49+1
 161 0180 D1040000 		.word	.L49+1
 162 0184 D1040000 		.word	.L49+1
 163 0188 D1040000 		.word	.L49+1
 164 018c D1040000 		.word	.L49+1
 165 0190 D1040000 		.word	.L49+1
 166 0194 D1040000 		.word	.L49+1
 167 0198 D1040000 		.word	.L49+1
 168 019c D1040000 		.word	.L49+1
 169 01a0 D1040000 		.word	.L49+1
 170 01a4 D1040000 		.word	.L49+1
 171 01a8 D1040000 		.word	.L49+1
 172 01ac D1040000 		.word	.L49+1
 173 01b0 D1040000 		.word	.L49+1
 174 01b4 D1040000 		.word	.L49+1
 175 01b8 D1040000 		.word	.L49+1
 176 01bc D1040000 		.word	.L49+1
 177 01c0 D1040000 		.word	.L49+1
 178 01c4 D1040000 		.word	.L49+1
 179 01c8 D1040000 		.word	.L49+1
 180 01cc D1040000 		.word	.L49+1
 181 01d0 D1040000 		.word	.L49+1
 182 01d4 D1040000 		.word	.L49+1
 183 01d8 D1040000 		.word	.L49+1
 184 01dc D1040000 		.word	.L49+1
 185 01e0 D1040000 		.word	.L49+1
 186 01e4 D1040000 		.word	.L49+1
 187 01e8 D1040000 		.word	.L49+1
 188 01ec D1040000 		.word	.L49+1
 189 01f0 D1040000 		.word	.L49+1
 190 01f4 D1040000 		.word	.L49+1
 191 01f8 D1040000 		.word	.L49+1
 192 01fc D1040000 		.word	.L49+1
 193 0200 D1040000 		.word	.L49+1
 194 0204 D1040000 		.word	.L49+1
 195 0208 D1040000 		.word	.L49+1
 196 020c D1040000 		.word	.L49+1
 197 0210 D1040000 		.word	.L49+1
 198 0214 D1040000 		.word	.L49+1
 199 0218 D1040000 		.word	.L49+1
 200 021c D1040000 		.word	.L49+1
 201 0220 D1040000 		.word	.L49+1
 202 0224 D1040000 		.word	.L49+1
 203 0228 D1040000 		.word	.L49+1
 204 022c D1040000 		.word	.L49+1
 205 0230 D1040000 		.word	.L49+1
 206 0234 D1040000 		.word	.L49+1
 207 0238 D1040000 		.word	.L49+1
 208 023c D1040000 		.word	.L49+1
 209 0240 D1040000 		.word	.L49+1
 210 0244 D1040000 		.word	.L49+1
 211 0248 D1040000 		.word	.L49+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 6


 212 024c ED020000 		.word	.L16+1
 213 0250 29030000 		.word	.L17+1
 214 0254 F3020000 		.word	.L18+1
 215 0258 35030000 		.word	.L19+1
 216 025c F9020000 		.word	.L20+1
 217 0260 05030000 		.word	.L21+1
 218 0264 FF020000 		.word	.L22+1
 219 0268 D1040000 		.word	.L49+1
 220 026c 23030000 		.word	.L23+1
 221 0270 11030000 		.word	.L24+1
 222 0274 D1040000 		.word	.L49+1
 223 0278 17030000 		.word	.L25+1
 224 027c 0B030000 		.word	.L26+1
 225 0280 D1040000 		.word	.L49+1
 226 0284 D1040000 		.word	.L49+1
 227 0288 D1040000 		.word	.L49+1
 228 028c 2F030000 		.word	.L27+1
 229 0290 D1040000 		.word	.L49+1
 230 0294 1D030000 		.word	.L28+1
 231 0298 D1040000 		.word	.L49+1
 232 029c D1040000 		.word	.L49+1
 233 02a0 D1040000 		.word	.L49+1
 234 02a4 D1040000 		.word	.L49+1
 235 02a8 D1040000 		.word	.L49+1
 236 02ac D1040000 		.word	.L49+1
 237 02b0 D1040000 		.word	.L49+1
 238 02b4 D1040000 		.word	.L49+1
 239 02b8 D1040000 		.word	.L49+1
 240 02bc D1040000 		.word	.L49+1
 241 02c0 D1040000 		.word	.L49+1
 242 02c4 D1040000 		.word	.L49+1
 243 02c8 D1040000 		.word	.L49+1
 244 02cc D1040000 		.word	.L49+1
 245 02d0 95040000 		.word	.L29+1
 246 02d4 9B040000 		.word	.L30+1
 247 02d8 B3040000 		.word	.L31+1
 248 02dc B9040000 		.word	.L32+1
 249 02e0 BF040000 		.word	.L33+1
 250 02e4 C5040000 		.word	.L34+1
 251 02e8 CB040000 		.word	.L35+1
 252              		.p2align 1
 253              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 254              		.loc 1 78 0
 255 02ec FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 256              		.loc 1 79 0
 257 02f0 EFE0     		b	.L1
 258              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 7


 259              		.loc 1 84 0
 260 02f2 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 261              		.loc 1 85 0
 262 02f6 ECE0     		b	.L1
 263              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 264              		.loc 1 90 0
 265 02f8 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 266              		.loc 1 91 0
 267 02fc E9E0     		b	.L1
 268              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 269              		.loc 1 96 0
 270 02fe FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 271              		.loc 1 97 0
 272 0302 E6E0     		b	.L1
 273              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 274              		.loc 1 102 0
 275 0304 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 276              		.loc 1 103 0
 277 0308 E3E0     		b	.L1
 278              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 279              		.loc 1 108 0
 280 030a FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 281              		.loc 1 109 0
 282 030e E0E0     		b	.L1
 283              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 284              		.loc 1 114 0
 285 0310 FFF7FEFF 		bl	cmd_get_velocities
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 8


 115:..\src/command_processing.c ****             break;
 286              		.loc 1 115 0
 287 0314 DDE0     		b	.L1
 288              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 289              		.loc 1 120 0
 290 0316 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 291              		.loc 1 121 0
 292 031a DAE0     		b	.L1
 293              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 294              		.loc 1 126 0
 295 031c FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 296              		.loc 1 127 0
 297 0320 D7E0     		b	.L1
 298              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 299              		.loc 1 132 0
 300 0322 FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 301              		.loc 1 133 0
 302 0326 D4E0     		b	.L1
 303              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 304              		.loc 1 138 0
 305 0328 FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 306              		.loc 1 139 0
 307 032c D1E0     		b	.L1
 308              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 309              		.loc 1 144 0
 310 032e FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
 311              		.loc 1 145 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 9


 312 0332 CEE0     		b	.L1
 313              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 314              		.loc 1 150 0
 315 0334 FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 316              		.loc 1 151 0
 317 0338 CBE0     		b	.L1
 318              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 319              		.loc 1 156 0
 320 033a 164B     		ldr	r3, .L50+4
 321 033c 1B88     		ldrh	r3, [r3]
 322 033e 3B61     		str	r3, [r7, #16]
 323              	.LBB8:
 324              	.LBB9:
 325              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 10


  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 11


  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 12


 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 13


 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 14


 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 15


 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 16


 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 17


 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 18


 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 19


 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 20


 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 21


 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 22


 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 23


 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 326              		.loc 2 792 0
 327 0340 3B69     		ldr	r3, [r7, #16]
 328              		.syntax unified
 329              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 330 0342 5BBA     		rev16 r3, r3
 331              	@ 0 "" 2
 332              		.thumb
 333              		.syntax unified
 334 0344 FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 335              		.loc 2 793 0
 336 0346 FB68     		ldr	r3, [r7, #12]
 337              	.LBE9:
 338              	.LBE8:
 339              		.loc 1 156 0
 340 0348 9BB2     		uxth	r3, r3
 341 034a 1846     		mov	r0, r3
 342 034c FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 343              		.loc 1 157 0
 344 0350 BFE0     		b	.L1
 345              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 346              		.loc 1 162 0
 347 0352 FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 348              		.loc 1 163 0
 349 0356 BCE0     		b	.L1
 350              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 24


 351              		.loc 1 168 0
 352 0358 0E4B     		ldr	r3, .L50+4
 353 035a 1B88     		ldrh	r3, [r3]
 354 035c BB61     		str	r3, [r7, #24]
 355              	.LBB10:
 356              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 357              		.loc 2 792 0
 358 035e BB69     		ldr	r3, [r7, #24]
 359              		.syntax unified
 360              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 361 0360 5BBA     		rev16 r3, r3
 362              	@ 0 "" 2
 363              		.thumb
 364              		.syntax unified
 365 0362 BB60     		str	r3, [r7, #8]
 366              		.loc 2 793 0
 367 0364 BB68     		ldr	r3, [r7, #8]
 368              	.LBE11:
 369              	.LBE10:
 370              		.loc 1 168 0
 371 0366 9BB2     		uxth	r3, r3
 372 0368 1846     		mov	r0, r3
 373 036a FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 374              		.loc 1 169 0
 375 036e B0E0     		b	.L1
 376              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 377              		.loc 1 174 0
 378 0370 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 379              		.loc 1 175 0
 380 0374 ADE0     		b	.L1
 381              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 382              		.loc 1 180 0
 383 0376 FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 384              		.loc 1 181 0
 385 037a AAE0     		b	.L1
 386              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 387              		.loc 1 186 0
 388 037c 3220     		movs	r0, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 25


 389 037e FFF7FEFF 		bl	memStore
 390 0382 0346     		mov	r3, r0
 391 0384 002B     		cmp	r3, #0
 392 0386 07D0     		beq	.L38
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 393              		.loc 1 187 0
 394 0388 0120     		movs	r0, #1
 395 038a FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 396              		.loc 1 190 0
 397 038e A0E0     		b	.L1
 398              	.L51:
 399              		.align	2
 400              	.L50:
 401 0390 00000000 		.word	g_rx
 402 0394 01000000 		.word	g_rx+1
 403              	.L38:
 189:..\src/command_processing.c ****             break;
 404              		.loc 1 189 0
 405 0398 0020     		movs	r0, #0
 406 039a FFF7FEFF 		bl	sendAcknowledgment
 407              		.loc 1 190 0
 408 039e 98E0     		b	.L1
 409              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 410              		.loc 1 195 0
 411 03a0 FFF7FEFF 		bl	memRestore
 412 03a4 0346     		mov	r3, r0
 413 03a6 002B     		cmp	r3, #0
 414 03a8 03D0     		beq	.L40
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 415              		.loc 1 196 0
 416 03aa 0120     		movs	r0, #1
 417 03ac FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 418              		.loc 1 199 0
 419 03b0 8FE0     		b	.L1
 420              	.L40:
 198:..\src/command_processing.c ****             break;
 421              		.loc 1 198 0
 422 03b2 0020     		movs	r0, #0
 423 03b4 FFF7FEFF 		bl	sendAcknowledgment
 424              		.loc 1 199 0
 425 03b8 8BE0     		b	.L1
 426              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 26


 204:..\src/command_processing.c ****             if(memInit())
 427              		.loc 1 204 0
 428 03ba FFF7FEFF 		bl	memInit
 429 03be 0346     		mov	r3, r0
 430 03c0 002B     		cmp	r3, #0
 431 03c2 03D0     		beq	.L42
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 432              		.loc 1 205 0
 433 03c4 0120     		movs	r0, #1
 434 03c6 FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 435              		.loc 1 208 0
 436 03ca 82E0     		b	.L1
 437              	.L42:
 207:..\src/command_processing.c ****             break;
 438              		.loc 1 207 0
 439 03cc 0020     		movs	r0, #0
 440 03ce FFF7FEFF 		bl	sendAcknowledgment
 441              		.loc 1 208 0
 442 03d2 7EE0     		b	.L1
 443              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 444              		.loc 1 214 0
 445 03d4 0120     		movs	r0, #1
 446 03d6 FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 215 0
 448 03da 4FF47A70 		mov	r0, #1000
 449 03de FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 450              		.loc 1 216 0
 451 03e2 0020     		movs	r0, #0
 452 03e4 FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 453              		.loc 1 217 0
 454 03e8 4FF47A70 		mov	r0, #1000
 455 03ec FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 456              		.loc 1 218 0
 457 03f0 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 458              		.loc 1 219 0
 459 03f4 6DE0     		b	.L1
 460              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 461              		.loc 1 224 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 27


 462 03f6 384B     		ldr	r3, .L52
 463 03f8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 464 03fa 1B02     		lsls	r3, r3, #8
 465 03fc 1AB2     		sxth	r2, r3
 466 03fe 364B     		ldr	r3, .L52
 467 0400 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 468 0402 1BB2     		sxth	r3, r3
 469 0404 1343     		orrs	r3, r3, r2
 470 0406 1AB2     		sxth	r2, r3
 471 0408 344B     		ldr	r3, .L52+4
 472 040a 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 473              		.loc 1 225 0
 474 040c 324B     		ldr	r3, .L52
 475 040e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 476 0410 1B02     		lsls	r3, r3, #8
 477 0412 1AB2     		sxth	r2, r3
 478 0414 304B     		ldr	r3, .L52
 479 0416 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 480 0418 1BB2     		sxth	r3, r3
 481 041a 1343     		orrs	r3, r3, r2
 482 041c 1AB2     		sxth	r2, r3
 483 041e 2F4B     		ldr	r3, .L52+4
 484 0420 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 485              		.loc 1 227 0
 486 0422 2E4B     		ldr	r3, .L52+4
 487 0424 B3F90230 		ldrsh	r3, [r3, #2]
 488 0428 B3F1FF3F 		cmp	r3, #-1
 489 042c 0FD1     		bne	.L44
 490              		.loc 1 227 0 is_stmt 0 discriminator 1
 491 042e 2B4B     		ldr	r3, .L52+4
 492 0430 B3F90430 		ldrsh	r3, [r3, #4]
 493 0434 B3F1FF3F 		cmp	r3, #-1
 494 0438 09D1     		bne	.L44
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 495              		.loc 1 228 0 is_stmt 1
 496 043a 284B     		ldr	r3, .L52+4
 497 043c 0022     		movs	r2, #0
 498 043e 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 499              		.loc 1 229 0
 500 0440 264B     		ldr	r3, .L52+4
 501 0442 0022     		movs	r2, #0
 502 0444 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 503              		.loc 1 230 0
 504 0446 254B     		ldr	r3, .L52+4
 505 0448 0022     		movs	r2, #0
 506 044a 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 507              		.loc 1 231 0
 508 044c 41E0     		b	.L1
 509              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             // Speed & repetitions saturations
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 28


 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 510              		.loc 1 234 0
 511 044e 234B     		ldr	r3, .L52+4
 512 0450 B3F90230 		ldrsh	r3, [r3, #2]
 513 0454 002B     		cmp	r3, #0
 514 0456 03DA     		bge	.L45
 235:..\src/command_processing.c ****                 calib.speed = 0;
 515              		.loc 1 235 0
 516 0458 204B     		ldr	r3, .L52+4
 517 045a 0022     		movs	r2, #0
 518 045c 5A80     		strh	r2, [r3, #2]	@ movhi
 519 045e 07E0     		b	.L46
 520              	.L45:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 521              		.loc 1 236 0
 522 0460 1E4B     		ldr	r3, .L52+4
 523 0462 B3F90230 		ldrsh	r3, [r3, #2]
 524 0466 C82B     		cmp	r3, #200
 525 0468 02DD     		ble	.L46
 237:..\src/command_processing.c ****                 calib.speed = 200;
 526              		.loc 1 237 0
 527 046a 1C4B     		ldr	r3, .L52+4
 528 046c C822     		movs	r2, #200
 529 046e 5A80     		strh	r2, [r3, #2]	@ movhi
 530              	.L46:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 531              		.loc 1 239 0
 532 0470 1A4B     		ldr	r3, .L52+4
 533 0472 B3F90430 		ldrsh	r3, [r3, #4]
 534 0476 002B     		cmp	r3, #0
 535 0478 02DA     		bge	.L47
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 536              		.loc 1 240 0
 537 047a 184B     		ldr	r3, .L52+4
 538 047c 0022     		movs	r2, #0
 539 047e 9A80     		strh	r2, [r3, #4]	@ movhi
 540              	.L47:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 541              		.loc 1 245 0
 542 0480 174B     		ldr	r3, .L52+8
 543 0482 0022     		movs	r2, #0
 544 0484 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 545              		.loc 1 246 0
 546 0486 154B     		ldr	r3, .L52+4
 547 0488 0122     		movs	r2, #1
 548 048a 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 549              		.loc 1 248 0
 550 048c 0120     		movs	r0, #1
 551 048e FFF7FEFF 		bl	sendAcknowledgment
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 29


 249:..\src/command_processing.c ****             break;
 552              		.loc 1 249 0
 553 0492 1EE0     		b	.L1
 554              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 555              		.loc 1 254 0
 556 0494 FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 557              		.loc 1 255 0
 558 0498 1BE0     		b	.L1
 559              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 560              		.loc 1 260 0
 561 049a 124B     		ldr	r3, .L52+12
 562 049c 1B88     		ldrh	r3, [r3]
 563 049e 7B61     		str	r3, [r7, #20]
 564              	.LBB12:
 565              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 566              		.loc 2 792 0
 567 04a0 7B69     		ldr	r3, [r7, #20]
 568              		.syntax unified
 569              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 570 04a2 5BBA     		rev16 r3, r3
 571              	@ 0 "" 2
 572              		.thumb
 573              		.syntax unified
 574 04a4 7B60     		str	r3, [r7, #4]
 575              		.loc 2 793 0
 576 04a6 7B68     		ldr	r3, [r7, #4]
 577              	.LBE13:
 578              	.LBE12:
 579              		.loc 1 260 0
 580 04a8 9BB2     		uxth	r3, r3
 581 04aa 1846     		mov	r0, r3
 582 04ac FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 583              		.loc 1 261 0
 584 04b0 0FE0     		b	.L1
 585              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 586              		.loc 1 266 0
 587 04b2 FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
 588              		.loc 1 267 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 30


 589 04b6 0CE0     		b	.L1
 590              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 591              		.loc 1 272 0
 592 04b8 FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 593              		.loc 1 273 0
 594 04bc 09E0     		b	.L1
 595              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 596              		.loc 1 278 0
 597 04be FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 598              		.loc 1 279 0
 599 04c2 06E0     		b	.L1
 600              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 601              		.loc 1 284 0
 602 04c4 FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 603              		.loc 1 285 0
 604 04c8 03E0     		b	.L1
 605              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_FILESYSTEM
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file();
 606              		.loc 1 290 0
 607 04ca FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;             
 608              		.loc 1 291 0
 609 04ce 00E0     		b	.L1
 610              	.L49:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c ****             
 294:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 295:..\src/command_processing.c ****         default:
 296:..\src/command_processing.c ****             break;
 611              		.loc 1 296 0
 612 04d0 00BF     		nop
 613              	.L1:
 297:..\src/command_processing.c **** 
 298:..\src/command_processing.c ****     }
 299:..\src/command_processing.c **** }  
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 31


 614              		.loc 1 299 0
 615 04d2 2037     		adds	r7, r7, #32
 616              		.cfi_def_cfa_offset 8
 617 04d4 BD46     		mov	sp, r7
 618              		.cfi_def_cfa_register 13
 619              		@ sp needed
 620 04d6 80BD     		pop	{r7, pc}
 621              	.L53:
 622              		.align	2
 623              	.L52:
 624 04d8 00000000 		.word	g_rx
 625 04dc 00000000 		.word	calib
 626 04e0 00000000 		.word	g_refNew
 627 04e4 01000000 		.word	g_rx+1
 628              		.cfi_endproc
 629              	.LFE64:
 630              		.size	commProcess, .-commProcess
 631              		.section	.text.infoSend,"ax",%progbits
 632              		.align	2
 633              		.global	infoSend
 634              		.thumb
 635              		.thumb_func
 636              		.type	infoSend, %function
 637              	infoSend:
 638              	.LFB65:
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                                     INFO SEND
 303:..\src/command_processing.c **** //==============================================================================
 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoSend(void){
 639              		.loc 1 305 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 1504
 642              		@ frame_needed = 1, uses_anonymous_args = 0
 643 0000 80B5     		push	{r7, lr}
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 7, -8
 646              		.cfi_offset 14, -4
 647 0002 ADF5BC6D 		sub	sp, sp, #1504
 648              		.cfi_def_cfa_offset 1512
 649 0006 00AF     		add	r7, sp, #0
 650              		.cfi_def_cfa_register 7
 306:..\src/command_processing.c ****     char packet_string[1500];
 307:..\src/command_processing.c ****     
 308:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 651              		.loc 1 308 0
 652 0008 3B1D     		adds	r3, r7, #4
 653 000a 1846     		mov	r0, r3
 654 000c FFF7FEFF 		bl	prepare_generic_info
 309:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 655              		.loc 1 309 0
 656 0010 3B1D     		adds	r3, r7, #4
 657 0012 1846     		mov	r0, r3
 658 0014 FFF7FEFF 		bl	UART_RS485_PutString
 310:..\src/command_processing.c **** }
 659              		.loc 1 310 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 32


 660 0018 00BF     		nop
 661 001a 07F5BC67 		add	r7, r7, #1504
 662              		.cfi_def_cfa_offset 8
 663 001e BD46     		mov	sp, r7
 664              		.cfi_def_cfa_register 13
 665              		@ sp needed
 666 0020 80BD     		pop	{r7, pc}
 667              		.cfi_endproc
 668              	.LFE65:
 669              		.size	infoSend, .-infoSend
 670 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 671              		.align	2
 672              		.global	infoGet
 673              		.thumb
 674              		.thumb_func
 675              		.type	infoGet, %function
 676              	infoGet:
 677              	.LFB66:
 311:..\src/command_processing.c **** 
 312:..\src/command_processing.c **** 
 313:..\src/command_processing.c **** //==============================================================================
 314:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 315:..\src/command_processing.c **** //==============================================================================
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 678              		.loc 1 317 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 24008
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 80B5     		push	{r7, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 ADF5BB4D 		sub	sp, sp, #23936
 687              		.cfi_def_cfa_offset 23944
 688 0006 92B0     		sub	sp, sp, #72
 689              		.cfi_def_cfa_offset 24016
 690 0008 00AF     		add	r7, sp, #0
 691              		.cfi_def_cfa_register 7
 692 000a 0246     		mov	r2, r0
 693 000c 07F14803 		add	r3, r7, #72
 694 0010 423B     		subs	r3, r3, #66
 695 0012 1A80     		strh	r2, [r3]	@ movhi
 318:..\src/command_processing.c ****     char packet_string[4000] = "";
 696              		.loc 1 318 0
 697 0014 07F59C43 		add	r3, r7, #19968
 698 0018 03F12803 		add	r3, r3, #40
 699 001c 0022     		movs	r2, #0
 700 001e 1A60     		str	r2, [r3]
 701 0020 0433     		adds	r3, r3, #4
 702 0022 40F69C72 		movw	r2, #3996
 703 0026 0021     		movs	r1, #0
 704 0028 1846     		mov	r0, r3
 705 002a FFF7FEFF 		bl	memset
 319:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 706              		.loc 1 319 0
 707 002e 07F14803 		add	r3, r7, #72
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 33


 708 0032 403B     		subs	r3, r3, #64
 709 0034 0022     		movs	r2, #0
 710 0036 1A60     		str	r2, [r3]
 711 0038 0433     		adds	r3, r3, #4
 712 003a 44F61C62 		movw	r2, #19996
 713 003e 0021     		movs	r1, #0
 714 0040 1846     		mov	r0, r3
 715 0042 FFF7FEFF 		bl	memset
 320:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c ****     switch (info_type) {
 716              		.loc 1 322 0
 717 0046 07F14803 		add	r3, r7, #72
 718 004a 423B     		subs	r3, r3, #66
 719 004c 1B88     		ldrh	r3, [r3]
 720 004e 032B     		cmp	r3, #3
 721 0050 50D8     		bhi	.L63
 722 0052 01A2     		adr	r2, .L58
 723 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 724              		.p2align 2
 725              	.L58:
 726 0058 69000000 		.word	.L57+1
 727 005c 8B000000 		.word	.L59+1
 728 0060 AD000000 		.word	.L60+1
 729 0064 D3000000 		.word	.L61+1
 730              		.p2align 1
 731              	.L57:
 323:..\src/command_processing.c ****         case INFO_ALL:
 324:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 732              		.loc 1 324 0
 733 0068 07F59C43 		add	r3, r7, #19968
 734 006c 03F12803 		add	r3, r3, #40
 735 0070 1846     		mov	r0, r3
 736 0072 FFF7FEFF 		bl	prepare_generic_info
 325:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 737              		.loc 1 325 0
 738 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 326:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 739              		.loc 1 326 0
 740 007a 07F59C43 		add	r3, r7, #19968
 741 007e 03F12803 		add	r3, r3, #40
 742 0082 1846     		mov	r0, r3
 743 0084 FFF7FEFF 		bl	UART_RS485_PutString
 327:..\src/command_processing.c ****             break;
 744              		.loc 1 327 0
 745 0088 35E0     		b	.L62
 746              	.L59:
 328:..\src/command_processing.c ****         case CYCLES_INFO:
 329:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 747              		.loc 1 329 0
 748 008a 07F59C43 		add	r3, r7, #19968
 749 008e 03F12803 		add	r3, r3, #40
 750 0092 1846     		mov	r0, r3
 751 0094 FFF7FEFF 		bl	prepare_counter_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 752              		.loc 1 330 0
 753 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 34


 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 754              		.loc 1 331 0
 755 009c 07F59C43 		add	r3, r7, #19968
 756 00a0 03F12803 		add	r3, r3, #40
 757 00a4 1846     		mov	r0, r3
 758 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 759              		.loc 1 332 0
 760 00aa 24E0     		b	.L62
 761              	.L60:
 333:..\src/command_processing.c ****         case GET_SD_PARAM:
 334:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
 762              		.loc 1 334 0
 763 00ac 07F59C43 		add	r3, r7, #19968
 764 00b0 03F12803 		add	r3, r3, #40
 765 00b4 4FF47A61 		mov	r1, #4000
 766 00b8 1846     		mov	r0, r3
 767 00ba FFF7FEFF 		bl	Read_SD_Param
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 768              		.loc 1 335 0
 769 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 770              		.loc 1 336 0
 771 00c2 07F59C43 		add	r3, r7, #19968
 772 00c6 03F12803 		add	r3, r3, #40
 773 00ca 1846     		mov	r0, r3
 774 00cc FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 775              		.loc 1 337 0
 776 00d0 11E0     		b	.L62
 777              	.L61:
 338:..\src/command_processing.c ****         case GET_SD_DATA:
 339:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 778              		.loc 1 339 0
 779 00d2 07F14803 		add	r3, r7, #72
 780 00d6 403B     		subs	r3, r3, #64
 781 00d8 44F62061 		movw	r1, #20000
 782 00dc 1846     		mov	r0, r3
 783 00de FFF7FEFF 		bl	Read_SD_Data
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 784              		.loc 1 340 0
 785 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 786              		.loc 1 341 0
 787 00e6 07F14803 		add	r3, r7, #72
 788 00ea 403B     		subs	r3, r3, #64
 789 00ec 1846     		mov	r0, r3
 790 00ee FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c **** 
 343:..\src/command_processing.c ****             break;
 791              		.loc 1 343 0
 792 00f2 00E0     		b	.L62
 793              	.L63:
 344:..\src/command_processing.c ****         default:
 345:..\src/command_processing.c ****             break;
 794              		.loc 1 345 0
 795 00f4 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 35


 796              	.L62:
 346:..\src/command_processing.c ****     }
 347:..\src/command_processing.c **** }
 797              		.loc 1 347 0 discriminator 1
 798 00f6 00BF     		nop
 799 00f8 07F5BB47 		add	r7, r7, #23936
 800 00fc 4837     		adds	r7, r7, #72
 801              		.cfi_def_cfa_offset 8
 802 00fe BD46     		mov	sp, r7
 803              		.cfi_def_cfa_register 13
 804              		@ sp needed
 805 0100 80BD     		pop	{r7, pc}
 806              		.cfi_endproc
 807              	.LFE66:
 808              		.size	infoGet, .-infoGet
 809              		.global	__aeabi_i2f
 810              		.global	__aeabi_fdiv
 811 0102 00BF     		.section	.rodata
 812              		.align	2
 813              	.LC87:
 814 0000 20557362 		.ascii	" Usb\000"
 814      00
 815 0005 000000   		.align	2
 816              	.LC88:
 817 0008 2048616E 		.ascii	" Handle\000"
 817      646C6500 
 818              		.align	2
 819              	.LC89:
 820 0010 20454D47 		.ascii	" EMG proportional\000"
 820      2070726F 
 820      706F7274 
 820      696F6E61 
 820      6C00
 821 0022 0000     		.align	2
 822              	.LC90:
 823 0024 20454D47 		.ascii	" EMG integral\000"
 823      20696E74 
 823      65677261 
 823      6C00
 824 0032 0000     		.align	2
 825              	.LC91:
 826 0034 20454D47 		.ascii	" EMG FCFS\000"
 826      20464346 
 826      5300
 827 003e 0000     		.align	2
 828              	.LC92:
 829 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 829      20464346 
 829      53204164 
 829      76616E63 
 829      656400
 830 0053 00       		.align	2
 831              	.LC93:
 832 0054 204A6F79 		.ascii	" Joystick\000"
 832      73746963 
 832      6B00
 833 005e 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 36


 834              	.LC94:
 835 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 835      2070726F 
 835      706F7274 
 835      696F6E61 
 835      6C204E6F 
 836 0082 0000     		.align	2
 837              	.LC95:
 838 0084 20506F73 		.ascii	" Position\000"
 838      6974696F 
 838      6E00
 839 008e 0000     		.align	2
 840              	.LC96:
 841 0090 2050574D 		.ascii	" PWM\000"
 841      00
 842 0095 000000   		.align	2
 843              	.LC97:
 844 0098 20437572 		.ascii	" Current\000"
 844      72656E74 
 844      00
 845 00a1 000000   		.align	2
 846              	.LC98:
 847 00a4 20506F73 		.ascii	" Position and Current\000"
 847      6974696F 
 847      6E20616E 
 847      64204375 
 847      7272656E 
 848 00ba 0000     		.align	2
 849              	.LC99:
 850 00bc 20594553 		.ascii	" YES\000\000"
 850      0000
 851 00c2 0000     		.align	2
 852              	.LC100:
 853 00c4 204E4F00 		.ascii	" NO\000\000"
 853      00
 854 00c9 000000   		.align	2
 855              	.LC101:
 856 00cc 20526967 		.ascii	" Right\000\000"
 856      68740000 
 857              		.align	2
 858              	.LC102:
 859 00d4 204C6566 		.ascii	" Left\000\000"
 859      740000
 860 00db 00       		.align	2
 861              	.LC103:
 862 00dc 204F4646 		.ascii	" OFF\000\000"
 862      0000
 863 00e2 0000     		.align	2
 864              	.LC104:
 865 00e4 204F4E00 		.ascii	" ON\000\000"
 865      00
 866 00e9 000000   		.align	2
 867              	.LC105:
 868 00ec 204E6F6E 		.ascii	" None\000\000"
 868      650000
 869 00f3 00       		.align	2
 870              	.LC106:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 37


 871 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 871      52544320 
 871      626F6172 
 871      640000
 872 0103 00       		.align	2
 873              	.LC107:
 874 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 874      6920626F 
 874      61726420 
 874      5B4E2F41 
 874      5D0000
 875 0117 00       		.align	2
 876              	.LC108:
 877 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 877      6572205B 
 877      4E2F415D 
 877      0000
 878 0126 0000     		.align	2
 879              	.LC109:
 880 0128 204C6F77 		.ascii	" Low\000\000"
 880      0000
 881 012e 0000     		.align	2
 882              	.LC110:
 883 0130 20486967 		.ascii	" High\000\000"
 883      680000
 884 0137 00       		.align	2
 885              	.LC111:
 886 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 886      45524943 
 886      20555345 
 886      520000
 887 0147 00       		.align	2
 888              	.LC112:
 889 0148 204D4152 		.ascii	" MARIA\000\000"
 889      49410000 
 890              		.align	2
 891              	.LC113:
 892 0150 20524F5A 		.ascii	" ROZA\000\000"
 892      410000
 893 0157 00       		.align	2
 894              	.LC114:
 895 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 895      33383837 
 895      20285374 
 895      616E6461 
 895      72642900 
 896 016d 000000   		.align	2
 897              	.LC115:
 898 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 898      35303139 
 898      20284869 
 898      67682070 
 898      6F776572 
 899 0187 00       		.align	2
 900              	.LC116:
 901 0188 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 901      5448414E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 38


 901      44205052 
 901      4F0000
 902 0197 00       		.align	2
 903              	.LC117:
 904 0198 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 904      45524943 
 904      2032204D 
 904      4F544F52 
 904      530000
 905 01ab 00       		.align	2
 906              	.LC118:
 907 01ac 20414952 		.ascii	" AIR CHAMBERS\000\000"
 907      20434841 
 907      4D424552 
 907      530000
 908 01bb 00       		.align	2
 909              	.LC119:
 910 01bc 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 910      4F424F43 
 910      4B205752 
 910      49535400 
 910      00
 911 01cd 000000   		.align	2
 912              	.LC120:
 913 01d0 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 913      5448414E 
 913      44203220 
 913      4D4F544F 
 913      52530000 
 914              		.align	2
 915              	.LC121:
 916 01e4 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 916      743A7379 
 916      6E322C20 
 916      536C6F77 
 916      3A73796E 
 917 01fb 00       		.align	2
 918              	.LC122:
 919 01fc 20466173 		.ascii	" Fast:wrist, Slow:hand\000\000"
 919      743A7772 
 919      6973742C 
 919      20536C6F 
 919      773A6861 
 920              		.align	2
 921              	.LC123:
 922 0214 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 922      773A7379 
 922      6E322C20 
 922      46617374 
 922      3A73796E 
 923 022b 00       		.align	2
 924              	.LC124:
 925 022c 20536C6F 		.ascii	" Slow:wrist, Fast:hand\000\000"
 925      773A7772 
 925      6973742C 
 925      20466173 
 925      743A6861 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 39


 926              		.align	2
 927              	.LC125:
 928 0244 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 928      73653A43 
 928      572C204F 
 928      70656E3A 
 928      43435700 
 929 0259 000000   		.align	2
 930              	.LC126:
 931 025c 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 931      73653A43 
 931      43572C20 
 931      4F70656E 
 931      3A435700 
 932              		.section	.text.get_param_list,"ax",%progbits
 933              		.align	2
 934              		.global	get_param_list
 935              		.thumb
 936              		.thumb_func
 937              		.type	get_param_list, %function
 938              	get_param_list:
 939              	.LFB67:
 348:..\src/command_processing.c **** 
 349:..\src/command_processing.c **** 
 350:..\src/command_processing.c **** //==============================================================================
 351:..\src/command_processing.c **** //                                                                GET PARAM LIST
 352:..\src/command_processing.c **** //==============================================================================
 353:..\src/command_processing.c **** 
 354:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 355:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 356:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 357:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 940              		.loc 1 357 0
 941              		.cfi_startproc
 942              		@ args = 16, pretend = 0, frame = 5608
 943              		@ frame_needed = 1, uses_anonymous_args = 0
 944 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 945              		.cfi_def_cfa_offset 20
 946              		.cfi_offset 4, -20
 947              		.cfi_offset 5, -16
 948              		.cfi_offset 6, -12
 949              		.cfi_offset 7, -8
 950              		.cfi_offset 14, -4
 951 0002 ADF5AF5D 		sub	sp, sp, #5600
 952              		.cfi_def_cfa_offset 5620
 953 0006 83B0     		sub	sp, sp, #12
 954              		.cfi_def_cfa_offset 5632
 955 0008 00AF     		add	r7, sp, #0
 956              		.cfi_def_cfa_register 7
 957 000a 07F12804 		add	r4, r7, #40
 958 000e 1C3C     		subs	r4, r4, #28
 959 0010 2060     		str	r0, [r4]
 960 0012 07F10800 		add	r0, r7, #8
 961 0016 0160     		str	r1, [r0]
 962 0018 07F10801 		add	r1, r7, #8
 963 001c 0439     		subs	r1, r1, #4
 964 001e 0A60     		str	r2, [r1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 40


 965 0020 07F10802 		add	r2, r7, #8
 966 0024 083A     		subs	r2, r2, #8
 967 0026 1360     		str	r3, [r2]
 358:..\src/command_processing.c ****     
 359:..\src/command_processing.c ****     //Package to be sent variables
 360:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 968              		.loc 1 360 0
 969 0028 07F16803 		add	r3, r7, #104
 970 002c 103B     		subs	r3, r3, #16
 971 002e 0022     		movs	r2, #0
 972 0030 1A60     		str	r2, [r3]
 973 0032 0433     		adds	r3, r3, #4
 974 0034 41F27852 		movw	r2, #5496
 975 0038 0021     		movs	r1, #0
 976 003a 1846     		mov	r0, r3
 977 003c FFF7FEFF 		bl	memset
 361:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 978              		.loc 1 361 0
 979 0040 41F27C53 		movw	r3, #5500
 980 0044 07F5AF52 		add	r2, r7, #5600
 981 0048 1380     		strh	r3, [r2]	@ movhi
 362:..\src/command_processing.c **** 
 363:..\src/command_processing.c ****     //Auxiliary variables
 364:..\src/command_processing.c ****     uint8 CYDATA i, j;
 365:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 982              		.loc 1 365 0
 983 004a 0023     		movs	r3, #0
 984 004c 07F5AF52 		add	r2, r7, #5600
 985 0050 02F10502 		add	r2, r2, #5
 986 0054 1370     		strb	r3, [r2]
 366:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 987              		.loc 1 366 0
 988 0056 0023     		movs	r3, #0
 989 0058 07F5AF52 		add	r2, r7, #5600
 990 005c 02F10402 		add	r2, r2, #4
 991 0060 1370     		strb	r3, [r2]
 367:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 992              		.loc 1 367 0
 993 0062 0023     		movs	r3, #0
 994 0064 07F5AF52 		add	r2, r7, #5600
 995 0068 02F10302 		add	r2, r2, #3
 996 006c 1370     		strb	r3, [r2]
 368:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 369:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 997              		.loc 1 369 0
 998 006e 07F12803 		add	r3, r7, #40
 999 0072 043B     		subs	r3, r3, #4
 1000 0074 0022     		movs	r2, #0
 1001 0076 1A60     		str	r2, [r3]
 1002 0078 0433     		adds	r3, r3, #4
 1003 007a 2E22     		movs	r2, #46
 1004 007c 0021     		movs	r1, #0
 1005 007e 1846     		mov	r0, r3
 1006 0080 FFF7FEFF 		bl	memset
 370:..\src/command_processing.c ****     float aux_float;
 371:..\src/command_processing.c ****     int16 aux_int16;
 372:..\src/command_processing.c ****     uint16 aux_uint16;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 41


 373:..\src/command_processing.c ****     int32 aux_int32;
 374:..\src/command_processing.c ****     uint32 aux_uint32;
 375:..\src/command_processing.c **** 
 376:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1007              		.loc 1 376 0
 1008 0084 0023     		movs	r3, #0
 1009 0086 07F5AE52 		add	r2, r7, #5568
 1010 008a 02F11F02 		add	r2, r2, #31
 1011 008e 1370     		strb	r3, [r2]
 377:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1012              		.loc 1 377 0
 1013 0090 0123     		movs	r3, #1
 1014 0092 07F5AE52 		add	r2, r7, #5568
 1015 0096 02F11E02 		add	r2, r2, #30
 1016 009a 1370     		strb	r3, [r2]
 378:..\src/command_processing.c ****   
 379:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1017              		.loc 1 379 0
 1018 009c 07F12803 		add	r3, r7, #40
 1019 00a0 1C3B     		subs	r3, r3, #28
 1020 00a2 1B68     		ldr	r3, [r3]
 1021 00a4 1B68     		ldr	r3, [r3]
 1022 00a6 07F5AE52 		add	r2, r7, #5568
 1023 00aa 02F11802 		add	r2, r2, #24
 1024 00ae 1360     		str	r3, [r2]
 380:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1025              		.loc 1 380 0
 1026 00b0 07F5AE53 		add	r3, r7, #5568
 1027 00b4 03F11803 		add	r3, r3, #24
 1028 00b8 1B68     		ldr	r3, [r3]
 1029 00ba 07F5AE52 		add	r2, r7, #5568
 1030 00be 02F11402 		add	r2, r2, #20
 1031 00c2 1360     		str	r3, [r2]
 381:..\src/command_processing.c ****         
 382:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1032              		.loc 1 382 0
 1033 00c4 07F16803 		add	r3, r7, #104
 1034 00c8 103B     		subs	r3, r3, #16
 1035 00ca 0C22     		movs	r2, #12
 1036 00cc 1A70     		strb	r2, [r3]
 383:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1037              		.loc 1 383 0
 1038 00ce 07F16803 		add	r3, r7, #104
 1039 00d2 103B     		subs	r3, r3, #16
 1040 00d4 4C22     		movs	r2, #76
 1041 00d6 5A70     		strb	r2, [r3, #1]
 384:..\src/command_processing.c ****     
 385:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1042              		.loc 1 385 0
 1043 00d8 0023     		movs	r3, #0
 1044 00da 07F5AF52 		add	r2, r7, #5600
 1045 00de 02F10502 		add	r2, r2, #5
 1046 00e2 1370     		strb	r3, [r2]
 1047 00e4 02F0E3BF 		b	.L65
 1048              	.L267:
 386:..\src/command_processing.c ****         
 387:..\src/command_processing.c ****         // Assign m_addr memory address
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 42


 388:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1049              		.loc 1 388 0
 1050 00e8 07F5AF53 		add	r3, r7, #5600
 1051 00ec 03F10503 		add	r3, r3, #5
 1052 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 00f2 9A00     		lsls	r2, r3, #2
 1054 00f4 07F12803 		add	r3, r7, #40
 1055 00f8 1C3B     		subs	r3, r3, #28
 1056 00fa 1B68     		ldr	r3, [r3]
 1057 00fc 1344     		add	r3, r3, r2
 1058 00fe 1B68     		ldr	r3, [r3]
 1059 0100 07F5AE52 		add	r2, r7, #5568
 1060 0104 02F11802 		add	r2, r2, #24
 1061 0108 1360     		str	r3, [r2]
 389:..\src/command_processing.c ****         
 390:..\src/command_processing.c ****         // Add parameter type and size to packet
 391:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1062              		.loc 1 391 0
 1063 010a 07F5AF53 		add	r3, r7, #5600
 1064 010e 03F10503 		add	r3, r3, #5
 1065 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1066 0114 3222     		movs	r2, #50
 1067 0116 02FB03F3 		mul	r3, r2, r3
 1068 011a 9A1C     		adds	r2, r3, #2
 1069 011c 07F5AF53 		add	r3, r7, #5600
 1070 0120 03F10503 		add	r3, r3, #5
 1071 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1072 0126 07F10801 		add	r1, r7, #8
 1073 012a 0968     		ldr	r1, [r1]
 1074 012c 0B44     		add	r3, r3, r1
 1075 012e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1076 0130 07F16803 		add	r3, r7, #104
 1077 0134 103B     		subs	r3, r3, #16
 1078 0136 9954     		strb	r1, [r3, r2]
 392:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1079              		.loc 1 392 0
 1080 0138 07F5AF53 		add	r3, r7, #5600
 1081 013c 03F10503 		add	r3, r3, #5
 1082 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1083 0142 3222     		movs	r2, #50
 1084 0144 02FB03F3 		mul	r3, r2, r3
 1085 0148 DA1C     		adds	r2, r3, #3
 1086 014a 07F5AF53 		add	r3, r7, #5600
 1087 014e 03F10503 		add	r3, r3, #5
 1088 0152 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1089 0154 07F10803 		add	r3, r7, #8
 1090 0158 043B     		subs	r3, r3, #4
 1091 015a 1B68     		ldr	r3, [r3]
 1092 015c 0B44     		add	r3, r3, r1
 1093 015e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1094 0160 07F16803 		add	r3, r7, #104
 1095 0164 103B     		subs	r3, r3, #16
 1096 0166 9954     		strb	r1, [r3, r2]
 393:..\src/command_processing.c ****         
 394:..\src/command_processing.c ****         // Find size of data
 395:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1097              		.loc 1 395 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 43


 1098 0168 07F5AF53 		add	r3, r7, #5600
 1099 016c 03F10503 		add	r3, r3, #5
 1100 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1101 0172 07F10802 		add	r2, r7, #8
 1102 0176 1268     		ldr	r2, [r2]
 1103 0178 1344     		add	r3, r3, r2
 1104 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1105 017c 092B     		cmp	r3, #9
 1106 017e 2CD8     		bhi	.L66
 1107 0180 01A2     		adr	r2, .L68
 1108 0182 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1109 0186 00BF     		.p2align 2
 1110              	.L68:
 1111 0188 B1010000 		.word	.L67+1
 1112 018c B1010000 		.word	.L67+1
 1113 0190 B1010000 		.word	.L67+1
 1114 0194 BF010000 		.word	.L69+1
 1115 0198 BF010000 		.word	.L69+1
 1116 019c CD010000 		.word	.L70+1
 1117 01a0 CD010000 		.word	.L70+1
 1118 01a4 CD010000 		.word	.L70+1
 1119 01a8 DB010000 		.word	.L66+1
 1120 01ac B1010000 		.word	.L67+1
 1121              		.p2align 1
 1122              	.L67:
 396:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 397:..\src/command_processing.c ****                 sod = 1; break;
 1123              		.loc 1 397 0
 1124 01b0 0123     		movs	r3, #1
 1125 01b2 07F5AF52 		add	r2, r7, #5600
 1126 01b6 02F10302 		add	r2, r2, #3
 1127 01ba 1370     		strb	r3, [r2]
 1128 01bc 0DE0     		b	.L66
 1129              	.L69:
 398:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 399:..\src/command_processing.c ****                 sod = 2; break;
 1130              		.loc 1 399 0
 1131 01be 0223     		movs	r3, #2
 1132 01c0 07F5AF52 		add	r2, r7, #5600
 1133 01c4 02F10302 		add	r2, r2, #3
 1134 01c8 1370     		strb	r3, [r2]
 1135 01ca 06E0     		b	.L66
 1136              	.L70:
 400:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 401:..\src/command_processing.c ****                 sod = 4; break;
 1137              		.loc 1 401 0
 1138 01cc 0423     		movs	r3, #4
 1139 01ce 07F5AF52 		add	r2, r7, #5600
 1140 01d2 02F10302 		add	r2, r2, #3
 1141 01d6 1370     		strb	r3, [r2]
 1142 01d8 00BF     		nop
 1143              	.L66:
 402:..\src/command_processing.c ****         }
 403:..\src/command_processing.c ****             
 404:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1144              		.loc 1 404 0
 1145 01da 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 44


 1146 01de 03F10503 		add	r3, r3, #5
 1147 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1148 01e4 07F5B052 		add	r2, r7, #5632
 1149 01e8 02F10802 		add	r2, r2, #8
 1150 01ec 1268     		ldr	r2, [r2]
 1151 01ee 1344     		add	r3, r3, r2
 1152 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1153 01f2 002B     		cmp	r3, #0
 1154 01f4 40F0DA83 		bne	.L71
 405:..\src/command_processing.c ****             
 406:..\src/command_processing.c ****             // Add parameter data to packet
 407:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1155              		.loc 1 407 0
 1156 01f8 07F5AF53 		add	r3, r7, #5600
 1157 01fc 03F10503 		add	r3, r3, #5
 1158 0200 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1159 0202 07F10802 		add	r2, r7, #8
 1160 0206 1268     		ldr	r2, [r2]
 1161 0208 1344     		add	r3, r3, r2
 1162 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1163 020c 092B     		cmp	r3, #9
 1164 020e 02F23481 		bhi	.L105
 1165 0212 01A2     		adr	r2, .L74
 1166 0214 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1167              		.p2align 2
 1168              	.L74:
 1169 0218 41020000 		.word	.L73+1
 1170 021c FD020000 		.word	.L75+1
 1171 0220 41020000 		.word	.L73+1
 1172 0224 B9030000 		.word	.L76+1
 1173 0228 EB040000 		.word	.L77+1
 1174 022c 1B060000 		.word	.L78+1
 1175 0230 4B070000 		.word	.L79+1
 1176 0234 7B080000 		.word	.L80+1
 1177 0238 7B240000 		.word	.L105+1
 1178 023c 41020000 		.word	.L73+1
 1179              		.p2align 1
 1180              	.L73:
 408:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1181              		.loc 1 409 0
 1182 0240 0023     		movs	r3, #0
 1183 0242 07F5AF52 		add	r2, r7, #5600
 1184 0246 02F10702 		add	r2, r2, #7
 1185 024a 1370     		strb	r3, [r2]
 1186 024c 42E0     		b	.L81
 1187              	.L82:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1188              		.loc 1 410 0 discriminator 3
 1189 024e 07F5AF53 		add	r3, r7, #5600
 1190 0252 03F10703 		add	r3, r3, #7
 1191 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1192 0258 07F5AF52 		add	r2, r7, #5600
 1193 025c 02F10302 		add	r2, r2, #3
 1194 0260 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1195 0262 02FB03F3 		mul	r3, r2, r3
 1196 0266 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 45


 1197 0268 07F5AE53 		add	r3, r7, #5568
 1198 026c 03F11803 		add	r3, r3, #24
 1199 0270 1B68     		ldr	r3, [r3]
 1200 0272 1344     		add	r3, r3, r2
 1201 0274 07F5AE52 		add	r2, r7, #5568
 1202 0278 02F11402 		add	r2, r2, #20
 1203 027c 1360     		str	r3, [r2]
 411:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1204              		.loc 1 411 0 discriminator 3
 1205 027e 07F5AF53 		add	r3, r7, #5600
 1206 0282 03F10503 		add	r3, r3, #5
 1207 0286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1208 0288 3222     		movs	r2, #50
 1209 028a 02FB03F3 		mul	r3, r2, r3
 1210 028e 1A1D     		adds	r2, r3, #4
 1211 0290 07F5AF53 		add	r3, r7, #5600
 1212 0294 03F10703 		add	r3, r3, #7
 1213 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1214 029a 07F5AF51 		add	r1, r7, #5600
 1215 029e 01F10301 		add	r1, r1, #3
 1216 02a2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1217 02a4 01FB03F3 		mul	r3, r1, r3
 1218 02a8 1A44     		add	r2, r2, r3
 1219 02aa 07F5AE53 		add	r3, r7, #5568
 1220 02ae 03F11403 		add	r3, r3, #20
 1221 02b2 1B68     		ldr	r3, [r3]
 1222 02b4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1223 02b6 07F16803 		add	r3, r7, #104
 1224 02ba 103B     		subs	r3, r3, #16
 1225 02bc 9954     		strb	r1, [r3, r2]
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1226              		.loc 1 409 0 discriminator 3
 1227 02be 07F5AF53 		add	r3, r7, #5600
 1228 02c2 03F10703 		add	r3, r3, #7
 1229 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 02c8 0133     		adds	r3, r3, #1
 1231 02ca 07F5AF52 		add	r2, r7, #5600
 1232 02ce 02F10702 		add	r2, r2, #7
 1233 02d2 1370     		strb	r3, [r2]
 1234              	.L81:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1235              		.loc 1 409 0 is_stmt 0 discriminator 1
 1236 02d4 07F5AF53 		add	r3, r7, #5600
 1237 02d8 03F10503 		add	r3, r3, #5
 1238 02dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1239 02de 07F10803 		add	r3, r7, #8
 1240 02e2 043B     		subs	r3, r3, #4
 1241 02e4 1B68     		ldr	r3, [r3]
 1242 02e6 1344     		add	r3, r3, r2
 1243 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1244 02ea 07F5AF52 		add	r2, r7, #5600
 1245 02ee 02F10702 		add	r2, r2, #7
 1246 02f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1247 02f4 9A42     		cmp	r2, r3
 1248 02f6 AAD3     		bcc	.L82
 412:..\src/command_processing.c ****                     }
 413:..\src/command_processing.c ****                     break;                
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 46


 1249              		.loc 1 413 0 is_stmt 1
 1250 02f8 02F0BFB8 		b	.L105
 1251              	.L75:
 414:..\src/command_processing.c ****                 case TYPE_INT8:
 415:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1252              		.loc 1 415 0
 1253 02fc 0023     		movs	r3, #0
 1254 02fe 07F5AF52 		add	r2, r7, #5600
 1255 0302 02F10702 		add	r2, r2, #7
 1256 0306 1370     		strb	r3, [r2]
 1257 0308 42E0     		b	.L83
 1258              	.L84:
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1259              		.loc 1 416 0 discriminator 3
 1260 030a 07F5AF53 		add	r3, r7, #5600
 1261 030e 03F10703 		add	r3, r3, #7
 1262 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1263 0314 07F5AF52 		add	r2, r7, #5600
 1264 0318 02F10302 		add	r2, r2, #3
 1265 031c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1266 031e 02FB03F3 		mul	r3, r2, r3
 1267 0322 1A46     		mov	r2, r3
 1268 0324 07F5AE53 		add	r3, r7, #5568
 1269 0328 03F11803 		add	r3, r3, #24
 1270 032c 1B68     		ldr	r3, [r3]
 1271 032e 1344     		add	r3, r3, r2
 1272 0330 07F5AE52 		add	r2, r7, #5568
 1273 0334 02F11402 		add	r2, r2, #20
 1274 0338 1360     		str	r3, [r2]
 417:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1275              		.loc 1 417 0 discriminator 3
 1276 033a 07F5AF53 		add	r3, r7, #5600
 1277 033e 03F10503 		add	r3, r3, #5
 1278 0342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1279 0344 3222     		movs	r2, #50
 1280 0346 02FB03F3 		mul	r3, r2, r3
 1281 034a 1A1D     		adds	r2, r3, #4
 1282 034c 07F5AF53 		add	r3, r7, #5600
 1283 0350 03F10703 		add	r3, r3, #7
 1284 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1285 0356 07F5AF51 		add	r1, r7, #5600
 1286 035a 01F10301 		add	r1, r1, #3
 1287 035e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1288 0360 01FB03F3 		mul	r3, r1, r3
 1289 0364 1A44     		add	r2, r2, r3
 1290 0366 07F5AE53 		add	r3, r7, #5568
 1291 036a 03F11403 		add	r3, r3, #20
 1292 036e 1B68     		ldr	r3, [r3]
 1293 0370 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1294 0372 07F16803 		add	r3, r7, #104
 1295 0376 103B     		subs	r3, r3, #16
 1296 0378 9954     		strb	r1, [r3, r2]
 415:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1297              		.loc 1 415 0 discriminator 3
 1298 037a 07F5AF53 		add	r3, r7, #5600
 1299 037e 03F10703 		add	r3, r3, #7
 1300 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 47


 1301 0384 0133     		adds	r3, r3, #1
 1302 0386 07F5AF52 		add	r2, r7, #5600
 1303 038a 02F10702 		add	r2, r2, #7
 1304 038e 1370     		strb	r3, [r2]
 1305              	.L83:
 415:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1306              		.loc 1 415 0 is_stmt 0 discriminator 1
 1307 0390 07F5AF53 		add	r3, r7, #5600
 1308 0394 03F10503 		add	r3, r3, #5
 1309 0398 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1310 039a 07F10803 		add	r3, r7, #8
 1311 039e 043B     		subs	r3, r3, #4
 1312 03a0 1B68     		ldr	r3, [r3]
 1313 03a2 1344     		add	r3, r3, r2
 1314 03a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1315 03a6 07F5AF52 		add	r2, r7, #5600
 1316 03aa 02F10702 		add	r2, r2, #7
 1317 03ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1318 03b0 9A42     		cmp	r2, r3
 1319 03b2 AAD3     		bcc	.L84
 418:..\src/command_processing.c ****                     }
 419:..\src/command_processing.c ****                     break;
 1320              		.loc 1 419 0 is_stmt 1
 1321 03b4 02F061B8 		b	.L105
 1322              	.L76:
 420:..\src/command_processing.c ****                 case TYPE_INT16:
 421:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1323              		.loc 1 421 0
 1324 03b8 0023     		movs	r3, #0
 1325 03ba 07F5AF52 		add	r2, r7, #5600
 1326 03be 02F10702 		add	r2, r2, #7
 1327 03c2 1370     		strb	r3, [r2]
 1328 03c4 7CE0     		b	.L85
 1329              	.L88:
 422:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1330              		.loc 1 422 0
 1331 03c6 07F5AF53 		add	r3, r7, #5600
 1332 03ca 03F10703 		add	r3, r3, #7
 1333 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1334 03d0 07F5AF52 		add	r2, r7, #5600
 1335 03d4 02F10302 		add	r2, r2, #3
 1336 03d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1337 03da 02FB03F3 		mul	r3, r2, r3
 1338 03de 1A46     		mov	r2, r3
 1339 03e0 07F5AE53 		add	r3, r7, #5568
 1340 03e4 03F11803 		add	r3, r3, #24
 1341 03e8 1B68     		ldr	r3, [r3]
 1342 03ea 1344     		add	r3, r3, r2
 1343 03ec 07F5AE52 		add	r2, r7, #5568
 1344 03f0 02F11402 		add	r2, r2, #20
 1345 03f4 1360     		str	r3, [r2]
 423:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1346              		.loc 1 423 0
 1347 03f6 07F5AE53 		add	r3, r7, #5568
 1348 03fa 03F11403 		add	r3, r3, #20
 1349 03fe 1B68     		ldr	r3, [r3]
 1350 0400 B3F90020 		ldrsh	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 48


 1351 0404 07F12803 		add	r3, r7, #40
 1352 0408 0A3B     		subs	r3, r3, #10
 1353 040a 1A80     		strh	r2, [r3]	@ movhi
 424:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1354              		.loc 1 424 0
 1355 040c 0023     		movs	r3, #0
 1356 040e 07F5AF52 		add	r2, r7, #5600
 1357 0412 02F10602 		add	r2, r2, #6
 1358 0416 1370     		strb	r3, [r2]
 1359 0418 3BE0     		b	.L86
 1360              	.L87:
 425:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1361              		.loc 1 425 0 discriminator 3
 1362 041a 07F5AF53 		add	r3, r7, #5600
 1363 041e 03F10503 		add	r3, r3, #5
 1364 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1365 0424 3222     		movs	r2, #50
 1366 0426 02FB03F3 		mul	r3, r2, r3
 1367 042a 1A1D     		adds	r2, r3, #4
 1368 042c 07F5AF53 		add	r3, r7, #5600
 1369 0430 03F10703 		add	r3, r3, #7
 1370 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1371 0436 07F5AF51 		add	r1, r7, #5600
 1372 043a 01F10301 		add	r1, r1, #3
 1373 043e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1374 0440 01FB03F3 		mul	r3, r1, r3
 1375 0444 1A44     		add	r2, r2, r3
 1376 0446 07F5AF53 		add	r3, r7, #5600
 1377 044a 03F10303 		add	r3, r3, #3
 1378 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1379 0450 1A44     		add	r2, r2, r3
 1380 0452 07F5AF53 		add	r3, r7, #5600
 1381 0456 03F10603 		add	r3, r3, #6
 1382 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1383 045c D31A     		subs	r3, r2, r3
 1384 045e 5A1E     		subs	r2, r3, #1
 1385 0460 07F5AF53 		add	r3, r7, #5600
 1386 0464 03F10603 		add	r3, r3, #6
 1387 0468 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1388 046a 07F12803 		add	r3, r7, #40
 1389 046e 0A3B     		subs	r3, r3, #10
 1390 0470 0B44     		add	r3, r3, r1
 1391 0472 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1392 0474 07F16803 		add	r3, r7, #104
 1393 0478 103B     		subs	r3, r3, #16
 1394 047a 9954     		strb	r1, [r3, r2]
 424:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1395              		.loc 1 424 0 discriminator 3
 1396 047c 07F5AF53 		add	r3, r7, #5600
 1397 0480 03F10603 		add	r3, r3, #6
 1398 0484 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1399 0486 0133     		adds	r3, r3, #1
 1400 0488 07F5AF52 		add	r2, r7, #5600
 1401 048c 02F10602 		add	r2, r2, #6
 1402 0490 1370     		strb	r3, [r2]
 1403              	.L86:
 424:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 49


 1404              		.loc 1 424 0 is_stmt 0 discriminator 1
 1405 0492 07F5AF53 		add	r3, r7, #5600
 1406 0496 03F10603 		add	r3, r3, #6
 1407 049a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1408 049c 07F5AF53 		add	r3, r7, #5600
 1409 04a0 03F10303 		add	r3, r3, #3
 1410 04a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1411 04a6 9A42     		cmp	r2, r3
 1412 04a8 B7D3     		bcc	.L87
 421:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1413              		.loc 1 421 0 is_stmt 1 discriminator 2
 1414 04aa 07F5AF53 		add	r3, r7, #5600
 1415 04ae 03F10703 		add	r3, r3, #7
 1416 04b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1417 04b4 0133     		adds	r3, r3, #1
 1418 04b6 07F5AF52 		add	r2, r7, #5600
 1419 04ba 02F10702 		add	r2, r2, #7
 1420 04be 1370     		strb	r3, [r2]
 1421              	.L85:
 421:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1422              		.loc 1 421 0 is_stmt 0 discriminator 1
 1423 04c0 07F5AF53 		add	r3, r7, #5600
 1424 04c4 03F10503 		add	r3, r3, #5
 1425 04c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1426 04ca 07F10803 		add	r3, r7, #8
 1427 04ce 043B     		subs	r3, r3, #4
 1428 04d0 1B68     		ldr	r3, [r3]
 1429 04d2 1344     		add	r3, r3, r2
 1430 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1431 04d6 07F5AF52 		add	r2, r7, #5600
 1432 04da 02F10702 		add	r2, r2, #7
 1433 04de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1434 04e0 9A42     		cmp	r2, r3
 1435 04e2 FFF470AF 		bcc	.L88
 426:..\src/command_processing.c ****                         }
 427:..\src/command_processing.c ****                     }
 428:..\src/command_processing.c ****                     break;
 1436              		.loc 1 428 0 is_stmt 1
 1437 04e6 01F0C8BF 		b	.L105
 1438              	.L77:
 429:..\src/command_processing.c ****                 case TYPE_UINT16:
 430:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1439              		.loc 1 430 0
 1440 04ea 0023     		movs	r3, #0
 1441 04ec 07F5AF52 		add	r2, r7, #5600
 1442 04f0 02F10702 		add	r2, r2, #7
 1443 04f4 1370     		strb	r3, [r2]
 1444 04f6 7BE0     		b	.L89
 1445              	.L92:
 431:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1446              		.loc 1 431 0
 1447 04f8 07F5AF53 		add	r3, r7, #5600
 1448 04fc 03F10703 		add	r3, r3, #7
 1449 0500 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1450 0502 07F5AF52 		add	r2, r7, #5600
 1451 0506 02F10302 		add	r2, r2, #3
 1452 050a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 50


 1453 050c 02FB03F3 		mul	r3, r2, r3
 1454 0510 1A46     		mov	r2, r3
 1455 0512 07F5AE53 		add	r3, r7, #5568
 1456 0516 03F11803 		add	r3, r3, #24
 1457 051a 1B68     		ldr	r3, [r3]
 1458 051c 1344     		add	r3, r3, r2
 1459 051e 07F5AE52 		add	r2, r7, #5568
 1460 0522 02F11402 		add	r2, r2, #20
 1461 0526 1360     		str	r3, [r2]
 432:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1462              		.loc 1 432 0
 1463 0528 07F5AE53 		add	r3, r7, #5568
 1464 052c 03F11403 		add	r3, r3, #20
 1465 0530 1B68     		ldr	r3, [r3]
 1466 0532 1A88     		ldrh	r2, [r3]
 1467 0534 07F12803 		add	r3, r7, #40
 1468 0538 0C3B     		subs	r3, r3, #12
 1469 053a 1A80     		strh	r2, [r3]	@ movhi
 433:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1470              		.loc 1 433 0
 1471 053c 0023     		movs	r3, #0
 1472 053e 07F5AF52 		add	r2, r7, #5600
 1473 0542 02F10602 		add	r2, r2, #6
 1474 0546 1370     		strb	r3, [r2]
 1475 0548 3BE0     		b	.L90
 1476              	.L91:
 434:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1477              		.loc 1 434 0 discriminator 3
 1478 054a 07F5AF53 		add	r3, r7, #5600
 1479 054e 03F10503 		add	r3, r3, #5
 1480 0552 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1481 0554 3222     		movs	r2, #50
 1482 0556 02FB03F3 		mul	r3, r2, r3
 1483 055a 1A1D     		adds	r2, r3, #4
 1484 055c 07F5AF53 		add	r3, r7, #5600
 1485 0560 03F10703 		add	r3, r3, #7
 1486 0564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1487 0566 07F5AF51 		add	r1, r7, #5600
 1488 056a 01F10301 		add	r1, r1, #3
 1489 056e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1490 0570 01FB03F3 		mul	r3, r1, r3
 1491 0574 1A44     		add	r2, r2, r3
 1492 0576 07F5AF53 		add	r3, r7, #5600
 1493 057a 03F10303 		add	r3, r3, #3
 1494 057e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1495 0580 1A44     		add	r2, r2, r3
 1496 0582 07F5AF53 		add	r3, r7, #5600
 1497 0586 03F10603 		add	r3, r3, #6
 1498 058a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1499 058c D31A     		subs	r3, r2, r3
 1500 058e 5A1E     		subs	r2, r3, #1
 1501 0590 07F5AF53 		add	r3, r7, #5600
 1502 0594 03F10603 		add	r3, r3, #6
 1503 0598 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1504 059a 07F12803 		add	r3, r7, #40
 1505 059e 0C3B     		subs	r3, r3, #12
 1506 05a0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 51


 1507 05a2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1508 05a4 07F16803 		add	r3, r7, #104
 1509 05a8 103B     		subs	r3, r3, #16
 1510 05aa 9954     		strb	r1, [r3, r2]
 433:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1511              		.loc 1 433 0 discriminator 3
 1512 05ac 07F5AF53 		add	r3, r7, #5600
 1513 05b0 03F10603 		add	r3, r3, #6
 1514 05b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1515 05b6 0133     		adds	r3, r3, #1
 1516 05b8 07F5AF52 		add	r2, r7, #5600
 1517 05bc 02F10602 		add	r2, r2, #6
 1518 05c0 1370     		strb	r3, [r2]
 1519              	.L90:
 433:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1520              		.loc 1 433 0 is_stmt 0 discriminator 1
 1521 05c2 07F5AF53 		add	r3, r7, #5600
 1522 05c6 03F10603 		add	r3, r3, #6
 1523 05ca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1524 05cc 07F5AF53 		add	r3, r7, #5600
 1525 05d0 03F10303 		add	r3, r3, #3
 1526 05d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1527 05d6 9A42     		cmp	r2, r3
 1528 05d8 B7D3     		bcc	.L91
 430:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1529              		.loc 1 430 0 is_stmt 1 discriminator 2
 1530 05da 07F5AF53 		add	r3, r7, #5600
 1531 05de 03F10703 		add	r3, r3, #7
 1532 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1533 05e4 0133     		adds	r3, r3, #1
 1534 05e6 07F5AF52 		add	r2, r7, #5600
 1535 05ea 02F10702 		add	r2, r2, #7
 1536 05ee 1370     		strb	r3, [r2]
 1537              	.L89:
 430:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1538              		.loc 1 430 0 is_stmt 0 discriminator 1
 1539 05f0 07F5AF53 		add	r3, r7, #5600
 1540 05f4 03F10503 		add	r3, r3, #5
 1541 05f8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1542 05fa 07F10803 		add	r3, r7, #8
 1543 05fe 043B     		subs	r3, r3, #4
 1544 0600 1B68     		ldr	r3, [r3]
 1545 0602 1344     		add	r3, r3, r2
 1546 0604 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1547 0606 07F5AF52 		add	r2, r7, #5600
 1548 060a 02F10702 		add	r2, r2, #7
 1549 060e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1550 0610 9A42     		cmp	r2, r3
 1551 0612 FFF471AF 		bcc	.L92
 435:..\src/command_processing.c ****                         }
 436:..\src/command_processing.c ****                     }
 437:..\src/command_processing.c ****                     break;
 1552              		.loc 1 437 0 is_stmt 1
 1553 0616 01F030BF 		b	.L105
 1554              	.L78:
 438:..\src/command_processing.c ****                 case TYPE_INT32: 
 439:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 52


 1555              		.loc 1 439 0
 1556 061a 0023     		movs	r3, #0
 1557 061c 07F5AF52 		add	r2, r7, #5600
 1558 0620 02F10702 		add	r2, r2, #7
 1559 0624 1370     		strb	r3, [r2]
 1560 0626 7BE0     		b	.L93
 1561              	.L96:
 440:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1562              		.loc 1 440 0
 1563 0628 07F5AF53 		add	r3, r7, #5600
 1564 062c 03F10703 		add	r3, r3, #7
 1565 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1566 0632 07F5AF52 		add	r2, r7, #5600
 1567 0636 02F10302 		add	r2, r2, #3
 1568 063a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1569 063c 02FB03F3 		mul	r3, r2, r3
 1570 0640 1A46     		mov	r2, r3
 1571 0642 07F5AE53 		add	r3, r7, #5568
 1572 0646 03F11803 		add	r3, r3, #24
 1573 064a 1B68     		ldr	r3, [r3]
 1574 064c 1344     		add	r3, r3, r2
 1575 064e 07F5AE52 		add	r2, r7, #5568
 1576 0652 02F11402 		add	r2, r2, #20
 1577 0656 1360     		str	r3, [r2]
 441:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1578              		.loc 1 441 0
 1579 0658 07F5AE53 		add	r3, r7, #5568
 1580 065c 03F11403 		add	r3, r3, #20
 1581 0660 1B68     		ldr	r3, [r3]
 1582 0662 1A68     		ldr	r2, [r3]
 1583 0664 07F12803 		add	r3, r7, #40
 1584 0668 103B     		subs	r3, r3, #16
 1585 066a 1A60     		str	r2, [r3]
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1586              		.loc 1 442 0
 1587 066c 0023     		movs	r3, #0
 1588 066e 07F5AF52 		add	r2, r7, #5600
 1589 0672 02F10602 		add	r2, r2, #6
 1590 0676 1370     		strb	r3, [r2]
 1591 0678 3BE0     		b	.L94
 1592              	.L95:
 443:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1593              		.loc 1 443 0 discriminator 3
 1594 067a 07F5AF53 		add	r3, r7, #5600
 1595 067e 03F10503 		add	r3, r3, #5
 1596 0682 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1597 0684 3222     		movs	r2, #50
 1598 0686 02FB03F3 		mul	r3, r2, r3
 1599 068a 1A1D     		adds	r2, r3, #4
 1600 068c 07F5AF53 		add	r3, r7, #5600
 1601 0690 03F10703 		add	r3, r3, #7
 1602 0694 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1603 0696 07F5AF51 		add	r1, r7, #5600
 1604 069a 01F10301 		add	r1, r1, #3
 1605 069e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1606 06a0 01FB03F3 		mul	r3, r1, r3
 1607 06a4 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 53


 1608 06a6 07F5AF53 		add	r3, r7, #5600
 1609 06aa 03F10303 		add	r3, r3, #3
 1610 06ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1611 06b0 1A44     		add	r2, r2, r3
 1612 06b2 07F5AF53 		add	r3, r7, #5600
 1613 06b6 03F10603 		add	r3, r3, #6
 1614 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 06bc D31A     		subs	r3, r2, r3
 1616 06be 5A1E     		subs	r2, r3, #1
 1617 06c0 07F5AF53 		add	r3, r7, #5600
 1618 06c4 03F10603 		add	r3, r3, #6
 1619 06c8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1620 06ca 07F12803 		add	r3, r7, #40
 1621 06ce 103B     		subs	r3, r3, #16
 1622 06d0 0B44     		add	r3, r3, r1
 1623 06d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1624 06d4 07F16803 		add	r3, r7, #104
 1625 06d8 103B     		subs	r3, r3, #16
 1626 06da 9954     		strb	r1, [r3, r2]
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1627              		.loc 1 442 0 discriminator 3
 1628 06dc 07F5AF53 		add	r3, r7, #5600
 1629 06e0 03F10603 		add	r3, r3, #6
 1630 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1631 06e6 0133     		adds	r3, r3, #1
 1632 06e8 07F5AF52 		add	r2, r7, #5600
 1633 06ec 02F10602 		add	r2, r2, #6
 1634 06f0 1370     		strb	r3, [r2]
 1635              	.L94:
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1636              		.loc 1 442 0 is_stmt 0 discriminator 1
 1637 06f2 07F5AF53 		add	r3, r7, #5600
 1638 06f6 03F10603 		add	r3, r3, #6
 1639 06fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1640 06fc 07F5AF53 		add	r3, r7, #5600
 1641 0700 03F10303 		add	r3, r3, #3
 1642 0704 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1643 0706 9A42     		cmp	r2, r3
 1644 0708 B7D3     		bcc	.L95
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1645              		.loc 1 439 0 is_stmt 1 discriminator 2
 1646 070a 07F5AF53 		add	r3, r7, #5600
 1647 070e 03F10703 		add	r3, r3, #7
 1648 0712 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1649 0714 0133     		adds	r3, r3, #1
 1650 0716 07F5AF52 		add	r2, r7, #5600
 1651 071a 02F10702 		add	r2, r2, #7
 1652 071e 1370     		strb	r3, [r2]
 1653              	.L93:
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1654              		.loc 1 439 0 is_stmt 0 discriminator 1
 1655 0720 07F5AF53 		add	r3, r7, #5600
 1656 0724 03F10503 		add	r3, r3, #5
 1657 0728 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1658 072a 07F10803 		add	r3, r7, #8
 1659 072e 043B     		subs	r3, r3, #4
 1660 0730 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 54


 1661 0732 1344     		add	r3, r3, r2
 1662 0734 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1663 0736 07F5AF52 		add	r2, r7, #5600
 1664 073a 02F10702 		add	r2, r2, #7
 1665 073e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1666 0740 9A42     		cmp	r2, r3
 1667 0742 FFF471AF 		bcc	.L96
 444:..\src/command_processing.c ****                         }
 445:..\src/command_processing.c ****                     }
 446:..\src/command_processing.c ****                     break;
 1668              		.loc 1 446 0 is_stmt 1
 1669 0746 01F098BE 		b	.L105
 1670              	.L79:
 447:..\src/command_processing.c ****                 case TYPE_UINT32: 
 448:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1671              		.loc 1 448 0
 1672 074a 0023     		movs	r3, #0
 1673 074c 07F5AF52 		add	r2, r7, #5600
 1674 0750 02F10702 		add	r2, r2, #7
 1675 0754 1370     		strb	r3, [r2]
 1676 0756 7BE0     		b	.L97
 1677              	.L100:
 449:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1678              		.loc 1 449 0
 1679 0758 07F5AF53 		add	r3, r7, #5600
 1680 075c 03F10703 		add	r3, r3, #7
 1681 0760 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1682 0762 07F5AF52 		add	r2, r7, #5600
 1683 0766 02F10302 		add	r2, r2, #3
 1684 076a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1685 076c 02FB03F3 		mul	r3, r2, r3
 1686 0770 1A46     		mov	r2, r3
 1687 0772 07F5AE53 		add	r3, r7, #5568
 1688 0776 03F11803 		add	r3, r3, #24
 1689 077a 1B68     		ldr	r3, [r3]
 1690 077c 1344     		add	r3, r3, r2
 1691 077e 07F5AE52 		add	r2, r7, #5568
 1692 0782 02F11402 		add	r2, r2, #20
 1693 0786 1360     		str	r3, [r2]
 450:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1694              		.loc 1 450 0
 1695 0788 07F5AE53 		add	r3, r7, #5568
 1696 078c 03F11403 		add	r3, r3, #20
 1697 0790 1B68     		ldr	r3, [r3]
 1698 0792 1A68     		ldr	r2, [r3]
 1699 0794 07F12803 		add	r3, r7, #40
 1700 0798 143B     		subs	r3, r3, #20
 1701 079a 1A60     		str	r2, [r3]
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1702              		.loc 1 451 0
 1703 079c 0023     		movs	r3, #0
 1704 079e 07F5AF52 		add	r2, r7, #5600
 1705 07a2 02F10602 		add	r2, r2, #6
 1706 07a6 1370     		strb	r3, [r2]
 1707 07a8 3BE0     		b	.L98
 1708              	.L99:
 452:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 55


 1709              		.loc 1 452 0 discriminator 3
 1710 07aa 07F5AF53 		add	r3, r7, #5600
 1711 07ae 03F10503 		add	r3, r3, #5
 1712 07b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1713 07b4 3222     		movs	r2, #50
 1714 07b6 02FB03F3 		mul	r3, r2, r3
 1715 07ba 1A1D     		adds	r2, r3, #4
 1716 07bc 07F5AF53 		add	r3, r7, #5600
 1717 07c0 03F10703 		add	r3, r3, #7
 1718 07c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1719 07c6 07F5AF51 		add	r1, r7, #5600
 1720 07ca 01F10301 		add	r1, r1, #3
 1721 07ce 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1722 07d0 01FB03F3 		mul	r3, r1, r3
 1723 07d4 1A44     		add	r2, r2, r3
 1724 07d6 07F5AF53 		add	r3, r7, #5600
 1725 07da 03F10303 		add	r3, r3, #3
 1726 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1727 07e0 1A44     		add	r2, r2, r3
 1728 07e2 07F5AF53 		add	r3, r7, #5600
 1729 07e6 03F10603 		add	r3, r3, #6
 1730 07ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1731 07ec D31A     		subs	r3, r2, r3
 1732 07ee 5A1E     		subs	r2, r3, #1
 1733 07f0 07F5AF53 		add	r3, r7, #5600
 1734 07f4 03F10603 		add	r3, r3, #6
 1735 07f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1736 07fa 07F12803 		add	r3, r7, #40
 1737 07fe 143B     		subs	r3, r3, #20
 1738 0800 0B44     		add	r3, r3, r1
 1739 0802 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1740 0804 07F16803 		add	r3, r7, #104
 1741 0808 103B     		subs	r3, r3, #16
 1742 080a 9954     		strb	r1, [r3, r2]
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1743              		.loc 1 451 0 discriminator 3
 1744 080c 07F5AF53 		add	r3, r7, #5600
 1745 0810 03F10603 		add	r3, r3, #6
 1746 0814 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1747 0816 0133     		adds	r3, r3, #1
 1748 0818 07F5AF52 		add	r2, r7, #5600
 1749 081c 02F10602 		add	r2, r2, #6
 1750 0820 1370     		strb	r3, [r2]
 1751              	.L98:
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1752              		.loc 1 451 0 is_stmt 0 discriminator 1
 1753 0822 07F5AF53 		add	r3, r7, #5600
 1754 0826 03F10603 		add	r3, r3, #6
 1755 082a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1756 082c 07F5AF53 		add	r3, r7, #5600
 1757 0830 03F10303 		add	r3, r3, #3
 1758 0834 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1759 0836 9A42     		cmp	r2, r3
 1760 0838 B7D3     		bcc	.L99
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1761              		.loc 1 448 0 is_stmt 1 discriminator 2
 1762 083a 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 56


 1763 083e 03F10703 		add	r3, r3, #7
 1764 0842 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1765 0844 0133     		adds	r3, r3, #1
 1766 0846 07F5AF52 		add	r2, r7, #5600
 1767 084a 02F10702 		add	r2, r2, #7
 1768 084e 1370     		strb	r3, [r2]
 1769              	.L97:
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1770              		.loc 1 448 0 is_stmt 0 discriminator 1
 1771 0850 07F5AF53 		add	r3, r7, #5600
 1772 0854 03F10503 		add	r3, r3, #5
 1773 0858 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1774 085a 07F10803 		add	r3, r7, #8
 1775 085e 043B     		subs	r3, r3, #4
 1776 0860 1B68     		ldr	r3, [r3]
 1777 0862 1344     		add	r3, r3, r2
 1778 0864 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1779 0866 07F5AF52 		add	r2, r7, #5600
 1780 086a 02F10702 		add	r2, r2, #7
 1781 086e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1782 0870 9A42     		cmp	r2, r3
 1783 0872 FFF471AF 		bcc	.L100
 453:..\src/command_processing.c ****                         }
 454:..\src/command_processing.c ****                     }
 455:..\src/command_processing.c ****                     break;
 1784              		.loc 1 455 0 is_stmt 1
 1785 0876 01F000BE 		b	.L105
 1786              	.L80:
 456:..\src/command_processing.c ****                     
 457:..\src/command_processing.c ****                 case TYPE_FLOAT:
 458:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1787              		.loc 1 458 0
 1788 087a 0023     		movs	r3, #0
 1789 087c 07F5AF52 		add	r2, r7, #5600
 1790 0880 02F10702 		add	r2, r2, #7
 1791 0884 1370     		strb	r3, [r2]
 1792 0886 7BE0     		b	.L101
 1793              	.L104:
 459:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1794              		.loc 1 459 0
 1795 0888 07F5AF53 		add	r3, r7, #5600
 1796 088c 03F10703 		add	r3, r3, #7
 1797 0890 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1798 0892 07F5AF52 		add	r2, r7, #5600
 1799 0896 02F10302 		add	r2, r2, #3
 1800 089a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1801 089c 02FB03F3 		mul	r3, r2, r3
 1802 08a0 1A46     		mov	r2, r3
 1803 08a2 07F5AE53 		add	r3, r7, #5568
 1804 08a6 03F11803 		add	r3, r3, #24
 1805 08aa 1B68     		ldr	r3, [r3]
 1806 08ac 1344     		add	r3, r3, r2
 1807 08ae 07F5AE52 		add	r2, r7, #5568
 1808 08b2 02F11402 		add	r2, r2, #20
 1809 08b6 1360     		str	r3, [r2]
 460:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1810              		.loc 1 460 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 57


 1811 08b8 07F5AE53 		add	r3, r7, #5568
 1812 08bc 03F11403 		add	r3, r3, #20
 1813 08c0 1B68     		ldr	r3, [r3]
 1814 08c2 1A68     		ldr	r2, [r3]	@ float
 1815 08c4 07F12803 		add	r3, r7, #40
 1816 08c8 083B     		subs	r3, r3, #8
 1817 08ca 1A60     		str	r2, [r3]	@ float
 461:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1818              		.loc 1 461 0
 1819 08cc 0023     		movs	r3, #0
 1820 08ce 07F5AF52 		add	r2, r7, #5600
 1821 08d2 02F10602 		add	r2, r2, #6
 1822 08d6 1370     		strb	r3, [r2]
 1823 08d8 3BE0     		b	.L102
 1824              	.L103:
 462:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1825              		.loc 1 462 0 discriminator 3
 1826 08da 07F5AF53 		add	r3, r7, #5600
 1827 08de 03F10503 		add	r3, r3, #5
 1828 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1829 08e4 3222     		movs	r2, #50
 1830 08e6 02FB03F3 		mul	r3, r2, r3
 1831 08ea 1A1D     		adds	r2, r3, #4
 1832 08ec 07F5AF53 		add	r3, r7, #5600
 1833 08f0 03F10703 		add	r3, r3, #7
 1834 08f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1835 08f6 07F5AF51 		add	r1, r7, #5600
 1836 08fa 01F10301 		add	r1, r1, #3
 1837 08fe 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1838 0900 01FB03F3 		mul	r3, r1, r3
 1839 0904 1A44     		add	r2, r2, r3
 1840 0906 07F5AF53 		add	r3, r7, #5600
 1841 090a 03F10303 		add	r3, r3, #3
 1842 090e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1843 0910 1A44     		add	r2, r2, r3
 1844 0912 07F5AF53 		add	r3, r7, #5600
 1845 0916 03F10603 		add	r3, r3, #6
 1846 091a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1847 091c D31A     		subs	r3, r2, r3
 1848 091e 5A1E     		subs	r2, r3, #1
 1849 0920 07F5AF53 		add	r3, r7, #5600
 1850 0924 03F10603 		add	r3, r3, #6
 1851 0928 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1852 092a 07F12803 		add	r3, r7, #40
 1853 092e 083B     		subs	r3, r3, #8
 1854 0930 0B44     		add	r3, r3, r1
 1855 0932 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1856 0934 07F16803 		add	r3, r7, #104
 1857 0938 103B     		subs	r3, r3, #16
 1858 093a 9954     		strb	r1, [r3, r2]
 461:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1859              		.loc 1 461 0 discriminator 3
 1860 093c 07F5AF53 		add	r3, r7, #5600
 1861 0940 03F10603 		add	r3, r3, #6
 1862 0944 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1863 0946 0133     		adds	r3, r3, #1
 1864 0948 07F5AF52 		add	r2, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 58


 1865 094c 02F10602 		add	r2, r2, #6
 1866 0950 1370     		strb	r3, [r2]
 1867              	.L102:
 461:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1868              		.loc 1 461 0 is_stmt 0 discriminator 1
 1869 0952 07F5AF53 		add	r3, r7, #5600
 1870 0956 03F10603 		add	r3, r3, #6
 1871 095a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1872 095c 07F5AF53 		add	r3, r7, #5600
 1873 0960 03F10303 		add	r3, r3, #3
 1874 0964 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1875 0966 9A42     		cmp	r2, r3
 1876 0968 B7D3     		bcc	.L103
 458:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1877              		.loc 1 458 0 is_stmt 1 discriminator 2
 1878 096a 07F5AF53 		add	r3, r7, #5600
 1879 096e 03F10703 		add	r3, r3, #7
 1880 0972 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1881 0974 0133     		adds	r3, r3, #1
 1882 0976 07F5AF52 		add	r2, r7, #5600
 1883 097a 02F10702 		add	r2, r2, #7
 1884 097e 1370     		strb	r3, [r2]
 1885              	.L101:
 458:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1886              		.loc 1 458 0 is_stmt 0 discriminator 1
 1887 0980 07F5AF53 		add	r3, r7, #5600
 1888 0984 03F10503 		add	r3, r3, #5
 1889 0988 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1890 098a 07F10803 		add	r3, r7, #8
 1891 098e 043B     		subs	r3, r3, #4
 1892 0990 1B68     		ldr	r3, [r3]
 1893 0992 1344     		add	r3, r3, r2
 1894 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1895 0996 07F5AF52 		add	r2, r7, #5600
 1896 099a 02F10702 		add	r2, r2, #7
 1897 099e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1898 09a0 9A42     		cmp	r2, r3
 1899 09a2 FFF471AF 		bcc	.L104
 463:..\src/command_processing.c ****                         }
 464:..\src/command_processing.c ****                     }
 465:..\src/command_processing.c ****                     break;   
 1900              		.loc 1 465 0 is_stmt 1 discriminator 7
 1901 09a6 00BF     		nop
 1902 09a8 01F067BD 		b	.L105
 1903              	.L71:
 466:..\src/command_processing.c ****             }
 467:..\src/command_processing.c ****         }
 468:..\src/command_processing.c ****         else {
 469:..\src/command_processing.c ****             
 470:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 471:..\src/command_processing.c ****             
 472:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 473:..\src/command_processing.c ****                 switch(idx+1){
 1904              		.loc 1 473 0
 1905 09ac 07F5AF53 		add	r3, r7, #5600
 1906 09b0 03F10503 		add	r3, r3, #5
 1907 09b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 59


 1908 09b6 0133     		adds	r3, r3, #1
 1909 09b8 023B     		subs	r3, r3, #2
 1910 09ba 332B     		cmp	r3, #51
 1911 09bc 01F25C85 		bhi	.L272
 1912 09c0 01A2     		adr	r2, .L108
 1913 09c2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1914 09c6 00BF     		.p2align 2
 1915              	.L108:
 1916 09c8 990A0000 		.word	.L107+1
 1917 09cc 650F0000 		.word	.L109+1
 1918 09d0 79240000 		.word	.L272+1
 1919 09d4 79240000 		.word	.L272+1
 1920 09d8 79240000 		.word	.L272+1
 1921 09dc 79240000 		.word	.L272+1
 1922 09e0 35140000 		.word	.L110+1
 1923 09e4 79240000 		.word	.L272+1
 1924 09e8 79240000 		.word	.L272+1
 1925 09ec 5B150000 		.word	.L111+1
 1926 09f0 79240000 		.word	.L272+1
 1927 09f4 79240000 		.word	.L272+1
 1928 09f8 79240000 		.word	.L272+1
 1929 09fc 79240000 		.word	.L272+1
 1930 0a00 79240000 		.word	.L272+1
 1931 0a04 79240000 		.word	.L272+1
 1932 0a08 79240000 		.word	.L272+1
 1933 0a0c 79240000 		.word	.L272+1
 1934 0a10 79240000 		.word	.L272+1
 1935 0a14 79240000 		.word	.L272+1
 1936 0a18 79240000 		.word	.L272+1
 1937 0a1c 1F170000 		.word	.L112+1
 1938 0a20 79240000 		.word	.L272+1
 1939 0a24 79240000 		.word	.L272+1
 1940 0a28 79240000 		.word	.L272+1
 1941 0a2c 79240000 		.word	.L272+1
 1942 0a30 79240000 		.word	.L272+1
 1943 0a34 79240000 		.word	.L272+1
 1944 0a38 79240000 		.word	.L272+1
 1945 0a3c 79240000 		.word	.L272+1
 1946 0a40 79240000 		.word	.L272+1
 1947 0a44 79240000 		.word	.L272+1
 1948 0a48 79240000 		.word	.L272+1
 1949 0a4c 79240000 		.word	.L272+1
 1950 0a50 79240000 		.word	.L272+1
 1951 0a54 79240000 		.word	.L272+1
 1952 0a58 79240000 		.word	.L272+1
 1953 0a5c 79240000 		.word	.L272+1
 1954 0a60 79240000 		.word	.L272+1
 1955 0a64 79240000 		.word	.L272+1
 1956 0a68 79240000 		.word	.L272+1
 1957 0a6c 79240000 		.word	.L272+1
 1958 0a70 F3170000 		.word	.L113+1
 1959 0a74 BB1C0000 		.word	.L114+1
 1960 0a78 79240000 		.word	.L272+1
 1961 0a7c 79240000 		.word	.L272+1
 1962 0a80 79240000 		.word	.L272+1
 1963 0a84 79240000 		.word	.L272+1
 1964 0a88 89210000 		.word	.L115+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 60


 1965 0a8c 79240000 		.word	.L272+1
 1966 0a90 79240000 		.word	.L272+1
 1967 0a94 AD220000 		.word	.L116+1
 1968              		.p2align 1
 1969              	.L107:
 474:..\src/command_processing.c ****                     case 2:         // Position PID
 475:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1970              		.loc 1 475 0
 1971 0a98 07F5AE53 		add	r3, r7, #5568
 1972 0a9c 03F11F03 		add	r3, r3, #31
 1973 0aa0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1974 0aa2 AC49     		ldr	r1, .L278
 1975 0aa4 1346     		mov	r3, r2
 1976 0aa6 DB00     		lsls	r3, r3, #3
 1977 0aa8 9B1A     		subs	r3, r3, r2
 1978 0aaa 1B01     		lsls	r3, r3, #4
 1979 0aac 0B44     		add	r3, r3, r1
 1980 0aae 03F20F13 		addw	r3, r3, #271
 1981 0ab2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1982 0ab4 032B     		cmp	r3, #3
 1983 0ab6 00F02981 		beq	.L117
 476:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1984              		.loc 1 476 0
 1985 0aba 07F5AE53 		add	r3, r7, #5568
 1986 0abe 03F11F03 		add	r3, r3, #31
 1987 0ac2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1988 0ac4 A349     		ldr	r1, .L278
 1989 0ac6 1346     		mov	r3, r2
 1990 0ac8 DB00     		lsls	r3, r3, #3
 1991 0aca 9B1A     		subs	r3, r3, r2
 1992 0acc 1B01     		lsls	r3, r3, #4
 1993 0ace 0B44     		add	r3, r3, r1
 1994 0ad0 B033     		adds	r3, r3, #176
 1995 0ad2 1B68     		ldr	r3, [r3]
 1996 0ad4 1846     		mov	r0, r3
 1997 0ad6 FFF7FEFF 		bl	__aeabi_i2f
 1998 0ada 0346     		mov	r3, r0
 1999 0adc 4FF08F41 		mov	r1, #1199570944
 2000 0ae0 1846     		mov	r0, r3
 2001 0ae2 FFF7FEFF 		bl	__aeabi_fdiv
 2002 0ae6 0346     		mov	r3, r0
 2003 0ae8 1A46     		mov	r2, r3
 2004 0aea 07F12803 		add	r3, r7, #40
 2005 0aee 083B     		subs	r3, r3, #8
 2006 0af0 1A60     		str	r2, [r3]	@ float
 477:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2007              		.loc 1 477 0
 2008 0af2 0023     		movs	r3, #0
 2009 0af4 07F5AF52 		add	r2, r7, #5600
 2010 0af8 02F10702 		add	r2, r2, #7
 2011 0afc 1370     		strb	r3, [r2]
 2012 0afe 2EE0     		b	.L118
 2013              	.L119:
 478:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2014              		.loc 1 478 0 discriminator 3
 2015 0b00 07F5AF53 		add	r3, r7, #5600
 2016 0b04 03F10503 		add	r3, r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 61


 2017 0b08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2018 0b0a 3222     		movs	r2, #50
 2019 0b0c 02FB03F3 		mul	r3, r2, r3
 2020 0b10 1A1D     		adds	r2, r3, #4
 2021 0b12 07F5AF53 		add	r3, r7, #5600
 2022 0b16 03F10303 		add	r3, r3, #3
 2023 0b1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2024 0b1c 1A44     		add	r2, r2, r3
 2025 0b1e 07F5AF53 		add	r3, r7, #5600
 2026 0b22 03F10703 		add	r3, r3, #7
 2027 0b26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2028 0b28 D31A     		subs	r3, r2, r3
 2029 0b2a 5A1E     		subs	r2, r3, #1
 2030 0b2c 07F5AF53 		add	r3, r7, #5600
 2031 0b30 03F10703 		add	r3, r3, #7
 2032 0b34 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2033 0b36 07F12803 		add	r3, r7, #40
 2034 0b3a 083B     		subs	r3, r3, #8
 2035 0b3c 0B44     		add	r3, r3, r1
 2036 0b3e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2037 0b40 07F16803 		add	r3, r7, #104
 2038 0b44 103B     		subs	r3, r3, #16
 2039 0b46 9954     		strb	r1, [r3, r2]
 477:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2040              		.loc 1 477 0 discriminator 3
 2041 0b48 07F5AF53 		add	r3, r7, #5600
 2042 0b4c 03F10703 		add	r3, r3, #7
 2043 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2044 0b52 0133     		adds	r3, r3, #1
 2045 0b54 07F5AF52 		add	r2, r7, #5600
 2046 0b58 02F10702 		add	r2, r2, #7
 2047 0b5c 1370     		strb	r3, [r2]
 2048              	.L118:
 477:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2049              		.loc 1 477 0 is_stmt 0 discriminator 1
 2050 0b5e 07F5AF53 		add	r3, r7, #5600
 2051 0b62 03F10703 		add	r3, r3, #7
 2052 0b66 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2053 0b68 07F5AF53 		add	r3, r7, #5600
 2054 0b6c 03F10303 		add	r3, r3, #3
 2055 0b70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2056 0b72 9A42     		cmp	r2, r3
 2057 0b74 C4D3     		bcc	.L119
 479:..\src/command_processing.c ****                             }
 480:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2058              		.loc 1 480 0 is_stmt 1
 2059 0b76 07F5AE53 		add	r3, r7, #5568
 2060 0b7a 03F11F03 		add	r3, r3, #31
 2061 0b7e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2062 0b80 7449     		ldr	r1, .L278
 2063 0b82 1346     		mov	r3, r2
 2064 0b84 DB00     		lsls	r3, r3, #3
 2065 0b86 9B1A     		subs	r3, r3, r2
 2066 0b88 1B01     		lsls	r3, r3, #4
 2067 0b8a 0B44     		add	r3, r3, r1
 2068 0b8c B433     		adds	r3, r3, #180
 2069 0b8e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 62


 2070 0b90 1846     		mov	r0, r3
 2071 0b92 FFF7FEFF 		bl	__aeabi_i2f
 2072 0b96 0346     		mov	r3, r0
 2073 0b98 4FF08F41 		mov	r1, #1199570944
 2074 0b9c 1846     		mov	r0, r3
 2075 0b9e FFF7FEFF 		bl	__aeabi_fdiv
 2076 0ba2 0346     		mov	r3, r0
 2077 0ba4 1A46     		mov	r2, r3
 2078 0ba6 07F12803 		add	r3, r7, #40
 2079 0baa 083B     		subs	r3, r3, #8
 2080 0bac 1A60     		str	r2, [r3]	@ float
 481:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2081              		.loc 1 481 0
 2082 0bae 0023     		movs	r3, #0
 2083 0bb0 07F5AF52 		add	r2, r7, #5600
 2084 0bb4 02F10702 		add	r2, r2, #7
 2085 0bb8 1370     		strb	r3, [r2]
 2086 0bba 34E0     		b	.L120
 2087              	.L121:
 482:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2088              		.loc 1 482 0 discriminator 3
 2089 0bbc 07F5AF53 		add	r3, r7, #5600
 2090 0bc0 03F10503 		add	r3, r3, #5
 2091 0bc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2092 0bc6 3222     		movs	r2, #50
 2093 0bc8 02FB03F3 		mul	r3, r2, r3
 2094 0bcc 1A1D     		adds	r2, r3, #4
 2095 0bce 07F5AF53 		add	r3, r7, #5600
 2096 0bd2 03F10303 		add	r3, r3, #3
 2097 0bd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2098 0bd8 1A44     		add	r2, r2, r3
 2099 0bda 07F5AF53 		add	r3, r7, #5600
 2100 0bde 03F10303 		add	r3, r3, #3
 2101 0be2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2102 0be4 1A44     		add	r2, r2, r3
 2103 0be6 07F5AF53 		add	r3, r7, #5600
 2104 0bea 03F10703 		add	r3, r3, #7
 2105 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2106 0bf0 D31A     		subs	r3, r2, r3
 2107 0bf2 5A1E     		subs	r2, r3, #1
 2108 0bf4 07F5AF53 		add	r3, r7, #5600
 2109 0bf8 03F10703 		add	r3, r3, #7
 2110 0bfc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2111 0bfe 07F12803 		add	r3, r7, #40
 2112 0c02 083B     		subs	r3, r3, #8
 2113 0c04 0B44     		add	r3, r3, r1
 2114 0c06 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2115 0c08 07F16803 		add	r3, r7, #104
 2116 0c0c 103B     		subs	r3, r3, #16
 2117 0c0e 9954     		strb	r1, [r3, r2]
 481:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2118              		.loc 1 481 0 discriminator 3
 2119 0c10 07F5AF53 		add	r3, r7, #5600
 2120 0c14 03F10703 		add	r3, r3, #7
 2121 0c18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2122 0c1a 0133     		adds	r3, r3, #1
 2123 0c1c 07F5AF52 		add	r2, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 63


 2124 0c20 02F10702 		add	r2, r2, #7
 2125 0c24 1370     		strb	r3, [r2]
 2126              	.L120:
 481:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2127              		.loc 1 481 0 is_stmt 0 discriminator 1
 2128 0c26 07F5AF53 		add	r3, r7, #5600
 2129 0c2a 03F10703 		add	r3, r3, #7
 2130 0c2e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2131 0c30 07F5AF53 		add	r3, r7, #5600
 2132 0c34 03F10303 		add	r3, r3, #3
 2133 0c38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2134 0c3a 9A42     		cmp	r2, r3
 2135 0c3c BED3     		bcc	.L121
 483:..\src/command_processing.c ****                             }
 484:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2136              		.loc 1 484 0 is_stmt 1
 2137 0c3e 07F5AE53 		add	r3, r7, #5568
 2138 0c42 03F11F03 		add	r3, r3, #31
 2139 0c46 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2140 0c48 4249     		ldr	r1, .L278
 2141 0c4a 1346     		mov	r3, r2
 2142 0c4c DB00     		lsls	r3, r3, #3
 2143 0c4e 9B1A     		subs	r3, r3, r2
 2144 0c50 1B01     		lsls	r3, r3, #4
 2145 0c52 0B44     		add	r3, r3, r1
 2146 0c54 B833     		adds	r3, r3, #184
 2147 0c56 1B68     		ldr	r3, [r3]
 2148 0c58 1846     		mov	r0, r3
 2149 0c5a FFF7FEFF 		bl	__aeabi_i2f
 2150 0c5e 0346     		mov	r3, r0
 2151 0c60 4FF08F41 		mov	r1, #1199570944
 2152 0c64 1846     		mov	r0, r3
 2153 0c66 FFF7FEFF 		bl	__aeabi_fdiv
 2154 0c6a 0346     		mov	r3, r0
 2155 0c6c 1A46     		mov	r2, r3
 2156 0c6e 07F12803 		add	r3, r7, #40
 2157 0c72 083B     		subs	r3, r3, #8
 2158 0c74 1A60     		str	r2, [r3]	@ float
 485:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2159              		.loc 1 485 0
 2160 0c76 0023     		movs	r3, #0
 2161 0c78 07F5AF52 		add	r2, r7, #5600
 2162 0c7c 02F10702 		add	r2, r2, #7
 2163 0c80 1370     		strb	r3, [r2]
 2164 0c82 35E0     		b	.L122
 2165              	.L123:
 486:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2166              		.loc 1 486 0 discriminator 3
 2167 0c84 07F5AF53 		add	r3, r7, #5600
 2168 0c88 03F10503 		add	r3, r3, #5
 2169 0c8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2170 0c8e 3222     		movs	r2, #50
 2171 0c90 02FB03F3 		mul	r3, r2, r3
 2172 0c94 1A1D     		adds	r2, r3, #4
 2173 0c96 07F5AF53 		add	r3, r7, #5600
 2174 0c9a 03F10303 		add	r3, r3, #3
 2175 0c9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 64


 2176 0ca0 5B00     		lsls	r3, r3, #1
 2177 0ca2 1A44     		add	r2, r2, r3
 2178 0ca4 07F5AF53 		add	r3, r7, #5600
 2179 0ca8 03F10303 		add	r3, r3, #3
 2180 0cac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2181 0cae 1A44     		add	r2, r2, r3
 2182 0cb0 07F5AF53 		add	r3, r7, #5600
 2183 0cb4 03F10703 		add	r3, r3, #7
 2184 0cb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2185 0cba D31A     		subs	r3, r2, r3
 2186 0cbc 5A1E     		subs	r2, r3, #1
 2187 0cbe 07F5AF53 		add	r3, r7, #5600
 2188 0cc2 03F10703 		add	r3, r3, #7
 2189 0cc6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2190 0cc8 07F12803 		add	r3, r7, #40
 2191 0ccc 083B     		subs	r3, r3, #8
 2192 0cce 0B44     		add	r3, r3, r1
 2193 0cd0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2194 0cd2 07F16803 		add	r3, r7, #104
 2195 0cd6 103B     		subs	r3, r3, #16
 2196 0cd8 9954     		strb	r1, [r3, r2]
 485:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2197              		.loc 1 485 0 discriminator 3
 2198 0cda 07F5AF53 		add	r3, r7, #5600
 2199 0cde 03F10703 		add	r3, r3, #7
 2200 0ce2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2201 0ce4 0133     		adds	r3, r3, #1
 2202 0ce6 07F5AF52 		add	r2, r7, #5600
 2203 0cea 02F10702 		add	r2, r2, #7
 2204 0cee 1370     		strb	r3, [r2]
 2205              	.L122:
 485:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2206              		.loc 1 485 0 is_stmt 0 discriminator 1
 2207 0cf0 07F5AF53 		add	r3, r7, #5600
 2208 0cf4 03F10703 		add	r3, r3, #7
 2209 0cf8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2210 0cfa 07F5AF53 		add	r3, r7, #5600
 2211 0cfe 03F10303 		add	r3, r3, #3
 2212 0d02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2213 0d04 9A42     		cmp	r2, r3
 2214 0d06 BDD3     		bcc	.L123
 487:..\src/command_processing.c ****                             } 
 488:..\src/command_processing.c ****                         }
 489:..\src/command_processing.c ****                         else {
 490:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 491:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 492:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 493:..\src/command_processing.c ****                             }
 494:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 496:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 497:..\src/command_processing.c ****                             }
 498:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 500:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 501:..\src/command_processing.c ****                             }
 502:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 65


 503:..\src/command_processing.c ****                         break;
 2215              		.loc 1 503 0 is_stmt 1
 2216 0d08 01F0B7BB 		b	.L105
 2217              	.L117:
 490:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2218              		.loc 1 490 0
 2219 0d0c 07F5AE53 		add	r3, r7, #5568
 2220 0d10 03F11F03 		add	r3, r3, #31
 2221 0d14 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2222 0d16 0F49     		ldr	r1, .L278
 2223 0d18 1346     		mov	r3, r2
 2224 0d1a DB00     		lsls	r3, r3, #3
 2225 0d1c 9B1A     		subs	r3, r3, r2
 2226 0d1e 1B01     		lsls	r3, r3, #4
 2227 0d20 0B44     		add	r3, r3, r1
 2228 0d22 C833     		adds	r3, r3, #200
 2229 0d24 1B68     		ldr	r3, [r3]
 2230 0d26 1846     		mov	r0, r3
 2231 0d28 FFF7FEFF 		bl	__aeabi_i2f
 2232 0d2c 0346     		mov	r3, r0
 2233 0d2e 4FF08F41 		mov	r1, #1199570944
 2234 0d32 1846     		mov	r0, r3
 2235 0d34 FFF7FEFF 		bl	__aeabi_fdiv
 2236 0d38 0346     		mov	r3, r0
 2237 0d3a 1A46     		mov	r2, r3
 2238 0d3c 07F12803 		add	r3, r7, #40
 2239 0d40 083B     		subs	r3, r3, #8
 2240 0d42 1A60     		str	r2, [r3]	@ float
 491:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2241              		.loc 1 491 0
 2242 0d44 0023     		movs	r3, #0
 2243 0d46 07F5AF52 		add	r2, r7, #5600
 2244 0d4a 02F10702 		add	r2, r2, #7
 2245 0d4e 1370     		strb	r3, [r2]
 2246 0d50 31E0     		b	.L125
 2247              	.L279:
 2248 0d52 00BF     		.align	2
 2249              	.L278:
 2250 0d54 00000000 		.word	c_mem
 2251              	.L126:
 492:..\src/command_processing.c ****                             }
 2252              		.loc 1 492 0 discriminator 3
 2253 0d58 07F5AF53 		add	r3, r7, #5600
 2254 0d5c 03F10503 		add	r3, r3, #5
 2255 0d60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2256 0d62 3222     		movs	r2, #50
 2257 0d64 02FB03F3 		mul	r3, r2, r3
 2258 0d68 1A1D     		adds	r2, r3, #4
 2259 0d6a 07F5AF53 		add	r3, r7, #5600
 2260 0d6e 03F10303 		add	r3, r3, #3
 2261 0d72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2262 0d74 1A44     		add	r2, r2, r3
 2263 0d76 07F5AF53 		add	r3, r7, #5600
 2264 0d7a 03F10703 		add	r3, r3, #7
 2265 0d7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2266 0d80 D31A     		subs	r3, r2, r3
 2267 0d82 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 66


 2268 0d84 07F5AF53 		add	r3, r7, #5600
 2269 0d88 03F10703 		add	r3, r3, #7
 2270 0d8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2271 0d8e 07F12803 		add	r3, r7, #40
 2272 0d92 083B     		subs	r3, r3, #8
 2273 0d94 0B44     		add	r3, r3, r1
 2274 0d96 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2275 0d98 07F16803 		add	r3, r7, #104
 2276 0d9c 103B     		subs	r3, r3, #16
 2277 0d9e 9954     		strb	r1, [r3, r2]
 491:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2278              		.loc 1 491 0 discriminator 3
 2279 0da0 07F5AF53 		add	r3, r7, #5600
 2280 0da4 03F10703 		add	r3, r3, #7
 2281 0da8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2282 0daa 0133     		adds	r3, r3, #1
 2283 0dac 07F5AF52 		add	r2, r7, #5600
 2284 0db0 02F10702 		add	r2, r2, #7
 2285 0db4 1370     		strb	r3, [r2]
 2286              	.L125:
 491:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2287              		.loc 1 491 0 is_stmt 0 discriminator 1
 2288 0db6 07F5AF53 		add	r3, r7, #5600
 2289 0dba 03F10703 		add	r3, r3, #7
 2290 0dbe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2291 0dc0 07F5AF53 		add	r3, r7, #5600
 2292 0dc4 03F10303 		add	r3, r3, #3
 2293 0dc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2294 0dca 9A42     		cmp	r2, r3
 2295 0dcc C4D3     		bcc	.L126
 494:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2296              		.loc 1 494 0 is_stmt 1
 2297 0dce 07F5AE53 		add	r3, r7, #5568
 2298 0dd2 03F11F03 		add	r3, r3, #31
 2299 0dd6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2300 0dd8 AB49     		ldr	r1, .L280
 2301 0dda 1346     		mov	r3, r2
 2302 0ddc DB00     		lsls	r3, r3, #3
 2303 0dde 9B1A     		subs	r3, r3, r2
 2304 0de0 1B01     		lsls	r3, r3, #4
 2305 0de2 0B44     		add	r3, r3, r1
 2306 0de4 CC33     		adds	r3, r3, #204
 2307 0de6 1B68     		ldr	r3, [r3]
 2308 0de8 1846     		mov	r0, r3
 2309 0dea FFF7FEFF 		bl	__aeabi_i2f
 2310 0dee 0346     		mov	r3, r0
 2311 0df0 4FF08F41 		mov	r1, #1199570944
 2312 0df4 1846     		mov	r0, r3
 2313 0df6 FFF7FEFF 		bl	__aeabi_fdiv
 2314 0dfa 0346     		mov	r3, r0
 2315 0dfc 1A46     		mov	r2, r3
 2316 0dfe 07F12803 		add	r3, r7, #40
 2317 0e02 083B     		subs	r3, r3, #8
 2318 0e04 1A60     		str	r2, [r3]	@ float
 495:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2319              		.loc 1 495 0
 2320 0e06 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 67


 2321 0e08 07F5AF52 		add	r2, r7, #5600
 2322 0e0c 02F10702 		add	r2, r2, #7
 2323 0e10 1370     		strb	r3, [r2]
 2324 0e12 34E0     		b	.L127
 2325              	.L128:
 496:..\src/command_processing.c ****                             }
 2326              		.loc 1 496 0 discriminator 3
 2327 0e14 07F5AF53 		add	r3, r7, #5600
 2328 0e18 03F10503 		add	r3, r3, #5
 2329 0e1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2330 0e1e 3222     		movs	r2, #50
 2331 0e20 02FB03F3 		mul	r3, r2, r3
 2332 0e24 1A1D     		adds	r2, r3, #4
 2333 0e26 07F5AF53 		add	r3, r7, #5600
 2334 0e2a 03F10303 		add	r3, r3, #3
 2335 0e2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2336 0e30 1A44     		add	r2, r2, r3
 2337 0e32 07F5AF53 		add	r3, r7, #5600
 2338 0e36 03F10303 		add	r3, r3, #3
 2339 0e3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2340 0e3c 1A44     		add	r2, r2, r3
 2341 0e3e 07F5AF53 		add	r3, r7, #5600
 2342 0e42 03F10703 		add	r3, r3, #7
 2343 0e46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2344 0e48 D31A     		subs	r3, r2, r3
 2345 0e4a 5A1E     		subs	r2, r3, #1
 2346 0e4c 07F5AF53 		add	r3, r7, #5600
 2347 0e50 03F10703 		add	r3, r3, #7
 2348 0e54 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2349 0e56 07F12803 		add	r3, r7, #40
 2350 0e5a 083B     		subs	r3, r3, #8
 2351 0e5c 0B44     		add	r3, r3, r1
 2352 0e5e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2353 0e60 07F16803 		add	r3, r7, #104
 2354 0e64 103B     		subs	r3, r3, #16
 2355 0e66 9954     		strb	r1, [r3, r2]
 495:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2356              		.loc 1 495 0 discriminator 3
 2357 0e68 07F5AF53 		add	r3, r7, #5600
 2358 0e6c 03F10703 		add	r3, r3, #7
 2359 0e70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2360 0e72 0133     		adds	r3, r3, #1
 2361 0e74 07F5AF52 		add	r2, r7, #5600
 2362 0e78 02F10702 		add	r2, r2, #7
 2363 0e7c 1370     		strb	r3, [r2]
 2364              	.L127:
 495:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2365              		.loc 1 495 0 is_stmt 0 discriminator 1
 2366 0e7e 07F5AF53 		add	r3, r7, #5600
 2367 0e82 03F10703 		add	r3, r3, #7
 2368 0e86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2369 0e88 07F5AF53 		add	r3, r7, #5600
 2370 0e8c 03F10303 		add	r3, r3, #3
 2371 0e90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2372 0e92 9A42     		cmp	r2, r3
 2373 0e94 BED3     		bcc	.L128
 498:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 68


 2374              		.loc 1 498 0 is_stmt 1
 2375 0e96 07F5AE53 		add	r3, r7, #5568
 2376 0e9a 03F11F03 		add	r3, r3, #31
 2377 0e9e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2378 0ea0 7949     		ldr	r1, .L280
 2379 0ea2 1346     		mov	r3, r2
 2380 0ea4 DB00     		lsls	r3, r3, #3
 2381 0ea6 9B1A     		subs	r3, r3, r2
 2382 0ea8 1B01     		lsls	r3, r3, #4
 2383 0eaa 0B44     		add	r3, r3, r1
 2384 0eac D033     		adds	r3, r3, #208
 2385 0eae 1B68     		ldr	r3, [r3]
 2386 0eb0 1846     		mov	r0, r3
 2387 0eb2 FFF7FEFF 		bl	__aeabi_i2f
 2388 0eb6 0346     		mov	r3, r0
 2389 0eb8 4FF08F41 		mov	r1, #1199570944
 2390 0ebc 1846     		mov	r0, r3
 2391 0ebe FFF7FEFF 		bl	__aeabi_fdiv
 2392 0ec2 0346     		mov	r3, r0
 2393 0ec4 1A46     		mov	r2, r3
 2394 0ec6 07F12803 		add	r3, r7, #40
 2395 0eca 083B     		subs	r3, r3, #8
 2396 0ecc 1A60     		str	r2, [r3]	@ float
 499:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2397              		.loc 1 499 0
 2398 0ece 0023     		movs	r3, #0
 2399 0ed0 07F5AF52 		add	r2, r7, #5600
 2400 0ed4 02F10702 		add	r2, r2, #7
 2401 0ed8 1370     		strb	r3, [r2]
 2402 0eda 35E0     		b	.L129
 2403              	.L130:
 500:..\src/command_processing.c ****                             }
 2404              		.loc 1 500 0 discriminator 3
 2405 0edc 07F5AF53 		add	r3, r7, #5600
 2406 0ee0 03F10503 		add	r3, r3, #5
 2407 0ee4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2408 0ee6 3222     		movs	r2, #50
 2409 0ee8 02FB03F3 		mul	r3, r2, r3
 2410 0eec 1A1D     		adds	r2, r3, #4
 2411 0eee 07F5AF53 		add	r3, r7, #5600
 2412 0ef2 03F10303 		add	r3, r3, #3
 2413 0ef6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2414 0ef8 5B00     		lsls	r3, r3, #1
 2415 0efa 1A44     		add	r2, r2, r3
 2416 0efc 07F5AF53 		add	r3, r7, #5600
 2417 0f00 03F10303 		add	r3, r3, #3
 2418 0f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2419 0f06 1A44     		add	r2, r2, r3
 2420 0f08 07F5AF53 		add	r3, r7, #5600
 2421 0f0c 03F10703 		add	r3, r3, #7
 2422 0f10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2423 0f12 D31A     		subs	r3, r2, r3
 2424 0f14 5A1E     		subs	r2, r3, #1
 2425 0f16 07F5AF53 		add	r3, r7, #5600
 2426 0f1a 03F10703 		add	r3, r3, #7
 2427 0f1e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2428 0f20 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 69


 2429 0f24 083B     		subs	r3, r3, #8
 2430 0f26 0B44     		add	r3, r3, r1
 2431 0f28 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2432 0f2a 07F16803 		add	r3, r7, #104
 2433 0f2e 103B     		subs	r3, r3, #16
 2434 0f30 9954     		strb	r1, [r3, r2]
 499:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2435              		.loc 1 499 0 discriminator 3
 2436 0f32 07F5AF53 		add	r3, r7, #5600
 2437 0f36 03F10703 		add	r3, r3, #7
 2438 0f3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2439 0f3c 0133     		adds	r3, r3, #1
 2440 0f3e 07F5AF52 		add	r2, r7, #5600
 2441 0f42 02F10702 		add	r2, r2, #7
 2442 0f46 1370     		strb	r3, [r2]
 2443              	.L129:
 499:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2444              		.loc 1 499 0 is_stmt 0 discriminator 1
 2445 0f48 07F5AF53 		add	r3, r7, #5600
 2446 0f4c 03F10703 		add	r3, r3, #7
 2447 0f50 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2448 0f52 07F5AF53 		add	r3, r7, #5600
 2449 0f56 03F10303 		add	r3, r3, #3
 2450 0f5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2451 0f5c 9A42     		cmp	r2, r3
 2452 0f5e BDD3     		bcc	.L130
 2453              		.loc 1 503 0 is_stmt 1
 2454 0f60 01F08BBA 		b	.L105
 2455              	.L109:
 504:..\src/command_processing.c ****                         
 505:..\src/command_processing.c ****                     case 3:         //Current PID
 506:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2456              		.loc 1 506 0
 2457 0f64 07F5AE53 		add	r3, r7, #5568
 2458 0f68 03F11F03 		add	r3, r3, #31
 2459 0f6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2460 0f6e 4649     		ldr	r1, .L280
 2461 0f70 1346     		mov	r3, r2
 2462 0f72 DB00     		lsls	r3, r3, #3
 2463 0f74 9B1A     		subs	r3, r3, r2
 2464 0f76 1B01     		lsls	r3, r3, #4
 2465 0f78 0B44     		add	r3, r3, r1
 2466 0f7a 03F20F13 		addw	r3, r3, #271
 2467 0f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2468 0f80 032B     		cmp	r3, #3
 2469 0f82 00F02B81 		beq	.L131
 507:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2470              		.loc 1 507 0
 2471 0f86 07F5AE53 		add	r3, r7, #5568
 2472 0f8a 03F11F03 		add	r3, r3, #31
 2473 0f8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2474 0f90 3D49     		ldr	r1, .L280
 2475 0f92 1346     		mov	r3, r2
 2476 0f94 DB00     		lsls	r3, r3, #3
 2477 0f96 9B1A     		subs	r3, r3, r2
 2478 0f98 1B01     		lsls	r3, r3, #4
 2479 0f9a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 70


 2480 0f9c BC33     		adds	r3, r3, #188
 2481 0f9e 1B68     		ldr	r3, [r3]
 2482 0fa0 1846     		mov	r0, r3
 2483 0fa2 FFF7FEFF 		bl	__aeabi_i2f
 2484 0fa6 0346     		mov	r3, r0
 2485 0fa8 4FF08F41 		mov	r1, #1199570944
 2486 0fac 1846     		mov	r0, r3
 2487 0fae FFF7FEFF 		bl	__aeabi_fdiv
 2488 0fb2 0346     		mov	r3, r0
 2489 0fb4 1A46     		mov	r2, r3
 2490 0fb6 07F12803 		add	r3, r7, #40
 2491 0fba 083B     		subs	r3, r3, #8
 2492 0fbc 1A60     		str	r2, [r3]	@ float
 508:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2493              		.loc 1 508 0
 2494 0fbe 0023     		movs	r3, #0
 2495 0fc0 07F5AF52 		add	r2, r7, #5600
 2496 0fc4 02F10702 		add	r2, r2, #7
 2497 0fc8 1370     		strb	r3, [r2]
 2498 0fca 2EE0     		b	.L132
 2499              	.L133:
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2500              		.loc 1 509 0 discriminator 3
 2501 0fcc 07F5AF53 		add	r3, r7, #5600
 2502 0fd0 03F10503 		add	r3, r3, #5
 2503 0fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2504 0fd6 3222     		movs	r2, #50
 2505 0fd8 02FB03F3 		mul	r3, r2, r3
 2506 0fdc 1A1D     		adds	r2, r3, #4
 2507 0fde 07F5AF53 		add	r3, r7, #5600
 2508 0fe2 03F10303 		add	r3, r3, #3
 2509 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2510 0fe8 1A44     		add	r2, r2, r3
 2511 0fea 07F5AF53 		add	r3, r7, #5600
 2512 0fee 03F10703 		add	r3, r3, #7
 2513 0ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2514 0ff4 D31A     		subs	r3, r2, r3
 2515 0ff6 5A1E     		subs	r2, r3, #1
 2516 0ff8 07F5AF53 		add	r3, r7, #5600
 2517 0ffc 03F10703 		add	r3, r3, #7
 2518 1000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2519 1002 07F12803 		add	r3, r7, #40
 2520 1006 083B     		subs	r3, r3, #8
 2521 1008 0B44     		add	r3, r3, r1
 2522 100a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2523 100c 07F16803 		add	r3, r7, #104
 2524 1010 103B     		subs	r3, r3, #16
 2525 1012 9954     		strb	r1, [r3, r2]
 508:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2526              		.loc 1 508 0 discriminator 3
 2527 1014 07F5AF53 		add	r3, r7, #5600
 2528 1018 03F10703 		add	r3, r3, #7
 2529 101c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2530 101e 0133     		adds	r3, r3, #1
 2531 1020 07F5AF52 		add	r2, r7, #5600
 2532 1024 02F10702 		add	r2, r2, #7
 2533 1028 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 71


 2534              	.L132:
 508:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2535              		.loc 1 508 0 is_stmt 0 discriminator 1
 2536 102a 07F5AF53 		add	r3, r7, #5600
 2537 102e 03F10703 		add	r3, r3, #7
 2538 1032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2539 1034 07F5AF53 		add	r3, r7, #5600
 2540 1038 03F10303 		add	r3, r3, #3
 2541 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2542 103e 9A42     		cmp	r2, r3
 2543 1040 C4D3     		bcc	.L133
 510:..\src/command_processing.c ****                             }
 511:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2544              		.loc 1 511 0 is_stmt 1
 2545 1042 07F5AE53 		add	r3, r7, #5568
 2546 1046 03F11F03 		add	r3, r3, #31
 2547 104a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2548 104c 0E49     		ldr	r1, .L280
 2549 104e 1346     		mov	r3, r2
 2550 1050 DB00     		lsls	r3, r3, #3
 2551 1052 9B1A     		subs	r3, r3, r2
 2552 1054 1B01     		lsls	r3, r3, #4
 2553 1056 0B44     		add	r3, r3, r1
 2554 1058 C033     		adds	r3, r3, #192
 2555 105a 1B68     		ldr	r3, [r3]
 2556 105c 1846     		mov	r0, r3
 2557 105e FFF7FEFF 		bl	__aeabi_i2f
 2558 1062 0346     		mov	r3, r0
 2559 1064 4FF08F41 		mov	r1, #1199570944
 2560 1068 1846     		mov	r0, r3
 2561 106a FFF7FEFF 		bl	__aeabi_fdiv
 2562 106e 0346     		mov	r3, r0
 2563 1070 1A46     		mov	r2, r3
 2564 1072 07F12803 		add	r3, r7, #40
 2565 1076 083B     		subs	r3, r3, #8
 2566 1078 1A60     		str	r2, [r3]	@ float
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2567              		.loc 1 512 0
 2568 107a 0023     		movs	r3, #0
 2569 107c 07F5AF52 		add	r2, r7, #5600
 2570 1080 02F10702 		add	r2, r2, #7
 2571 1084 1370     		strb	r3, [r2]
 2572 1086 36E0     		b	.L134
 2573              	.L281:
 2574              		.align	2
 2575              	.L280:
 2576 1088 00000000 		.word	c_mem
 2577              	.L135:
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2578              		.loc 1 513 0 discriminator 3
 2579 108c 07F5AF53 		add	r3, r7, #5600
 2580 1090 03F10503 		add	r3, r3, #5
 2581 1094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2582 1096 3222     		movs	r2, #50
 2583 1098 02FB03F3 		mul	r3, r2, r3
 2584 109c 1A1D     		adds	r2, r3, #4
 2585 109e 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 72


 2586 10a2 03F10303 		add	r3, r3, #3
 2587 10a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2588 10a8 1A44     		add	r2, r2, r3
 2589 10aa 07F5AF53 		add	r3, r7, #5600
 2590 10ae 03F10303 		add	r3, r3, #3
 2591 10b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2592 10b4 1A44     		add	r2, r2, r3
 2593 10b6 07F5AF53 		add	r3, r7, #5600
 2594 10ba 03F10703 		add	r3, r3, #7
 2595 10be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2596 10c0 D31A     		subs	r3, r2, r3
 2597 10c2 5A1E     		subs	r2, r3, #1
 2598 10c4 07F5AF53 		add	r3, r7, #5600
 2599 10c8 03F10703 		add	r3, r3, #7
 2600 10cc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2601 10ce 07F12803 		add	r3, r7, #40
 2602 10d2 083B     		subs	r3, r3, #8
 2603 10d4 0B44     		add	r3, r3, r1
 2604 10d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2605 10d8 07F16803 		add	r3, r7, #104
 2606 10dc 103B     		subs	r3, r3, #16
 2607 10de 9954     		strb	r1, [r3, r2]
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2608              		.loc 1 512 0 discriminator 3
 2609 10e0 07F5AF53 		add	r3, r7, #5600
 2610 10e4 03F10703 		add	r3, r3, #7
 2611 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2612 10ea 0133     		adds	r3, r3, #1
 2613 10ec 07F5AF52 		add	r2, r7, #5600
 2614 10f0 02F10702 		add	r2, r2, #7
 2615 10f4 1370     		strb	r3, [r2]
 2616              	.L134:
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2617              		.loc 1 512 0 is_stmt 0 discriminator 1
 2618 10f6 07F5AF53 		add	r3, r7, #5600
 2619 10fa 03F10703 		add	r3, r3, #7
 2620 10fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2621 1100 07F5AF53 		add	r3, r7, #5600
 2622 1104 03F10303 		add	r3, r3, #3
 2623 1108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2624 110a 9A42     		cmp	r2, r3
 2625 110c BED3     		bcc	.L135
 514:..\src/command_processing.c ****                             }
 515:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2626              		.loc 1 515 0 is_stmt 1
 2627 110e 07F5AE53 		add	r3, r7, #5568
 2628 1112 03F11F03 		add	r3, r3, #31
 2629 1116 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2630 1118 C549     		ldr	r1, .L282
 2631 111a 1346     		mov	r3, r2
 2632 111c DB00     		lsls	r3, r3, #3
 2633 111e 9B1A     		subs	r3, r3, r2
 2634 1120 1B01     		lsls	r3, r3, #4
 2635 1122 0B44     		add	r3, r3, r1
 2636 1124 C433     		adds	r3, r3, #196
 2637 1126 1B68     		ldr	r3, [r3]
 2638 1128 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 73


 2639 112a FFF7FEFF 		bl	__aeabi_i2f
 2640 112e 0346     		mov	r3, r0
 2641 1130 4FF08F41 		mov	r1, #1199570944
 2642 1134 1846     		mov	r0, r3
 2643 1136 FFF7FEFF 		bl	__aeabi_fdiv
 2644 113a 0346     		mov	r3, r0
 2645 113c 1A46     		mov	r2, r3
 2646 113e 07F12803 		add	r3, r7, #40
 2647 1142 083B     		subs	r3, r3, #8
 2648 1144 1A60     		str	r2, [r3]	@ float
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2649              		.loc 1 516 0
 2650 1146 0023     		movs	r3, #0
 2651 1148 07F5AF52 		add	r2, r7, #5600
 2652 114c 02F10702 		add	r2, r2, #7
 2653 1150 1370     		strb	r3, [r2]
 2654 1152 35E0     		b	.L136
 2655              	.L137:
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2656              		.loc 1 517 0 discriminator 3
 2657 1154 07F5AF53 		add	r3, r7, #5600
 2658 1158 03F10503 		add	r3, r3, #5
 2659 115c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2660 115e 3222     		movs	r2, #50
 2661 1160 02FB03F3 		mul	r3, r2, r3
 2662 1164 1A1D     		adds	r2, r3, #4
 2663 1166 07F5AF53 		add	r3, r7, #5600
 2664 116a 03F10303 		add	r3, r3, #3
 2665 116e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2666 1170 5B00     		lsls	r3, r3, #1
 2667 1172 1A44     		add	r2, r2, r3
 2668 1174 07F5AF53 		add	r3, r7, #5600
 2669 1178 03F10303 		add	r3, r3, #3
 2670 117c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2671 117e 1A44     		add	r2, r2, r3
 2672 1180 07F5AF53 		add	r3, r7, #5600
 2673 1184 03F10703 		add	r3, r3, #7
 2674 1188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2675 118a D31A     		subs	r3, r2, r3
 2676 118c 5A1E     		subs	r2, r3, #1
 2677 118e 07F5AF53 		add	r3, r7, #5600
 2678 1192 03F10703 		add	r3, r3, #7
 2679 1196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2680 1198 07F12803 		add	r3, r7, #40
 2681 119c 083B     		subs	r3, r3, #8
 2682 119e 0B44     		add	r3, r3, r1
 2683 11a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2684 11a2 07F16803 		add	r3, r7, #104
 2685 11a6 103B     		subs	r3, r3, #16
 2686 11a8 9954     		strb	r1, [r3, r2]
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2687              		.loc 1 516 0 discriminator 3
 2688 11aa 07F5AF53 		add	r3, r7, #5600
 2689 11ae 03F10703 		add	r3, r3, #7
 2690 11b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2691 11b4 0133     		adds	r3, r3, #1
 2692 11b6 07F5AF52 		add	r2, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 74


 2693 11ba 02F10702 		add	r2, r2, #7
 2694 11be 1370     		strb	r3, [r2]
 2695              	.L136:
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2696              		.loc 1 516 0 is_stmt 0 discriminator 1
 2697 11c0 07F5AF53 		add	r3, r7, #5600
 2698 11c4 03F10703 		add	r3, r3, #7
 2699 11c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2700 11ca 07F5AF53 		add	r3, r7, #5600
 2701 11ce 03F10303 		add	r3, r3, #3
 2702 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2703 11d4 9A42     		cmp	r2, r3
 2704 11d6 BDD3     		bcc	.L137
 518:..\src/command_processing.c ****                             }
 519:..\src/command_processing.c ****                         }
 520:..\src/command_processing.c ****                         else {
 521:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 522:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 523:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 524:..\src/command_processing.c ****                             }
 525:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 527:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 528:..\src/command_processing.c ****                             }
 529:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 531:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 532:..\src/command_processing.c ****                             }
 533:..\src/command_processing.c ****                         }            
 534:..\src/command_processing.c ****                         break;  
 2705              		.loc 1 534 0 is_stmt 1
 2706 11d8 01F04FB9 		b	.L105
 2707              	.L131:
 521:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2708              		.loc 1 521 0
 2709 11dc 07F5AE53 		add	r3, r7, #5568
 2710 11e0 03F11F03 		add	r3, r3, #31
 2711 11e4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2712 11e6 9249     		ldr	r1, .L282
 2713 11e8 1346     		mov	r3, r2
 2714 11ea DB00     		lsls	r3, r3, #3
 2715 11ec 9B1A     		subs	r3, r3, r2
 2716 11ee 1B01     		lsls	r3, r3, #4
 2717 11f0 0B44     		add	r3, r3, r1
 2718 11f2 D433     		adds	r3, r3, #212
 2719 11f4 1B68     		ldr	r3, [r3]
 2720 11f6 1846     		mov	r0, r3
 2721 11f8 FFF7FEFF 		bl	__aeabi_i2f
 2722 11fc 0346     		mov	r3, r0
 2723 11fe 4FF08F41 		mov	r1, #1199570944
 2724 1202 1846     		mov	r0, r3
 2725 1204 FFF7FEFF 		bl	__aeabi_fdiv
 2726 1208 0346     		mov	r3, r0
 2727 120a 1A46     		mov	r2, r3
 2728 120c 07F12803 		add	r3, r7, #40
 2729 1210 083B     		subs	r3, r3, #8
 2730 1212 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 75


 522:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2731              		.loc 1 522 0
 2732 1214 0023     		movs	r3, #0
 2733 1216 07F5AF52 		add	r2, r7, #5600
 2734 121a 02F10702 		add	r2, r2, #7
 2735 121e 1370     		strb	r3, [r2]
 2736 1220 2EE0     		b	.L139
 2737              	.L140:
 523:..\src/command_processing.c ****                             }
 2738              		.loc 1 523 0 discriminator 3
 2739 1222 07F5AF53 		add	r3, r7, #5600
 2740 1226 03F10503 		add	r3, r3, #5
 2741 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2742 122c 3222     		movs	r2, #50
 2743 122e 02FB03F3 		mul	r3, r2, r3
 2744 1232 1A1D     		adds	r2, r3, #4
 2745 1234 07F5AF53 		add	r3, r7, #5600
 2746 1238 03F10303 		add	r3, r3, #3
 2747 123c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2748 123e 1A44     		add	r2, r2, r3
 2749 1240 07F5AF53 		add	r3, r7, #5600
 2750 1244 03F10703 		add	r3, r3, #7
 2751 1248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2752 124a D31A     		subs	r3, r2, r3
 2753 124c 5A1E     		subs	r2, r3, #1
 2754 124e 07F5AF53 		add	r3, r7, #5600
 2755 1252 03F10703 		add	r3, r3, #7
 2756 1256 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2757 1258 07F12803 		add	r3, r7, #40
 2758 125c 083B     		subs	r3, r3, #8
 2759 125e 0B44     		add	r3, r3, r1
 2760 1260 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2761 1262 07F16803 		add	r3, r7, #104
 2762 1266 103B     		subs	r3, r3, #16
 2763 1268 9954     		strb	r1, [r3, r2]
 522:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2764              		.loc 1 522 0 discriminator 3
 2765 126a 07F5AF53 		add	r3, r7, #5600
 2766 126e 03F10703 		add	r3, r3, #7
 2767 1272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2768 1274 0133     		adds	r3, r3, #1
 2769 1276 07F5AF52 		add	r2, r7, #5600
 2770 127a 02F10702 		add	r2, r2, #7
 2771 127e 1370     		strb	r3, [r2]
 2772              	.L139:
 522:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2773              		.loc 1 522 0 is_stmt 0 discriminator 1
 2774 1280 07F5AF53 		add	r3, r7, #5600
 2775 1284 03F10703 		add	r3, r3, #7
 2776 1288 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2777 128a 07F5AF53 		add	r3, r7, #5600
 2778 128e 03F10303 		add	r3, r3, #3
 2779 1292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2780 1294 9A42     		cmp	r2, r3
 2781 1296 C4D3     		bcc	.L140
 525:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2782              		.loc 1 525 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 76


 2783 1298 07F5AE53 		add	r3, r7, #5568
 2784 129c 03F11F03 		add	r3, r3, #31
 2785 12a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2786 12a2 6349     		ldr	r1, .L282
 2787 12a4 1346     		mov	r3, r2
 2788 12a6 DB00     		lsls	r3, r3, #3
 2789 12a8 9B1A     		subs	r3, r3, r2
 2790 12aa 1B01     		lsls	r3, r3, #4
 2791 12ac 0B44     		add	r3, r3, r1
 2792 12ae D833     		adds	r3, r3, #216
 2793 12b0 1B68     		ldr	r3, [r3]
 2794 12b2 1846     		mov	r0, r3
 2795 12b4 FFF7FEFF 		bl	__aeabi_i2f
 2796 12b8 0346     		mov	r3, r0
 2797 12ba 4FF08F41 		mov	r1, #1199570944
 2798 12be 1846     		mov	r0, r3
 2799 12c0 FFF7FEFF 		bl	__aeabi_fdiv
 2800 12c4 0346     		mov	r3, r0
 2801 12c6 1A46     		mov	r2, r3
 2802 12c8 07F12803 		add	r3, r7, #40
 2803 12cc 083B     		subs	r3, r3, #8
 2804 12ce 1A60     		str	r2, [r3]	@ float
 526:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2805              		.loc 1 526 0
 2806 12d0 0023     		movs	r3, #0
 2807 12d2 07F5AF52 		add	r2, r7, #5600
 2808 12d6 02F10702 		add	r2, r2, #7
 2809 12da 1370     		strb	r3, [r2]
 2810 12dc 34E0     		b	.L141
 2811              	.L142:
 527:..\src/command_processing.c ****                             }
 2812              		.loc 1 527 0 discriminator 3
 2813 12de 07F5AF53 		add	r3, r7, #5600
 2814 12e2 03F10503 		add	r3, r3, #5
 2815 12e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2816 12e8 3222     		movs	r2, #50
 2817 12ea 02FB03F3 		mul	r3, r2, r3
 2818 12ee 1A1D     		adds	r2, r3, #4
 2819 12f0 07F5AF53 		add	r3, r7, #5600
 2820 12f4 03F10303 		add	r3, r3, #3
 2821 12f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2822 12fa 1A44     		add	r2, r2, r3
 2823 12fc 07F5AF53 		add	r3, r7, #5600
 2824 1300 03F10303 		add	r3, r3, #3
 2825 1304 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2826 1306 1A44     		add	r2, r2, r3
 2827 1308 07F5AF53 		add	r3, r7, #5600
 2828 130c 03F10703 		add	r3, r3, #7
 2829 1310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2830 1312 D31A     		subs	r3, r2, r3
 2831 1314 5A1E     		subs	r2, r3, #1
 2832 1316 07F5AF53 		add	r3, r7, #5600
 2833 131a 03F10703 		add	r3, r3, #7
 2834 131e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2835 1320 07F12803 		add	r3, r7, #40
 2836 1324 083B     		subs	r3, r3, #8
 2837 1326 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 77


 2838 1328 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2839 132a 07F16803 		add	r3, r7, #104
 2840 132e 103B     		subs	r3, r3, #16
 2841 1330 9954     		strb	r1, [r3, r2]
 526:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2842              		.loc 1 526 0 discriminator 3
 2843 1332 07F5AF53 		add	r3, r7, #5600
 2844 1336 03F10703 		add	r3, r3, #7
 2845 133a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2846 133c 0133     		adds	r3, r3, #1
 2847 133e 07F5AF52 		add	r2, r7, #5600
 2848 1342 02F10702 		add	r2, r2, #7
 2849 1346 1370     		strb	r3, [r2]
 2850              	.L141:
 526:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2851              		.loc 1 526 0 is_stmt 0 discriminator 1
 2852 1348 07F5AF53 		add	r3, r7, #5600
 2853 134c 03F10703 		add	r3, r3, #7
 2854 1350 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2855 1352 07F5AF53 		add	r3, r7, #5600
 2856 1356 03F10303 		add	r3, r3, #3
 2857 135a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2858 135c 9A42     		cmp	r2, r3
 2859 135e BED3     		bcc	.L142
 529:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2860              		.loc 1 529 0 is_stmt 1
 2861 1360 07F5AE53 		add	r3, r7, #5568
 2862 1364 03F11F03 		add	r3, r3, #31
 2863 1368 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2864 136a 3149     		ldr	r1, .L282
 2865 136c 1346     		mov	r3, r2
 2866 136e DB00     		lsls	r3, r3, #3
 2867 1370 9B1A     		subs	r3, r3, r2
 2868 1372 1B01     		lsls	r3, r3, #4
 2869 1374 0B44     		add	r3, r3, r1
 2870 1376 DC33     		adds	r3, r3, #220
 2871 1378 1B68     		ldr	r3, [r3]
 2872 137a 1846     		mov	r0, r3
 2873 137c FFF7FEFF 		bl	__aeabi_i2f
 2874 1380 0346     		mov	r3, r0
 2875 1382 4FF08F41 		mov	r1, #1199570944
 2876 1386 1846     		mov	r0, r3
 2877 1388 FFF7FEFF 		bl	__aeabi_fdiv
 2878 138c 0346     		mov	r3, r0
 2879 138e 1A46     		mov	r2, r3
 2880 1390 07F12803 		add	r3, r7, #40
 2881 1394 083B     		subs	r3, r3, #8
 2882 1396 1A60     		str	r2, [r3]	@ float
 530:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2883              		.loc 1 530 0
 2884 1398 0023     		movs	r3, #0
 2885 139a 07F5AF52 		add	r2, r7, #5600
 2886 139e 02F10702 		add	r2, r2, #7
 2887 13a2 1370     		strb	r3, [r2]
 2888 13a4 35E0     		b	.L143
 2889              	.L144:
 531:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 78


 2890              		.loc 1 531 0 discriminator 3
 2891 13a6 07F5AF53 		add	r3, r7, #5600
 2892 13aa 03F10503 		add	r3, r3, #5
 2893 13ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2894 13b0 3222     		movs	r2, #50
 2895 13b2 02FB03F3 		mul	r3, r2, r3
 2896 13b6 1A1D     		adds	r2, r3, #4
 2897 13b8 07F5AF53 		add	r3, r7, #5600
 2898 13bc 03F10303 		add	r3, r3, #3
 2899 13c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2900 13c2 5B00     		lsls	r3, r3, #1
 2901 13c4 1A44     		add	r2, r2, r3
 2902 13c6 07F5AF53 		add	r3, r7, #5600
 2903 13ca 03F10303 		add	r3, r3, #3
 2904 13ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2905 13d0 1A44     		add	r2, r2, r3
 2906 13d2 07F5AF53 		add	r3, r7, #5600
 2907 13d6 03F10703 		add	r3, r3, #7
 2908 13da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2909 13dc D31A     		subs	r3, r2, r3
 2910 13de 5A1E     		subs	r2, r3, #1
 2911 13e0 07F5AF53 		add	r3, r7, #5600
 2912 13e4 03F10703 		add	r3, r3, #7
 2913 13e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2914 13ea 07F12803 		add	r3, r7, #40
 2915 13ee 083B     		subs	r3, r3, #8
 2916 13f0 0B44     		add	r3, r3, r1
 2917 13f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2918 13f4 07F16803 		add	r3, r7, #104
 2919 13f8 103B     		subs	r3, r3, #16
 2920 13fa 9954     		strb	r1, [r3, r2]
 530:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2921              		.loc 1 530 0 discriminator 3
 2922 13fc 07F5AF53 		add	r3, r7, #5600
 2923 1400 03F10703 		add	r3, r3, #7
 2924 1404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2925 1406 0133     		adds	r3, r3, #1
 2926 1408 07F5AF52 		add	r2, r7, #5600
 2927 140c 02F10702 		add	r2, r2, #7
 2928 1410 1370     		strb	r3, [r2]
 2929              	.L143:
 530:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2930              		.loc 1 530 0 is_stmt 0 discriminator 1
 2931 1412 07F5AF53 		add	r3, r7, #5600
 2932 1416 03F10703 		add	r3, r3, #7
 2933 141a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2934 141c 07F5AF53 		add	r3, r7, #5600
 2935 1420 03F10303 		add	r3, r3, #3
 2936 1424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2937 1426 9A42     		cmp	r2, r3
 2938 1428 BDD3     		bcc	.L144
 2939              		.loc 1 534 0 is_stmt 1
 2940 142a 01F026B8 		b	.L105
 2941              	.L283:
 2942 142e 00BF     		.align	2
 2943              	.L282:
 2944 1430 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 79


 2945              	.L110:
 535:..\src/command_processing.c **** 
 536:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 537:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2946              		.loc 1 537 0
 2947 1434 07F5AE53 		add	r3, r7, #5568
 2948 1438 03F11F03 		add	r3, r3, #31
 2949 143c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2950 143e CC49     		ldr	r1, .L284
 2951 1440 1346     		mov	r3, r2
 2952 1442 DB00     		lsls	r3, r3, #3
 2953 1444 9B1A     		subs	r3, r3, r2
 2954 1446 1B01     		lsls	r3, r3, #4
 2955 1448 0B44     		add	r3, r3, r1
 2956 144a 03F58873 		add	r3, r3, #272
 2957 144e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2958 1450 1846     		mov	r0, r3
 2959 1452 07F5AF53 		add	r3, r7, #5600
 2960 1456 03F10703 		add	r3, r3, #7
 2961 145a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2962 145c C549     		ldr	r1, .L284+4
 2963 145e 0346     		mov	r3, r0
 2964 1460 5B00     		lsls	r3, r3, #1
 2965 1462 0344     		add	r3, r3, r0
 2966 1464 9B00     		lsls	r3, r3, #2
 2967 1466 1344     		add	r3, r3, r2
 2968 1468 6633     		adds	r3, r3, #102
 2969 146a 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2970 146e 07F5AE53 		add	r3, r7, #5568
 2971 1472 03F11F03 		add	r3, r3, #31
 2972 1476 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2973 1478 BD48     		ldr	r0, .L284
 2974 147a 1346     		mov	r3, r2
 2975 147c DB00     		lsls	r3, r3, #3
 2976 147e 9B1A     		subs	r3, r3, r2
 2977 1480 1B01     		lsls	r3, r3, #4
 2978 1482 0344     		add	r3, r3, r0
 2979 1484 03F58873 		add	r3, r3, #272
 2980 1488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2981 148a 1C46     		mov	r4, r3
 2982 148c 07F5AF53 		add	r3, r7, #5600
 2983 1490 03F10703 		add	r3, r3, #7
 2984 1494 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2985 1496 B748     		ldr	r0, .L284+4
 2986 1498 2346     		mov	r3, r4
 2987 149a 5B00     		lsls	r3, r3, #1
 2988 149c 2344     		add	r3, r3, r4
 2989 149e 1B01     		lsls	r3, r3, #4
 2990 14a0 0344     		add	r3, r3, r0
 2991 14a2 1344     		add	r3, r3, r2
 2992 14a4 03F29513 		addw	r3, r3, #405
 2993 14a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2994 14aa 41FA03F3 		asr	r3, r1, r3
 2995 14ae 1AB2     		sxth	r2, r3
 2996 14b0 07F12803 		add	r3, r7, #40
 2997 14b4 0A3B     		subs	r3, r3, #10
 2998 14b6 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 80


 538:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2999              		.loc 1 538 0
 3000 14b8 0023     		movs	r3, #0
 3001 14ba 07F5AF52 		add	r2, r7, #5600
 3002 14be 02F10602 		add	r2, r2, #6
 3003 14c2 1370     		strb	r3, [r2]
 3004 14c4 3BE0     		b	.L145
 3005              	.L146:
 539:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 3006              		.loc 1 539 0 discriminator 3
 3007 14c6 07F5AF53 		add	r3, r7, #5600
 3008 14ca 03F10503 		add	r3, r3, #5
 3009 14ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3010 14d0 3222     		movs	r2, #50
 3011 14d2 02FB03F3 		mul	r3, r2, r3
 3012 14d6 1A1D     		adds	r2, r3, #4
 3013 14d8 07F5AF53 		add	r3, r7, #5600
 3014 14dc 03F10703 		add	r3, r3, #7
 3015 14e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3016 14e2 07F5AF51 		add	r1, r7, #5600
 3017 14e6 01F10301 		add	r1, r1, #3
 3018 14ea 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3019 14ec 01FB03F3 		mul	r3, r1, r3
 3020 14f0 1A44     		add	r2, r2, r3
 3021 14f2 07F5AF53 		add	r3, r7, #5600
 3022 14f6 03F10303 		add	r3, r3, #3
 3023 14fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3024 14fc 1A44     		add	r2, r2, r3
 3025 14fe 07F5AF53 		add	r3, r7, #5600
 3026 1502 03F10603 		add	r3, r3, #6
 3027 1506 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3028 1508 D31A     		subs	r3, r2, r3
 3029 150a 5A1E     		subs	r2, r3, #1
 3030 150c 07F5AF53 		add	r3, r7, #5600
 3031 1510 03F10603 		add	r3, r3, #6
 3032 1514 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3033 1516 07F12803 		add	r3, r7, #40
 3034 151a 0A3B     		subs	r3, r3, #10
 3035 151c 0B44     		add	r3, r3, r1
 3036 151e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3037 1520 07F16803 		add	r3, r7, #104
 3038 1524 103B     		subs	r3, r3, #16
 3039 1526 9954     		strb	r1, [r3, r2]
 538:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3040              		.loc 1 538 0 discriminator 3
 3041 1528 07F5AF53 		add	r3, r7, #5600
 3042 152c 03F10603 		add	r3, r3, #6
 3043 1530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3044 1532 0133     		adds	r3, r3, #1
 3045 1534 07F5AF52 		add	r2, r7, #5600
 3046 1538 02F10602 		add	r2, r2, #6
 3047 153c 1370     		strb	r3, [r2]
 3048              	.L145:
 538:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3049              		.loc 1 538 0 is_stmt 0 discriminator 1
 3050 153e 07F5AF53 		add	r3, r7, #5600
 3051 1542 03F10603 		add	r3, r3, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 81


 3052 1546 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3053 1548 07F5AF53 		add	r3, r7, #5600
 3054 154c 03F10303 		add	r3, r3, #3
 3055 1550 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3056 1552 9A42     		cmp	r2, r3
 3057 1554 B7D3     		bcc	.L146
 540:..\src/command_processing.c ****                         }
 541:..\src/command_processing.c ****                         break;
 3058              		.loc 1 541 0 is_stmt 1
 3059 1556 00F090BF 		b	.L105
 3060              	.L111:
 542:..\src/command_processing.c ****                 
 543:..\src/command_processing.c ****                     case 11:        //Position limits
 544:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3061              		.loc 1 544 0
 3062 155a 07F5AE53 		add	r3, r7, #5568
 3063 155e 03F11F03 		add	r3, r3, #31
 3064 1562 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3065 1564 8349     		ldr	r1, .L284+4
 3066 1566 1346     		mov	r3, r2
 3067 1568 DB00     		lsls	r3, r3, #3
 3068 156a 9B1A     		subs	r3, r3, r2
 3069 156c 1B01     		lsls	r3, r3, #4
 3070 156e 0B44     		add	r3, r3, r1
 3071 1570 E433     		adds	r3, r3, #228
 3072 1572 1968     		ldr	r1, [r3]
 3073 1574 07F5AE53 		add	r3, r7, #5568
 3074 1578 03F11F03 		add	r3, r3, #31
 3075 157c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3076 157e 7C48     		ldr	r0, .L284
 3077 1580 1346     		mov	r3, r2
 3078 1582 DB00     		lsls	r3, r3, #3
 3079 1584 9B1A     		subs	r3, r3, r2
 3080 1586 1B01     		lsls	r3, r3, #4
 3081 1588 0344     		add	r3, r3, r0
 3082 158a 03F58873 		add	r3, r3, #272
 3083 158e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3084 1590 1846     		mov	r0, r3
 3085 1592 784A     		ldr	r2, .L284+4
 3086 1594 0346     		mov	r3, r0
 3087 1596 5B00     		lsls	r3, r3, #1
 3088 1598 0344     		add	r3, r3, r0
 3089 159a 1B01     		lsls	r3, r3, #4
 3090 159c 1344     		add	r3, r3, r2
 3091 159e 03F29513 		addw	r3, r3, #405
 3092 15a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3093 15a4 41FA03F2 		asr	r2, r1, r3
 3094 15a8 07F12803 		add	r3, r7, #40
 3095 15ac 103B     		subs	r3, r3, #16
 3096 15ae 1A60     		str	r2, [r3]
 545:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3097              		.loc 1 545 0
 3098 15b0 0023     		movs	r3, #0
 3099 15b2 07F5AF52 		add	r2, r7, #5600
 3100 15b6 02F10602 		add	r2, r2, #6
 3101 15ba 1370     		strb	r3, [r2]
 3102 15bc 2EE0     		b	.L147
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 82


 3103              	.L148:
 546:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3104              		.loc 1 546 0 discriminator 3
 3105 15be 07F5AF53 		add	r3, r7, #5600
 3106 15c2 03F10503 		add	r3, r3, #5
 3107 15c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3108 15c8 3222     		movs	r2, #50
 3109 15ca 02FB03F3 		mul	r3, r2, r3
 3110 15ce 1A1D     		adds	r2, r3, #4
 3111 15d0 07F5AF53 		add	r3, r7, #5600
 3112 15d4 03F10303 		add	r3, r3, #3
 3113 15d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3114 15da 1A44     		add	r2, r2, r3
 3115 15dc 07F5AF53 		add	r3, r7, #5600
 3116 15e0 03F10603 		add	r3, r3, #6
 3117 15e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3118 15e6 D31A     		subs	r3, r2, r3
 3119 15e8 5A1E     		subs	r2, r3, #1
 3120 15ea 07F5AF53 		add	r3, r7, #5600
 3121 15ee 03F10603 		add	r3, r3, #6
 3122 15f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3123 15f4 07F12803 		add	r3, r7, #40
 3124 15f8 103B     		subs	r3, r3, #16
 3125 15fa 0B44     		add	r3, r3, r1
 3126 15fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3127 15fe 07F16803 		add	r3, r7, #104
 3128 1602 103B     		subs	r3, r3, #16
 3129 1604 9954     		strb	r1, [r3, r2]
 545:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3130              		.loc 1 545 0 discriminator 3
 3131 1606 07F5AF53 		add	r3, r7, #5600
 3132 160a 03F10603 		add	r3, r3, #6
 3133 160e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3134 1610 0133     		adds	r3, r3, #1
 3135 1612 07F5AF52 		add	r2, r7, #5600
 3136 1616 02F10602 		add	r2, r2, #6
 3137 161a 1370     		strb	r3, [r2]
 3138              	.L147:
 545:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3139              		.loc 1 545 0 is_stmt 0 discriminator 1
 3140 161c 07F5AF53 		add	r3, r7, #5600
 3141 1620 03F10603 		add	r3, r3, #6
 3142 1624 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3143 1626 07F5AF53 		add	r3, r7, #5600
 3144 162a 03F10303 		add	r3, r3, #3
 3145 162e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3146 1630 9A42     		cmp	r2, r3
 3147 1632 C4D3     		bcc	.L148
 547:..\src/command_processing.c ****                         }
 548:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3148              		.loc 1 548 0 is_stmt 1
 3149 1634 07F5AE53 		add	r3, r7, #5568
 3150 1638 03F11F03 		add	r3, r3, #31
 3151 163c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3152 163e 4D49     		ldr	r1, .L284+4
 3153 1640 1346     		mov	r3, r2
 3154 1642 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 83


 3155 1644 9B1A     		subs	r3, r3, r2
 3156 1646 1B01     		lsls	r3, r3, #4
 3157 1648 0B44     		add	r3, r3, r1
 3158 164a E833     		adds	r3, r3, #232
 3159 164c 1968     		ldr	r1, [r3]
 3160 164e 07F5AE53 		add	r3, r7, #5568
 3161 1652 03F11F03 		add	r3, r3, #31
 3162 1656 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3163 1658 4548     		ldr	r0, .L284
 3164 165a 1346     		mov	r3, r2
 3165 165c DB00     		lsls	r3, r3, #3
 3166 165e 9B1A     		subs	r3, r3, r2
 3167 1660 1B01     		lsls	r3, r3, #4
 3168 1662 0344     		add	r3, r3, r0
 3169 1664 03F58873 		add	r3, r3, #272
 3170 1668 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3171 166a 1846     		mov	r0, r3
 3172 166c 414A     		ldr	r2, .L284+4
 3173 166e 0346     		mov	r3, r0
 3174 1670 5B00     		lsls	r3, r3, #1
 3175 1672 0344     		add	r3, r3, r0
 3176 1674 1B01     		lsls	r3, r3, #4
 3177 1676 1344     		add	r3, r3, r2
 3178 1678 03F29513 		addw	r3, r3, #405
 3179 167c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3180 167e 41FA03F2 		asr	r2, r1, r3
 3181 1682 07F12803 		add	r3, r7, #40
 3182 1686 103B     		subs	r3, r3, #16
 3183 1688 1A60     		str	r2, [r3]
 549:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3184              		.loc 1 549 0
 3185 168a 0023     		movs	r3, #0
 3186 168c 07F5AF52 		add	r2, r7, #5600
 3187 1690 02F10602 		add	r2, r2, #6
 3188 1694 1370     		strb	r3, [r2]
 3189 1696 34E0     		b	.L149
 3190              	.L150:
 550:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3191              		.loc 1 550 0 discriminator 3
 3192 1698 07F5AF53 		add	r3, r7, #5600
 3193 169c 03F10503 		add	r3, r3, #5
 3194 16a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3195 16a2 3222     		movs	r2, #50
 3196 16a4 02FB03F3 		mul	r3, r2, r3
 3197 16a8 1A1D     		adds	r2, r3, #4
 3198 16aa 07F5AF53 		add	r3, r7, #5600
 3199 16ae 03F10303 		add	r3, r3, #3
 3200 16b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3201 16b4 1A44     		add	r2, r2, r3
 3202 16b6 07F5AF53 		add	r3, r7, #5600
 3203 16ba 03F10303 		add	r3, r3, #3
 3204 16be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3205 16c0 1A44     		add	r2, r2, r3
 3206 16c2 07F5AF53 		add	r3, r7, #5600
 3207 16c6 03F10603 		add	r3, r3, #6
 3208 16ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3209 16cc D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 84


 3210 16ce 5A1E     		subs	r2, r3, #1
 3211 16d0 07F5AF53 		add	r3, r7, #5600
 3212 16d4 03F10603 		add	r3, r3, #6
 3213 16d8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3214 16da 07F12803 		add	r3, r7, #40
 3215 16de 103B     		subs	r3, r3, #16
 3216 16e0 0B44     		add	r3, r3, r1
 3217 16e2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3218 16e4 07F16803 		add	r3, r7, #104
 3219 16e8 103B     		subs	r3, r3, #16
 3220 16ea 9954     		strb	r1, [r3, r2]
 549:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3221              		.loc 1 549 0 discriminator 3
 3222 16ec 07F5AF53 		add	r3, r7, #5600
 3223 16f0 03F10603 		add	r3, r3, #6
 3224 16f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3225 16f6 0133     		adds	r3, r3, #1
 3226 16f8 07F5AF52 		add	r2, r7, #5600
 3227 16fc 02F10602 		add	r2, r2, #6
 3228 1700 1370     		strb	r3, [r2]
 3229              	.L149:
 549:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3230              		.loc 1 549 0 is_stmt 0 discriminator 1
 3231 1702 07F5AF53 		add	r3, r7, #5600
 3232 1706 03F10603 		add	r3, r3, #6
 3233 170a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3234 170c 07F5AF53 		add	r3, r7, #5600
 3235 1710 03F10303 		add	r3, r3, #3
 3236 1714 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3237 1716 9A42     		cmp	r2, r3
 3238 1718 BED3     		bcc	.L150
 551:..\src/command_processing.c ****                         }
 552:..\src/command_processing.c ****                         break;            
 3239              		.loc 1 552 0 is_stmt 1
 3240 171a 00F0AEBE 		b	.L105
 3241              	.L112:
 553:..\src/command_processing.c **** 
 554:..\src/command_processing.c ****                     case 23:        //Rest Position
 555:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3242              		.loc 1 555 0
 3243 171e 154B     		ldr	r3, .L284+4
 3244 1720 D3F8A012 		ldr	r1, [r3, #672]
 3245 1724 07F5AE53 		add	r3, r7, #5568
 3246 1728 03F11F03 		add	r3, r3, #31
 3247 172c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3248 172e 1048     		ldr	r0, .L284
 3249 1730 1346     		mov	r3, r2
 3250 1732 DB00     		lsls	r3, r3, #3
 3251 1734 9B1A     		subs	r3, r3, r2
 3252 1736 1B01     		lsls	r3, r3, #4
 3253 1738 0344     		add	r3, r3, r0
 3254 173a 03F58873 		add	r3, r3, #272
 3255 173e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3256 1740 1846     		mov	r0, r3
 3257 1742 0C4A     		ldr	r2, .L284+4
 3258 1744 0346     		mov	r3, r0
 3259 1746 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 85


 3260 1748 0344     		add	r3, r3, r0
 3261 174a 1B01     		lsls	r3, r3, #4
 3262 174c 1344     		add	r3, r3, r2
 3263 174e 03F29513 		addw	r3, r3, #405
 3264 1752 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3265 1754 41FA03F2 		asr	r2, r1, r3
 3266 1758 07F12803 		add	r3, r7, #40
 3267 175c 103B     		subs	r3, r3, #16
 3268 175e 1A60     		str	r2, [r3]
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3269              		.loc 1 556 0
 3270 1760 0023     		movs	r3, #0
 3271 1762 07F5AF52 		add	r2, r7, #5600
 3272 1766 02F10602 		add	r2, r2, #6
 3273 176a 1370     		strb	r3, [r2]
 3274 176c 33E0     		b	.L151
 3275              	.L285:
 3276 176e 00BF     		.align	2
 3277              	.L284:
 3278 1770 00000000 		.word	g_mem
 3279 1774 00000000 		.word	c_mem
 3280              	.L152:
 557:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3281              		.loc 1 557 0 discriminator 3
 3282 1778 07F5AF53 		add	r3, r7, #5600
 3283 177c 03F10503 		add	r3, r3, #5
 3284 1780 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3285 1782 3222     		movs	r2, #50
 3286 1784 02FB03F3 		mul	r3, r2, r3
 3287 1788 1A1D     		adds	r2, r3, #4
 3288 178a 07F5AF53 		add	r3, r7, #5600
 3289 178e 03F10303 		add	r3, r3, #3
 3290 1792 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3291 1794 1A44     		add	r2, r2, r3
 3292 1796 07F5AF53 		add	r3, r7, #5600
 3293 179a 03F10603 		add	r3, r3, #6
 3294 179e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3295 17a0 D31A     		subs	r3, r2, r3
 3296 17a2 5A1E     		subs	r2, r3, #1
 3297 17a4 07F5AF53 		add	r3, r7, #5600
 3298 17a8 03F10603 		add	r3, r3, #6
 3299 17ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3300 17ae 07F12803 		add	r3, r7, #40
 3301 17b2 103B     		subs	r3, r3, #16
 3302 17b4 0B44     		add	r3, r3, r1
 3303 17b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3304 17b8 07F16803 		add	r3, r7, #104
 3305 17bc 103B     		subs	r3, r3, #16
 3306 17be 9954     		strb	r1, [r3, r2]
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3307              		.loc 1 556 0 discriminator 3
 3308 17c0 07F5AF53 		add	r3, r7, #5600
 3309 17c4 03F10603 		add	r3, r3, #6
 3310 17c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3311 17ca 0133     		adds	r3, r3, #1
 3312 17cc 07F5AF52 		add	r2, r7, #5600
 3313 17d0 02F10602 		add	r2, r2, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 86


 3314 17d4 1370     		strb	r3, [r2]
 3315              	.L151:
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3316              		.loc 1 556 0 is_stmt 0 discriminator 1
 3317 17d6 07F5AF53 		add	r3, r7, #5600
 3318 17da 03F10603 		add	r3, r3, #6
 3319 17de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3320 17e0 07F5AF53 		add	r3, r7, #5600
 3321 17e4 03F10303 		add	r3, r3, #3
 3322 17e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3323 17ea 9A42     		cmp	r2, r3
 3324 17ec C4D3     		bcc	.L152
 558:..\src/command_processing.c ****                         }
 559:..\src/command_processing.c ****                         break; 
 3325              		.loc 1 559 0 is_stmt 1
 3326 17ee 00F044BE 		b	.L105
 3327              	.L113:
 560:..\src/command_processing.c ****                         
 561:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 562:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3328              		.loc 1 562 0
 3329 17f2 07F5AE53 		add	r3, r7, #5568
 3330 17f6 03F11E03 		add	r3, r3, #30
 3331 17fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3332 17fc AB49     		ldr	r1, .L286
 3333 17fe 1346     		mov	r3, r2
 3334 1800 DB00     		lsls	r3, r3, #3
 3335 1802 9B1A     		subs	r3, r3, r2
 3336 1804 1B01     		lsls	r3, r3, #4
 3337 1806 0B44     		add	r3, r3, r1
 3338 1808 03F20F13 		addw	r3, r3, #271
 3339 180c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3340 180e 032B     		cmp	r3, #3
 3341 1810 00F02981 		beq	.L153
 563:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3342              		.loc 1 563 0
 3343 1814 07F5AE53 		add	r3, r7, #5568
 3344 1818 03F11E03 		add	r3, r3, #30
 3345 181c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3346 181e A349     		ldr	r1, .L286
 3347 1820 1346     		mov	r3, r2
 3348 1822 DB00     		lsls	r3, r3, #3
 3349 1824 9B1A     		subs	r3, r3, r2
 3350 1826 1B01     		lsls	r3, r3, #4
 3351 1828 0B44     		add	r3, r3, r1
 3352 182a B033     		adds	r3, r3, #176
 3353 182c 1B68     		ldr	r3, [r3]
 3354 182e 1846     		mov	r0, r3
 3355 1830 FFF7FEFF 		bl	__aeabi_i2f
 3356 1834 0346     		mov	r3, r0
 3357 1836 4FF08F41 		mov	r1, #1199570944
 3358 183a 1846     		mov	r0, r3
 3359 183c FFF7FEFF 		bl	__aeabi_fdiv
 3360 1840 0346     		mov	r3, r0
 3361 1842 1A46     		mov	r2, r3
 3362 1844 07F12803 		add	r3, r7, #40
 3363 1848 083B     		subs	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 87


 3364 184a 1A60     		str	r2, [r3]	@ float
 564:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3365              		.loc 1 564 0
 3366 184c 0023     		movs	r3, #0
 3367 184e 07F5AF52 		add	r2, r7, #5600
 3368 1852 02F10702 		add	r2, r2, #7
 3369 1856 1370     		strb	r3, [r2]
 3370 1858 2EE0     		b	.L154
 3371              	.L155:
 565:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3372              		.loc 1 565 0 discriminator 3
 3373 185a 07F5AF53 		add	r3, r7, #5600
 3374 185e 03F10503 		add	r3, r3, #5
 3375 1862 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3376 1864 3222     		movs	r2, #50
 3377 1866 02FB03F3 		mul	r3, r2, r3
 3378 186a 1A1D     		adds	r2, r3, #4
 3379 186c 07F5AF53 		add	r3, r7, #5600
 3380 1870 03F10303 		add	r3, r3, #3
 3381 1874 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3382 1876 1A44     		add	r2, r2, r3
 3383 1878 07F5AF53 		add	r3, r7, #5600
 3384 187c 03F10703 		add	r3, r3, #7
 3385 1880 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3386 1882 D31A     		subs	r3, r2, r3
 3387 1884 5A1E     		subs	r2, r3, #1
 3388 1886 07F5AF53 		add	r3, r7, #5600
 3389 188a 03F10703 		add	r3, r3, #7
 3390 188e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3391 1890 07F12803 		add	r3, r7, #40
 3392 1894 083B     		subs	r3, r3, #8
 3393 1896 0B44     		add	r3, r3, r1
 3394 1898 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3395 189a 07F16803 		add	r3, r7, #104
 3396 189e 103B     		subs	r3, r3, #16
 3397 18a0 9954     		strb	r1, [r3, r2]
 564:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3398              		.loc 1 564 0 discriminator 3
 3399 18a2 07F5AF53 		add	r3, r7, #5600
 3400 18a6 03F10703 		add	r3, r3, #7
 3401 18aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3402 18ac 0133     		adds	r3, r3, #1
 3403 18ae 07F5AF52 		add	r2, r7, #5600
 3404 18b2 02F10702 		add	r2, r2, #7
 3405 18b6 1370     		strb	r3, [r2]
 3406              	.L154:
 564:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3407              		.loc 1 564 0 is_stmt 0 discriminator 1
 3408 18b8 07F5AF53 		add	r3, r7, #5600
 3409 18bc 03F10703 		add	r3, r3, #7
 3410 18c0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3411 18c2 07F5AF53 		add	r3, r7, #5600
 3412 18c6 03F10303 		add	r3, r3, #3
 3413 18ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3414 18cc 9A42     		cmp	r2, r3
 3415 18ce C4D3     		bcc	.L155
 566:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 88


 567:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3416              		.loc 1 567 0 is_stmt 1
 3417 18d0 07F5AE53 		add	r3, r7, #5568
 3418 18d4 03F11E03 		add	r3, r3, #30
 3419 18d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3420 18da 7449     		ldr	r1, .L286
 3421 18dc 1346     		mov	r3, r2
 3422 18de DB00     		lsls	r3, r3, #3
 3423 18e0 9B1A     		subs	r3, r3, r2
 3424 18e2 1B01     		lsls	r3, r3, #4
 3425 18e4 0B44     		add	r3, r3, r1
 3426 18e6 B433     		adds	r3, r3, #180
 3427 18e8 1B68     		ldr	r3, [r3]
 3428 18ea 1846     		mov	r0, r3
 3429 18ec FFF7FEFF 		bl	__aeabi_i2f
 3430 18f0 0346     		mov	r3, r0
 3431 18f2 4FF08F41 		mov	r1, #1199570944
 3432 18f6 1846     		mov	r0, r3
 3433 18f8 FFF7FEFF 		bl	__aeabi_fdiv
 3434 18fc 0346     		mov	r3, r0
 3435 18fe 1A46     		mov	r2, r3
 3436 1900 07F12803 		add	r3, r7, #40
 3437 1904 083B     		subs	r3, r3, #8
 3438 1906 1A60     		str	r2, [r3]	@ float
 568:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3439              		.loc 1 568 0
 3440 1908 0023     		movs	r3, #0
 3441 190a 07F5AF52 		add	r2, r7, #5600
 3442 190e 02F10702 		add	r2, r2, #7
 3443 1912 1370     		strb	r3, [r2]
 3444 1914 34E0     		b	.L156
 3445              	.L157:
 569:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3446              		.loc 1 569 0 discriminator 3
 3447 1916 07F5AF53 		add	r3, r7, #5600
 3448 191a 03F10503 		add	r3, r3, #5
 3449 191e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3450 1920 3222     		movs	r2, #50
 3451 1922 02FB03F3 		mul	r3, r2, r3
 3452 1926 1A1D     		adds	r2, r3, #4
 3453 1928 07F5AF53 		add	r3, r7, #5600
 3454 192c 03F10303 		add	r3, r3, #3
 3455 1930 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3456 1932 1A44     		add	r2, r2, r3
 3457 1934 07F5AF53 		add	r3, r7, #5600
 3458 1938 03F10303 		add	r3, r3, #3
 3459 193c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3460 193e 1A44     		add	r2, r2, r3
 3461 1940 07F5AF53 		add	r3, r7, #5600
 3462 1944 03F10703 		add	r3, r3, #7
 3463 1948 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3464 194a D31A     		subs	r3, r2, r3
 3465 194c 5A1E     		subs	r2, r3, #1
 3466 194e 07F5AF53 		add	r3, r7, #5600
 3467 1952 03F10703 		add	r3, r3, #7
 3468 1956 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3469 1958 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 89


 3470 195c 083B     		subs	r3, r3, #8
 3471 195e 0B44     		add	r3, r3, r1
 3472 1960 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3473 1962 07F16803 		add	r3, r7, #104
 3474 1966 103B     		subs	r3, r3, #16
 3475 1968 9954     		strb	r1, [r3, r2]
 568:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3476              		.loc 1 568 0 discriminator 3
 3477 196a 07F5AF53 		add	r3, r7, #5600
 3478 196e 03F10703 		add	r3, r3, #7
 3479 1972 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3480 1974 0133     		adds	r3, r3, #1
 3481 1976 07F5AF52 		add	r2, r7, #5600
 3482 197a 02F10702 		add	r2, r2, #7
 3483 197e 1370     		strb	r3, [r2]
 3484              	.L156:
 568:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3485              		.loc 1 568 0 is_stmt 0 discriminator 1
 3486 1980 07F5AF53 		add	r3, r7, #5600
 3487 1984 03F10703 		add	r3, r3, #7
 3488 1988 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3489 198a 07F5AF53 		add	r3, r7, #5600
 3490 198e 03F10303 		add	r3, r3, #3
 3491 1992 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3492 1994 9A42     		cmp	r2, r3
 3493 1996 BED3     		bcc	.L157
 570:..\src/command_processing.c ****                             }
 571:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3494              		.loc 1 571 0 is_stmt 1
 3495 1998 07F5AE53 		add	r3, r7, #5568
 3496 199c 03F11E03 		add	r3, r3, #30
 3497 19a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3498 19a2 4249     		ldr	r1, .L286
 3499 19a4 1346     		mov	r3, r2
 3500 19a6 DB00     		lsls	r3, r3, #3
 3501 19a8 9B1A     		subs	r3, r3, r2
 3502 19aa 1B01     		lsls	r3, r3, #4
 3503 19ac 0B44     		add	r3, r3, r1
 3504 19ae B833     		adds	r3, r3, #184
 3505 19b0 1B68     		ldr	r3, [r3]
 3506 19b2 1846     		mov	r0, r3
 3507 19b4 FFF7FEFF 		bl	__aeabi_i2f
 3508 19b8 0346     		mov	r3, r0
 3509 19ba 4FF08F41 		mov	r1, #1199570944
 3510 19be 1846     		mov	r0, r3
 3511 19c0 FFF7FEFF 		bl	__aeabi_fdiv
 3512 19c4 0346     		mov	r3, r0
 3513 19c6 1A46     		mov	r2, r3
 3514 19c8 07F12803 		add	r3, r7, #40
 3515 19cc 083B     		subs	r3, r3, #8
 3516 19ce 1A60     		str	r2, [r3]	@ float
 572:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3517              		.loc 1 572 0
 3518 19d0 0023     		movs	r3, #0
 3519 19d2 07F5AF52 		add	r2, r7, #5600
 3520 19d6 02F10702 		add	r2, r2, #7
 3521 19da 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 90


 3522 19dc 35E0     		b	.L158
 3523              	.L159:
 573:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3524              		.loc 1 573 0 discriminator 3
 3525 19de 07F5AF53 		add	r3, r7, #5600
 3526 19e2 03F10503 		add	r3, r3, #5
 3527 19e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3528 19e8 3222     		movs	r2, #50
 3529 19ea 02FB03F3 		mul	r3, r2, r3
 3530 19ee 1A1D     		adds	r2, r3, #4
 3531 19f0 07F5AF53 		add	r3, r7, #5600
 3532 19f4 03F10303 		add	r3, r3, #3
 3533 19f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3534 19fa 5B00     		lsls	r3, r3, #1
 3535 19fc 1A44     		add	r2, r2, r3
 3536 19fe 07F5AF53 		add	r3, r7, #5600
 3537 1a02 03F10303 		add	r3, r3, #3
 3538 1a06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3539 1a08 1A44     		add	r2, r2, r3
 3540 1a0a 07F5AF53 		add	r3, r7, #5600
 3541 1a0e 03F10703 		add	r3, r3, #7
 3542 1a12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3543 1a14 D31A     		subs	r3, r2, r3
 3544 1a16 5A1E     		subs	r2, r3, #1
 3545 1a18 07F5AF53 		add	r3, r7, #5600
 3546 1a1c 03F10703 		add	r3, r3, #7
 3547 1a20 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3548 1a22 07F12803 		add	r3, r7, #40
 3549 1a26 083B     		subs	r3, r3, #8
 3550 1a28 0B44     		add	r3, r3, r1
 3551 1a2a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3552 1a2c 07F16803 		add	r3, r7, #104
 3553 1a30 103B     		subs	r3, r3, #16
 3554 1a32 9954     		strb	r1, [r3, r2]
 572:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3555              		.loc 1 572 0 discriminator 3
 3556 1a34 07F5AF53 		add	r3, r7, #5600
 3557 1a38 03F10703 		add	r3, r3, #7
 3558 1a3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3559 1a3e 0133     		adds	r3, r3, #1
 3560 1a40 07F5AF52 		add	r2, r7, #5600
 3561 1a44 02F10702 		add	r2, r2, #7
 3562 1a48 1370     		strb	r3, [r2]
 3563              	.L158:
 572:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3564              		.loc 1 572 0 is_stmt 0 discriminator 1
 3565 1a4a 07F5AF53 		add	r3, r7, #5600
 3566 1a4e 03F10703 		add	r3, r3, #7
 3567 1a52 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3568 1a54 07F5AF53 		add	r3, r7, #5600
 3569 1a58 03F10303 		add	r3, r3, #3
 3570 1a5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3571 1a5e 9A42     		cmp	r2, r3
 3572 1a60 BDD3     		bcc	.L159
 574:..\src/command_processing.c ****                             } 
 575:..\src/command_processing.c ****                         }
 576:..\src/command_processing.c ****                         else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 91


 577:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 578:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 579:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 580:..\src/command_processing.c ****                             }
 581:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 582:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 583:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 584:..\src/command_processing.c ****                             }
 585:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 586:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 587:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 588:..\src/command_processing.c ****                             }
 589:..\src/command_processing.c ****                         }
 590:..\src/command_processing.c ****                         break;
 3573              		.loc 1 590 0 is_stmt 1
 3574 1a62 00F00ABD 		b	.L105
 3575              	.L153:
 577:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3576              		.loc 1 577 0
 3577 1a66 07F5AE53 		add	r3, r7, #5568
 3578 1a6a 03F11E03 		add	r3, r3, #30
 3579 1a6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3580 1a70 0E49     		ldr	r1, .L286
 3581 1a72 1346     		mov	r3, r2
 3582 1a74 DB00     		lsls	r3, r3, #3
 3583 1a76 9B1A     		subs	r3, r3, r2
 3584 1a78 1B01     		lsls	r3, r3, #4
 3585 1a7a 0B44     		add	r3, r3, r1
 3586 1a7c C833     		adds	r3, r3, #200
 3587 1a7e 1B68     		ldr	r3, [r3]
 3588 1a80 1846     		mov	r0, r3
 3589 1a82 FFF7FEFF 		bl	__aeabi_i2f
 3590 1a86 0346     		mov	r3, r0
 3591 1a88 4FF08F41 		mov	r1, #1199570944
 3592 1a8c 1846     		mov	r0, r3
 3593 1a8e FFF7FEFF 		bl	__aeabi_fdiv
 3594 1a92 0346     		mov	r3, r0
 3595 1a94 1A46     		mov	r2, r3
 3596 1a96 07F12803 		add	r3, r7, #40
 3597 1a9a 083B     		subs	r3, r3, #8
 3598 1a9c 1A60     		str	r2, [r3]	@ float
 578:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3599              		.loc 1 578 0
 3600 1a9e 0023     		movs	r3, #0
 3601 1aa0 07F5AF52 		add	r2, r7, #5600
 3602 1aa4 02F10702 		add	r2, r2, #7
 3603 1aa8 1370     		strb	r3, [r2]
 3604 1aaa 30E0     		b	.L161
 3605              	.L287:
 3606              		.align	2
 3607              	.L286:
 3608 1aac 00000000 		.word	c_mem
 3609              	.L162:
 579:..\src/command_processing.c ****                             }
 3610              		.loc 1 579 0 discriminator 3
 3611 1ab0 07F5AF53 		add	r3, r7, #5600
 3612 1ab4 03F10503 		add	r3, r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 92


 3613 1ab8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3614 1aba 3222     		movs	r2, #50
 3615 1abc 02FB03F3 		mul	r3, r2, r3
 3616 1ac0 1A1D     		adds	r2, r3, #4
 3617 1ac2 07F5AF53 		add	r3, r7, #5600
 3618 1ac6 03F10303 		add	r3, r3, #3
 3619 1aca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3620 1acc 1A44     		add	r2, r2, r3
 3621 1ace 07F5AF53 		add	r3, r7, #5600
 3622 1ad2 03F10703 		add	r3, r3, #7
 3623 1ad6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3624 1ad8 D31A     		subs	r3, r2, r3
 3625 1ada 5A1E     		subs	r2, r3, #1
 3626 1adc 07F5AF53 		add	r3, r7, #5600
 3627 1ae0 03F10703 		add	r3, r3, #7
 3628 1ae4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3629 1ae6 07F12803 		add	r3, r7, #40
 3630 1aea 083B     		subs	r3, r3, #8
 3631 1aec 0B44     		add	r3, r3, r1
 3632 1aee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3633 1af0 07F16803 		add	r3, r7, #104
 3634 1af4 103B     		subs	r3, r3, #16
 3635 1af6 9954     		strb	r1, [r3, r2]
 578:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3636              		.loc 1 578 0 discriminator 3
 3637 1af8 07F5AF53 		add	r3, r7, #5600
 3638 1afc 03F10703 		add	r3, r3, #7
 3639 1b00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3640 1b02 0133     		adds	r3, r3, #1
 3641 1b04 07F5AF52 		add	r2, r7, #5600
 3642 1b08 02F10702 		add	r2, r2, #7
 3643 1b0c 1370     		strb	r3, [r2]
 3644              	.L161:
 578:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3645              		.loc 1 578 0 is_stmt 0 discriminator 1
 3646 1b0e 07F5AF53 		add	r3, r7, #5600
 3647 1b12 03F10703 		add	r3, r3, #7
 3648 1b16 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3649 1b18 07F5AF53 		add	r3, r7, #5600
 3650 1b1c 03F10303 		add	r3, r3, #3
 3651 1b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3652 1b22 9A42     		cmp	r2, r3
 3653 1b24 C4D3     		bcc	.L162
 581:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3654              		.loc 1 581 0 is_stmt 1
 3655 1b26 07F5AE53 		add	r3, r7, #5568
 3656 1b2a 03F11E03 		add	r3, r3, #30
 3657 1b2e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3658 1b30 AB49     		ldr	r1, .L288
 3659 1b32 1346     		mov	r3, r2
 3660 1b34 DB00     		lsls	r3, r3, #3
 3661 1b36 9B1A     		subs	r3, r3, r2
 3662 1b38 1B01     		lsls	r3, r3, #4
 3663 1b3a 0B44     		add	r3, r3, r1
 3664 1b3c CC33     		adds	r3, r3, #204
 3665 1b3e 1B68     		ldr	r3, [r3]
 3666 1b40 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 93


 3667 1b42 FFF7FEFF 		bl	__aeabi_i2f
 3668 1b46 0346     		mov	r3, r0
 3669 1b48 4FF08F41 		mov	r1, #1199570944
 3670 1b4c 1846     		mov	r0, r3
 3671 1b4e FFF7FEFF 		bl	__aeabi_fdiv
 3672 1b52 0346     		mov	r3, r0
 3673 1b54 1A46     		mov	r2, r3
 3674 1b56 07F12803 		add	r3, r7, #40
 3675 1b5a 083B     		subs	r3, r3, #8
 3676 1b5c 1A60     		str	r2, [r3]	@ float
 582:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3677              		.loc 1 582 0
 3678 1b5e 0023     		movs	r3, #0
 3679 1b60 07F5AF52 		add	r2, r7, #5600
 3680 1b64 02F10702 		add	r2, r2, #7
 3681 1b68 1370     		strb	r3, [r2]
 3682 1b6a 34E0     		b	.L163
 3683              	.L164:
 583:..\src/command_processing.c ****                             }
 3684              		.loc 1 583 0 discriminator 3
 3685 1b6c 07F5AF53 		add	r3, r7, #5600
 3686 1b70 03F10503 		add	r3, r3, #5
 3687 1b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3688 1b76 3222     		movs	r2, #50
 3689 1b78 02FB03F3 		mul	r3, r2, r3
 3690 1b7c 1A1D     		adds	r2, r3, #4
 3691 1b7e 07F5AF53 		add	r3, r7, #5600
 3692 1b82 03F10303 		add	r3, r3, #3
 3693 1b86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3694 1b88 1A44     		add	r2, r2, r3
 3695 1b8a 07F5AF53 		add	r3, r7, #5600
 3696 1b8e 03F10303 		add	r3, r3, #3
 3697 1b92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3698 1b94 1A44     		add	r2, r2, r3
 3699 1b96 07F5AF53 		add	r3, r7, #5600
 3700 1b9a 03F10703 		add	r3, r3, #7
 3701 1b9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3702 1ba0 D31A     		subs	r3, r2, r3
 3703 1ba2 5A1E     		subs	r2, r3, #1
 3704 1ba4 07F5AF53 		add	r3, r7, #5600
 3705 1ba8 03F10703 		add	r3, r3, #7
 3706 1bac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3707 1bae 07F12803 		add	r3, r7, #40
 3708 1bb2 083B     		subs	r3, r3, #8
 3709 1bb4 0B44     		add	r3, r3, r1
 3710 1bb6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3711 1bb8 07F16803 		add	r3, r7, #104
 3712 1bbc 103B     		subs	r3, r3, #16
 3713 1bbe 9954     		strb	r1, [r3, r2]
 582:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3714              		.loc 1 582 0 discriminator 3
 3715 1bc0 07F5AF53 		add	r3, r7, #5600
 3716 1bc4 03F10703 		add	r3, r3, #7
 3717 1bc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3718 1bca 0133     		adds	r3, r3, #1
 3719 1bcc 07F5AF52 		add	r2, r7, #5600
 3720 1bd0 02F10702 		add	r2, r2, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 94


 3721 1bd4 1370     		strb	r3, [r2]
 3722              	.L163:
 582:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3723              		.loc 1 582 0 is_stmt 0 discriminator 1
 3724 1bd6 07F5AF53 		add	r3, r7, #5600
 3725 1bda 03F10703 		add	r3, r3, #7
 3726 1bde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3727 1be0 07F5AF53 		add	r3, r7, #5600
 3728 1be4 03F10303 		add	r3, r3, #3
 3729 1be8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3730 1bea 9A42     		cmp	r2, r3
 3731 1bec BED3     		bcc	.L164
 585:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3732              		.loc 1 585 0 is_stmt 1
 3733 1bee 07F5AE53 		add	r3, r7, #5568
 3734 1bf2 03F11E03 		add	r3, r3, #30
 3735 1bf6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3736 1bf8 7949     		ldr	r1, .L288
 3737 1bfa 1346     		mov	r3, r2
 3738 1bfc DB00     		lsls	r3, r3, #3
 3739 1bfe 9B1A     		subs	r3, r3, r2
 3740 1c00 1B01     		lsls	r3, r3, #4
 3741 1c02 0B44     		add	r3, r3, r1
 3742 1c04 D033     		adds	r3, r3, #208
 3743 1c06 1B68     		ldr	r3, [r3]
 3744 1c08 1846     		mov	r0, r3
 3745 1c0a FFF7FEFF 		bl	__aeabi_i2f
 3746 1c0e 0346     		mov	r3, r0
 3747 1c10 4FF08F41 		mov	r1, #1199570944
 3748 1c14 1846     		mov	r0, r3
 3749 1c16 FFF7FEFF 		bl	__aeabi_fdiv
 3750 1c1a 0346     		mov	r3, r0
 3751 1c1c 1A46     		mov	r2, r3
 3752 1c1e 07F12803 		add	r3, r7, #40
 3753 1c22 083B     		subs	r3, r3, #8
 3754 1c24 1A60     		str	r2, [r3]	@ float
 586:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3755              		.loc 1 586 0
 3756 1c26 0023     		movs	r3, #0
 3757 1c28 07F5AF52 		add	r2, r7, #5600
 3758 1c2c 02F10702 		add	r2, r2, #7
 3759 1c30 1370     		strb	r3, [r2]
 3760 1c32 35E0     		b	.L165
 3761              	.L166:
 587:..\src/command_processing.c ****                             }
 3762              		.loc 1 587 0 discriminator 3
 3763 1c34 07F5AF53 		add	r3, r7, #5600
 3764 1c38 03F10503 		add	r3, r3, #5
 3765 1c3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3766 1c3e 3222     		movs	r2, #50
 3767 1c40 02FB03F3 		mul	r3, r2, r3
 3768 1c44 1A1D     		adds	r2, r3, #4
 3769 1c46 07F5AF53 		add	r3, r7, #5600
 3770 1c4a 03F10303 		add	r3, r3, #3
 3771 1c4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3772 1c50 5B00     		lsls	r3, r3, #1
 3773 1c52 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 95


 3774 1c54 07F5AF53 		add	r3, r7, #5600
 3775 1c58 03F10303 		add	r3, r3, #3
 3776 1c5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3777 1c5e 1A44     		add	r2, r2, r3
 3778 1c60 07F5AF53 		add	r3, r7, #5600
 3779 1c64 03F10703 		add	r3, r3, #7
 3780 1c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3781 1c6a D31A     		subs	r3, r2, r3
 3782 1c6c 5A1E     		subs	r2, r3, #1
 3783 1c6e 07F5AF53 		add	r3, r7, #5600
 3784 1c72 03F10703 		add	r3, r3, #7
 3785 1c76 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3786 1c78 07F12803 		add	r3, r7, #40
 3787 1c7c 083B     		subs	r3, r3, #8
 3788 1c7e 0B44     		add	r3, r3, r1
 3789 1c80 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3790 1c82 07F16803 		add	r3, r7, #104
 3791 1c86 103B     		subs	r3, r3, #16
 3792 1c88 9954     		strb	r1, [r3, r2]
 586:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3793              		.loc 1 586 0 discriminator 3
 3794 1c8a 07F5AF53 		add	r3, r7, #5600
 3795 1c8e 03F10703 		add	r3, r3, #7
 3796 1c92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3797 1c94 0133     		adds	r3, r3, #1
 3798 1c96 07F5AF52 		add	r2, r7, #5600
 3799 1c9a 02F10702 		add	r2, r2, #7
 3800 1c9e 1370     		strb	r3, [r2]
 3801              	.L165:
 586:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3802              		.loc 1 586 0 is_stmt 0 discriminator 1
 3803 1ca0 07F5AF53 		add	r3, r7, #5600
 3804 1ca4 03F10703 		add	r3, r3, #7
 3805 1ca8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3806 1caa 07F5AF53 		add	r3, r7, #5600
 3807 1cae 03F10303 		add	r3, r3, #3
 3808 1cb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3809 1cb4 9A42     		cmp	r2, r3
 3810 1cb6 BDD3     		bcc	.L166
 3811              		.loc 1 590 0 is_stmt 1
 3812 1cb8 DFE3     		b	.L105
 3813              	.L114:
 591:..\src/command_processing.c ****                         
 592:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 593:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3814              		.loc 1 593 0
 3815 1cba 07F5AE53 		add	r3, r7, #5568
 3816 1cbe 03F11E03 		add	r3, r3, #30
 3817 1cc2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3818 1cc4 4649     		ldr	r1, .L288
 3819 1cc6 1346     		mov	r3, r2
 3820 1cc8 DB00     		lsls	r3, r3, #3
 3821 1cca 9B1A     		subs	r3, r3, r2
 3822 1ccc 1B01     		lsls	r3, r3, #4
 3823 1cce 0B44     		add	r3, r3, r1
 3824 1cd0 03F20F13 		addw	r3, r3, #271
 3825 1cd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 96


 3826 1cd6 032B     		cmp	r3, #3
 3827 1cd8 00F02B81 		beq	.L167
 594:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3828              		.loc 1 594 0
 3829 1cdc 07F5AE53 		add	r3, r7, #5568
 3830 1ce0 03F11E03 		add	r3, r3, #30
 3831 1ce4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3832 1ce6 3E49     		ldr	r1, .L288
 3833 1ce8 1346     		mov	r3, r2
 3834 1cea DB00     		lsls	r3, r3, #3
 3835 1cec 9B1A     		subs	r3, r3, r2
 3836 1cee 1B01     		lsls	r3, r3, #4
 3837 1cf0 0B44     		add	r3, r3, r1
 3838 1cf2 BC33     		adds	r3, r3, #188
 3839 1cf4 1B68     		ldr	r3, [r3]
 3840 1cf6 1846     		mov	r0, r3
 3841 1cf8 FFF7FEFF 		bl	__aeabi_i2f
 3842 1cfc 0346     		mov	r3, r0
 3843 1cfe 4FF08F41 		mov	r1, #1199570944
 3844 1d02 1846     		mov	r0, r3
 3845 1d04 FFF7FEFF 		bl	__aeabi_fdiv
 3846 1d08 0346     		mov	r3, r0
 3847 1d0a 1A46     		mov	r2, r3
 3848 1d0c 07F12803 		add	r3, r7, #40
 3849 1d10 083B     		subs	r3, r3, #8
 3850 1d12 1A60     		str	r2, [r3]	@ float
 595:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3851              		.loc 1 595 0
 3852 1d14 0023     		movs	r3, #0
 3853 1d16 07F5AF52 		add	r2, r7, #5600
 3854 1d1a 02F10702 		add	r2, r2, #7
 3855 1d1e 1370     		strb	r3, [r2]
 3856 1d20 2EE0     		b	.L168
 3857              	.L169:
 596:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3858              		.loc 1 596 0 discriminator 3
 3859 1d22 07F5AF53 		add	r3, r7, #5600
 3860 1d26 03F10503 		add	r3, r3, #5
 3861 1d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3862 1d2c 3222     		movs	r2, #50
 3863 1d2e 02FB03F3 		mul	r3, r2, r3
 3864 1d32 1A1D     		adds	r2, r3, #4
 3865 1d34 07F5AF53 		add	r3, r7, #5600
 3866 1d38 03F10303 		add	r3, r3, #3
 3867 1d3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3868 1d3e 1A44     		add	r2, r2, r3
 3869 1d40 07F5AF53 		add	r3, r7, #5600
 3870 1d44 03F10703 		add	r3, r3, #7
 3871 1d48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3872 1d4a D31A     		subs	r3, r2, r3
 3873 1d4c 5A1E     		subs	r2, r3, #1
 3874 1d4e 07F5AF53 		add	r3, r7, #5600
 3875 1d52 03F10703 		add	r3, r3, #7
 3876 1d56 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3877 1d58 07F12803 		add	r3, r7, #40
 3878 1d5c 083B     		subs	r3, r3, #8
 3879 1d5e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 97


 3880 1d60 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3881 1d62 07F16803 		add	r3, r7, #104
 3882 1d66 103B     		subs	r3, r3, #16
 3883 1d68 9954     		strb	r1, [r3, r2]
 595:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3884              		.loc 1 595 0 discriminator 3
 3885 1d6a 07F5AF53 		add	r3, r7, #5600
 3886 1d6e 03F10703 		add	r3, r3, #7
 3887 1d72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3888 1d74 0133     		adds	r3, r3, #1
 3889 1d76 07F5AF52 		add	r2, r7, #5600
 3890 1d7a 02F10702 		add	r2, r2, #7
 3891 1d7e 1370     		strb	r3, [r2]
 3892              	.L168:
 595:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3893              		.loc 1 595 0 is_stmt 0 discriminator 1
 3894 1d80 07F5AF53 		add	r3, r7, #5600
 3895 1d84 03F10703 		add	r3, r3, #7
 3896 1d88 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3897 1d8a 07F5AF53 		add	r3, r7, #5600
 3898 1d8e 03F10303 		add	r3, r3, #3
 3899 1d92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3900 1d94 9A42     		cmp	r2, r3
 3901 1d96 C4D3     		bcc	.L169
 597:..\src/command_processing.c ****                             }
 598:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3902              		.loc 1 598 0 is_stmt 1
 3903 1d98 07F5AE53 		add	r3, r7, #5568
 3904 1d9c 03F11E03 		add	r3, r3, #30
 3905 1da0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3906 1da2 0F49     		ldr	r1, .L288
 3907 1da4 1346     		mov	r3, r2
 3908 1da6 DB00     		lsls	r3, r3, #3
 3909 1da8 9B1A     		subs	r3, r3, r2
 3910 1daa 1B01     		lsls	r3, r3, #4
 3911 1dac 0B44     		add	r3, r3, r1
 3912 1dae C033     		adds	r3, r3, #192
 3913 1db0 1B68     		ldr	r3, [r3]
 3914 1db2 1846     		mov	r0, r3
 3915 1db4 FFF7FEFF 		bl	__aeabi_i2f
 3916 1db8 0346     		mov	r3, r0
 3917 1dba 4FF08F41 		mov	r1, #1199570944
 3918 1dbe 1846     		mov	r0, r3
 3919 1dc0 FFF7FEFF 		bl	__aeabi_fdiv
 3920 1dc4 0346     		mov	r3, r0
 3921 1dc6 1A46     		mov	r2, r3
 3922 1dc8 07F12803 		add	r3, r7, #40
 3923 1dcc 083B     		subs	r3, r3, #8
 3924 1dce 1A60     		str	r2, [r3]	@ float
 599:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3925              		.loc 1 599 0
 3926 1dd0 0023     		movs	r3, #0
 3927 1dd2 07F5AF52 		add	r2, r7, #5600
 3928 1dd6 02F10702 		add	r2, r2, #7
 3929 1dda 1370     		strb	r3, [r2]
 3930 1ddc 37E0     		b	.L170
 3931              	.L289:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 98


 3932 1dde 00BF     		.align	2
 3933              	.L288:
 3934 1de0 00000000 		.word	c_mem
 3935              	.L171:
 600:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3936              		.loc 1 600 0 discriminator 3
 3937 1de4 07F5AF53 		add	r3, r7, #5600
 3938 1de8 03F10503 		add	r3, r3, #5
 3939 1dec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3940 1dee 3222     		movs	r2, #50
 3941 1df0 02FB03F3 		mul	r3, r2, r3
 3942 1df4 1A1D     		adds	r2, r3, #4
 3943 1df6 07F5AF53 		add	r3, r7, #5600
 3944 1dfa 03F10303 		add	r3, r3, #3
 3945 1dfe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3946 1e00 1A44     		add	r2, r2, r3
 3947 1e02 07F5AF53 		add	r3, r7, #5600
 3948 1e06 03F10303 		add	r3, r3, #3
 3949 1e0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3950 1e0c 1A44     		add	r2, r2, r3
 3951 1e0e 07F5AF53 		add	r3, r7, #5600
 3952 1e12 03F10703 		add	r3, r3, #7
 3953 1e16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3954 1e18 D31A     		subs	r3, r2, r3
 3955 1e1a 5A1E     		subs	r2, r3, #1
 3956 1e1c 07F5AF53 		add	r3, r7, #5600
 3957 1e20 03F10703 		add	r3, r3, #7
 3958 1e24 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3959 1e26 07F12803 		add	r3, r7, #40
 3960 1e2a 083B     		subs	r3, r3, #8
 3961 1e2c 0B44     		add	r3, r3, r1
 3962 1e2e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3963 1e30 07F16803 		add	r3, r7, #104
 3964 1e34 103B     		subs	r3, r3, #16
 3965 1e36 9954     		strb	r1, [r3, r2]
 599:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3966              		.loc 1 599 0 discriminator 3
 3967 1e38 07F5AF53 		add	r3, r7, #5600
 3968 1e3c 03F10703 		add	r3, r3, #7
 3969 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3970 1e42 0133     		adds	r3, r3, #1
 3971 1e44 07F5AF52 		add	r2, r7, #5600
 3972 1e48 02F10702 		add	r2, r2, #7
 3973 1e4c 1370     		strb	r3, [r2]
 3974              	.L170:
 599:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3975              		.loc 1 599 0 is_stmt 0 discriminator 1
 3976 1e4e 07F5AF53 		add	r3, r7, #5600
 3977 1e52 03F10703 		add	r3, r3, #7
 3978 1e56 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3979 1e58 07F5AF53 		add	r3, r7, #5600
 3980 1e5c 03F10303 		add	r3, r3, #3
 3981 1e60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3982 1e62 9A42     		cmp	r2, r3
 3983 1e64 BED3     		bcc	.L171
 601:..\src/command_processing.c ****                             }
 602:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 99


 3984              		.loc 1 602 0 is_stmt 1
 3985 1e66 07F5AE53 		add	r3, r7, #5568
 3986 1e6a 03F11E03 		add	r3, r3, #30
 3987 1e6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3988 1e70 C449     		ldr	r1, .L290
 3989 1e72 1346     		mov	r3, r2
 3990 1e74 DB00     		lsls	r3, r3, #3
 3991 1e76 9B1A     		subs	r3, r3, r2
 3992 1e78 1B01     		lsls	r3, r3, #4
 3993 1e7a 0B44     		add	r3, r3, r1
 3994 1e7c C433     		adds	r3, r3, #196
 3995 1e7e 1B68     		ldr	r3, [r3]
 3996 1e80 1846     		mov	r0, r3
 3997 1e82 FFF7FEFF 		bl	__aeabi_i2f
 3998 1e86 0346     		mov	r3, r0
 3999 1e88 4FF08F41 		mov	r1, #1199570944
 4000 1e8c 1846     		mov	r0, r3
 4001 1e8e FFF7FEFF 		bl	__aeabi_fdiv
 4002 1e92 0346     		mov	r3, r0
 4003 1e94 1A46     		mov	r2, r3
 4004 1e96 07F12803 		add	r3, r7, #40
 4005 1e9a 083B     		subs	r3, r3, #8
 4006 1e9c 1A60     		str	r2, [r3]	@ float
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4007              		.loc 1 603 0
 4008 1e9e 0023     		movs	r3, #0
 4009 1ea0 07F5AF52 		add	r2, r7, #5600
 4010 1ea4 02F10702 		add	r2, r2, #7
 4011 1ea8 1370     		strb	r3, [r2]
 4012 1eaa 35E0     		b	.L172
 4013              	.L173:
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4014              		.loc 1 604 0 discriminator 3
 4015 1eac 07F5AF53 		add	r3, r7, #5600
 4016 1eb0 03F10503 		add	r3, r3, #5
 4017 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4018 1eb6 3222     		movs	r2, #50
 4019 1eb8 02FB03F3 		mul	r3, r2, r3
 4020 1ebc 1A1D     		adds	r2, r3, #4
 4021 1ebe 07F5AF53 		add	r3, r7, #5600
 4022 1ec2 03F10303 		add	r3, r3, #3
 4023 1ec6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4024 1ec8 5B00     		lsls	r3, r3, #1
 4025 1eca 1A44     		add	r2, r2, r3
 4026 1ecc 07F5AF53 		add	r3, r7, #5600
 4027 1ed0 03F10303 		add	r3, r3, #3
 4028 1ed4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4029 1ed6 1A44     		add	r2, r2, r3
 4030 1ed8 07F5AF53 		add	r3, r7, #5600
 4031 1edc 03F10703 		add	r3, r3, #7
 4032 1ee0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4033 1ee2 D31A     		subs	r3, r2, r3
 4034 1ee4 5A1E     		subs	r2, r3, #1
 4035 1ee6 07F5AF53 		add	r3, r7, #5600
 4036 1eea 03F10703 		add	r3, r3, #7
 4037 1eee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4038 1ef0 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 100


 4039 1ef4 083B     		subs	r3, r3, #8
 4040 1ef6 0B44     		add	r3, r3, r1
 4041 1ef8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4042 1efa 07F16803 		add	r3, r7, #104
 4043 1efe 103B     		subs	r3, r3, #16
 4044 1f00 9954     		strb	r1, [r3, r2]
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4045              		.loc 1 603 0 discriminator 3
 4046 1f02 07F5AF53 		add	r3, r7, #5600
 4047 1f06 03F10703 		add	r3, r3, #7
 4048 1f0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4049 1f0c 0133     		adds	r3, r3, #1
 4050 1f0e 07F5AF52 		add	r2, r7, #5600
 4051 1f12 02F10702 		add	r2, r2, #7
 4052 1f16 1370     		strb	r3, [r2]
 4053              	.L172:
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4054              		.loc 1 603 0 is_stmt 0 discriminator 1
 4055 1f18 07F5AF53 		add	r3, r7, #5600
 4056 1f1c 03F10703 		add	r3, r3, #7
 4057 1f20 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4058 1f22 07F5AF53 		add	r3, r7, #5600
 4059 1f26 03F10303 		add	r3, r3, #3
 4060 1f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4061 1f2c 9A42     		cmp	r2, r3
 4062 1f2e BDD3     		bcc	.L173
 605:..\src/command_processing.c ****                             }
 606:..\src/command_processing.c ****                         }
 607:..\src/command_processing.c ****                         else {
 608:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 609:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 610:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 611:..\src/command_processing.c ****                             }
 612:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 613:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 614:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 615:..\src/command_processing.c ****                             }
 616:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 617:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 618:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 619:..\src/command_processing.c ****                             }
 620:..\src/command_processing.c ****                         }            
 621:..\src/command_processing.c ****                         break;  
 4063              		.loc 1 621 0 is_stmt 1
 4064 1f30 A3E2     		b	.L105
 4065              	.L167:
 608:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4066              		.loc 1 608 0
 4067 1f32 07F5AE53 		add	r3, r7, #5568
 4068 1f36 03F11E03 		add	r3, r3, #30
 4069 1f3a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4070 1f3c 9149     		ldr	r1, .L290
 4071 1f3e 1346     		mov	r3, r2
 4072 1f40 DB00     		lsls	r3, r3, #3
 4073 1f42 9B1A     		subs	r3, r3, r2
 4074 1f44 1B01     		lsls	r3, r3, #4
 4075 1f46 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 101


 4076 1f48 D433     		adds	r3, r3, #212
 4077 1f4a 1B68     		ldr	r3, [r3]
 4078 1f4c 1846     		mov	r0, r3
 4079 1f4e FFF7FEFF 		bl	__aeabi_i2f
 4080 1f52 0346     		mov	r3, r0
 4081 1f54 4FF08F41 		mov	r1, #1199570944
 4082 1f58 1846     		mov	r0, r3
 4083 1f5a FFF7FEFF 		bl	__aeabi_fdiv
 4084 1f5e 0346     		mov	r3, r0
 4085 1f60 1A46     		mov	r2, r3
 4086 1f62 07F12803 		add	r3, r7, #40
 4087 1f66 083B     		subs	r3, r3, #8
 4088 1f68 1A60     		str	r2, [r3]	@ float
 609:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4089              		.loc 1 609 0
 4090 1f6a 0023     		movs	r3, #0
 4091 1f6c 07F5AF52 		add	r2, r7, #5600
 4092 1f70 02F10702 		add	r2, r2, #7
 4093 1f74 1370     		strb	r3, [r2]
 4094 1f76 2EE0     		b	.L175
 4095              	.L176:
 610:..\src/command_processing.c ****                             }
 4096              		.loc 1 610 0 discriminator 3
 4097 1f78 07F5AF53 		add	r3, r7, #5600
 4098 1f7c 03F10503 		add	r3, r3, #5
 4099 1f80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4100 1f82 3222     		movs	r2, #50
 4101 1f84 02FB03F3 		mul	r3, r2, r3
 4102 1f88 1A1D     		adds	r2, r3, #4
 4103 1f8a 07F5AF53 		add	r3, r7, #5600
 4104 1f8e 03F10303 		add	r3, r3, #3
 4105 1f92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4106 1f94 1A44     		add	r2, r2, r3
 4107 1f96 07F5AF53 		add	r3, r7, #5600
 4108 1f9a 03F10703 		add	r3, r3, #7
 4109 1f9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4110 1fa0 D31A     		subs	r3, r2, r3
 4111 1fa2 5A1E     		subs	r2, r3, #1
 4112 1fa4 07F5AF53 		add	r3, r7, #5600
 4113 1fa8 03F10703 		add	r3, r3, #7
 4114 1fac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4115 1fae 07F12803 		add	r3, r7, #40
 4116 1fb2 083B     		subs	r3, r3, #8
 4117 1fb4 0B44     		add	r3, r3, r1
 4118 1fb6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4119 1fb8 07F16803 		add	r3, r7, #104
 4120 1fbc 103B     		subs	r3, r3, #16
 4121 1fbe 9954     		strb	r1, [r3, r2]
 609:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4122              		.loc 1 609 0 discriminator 3
 4123 1fc0 07F5AF53 		add	r3, r7, #5600
 4124 1fc4 03F10703 		add	r3, r3, #7
 4125 1fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4126 1fca 0133     		adds	r3, r3, #1
 4127 1fcc 07F5AF52 		add	r2, r7, #5600
 4128 1fd0 02F10702 		add	r2, r2, #7
 4129 1fd4 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 102


 4130              	.L175:
 609:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4131              		.loc 1 609 0 is_stmt 0 discriminator 1
 4132 1fd6 07F5AF53 		add	r3, r7, #5600
 4133 1fda 03F10703 		add	r3, r3, #7
 4134 1fde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4135 1fe0 07F5AF53 		add	r3, r7, #5600
 4136 1fe4 03F10303 		add	r3, r3, #3
 4137 1fe8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4138 1fea 9A42     		cmp	r2, r3
 4139 1fec C4D3     		bcc	.L176
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4140              		.loc 1 612 0 is_stmt 1
 4141 1fee 07F5AE53 		add	r3, r7, #5568
 4142 1ff2 03F11E03 		add	r3, r3, #30
 4143 1ff6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4144 1ff8 6249     		ldr	r1, .L290
 4145 1ffa 1346     		mov	r3, r2
 4146 1ffc DB00     		lsls	r3, r3, #3
 4147 1ffe 9B1A     		subs	r3, r3, r2
 4148 2000 1B01     		lsls	r3, r3, #4
 4149 2002 0B44     		add	r3, r3, r1
 4150 2004 D833     		adds	r3, r3, #216
 4151 2006 1B68     		ldr	r3, [r3]
 4152 2008 1846     		mov	r0, r3
 4153 200a FFF7FEFF 		bl	__aeabi_i2f
 4154 200e 0346     		mov	r3, r0
 4155 2010 4FF08F41 		mov	r1, #1199570944
 4156 2014 1846     		mov	r0, r3
 4157 2016 FFF7FEFF 		bl	__aeabi_fdiv
 4158 201a 0346     		mov	r3, r0
 4159 201c 1A46     		mov	r2, r3
 4160 201e 07F12803 		add	r3, r7, #40
 4161 2022 083B     		subs	r3, r3, #8
 4162 2024 1A60     		str	r2, [r3]	@ float
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4163              		.loc 1 613 0
 4164 2026 0023     		movs	r3, #0
 4165 2028 07F5AF52 		add	r2, r7, #5600
 4166 202c 02F10702 		add	r2, r2, #7
 4167 2030 1370     		strb	r3, [r2]
 4168 2032 34E0     		b	.L177
 4169              	.L178:
 614:..\src/command_processing.c ****                             }
 4170              		.loc 1 614 0 discriminator 3
 4171 2034 07F5AF53 		add	r3, r7, #5600
 4172 2038 03F10503 		add	r3, r3, #5
 4173 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4174 203e 3222     		movs	r2, #50
 4175 2040 02FB03F3 		mul	r3, r2, r3
 4176 2044 1A1D     		adds	r2, r3, #4
 4177 2046 07F5AF53 		add	r3, r7, #5600
 4178 204a 03F10303 		add	r3, r3, #3
 4179 204e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4180 2050 1A44     		add	r2, r2, r3
 4181 2052 07F5AF53 		add	r3, r7, #5600
 4182 2056 03F10303 		add	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 103


 4183 205a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4184 205c 1A44     		add	r2, r2, r3
 4185 205e 07F5AF53 		add	r3, r7, #5600
 4186 2062 03F10703 		add	r3, r3, #7
 4187 2066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4188 2068 D31A     		subs	r3, r2, r3
 4189 206a 5A1E     		subs	r2, r3, #1
 4190 206c 07F5AF53 		add	r3, r7, #5600
 4191 2070 03F10703 		add	r3, r3, #7
 4192 2074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4193 2076 07F12803 		add	r3, r7, #40
 4194 207a 083B     		subs	r3, r3, #8
 4195 207c 0B44     		add	r3, r3, r1
 4196 207e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4197 2080 07F16803 		add	r3, r7, #104
 4198 2084 103B     		subs	r3, r3, #16
 4199 2086 9954     		strb	r1, [r3, r2]
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4200              		.loc 1 613 0 discriminator 3
 4201 2088 07F5AF53 		add	r3, r7, #5600
 4202 208c 03F10703 		add	r3, r3, #7
 4203 2090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4204 2092 0133     		adds	r3, r3, #1
 4205 2094 07F5AF52 		add	r2, r7, #5600
 4206 2098 02F10702 		add	r2, r2, #7
 4207 209c 1370     		strb	r3, [r2]
 4208              	.L177:
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4209              		.loc 1 613 0 is_stmt 0 discriminator 1
 4210 209e 07F5AF53 		add	r3, r7, #5600
 4211 20a2 03F10703 		add	r3, r3, #7
 4212 20a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4213 20a8 07F5AF53 		add	r3, r7, #5600
 4214 20ac 03F10303 		add	r3, r3, #3
 4215 20b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4216 20b2 9A42     		cmp	r2, r3
 4217 20b4 BED3     		bcc	.L178
 616:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4218              		.loc 1 616 0 is_stmt 1
 4219 20b6 07F5AE53 		add	r3, r7, #5568
 4220 20ba 03F11E03 		add	r3, r3, #30
 4221 20be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4222 20c0 3049     		ldr	r1, .L290
 4223 20c2 1346     		mov	r3, r2
 4224 20c4 DB00     		lsls	r3, r3, #3
 4225 20c6 9B1A     		subs	r3, r3, r2
 4226 20c8 1B01     		lsls	r3, r3, #4
 4227 20ca 0B44     		add	r3, r3, r1
 4228 20cc DC33     		adds	r3, r3, #220
 4229 20ce 1B68     		ldr	r3, [r3]
 4230 20d0 1846     		mov	r0, r3
 4231 20d2 FFF7FEFF 		bl	__aeabi_i2f
 4232 20d6 0346     		mov	r3, r0
 4233 20d8 4FF08F41 		mov	r1, #1199570944
 4234 20dc 1846     		mov	r0, r3
 4235 20de FFF7FEFF 		bl	__aeabi_fdiv
 4236 20e2 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 104


 4237 20e4 1A46     		mov	r2, r3
 4238 20e6 07F12803 		add	r3, r7, #40
 4239 20ea 083B     		subs	r3, r3, #8
 4240 20ec 1A60     		str	r2, [r3]	@ float
 617:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4241              		.loc 1 617 0
 4242 20ee 0023     		movs	r3, #0
 4243 20f0 07F5AF52 		add	r2, r7, #5600
 4244 20f4 02F10702 		add	r2, r2, #7
 4245 20f8 1370     		strb	r3, [r2]
 4246 20fa 35E0     		b	.L179
 4247              	.L180:
 618:..\src/command_processing.c ****                             }
 4248              		.loc 1 618 0 discriminator 3
 4249 20fc 07F5AF53 		add	r3, r7, #5600
 4250 2100 03F10503 		add	r3, r3, #5
 4251 2104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4252 2106 3222     		movs	r2, #50
 4253 2108 02FB03F3 		mul	r3, r2, r3
 4254 210c 1A1D     		adds	r2, r3, #4
 4255 210e 07F5AF53 		add	r3, r7, #5600
 4256 2112 03F10303 		add	r3, r3, #3
 4257 2116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4258 2118 5B00     		lsls	r3, r3, #1
 4259 211a 1A44     		add	r2, r2, r3
 4260 211c 07F5AF53 		add	r3, r7, #5600
 4261 2120 03F10303 		add	r3, r3, #3
 4262 2124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4263 2126 1A44     		add	r2, r2, r3
 4264 2128 07F5AF53 		add	r3, r7, #5600
 4265 212c 03F10703 		add	r3, r3, #7
 4266 2130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4267 2132 D31A     		subs	r3, r2, r3
 4268 2134 5A1E     		subs	r2, r3, #1
 4269 2136 07F5AF53 		add	r3, r7, #5600
 4270 213a 03F10703 		add	r3, r3, #7
 4271 213e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4272 2140 07F12803 		add	r3, r7, #40
 4273 2144 083B     		subs	r3, r3, #8
 4274 2146 0B44     		add	r3, r3, r1
 4275 2148 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4276 214a 07F16803 		add	r3, r7, #104
 4277 214e 103B     		subs	r3, r3, #16
 4278 2150 9954     		strb	r1, [r3, r2]
 617:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4279              		.loc 1 617 0 discriminator 3
 4280 2152 07F5AF53 		add	r3, r7, #5600
 4281 2156 03F10703 		add	r3, r3, #7
 4282 215a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4283 215c 0133     		adds	r3, r3, #1
 4284 215e 07F5AF52 		add	r2, r7, #5600
 4285 2162 02F10702 		add	r2, r2, #7
 4286 2166 1370     		strb	r3, [r2]
 4287              	.L179:
 617:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4288              		.loc 1 617 0 is_stmt 0 discriminator 1
 4289 2168 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 105


 4290 216c 03F10703 		add	r3, r3, #7
 4291 2170 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4292 2172 07F5AF53 		add	r3, r7, #5600
 4293 2176 03F10303 		add	r3, r3, #3
 4294 217a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4295 217c 9A42     		cmp	r2, r3
 4296 217e BDD3     		bcc	.L180
 4297              		.loc 1 621 0 is_stmt 1
 4298 2180 7BE1     		b	.L105
 4299              	.L291:
 4300 2182 00BF     		.align	2
 4301              	.L290:
 4302 2184 00000000 		.word	c_mem
 4303              	.L115:
 622:..\src/command_processing.c **** 
 623:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 624:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4304              		.loc 1 624 0
 4305 2188 07F5AE53 		add	r3, r7, #5568
 4306 218c 03F11E03 		add	r3, r3, #30
 4307 2190 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4308 2192 B749     		ldr	r1, .L292
 4309 2194 1346     		mov	r3, r2
 4310 2196 DB00     		lsls	r3, r3, #3
 4311 2198 9B1A     		subs	r3, r3, r2
 4312 219a 1B01     		lsls	r3, r3, #4
 4313 219c 0B44     		add	r3, r3, r1
 4314 219e 03F58873 		add	r3, r3, #272
 4315 21a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4316 21a4 1846     		mov	r0, r3
 4317 21a6 07F5AF53 		add	r3, r7, #5600
 4318 21aa 03F10703 		add	r3, r3, #7
 4319 21ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4320 21b0 B049     		ldr	r1, .L292+4
 4321 21b2 0346     		mov	r3, r0
 4322 21b4 5B00     		lsls	r3, r3, #1
 4323 21b6 0344     		add	r3, r3, r0
 4324 21b8 9B00     		lsls	r3, r3, #2
 4325 21ba 1344     		add	r3, r3, r2
 4326 21bc 6633     		adds	r3, r3, #102
 4327 21be 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4328 21c2 07F5AE53 		add	r3, r7, #5568
 4329 21c6 03F11E03 		add	r3, r3, #30
 4330 21ca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4331 21cc A848     		ldr	r0, .L292
 4332 21ce 1346     		mov	r3, r2
 4333 21d0 DB00     		lsls	r3, r3, #3
 4334 21d2 9B1A     		subs	r3, r3, r2
 4335 21d4 1B01     		lsls	r3, r3, #4
 4336 21d6 0344     		add	r3, r3, r0
 4337 21d8 03F58873 		add	r3, r3, #272
 4338 21dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4339 21de 1C46     		mov	r4, r3
 4340 21e0 07F5AF53 		add	r3, r7, #5600
 4341 21e4 03F10703 		add	r3, r3, #7
 4342 21e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4343 21ea A248     		ldr	r0, .L292+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 106


 4344 21ec 2346     		mov	r3, r4
 4345 21ee 5B00     		lsls	r3, r3, #1
 4346 21f0 2344     		add	r3, r3, r4
 4347 21f2 1B01     		lsls	r3, r3, #4
 4348 21f4 0344     		add	r3, r3, r0
 4349 21f6 1344     		add	r3, r3, r2
 4350 21f8 03F29513 		addw	r3, r3, #405
 4351 21fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4352 21fe 41FA03F3 		asr	r3, r1, r3
 4353 2202 1AB2     		sxth	r2, r3
 4354 2204 07F12803 		add	r3, r7, #40
 4355 2208 0A3B     		subs	r3, r3, #10
 4356 220a 1A80     		strh	r2, [r3]	@ movhi
 625:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4357              		.loc 1 625 0
 4358 220c 0023     		movs	r3, #0
 4359 220e 07F5AF52 		add	r2, r7, #5600
 4360 2212 02F10602 		add	r2, r2, #6
 4361 2216 1370     		strb	r3, [r2]
 4362 2218 3BE0     		b	.L181
 4363              	.L182:
 626:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4364              		.loc 1 626 0 discriminator 3
 4365 221a 07F5AF53 		add	r3, r7, #5600
 4366 221e 03F10503 		add	r3, r3, #5
 4367 2222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4368 2224 3222     		movs	r2, #50
 4369 2226 02FB03F3 		mul	r3, r2, r3
 4370 222a 1A1D     		adds	r2, r3, #4
 4371 222c 07F5AF53 		add	r3, r7, #5600
 4372 2230 03F10703 		add	r3, r3, #7
 4373 2234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4374 2236 07F5AF51 		add	r1, r7, #5600
 4375 223a 01F10301 		add	r1, r1, #3
 4376 223e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4377 2240 01FB03F3 		mul	r3, r1, r3
 4378 2244 1A44     		add	r2, r2, r3
 4379 2246 07F5AF53 		add	r3, r7, #5600
 4380 224a 03F10303 		add	r3, r3, #3
 4381 224e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4382 2250 1A44     		add	r2, r2, r3
 4383 2252 07F5AF53 		add	r3, r7, #5600
 4384 2256 03F10603 		add	r3, r3, #6
 4385 225a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4386 225c D31A     		subs	r3, r2, r3
 4387 225e 5A1E     		subs	r2, r3, #1
 4388 2260 07F5AF53 		add	r3, r7, #5600
 4389 2264 03F10603 		add	r3, r3, #6
 4390 2268 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4391 226a 07F12803 		add	r3, r7, #40
 4392 226e 0A3B     		subs	r3, r3, #10
 4393 2270 0B44     		add	r3, r3, r1
 4394 2272 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4395 2274 07F16803 		add	r3, r7, #104
 4396 2278 103B     		subs	r3, r3, #16
 4397 227a 9954     		strb	r1, [r3, r2]
 625:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 107


 4398              		.loc 1 625 0 discriminator 3
 4399 227c 07F5AF53 		add	r3, r7, #5600
 4400 2280 03F10603 		add	r3, r3, #6
 4401 2284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4402 2286 0133     		adds	r3, r3, #1
 4403 2288 07F5AF52 		add	r2, r7, #5600
 4404 228c 02F10602 		add	r2, r2, #6
 4405 2290 1370     		strb	r3, [r2]
 4406              	.L181:
 625:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4407              		.loc 1 625 0 is_stmt 0 discriminator 1
 4408 2292 07F5AF53 		add	r3, r7, #5600
 4409 2296 03F10603 		add	r3, r3, #6
 4410 229a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4411 229c 07F5AF53 		add	r3, r7, #5600
 4412 22a0 03F10303 		add	r3, r3, #3
 4413 22a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4414 22a6 9A42     		cmp	r2, r3
 4415 22a8 B7D3     		bcc	.L182
 627:..\src/command_processing.c ****                         }
 628:..\src/command_processing.c ****                         break;
 4416              		.loc 1 628 0 is_stmt 1
 4417 22aa E6E0     		b	.L105
 4418              	.L116:
 629:..\src/command_processing.c ****                 
 630:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 631:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4419              		.loc 1 631 0
 4420 22ac 07F5AE53 		add	r3, r7, #5568
 4421 22b0 03F11E03 		add	r3, r3, #30
 4422 22b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4423 22b6 6F49     		ldr	r1, .L292+4
 4424 22b8 1346     		mov	r3, r2
 4425 22ba DB00     		lsls	r3, r3, #3
 4426 22bc 9B1A     		subs	r3, r3, r2
 4427 22be 1B01     		lsls	r3, r3, #4
 4428 22c0 0B44     		add	r3, r3, r1
 4429 22c2 E433     		adds	r3, r3, #228
 4430 22c4 1968     		ldr	r1, [r3]
 4431 22c6 07F5AE53 		add	r3, r7, #5568
 4432 22ca 03F11E03 		add	r3, r3, #30
 4433 22ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4434 22d0 6748     		ldr	r0, .L292
 4435 22d2 1346     		mov	r3, r2
 4436 22d4 DB00     		lsls	r3, r3, #3
 4437 22d6 9B1A     		subs	r3, r3, r2
 4438 22d8 1B01     		lsls	r3, r3, #4
 4439 22da 0344     		add	r3, r3, r0
 4440 22dc 03F58873 		add	r3, r3, #272
 4441 22e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4442 22e2 1846     		mov	r0, r3
 4443 22e4 634A     		ldr	r2, .L292+4
 4444 22e6 0346     		mov	r3, r0
 4445 22e8 5B00     		lsls	r3, r3, #1
 4446 22ea 0344     		add	r3, r3, r0
 4447 22ec 1B01     		lsls	r3, r3, #4
 4448 22ee 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 108


 4449 22f0 03F29513 		addw	r3, r3, #405
 4450 22f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4451 22f6 41FA03F2 		asr	r2, r1, r3
 4452 22fa 07F12803 		add	r3, r7, #40
 4453 22fe 103B     		subs	r3, r3, #16
 4454 2300 1A60     		str	r2, [r3]
 632:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4455              		.loc 1 632 0
 4456 2302 0023     		movs	r3, #0
 4457 2304 07F5AF52 		add	r2, r7, #5600
 4458 2308 02F10602 		add	r2, r2, #6
 4459 230c 1370     		strb	r3, [r2]
 4460 230e 2EE0     		b	.L183
 4461              	.L184:
 633:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4462              		.loc 1 633 0 discriminator 3
 4463 2310 07F5AF53 		add	r3, r7, #5600
 4464 2314 03F10503 		add	r3, r3, #5
 4465 2318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4466 231a 3222     		movs	r2, #50
 4467 231c 02FB03F3 		mul	r3, r2, r3
 4468 2320 1A1D     		adds	r2, r3, #4
 4469 2322 07F5AF53 		add	r3, r7, #5600
 4470 2326 03F10303 		add	r3, r3, #3
 4471 232a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4472 232c 1A44     		add	r2, r2, r3
 4473 232e 07F5AF53 		add	r3, r7, #5600
 4474 2332 03F10603 		add	r3, r3, #6
 4475 2336 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4476 2338 D31A     		subs	r3, r2, r3
 4477 233a 5A1E     		subs	r2, r3, #1
 4478 233c 07F5AF53 		add	r3, r7, #5600
 4479 2340 03F10603 		add	r3, r3, #6
 4480 2344 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4481 2346 07F12803 		add	r3, r7, #40
 4482 234a 103B     		subs	r3, r3, #16
 4483 234c 0B44     		add	r3, r3, r1
 4484 234e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4485 2350 07F16803 		add	r3, r7, #104
 4486 2354 103B     		subs	r3, r3, #16
 4487 2356 9954     		strb	r1, [r3, r2]
 632:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4488              		.loc 1 632 0 discriminator 3
 4489 2358 07F5AF53 		add	r3, r7, #5600
 4490 235c 03F10603 		add	r3, r3, #6
 4491 2360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4492 2362 0133     		adds	r3, r3, #1
 4493 2364 07F5AF52 		add	r2, r7, #5600
 4494 2368 02F10602 		add	r2, r2, #6
 4495 236c 1370     		strb	r3, [r2]
 4496              	.L183:
 632:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4497              		.loc 1 632 0 is_stmt 0 discriminator 1
 4498 236e 07F5AF53 		add	r3, r7, #5600
 4499 2372 03F10603 		add	r3, r3, #6
 4500 2376 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4501 2378 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 109


 4502 237c 03F10303 		add	r3, r3, #3
 4503 2380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4504 2382 9A42     		cmp	r2, r3
 4505 2384 C4D3     		bcc	.L184
 634:..\src/command_processing.c ****                         }
 635:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4506              		.loc 1 635 0 is_stmt 1
 4507 2386 07F5AE53 		add	r3, r7, #5568
 4508 238a 03F11E03 		add	r3, r3, #30
 4509 238e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4510 2390 3849     		ldr	r1, .L292+4
 4511 2392 1346     		mov	r3, r2
 4512 2394 DB00     		lsls	r3, r3, #3
 4513 2396 9B1A     		subs	r3, r3, r2
 4514 2398 1B01     		lsls	r3, r3, #4
 4515 239a 0B44     		add	r3, r3, r1
 4516 239c E833     		adds	r3, r3, #232
 4517 239e 1968     		ldr	r1, [r3]
 4518 23a0 07F5AE53 		add	r3, r7, #5568
 4519 23a4 03F11E03 		add	r3, r3, #30
 4520 23a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4521 23aa 3148     		ldr	r0, .L292
 4522 23ac 1346     		mov	r3, r2
 4523 23ae DB00     		lsls	r3, r3, #3
 4524 23b0 9B1A     		subs	r3, r3, r2
 4525 23b2 1B01     		lsls	r3, r3, #4
 4526 23b4 0344     		add	r3, r3, r0
 4527 23b6 03F58873 		add	r3, r3, #272
 4528 23ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4529 23bc 1846     		mov	r0, r3
 4530 23be 2D4A     		ldr	r2, .L292+4
 4531 23c0 0346     		mov	r3, r0
 4532 23c2 5B00     		lsls	r3, r3, #1
 4533 23c4 0344     		add	r3, r3, r0
 4534 23c6 1B01     		lsls	r3, r3, #4
 4535 23c8 1344     		add	r3, r3, r2
 4536 23ca 03F29513 		addw	r3, r3, #405
 4537 23ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4538 23d0 41FA03F2 		asr	r2, r1, r3
 4539 23d4 07F12803 		add	r3, r7, #40
 4540 23d8 103B     		subs	r3, r3, #16
 4541 23da 1A60     		str	r2, [r3]
 636:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4542              		.loc 1 636 0
 4543 23dc 0023     		movs	r3, #0
 4544 23de 07F5AF52 		add	r2, r7, #5600
 4545 23e2 02F10602 		add	r2, r2, #6
 4546 23e6 1370     		strb	r3, [r2]
 4547 23e8 34E0     		b	.L185
 4548              	.L186:
 637:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4549              		.loc 1 637 0 discriminator 3
 4550 23ea 07F5AF53 		add	r3, r7, #5600
 4551 23ee 03F10503 		add	r3, r3, #5
 4552 23f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4553 23f4 3222     		movs	r2, #50
 4554 23f6 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 110


 4555 23fa 1A1D     		adds	r2, r3, #4
 4556 23fc 07F5AF53 		add	r3, r7, #5600
 4557 2400 03F10303 		add	r3, r3, #3
 4558 2404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4559 2406 1A44     		add	r2, r2, r3
 4560 2408 07F5AF53 		add	r3, r7, #5600
 4561 240c 03F10303 		add	r3, r3, #3
 4562 2410 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4563 2412 1A44     		add	r2, r2, r3
 4564 2414 07F5AF53 		add	r3, r7, #5600
 4565 2418 03F10603 		add	r3, r3, #6
 4566 241c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4567 241e D31A     		subs	r3, r2, r3
 4568 2420 5A1E     		subs	r2, r3, #1
 4569 2422 07F5AF53 		add	r3, r7, #5600
 4570 2426 03F10603 		add	r3, r3, #6
 4571 242a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4572 242c 07F12803 		add	r3, r7, #40
 4573 2430 103B     		subs	r3, r3, #16
 4574 2432 0B44     		add	r3, r3, r1
 4575 2434 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4576 2436 07F16803 		add	r3, r7, #104
 4577 243a 103B     		subs	r3, r3, #16
 4578 243c 9954     		strb	r1, [r3, r2]
 636:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4579              		.loc 1 636 0 discriminator 3
 4580 243e 07F5AF53 		add	r3, r7, #5600
 4581 2442 03F10603 		add	r3, r3, #6
 4582 2446 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4583 2448 0133     		adds	r3, r3, #1
 4584 244a 07F5AF52 		add	r2, r7, #5600
 4585 244e 02F10602 		add	r2, r2, #6
 4586 2452 1370     		strb	r3, [r2]
 4587              	.L185:
 636:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4588              		.loc 1 636 0 is_stmt 0 discriminator 1
 4589 2454 07F5AF53 		add	r3, r7, #5600
 4590 2458 03F10603 		add	r3, r3, #6
 4591 245c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4592 245e 07F5AF53 		add	r3, r7, #5600
 4593 2462 03F10303 		add	r3, r3, #3
 4594 2466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4595 2468 9A42     		cmp	r2, r3
 4596 246a BED3     		bcc	.L186
 638:..\src/command_processing.c ****                         }
 639:..\src/command_processing.c ****                         break;
 4597              		.loc 1 639 0 is_stmt 1
 4598 246c 05E0     		b	.L105
 4599              	.L293:
 4600 246e 00BF     		.align	2
 4601              	.L292:
 4602 2470 00000000 		.word	g_mem
 4603 2474 00000000 		.word	c_mem
 4604              	.L272:
 640:..\src/command_processing.c ****                         
 641:..\src/command_processing.c ****                     default:
 642:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 111


 4605              		.loc 1 642 0
 4606 2478 00BF     		nop
 4607              	.L105:
 643:..\src/command_processing.c ****                 }
 644:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 645:..\src/command_processing.c ****                         
 646:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 647:..\src/command_processing.c ****         }
 648:..\src/command_processing.c ****         
 649:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4608              		.loc 1 649 0
 4609 247a 07F5AF53 		add	r3, r7, #5600
 4610 247e 03F10503 		add	r3, r3, #5
 4611 2482 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4612 2484 9B00     		lsls	r3, r3, #2
 4613 2486 07F5B052 		add	r2, r7, #5632
 4614 248a 02F10402 		add	r2, r2, #4
 4615 248e 1268     		ldr	r2, [r2]
 4616 2490 1344     		add	r3, r3, r2
 4617 2492 1A68     		ldr	r2, [r3]
 4618 2494 07F12803 		add	r3, r7, #40
 4619 2498 043B     		subs	r3, r3, #4
 4620 249a 1146     		mov	r1, r2
 4621 249c 1846     		mov	r0, r3
 4622 249e FFF7FEFF 		bl	sprintf
 650:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4623              		.loc 1 650 0
 4624 24a2 07F12803 		add	r3, r7, #40
 4625 24a6 043B     		subs	r3, r3, #4
 4626 24a8 1846     		mov	r0, r3
 4627 24aa FFF7FEFF 		bl	strlen
 4628 24ae 0346     		mov	r3, r0
 4629 24b0 07F5AF52 		add	r2, r7, #5600
 4630 24b4 02F10202 		add	r2, r2, #2
 4631 24b8 1370     		strb	r3, [r2]
 651:..\src/command_processing.c ****         
 652:..\src/command_processing.c ****         // Parameters with a menu
 653:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4632              		.loc 1 653 0
 4633 24ba 07F5AF53 		add	r3, r7, #5600
 4634 24be 03F10503 		add	r3, r3, #5
 4635 24c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4636 24c4 07F10802 		add	r2, r7, #8
 4637 24c8 1268     		ldr	r2, [r2]
 4638 24ca 1344     		add	r3, r3, r2
 4639 24cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4640 24ce 002B     		cmp	r3, #0
 4641 24d0 40F0C484 		bne	.L187
 654:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4642              		.loc 1 654 0
 4643 24d4 07F5AF53 		add	r3, r7, #5600
 4644 24d8 03F10403 		add	r3, r3, #4
 4645 24dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4646 24de 07F5B052 		add	r2, r7, #5632
 4647 24e2 1268     		ldr	r2, [r2]
 4648 24e4 1344     		add	r3, r3, r2
 4649 24e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 112


 4650 24e8 013B     		subs	r3, r3, #1
 4651 24ea 0B2B     		cmp	r3, #11
 4652 24ec 00F2A884 		bhi	.L188
 4653 24f0 01A2     		adr	r2, .L190
 4654 24f2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4655 24f6 00BF     		.p2align 2
 4656              	.L190:
 4657 24f8 29250000 		.word	.L189+1
 4658 24fc D3260000 		.word	.L191+1
 4659 2500 A9270000 		.word	.L192+1
 4660 2504 FD270000 		.word	.L193+1
 4661 2508 61280000 		.word	.L194+1
 4662 250c BD280000 		.word	.L195+1
 4663 2510 D9290000 		.word	.L196+1
 4664 2514 612A0000 		.word	.L197+1
 4665 2518 F52A0000 		.word	.L198+1
 4666 251c 6D2B0000 		.word	.L199+1
 4667 2520 7F2C0000 		.word	.L200+1
 4668 2524 BF2D0000 		.word	.L201+1
 4669              		.p2align 1
 4670              	.L189:
 655:..\src/command_processing.c ****                 case 1:     // input mode menu
 656:..\src/command_processing.c ****                     switch(*m_addr) {
 4671              		.loc 1 656 0
 4672 2528 07F5AE53 		add	r3, r7, #5568
 4673 252c 03F11803 		add	r3, r3, #24
 4674 2530 1B68     		ldr	r3, [r3]
 4675 2532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4676 2534 072B     		cmp	r3, #7
 4677 2536 00F27C84 		bhi	.L273
 4678 253a 01A2     		adr	r2, .L204
 4679 253c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4680              		.p2align 2
 4681              	.L204:
 4682 2540 61250000 		.word	.L203+1
 4683 2544 85250000 		.word	.L205+1
 4684 2548 AB250000 		.word	.L206+1
 4685 254c D9250000 		.word	.L207+1
 4686 2550 05260000 		.word	.L208+1
 4687 2554 2F260000 		.word	.L209+1
 4688 2558 63260000 		.word	.L210+1
 4689 255c 8D260000 		.word	.L211+1
 4690              		.p2align 1
 4691              	.L203:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 658:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4692              		.loc 1 658 0
 4693 2560 07F12803 		add	r3, r7, #40
 4694 2564 043B     		subs	r3, r3, #4
 4695 2566 1846     		mov	r0, r3
 4696 2568 FFF7FEFF 		bl	strlen
 4697 256c 0346     		mov	r3, r0
 4698 256e 1A46     		mov	r2, r3
 4699 2570 07F12803 		add	r3, r7, #40
 4700 2574 043B     		subs	r3, r3, #4
 4701 2576 1344     		add	r3, r3, r2
 4702 2578 DA4A     		ldr	r2, .L294
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 113


 4703 257a 1068     		ldr	r0, [r2]	@ unaligned
 4704 257c 1860     		str	r0, [r3]	@ unaligned
 4705 257e 1279     		ldrb	r2, [r2, #4]
 4706 2580 1A71     		strb	r2, [r3, #4]
 659:..\src/command_processing.c ****                         break;
 4707              		.loc 1 659 0
 4708 2582 A5E0     		b	.L202
 4709              	.L205:
 660:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 661:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4710              		.loc 1 661 0
 4711 2584 07F12803 		add	r3, r7, #40
 4712 2588 043B     		subs	r3, r3, #4
 4713 258a 1846     		mov	r0, r3
 4714 258c FFF7FEFF 		bl	strlen
 4715 2590 0346     		mov	r3, r0
 4716 2592 1A46     		mov	r2, r3
 4717 2594 07F12803 		add	r3, r7, #40
 4718 2598 043B     		subs	r3, r3, #4
 4719 259a 1344     		add	r3, r3, r2
 4720 259c D249     		ldr	r1, .L294+4
 4721 259e 1A46     		mov	r2, r3
 4722 25a0 0B46     		mov	r3, r1
 4723 25a2 03CB     		ldmia	r3!, {r0, r1}
 4724 25a4 1060     		str	r0, [r2]	@ unaligned
 4725 25a6 5160     		str	r1, [r2, #4]	@ unaligned
 662:..\src/command_processing.c ****                         break;
 4726              		.loc 1 662 0
 4727 25a8 92E0     		b	.L202
 4728              	.L206:
 663:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 664:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4729              		.loc 1 664 0
 4730 25aa 07F12803 		add	r3, r7, #40
 4731 25ae 043B     		subs	r3, r3, #4
 4732 25b0 1846     		mov	r0, r3
 4733 25b2 FFF7FEFF 		bl	strlen
 4734 25b6 0346     		mov	r3, r0
 4735 25b8 1A46     		mov	r2, r3
 4736 25ba 07F12803 		add	r3, r7, #40
 4737 25be 043B     		subs	r3, r3, #4
 4738 25c0 1344     		add	r3, r3, r2
 4739 25c2 CA4A     		ldr	r2, .L294+8
 4740 25c4 1D46     		mov	r5, r3
 4741 25c6 1446     		mov	r4, r2
 4742 25c8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4743 25ca 2860     		str	r0, [r5]	@ unaligned
 4744 25cc 6960     		str	r1, [r5, #4]	@ unaligned
 4745 25ce AA60     		str	r2, [r5, #8]	@ unaligned
 4746 25d0 EB60     		str	r3, [r5, #12]	@ unaligned
 4747 25d2 2388     		ldrh	r3, [r4]	@ unaligned
 4748 25d4 2B82     		strh	r3, [r5, #16]	@ unaligned
 665:..\src/command_processing.c ****                         break;
 4749              		.loc 1 665 0
 4750 25d6 7BE0     		b	.L202
 4751              	.L207:
 666:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 114


 667:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4752              		.loc 1 667 0
 4753 25d8 07F12803 		add	r3, r7, #40
 4754 25dc 043B     		subs	r3, r3, #4
 4755 25de 1846     		mov	r0, r3
 4756 25e0 FFF7FEFF 		bl	strlen
 4757 25e4 0346     		mov	r3, r0
 4758 25e6 1A46     		mov	r2, r3
 4759 25e8 07F12803 		add	r3, r7, #40
 4760 25ec 043B     		subs	r3, r3, #4
 4761 25ee 1344     		add	r3, r3, r2
 4762 25f0 BF4A     		ldr	r2, .L294+12
 4763 25f2 1C46     		mov	r4, r3
 4764 25f4 1346     		mov	r3, r2
 4765 25f6 07CB     		ldmia	r3!, {r0, r1, r2}
 4766 25f8 2060     		str	r0, [r4]	@ unaligned
 4767 25fa 6160     		str	r1, [r4, #4]	@ unaligned
 4768 25fc A260     		str	r2, [r4, #8]	@ unaligned
 4769 25fe 1B88     		ldrh	r3, [r3]	@ unaligned
 4770 2600 A381     		strh	r3, [r4, #12]	@ unaligned
 668:..\src/command_processing.c ****                         break;
 4771              		.loc 1 668 0
 4772 2602 65E0     		b	.L202
 4773              	.L208:
 669:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 670:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4774              		.loc 1 670 0
 4775 2604 07F12803 		add	r3, r7, #40
 4776 2608 043B     		subs	r3, r3, #4
 4777 260a 1846     		mov	r0, r3
 4778 260c FFF7FEFF 		bl	strlen
 4779 2610 0346     		mov	r3, r0
 4780 2612 1A46     		mov	r2, r3
 4781 2614 07F12803 		add	r3, r7, #40
 4782 2618 043B     		subs	r3, r3, #4
 4783 261a 1344     		add	r3, r3, r2
 4784 261c B549     		ldr	r1, .L294+16
 4785 261e 1A46     		mov	r2, r3
 4786 2620 0B46     		mov	r3, r1
 4787 2622 03CB     		ldmia	r3!, {r0, r1}
 4788 2624 1060     		str	r0, [r2]	@ unaligned
 4789 2626 5160     		str	r1, [r2, #4]	@ unaligned
 4790 2628 1B88     		ldrh	r3, [r3]	@ unaligned
 4791 262a 1381     		strh	r3, [r2, #8]	@ unaligned
 671:..\src/command_processing.c ****                         break;
 4792              		.loc 1 671 0
 4793 262c 50E0     		b	.L202
 4794              	.L209:
 672:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 673:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4795              		.loc 1 673 0
 4796 262e 07F12803 		add	r3, r7, #40
 4797 2632 043B     		subs	r3, r3, #4
 4798 2634 1846     		mov	r0, r3
 4799 2636 FFF7FEFF 		bl	strlen
 4800 263a 0346     		mov	r3, r0
 4801 263c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 115


 4802 263e 07F12803 		add	r3, r7, #40
 4803 2642 043B     		subs	r3, r3, #4
 4804 2644 1344     		add	r3, r3, r2
 4805 2646 AC4A     		ldr	r2, .L294+20
 4806 2648 1D46     		mov	r5, r3
 4807 264a 1446     		mov	r4, r2
 4808 264c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4809 264e 2860     		str	r0, [r5]	@ unaligned
 4810 2650 6960     		str	r1, [r5, #4]	@ unaligned
 4811 2652 AA60     		str	r2, [r5, #8]	@ unaligned
 4812 2654 EB60     		str	r3, [r5, #12]	@ unaligned
 4813 2656 2388     		ldrh	r3, [r4]	@ unaligned
 4814 2658 A278     		ldrb	r2, [r4, #2]
 4815 265a 2B82     		strh	r3, [r5, #16]	@ unaligned
 4816 265c 1346     		mov	r3, r2
 4817 265e AB74     		strb	r3, [r5, #18]
 674:..\src/command_processing.c ****                         break;
 4818              		.loc 1 674 0
 4819 2660 36E0     		b	.L202
 4820              	.L210:
 675:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 676:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 4821              		.loc 1 676 0
 4822 2662 07F12803 		add	r3, r7, #40
 4823 2666 043B     		subs	r3, r3, #4
 4824 2668 1846     		mov	r0, r3
 4825 266a FFF7FEFF 		bl	strlen
 4826 266e 0346     		mov	r3, r0
 4827 2670 1A46     		mov	r2, r3
 4828 2672 07F12803 		add	r3, r7, #40
 4829 2676 043B     		subs	r3, r3, #4
 4830 2678 1344     		add	r3, r3, r2
 4831 267a A049     		ldr	r1, .L294+24
 4832 267c 1A46     		mov	r2, r3
 4833 267e 0B46     		mov	r3, r1
 4834 2680 03CB     		ldmia	r3!, {r0, r1}
 4835 2682 1060     		str	r0, [r2]	@ unaligned
 4836 2684 5160     		str	r1, [r2, #4]	@ unaligned
 4837 2686 1B88     		ldrh	r3, [r3]	@ unaligned
 4838 2688 1381     		strh	r3, [r2, #8]	@ unaligned
 677:..\src/command_processing.c ****                         break;
 4839              		.loc 1 677 0
 4840 268a 21E0     		b	.L202
 4841              	.L211:
 678:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 679:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4842              		.loc 1 679 0
 4843 268c 07F12803 		add	r3, r7, #40
 4844 2690 043B     		subs	r3, r3, #4
 4845 2692 1846     		mov	r0, r3
 4846 2694 FFF7FEFF 		bl	strlen
 4847 2698 0346     		mov	r3, r0
 4848 269a 1A46     		mov	r2, r3
 4849 269c 07F12803 		add	r3, r7, #40
 4850 26a0 043B     		subs	r3, r3, #4
 4851 26a2 1344     		add	r3, r3, r2
 4852 26a4 964A     		ldr	r2, .L294+28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 116


 4853 26a6 1446     		mov	r4, r2
 4854 26a8 9E46     		mov	lr, r3
 4855 26aa 04F1200C 		add	ip, r4, #32
 4856              	.L212:
 4857 26ae 7546     		mov	r5, lr
 4858 26b0 2646     		mov	r6, r4
 4859 26b2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4860 26b4 2860     		str	r0, [r5]	@ unaligned
 4861 26b6 6960     		str	r1, [r5, #4]	@ unaligned
 4862 26b8 AA60     		str	r2, [r5, #8]	@ unaligned
 4863 26ba EB60     		str	r3, [r5, #12]	@ unaligned
 4864 26bc 1034     		adds	r4, r4, #16
 4865 26be 0EF1100E 		add	lr, lr, #16
 4866 26c2 6445     		cmp	r4, ip
 4867 26c4 F3D1     		bne	.L212
 4868 26c6 7246     		mov	r2, lr
 4869 26c8 2346     		mov	r3, r4
 4870 26ca 1B88     		ldrh	r3, [r3]	@ unaligned
 4871 26cc 1380     		strh	r3, [r2]	@ unaligned
 680:..\src/command_processing.c ****                         break;
 4872              		.loc 1 680 0
 4873 26ce 00BF     		nop
 4874              	.L202:
 681:..\src/command_processing.c ****                     }
 682:..\src/command_processing.c ****                     break;
 4875              		.loc 1 682 0
 4876 26d0 AFE3     		b	.L273
 4877              	.L191:
 683:..\src/command_processing.c ****                 case 2:     // control mode menu
 684:..\src/command_processing.c ****                     switch(*m_addr){
 4878              		.loc 1 684 0
 4879 26d2 07F5AE53 		add	r3, r7, #5568
 4880 26d6 03F11803 		add	r3, r3, #24
 4881 26da 1B68     		ldr	r3, [r3]
 4882 26dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4883 26de 032B     		cmp	r3, #3
 4884 26e0 00F2A983 		bhi	.L274
 4885 26e4 01A2     		adr	r2, .L215
 4886 26e6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4887 26ea 00BF     		.p2align 2
 4888              	.L215:
 4889 26ec FD260000 		.word	.L214+1
 4890 26f0 27270000 		.word	.L216+1
 4891 26f4 4B270000 		.word	.L217+1
 4892 26f8 75270000 		.word	.L218+1
 4893              		.p2align 1
 4894              	.L214:
 685:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 686:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4895              		.loc 1 686 0
 4896 26fc 07F12803 		add	r3, r7, #40
 4897 2700 043B     		subs	r3, r3, #4
 4898 2702 1846     		mov	r0, r3
 4899 2704 FFF7FEFF 		bl	strlen
 4900 2708 0346     		mov	r3, r0
 4901 270a 1A46     		mov	r2, r3
 4902 270c 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 117


 4903 2710 043B     		subs	r3, r3, #4
 4904 2712 1344     		add	r3, r3, r2
 4905 2714 7B49     		ldr	r1, .L294+32
 4906 2716 1A46     		mov	r2, r3
 4907 2718 0B46     		mov	r3, r1
 4908 271a 03CB     		ldmia	r3!, {r0, r1}
 4909 271c 1060     		str	r0, [r2]	@ unaligned
 4910 271e 5160     		str	r1, [r2, #4]	@ unaligned
 4911 2720 1B88     		ldrh	r3, [r3]	@ unaligned
 4912 2722 1381     		strh	r3, [r2, #8]	@ unaligned
 687:..\src/command_processing.c ****                         break;
 4913              		.loc 1 687 0
 4914 2724 3FE0     		b	.L213
 4915              	.L216:
 688:..\src/command_processing.c ****                         case CONTROL_PWM:
 689:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4916              		.loc 1 689 0
 4917 2726 07F12803 		add	r3, r7, #40
 4918 272a 043B     		subs	r3, r3, #4
 4919 272c 1846     		mov	r0, r3
 4920 272e FFF7FEFF 		bl	strlen
 4921 2732 0346     		mov	r3, r0
 4922 2734 1A46     		mov	r2, r3
 4923 2736 07F12803 		add	r3, r7, #40
 4924 273a 043B     		subs	r3, r3, #4
 4925 273c 1344     		add	r3, r3, r2
 4926 273e 724A     		ldr	r2, .L294+36
 4927 2740 1068     		ldr	r0, [r2]	@ unaligned
 4928 2742 1860     		str	r0, [r3]	@ unaligned
 4929 2744 1279     		ldrb	r2, [r2, #4]
 4930 2746 1A71     		strb	r2, [r3, #4]
 690:..\src/command_processing.c ****                         break;
 4931              		.loc 1 690 0
 4932 2748 2DE0     		b	.L213
 4933              	.L217:
 691:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 692:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4934              		.loc 1 692 0
 4935 274a 07F12803 		add	r3, r7, #40
 4936 274e 043B     		subs	r3, r3, #4
 4937 2750 1846     		mov	r0, r3
 4938 2752 FFF7FEFF 		bl	strlen
 4939 2756 0346     		mov	r3, r0
 4940 2758 1A46     		mov	r2, r3
 4941 275a 07F12803 		add	r3, r7, #40
 4942 275e 043B     		subs	r3, r3, #4
 4943 2760 1344     		add	r3, r3, r2
 4944 2762 6A49     		ldr	r1, .L294+40
 4945 2764 1A46     		mov	r2, r3
 4946 2766 0B46     		mov	r3, r1
 4947 2768 03CB     		ldmia	r3!, {r0, r1}
 4948 276a 1060     		str	r0, [r2]	@ unaligned
 4949 276c 5160     		str	r1, [r2, #4]	@ unaligned
 4950 276e 1B78     		ldrb	r3, [r3]
 4951 2770 1372     		strb	r3, [r2, #8]
 693:..\src/command_processing.c ****                         break;
 4952              		.loc 1 693 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 118


 4953 2772 18E0     		b	.L213
 4954              	.L218:
 694:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 4955              		.loc 1 695 0
 4956 2774 07F12803 		add	r3, r7, #40
 4957 2778 043B     		subs	r3, r3, #4
 4958 277a 1846     		mov	r0, r3
 4959 277c FFF7FEFF 		bl	strlen
 4960 2780 0346     		mov	r3, r0
 4961 2782 1A46     		mov	r2, r3
 4962 2784 07F12803 		add	r3, r7, #40
 4963 2788 043B     		subs	r3, r3, #4
 4964 278a 1344     		add	r3, r3, r2
 4965 278c 604A     		ldr	r2, .L294+44
 4966 278e 1D46     		mov	r5, r3
 4967 2790 1446     		mov	r4, r2
 4968 2792 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4969 2794 2860     		str	r0, [r5]	@ unaligned
 4970 2796 6960     		str	r1, [r5, #4]	@ unaligned
 4971 2798 AA60     		str	r2, [r5, #8]	@ unaligned
 4972 279a EB60     		str	r3, [r5, #12]	@ unaligned
 4973 279c 2068     		ldr	r0, [r4]	@ unaligned
 4974 279e 2861     		str	r0, [r5, #16]	@ unaligned
 4975 27a0 A388     		ldrh	r3, [r4, #4]	@ unaligned
 4976 27a2 AB82     		strh	r3, [r5, #20]	@ unaligned
 696:..\src/command_processing.c ****                         break;
 4977              		.loc 1 696 0
 4978 27a4 00BF     		nop
 4979              	.L213:
 697:..\src/command_processing.c ****                     }
 698:..\src/command_processing.c ****                     break;
 4980              		.loc 1 698 0
 4981 27a6 46E3     		b	.L274
 4982              	.L192:
 699:..\src/command_processing.c ****                 case 3:     // yes/no menu
 700:..\src/command_processing.c ****                     if(*m_addr){
 4983              		.loc 1 700 0
 4984 27a8 07F5AE53 		add	r3, r7, #5568
 4985 27ac 03F11803 		add	r3, r3, #24
 4986 27b0 1B68     		ldr	r3, [r3]
 4987 27b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4988 27b4 002B     		cmp	r3, #0
 4989 27b6 11D0     		beq	.L219
 701:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 4990              		.loc 1 701 0
 4991 27b8 07F12803 		add	r3, r7, #40
 4992 27bc 043B     		subs	r3, r3, #4
 4993 27be 1846     		mov	r0, r3
 4994 27c0 FFF7FEFF 		bl	strlen
 4995 27c4 0346     		mov	r3, r0
 4996 27c6 1A46     		mov	r2, r3
 4997 27c8 07F12803 		add	r3, r7, #40
 4998 27cc 043B     		subs	r3, r3, #4
 4999 27ce 1344     		add	r3, r3, r2
 5000 27d0 504A     		ldr	r2, .L294+48
 5001 27d2 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 119


 5002 27d4 1860     		str	r0, [r3]	@ unaligned
 5003 27d6 1279     		ldrb	r2, [r2, #4]
 5004 27d8 1A71     		strb	r2, [r3, #4]
 702:..\src/command_processing.c ****                     }
 703:..\src/command_processing.c ****                     else {
 704:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 705:..\src/command_processing.c ****                     }
 706:..\src/command_processing.c ****                     break;    
 5005              		.loc 1 706 0
 5006 27da 31E3     		b	.L188
 5007              	.L219:
 704:..\src/command_processing.c ****                     }
 5008              		.loc 1 704 0
 5009 27dc 07F12803 		add	r3, r7, #40
 5010 27e0 043B     		subs	r3, r3, #4
 5011 27e2 1846     		mov	r0, r3
 5012 27e4 FFF7FEFF 		bl	strlen
 5013 27e8 0346     		mov	r3, r0
 5014 27ea 1A46     		mov	r2, r3
 5015 27ec 07F12803 		add	r3, r7, #40
 5016 27f0 043B     		subs	r3, r3, #4
 5017 27f2 1344     		add	r3, r3, r2
 5018 27f4 484A     		ldr	r2, .L294+52
 5019 27f6 1068     		ldr	r0, [r2]	@ unaligned
 5020 27f8 1860     		str	r0, [r3]	@ unaligned
 5021              		.loc 1 706 0
 5022 27fa 21E3     		b	.L188
 5023              	.L193:
 707:..\src/command_processing.c ****                 case 4:     // right/lef menu
 708:..\src/command_processing.c ****                     switch(*m_addr){
 5024              		.loc 1 708 0
 5025 27fc 07F5AE53 		add	r3, r7, #5568
 5026 2800 03F11803 		add	r3, r3, #24
 5027 2804 1B68     		ldr	r3, [r3]
 5028 2806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5029 2808 002B     		cmp	r3, #0
 5030 280a 02D0     		beq	.L222
 5031 280c 012B     		cmp	r3, #1
 5032 280e 14D0     		beq	.L223
 709:..\src/command_processing.c ****                         case RIGHT_HAND:
 710:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 711:..\src/command_processing.c ****                         break;
 712:..\src/command_processing.c ****                         case LEFT_HAND:
 713:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 714:..\src/command_processing.c ****                         break;
 715:..\src/command_processing.c ****                     }
 716:..\src/command_processing.c ****                     break;
 5033              		.loc 1 716 0
 5034 2810 16E3     		b	.L188
 5035              	.L222:
 710:..\src/command_processing.c ****                         break;
 5036              		.loc 1 710 0
 5037 2812 07F12803 		add	r3, r7, #40
 5038 2816 043B     		subs	r3, r3, #4
 5039 2818 1846     		mov	r0, r3
 5040 281a FFF7FEFF 		bl	strlen
 5041 281e 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 120


 5042 2820 1A46     		mov	r2, r3
 5043 2822 07F12803 		add	r3, r7, #40
 5044 2826 043B     		subs	r3, r3, #4
 5045 2828 1344     		add	r3, r3, r2
 5046 282a 3C4A     		ldr	r2, .L294+56
 5047 282c 1068     		ldr	r0, [r2]	@ unaligned
 5048 282e 1860     		str	r0, [r3]	@ unaligned
 5049 2830 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5050 2832 9279     		ldrb	r2, [r2, #6]
 5051 2834 9980     		strh	r1, [r3, #4]	@ unaligned
 5052 2836 9A71     		strb	r2, [r3, #6]
 711:..\src/command_processing.c ****                         case LEFT_HAND:
 5053              		.loc 1 711 0
 5054 2838 11E0     		b	.L221
 5055              	.L223:
 713:..\src/command_processing.c ****                         break;
 5056              		.loc 1 713 0
 5057 283a 07F12803 		add	r3, r7, #40
 5058 283e 043B     		subs	r3, r3, #4
 5059 2840 1846     		mov	r0, r3
 5060 2842 FFF7FEFF 		bl	strlen
 5061 2846 0346     		mov	r3, r0
 5062 2848 1A46     		mov	r2, r3
 5063 284a 07F12803 		add	r3, r7, #40
 5064 284e 043B     		subs	r3, r3, #4
 5065 2850 1344     		add	r3, r3, r2
 5066 2852 334A     		ldr	r2, .L294+60
 5067 2854 1068     		ldr	r0, [r2]	@ unaligned
 5068 2856 1860     		str	r0, [r3]	@ unaligned
 5069 2858 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5070 285a 9A80     		strh	r2, [r3, #4]	@ unaligned
 714:..\src/command_processing.c ****                     }
 5071              		.loc 1 714 0
 5072 285c 00BF     		nop
 5073              	.L221:
 5074              		.loc 1 716 0
 5075 285e EFE2     		b	.L188
 5076              	.L194:
 717:..\src/command_processing.c ****                 case 5:     // on/off menu
 718:..\src/command_processing.c ****                     switch(*m_addr){
 5077              		.loc 1 718 0
 5078 2860 07F5AE53 		add	r3, r7, #5568
 5079 2864 03F11803 		add	r3, r3, #24
 5080 2868 1B68     		ldr	r3, [r3]
 5081 286a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5082 286c 002B     		cmp	r3, #0
 5083 286e 02D0     		beq	.L225
 5084 2870 012B     		cmp	r3, #1
 5085 2872 12D0     		beq	.L226
 719:..\src/command_processing.c ****                         case 0:
 720:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 721:..\src/command_processing.c ****                         break;
 722:..\src/command_processing.c ****                         case 1:
 723:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 724:..\src/command_processing.c ****                         break;
 725:..\src/command_processing.c ****                     }
 726:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 121


 5086              		.loc 1 726 0
 5087 2874 E4E2     		b	.L188
 5088              	.L225:
 720:..\src/command_processing.c ****                         break;
 5089              		.loc 1 720 0
 5090 2876 07F12803 		add	r3, r7, #40
 5091 287a 043B     		subs	r3, r3, #4
 5092 287c 1846     		mov	r0, r3
 5093 287e FFF7FEFF 		bl	strlen
 5094 2882 0346     		mov	r3, r0
 5095 2884 1A46     		mov	r2, r3
 5096 2886 07F12803 		add	r3, r7, #40
 5097 288a 043B     		subs	r3, r3, #4
 5098 288c 1344     		add	r3, r3, r2
 5099 288e 254A     		ldr	r2, .L294+64
 5100 2890 1068     		ldr	r0, [r2]	@ unaligned
 5101 2892 1860     		str	r0, [r3]	@ unaligned
 5102 2894 1279     		ldrb	r2, [r2, #4]
 5103 2896 1A71     		strb	r2, [r3, #4]
 721:..\src/command_processing.c ****                         case 1:
 5104              		.loc 1 721 0
 5105 2898 0FE0     		b	.L224
 5106              	.L226:
 723:..\src/command_processing.c ****                         break;
 5107              		.loc 1 723 0
 5108 289a 07F12803 		add	r3, r7, #40
 5109 289e 043B     		subs	r3, r3, #4
 5110 28a0 1846     		mov	r0, r3
 5111 28a2 FFF7FEFF 		bl	strlen
 5112 28a6 0346     		mov	r3, r0
 5113 28a8 1A46     		mov	r2, r3
 5114 28aa 07F12803 		add	r3, r7, #40
 5115 28ae 043B     		subs	r3, r3, #4
 5116 28b0 1344     		add	r3, r3, r2
 5117 28b2 1D4A     		ldr	r2, .L294+68
 5118 28b4 1068     		ldr	r0, [r2]	@ unaligned
 5119 28b6 1860     		str	r0, [r3]	@ unaligned
 724:..\src/command_processing.c ****                     }
 5120              		.loc 1 724 0
 5121 28b8 00BF     		nop
 5122              	.L224:
 5123              		.loc 1 726 0
 5124 28ba C1E2     		b	.L188
 5125              	.L195:
 727:..\src/command_processing.c ****                 case 6:     // expansion port menu
 728:..\src/command_processing.c ****                     switch(*m_addr){
 5126              		.loc 1 728 0
 5127 28bc 07F5AE53 		add	r3, r7, #5568
 5128 28c0 03F11803 		add	r3, r3, #24
 5129 28c4 1B68     		ldr	r3, [r3]
 5130 28c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5131 28c8 032B     		cmp	r3, #3
 5132 28ca 00F2B682 		bhi	.L275
 5133 28ce 01A2     		adr	r2, .L229
 5134 28d0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5135              		.p2align 2
 5136              	.L229:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 122


 5137 28d4 2D290000 		.word	.L228+1
 5138 28d8 51290000 		.word	.L230+1
 5139 28dc 7D290000 		.word	.L231+1
 5140 28e0 AB290000 		.word	.L232+1
 5141              		.p2align 1
 5142              	.L295:
 5143              		.align	2
 5144              	.L294:
 5145 28e4 00000000 		.word	.LC87
 5146 28e8 08000000 		.word	.LC88
 5147 28ec 10000000 		.word	.LC89
 5148 28f0 24000000 		.word	.LC90
 5149 28f4 34000000 		.word	.LC91
 5150 28f8 40000000 		.word	.LC92
 5151 28fc 54000000 		.word	.LC93
 5152 2900 60000000 		.word	.LC94
 5153 2904 84000000 		.word	.LC95
 5154 2908 90000000 		.word	.LC96
 5155 290c 98000000 		.word	.LC97
 5156 2910 A4000000 		.word	.LC98
 5157 2914 BC000000 		.word	.LC99
 5158 2918 C4000000 		.word	.LC100
 5159 291c CC000000 		.word	.LC101
 5160 2920 D4000000 		.word	.LC102
 5161 2924 DC000000 		.word	.LC103
 5162 2928 E4000000 		.word	.LC104
 5163              	.L228:
 729:..\src/command_processing.c ****                         case EXP_NONE:
 730:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5164              		.loc 1 730 0
 5165 292c 07F12803 		add	r3, r7, #40
 5166 2930 043B     		subs	r3, r3, #4
 5167 2932 1846     		mov	r0, r3
 5168 2934 FFF7FEFF 		bl	strlen
 5169 2938 0346     		mov	r3, r0
 5170 293a 1A46     		mov	r2, r3
 5171 293c 07F12803 		add	r3, r7, #40
 5172 2940 043B     		subs	r3, r3, #4
 5173 2942 1344     		add	r3, r3, r2
 5174 2944 D34A     		ldr	r2, .L296
 5175 2946 1068     		ldr	r0, [r2]	@ unaligned
 5176 2948 1860     		str	r0, [r3]	@ unaligned
 5177 294a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5178 294c 9A80     		strh	r2, [r3, #4]	@ unaligned
 731:..\src/command_processing.c ****                             break;
 5179              		.loc 1 731 0
 5180 294e 42E0     		b	.L227
 5181              	.L230:
 732:..\src/command_processing.c ****                         case EXP_SD_RTC:
 733:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5182              		.loc 1 733 0
 5183 2950 07F12803 		add	r3, r7, #40
 5184 2954 043B     		subs	r3, r3, #4
 5185 2956 1846     		mov	r0, r3
 5186 2958 FFF7FEFF 		bl	strlen
 5187 295c 0346     		mov	r3, r0
 5188 295e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 123


 5189 2960 07F12803 		add	r3, r7, #40
 5190 2964 043B     		subs	r3, r3, #4
 5191 2966 1344     		add	r3, r3, r2
 5192 2968 CB4A     		ldr	r2, .L296+4
 5193 296a 1C46     		mov	r4, r3
 5194 296c 1346     		mov	r3, r2
 5195 296e 07CB     		ldmia	r3!, {r0, r1, r2}
 5196 2970 2060     		str	r0, [r4]	@ unaligned
 5197 2972 6160     		str	r1, [r4, #4]	@ unaligned
 5198 2974 A260     		str	r2, [r4, #8]	@ unaligned
 5199 2976 1B88     		ldrh	r3, [r3]	@ unaligned
 5200 2978 A381     		strh	r3, [r4, #12]	@ unaligned
 734:..\src/command_processing.c ****                             break;
 5201              		.loc 1 734 0
 5202 297a 2CE0     		b	.L227
 5203              	.L231:
 735:..\src/command_processing.c ****                         case EXP_WIFI:
 736:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5204              		.loc 1 736 0
 5205 297c 07F12803 		add	r3, r7, #40
 5206 2980 043B     		subs	r3, r3, #4
 5207 2982 1846     		mov	r0, r3
 5208 2984 FFF7FEFF 		bl	strlen
 5209 2988 0346     		mov	r3, r0
 5210 298a 1A46     		mov	r2, r3
 5211 298c 07F12803 		add	r3, r7, #40
 5212 2990 043B     		subs	r3, r3, #4
 5213 2992 1344     		add	r3, r3, r2
 5214 2994 C14A     		ldr	r2, .L296+8
 5215 2996 1D46     		mov	r5, r3
 5216 2998 1446     		mov	r4, r2
 5217 299a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5218 299c 2860     		str	r0, [r5]	@ unaligned
 5219 299e 6960     		str	r1, [r5, #4]	@ unaligned
 5220 29a0 AA60     		str	r2, [r5, #8]	@ unaligned
 5221 29a2 EB60     		str	r3, [r5, #12]	@ unaligned
 5222 29a4 2388     		ldrh	r3, [r4]	@ unaligned
 5223 29a6 2B82     		strh	r3, [r5, #16]	@ unaligned
 737:..\src/command_processing.c ****         					break;
 5224              		.loc 1 737 0
 5225 29a8 15E0     		b	.L227
 5226              	.L232:
 738:..\src/command_processing.c ****                         case EXP_OTHER:
 739:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5227              		.loc 1 739 0
 5228 29aa 07F12803 		add	r3, r7, #40
 5229 29ae 043B     		subs	r3, r3, #4
 5230 29b0 1846     		mov	r0, r3
 5231 29b2 FFF7FEFF 		bl	strlen
 5232 29b6 0346     		mov	r3, r0
 5233 29b8 1A46     		mov	r2, r3
 5234 29ba 07F12803 		add	r3, r7, #40
 5235 29be 043B     		subs	r3, r3, #4
 5236 29c0 1344     		add	r3, r3, r2
 5237 29c2 B74A     		ldr	r2, .L296+12
 5238 29c4 1C46     		mov	r4, r3
 5239 29c6 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 124


 5240 29c8 07CB     		ldmia	r3!, {r0, r1, r2}
 5241 29ca 2060     		str	r0, [r4]	@ unaligned
 5242 29cc 6160     		str	r1, [r4, #4]	@ unaligned
 5243 29ce A260     		str	r2, [r4, #8]	@ unaligned
 5244 29d0 1B78     		ldrb	r3, [r3]
 5245 29d2 2373     		strb	r3, [r4, #12]
 740:..\src/command_processing.c ****         					break;
 5246              		.loc 1 740 0
 5247 29d4 00BF     		nop
 5248              	.L227:
 741:..\src/command_processing.c ****                     }
 742:..\src/command_processing.c ****                     break;
 5249              		.loc 1 742 0
 5250 29d6 30E2     		b	.L275
 5251              	.L196:
 743:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 744:..\src/command_processing.c ****                     switch(*m_addr){
 5252              		.loc 1 744 0
 5253 29d8 07F5AE53 		add	r3, r7, #5568
 5254 29dc 03F11803 		add	r3, r3, #24
 5255 29e0 1B68     		ldr	r3, [r3]
 5256 29e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5257 29e4 012B     		cmp	r3, #1
 5258 29e6 16D0     		beq	.L234
 5259 29e8 022B     		cmp	r3, #2
 5260 29ea 26D0     		beq	.L235
 5261 29ec 002B     		cmp	r3, #0
 5262 29ee 00D0     		beq	.L236
 745:..\src/command_processing.c ****                         case 0: 
 746:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 747:..\src/command_processing.c ****                             break;
 748:..\src/command_processing.c ****                         case 1: 
 749:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 750:..\src/command_processing.c ****                             break;
 751:..\src/command_processing.c ****                         case 2: 
 752:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 753:..\src/command_processing.c ****                             break;
 754:..\src/command_processing.c ****                         default:
 755:..\src/command_processing.c ****                             break;
 5263              		.loc 1 755 0
 5264 29f0 35E0     		b	.L237
 5265              	.L236:
 746:..\src/command_processing.c ****                             break;
 5266              		.loc 1 746 0
 5267 29f2 07F12803 		add	r3, r7, #40
 5268 29f6 043B     		subs	r3, r3, #4
 5269 29f8 1846     		mov	r0, r3
 5270 29fa FFF7FEFF 		bl	strlen
 5271 29fe 0346     		mov	r3, r0
 5272 2a00 1A46     		mov	r2, r3
 5273 2a02 07F12803 		add	r3, r7, #40
 5274 2a06 043B     		subs	r3, r3, #4
 5275 2a08 1344     		add	r3, r3, r2
 5276 2a0a A24A     		ldr	r2, .L296
 5277 2a0c 1068     		ldr	r0, [r2]	@ unaligned
 5278 2a0e 1860     		str	r0, [r3]	@ unaligned
 5279 2a10 9288     		ldrh	r2, [r2, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 125


 5280 2a12 9A80     		strh	r2, [r3, #4]	@ unaligned
 747:..\src/command_processing.c ****                         case 1: 
 5281              		.loc 1 747 0
 5282 2a14 23E0     		b	.L237
 5283              	.L234:
 749:..\src/command_processing.c ****                             break;
 5284              		.loc 1 749 0
 5285 2a16 07F12803 		add	r3, r7, #40
 5286 2a1a 043B     		subs	r3, r3, #4
 5287 2a1c 1846     		mov	r0, r3
 5288 2a1e FFF7FEFF 		bl	strlen
 5289 2a22 0346     		mov	r3, r0
 5290 2a24 1A46     		mov	r2, r3
 5291 2a26 07F12803 		add	r3, r7, #40
 5292 2a2a 043B     		subs	r3, r3, #4
 5293 2a2c 1344     		add	r3, r3, r2
 5294 2a2e 9D4A     		ldr	r2, .L296+16
 5295 2a30 1068     		ldr	r0, [r2]	@ unaligned
 5296 2a32 1860     		str	r0, [r3]	@ unaligned
 5297 2a34 1279     		ldrb	r2, [r2, #4]
 5298 2a36 1A71     		strb	r2, [r3, #4]
 750:..\src/command_processing.c ****                         case 2: 
 5299              		.loc 1 750 0
 5300 2a38 11E0     		b	.L237
 5301              	.L235:
 752:..\src/command_processing.c ****                             break;
 5302              		.loc 1 752 0
 5303 2a3a 07F12803 		add	r3, r7, #40
 5304 2a3e 043B     		subs	r3, r3, #4
 5305 2a40 1846     		mov	r0, r3
 5306 2a42 FFF7FEFF 		bl	strlen
 5307 2a46 0346     		mov	r3, r0
 5308 2a48 1A46     		mov	r2, r3
 5309 2a4a 07F12803 		add	r3, r7, #40
 5310 2a4e 043B     		subs	r3, r3, #4
 5311 2a50 1344     		add	r3, r3, r2
 5312 2a52 954A     		ldr	r2, .L296+20
 5313 2a54 1068     		ldr	r0, [r2]	@ unaligned
 5314 2a56 1860     		str	r0, [r3]	@ unaligned
 5315 2a58 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5316 2a5a 9A80     		strh	r2, [r3, #4]	@ unaligned
 753:..\src/command_processing.c ****                         default:
 5317              		.loc 1 753 0
 5318 2a5c 00BF     		nop
 5319              	.L237:
 756:..\src/command_processing.c ****                     } 
 757:..\src/command_processing.c ****                     break;
 5320              		.loc 1 757 0 discriminator 12
 5321 2a5e EFE1     		b	.L188
 5322              	.L197:
 758:..\src/command_processing.c ****                 case 8:     // user menu          
 759:..\src/command_processing.c ****                     switch(*m_addr){
 5323              		.loc 1 759 0
 5324 2a60 07F5AE53 		add	r3, r7, #5568
 5325 2a64 03F11803 		add	r3, r3, #24
 5326 2a68 1B68     		ldr	r3, [r3]
 5327 2a6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 126


 5328 2a6c 012B     		cmp	r3, #1
 5329 2a6e 1AD0     		beq	.L239
 5330 2a70 022B     		cmp	r3, #2
 5331 2a72 2CD0     		beq	.L240
 5332 2a74 002B     		cmp	r3, #0
 5333 2a76 00D0     		beq	.L241
 760:..\src/command_processing.c ****                         case GENERIC_USER:
 761:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 762:..\src/command_processing.c ****                         break;
 763:..\src/command_processing.c ****                         case MARIA:
 764:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 765:..\src/command_processing.c ****                         break;
 766:..\src/command_processing.c ****                         case ROZA:
 767:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 768:..\src/command_processing.c ****                         break;
 769:..\src/command_processing.c ****                     }   
 770:..\src/command_processing.c ****                     break;                    
 5334              		.loc 1 770 0
 5335 2a78 E2E1     		b	.L188
 5336              	.L241:
 761:..\src/command_processing.c ****                         break;
 5337              		.loc 1 761 0
 5338 2a7a 07F12803 		add	r3, r7, #40
 5339 2a7e 043B     		subs	r3, r3, #4
 5340 2a80 1846     		mov	r0, r3
 5341 2a82 FFF7FEFF 		bl	strlen
 5342 2a86 0346     		mov	r3, r0
 5343 2a88 1A46     		mov	r2, r3
 5344 2a8a 07F12803 		add	r3, r7, #40
 5345 2a8e 043B     		subs	r3, r3, #4
 5346 2a90 1344     		add	r3, r3, r2
 5347 2a92 864A     		ldr	r2, .L296+24
 5348 2a94 1C46     		mov	r4, r3
 5349 2a96 1346     		mov	r3, r2
 5350 2a98 07CB     		ldmia	r3!, {r0, r1, r2}
 5351 2a9a 2060     		str	r0, [r4]	@ unaligned
 5352 2a9c 6160     		str	r1, [r4, #4]	@ unaligned
 5353 2a9e A260     		str	r2, [r4, #8]	@ unaligned
 5354 2aa0 1B88     		ldrh	r3, [r3]	@ unaligned
 5355 2aa2 A381     		strh	r3, [r4, #12]	@ unaligned
 762:..\src/command_processing.c ****                         case MARIA:
 5356              		.loc 1 762 0
 5357 2aa4 25E0     		b	.L238
 5358              	.L239:
 764:..\src/command_processing.c ****                         break;
 5359              		.loc 1 764 0
 5360 2aa6 07F12803 		add	r3, r7, #40
 5361 2aaa 043B     		subs	r3, r3, #4
 5362 2aac 1846     		mov	r0, r3
 5363 2aae FFF7FEFF 		bl	strlen
 5364 2ab2 0346     		mov	r3, r0
 5365 2ab4 1A46     		mov	r2, r3
 5366 2ab6 07F12803 		add	r3, r7, #40
 5367 2aba 043B     		subs	r3, r3, #4
 5368 2abc 1344     		add	r3, r3, r2
 5369 2abe 7C4A     		ldr	r2, .L296+28
 5370 2ac0 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 127


 5371 2ac2 1860     		str	r0, [r3]	@ unaligned
 5372 2ac4 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5373 2ac6 9279     		ldrb	r2, [r2, #6]
 5374 2ac8 9980     		strh	r1, [r3, #4]	@ unaligned
 5375 2aca 9A71     		strb	r2, [r3, #6]
 765:..\src/command_processing.c ****                         case ROZA:
 5376              		.loc 1 765 0
 5377 2acc 11E0     		b	.L238
 5378              	.L240:
 767:..\src/command_processing.c ****                         break;
 5379              		.loc 1 767 0
 5380 2ace 07F12803 		add	r3, r7, #40
 5381 2ad2 043B     		subs	r3, r3, #4
 5382 2ad4 1846     		mov	r0, r3
 5383 2ad6 FFF7FEFF 		bl	strlen
 5384 2ada 0346     		mov	r3, r0
 5385 2adc 1A46     		mov	r2, r3
 5386 2ade 07F12803 		add	r3, r7, #40
 5387 2ae2 043B     		subs	r3, r3, #4
 5388 2ae4 1344     		add	r3, r3, r2
 5389 2ae6 734A     		ldr	r2, .L296+32
 5390 2ae8 1068     		ldr	r0, [r2]	@ unaligned
 5391 2aea 1860     		str	r0, [r3]	@ unaligned
 5392 2aec 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5393 2aee 9A80     		strh	r2, [r3, #4]	@ unaligned
 768:..\src/command_processing.c ****                     }   
 5394              		.loc 1 768 0
 5395 2af0 00BF     		nop
 5396              	.L238:
 5397              		.loc 1 770 0
 5398 2af2 A5E1     		b	.L188
 5399              	.L198:
 771:..\src/command_processing.c ****                 case 9:     // driver type menu
 772:..\src/command_processing.c ****                     switch(*m_addr){
 5400              		.loc 1 772 0
 5401 2af4 07F5AE53 		add	r3, r7, #5568
 5402 2af8 03F11803 		add	r3, r3, #24
 5403 2afc 1B68     		ldr	r3, [r3]
 5404 2afe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5405 2b00 002B     		cmp	r3, #0
 5406 2b02 02D0     		beq	.L243
 5407 2b04 012B     		cmp	r3, #1
 5408 2b06 17D0     		beq	.L244
 773:..\src/command_processing.c ****                         case 0:
 774:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 775:..\src/command_processing.c ****                         break;
 776:..\src/command_processing.c ****                         case 1:
 777:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 778:..\src/command_processing.c ****                         break;
 779:..\src/command_processing.c ****                     }
 780:..\src/command_processing.c ****                     break;
 5409              		.loc 1 780 0
 5410 2b08 9AE1     		b	.L188
 5411              	.L243:
 774:..\src/command_processing.c ****                         break;
 5412              		.loc 1 774 0
 5413 2b0a 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 128


 5414 2b0e 043B     		subs	r3, r3, #4
 5415 2b10 1846     		mov	r0, r3
 5416 2b12 FFF7FEFF 		bl	strlen
 5417 2b16 0346     		mov	r3, r0
 5418 2b18 1A46     		mov	r2, r3
 5419 2b1a 07F12803 		add	r3, r7, #40
 5420 2b1e 043B     		subs	r3, r3, #4
 5421 2b20 1344     		add	r3, r3, r2
 5422 2b22 654A     		ldr	r2, .L296+36
 5423 2b24 1D46     		mov	r5, r3
 5424 2b26 1446     		mov	r4, r2
 5425 2b28 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5426 2b2a 2860     		str	r0, [r5]	@ unaligned
 5427 2b2c 6960     		str	r1, [r5, #4]	@ unaligned
 5428 2b2e AA60     		str	r2, [r5, #8]	@ unaligned
 5429 2b30 EB60     		str	r3, [r5, #12]	@ unaligned
 5430 2b32 2068     		ldr	r0, [r4]	@ unaligned
 5431 2b34 2861     		str	r0, [r5, #16]	@ unaligned
 775:..\src/command_processing.c ****                         case 1:
 5432              		.loc 1 775 0
 5433 2b36 18E0     		b	.L242
 5434              	.L244:
 777:..\src/command_processing.c ****                         break;
 5435              		.loc 1 777 0
 5436 2b38 07F12803 		add	r3, r7, #40
 5437 2b3c 043B     		subs	r3, r3, #4
 5438 2b3e 1846     		mov	r0, r3
 5439 2b40 FFF7FEFF 		bl	strlen
 5440 2b44 0346     		mov	r3, r0
 5441 2b46 1A46     		mov	r2, r3
 5442 2b48 07F12803 		add	r3, r7, #40
 5443 2b4c 043B     		subs	r3, r3, #4
 5444 2b4e 1344     		add	r3, r3, r2
 5445 2b50 5A4A     		ldr	r2, .L296+40
 5446 2b52 1D46     		mov	r5, r3
 5447 2b54 1446     		mov	r4, r2
 5448 2b56 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5449 2b58 2860     		str	r0, [r5]	@ unaligned
 5450 2b5a 6960     		str	r1, [r5, #4]	@ unaligned
 5451 2b5c AA60     		str	r2, [r5, #8]	@ unaligned
 5452 2b5e EB60     		str	r3, [r5, #12]	@ unaligned
 5453 2b60 2068     		ldr	r0, [r4]	@ unaligned
 5454 2b62 2861     		str	r0, [r5, #16]	@ unaligned
 5455 2b64 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5456 2b66 AB82     		strh	r3, [r5, #20]	@ unaligned
 778:..\src/command_processing.c ****                     }
 5457              		.loc 1 778 0
 5458 2b68 00BF     		nop
 5459              	.L242:
 5460              		.loc 1 780 0
 5461 2b6a 69E1     		b	.L188
 5462              	.L199:
 781:..\src/command_processing.c ****                 case 10:    // device type menu
 782:..\src/command_processing.c ****                     switch(*m_addr){
 5463              		.loc 1 782 0
 5464 2b6c 07F5AE53 		add	r3, r7, #5568
 5465 2b70 03F11803 		add	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 129


 5466 2b74 1B68     		ldr	r3, [r3]
 5467 2b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5468 2b78 042B     		cmp	r3, #4
 5469 2b7a 00F26081 		bhi	.L276
 5470 2b7e 01A2     		adr	r2, .L247
 5471 2b80 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5472              		.p2align 2
 5473              	.L247:
 5474 2b84 992B0000 		.word	.L246+1
 5475 2b88 C52B0000 		.word	.L248+1
 5476 2b8c F32B0000 		.word	.L249+1
 5477 2b90 1F2C0000 		.word	.L250+1
 5478 2b94 492C0000 		.word	.L251+1
 5479              		.p2align 1
 5480              	.L246:
 783:..\src/command_processing.c ****                         case 0:
 784:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5481              		.loc 1 784 0
 5482 2b98 07F12803 		add	r3, r7, #40
 5483 2b9c 043B     		subs	r3, r3, #4
 5484 2b9e 1846     		mov	r0, r3
 5485 2ba0 FFF7FEFF 		bl	strlen
 5486 2ba4 0346     		mov	r3, r0
 5487 2ba6 1A46     		mov	r2, r3
 5488 2ba8 07F12803 		add	r3, r7, #40
 5489 2bac 043B     		subs	r3, r3, #4
 5490 2bae 1344     		add	r3, r3, r2
 5491 2bb0 434A     		ldr	r2, .L296+44
 5492 2bb2 1C46     		mov	r4, r3
 5493 2bb4 1346     		mov	r3, r2
 5494 2bb6 07CB     		ldmia	r3!, {r0, r1, r2}
 5495 2bb8 2060     		str	r0, [r4]	@ unaligned
 5496 2bba 6160     		str	r1, [r4, #4]	@ unaligned
 5497 2bbc A260     		str	r2, [r4, #8]	@ unaligned
 5498 2bbe 1B88     		ldrh	r3, [r3]	@ unaligned
 5499 2bc0 A381     		strh	r3, [r4, #12]	@ unaligned
 785:..\src/command_processing.c ****                         break;
 5500              		.loc 1 785 0
 5501 2bc2 5BE0     		b	.L245
 5502              	.L248:
 786:..\src/command_processing.c ****                         case 1:
 787:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5503              		.loc 1 787 0
 5504 2bc4 07F12803 		add	r3, r7, #40
 5505 2bc8 043B     		subs	r3, r3, #4
 5506 2bca 1846     		mov	r0, r3
 5507 2bcc FFF7FEFF 		bl	strlen
 5508 2bd0 0346     		mov	r3, r0
 5509 2bd2 1A46     		mov	r2, r3
 5510 2bd4 07F12803 		add	r3, r7, #40
 5511 2bd8 043B     		subs	r3, r3, #4
 5512 2bda 1344     		add	r3, r3, r2
 5513 2bdc 394A     		ldr	r2, .L296+48
 5514 2bde 1D46     		mov	r5, r3
 5515 2be0 1446     		mov	r4, r2
 5516 2be2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5517 2be4 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 130


 5518 2be6 6960     		str	r1, [r5, #4]	@ unaligned
 5519 2be8 AA60     		str	r2, [r5, #8]	@ unaligned
 5520 2bea EB60     		str	r3, [r5, #12]	@ unaligned
 5521 2bec 2388     		ldrh	r3, [r4]	@ unaligned
 5522 2bee 2B82     		strh	r3, [r5, #16]	@ unaligned
 788:..\src/command_processing.c ****                         break;
 5523              		.loc 1 788 0
 5524 2bf0 44E0     		b	.L245
 5525              	.L249:
 789:..\src/command_processing.c ****                         case 2:
 790:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5526              		.loc 1 790 0
 5527 2bf2 07F12803 		add	r3, r7, #40
 5528 2bf6 043B     		subs	r3, r3, #4
 5529 2bf8 1846     		mov	r0, r3
 5530 2bfa FFF7FEFF 		bl	strlen
 5531 2bfe 0346     		mov	r3, r0
 5532 2c00 1A46     		mov	r2, r3
 5533 2c02 07F12803 		add	r3, r7, #40
 5534 2c06 043B     		subs	r3, r3, #4
 5535 2c08 1344     		add	r3, r3, r2
 5536 2c0a 2F4A     		ldr	r2, .L296+52
 5537 2c0c 1C46     		mov	r4, r3
 5538 2c0e 1346     		mov	r3, r2
 5539 2c10 07CB     		ldmia	r3!, {r0, r1, r2}
 5540 2c12 2060     		str	r0, [r4]	@ unaligned
 5541 2c14 6160     		str	r1, [r4, #4]	@ unaligned
 5542 2c16 A260     		str	r2, [r4, #8]	@ unaligned
 5543 2c18 1B88     		ldrh	r3, [r3]	@ unaligned
 5544 2c1a A381     		strh	r3, [r4, #12]	@ unaligned
 791:..\src/command_processing.c ****                         break;
 5545              		.loc 1 791 0
 5546 2c1c 2EE0     		b	.L245
 5547              	.L250:
 792:..\src/command_processing.c ****                         case 3:
 793:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5548              		.loc 1 793 0
 5549 2c1e 07F12803 		add	r3, r7, #40
 5550 2c22 043B     		subs	r3, r3, #4
 5551 2c24 1846     		mov	r0, r3
 5552 2c26 FFF7FEFF 		bl	strlen
 5553 2c2a 0346     		mov	r3, r0
 5554 2c2c 1A46     		mov	r2, r3
 5555 2c2e 07F12803 		add	r3, r7, #40
 5556 2c32 043B     		subs	r3, r3, #4
 5557 2c34 1344     		add	r3, r3, r2
 5558 2c36 254A     		ldr	r2, .L296+56
 5559 2c38 1C46     		mov	r4, r3
 5560 2c3a 1546     		mov	r5, r2
 5561 2c3c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5562 2c3e 2060     		str	r0, [r4]	@ unaligned
 5563 2c40 6160     		str	r1, [r4, #4]	@ unaligned
 5564 2c42 A260     		str	r2, [r4, #8]	@ unaligned
 5565 2c44 E360     		str	r3, [r4, #12]	@ unaligned
 794:..\src/command_processing.c ****                         break;
 5566              		.loc 1 794 0
 5567 2c46 19E0     		b	.L245
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 131


 5568              	.L251:
 795:..\src/command_processing.c ****                         case 4:
 796:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5569              		.loc 1 796 0
 5570 2c48 07F12803 		add	r3, r7, #40
 5571 2c4c 043B     		subs	r3, r3, #4
 5572 2c4e 1846     		mov	r0, r3
 5573 2c50 FFF7FEFF 		bl	strlen
 5574 2c54 0346     		mov	r3, r0
 5575 2c56 1A46     		mov	r2, r3
 5576 2c58 07F12803 		add	r3, r7, #40
 5577 2c5c 043B     		subs	r3, r3, #4
 5578 2c5e 1344     		add	r3, r3, r2
 5579 2c60 1B4A     		ldr	r2, .L296+60
 5580 2c62 1D46     		mov	r5, r3
 5581 2c64 1446     		mov	r4, r2
 5582 2c66 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5583 2c68 2860     		str	r0, [r5]	@ unaligned
 5584 2c6a 6960     		str	r1, [r5, #4]	@ unaligned
 5585 2c6c AA60     		str	r2, [r5, #8]	@ unaligned
 5586 2c6e EB60     		str	r3, [r5, #12]	@ unaligned
 5587 2c70 2388     		ldrh	r3, [r4]	@ unaligned
 5588 2c72 A278     		ldrb	r2, [r4, #2]
 5589 2c74 2B82     		strh	r3, [r5, #16]	@ unaligned
 5590 2c76 1346     		mov	r3, r2
 5591 2c78 AB74     		strb	r3, [r5, #18]
 797:..\src/command_processing.c ****                         break;
 5592              		.loc 1 797 0
 5593 2c7a 00BF     		nop
 5594              	.L245:
 798:..\src/command_processing.c ****                     }
 799:..\src/command_processing.c ****                     break;
 5595              		.loc 1 799 0
 5596 2c7c DFE0     		b	.L276
 5597              	.L200:
 800:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 801:..\src/command_processing.c ****                     switch(*m_addr){
 5598              		.loc 1 801 0
 5599 2c7e 07F5AE53 		add	r3, r7, #5568
 5600 2c82 03F11803 		add	r3, r3, #24
 5601 2c86 1B68     		ldr	r3, [r3]
 5602 2c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5603 2c8a 002B     		cmp	r3, #0
 5604 2c8c 22D0     		beq	.L253
 5605 2c8e 012B     		cmp	r3, #1
 5606 2c90 5AD0     		beq	.L254
 802:..\src/command_processing.c ****                         case 0:
 803:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 804:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 805:..\src/command_processing.c ****                             }
 806:..\src/command_processing.c ****                             else {
 807:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist, Slow:hand\0");
 808:..\src/command_processing.c ****                             }                            
 809:..\src/command_processing.c ****                         break;
 810:..\src/command_processing.c ****                         case 1:
 811:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 812:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 132


 813:..\src/command_processing.c ****                             }
 814:..\src/command_processing.c ****                             else {
 815:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist, Fast:hand\0");
 816:..\src/command_processing.c ****                             }
 817:..\src/command_processing.c ****                         break;
 818:..\src/command_processing.c ****                     }
 819:..\src/command_processing.c ****                     break;
 5607              		.loc 1 819 0
 5608 2c92 D5E0     		b	.L188
 5609              	.L297:
 5610              		.align	2
 5611              	.L296:
 5612 2c94 EC000000 		.word	.LC105
 5613 2c98 F4000000 		.word	.LC106
 5614 2c9c 04010000 		.word	.LC107
 5615 2ca0 18010000 		.word	.LC108
 5616 2ca4 28010000 		.word	.LC109
 5617 2ca8 30010000 		.word	.LC110
 5618 2cac 38010000 		.word	.LC111
 5619 2cb0 48010000 		.word	.LC112
 5620 2cb4 50010000 		.word	.LC113
 5621 2cb8 58010000 		.word	.LC114
 5622 2cbc 70010000 		.word	.LC115
 5623 2cc0 88010000 		.word	.LC116
 5624 2cc4 98010000 		.word	.LC117
 5625 2cc8 AC010000 		.word	.LC118
 5626 2ccc BC010000 		.word	.LC119
 5627 2cd0 D0010000 		.word	.LC120
 5628              	.L253:
 803:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5629              		.loc 1 803 0
 5630 2cd4 D04B     		ldr	r3, .L298
 5631 2cd6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5632 2cda 042B     		cmp	r3, #4
 5633 2cdc 18D1     		bne	.L255
 804:..\src/command_processing.c ****                             }
 5634              		.loc 1 804 0
 5635 2cde 07F12803 		add	r3, r7, #40
 5636 2ce2 043B     		subs	r3, r3, #4
 5637 2ce4 1846     		mov	r0, r3
 5638 2ce6 FFF7FEFF 		bl	strlen
 5639 2cea 0346     		mov	r3, r0
 5640 2cec 1A46     		mov	r2, r3
 5641 2cee 07F12803 		add	r3, r7, #40
 5642 2cf2 043B     		subs	r3, r3, #4
 5643 2cf4 1344     		add	r3, r3, r2
 5644 2cf6 C94A     		ldr	r2, .L298+4
 5645 2cf8 1D46     		mov	r5, r3
 5646 2cfa 1446     		mov	r4, r2
 5647 2cfc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5648 2cfe 2860     		str	r0, [r5]	@ unaligned
 5649 2d00 6960     		str	r1, [r5, #4]	@ unaligned
 5650 2d02 AA60     		str	r2, [r5, #8]	@ unaligned
 5651 2d04 EB60     		str	r3, [r5, #12]	@ unaligned
 5652 2d06 2068     		ldr	r0, [r4]	@ unaligned
 5653 2d08 2861     		str	r0, [r5, #16]	@ unaligned
 5654 2d0a A388     		ldrh	r3, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 133


 5655 2d0c AB82     		strh	r3, [r5, #20]	@ unaligned
 809:..\src/command_processing.c ****                         case 1:
 5656              		.loc 1 809 0
 5657 2d0e 55E0     		b	.L252
 5658              	.L255:
 807:..\src/command_processing.c ****                             }                            
 5659              		.loc 1 807 0
 5660 2d10 07F12803 		add	r3, r7, #40
 5661 2d14 043B     		subs	r3, r3, #4
 5662 2d16 1846     		mov	r0, r3
 5663 2d18 FFF7FEFF 		bl	strlen
 5664 2d1c 0346     		mov	r3, r0
 5665 2d1e 1A46     		mov	r2, r3
 5666 2d20 07F12803 		add	r3, r7, #40
 5667 2d24 043B     		subs	r3, r3, #4
 5668 2d26 1344     		add	r3, r3, r2
 5669 2d28 BD4A     		ldr	r2, .L298+8
 5670 2d2a 1C46     		mov	r4, r3
 5671 2d2c 1546     		mov	r5, r2
 5672 2d2e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5673 2d30 2060     		str	r0, [r4]	@ unaligned
 5674 2d32 6160     		str	r1, [r4, #4]	@ unaligned
 5675 2d34 A260     		str	r2, [r4, #8]	@ unaligned
 5676 2d36 E360     		str	r3, [r4, #12]	@ unaligned
 5677 2d38 2868     		ldr	r0, [r5]	@ unaligned
 5678 2d3a 2061     		str	r0, [r4, #16]	@ unaligned
 5679 2d3c AB88     		ldrh	r3, [r5, #4]	@ unaligned
 5680 2d3e AA79     		ldrb	r2, [r5, #6]
 5681 2d40 A382     		strh	r3, [r4, #20]	@ unaligned
 5682 2d42 1346     		mov	r3, r2
 5683 2d44 A375     		strb	r3, [r4, #22]
 809:..\src/command_processing.c ****                         case 1:
 5684              		.loc 1 809 0
 5685 2d46 39E0     		b	.L252
 5686              	.L254:
 811:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5687              		.loc 1 811 0
 5688 2d48 B34B     		ldr	r3, .L298
 5689 2d4a 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5690 2d4e 042B     		cmp	r3, #4
 5691 2d50 18D1     		bne	.L257
 812:..\src/command_processing.c ****                             }
 5692              		.loc 1 812 0
 5693 2d52 07F12803 		add	r3, r7, #40
 5694 2d56 043B     		subs	r3, r3, #4
 5695 2d58 1846     		mov	r0, r3
 5696 2d5a FFF7FEFF 		bl	strlen
 5697 2d5e 0346     		mov	r3, r0
 5698 2d60 1A46     		mov	r2, r3
 5699 2d62 07F12803 		add	r3, r7, #40
 5700 2d66 043B     		subs	r3, r3, #4
 5701 2d68 1344     		add	r3, r3, r2
 5702 2d6a AE4A     		ldr	r2, .L298+12
 5703 2d6c 1D46     		mov	r5, r3
 5704 2d6e 1446     		mov	r4, r2
 5705 2d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5706 2d72 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 134


 5707 2d74 6960     		str	r1, [r5, #4]	@ unaligned
 5708 2d76 AA60     		str	r2, [r5, #8]	@ unaligned
 5709 2d78 EB60     		str	r3, [r5, #12]	@ unaligned
 5710 2d7a 2068     		ldr	r0, [r4]	@ unaligned
 5711 2d7c 2861     		str	r0, [r5, #16]	@ unaligned
 5712 2d7e A388     		ldrh	r3, [r4, #4]	@ unaligned
 5713 2d80 AB82     		strh	r3, [r5, #20]	@ unaligned
 817:..\src/command_processing.c ****                     }
 5714              		.loc 1 817 0
 5715 2d82 1AE0     		b	.L277
 5716              	.L257:
 815:..\src/command_processing.c ****                             }
 5717              		.loc 1 815 0
 5718 2d84 07F12803 		add	r3, r7, #40
 5719 2d88 043B     		subs	r3, r3, #4
 5720 2d8a 1846     		mov	r0, r3
 5721 2d8c FFF7FEFF 		bl	strlen
 5722 2d90 0346     		mov	r3, r0
 5723 2d92 1A46     		mov	r2, r3
 5724 2d94 07F12803 		add	r3, r7, #40
 5725 2d98 043B     		subs	r3, r3, #4
 5726 2d9a 1344     		add	r3, r3, r2
 5727 2d9c A24A     		ldr	r2, .L298+16
 5728 2d9e 1C46     		mov	r4, r3
 5729 2da0 1546     		mov	r5, r2
 5730 2da2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5731 2da4 2060     		str	r0, [r4]	@ unaligned
 5732 2da6 6160     		str	r1, [r4, #4]	@ unaligned
 5733 2da8 A260     		str	r2, [r4, #8]	@ unaligned
 5734 2daa E360     		str	r3, [r4, #12]	@ unaligned
 5735 2dac 2868     		ldr	r0, [r5]	@ unaligned
 5736 2dae 2061     		str	r0, [r4, #16]	@ unaligned
 5737 2db0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 5738 2db2 AA79     		ldrb	r2, [r5, #6]
 5739 2db4 A382     		strh	r3, [r4, #20]	@ unaligned
 5740 2db6 1346     		mov	r3, r2
 5741 2db8 A375     		strb	r3, [r4, #22]
 5742              	.L277:
 817:..\src/command_processing.c ****                     }
 5743              		.loc 1 817 0
 5744 2dba 00BF     		nop
 5745              	.L252:
 5746              		.loc 1 819 0 discriminator 13
 5747 2dbc 40E0     		b	.L188
 5748              	.L201:
 820:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 821:..\src/command_processing.c ****                     switch(*m_addr){
 5749              		.loc 1 821 0
 5750 2dbe 07F5AE53 		add	r3, r7, #5568
 5751 2dc2 03F11803 		add	r3, r3, #24
 5752 2dc6 1B68     		ldr	r3, [r3]
 5753 2dc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5754 2dca 002B     		cmp	r3, #0
 5755 2dcc 02D0     		beq	.L260
 5756 2dce 012B     		cmp	r3, #1
 5757 2dd0 17D0     		beq	.L261
 822:..\src/command_processing.c ****                         case 0:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 135


 823:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 824:..\src/command_processing.c ****                         break;
 825:..\src/command_processing.c ****                         case 1:
 826:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 827:..\src/command_processing.c ****                         break;
 828:..\src/command_processing.c ****                     }
 829:..\src/command_processing.c ****                     break;
 5758              		.loc 1 829 0
 5759 2dd2 35E0     		b	.L188
 5760              	.L260:
 823:..\src/command_processing.c ****                         break;
 5761              		.loc 1 823 0
 5762 2dd4 07F12803 		add	r3, r7, #40
 5763 2dd8 043B     		subs	r3, r3, #4
 5764 2dda 1846     		mov	r0, r3
 5765 2ddc FFF7FEFF 		bl	strlen
 5766 2de0 0346     		mov	r3, r0
 5767 2de2 1A46     		mov	r2, r3
 5768 2de4 07F12803 		add	r3, r7, #40
 5769 2de8 043B     		subs	r3, r3, #4
 5770 2dea 1344     		add	r3, r3, r2
 5771 2dec 8F4A     		ldr	r2, .L298+20
 5772 2dee 1D46     		mov	r5, r3
 5773 2df0 1446     		mov	r4, r2
 5774 2df2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5775 2df4 2860     		str	r0, [r5]	@ unaligned
 5776 2df6 6960     		str	r1, [r5, #4]	@ unaligned
 5777 2df8 AA60     		str	r2, [r5, #8]	@ unaligned
 5778 2dfa EB60     		str	r3, [r5, #12]	@ unaligned
 5779 2dfc 2068     		ldr	r0, [r4]	@ unaligned
 5780 2dfe 2861     		str	r0, [r5, #16]	@ unaligned
 824:..\src/command_processing.c ****                         case 1:
 5781              		.loc 1 824 0
 5782 2e00 16E0     		b	.L259
 5783              	.L261:
 826:..\src/command_processing.c ****                         break;
 5784              		.loc 1 826 0
 5785 2e02 07F12803 		add	r3, r7, #40
 5786 2e06 043B     		subs	r3, r3, #4
 5787 2e08 1846     		mov	r0, r3
 5788 2e0a FFF7FEFF 		bl	strlen
 5789 2e0e 0346     		mov	r3, r0
 5790 2e10 1A46     		mov	r2, r3
 5791 2e12 07F12803 		add	r3, r7, #40
 5792 2e16 043B     		subs	r3, r3, #4
 5793 2e18 1344     		add	r3, r3, r2
 5794 2e1a 854A     		ldr	r2, .L298+24
 5795 2e1c 1D46     		mov	r5, r3
 5796 2e1e 1446     		mov	r4, r2
 5797 2e20 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5798 2e22 2860     		str	r0, [r5]	@ unaligned
 5799 2e24 6960     		str	r1, [r5, #4]	@ unaligned
 5800 2e26 AA60     		str	r2, [r5, #8]	@ unaligned
 5801 2e28 EB60     		str	r3, [r5, #12]	@ unaligned
 5802 2e2a 2068     		ldr	r0, [r4]	@ unaligned
 5803 2e2c 2861     		str	r0, [r5, #16]	@ unaligned
 827:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 136


 5804              		.loc 1 827 0
 5805 2e2e 00BF     		nop
 5806              	.L259:
 5807              		.loc 1 829 0
 5808 2e30 06E0     		b	.L188
 5809              	.L273:
 682:..\src/command_processing.c ****                 case 2:     // control mode menu
 5810              		.loc 1 682 0
 5811 2e32 00BF     		nop
 5812 2e34 04E0     		b	.L188
 5813              	.L274:
 698:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5814              		.loc 1 698 0
 5815 2e36 00BF     		nop
 5816 2e38 02E0     		b	.L188
 5817              	.L275:
 742:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5818              		.loc 1 742 0
 5819 2e3a 00BF     		nop
 5820 2e3c 00E0     		b	.L188
 5821              	.L276:
 799:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 5822              		.loc 1 799 0
 5823 2e3e 00BF     		nop
 5824              	.L188:
 830:..\src/command_processing.c ****             }
 831:..\src/command_processing.c ****             //Recomputes string lenght
 832:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5825              		.loc 1 832 0
 5826 2e40 07F12803 		add	r3, r7, #40
 5827 2e44 043B     		subs	r3, r3, #4
 5828 2e46 1846     		mov	r0, r3
 5829 2e48 FFF7FEFF 		bl	strlen
 5830 2e4c 0346     		mov	r3, r0
 5831 2e4e DBB2     		uxtb	r3, r3
 5832 2e50 0133     		adds	r3, r3, #1
 5833 2e52 07F5AF52 		add	r2, r7, #5600
 5834 2e56 02F10202 		add	r2, r2, #2
 5835 2e5a 1370     		strb	r3, [r2]
 5836              	.L187:
 833:..\src/command_processing.c ****         }
 834:..\src/command_processing.c **** 
 835:..\src/command_processing.c ****         // Add parameter string to packet
 836:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5837              		.loc 1 836 0
 5838 2e5c 07F5AF53 		add	r3, r7, #5600
 5839 2e60 03F10203 		add	r3, r3, #2
 5840 2e64 1B78     		ldrb	r3, [r3]
 5841 2e66 07F5AF52 		add	r2, r7, #5600
 5842 2e6a 02F10702 		add	r2, r2, #7
 5843 2e6e 1370     		strb	r3, [r2]
 5844 2e70 45E0     		b	.L262
 5845              	.L263:
 837:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5846              		.loc 1 837 0 discriminator 3
 5847 2e72 07F5AF53 		add	r3, r7, #5600
 5848 2e76 03F10503 		add	r3, r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 137


 5849 2e7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5850 2e7c 3222     		movs	r2, #50
 5851 2e7e 02FB03F3 		mul	r3, r2, r3
 5852 2e82 1A1D     		adds	r2, r3, #4
 5853 2e84 07F5AF53 		add	r3, r7, #5600
 5854 2e88 03F10303 		add	r3, r3, #3
 5855 2e8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5856 2e8e 07F5AF53 		add	r3, r7, #5600
 5857 2e92 03F10503 		add	r3, r3, #5
 5858 2e96 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5859 2e98 07F10803 		add	r3, r7, #8
 5860 2e9c 043B     		subs	r3, r3, #4
 5861 2e9e 1B68     		ldr	r3, [r3]
 5862 2ea0 0344     		add	r3, r3, r0
 5863 2ea2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5864 2ea4 03FB01F3 		mul	r3, r3, r1
 5865 2ea8 1A44     		add	r2, r2, r3
 5866 2eaa 07F5AF53 		add	r3, r7, #5600
 5867 2eae 03F10203 		add	r3, r3, #2
 5868 2eb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5869 2eb4 1A44     		add	r2, r2, r3
 5870 2eb6 07F5AF53 		add	r3, r7, #5600
 5871 2eba 03F10703 		add	r3, r3, #7
 5872 2ebe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5873 2ec0 D21A     		subs	r2, r2, r3
 5874 2ec2 07F5AF53 		add	r3, r7, #5600
 5875 2ec6 03F10203 		add	r3, r3, #2
 5876 2eca 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5877 2ecc 07F5AF53 		add	r3, r7, #5600
 5878 2ed0 03F10703 		add	r3, r3, #7
 5879 2ed4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5880 2ed6 C91A     		subs	r1, r1, r3
 5881 2ed8 07F12803 		add	r3, r7, #40
 5882 2edc 043B     		subs	r3, r3, #4
 5883 2ede 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5884 2ee0 07F16803 		add	r3, r7, #104
 5885 2ee4 103B     		subs	r3, r3, #16
 5886 2ee6 9954     		strb	r1, [r3, r2]
 836:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5887              		.loc 1 836 0 discriminator 3
 5888 2ee8 07F5AF53 		add	r3, r7, #5600
 5889 2eec 03F10703 		add	r3, r3, #7
 5890 2ef0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5891 2ef2 013B     		subs	r3, r3, #1
 5892 2ef4 07F5AF52 		add	r2, r7, #5600
 5893 2ef8 02F10702 		add	r2, r2, #7
 5894 2efc 1370     		strb	r3, [r2]
 5895              	.L262:
 836:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5896              		.loc 1 836 0 is_stmt 0 discriminator 1
 5897 2efe 07F5AF53 		add	r3, r7, #5600
 5898 2f02 03F10703 		add	r3, r3, #7
 5899 2f06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5900 2f08 002B     		cmp	r3, #0
 5901 2f0a B2D1     		bne	.L263
 838:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 839:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 138


 5902              		.loc 1 839 0 is_stmt 1
 5903 2f0c 07F5AF53 		add	r3, r7, #5600
 5904 2f10 03F10503 		add	r3, r3, #5
 5905 2f14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5906 2f16 07F10802 		add	r2, r7, #8
 5907 2f1a 1268     		ldr	r2, [r2]
 5908 2f1c 1344     		add	r3, r3, r2
 5909 2f1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5910 2f20 002B     		cmp	r3, #0
 5911 2f22 3AD1     		bne	.L264
 840:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5912              		.loc 1 840 0
 5913 2f24 07F5AF53 		add	r3, r7, #5600
 5914 2f28 03F10503 		add	r3, r3, #5
 5915 2f2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5916 2f2e 3222     		movs	r2, #50
 5917 2f30 02FB03F3 		mul	r3, r2, r3
 5918 2f34 1A1D     		adds	r2, r3, #4
 5919 2f36 07F5AF53 		add	r3, r7, #5600
 5920 2f3a 03F10303 		add	r3, r3, #3
 5921 2f3e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5922 2f40 07F5AF53 		add	r3, r7, #5600
 5923 2f44 03F10503 		add	r3, r3, #5
 5924 2f48 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5925 2f4a 07F10803 		add	r3, r7, #8
 5926 2f4e 043B     		subs	r3, r3, #4
 5927 2f50 1B68     		ldr	r3, [r3]
 5928 2f52 0344     		add	r3, r3, r0
 5929 2f54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5930 2f56 03FB01F3 		mul	r3, r3, r1
 5931 2f5a 1A44     		add	r2, r2, r3
 5932 2f5c 07F5AF53 		add	r3, r7, #5600
 5933 2f60 03F10203 		add	r3, r3, #2
 5934 2f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5935 2f66 1A44     		add	r2, r2, r3
 5936 2f68 07F5AF53 		add	r3, r7, #5600
 5937 2f6c 03F10403 		add	r3, r3, #4
 5938 2f70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5939 2f72 07F5B051 		add	r1, r7, #5632
 5940 2f76 0968     		ldr	r1, [r1]
 5941 2f78 0B44     		add	r3, r3, r1
 5942 2f7a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5943 2f7c 07F16803 		add	r3, r7, #104
 5944 2f80 103B     		subs	r3, r3, #16
 5945 2f82 9954     		strb	r1, [r3, r2]
 841:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5946              		.loc 1 841 0
 5947 2f84 07F5AF53 		add	r3, r7, #5600
 5948 2f88 03F10403 		add	r3, r3, #4
 5949 2f8c 1B78     		ldrb	r3, [r3]
 5950 2f8e 0133     		adds	r3, r3, #1
 5951 2f90 07F5AF52 		add	r2, r7, #5600
 5952 2f94 02F10402 		add	r2, r2, #4
 5953 2f98 1370     		strb	r3, [r2]
 5954              	.L264:
 842:..\src/command_processing.c ****         }      
 843:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 139


 844:..\src/command_processing.c ****         // Add struct index after an empty bit
 845:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 846:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5955              		.loc 1 846 0
 5956 2f9a 07F5AF53 		add	r3, r7, #5600
 5957 2f9e 03F10503 		add	r3, r3, #5
 5958 2fa2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5959 2fa4 07F10802 		add	r2, r7, #8
 5960 2fa8 1268     		ldr	r2, [r2]
 5961 2faa 1344     		add	r3, r3, r2
 5962 2fac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5963 2fae 002B     		cmp	r3, #0
 5964 2fb0 40D1     		bne	.L265
 847:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 5965              		.loc 1 847 0
 5966 2fb2 07F5AF53 		add	r3, r7, #5600
 5967 2fb6 03F10503 		add	r3, r3, #5
 5968 2fba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5969 2fbc 3222     		movs	r2, #50
 5970 2fbe 02FB03F3 		mul	r3, r2, r3
 5971 2fc2 1A1D     		adds	r2, r3, #4
 5972 2fc4 07F5AF53 		add	r3, r7, #5600
 5973 2fc8 03F10303 		add	r3, r3, #3
 5974 2fcc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5975 2fce 07F5AF53 		add	r3, r7, #5600
 5976 2fd2 03F10503 		add	r3, r3, #5
 5977 2fd6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5978 2fd8 07F10803 		add	r3, r7, #8
 5979 2fdc 043B     		subs	r3, r3, #4
 5980 2fde 1B68     		ldr	r3, [r3]
 5981 2fe0 0344     		add	r3, r3, r0
 5982 2fe2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5983 2fe4 03FB01F3 		mul	r3, r3, r1
 5984 2fe8 1A44     		add	r2, r2, r3
 5985 2fea 07F5AF53 		add	r3, r7, #5600
 5986 2fee 03F10203 		add	r3, r3, #2
 5987 2ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5988 2ff4 1344     		add	r3, r3, r2
 5989 2ff6 9A1C     		adds	r2, r3, #2
 5990 2ff8 07F5AF53 		add	r3, r7, #5600
 5991 2ffc 03F10503 		add	r3, r3, #5
 5992 3000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5993 3002 07F10803 		add	r3, r7, #8
 5994 3006 083B     		subs	r3, r3, #8
 5995 3008 1B68     		ldr	r3, [r3]
 5996 300a 0B44     		add	r3, r3, r1
 5997 300c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5998 300e 07F16803 		add	r3, r7, #104
 5999 3012 103B     		subs	r3, r3, #16
 6000 3014 9954     		strb	r1, [r3, r2]
 6001 3016 3FE0     		b	.L266
 6002              	.L299:
 6003              		.align	2
 6004              	.L298:
 6005 3018 00000000 		.word	c_mem
 6006 301c E4010000 		.word	.LC121
 6007 3020 FC010000 		.word	.LC122
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 140


 6008 3024 14020000 		.word	.LC123
 6009 3028 2C020000 		.word	.LC124
 6010 302c 44020000 		.word	.LC125
 6011 3030 5C020000 		.word	.LC126
 6012              	.L265:
 848:..\src/command_processing.c ****         }
 849:..\src/command_processing.c ****         else {
 850:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 6013              		.loc 1 850 0
 6014 3034 07F5AF53 		add	r3, r7, #5600
 6015 3038 03F10503 		add	r3, r3, #5
 6016 303c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6017 303e 3222     		movs	r2, #50
 6018 3040 02FB03F3 		mul	r3, r2, r3
 6019 3044 1A1D     		adds	r2, r3, #4
 6020 3046 07F5AF53 		add	r3, r7, #5600
 6021 304a 03F10303 		add	r3, r3, #3
 6022 304e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6023 3050 07F5AF53 		add	r3, r7, #5600
 6024 3054 03F10503 		add	r3, r3, #5
 6025 3058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6026 305a 07F10803 		add	r3, r7, #8
 6027 305e 043B     		subs	r3, r3, #4
 6028 3060 1B68     		ldr	r3, [r3]
 6029 3062 0344     		add	r3, r3, r0
 6030 3064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6031 3066 03FB01F3 		mul	r3, r3, r1
 6032 306a 1A44     		add	r2, r2, r3
 6033 306c 07F5AF53 		add	r3, r7, #5600
 6034 3070 03F10203 		add	r3, r3, #2
 6035 3074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6036 3076 1344     		add	r3, r3, r2
 6037 3078 5A1C     		adds	r2, r3, #1
 6038 307a 07F5AF53 		add	r3, r7, #5600
 6039 307e 03F10503 		add	r3, r3, #5
 6040 3082 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6041 3084 07F10803 		add	r3, r7, #8
 6042 3088 083B     		subs	r3, r3, #8
 6043 308a 1B68     		ldr	r3, [r3]
 6044 308c 0B44     		add	r3, r3, r1
 6045 308e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6046 3090 07F16803 		add	r3, r7, #104
 6047 3094 103B     		subs	r3, r3, #16
 6048 3096 9954     		strb	r1, [r3, r2]
 6049              	.L266:
 385:..\src/command_processing.c ****         
 6050              		.loc 1 385 0 discriminator 2
 6051 3098 07F5AF53 		add	r3, r7, #5600
 6052 309c 03F10503 		add	r3, r3, #5
 6053 30a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6054 30a2 0133     		adds	r3, r3, #1
 6055 30a4 07F5AF52 		add	r2, r7, #5600
 6056 30a8 02F10502 		add	r2, r2, #5
 6057 30ac 1370     		strb	r3, [r2]
 6058              	.L65:
 385:..\src/command_processing.c ****         
 6059              		.loc 1 385 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 141


 6060 30ae 07F5AF53 		add	r3, r7, #5600
 6061 30b2 03F10503 		add	r3, r3, #5
 6062 30b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6063 30b8 4B2B     		cmp	r3, #75
 6064 30ba 7DF615A8 		bls	.L267
 851:..\src/command_processing.c ****         }
 852:..\src/command_processing.c ****     }
 853:..\src/command_processing.c **** 
 854:..\src/command_processing.c ****     // Add menu
 855:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6065              		.loc 1 855 0 is_stmt 1
 6066 30be 0023     		movs	r3, #0
 6067 30c0 07F5AF52 		add	r2, r7, #5600
 6068 30c4 02F10602 		add	r2, r2, #6
 6069 30c8 1370     		strb	r3, [r2]
 6070 30ca 71E0     		b	.L268
 6071              	.L271:
 856:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6072              		.loc 1 856 0
 6073 30cc 07F5AF53 		add	r3, r7, #5600
 6074 30d0 03F10603 		add	r3, r3, #6
 6075 30d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6076 30d6 9B00     		lsls	r3, r3, #2
 6077 30d8 07F5B052 		add	r2, r7, #5632
 6078 30dc 02F10C02 		add	r2, r2, #12
 6079 30e0 1268     		ldr	r2, [r2]
 6080 30e2 1344     		add	r3, r3, r2
 6081 30e4 1B68     		ldr	r3, [r3]
 6082 30e6 1846     		mov	r0, r3
 6083 30e8 FFF7FEFF 		bl	strlen
 6084 30ec 0346     		mov	r3, r0
 6085 30ee 07F5AF52 		add	r2, r7, #5600
 6086 30f2 02F10202 		add	r2, r2, #2
 6087 30f6 1370     		strb	r3, [r2]
 857:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6088              		.loc 1 857 0
 6089 30f8 07F5AF53 		add	r3, r7, #5600
 6090 30fc 03F10203 		add	r3, r3, #2
 6091 3100 1B78     		ldrb	r3, [r3]
 6092 3102 07F5AF52 		add	r2, r7, #5600
 6093 3106 02F10702 		add	r2, r2, #7
 6094 310a 1370     		strb	r3, [r2]
 6095 310c 3EE0     		b	.L269
 6096              	.L270:
 858:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 6097              		.loc 1 858 0 discriminator 3
 6098 310e 07F5AF53 		add	r3, r7, #5600
 6099 3112 03F10603 		add	r3, r3, #6
 6100 3116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6101 3118 9622     		movs	r2, #150
 6102 311a 02FB03F3 		mul	r3, r2, r3
 6103 311e 03F6DA62 		addw	r2, r3, #3802
 6104 3122 07F5AF53 		add	r3, r7, #5600
 6105 3126 03F10203 		add	r3, r3, #2
 6106 312a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6107 312c 1A44     		add	r2, r2, r3
 6108 312e 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 142


 6109 3132 03F10703 		add	r3, r3, #7
 6110 3136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6111 3138 D21A     		subs	r2, r2, r3
 6112 313a 07F5AF53 		add	r3, r7, #5600
 6113 313e 03F10603 		add	r3, r3, #6
 6114 3142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6115 3144 9B00     		lsls	r3, r3, #2
 6116 3146 07F5B051 		add	r1, r7, #5632
 6117 314a 01F10C01 		add	r1, r1, #12
 6118 314e 0968     		ldr	r1, [r1]
 6119 3150 0B44     		add	r3, r3, r1
 6120 3152 1B68     		ldr	r3, [r3]
 6121 3154 07F5AF51 		add	r1, r7, #5600
 6122 3158 01F10201 		add	r1, r1, #2
 6123 315c 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6124 315e 07F5AF51 		add	r1, r7, #5600
 6125 3162 01F10701 		add	r1, r1, #7
 6126 3166 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6127 3168 411A     		subs	r1, r0, r1
 6128 316a 0B44     		add	r3, r3, r1
 6129 316c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6130 316e 07F16803 		add	r3, r7, #104
 6131 3172 103B     		subs	r3, r3, #16
 6132 3174 9954     		strb	r1, [r3, r2]
 857:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6133              		.loc 1 857 0 discriminator 3
 6134 3176 07F5AF53 		add	r3, r7, #5600
 6135 317a 03F10703 		add	r3, r3, #7
 6136 317e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6137 3180 013B     		subs	r3, r3, #1
 6138 3182 07F5AF52 		add	r2, r7, #5600
 6139 3186 02F10702 		add	r2, r2, #7
 6140 318a 1370     		strb	r3, [r2]
 6141              	.L269:
 857:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6142              		.loc 1 857 0 is_stmt 0 discriminator 1
 6143 318c 07F5AF53 		add	r3, r7, #5600
 6144 3190 03F10703 		add	r3, r3, #7
 6145 3194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6146 3196 002B     		cmp	r3, #0
 6147 3198 B9D1     		bne	.L270
 855:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6148              		.loc 1 855 0 is_stmt 1 discriminator 2
 6149 319a 07F5AF53 		add	r3, r7, #5600
 6150 319e 03F10603 		add	r3, r3, #6
 6151 31a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6152 31a4 0133     		adds	r3, r3, #1
 6153 31a6 07F5AF52 		add	r2, r7, #5600
 6154 31aa 02F10602 		add	r2, r2, #6
 6155 31ae 1370     		strb	r3, [r2]
 6156              	.L268:
 855:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6157              		.loc 1 855 0 is_stmt 0 discriminator 1
 6158 31b0 07F5AF53 		add	r3, r7, #5600
 6159 31b4 03F10603 		add	r3, r3, #6
 6160 31b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6161 31ba 0A2B     		cmp	r3, #10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 143


 6162 31bc 86D9     		bls	.L271
 859:..\src/command_processing.c ****     }
 860:..\src/command_processing.c ****     
 861:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 6163              		.loc 1 861 0 is_stmt 1
 6164 31be 07F5AF53 		add	r3, r7, #5600
 6165 31c2 1B88     		ldrh	r3, [r3]
 6166 31c4 5C1E     		subs	r4, r3, #1
 6167 31c6 07F5AF53 		add	r3, r7, #5600
 6168 31ca 1B88     		ldrh	r3, [r3]	@ movhi
 6169 31cc DBB2     		uxtb	r3, r3
 6170 31ce 013B     		subs	r3, r3, #1
 6171 31d0 DAB2     		uxtb	r2, r3
 6172 31d2 07F16803 		add	r3, r7, #104
 6173 31d6 103B     		subs	r3, r3, #16
 6174 31d8 1146     		mov	r1, r2
 6175 31da 1846     		mov	r0, r3
 6176 31dc FFF7FEFF 		bl	LCRChecksum
 6177 31e0 0346     		mov	r3, r0
 6178 31e2 1A46     		mov	r2, r3
 6179 31e4 07F16803 		add	r3, r7, #104
 6180 31e8 103B     		subs	r3, r3, #16
 6181 31ea 1A55     		strb	r2, [r3, r4]
 862:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 6182              		.loc 1 862 0
 6183 31ec 07F5AF53 		add	r3, r7, #5600
 6184 31f0 1A88     		ldrh	r2, [r3]
 6185 31f2 07F16803 		add	r3, r7, #104
 6186 31f6 103B     		subs	r3, r3, #16
 6187 31f8 1146     		mov	r1, r2
 6188 31fa 1846     		mov	r0, r3
 6189 31fc FFF7FEFF 		bl	commWrite
 863:..\src/command_processing.c **** }
 6190              		.loc 1 863 0
 6191 3200 00BF     		nop
 6192 3202 07F5AF57 		add	r7, r7, #5600
 6193 3206 0C37     		adds	r7, r7, #12
 6194              		.cfi_def_cfa_offset 20
 6195 3208 BD46     		mov	sp, r7
 6196              		.cfi_def_cfa_register 13
 6197              		@ sp needed
 6198 320a F0BD     		pop	{r4, r5, r6, r7, pc}
 6199              		.cfi_endproc
 6200              	.LFE67:
 6201              		.size	get_param_list, .-get_param_list
 6202              		.section	.rodata
 6203 0271 000000   		.align	2
 6204              	.LC128:
 6205 0274 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6205      204E6F6E 
 6205      650A3120 
 6205      2D3E204C 
 6205      6F772028 
 6206 02a4 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6206      74657220 
 6206      72656164 
 6206      290A3220 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 144


 6206      2D3E2048 
 6207 02d4 62697420 		.ascii	"bit register read)\012\000"
 6207      72656769 
 6207      73746572 
 6207      20726561 
 6207      64290A00 
 6208              		.align	2
 6209              	.LC129:
 6210 02e8 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6210      20466173 
 6210      743A7379 
 6210      6E322C20 
 6210      536C6F77 
 6211 0318 796E310A 		.ascii	"yn1\012\000"
 6211      00
 6212 031d 000000   		.align	2
 6213              	.LC130:
 6214 0320 30202D3E 		.ascii	"0 -> Fast:wrist, Slow:hand\0121 -> Slow:wrist, Fast"
 6214      20466173 
 6214      743A7772 
 6214      6973742C 
 6214      20536C6F 
 6215 0350 3A68616E 		.ascii	":hand\012\000"
 6215      640A00
 6216 0357 00       		.align	2
 6217              	.LC131:
 6218 0358 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6218      20557362 
 6218      0A31202D 
 6218      3E204861 
 6218      6E646C65 
 6219 0383 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6219      20454D47 
 6219      20496E74 
 6219      65677261 
 6219      6C0A3420 
 6220 03b0 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6220      616E6365 
 6220      640A3620 
 6220      2D3E204A 
 6220      6F797374 
 6221 03dd 204E430A 		.ascii	" NC\012\000"
 6221      00
 6222 03e2 0000     		.align	2
 6223              	.LC132:
 6224 03e4 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6224      20506F73 
 6224      6974696F 
 6224      6E0A3120 
 6224      2D3E2050 
 6225 040e 6F736974 		.ascii	"osition and Current\012\000"
 6225      696F6E20 
 6225      616E6420 
 6225      43757272 
 6225      656E740A 
 6226 0423 00       		.align	2
 6227              	.LC133:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 145


 6228 0424 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6228      20446561 
 6228      63746976 
 6228      61746520 
 6228      5B4E4F5D 
 6229 044e 0000     		.align	2
 6230              	.LC134:
 6231 0450 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6231      20526967 
 6231      68740A31 
 6231      202D3E20 
 6231      4C656674 
 6232 0466 0000     		.align	2
 6233              	.LC135:
 6234 0468 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6234      204F4646 
 6234      0A31202D 
 6234      3E204F4E 
 6234      0A546865 
 6235 048f 00       		.align	2
 6236              	.LC136:
 6237 0490 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6237      204E6F6E 
 6237      650A3120 
 6237      2D3E2053 
 6237      442F5254 
 6238 04bd 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6238      0A33202D 
 6238      3E204F74 
 6238      68657220 
 6238      5B4E2F41 
 6239 04e8 00       		.ascii	"\000"
 6240 04e9 000000   		.align	2
 6241              	.LC137:
 6242 04ec 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 6242      2047656E 
 6242      65726963 
 6242      20757365 
 6242      720A3120 
 6243 0516 20626F61 		.ascii	" board will reset\012\000"
 6243      72642077 
 6243      696C6C20 
 6243      72657365 
 6243      740A00
 6244 0529 000000   		.align	2
 6245              	.LC138:
 6246 052c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6246      204D4333 
 6246      33383837 
 6246      20285374 
 6246      616E6461 
 6247 055c 290A5468 		.ascii	")\012The board will reset\012\000"
 6247      6520626F 
 6247      61726420 
 6247      77696C6C 
 6247      20726573 
 6248              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 146


 6249              	.LC139:
 6250 0574 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6250      20534F46 
 6250      5448414E 
 6250      44205052 
 6250      4F0A3120 
 6251 05a1 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6251      4348414D 
 6251      42455253 
 6251      0A33202D 
 6251      3E204F54 
 6252 05ce 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6252      4D4F544F 
 6252      52530A54 
 6252      68652062 
 6252      6F617264 
 6253 05ef 00       		.align	2
 6254              	.LC140:
 6255 05f0 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6255      20436C6F 
 6255      73653A43 
 6255      572C204F 
 6255      70656E3A 
 6256 0620 00       		.ascii	"\000"
 6257 0621 000000   		.align	2
 6258              	.LC0:
 6259 0624 02       		.byte	2
 6260 0625 07       		.byte	7
 6261 0626 07       		.byte	7
 6262 0627 00       		.byte	0
 6263 0628 00       		.byte	0
 6264 0629 00       		.byte	0
 6265 062a 02       		.byte	2
 6266 062b 03       		.byte	3
 6267 062c 07       		.byte	7
 6268 062d 00       		.byte	0
 6269 062e 05       		.byte	5
 6270 062f 05       		.byte	5
 6271 0630 03       		.byte	3
 6272 0631 04       		.byte	4
 6273 0632 00       		.byte	0
 6274 0633 06       		.byte	6
 6275 0634 02       		.byte	2
 6276 0635 00       		.byte	0
 6277 0636 01       		.byte	1
 6278 0637 00       		.byte	0
 6279 0638 07       		.byte	7
 6280 0639 02       		.byte	2
 6281 063a 05       		.byte	5
 6282 063b 05       		.byte	5
 6283 063c 05       		.byte	5
 6284 063d 00       		.byte	0
 6285 063e 00       		.byte	0
 6286 063f 00       		.byte	0
 6287 0640 00       		.byte	0
 6288 0641 00       		.byte	0
 6289 0642 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 147


 6290 0643 02       		.byte	2
 6291 0644 00       		.byte	0
 6292 0645 02       		.byte	2
 6293 0646 00       		.byte	0
 6294 0647 09       		.byte	9
 6295 0648 02       		.byte	2
 6296 0649 00       		.byte	0
 6297 064a 02       		.byte	2
 6298 064b 00       		.byte	0
 6299 064c 02       		.byte	2
 6300 064d 01       		.byte	1
 6301 064e 00       		.byte	0
 6302 064f 07       		.byte	7
 6303 0650 07       		.byte	7
 6304 0651 00       		.byte	0
 6305 0652 00       		.byte	0
 6306 0653 00       		.byte	0
 6307 0654 02       		.byte	2
 6308 0655 03       		.byte	3
 6309 0656 07       		.byte	7
 6310 0657 00       		.byte	0
 6311 0658 05       		.byte	5
 6312 0659 05       		.byte	5
 6313 065a 03       		.byte	3
 6314 065b 00       		.byte	0
 6315 065c 01       		.byte	1
 6316 065d 00       		.byte	0
 6317 065e 07       		.byte	7
 6318 065f 02       		.byte	2
 6319 0660 00       		.byte	0
 6320 0661 02       		.byte	2
 6321 0662 00       		.byte	0
 6322 0663 02       		.byte	2
 6323 0664 01       		.byte	1
 6324 0665 02       		.byte	2
 6325 0666 02       		.byte	2
 6326 0667 00       		.byte	0
 6327 0668 02       		.byte	2
 6328 0669 02       		.byte	2
 6329 066a 04       		.byte	4
 6330 066b 03       		.byte	3
 6331 066c 04       		.byte	4
 6332 066d 00       		.byte	0
 6333 066e 00       		.byte	0
 6334 066f 04       		.byte	4
 6335 0670 00       		.byte	0
 6336 0671 00       		.byte	0
 6337 0672 02       		.byte	2
 6338 0673 05       		.byte	5
 6339 0674 07       		.byte	7
 6340 0675 07       		.byte	7
 6341 0676 0000     		.align	2
 6342              	.LC1:
 6343 0678 31202D20 		.ascii	"1 - Device ID:\000"
 6343      44657669 
 6343      63652049 
 6343      443A00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 148


 6344 0687 00       		.align	2
 6345              	.LC2:
 6346 0688 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6346      506F7369 
 6346      74696F6E 
 6346      20504944 
 6346      205B502C 
 6347              		.align	2
 6348              	.LC3:
 6349 06a4 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6349      43757272 
 6349      656E7420 
 6349      50494420 
 6349      5B502C20 
 6350 06bf 00       		.align	2
 6351              	.LC4:
 6352 06c0 34202D20 		.ascii	"4 - Startup Activation:\000"
 6352      53746172 
 6352      74757020 
 6352      41637469 
 6352      76617469 
 6353              		.align	2
 6354              	.LC5:
 6355 06d8 35202D20 		.ascii	"5 - Input mode:\000"
 6355      496E7075 
 6355      74206D6F 
 6355      64653A00 
 6356              		.align	2
 6357              	.LC6:
 6358 06e8 36202D20 		.ascii	"6 - Control mode:\000"
 6358      436F6E74 
 6358      726F6C20 
 6358      6D6F6465 
 6358      3A00
 6359 06fa 0000     		.align	2
 6360              	.LC7:
 6361 06fc 37202D20 		.ascii	"7 - Resolutions:\000"
 6361      5265736F 
 6361      6C757469 
 6361      6F6E733A 
 6361      00
 6362 070d 000000   		.align	2
 6363              	.LC8:
 6364 0710 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6364      4D656173 
 6364      7572656D 
 6364      656E7420 
 6364      4F666673 
 6365 0729 000000   		.align	2
 6366              	.LC9:
 6367 072c 39202D20 		.ascii	"9 - Multipliers:\000"
 6367      4D756C74 
 6367      69706C69 
 6367      6572733A 
 6367      00
 6368 073d 000000   		.align	2
 6369              	.LC10:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 149


 6370 0740 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6370      20506F73 
 6370      2E206C69 
 6370      6D697420 
 6370      61637469 
 6371              		.align	2
 6372              	.LC11:
 6373 0758 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6373      20506F73 
 6373      2E206C69 
 6373      6D697473 
 6373      205B696E 
 6374 0775 000000   		.align	2
 6375              	.LC12:
 6376 0778 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6376      204D6178 
 6376      20737465 
 6376      7073205B 
 6376      6E65672C 
 6377 0793 00       		.align	2
 6378              	.LC13:
 6379 0794 3133202D 		.ascii	"13 - Current limit:\000"
 6379      20437572 
 6379      72656E74 
 6379      206C696D 
 6379      69743A00 
 6380              		.align	2
 6381              	.LC14:
 6382 07a8 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6382      20454D47 
 6382      20746872 
 6382      6573686F 
 6382      6C64733A 
 6383 07bd 000000   		.align	2
 6384              	.LC15:
 6385 07c0 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6385      20454D47 
 6385      2063616C 
 6385      69627261 
 6385      74696F6E 
 6386 07e1 000000   		.align	2
 6387              	.LC16:
 6388 07e4 3136202D 		.ascii	"16 - EMG max values:\000"
 6388      20454D47 
 6388      206D6178 
 6388      2076616C 
 6388      7565733A 
 6389 07f9 000000   		.align	2
 6390              	.LC17:
 6391 07fc 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6391      20454D47 
 6391      206D6178 
 6391      20737065 
 6391      6564733A 
 6392 0811 000000   		.align	2
 6393              	.LC18:
 6394 0814 3138202D 		.ascii	"18 - Absolute encoder position:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 150


 6394      20416273 
 6394      6F6C7574 
 6394      6520656E 
 6394      636F6465 
 6395              		.align	2
 6396              	.LC19:
 6397 0834 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6397      204D6F74 
 6397      6F722068 
 6397      616E646C 
 6397      65207261 
 6398 084d 000000   		.align	2
 6399              	.LC20:
 6400 0850 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6400      2050574D 
 6400      20726573 
 6400      63616C69 
 6400      6E673A00 
 6401              		.align	2
 6402              	.LC21:
 6403 0864 3231202D 		.ascii	"21 - Current lookup:\000"
 6403      20437572 
 6403      72656E74 
 6403      206C6F6F 
 6403      6B75703A 
 6404 0879 000000   		.align	2
 6405              	.LC22:
 6406 087c 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6406      20446174 
 6406      65206F66 
 6406      206D6169 
 6406      6E74656E 
 6407 089e 0000     		.align	2
 6408              	.LC23:
 6409 08a0 3233202D 		.ascii	"23 - Rest position:\000"
 6409      20526573 
 6409      7420706F 
 6409      73697469 
 6409      6F6E3A00 
 6410              		.align	2
 6411              	.LC24:
 6412 08b4 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6412      20526573 
 6412      7420706F 
 6412      73697469 
 6412      6F6E2074 
 6413              		.align	2
 6414              	.LC25:
 6415 08d8 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6415      20526573 
 6415      74207665 
 6415      6C20636C 
 6415      6F737572 
 6416 08fb 00       		.align	2
 6417              	.LC26:
 6418 08fc 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6418      20526573 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 151


 6418      7420706F 
 6418      73697469 
 6418      6F6E2065 
 6419              		.align	2
 6420              	.LC27:
 6421 0918 3237202D 		.ascii	"27 - EMG inversion:\000"
 6421      20454D47 
 6421      20696E76 
 6421      65727369 
 6421      6F6E3A00 
 6422              		.align	2
 6423              	.LC28:
 6424 092c 3238202D 		.ascii	"28 - Hand side:\000"
 6424      2048616E 
 6424      64207369 
 6424      64653A00 
 6425              		.align	2
 6426              	.LC29:
 6427 093c 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6427      20456E61 
 6427      626C6520 
 6427      494D5573 
 6427      3A00
 6428 094e 0000     		.align	2
 6429              	.LC30:
 6430 0950 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6430      20526561 
 6430      64204578 
 6430      70616E73 
 6430      696F6E20 
 6431 096a 0000     		.align	2
 6432              	.LC31:
 6433 096c 3331202D 		.ascii	"31 - Reset counters:\000"
 6433      20526573 
 6433      65742063 
 6433      6F756E74 
 6433      6572733A 
 6434 0981 000000   		.align	2
 6435              	.LC32:
 6436 0984 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6436      204C6173 
 6436      74206368 
 6436      65636B65 
 6436      64205469 
 6437 09aa 0000     		.align	2
 6438              	.LC33:
 6439 09ac 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6439      20535049 
 6439      20726561 
 6439      64206465 
 6439      6C617920 
 6440 09c7 00       		.align	2
 6441              	.LC34:
 6442 09c8 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6442      204F6E20 
 6442      626F6172 
 6442      6420494D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 152


 6442      5520636F 
 6443 09ed 000000   		.align	2
 6444              	.LC35:
 6445 09f0 3335202D 		.ascii	"35 - User ID:\000"
 6445      20557365 
 6445      72204944 
 6445      3A00
 6446 09fe 0000     		.align	2
 6447              	.LC36:
 6448 0a00 3336202D 		.ascii	"36 - User code:\000"
 6448      20557365 
 6448      7220636F 
 6448      64653A00 
 6449              		.align	2
 6450              	.LC37:
 6451 0a10 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6451      20417373 
 6451      6F636961 
 6451      74656420 
 6451      656E636F 
 6452 0a2e 0000     		.align	2
 6453              	.LC38:
 6454 0a30 3338202D 		.ascii	"38 - Driver type:\000"
 6454      20447269 
 6454      76657220 
 6454      74797065 
 6454      3A00
 6455 0a42 0000     		.align	2
 6456              	.LC39:
 6457 0a44 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6457      2050574D 
 6457      20726174 
 6457      65206C69 
 6457      6D697465 
 6458 0a5b 00       		.align	2
 6459              	.LC40:
 6460 0a5c 3430202D 		.ascii	"40 - Not reversible:\000"
 6460      204E6F74 
 6460      20726576 
 6460      65727369 
 6460      626C653A 
 6461 0a71 000000   		.align	2
 6462              	.LC41:
 6463 0a74 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6463      20456E63 
 6463      20696478 
 6463      20757365 
 6463      6420666F 
 6464 0a93 00       		.align	2
 6465              	.LC42:
 6466 0a94 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6466      20476561 
 6466      72207061 
 6466      72616D73 
 6466      5B4E312C 
 6467 0ab2 0000     		.align	2
 6468              	.LC43:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 153


 6469 0ab4 3433202D 		.ascii	"43 - Use second motor:\000"
 6469      20557365 
 6469      20736563 
 6469      6F6E6420 
 6469      6D6F746F 
 6470 0acb 00       		.align	2
 6471              	.LC44:
 6472 0acc 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6472      20506F73 
 6472      6974696F 
 6472      6E205049 
 6472      44205B50 
 6473 0ae9 000000   		.align	2
 6474              	.LC45:
 6475 0aec 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6475      20437572 
 6475      72656E74 
 6475      20504944 
 6475      205B502C 
 6476              		.align	2
 6477              	.LC46:
 6478 0b08 3436202D 		.ascii	"46 - Startup Activation:\000"
 6478      20537461 
 6478      72747570 
 6478      20416374 
 6478      69766174 
 6479 0b21 000000   		.align	2
 6480              	.LC47:
 6481 0b24 3437202D 		.ascii	"47 - Input mode:\000"
 6481      20496E70 
 6481      7574206D 
 6481      6F64653A 
 6481      00
 6482 0b35 000000   		.align	2
 6483              	.LC48:
 6484 0b38 3438202D 		.ascii	"48 - Control mode:\000"
 6484      20436F6E 
 6484      74726F6C 
 6484      206D6F64 
 6484      653A00
 6485 0b4b 00       		.align	2
 6486              	.LC49:
 6487 0b4c 3439202D 		.ascii	"49 - Resolutions:\000"
 6487      20526573 
 6487      6F6C7574 
 6487      696F6E73 
 6487      3A00
 6488 0b5e 0000     		.align	2
 6489              	.LC50:
 6490 0b60 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6490      204D6561 
 6490      73757265 
 6490      6D656E74 
 6490      204F6666 
 6491 0b7a 0000     		.align	2
 6492              	.LC51:
 6493 0b7c 3531202D 		.ascii	"51 - Multipliers:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 154


 6493      204D756C 
 6493      7469706C 
 6493      69657273 
 6493      3A00
 6494 0b8e 0000     		.align	2
 6495              	.LC52:
 6496 0b90 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6496      20506F73 
 6496      2E206C69 
 6496      6D697420 
 6496      61637469 
 6497              		.align	2
 6498              	.LC53:
 6499 0ba8 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6499      20506F73 
 6499      2E206C69 
 6499      6D697473 
 6499      205B696E 
 6500 0bc5 000000   		.align	2
 6501              	.LC54:
 6502 0bc8 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6502      204D6178 
 6502      20737465 
 6502      7073205B 
 6502      6E65672C 
 6503 0be3 00       		.align	2
 6504              	.LC55:
 6505 0be4 3535202D 		.ascii	"55 - Current limit:\000"
 6505      20437572 
 6505      72656E74 
 6505      206C696D 
 6505      69743A00 
 6506              		.align	2
 6507              	.LC56:
 6508 0bf8 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6508      20416273 
 6508      6F6C7574 
 6508      6520656E 
 6508      636F6465 
 6509              		.align	2
 6510              	.LC57:
 6511 0c18 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6511      204D6F74 
 6511      6F722068 
 6511      616E646C 
 6511      65207261 
 6512 0c31 000000   		.align	2
 6513              	.LC58:
 6514 0c34 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6514      2050574D 
 6514      20726573 
 6514      63616C69 
 6514      6E673A00 
 6515              		.align	2
 6516              	.LC59:
 6517 0c48 3539202D 		.ascii	"59 - Current lookup:\000"
 6517      20437572 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 155


 6517      72656E74 
 6517      206C6F6F 
 6517      6B75703A 
 6518 0c5d 000000   		.align	2
 6519              	.LC60:
 6520 0c60 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6520      20417373 
 6520      6F636961 
 6520      74656420 
 6520      656E636F 
 6521 0c7e 0000     		.align	2
 6522              	.LC61:
 6523 0c80 3631202D 		.ascii	"61 - Driver type:\000"
 6523      20447269 
 6523      76657220 
 6523      74797065 
 6523      3A00
 6524 0c92 0000     		.align	2
 6525              	.LC62:
 6526 0c94 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6526      2050574D 
 6526      20726174 
 6526      65206C69 
 6526      6D697465 
 6527 0cab 00       		.align	2
 6528              	.LC63:
 6529 0cac 3633202D 		.ascii	"63 - Not reversible:\000"
 6529      204E6F74 
 6529      20726576 
 6529      65727369 
 6529      626C653A 
 6530 0cc1 000000   		.align	2
 6531              	.LC64:
 6532 0cc4 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6532      20456E63 
 6532      20696478 
 6532      20757365 
 6532      6420666F 
 6533 0ce3 00       		.align	2
 6534              	.LC65:
 6535 0ce4 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6535      20476561 
 6535      72207061 
 6535      72616D73 
 6535      5B4E312C 
 6536 0d02 0000     		.align	2
 6537              	.LC66:
 6538 0d04 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6538      20526561 
 6538      6420656E 
 6538      63207261 
 6538      77206C69 
 6539 0d1e 0000     		.align	2
 6540              	.LC67:
 6541 0d20 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6541      20526561 
 6541      6420656E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 156


 6541      63207261 
 6541      77206C69 
 6542 0d3a 0000     		.align	2
 6543              	.LC68:
 6544 0d3c 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6544      20526561 
 6544      64206164 
 6544      64697469 
 6544      6F6E616C 
 6545 0d5b 00       		.align	2
 6546              	.LC69:
 6547 0d5c 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6547      20414443 
 6547      20636861 
 6547      6E6E656C 
 6547      205B312D 
 6548              		.align	2
 6549              	.LC70:
 6550 0d74 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6550      20414443 
 6550      20636861 
 6550      6E6E656C 
 6550      205B372D 
 6551 0d8d 000000   		.align	2
 6552              	.LC71:
 6553 0d90 3731202D 		.ascii	"71 - Joystick closure speed:\000"
 6553      204A6F79 
 6553      73746963 
 6553      6B20636C 
 6553      6F737572 
 6554 0dad 000000   		.align	2
 6555              	.LC72:
 6556 0db0 3732202D 		.ascii	"72 - Joystick threshold:\000"
 6556      204A6F79 
 6556      73746963 
 6556      6B207468 
 6556      72657368 
 6557 0dc9 000000   		.align	2
 6558              	.LC73:
 6559 0dcc 3733202D 		.ascii	"73 - Joystick gains:\000"
 6559      204A6F79 
 6559      73746963 
 6559      6B206761 
 6559      696E733A 
 6560 0de1 000000   		.align	2
 6561              	.LC74:
 6562 0de4 3734202D 		.ascii	"74 - Device type:\000"
 6562      20446576 
 6562      69636520 
 6562      74797065 
 6562      3A00
 6563 0df6 0000     		.align	2
 6564              	.LC75:
 6565 0df8 3735202D 		.ascii	"75 - EMG FSM act.mode:\000"
 6565      20454D47 
 6565      2046534D 
 6565      20616374 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 157


 6565      2E6D6F64 
 6566 0e0f 00       		.align	2
 6567              	.LC76:
 6568 0e10 3736202D 		.ascii	"76 - Fast act.thresholds:\000"
 6568      20466173 
 6568      74206163 
 6568      742E7468 
 6568      72657368 
 6569 0e2a 0000     		.align	2
 6570              	.LC77:
 6571 0e2c 3737202D 		.ascii	"77 - Wrist direction:\000"
 6571      20577269 
 6571      73742064 
 6571      69726563 
 6571      74696F6E 
 6572 0e42 0000     		.align	2
 6573              	.LC78:
 6574 0e44 3738202D 		.ascii	"78 - Slave communication active:\000"
 6574      20536C61 
 6574      76652063 
 6574      6F6D6D75 
 6574      6E696361 
 6575 0e65 000000   		.align	2
 6576              	.LC79:
 6577 0e68 3739202D 		.ascii	"79 - Slave ID:\000"
 6577      20536C61 
 6577      76652049 
 6577      443A00
 6578 0e77 00       		.align	2
 6579              	.LC80:
 6580 0e78 3830202D 		.ascii	"80 - Maximum slave residual current:\000"
 6580      204D6178 
 6580      696D756D 
 6580      20736C61 
 6580      76652072 
 6581 0e9d 000000   		.align	2
 6582              	.LC81:
 6583 0ea0 3831202D 		.ascii	"81 - Maximum pressure feedback (kPa):\000"
 6583      204D6178 
 6583      696D756D 
 6583      20707265 
 6583      73737572 
 6584 0ec6 0000     		.align	2
 6585              	.LC82:
 6586 0ec8 3832202D 		.ascii	"82 - Proportional pressure error gain:\000"
 6586      2050726F 
 6586      706F7274 
 6586      696F6E61 
 6586      6C207072 
 6587 0eef 00       		.align	2
 6588              	.LC127:
 6589 0ef0 78060000 		.word	.LC1
 6590 0ef4 88060000 		.word	.LC2
 6591 0ef8 A4060000 		.word	.LC3
 6592 0efc C0060000 		.word	.LC4
 6593 0f00 D8060000 		.word	.LC5
 6594 0f04 E8060000 		.word	.LC6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 158


 6595 0f08 FC060000 		.word	.LC7
 6596 0f0c 10070000 		.word	.LC8
 6597 0f10 2C070000 		.word	.LC9
 6598 0f14 40070000 		.word	.LC10
 6599 0f18 58070000 		.word	.LC11
 6600 0f1c 78070000 		.word	.LC12
 6601 0f20 94070000 		.word	.LC13
 6602 0f24 A8070000 		.word	.LC14
 6603 0f28 C0070000 		.word	.LC15
 6604 0f2c E4070000 		.word	.LC16
 6605 0f30 FC070000 		.word	.LC17
 6606 0f34 14080000 		.word	.LC18
 6607 0f38 34080000 		.word	.LC19
 6608 0f3c 50080000 		.word	.LC20
 6609 0f40 64080000 		.word	.LC21
 6610 0f44 7C080000 		.word	.LC22
 6611 0f48 A0080000 		.word	.LC23
 6612 0f4c B4080000 		.word	.LC24
 6613 0f50 D8080000 		.word	.LC25
 6614 0f54 FC080000 		.word	.LC26
 6615 0f58 18090000 		.word	.LC27
 6616 0f5c 2C090000 		.word	.LC28
 6617 0f60 3C090000 		.word	.LC29
 6618 0f64 50090000 		.word	.LC30
 6619 0f68 6C090000 		.word	.LC31
 6620 0f6c 84090000 		.word	.LC32
 6621 0f70 AC090000 		.word	.LC33
 6622 0f74 C8090000 		.word	.LC34
 6623 0f78 F0090000 		.word	.LC35
 6624 0f7c 000A0000 		.word	.LC36
 6625 0f80 100A0000 		.word	.LC37
 6626 0f84 300A0000 		.word	.LC38
 6627 0f88 440A0000 		.word	.LC39
 6628 0f8c 5C0A0000 		.word	.LC40
 6629 0f90 740A0000 		.word	.LC41
 6630 0f94 940A0000 		.word	.LC42
 6631 0f98 B40A0000 		.word	.LC43
 6632 0f9c CC0A0000 		.word	.LC44
 6633 0fa0 EC0A0000 		.word	.LC45
 6634 0fa4 080B0000 		.word	.LC46
 6635 0fa8 240B0000 		.word	.LC47
 6636 0fac 380B0000 		.word	.LC48
 6637 0fb0 4C0B0000 		.word	.LC49
 6638 0fb4 600B0000 		.word	.LC50
 6639 0fb8 7C0B0000 		.word	.LC51
 6640 0fbc 900B0000 		.word	.LC52
 6641 0fc0 A80B0000 		.word	.LC53
 6642 0fc4 C80B0000 		.word	.LC54
 6643 0fc8 E40B0000 		.word	.LC55
 6644 0fcc F80B0000 		.word	.LC56
 6645 0fd0 180C0000 		.word	.LC57
 6646 0fd4 340C0000 		.word	.LC58
 6647 0fd8 480C0000 		.word	.LC59
 6648 0fdc 600C0000 		.word	.LC60
 6649 0fe0 800C0000 		.word	.LC61
 6650 0fe4 940C0000 		.word	.LC62
 6651 0fe8 AC0C0000 		.word	.LC63
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 159


 6652 0fec C40C0000 		.word	.LC64
 6653 0ff0 E40C0000 		.word	.LC65
 6654 0ff4 040D0000 		.word	.LC66
 6655 0ff8 200D0000 		.word	.LC67
 6656 0ffc 3C0D0000 		.word	.LC68
 6657 1000 5C0D0000 		.word	.LC69
 6658 1004 740D0000 		.word	.LC70
 6659 1008 900D0000 		.word	.LC71
 6660 100c B00D0000 		.word	.LC72
 6661 1010 CC0D0000 		.word	.LC73
 6662 1014 E40D0000 		.word	.LC74
 6663 1018 F80D0000 		.word	.LC75
 6664 101c 100E0000 		.word	.LC76
 6665 1020 2C0E0000 		.word	.LC77
 6666 1024 440E0000 		.word	.LC78
 6667 1028 680E0000 		.word	.LC79
 6668 102c 780E0000 		.word	.LC80
 6669 1030 A00E0000 		.word	.LC81
 6670 1034 C80E0000 		.word	.LC82
 6671              		.align	2
 6672              	.LC84:
 6673 1038 03       		.byte	3
 6674 1039 01       		.byte	1
 6675 103a 02       		.byte	2
 6676 103b 03       		.byte	3
 6677 103c 03       		.byte	3
 6678 103d 03       		.byte	3
 6679 103e 03       		.byte	3
 6680 103f 03       		.byte	3
 6681 1040 03       		.byte	3
 6682 1041 04       		.byte	4
 6683 1042 05       		.byte	5
 6684 1043 06       		.byte	6
 6685 1044 03       		.byte	3
 6686 1045 07       		.byte	7
 6687 1046 08       		.byte	8
 6688 1047 09       		.byte	9
 6689 1048 03       		.byte	3
 6690 1049 05       		.byte	5
 6691 104a 03       		.byte	3
 6692 104b 01       		.byte	1
 6693 104c 02       		.byte	2
 6694 104d 03       		.byte	3
 6695 104e 03       		.byte	3
 6696 104f 03       		.byte	3
 6697 1050 09       		.byte	9
 6698 1051 03       		.byte	3
 6699 1052 05       		.byte	5
 6700 1053 0A       		.byte	10
 6701 1054 0B       		.byte	11
 6702 1055 0C       		.byte	12
 6703 1056 03       		.byte	3
 6704 1057 00       		.align	2
 6705              	.LC85:
 6706 1058 02       		.byte	2
 6707 1059 03       		.byte	3
 6708 105a 08       		.byte	8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 160


 6709 105b 0B       		.byte	11
 6710 105c 17       		.byte	23
 6711 105d 2C       		.byte	44
 6712 105e 2D       		.byte	45
 6713 105f 32       		.byte	50
 6714 1060 35       		.byte	53
 6715 1061 000000   		.align	2
 6716              	.LC86:
 6717 1064 02       		.byte	2
 6718 1065 03       		.byte	3
 6719 1066 05       		.byte	5
 6720 1067 08       		.byte	8
 6721 1068 0B       		.byte	11
 6722 1069 17       		.byte	23
 6723 106a 18       		.byte	24
 6724 106b 1C       		.byte	28
 6725 106c 1F       		.byte	31
 6726 106d 20       		.byte	32
 6727 106e 26       		.byte	38
 6728 106f 2C       		.byte	44
 6729 1070 2D       		.byte	45
 6730 1071 2F       		.byte	47
 6731 1072 32       		.byte	50
 6732 1073 35       		.byte	53
 6733 1074 3D       		.byte	61
 6734 1075 4A       		.byte	74
 6735              		.section	.text.manage_param_list,"ax",%progbits
 6736              		.align	2
 6737              		.global	manage_param_list
 6738              		.thumb
 6739              		.thumb_func
 6740              		.type	manage_param_list, %function
 6741              	manage_param_list:
 6742              	.LFB68:
 864:..\src/command_processing.c **** 
 865:..\src/command_processing.c **** //==============================================================================
 866:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 867:..\src/command_processing.c **** //==============================================================================
 868:..\src/command_processing.c **** 
 869:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6743              		.loc 1 869 0
 6744              		.cfi_startproc
 6745              		@ args = 0, pretend = 0, frame = 1408
 6746              		@ frame_needed = 1, uses_anonymous_args = 0
 6747 0000 B0B5     		push	{r4, r5, r7, lr}
 6748              		.cfi_def_cfa_offset 16
 6749              		.cfi_offset 4, -16
 6750              		.cfi_offset 5, -12
 6751              		.cfi_offset 7, -8
 6752              		.cfi_offset 14, -4
 6753 0002 ADF5B26D 		sub	sp, sp, #1424
 6754              		.cfi_def_cfa_offset 1440
 6755 0006 04AF     		add	r7, sp, #16
 6756              		.cfi_def_cfa 7, 1424
 6757 0008 0246     		mov	r2, r0
 6758 000a BB1D     		adds	r3, r7, #6
 6759 000c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 161


 870:..\src/command_processing.c ****     uint8 CYDATA i, j;
 871:..\src/command_processing.c ****     uint8 CYDATA sod;
 872:..\src/command_processing.c ****     uint8 PARAM_IDX;
 873:..\src/command_processing.c ****     int16 aux_int16;
 874:..\src/command_processing.c ****     uint16 aux_uint16;
 875:..\src/command_processing.c ****     int32 aux_int32;
 876:..\src/command_processing.c ****     uint32 aux_uint32;
 877:..\src/command_processing.c ****     float aux_float;
 878:..\src/command_processing.c ****  
 879:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6760              		.loc 1 879 0
 6761 000e 0023     		movs	r3, #0
 6762 0010 87F87535 		strb	r3, [r7, #1397]
 880:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6763              		.loc 1 880 0
 6764 0014 0123     		movs	r3, #1
 6765 0016 87F87435 		strb	r3, [r7, #1396]
 881:..\src/command_processing.c ****     
 882:..\src/command_processing.c ****     // Arrays
 883:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6766              		.loc 1 883 0
 6767 001a 054B     		ldr	r3, .L364
 6768 001c C7F87835 		str	r3, [r7, #1400]
 884:..\src/command_processing.c ****     
 885:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6769              		.loc 1 885 0
 6770 0020 BB1D     		adds	r3, r7, #6
 6771 0022 1B88     		ldrh	r3, [r3]
 6772 0024 002B     		cmp	r3, #0
 6773 0026 07D0     		beq	.L301
 886:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6774              		.loc 1 886 0
 6775 0028 024B     		ldr	r3, .L364+4
 6776 002a C7F87835 		str	r3, [r7, #1400]
 6777 002e 03E0     		b	.L365
 6778              	.L366:
 6779              		.align	2
 6780              	.L364:
 6781 0030 00000000 		.word	c_mem
 6782 0034 00000000 		.word	g_mem
 6783              	.L365:
 6784              	.L301:
 887:..\src/command_processing.c ****     }
 888:..\src/command_processing.c ****  
 889:..\src/command_processing.c ****     
 890:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 891:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6785              		.loc 1 892 0
 6786 0038 D7F87835 		ldr	r3, [r7, #1400]
 6787 003c 03F1A002 		add	r2, r3, #160
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6788              		.loc 1 891 0
 6789 0040 07F58363 		add	r3, r7, #1048
 6790 0044 1A60     		str	r2, [r3]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6791              		.loc 1 893 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 162


 6792 0046 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6793 004a 1346     		mov	r3, r2
 6794 004c DB00     		lsls	r3, r3, #3
 6795 004e 9B1A     		subs	r3, r3, r2
 6796 0050 1B01     		lsls	r3, r3, #4
 6797 0052 B033     		adds	r3, r3, #176
 6798 0054 D7F87825 		ldr	r2, [r7, #1400]
 6799 0058 1A44     		add	r2, r2, r3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6800              		.loc 1 891 0
 6801 005a 07F58363 		add	r3, r7, #1048
 6802 005e 5A60     		str	r2, [r3, #4]
 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6803              		.loc 1 894 0
 6804 0060 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6805 0064 1346     		mov	r3, r2
 6806 0066 DB00     		lsls	r3, r3, #3
 6807 0068 9B1A     		subs	r3, r3, r2
 6808 006a 1B01     		lsls	r3, r3, #4
 6809 006c B833     		adds	r3, r3, #184
 6810 006e D7F87825 		ldr	r2, [r7, #1400]
 6811 0072 1344     		add	r3, r3, r2
 6812 0074 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6813              		.loc 1 891 0
 6814 0076 07F58363 		add	r3, r7, #1048
 6815 007a 9A60     		str	r2, [r3, #8]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6816              		.loc 1 895 0
 6817 007c 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6818 0080 1346     		mov	r3, r2
 6819 0082 DB00     		lsls	r3, r3, #3
 6820 0084 9B1A     		subs	r3, r3, r2
 6821 0086 1B01     		lsls	r3, r3, #4
 6822 0088 E033     		adds	r3, r3, #224
 6823 008a D7F87825 		ldr	r2, [r7, #1400]
 6824 008e 1A44     		add	r2, r2, r3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6825              		.loc 1 891 0
 6826 0090 07F58363 		add	r3, r7, #1048
 6827 0094 DA60     		str	r2, [r3, #12]
 896:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6828              		.loc 1 896 0
 6829 0096 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6830 009a 1346     		mov	r3, r2
 6831 009c DB00     		lsls	r3, r3, #3
 6832 009e 9B1A     		subs	r3, r3, r2
 6833 00a0 1B01     		lsls	r3, r3, #4
 6834 00a2 03F58473 		add	r3, r3, #264
 6835 00a6 D7F87825 		ldr	r2, [r7, #1400]
 6836 00aa 1344     		add	r3, r3, r2
 6837 00ac 9A1D     		adds	r2, r3, #6
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6838              		.loc 1 891 0
 6839 00ae 07F58363 		add	r3, r7, #1048
 6840 00b2 1A61     		str	r2, [r3, #16]
 897:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 163


 6841              		.loc 1 897 0
 6842 00b4 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6843 00b8 1346     		mov	r3, r2
 6844 00ba DB00     		lsls	r3, r3, #3
 6845 00bc 9B1A     		subs	r3, r3, r2
 6846 00be 1B01     		lsls	r3, r3, #4
 6847 00c0 03F58473 		add	r3, r3, #264
 6848 00c4 D7F87825 		ldr	r2, [r7, #1400]
 6849 00c8 1344     		add	r3, r3, r2
 6850 00ca DA1D     		adds	r2, r3, #7
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6851              		.loc 1 891 0
 6852 00cc 07F58363 		add	r3, r7, #1048
 6853 00d0 5A61     		str	r2, [r3, #20]
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6854              		.loc 1 898 0
 6855 00d2 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6856 00d6 D7F87815 		ldr	r1, [r7, #1400]
 6857 00da 1346     		mov	r3, r2
 6858 00dc DB00     		lsls	r3, r3, #3
 6859 00de 9B1A     		subs	r3, r3, r2
 6860 00e0 1B01     		lsls	r3, r3, #4
 6861 00e2 0B44     		add	r3, r3, r1
 6862 00e4 03F58873 		add	r3, r3, #272
 6863 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6864 00ea 1A46     		mov	r2, r3
 6865 00ec 1346     		mov	r3, r2
 6866 00ee 5B00     		lsls	r3, r3, #1
 6867 00f0 1344     		add	r3, r3, r2
 6868 00f2 1B01     		lsls	r3, r3, #4
 6869 00f4 03F5C873 		add	r3, r3, #400
 6870 00f8 D7F87825 		ldr	r2, [r7, #1400]
 6871 00fc 1344     		add	r3, r3, r2
 6872 00fe 5A1D     		adds	r2, r3, #5
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6873              		.loc 1 891 0
 6874 0100 07F58363 		add	r3, r7, #1048
 6875 0104 9A61     		str	r2, [r3, #24]
 899:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6876              		.loc 1 899 0
 6877 0106 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6878 010a D7F87815 		ldr	r1, [r7, #1400]
 6879 010e 1346     		mov	r3, r2
 6880 0110 DB00     		lsls	r3, r3, #3
 6881 0112 9B1A     		subs	r3, r3, r2
 6882 0114 1B01     		lsls	r3, r3, #4
 6883 0116 0B44     		add	r3, r3, r1
 6884 0118 03F58873 		add	r3, r3, #272
 6885 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6886 011e 1A46     		mov	r2, r3
 6887 0120 1346     		mov	r3, r2
 6888 0122 5B00     		lsls	r3, r3, #1
 6889 0124 1344     		add	r3, r3, r2
 6890 0126 1B01     		lsls	r3, r3, #4
 6891 0128 03F5CC73 		add	r3, r3, #408
 6892 012c D7F87825 		ldr	r2, [r7, #1400]
 6893 0130 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 164


 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6894              		.loc 1 891 0
 6895 0132 07F58363 		add	r3, r7, #1048
 6896 0136 DA61     		str	r2, [r3, #28]
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6897              		.loc 1 900 0
 6898 0138 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6899 013c D7F87815 		ldr	r1, [r7, #1400]
 6900 0140 1346     		mov	r3, r2
 6901 0142 DB00     		lsls	r3, r3, #3
 6902 0144 9B1A     		subs	r3, r3, r2
 6903 0146 1B01     		lsls	r3, r3, #4
 6904 0148 0B44     		add	r3, r3, r1
 6905 014a 03F58873 		add	r3, r3, #272
 6906 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6907 0150 1A46     		mov	r2, r3
 6908 0152 1346     		mov	r3, r2
 6909 0154 5B00     		lsls	r3, r3, #1
 6910 0156 1344     		add	r3, r3, r2
 6911 0158 1B01     		lsls	r3, r3, #4
 6912 015a 03F5D073 		add	r3, r3, #416
 6913 015e D7F87825 		ldr	r2, [r7, #1400]
 6914 0162 1344     		add	r3, r3, r2
 6915 0164 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6916              		.loc 1 891 0
 6917 0166 07F58363 		add	r3, r7, #1048
 6918 016a 1A62     		str	r2, [r3, #32]
 901:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6919              		.loc 1 901 0
 6920 016c 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6921 0170 1346     		mov	r3, r2
 6922 0172 DB00     		lsls	r3, r3, #3
 6923 0174 9B1A     		subs	r3, r3, r2
 6924 0176 1B01     		lsls	r3, r3, #4
 6925 0178 E033     		adds	r3, r3, #224
 6926 017a D7F87825 		ldr	r2, [r7, #1400]
 6927 017e 1344     		add	r3, r3, r2
 6928 0180 DA1C     		adds	r2, r3, #3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6929              		.loc 1 891 0
 6930 0182 07F58363 		add	r3, r7, #1048
 6931 0186 5A62     		str	r2, [r3, #36]
 902:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6932              		.loc 1 902 0
 6933 0188 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6934 018c 1346     		mov	r3, r2
 6935 018e DB00     		lsls	r3, r3, #3
 6936 0190 9B1A     		subs	r3, r3, r2
 6937 0192 1B01     		lsls	r3, r3, #4
 6938 0194 E033     		adds	r3, r3, #224
 6939 0196 D7F87825 		ldr	r2, [r7, #1400]
 6940 019a 1344     		add	r3, r3, r2
 6941 019c 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6942              		.loc 1 891 0
 6943 019e 07F58363 		add	r3, r7, #1048
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 165


 6944 01a2 9A62     		str	r2, [r3, #40]
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 6945              		.loc 1 903 0
 6946 01a4 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6947 01a8 1346     		mov	r3, r2
 6948 01aa DB00     		lsls	r3, r3, #3
 6949 01ac 9B1A     		subs	r3, r3, r2
 6950 01ae 1B01     		lsls	r3, r3, #4
 6951 01b0 E833     		adds	r3, r3, #232
 6952 01b2 D7F87825 		ldr	r2, [r7, #1400]
 6953 01b6 1344     		add	r3, r3, r2
 6954 01b8 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6955              		.loc 1 891 0
 6956 01ba 07F58363 		add	r3, r7, #1048
 6957 01be DA62     		str	r2, [r3, #44]
 904:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 6958              		.loc 1 904 0
 6959 01c0 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6960 01c4 1346     		mov	r3, r2
 6961 01c6 DB00     		lsls	r3, r3, #3
 6962 01c8 9B1A     		subs	r3, r3, r2
 6963 01ca 1B01     		lsls	r3, r3, #4
 6964 01cc 03F58473 		add	r3, r3, #264
 6965 01d0 D7F87825 		ldr	r2, [r7, #1400]
 6966 01d4 1344     		add	r3, r3, r2
 6967 01d6 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6968              		.loc 1 891 0
 6969 01d8 07F58363 		add	r3, r7, #1048
 6970 01dc 1A63     		str	r2, [r3, #48]
 905:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 6971              		.loc 1 905 0
 6972 01de D7F87835 		ldr	r3, [r7, #1400]
 6973 01e2 03F5F872 		add	r2, r3, #496
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6974              		.loc 1 891 0
 6975 01e6 07F58363 		add	r3, r7, #1048
 6976 01ea 5A63     		str	r2, [r3, #52]
 906:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 6977              		.loc 1 906 0
 6978 01ec D7F87835 		ldr	r3, [r7, #1400]
 6979 01f0 03F5FF72 		add	r2, r3, #510
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6980              		.loc 1 891 0
 6981 01f4 07F58363 		add	r3, r7, #1048
 6982 01f8 9A63     		str	r2, [r3, #56]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 6983              		.loc 1 907 0
 6984 01fa D7F87835 		ldr	r3, [r7, #1400]
 6985 01fe 03F5FA72 		add	r2, r3, #500
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6986              		.loc 1 891 0
 6987 0202 07F58363 		add	r3, r7, #1048
 6988 0206 DA63     		str	r2, [r3, #60]
 908:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 6989              		.loc 1 908 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 166


 6990 0208 D7F87835 		ldr	r3, [r7, #1400]
 6991 020c 03F5FE72 		add	r2, r3, #508
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6992              		.loc 1 891 0
 6993 0210 07F58363 		add	r3, r7, #1048
 6994 0214 1A64     		str	r2, [r3, #64]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 6995              		.loc 1 909 0
 6996 0216 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6997 021a D7F87815 		ldr	r1, [r7, #1400]
 6998 021e 1346     		mov	r3, r2
 6999 0220 DB00     		lsls	r3, r3, #3
 7000 0222 9B1A     		subs	r3, r3, r2
 7001 0224 1B01     		lsls	r3, r3, #4
 7002 0226 0B44     		add	r3, r3, r1
 7003 0228 03F58873 		add	r3, r3, #272
 7004 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7005 022e 1A46     		mov	r2, r3
 7006 0230 1346     		mov	r3, r2
 7007 0232 5B00     		lsls	r3, r3, #1
 7008 0234 1344     		add	r3, r3, r2
 7009 0236 1B01     		lsls	r3, r3, #4
 7010 0238 03F5D873 		add	r3, r3, #432
 7011 023c D7F87825 		ldr	r2, [r7, #1400]
 7012 0240 1A44     		add	r2, r2, r3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7013              		.loc 1 891 0
 7014 0242 07F58363 		add	r3, r7, #1048
 7015 0246 5A64     		str	r2, [r3, #68]
 910:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7016              		.loc 1 910 0
 7017 0248 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7018 024c D7F87815 		ldr	r1, [r7, #1400]
 7019 0250 1346     		mov	r3, r2
 7020 0252 DB00     		lsls	r3, r3, #3
 7021 0254 9B1A     		subs	r3, r3, r2
 7022 0256 1B01     		lsls	r3, r3, #4
 7023 0258 0B44     		add	r3, r3, r1
 7024 025a 03F58873 		add	r3, r3, #272
 7025 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7026 0260 1A46     		mov	r2, r3
 7027 0262 1346     		mov	r3, r2
 7028 0264 5B00     		lsls	r3, r3, #1
 7029 0266 1344     		add	r3, r3, r2
 7030 0268 1B01     		lsls	r3, r3, #4
 7031 026a 03F5D873 		add	r3, r3, #432
 7032 026e D7F87825 		ldr	r2, [r7, #1400]
 7033 0272 1344     		add	r3, r3, r2
 7034 0274 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7035              		.loc 1 891 0
 7036 0276 07F58363 		add	r3, r7, #1048
 7037 027a 9A64     		str	r2, [r3, #72]
 911:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7038              		.loc 1 911 0
 7039 027c 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7040 0280 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 167


 7041 0282 DB00     		lsls	r3, r3, #3
 7042 0284 9B1A     		subs	r3, r3, r2
 7043 0286 1B01     		lsls	r3, r3, #4
 7044 0288 E033     		adds	r3, r3, #224
 7045 028a D7F87825 		ldr	r2, [r7, #1400]
 7046 028e 1344     		add	r3, r3, r2
 7047 0290 5A1C     		adds	r2, r3, #1
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7048              		.loc 1 891 0
 7049 0292 07F58363 		add	r3, r7, #1048
 7050 0296 DA64     		str	r2, [r3, #76]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7051              		.loc 1 912 0
 7052 0298 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7053 029c 1346     		mov	r3, r2
 7054 029e DB00     		lsls	r3, r3, #3
 7055 02a0 9B1A     		subs	r3, r3, r2
 7056 02a2 1B01     		lsls	r3, r3, #4
 7057 02a4 F033     		adds	r3, r3, #240
 7058 02a6 D7F87825 		ldr	r2, [r7, #1400]
 7059 02aa 1344     		add	r3, r3, r2
 7060 02ac 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7061              		.loc 1 891 0
 7062 02ae 07F58363 		add	r3, r7, #1048
 7063 02b2 1A65     		str	r2, [r3, #80]
 913:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7064              		.loc 1 913 0
 7065 02b4 D7F87835 		ldr	r3, [r7, #1400]
 7066 02b8 03F1A102 		add	r2, r3, #161
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7067              		.loc 1 891 0
 7068 02bc 07F58363 		add	r3, r7, #1048
 7069 02c0 5A65     		str	r2, [r3, #84]
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7070              		.loc 1 914 0
 7071 02c2 D7F87835 		ldr	r3, [r7, #1400]
 7072 02c6 03F52872 		add	r2, r3, #672
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7073              		.loc 1 891 0
 7074 02ca 07F58363 		add	r3, r7, #1048
 7075 02ce 9A65     		str	r2, [r3, #88]
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7076              		.loc 1 915 0
 7077 02d0 D7F87835 		ldr	r3, [r7, #1400]
 7078 02d4 03F52972 		add	r2, r3, #676
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7079              		.loc 1 891 0
 7080 02d8 07F58363 		add	r3, r7, #1048
 7081 02dc DA65     		str	r2, [r3, #92]
 916:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7082              		.loc 1 916 0
 7083 02de D7F87835 		ldr	r3, [r7, #1400]
 7084 02e2 03F52A72 		add	r2, r3, #680
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7085              		.loc 1 891 0
 7086 02e6 07F58363 		add	r3, r7, #1048
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 168


 7087 02ea 1A66     		str	r2, [r3, #96]
 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7088              		.loc 1 917 0
 7089 02ec D7F87835 		ldr	r3, [r7, #1400]
 7090 02f0 03F52B72 		add	r2, r3, #684
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7091              		.loc 1 891 0
 7092 02f4 07F58363 		add	r3, r7, #1048
 7093 02f8 5A66     		str	r2, [r3, #100]
 918:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7094              		.loc 1 918 0
 7095 02fa D7F87835 		ldr	r3, [r7, #1400]
 7096 02fe 03F2FF12 		addw	r2, r3, #511
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7097              		.loc 1 891 0
 7098 0302 07F58363 		add	r3, r7, #1048
 7099 0306 9A66     		str	r2, [r3, #104]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7100              		.loc 1 919 0
 7101 0308 D7F87835 		ldr	r3, [r7, #1400]
 7102 030c 03F1A702 		add	r2, r3, #167
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7103              		.loc 1 891 0
 7104 0310 07F58363 		add	r3, r7, #1048
 7105 0314 DA66     		str	r2, [r3, #108]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7106              		.loc 1 920 0
 7107 0316 D7F87835 		ldr	r3, [r7, #1400]
 7108 031a 03F50072 		add	r2, r3, #512
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7109              		.loc 1 891 0
 7110 031e 07F58363 		add	r3, r7, #1048
 7111 0322 1A67     		str	r2, [r3, #112]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7112              		.loc 1 921 0
 7113 0324 D7F87835 		ldr	r3, [r7, #1400]
 7114 0328 03F22622 		addw	r2, r3, #550
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7115              		.loc 1 891 0
 7116 032c 07F58363 		add	r3, r7, #1048
 7117 0330 5A67     		str	r2, [r3, #116]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7118              		.loc 1 922 0
 7119 0332 D7F87835 		ldr	r3, [r7, #1400]
 7120 0336 03F1A802 		add	r2, r3, #168
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7121              		.loc 1 891 0
 7122 033a 07F58363 		add	r3, r7, #1048
 7123 033e 9A67     		str	r2, [r3, #120]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7124              		.loc 1 923 0
 7125 0340 D7F87835 		ldr	r3, [r7, #1400]
 7126 0344 03F50872 		add	r2, r3, #544
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7127              		.loc 1 891 0
 7128 0348 07F58363 		add	r3, r7, #1048
 7129 034c DA67     		str	r2, [r3, #124]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 169


 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7130              		.loc 1 924 0
 7131 034e D7F87835 		ldr	r3, [r7, #1400]
 7132 0352 03F20122 		addw	r2, r3, #513
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7133              		.loc 1 891 0
 7134 0356 07F58363 		add	r3, r7, #1048
 7135 035a C3F88020 		str	r2, [r3, #128]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7136              		.loc 1 925 0
 7137 035e D7F87835 		ldr	r3, [r7, #1400]
 7138 0362 03F20222 		addw	r2, r3, #514
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7139              		.loc 1 891 0
 7140 0366 07F58363 		add	r3, r7, #1048
 7141 036a C3F88420 		str	r2, [r3, #132]
 926:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7142              		.loc 1 926 0
 7143 036e D7F87835 		ldr	r3, [r7, #1400]
 7144 0372 03F1AB02 		add	r2, r3, #171
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7145              		.loc 1 891 0
 7146 0376 07F58363 		add	r3, r7, #1048
 7147 037a C3F88820 		str	r2, [r3, #136]
 927:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7148              		.loc 1 927 0
 7149 037e D7F87835 		ldr	r3, [r7, #1400]
 7150 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7151 0386 1233     		adds	r3, r3, #18
 7152 0388 5B01     		lsls	r3, r3, #5
 7153 038a D7F87825 		ldr	r2, [r7, #1400]
 7154 038e 1A44     		add	r2, r2, r3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7155              		.loc 1 891 0
 7156 0390 07F58363 		add	r3, r7, #1048
 7157 0394 C3F88C20 		str	r2, [r3, #140]
 928:..\src/command_processing.c ****         
 929:..\src/command_processing.c ****         // GENERIC PARAMS
 930:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7158              		.loc 1 930 0
 7159 0398 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7160 039c 1346     		mov	r3, r2
 7161 039e DB00     		lsls	r3, r3, #3
 7162 03a0 9B1A     		subs	r3, r3, r2
 7163 03a2 1B01     		lsls	r3, r3, #4
 7164 03a4 03F58873 		add	r3, r3, #272
 7165 03a8 D7F87825 		ldr	r2, [r7, #1400]
 7166 03ac 1A44     		add	r2, r2, r3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7167              		.loc 1 891 0
 7168 03ae 07F58363 		add	r3, r7, #1048
 7169 03b2 C3F89020 		str	r2, [r3, #144]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7170              		.loc 1 931 0
 7171 03b6 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7172 03ba 1346     		mov	r3, r2
 7173 03bc DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 170


 7174 03be 9B1A     		subs	r3, r3, r2
 7175 03c0 1B01     		lsls	r3, r3, #4
 7176 03c2 E033     		adds	r3, r3, #224
 7177 03c4 D7F87825 		ldr	r2, [r7, #1400]
 7178 03c8 1344     		add	r3, r3, r2
 7179 03ca 9A1C     		adds	r2, r3, #2
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7180              		.loc 1 891 0
 7181 03cc 07F58363 		add	r3, r7, #1048
 7182 03d0 C3F89420 		str	r2, [r3, #148]
 932:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7183              		.loc 1 932 0
 7184 03d4 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7185 03d8 1346     		mov	r3, r2
 7186 03da DB00     		lsls	r3, r3, #3
 7187 03dc 9B1A     		subs	r3, r3, r2
 7188 03de 1B01     		lsls	r3, r3, #4
 7189 03e0 03F58873 		add	r3, r3, #272
 7190 03e4 D7F87825 		ldr	r2, [r7, #1400]
 7191 03e8 1344     		add	r3, r3, r2
 7192 03ea 5A1C     		adds	r2, r3, #1
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7193              		.loc 1 891 0
 7194 03ec 07F58363 		add	r3, r7, #1048
 7195 03f0 C3F89820 		str	r2, [r3, #152]
 933:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7196              		.loc 1 933 0
 7197 03f4 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7198 03f8 1346     		mov	r3, r2
 7199 03fa DB00     		lsls	r3, r3, #3
 7200 03fc 9B1A     		subs	r3, r3, r2
 7201 03fe 1B01     		lsls	r3, r3, #4
 7202 0400 03F58873 		add	r3, r3, #272
 7203 0404 D7F87825 		ldr	r2, [r7, #1400]
 7204 0408 1344     		add	r3, r3, r2
 7205 040a 9A1C     		adds	r2, r3, #2
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7206              		.loc 1 891 0
 7207 040c 07F58363 		add	r3, r7, #1048
 7208 0410 C3F89C20 		str	r2, [r3, #156]
 934:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7209              		.loc 1 934 0
 7210 0414 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7211 0418 D7F87815 		ldr	r1, [r7, #1400]
 7212 041c 1346     		mov	r3, r2
 7213 041e DB00     		lsls	r3, r3, #3
 7214 0420 9B1A     		subs	r3, r3, r2
 7215 0422 1B01     		lsls	r3, r3, #4
 7216 0424 0B44     		add	r3, r3, r1
 7217 0426 03F58873 		add	r3, r3, #272
 7218 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7219 042c 1A46     		mov	r2, r3
 7220 042e 1346     		mov	r3, r2
 7221 0430 5B00     		lsls	r3, r3, #1
 7222 0432 1344     		add	r3, r3, r2
 7223 0434 1B01     		lsls	r3, r3, #4
 7224 0436 03F5D873 		add	r3, r3, #432
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 171


 7225 043a D7F87825 		ldr	r2, [r7, #1400]
 7226 043e 1344     		add	r3, r3, r2
 7227 0440 5A1C     		adds	r2, r3, #1
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7228              		.loc 1 891 0
 7229 0442 07F58363 		add	r3, r7, #1048
 7230 0446 C3F8A020 		str	r2, [r3, #160]
 935:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7231              		.loc 1 935 0
 7232 044a 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7233 044e D7F87815 		ldr	r1, [r7, #1400]
 7234 0452 1346     		mov	r3, r2
 7235 0454 DB00     		lsls	r3, r3, #3
 7236 0456 9B1A     		subs	r3, r3, r2
 7237 0458 1B01     		lsls	r3, r3, #4
 7238 045a 0B44     		add	r3, r3, r1
 7239 045c 03F58873 		add	r3, r3, #272
 7240 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7241 0462 1A46     		mov	r2, r3
 7242 0464 1346     		mov	r3, r2
 7243 0466 5B00     		lsls	r3, r3, #1
 7244 0468 1344     		add	r3, r3, r2
 7245 046a 1B01     		lsls	r3, r3, #4
 7246 046c 03F5D873 		add	r3, r3, #432
 7247 0470 D7F87825 		ldr	r2, [r7, #1400]
 7248 0474 1344     		add	r3, r3, r2
 7249 0476 5A1D     		adds	r2, r3, #5
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7250              		.loc 1 891 0
 7251 0478 07F58363 		add	r3, r7, #1048
 7252 047c C3F8A420 		str	r2, [r3, #164]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7253              		.loc 1 936 0
 7254 0480 D7F87835 		ldr	r3, [r7, #1400]
 7255 0484 03F1A902 		add	r2, r3, #169
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7256              		.loc 1 891 0
 7257 0488 07F58363 		add	r3, r7, #1048
 7258 048c C3F8A820 		str	r2, [r3, #168]
 937:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7259              		.loc 1 937 0
 7260 0490 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7261 0494 1346     		mov	r3, r2
 7262 0496 DB00     		lsls	r3, r3, #3
 7263 0498 9B1A     		subs	r3, r3, r2
 7264 049a 1B01     		lsls	r3, r3, #4
 7265 049c B033     		adds	r3, r3, #176
 7266 049e D7F87825 		ldr	r2, [r7, #1400]
 7267 04a2 1A44     		add	r2, r2, r3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7268              		.loc 1 891 0
 7269 04a4 07F58363 		add	r3, r7, #1048
 7270 04a8 C3F8AC20 		str	r2, [r3, #172]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7271              		.loc 1 938 0
 7272 04ac 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7273 04b0 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 172


 7274 04b2 DB00     		lsls	r3, r3, #3
 7275 04b4 9B1A     		subs	r3, r3, r2
 7276 04b6 1B01     		lsls	r3, r3, #4
 7277 04b8 B833     		adds	r3, r3, #184
 7278 04ba D7F87825 		ldr	r2, [r7, #1400]
 7279 04be 1344     		add	r3, r3, r2
 7280 04c0 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7281              		.loc 1 891 0
 7282 04c2 07F58363 		add	r3, r7, #1048
 7283 04c6 C3F8B020 		str	r2, [r3, #176]
 939:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7284              		.loc 1 939 0
 7285 04ca 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7286 04ce 1346     		mov	r3, r2
 7287 04d0 DB00     		lsls	r3, r3, #3
 7288 04d2 9B1A     		subs	r3, r3, r2
 7289 04d4 1B01     		lsls	r3, r3, #4
 7290 04d6 E033     		adds	r3, r3, #224
 7291 04d8 D7F87825 		ldr	r2, [r7, #1400]
 7292 04dc 1A44     		add	r2, r2, r3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7293              		.loc 1 891 0
 7294 04de 07F58363 		add	r3, r7, #1048
 7295 04e2 C3F8B420 		str	r2, [r3, #180]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7296              		.loc 1 940 0
 7297 04e6 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7298 04ea 1346     		mov	r3, r2
 7299 04ec DB00     		lsls	r3, r3, #3
 7300 04ee 9B1A     		subs	r3, r3, r2
 7301 04f0 1B01     		lsls	r3, r3, #4
 7302 04f2 03F58473 		add	r3, r3, #264
 7303 04f6 D7F87825 		ldr	r2, [r7, #1400]
 7304 04fa 1344     		add	r3, r3, r2
 7305 04fc 9A1D     		adds	r2, r3, #6
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7306              		.loc 1 891 0
 7307 04fe 07F58363 		add	r3, r7, #1048
 7308 0502 C3F8B820 		str	r2, [r3, #184]
 941:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7309              		.loc 1 941 0
 7310 0506 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7311 050a 1346     		mov	r3, r2
 7312 050c DB00     		lsls	r3, r3, #3
 7313 050e 9B1A     		subs	r3, r3, r2
 7314 0510 1B01     		lsls	r3, r3, #4
 7315 0512 03F58473 		add	r3, r3, #264
 7316 0516 D7F87825 		ldr	r2, [r7, #1400]
 7317 051a 1344     		add	r3, r3, r2
 7318 051c DA1D     		adds	r2, r3, #7
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7319              		.loc 1 891 0
 7320 051e 07F58363 		add	r3, r7, #1048
 7321 0522 C3F8BC20 		str	r2, [r3, #188]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7322              		.loc 1 942 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 173


 7323 0526 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7324 052a D7F87815 		ldr	r1, [r7, #1400]
 7325 052e 1346     		mov	r3, r2
 7326 0530 DB00     		lsls	r3, r3, #3
 7327 0532 9B1A     		subs	r3, r3, r2
 7328 0534 1B01     		lsls	r3, r3, #4
 7329 0536 0B44     		add	r3, r3, r1
 7330 0538 03F58873 		add	r3, r3, #272
 7331 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7332 053e 1A46     		mov	r2, r3
 7333 0540 1346     		mov	r3, r2
 7334 0542 5B00     		lsls	r3, r3, #1
 7335 0544 1344     		add	r3, r3, r2
 7336 0546 1B01     		lsls	r3, r3, #4
 7337 0548 03F5C873 		add	r3, r3, #400
 7338 054c D7F87825 		ldr	r2, [r7, #1400]
 7339 0550 1344     		add	r3, r3, r2
 7340 0552 5A1D     		adds	r2, r3, #5
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7341              		.loc 1 891 0
 7342 0554 07F58363 		add	r3, r7, #1048
 7343 0558 C3F8C020 		str	r2, [r3, #192]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7344              		.loc 1 943 0
 7345 055c 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7346 0560 D7F87815 		ldr	r1, [r7, #1400]
 7347 0564 1346     		mov	r3, r2
 7348 0566 DB00     		lsls	r3, r3, #3
 7349 0568 9B1A     		subs	r3, r3, r2
 7350 056a 1B01     		lsls	r3, r3, #4
 7351 056c 0B44     		add	r3, r3, r1
 7352 056e 03F58873 		add	r3, r3, #272
 7353 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7354 0574 1A46     		mov	r2, r3
 7355 0576 1346     		mov	r3, r2
 7356 0578 5B00     		lsls	r3, r3, #1
 7357 057a 1344     		add	r3, r3, r2
 7358 057c 1B01     		lsls	r3, r3, #4
 7359 057e 03F5CC73 		add	r3, r3, #408
 7360 0582 D7F87825 		ldr	r2, [r7, #1400]
 7361 0586 1A44     		add	r2, r2, r3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7362              		.loc 1 891 0
 7363 0588 07F58363 		add	r3, r7, #1048
 7364 058c C3F8C420 		str	r2, [r3, #196]
 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7365              		.loc 1 944 0
 7366 0590 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7367 0594 D7F87815 		ldr	r1, [r7, #1400]
 7368 0598 1346     		mov	r3, r2
 7369 059a DB00     		lsls	r3, r3, #3
 7370 059c 9B1A     		subs	r3, r3, r2
 7371 059e 1B01     		lsls	r3, r3, #4
 7372 05a0 0B44     		add	r3, r3, r1
 7373 05a2 03F58873 		add	r3, r3, #272
 7374 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7375 05a8 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 174


 7376 05aa 1346     		mov	r3, r2
 7377 05ac 5B00     		lsls	r3, r3, #1
 7378 05ae 1344     		add	r3, r3, r2
 7379 05b0 1B01     		lsls	r3, r3, #4
 7380 05b2 03F5D073 		add	r3, r3, #416
 7381 05b6 D7F87825 		ldr	r2, [r7, #1400]
 7382 05ba 1344     		add	r3, r3, r2
 7383 05bc 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7384              		.loc 1 891 0
 7385 05be 07F58363 		add	r3, r7, #1048
 7386 05c2 C3F8C820 		str	r2, [r3, #200]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7387              		.loc 1 945 0
 7388 05c6 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7389 05ca 1346     		mov	r3, r2
 7390 05cc DB00     		lsls	r3, r3, #3
 7391 05ce 9B1A     		subs	r3, r3, r2
 7392 05d0 1B01     		lsls	r3, r3, #4
 7393 05d2 E033     		adds	r3, r3, #224
 7394 05d4 D7F87825 		ldr	r2, [r7, #1400]
 7395 05d8 1344     		add	r3, r3, r2
 7396 05da DA1C     		adds	r2, r3, #3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7397              		.loc 1 891 0
 7398 05dc 07F58363 		add	r3, r7, #1048
 7399 05e0 C3F8CC20 		str	r2, [r3, #204]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7400              		.loc 1 946 0
 7401 05e4 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7402 05e8 1346     		mov	r3, r2
 7403 05ea DB00     		lsls	r3, r3, #3
 7404 05ec 9B1A     		subs	r3, r3, r2
 7405 05ee 1B01     		lsls	r3, r3, #4
 7406 05f0 E033     		adds	r3, r3, #224
 7407 05f2 D7F87825 		ldr	r2, [r7, #1400]
 7408 05f6 1344     		add	r3, r3, r2
 7409 05f8 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7410              		.loc 1 891 0
 7411 05fa 07F58363 		add	r3, r7, #1048
 7412 05fe C3F8D020 		str	r2, [r3, #208]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7413              		.loc 1 947 0
 7414 0602 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7415 0606 1346     		mov	r3, r2
 7416 0608 DB00     		lsls	r3, r3, #3
 7417 060a 9B1A     		subs	r3, r3, r2
 7418 060c 1B01     		lsls	r3, r3, #4
 7419 060e E833     		adds	r3, r3, #232
 7420 0610 D7F87825 		ldr	r2, [r7, #1400]
 7421 0614 1344     		add	r3, r3, r2
 7422 0616 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7423              		.loc 1 891 0
 7424 0618 07F58363 		add	r3, r7, #1048
 7425 061c C3F8D420 		str	r2, [r3, #212]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 175


 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7426              		.loc 1 948 0
 7427 0620 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7428 0624 1346     		mov	r3, r2
 7429 0626 DB00     		lsls	r3, r3, #3
 7430 0628 9B1A     		subs	r3, r3, r2
 7431 062a 1B01     		lsls	r3, r3, #4
 7432 062c 03F58473 		add	r3, r3, #264
 7433 0630 D7F87825 		ldr	r2, [r7, #1400]
 7434 0634 1344     		add	r3, r3, r2
 7435 0636 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7436              		.loc 1 891 0
 7437 0638 07F58363 		add	r3, r7, #1048
 7438 063c C3F8D820 		str	r2, [r3, #216]
 949:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7439              		.loc 1 949 0
 7440 0640 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7441 0644 D7F87815 		ldr	r1, [r7, #1400]
 7442 0648 1346     		mov	r3, r2
 7443 064a DB00     		lsls	r3, r3, #3
 7444 064c 9B1A     		subs	r3, r3, r2
 7445 064e 1B01     		lsls	r3, r3, #4
 7446 0650 0B44     		add	r3, r3, r1
 7447 0652 03F58873 		add	r3, r3, #272
 7448 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7449 0658 1A46     		mov	r2, r3
 7450 065a 1346     		mov	r3, r2
 7451 065c 5B00     		lsls	r3, r3, #1
 7452 065e 1344     		add	r3, r3, r2
 7453 0660 1B01     		lsls	r3, r3, #4
 7454 0662 03F5D873 		add	r3, r3, #432
 7455 0666 D7F87825 		ldr	r2, [r7, #1400]
 7456 066a 1A44     		add	r2, r2, r3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7457              		.loc 1 891 0
 7458 066c 07F58363 		add	r3, r7, #1048
 7459 0670 C3F8DC20 		str	r2, [r3, #220]
 950:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7460              		.loc 1 950 0
 7461 0674 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7462 0678 D7F87815 		ldr	r1, [r7, #1400]
 7463 067c 1346     		mov	r3, r2
 7464 067e DB00     		lsls	r3, r3, #3
 7465 0680 9B1A     		subs	r3, r3, r2
 7466 0682 1B01     		lsls	r3, r3, #4
 7467 0684 0B44     		add	r3, r3, r1
 7468 0686 03F58873 		add	r3, r3, #272
 7469 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7470 068c 1A46     		mov	r2, r3
 7471 068e 1346     		mov	r3, r2
 7472 0690 5B00     		lsls	r3, r3, #1
 7473 0692 1344     		add	r3, r3, r2
 7474 0694 1B01     		lsls	r3, r3, #4
 7475 0696 03F5D873 		add	r3, r3, #432
 7476 069a D7F87825 		ldr	r2, [r7, #1400]
 7477 069e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 176


 7478 06a0 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7479              		.loc 1 891 0
 7480 06a2 07F58363 		add	r3, r7, #1048
 7481 06a6 C3F8E020 		str	r2, [r3, #224]
 951:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7482              		.loc 1 951 0
 7483 06aa 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7484 06ae 1346     		mov	r3, r2
 7485 06b0 DB00     		lsls	r3, r3, #3
 7486 06b2 9B1A     		subs	r3, r3, r2
 7487 06b4 1B01     		lsls	r3, r3, #4
 7488 06b6 E033     		adds	r3, r3, #224
 7489 06b8 D7F87825 		ldr	r2, [r7, #1400]
 7490 06bc 1344     		add	r3, r3, r2
 7491 06be 5A1C     		adds	r2, r3, #1
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7492              		.loc 1 891 0
 7493 06c0 07F58363 		add	r3, r7, #1048
 7494 06c4 C3F8E420 		str	r2, [r3, #228]
 952:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7495              		.loc 1 952 0
 7496 06c8 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7497 06cc 1346     		mov	r3, r2
 7498 06ce DB00     		lsls	r3, r3, #3
 7499 06d0 9B1A     		subs	r3, r3, r2
 7500 06d2 1B01     		lsls	r3, r3, #4
 7501 06d4 F033     		adds	r3, r3, #240
 7502 06d6 D7F87825 		ldr	r2, [r7, #1400]
 7503 06da 1344     		add	r3, r3, r2
 7504 06dc 1A1D     		adds	r2, r3, #4
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7505              		.loc 1 891 0
 7506 06de 07F58363 		add	r3, r7, #1048
 7507 06e2 C3F8E820 		str	r2, [r3, #232]
 953:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7508              		.loc 1 953 0
 7509 06e6 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7510 06ea 1346     		mov	r3, r2
 7511 06ec DB00     		lsls	r3, r3, #3
 7512 06ee 9B1A     		subs	r3, r3, r2
 7513 06f0 1B01     		lsls	r3, r3, #4
 7514 06f2 03F58873 		add	r3, r3, #272
 7515 06f6 D7F87825 		ldr	r2, [r7, #1400]
 7516 06fa 1A44     		add	r2, r2, r3
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7517              		.loc 1 891 0
 7518 06fc 07F58363 		add	r3, r7, #1048
 7519 0700 C3F8EC20 		str	r2, [r3, #236]
 954:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7520              		.loc 1 954 0
 7521 0704 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7522 0708 1346     		mov	r3, r2
 7523 070a DB00     		lsls	r3, r3, #3
 7524 070c 9B1A     		subs	r3, r3, r2
 7525 070e 1B01     		lsls	r3, r3, #4
 7526 0710 E033     		adds	r3, r3, #224
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 177


 7527 0712 D7F87825 		ldr	r2, [r7, #1400]
 7528 0716 1344     		add	r3, r3, r2
 7529 0718 9A1C     		adds	r2, r3, #2
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7530              		.loc 1 891 0
 7531 071a 07F58363 		add	r3, r7, #1048
 7532 071e C3F8F020 		str	r2, [r3, #240]
 955:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7533              		.loc 1 955 0
 7534 0722 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7535 0726 1346     		mov	r3, r2
 7536 0728 DB00     		lsls	r3, r3, #3
 7537 072a 9B1A     		subs	r3, r3, r2
 7538 072c 1B01     		lsls	r3, r3, #4
 7539 072e 03F58873 		add	r3, r3, #272
 7540 0732 D7F87825 		ldr	r2, [r7, #1400]
 7541 0736 1344     		add	r3, r3, r2
 7542 0738 5A1C     		adds	r2, r3, #1
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7543              		.loc 1 891 0
 7544 073a 07F58363 		add	r3, r7, #1048
 7545 073e C3F8F420 		str	r2, [r3, #244]
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7546              		.loc 1 956 0
 7547 0742 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7548 0746 1346     		mov	r3, r2
 7549 0748 DB00     		lsls	r3, r3, #3
 7550 074a 9B1A     		subs	r3, r3, r2
 7551 074c 1B01     		lsls	r3, r3, #4
 7552 074e 03F58873 		add	r3, r3, #272
 7553 0752 D7F87825 		ldr	r2, [r7, #1400]
 7554 0756 1344     		add	r3, r3, r2
 7555 0758 9A1C     		adds	r2, r3, #2
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7556              		.loc 1 891 0
 7557 075a 07F58363 		add	r3, r7, #1048
 7558 075e C3F8F820 		str	r2, [r3, #248]
 957:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7559              		.loc 1 957 0
 7560 0762 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7561 0766 D7F87815 		ldr	r1, [r7, #1400]
 7562 076a 1346     		mov	r3, r2
 7563 076c DB00     		lsls	r3, r3, #3
 7564 076e 9B1A     		subs	r3, r3, r2
 7565 0770 1B01     		lsls	r3, r3, #4
 7566 0772 0B44     		add	r3, r3, r1
 7567 0774 03F58873 		add	r3, r3, #272
 7568 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7569 077a 1A46     		mov	r2, r3
 7570 077c 1346     		mov	r3, r2
 7571 077e 5B00     		lsls	r3, r3, #1
 7572 0780 1344     		add	r3, r3, r2
 7573 0782 1B01     		lsls	r3, r3, #4
 7574 0784 03F5D873 		add	r3, r3, #432
 7575 0788 D7F87825 		ldr	r2, [r7, #1400]
 7576 078c 1344     		add	r3, r3, r2
 7577 078e 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 178


 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7578              		.loc 1 891 0
 7579 0790 07F58363 		add	r3, r7, #1048
 7580 0794 C3F8FC20 		str	r2, [r3, #252]
 958:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7581              		.loc 1 958 0
 7582 0798 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7583 079c D7F87815 		ldr	r1, [r7, #1400]
 7584 07a0 1346     		mov	r3, r2
 7585 07a2 DB00     		lsls	r3, r3, #3
 7586 07a4 9B1A     		subs	r3, r3, r2
 7587 07a6 1B01     		lsls	r3, r3, #4
 7588 07a8 0B44     		add	r3, r3, r1
 7589 07aa 03F58873 		add	r3, r3, #272
 7590 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7591 07b0 1A46     		mov	r2, r3
 7592 07b2 1346     		mov	r3, r2
 7593 07b4 5B00     		lsls	r3, r3, #1
 7594 07b6 1344     		add	r3, r3, r2
 7595 07b8 1B01     		lsls	r3, r3, #4
 7596 07ba 03F5D873 		add	r3, r3, #432
 7597 07be D7F87825 		ldr	r2, [r7, #1400]
 7598 07c2 1344     		add	r3, r3, r2
 7599 07c4 5A1D     		adds	r2, r3, #5
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7600              		.loc 1 891 0
 7601 07c6 07F58363 		add	r3, r7, #1048
 7602 07ca C3F80021 		str	r2, [r3, #256]
 959:..\src/command_processing.c ****         
 960:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7603              		.loc 1 960 0
 7604 07ce D7F87835 		ldr	r3, [r7, #1400]
 7605 07d2 03F5C872 		add	r2, r3, #400
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7606              		.loc 1 891 0
 7607 07d6 07F58363 		add	r3, r7, #1048
 7608 07da C3F80421 		str	r2, [r3, #260]
 961:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7609              		.loc 1 961 0
 7610 07de D7F87835 		ldr	r3, [r7, #1400]
 7611 07e2 03F5E072 		add	r2, r3, #448
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7612              		.loc 1 891 0
 7613 07e6 07F58363 		add	r3, r7, #1048
 7614 07ea C3F80821 		str	r2, [r3, #264]
 962:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7615              		.loc 1 962 0
 7616 07ee D7F87835 		ldr	r3, [r7, #1400]
 7617 07f2 03F22722 		addw	r2, r3, #551
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7618              		.loc 1 891 0
 7619 07f6 07F58363 		add	r3, r7, #1048
 7620 07fa C3F80C21 		str	r2, [r3, #268]
 963:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7621              		.loc 1 963 0
 7622 07fe D7F87835 		ldr	r3, [r7, #1400]
 7623 0802 03F50A72 		add	r2, r3, #552
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 179


 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7624              		.loc 1 891 0
 7625 0806 07F58363 		add	r3, r7, #1048
 7626 080a C3F81021 		str	r2, [r3, #272]
 964:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7627              		.loc 1 964 0
 7628 080e D7F87835 		ldr	r3, [r7, #1400]
 7629 0812 03F22E22 		addw	r2, r3, #558
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7630              		.loc 1 891 0
 7631 0816 07F58363 		add	r3, r7, #1048
 7632 081a C3F81421 		str	r2, [r3, #276]
 965:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7633              		.loc 1 965 0
 7634 081e D7F87835 		ldr	r3, [r7, #1400]
 7635 0822 03F52C72 		add	r2, r3, #688
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7636              		.loc 1 891 0
 7637 0826 07F58363 		add	r3, r7, #1048
 7638 082a C3F81821 		str	r2, [r3, #280]
 966:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7639              		.loc 1 966 0
 7640 082e D7F87835 		ldr	r3, [r7, #1400]
 7641 0832 03F2B222 		addw	r2, r3, #690
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7642              		.loc 1 891 0
 7643 0836 07F58363 		add	r3, r7, #1048
 7644 083a C3F81C21 		str	r2, [r3, #284]
 967:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7645              		.loc 1 967 0
 7646 083e D7F87835 		ldr	r3, [r7, #1400]
 7647 0842 03F52D72 		add	r2, r3, #692
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7648              		.loc 1 891 0
 7649 0846 07F58363 		add	r3, r7, #1048
 7650 084a C3F82021 		str	r2, [r3, #288]
 968:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7651              		.loc 1 968 0
 7652 084e D7F87835 		ldr	r3, [r7, #1400]
 7653 0852 03F1AC02 		add	r2, r3, #172
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7654              		.loc 1 891 0
 7655 0856 07F58363 		add	r3, r7, #1048
 7656 085a C3F82421 		str	r2, [r3, #292]
 969:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7657              		.loc 1 969 0
 7658 085e D7F87835 		ldr	r3, [r7, #1400]
 7659 0862 03F53872 		add	r2, r3, #736
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7660              		.loc 1 891 0
 7661 0866 07F58363 		add	r3, r7, #1048
 7662 086a C3F82821 		str	r2, [r3, #296]
 970:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7663              		.loc 1 970 0
 7664 086e D7F87835 		ldr	r3, [r7, #1400]
 7665 0872 03F2E222 		addw	r2, r3, #738
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 180


 7666              		.loc 1 891 0
 7667 0876 07F58363 		add	r3, r7, #1048
 7668 087a C3F82C21 		str	r2, [r3, #300]
 971:..\src/command_processing.c ****         
 972:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7669              		.loc 1 972 0
 7670 087e D7F87835 		ldr	r3, [r7, #1400]
 7671 0882 03F2E622 		addw	r2, r3, #742
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7672              		.loc 1 891 0
 7673 0886 07F58363 		add	r3, r7, #1048
 7674 088a C3F83021 		str	r2, [r3, #304]
 973:..\src/command_processing.c ****         
 974:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7675              		.loc 1 974 0
 7676 088e D7F87835 		ldr	r3, [r7, #1400]
 7677 0892 03F53072 		add	r2, r3, #704
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7678              		.loc 1 891 0
 7679 0896 07F58363 		add	r3, r7, #1048
 7680 089a C3F83421 		str	r2, [r3, #308]
 975:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7681              		.loc 1 975 0
 7682 089e D7F87835 		ldr	r3, [r7, #1400]
 7683 08a2 03F2C122 		addw	r2, r3, #705
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7684              		.loc 1 891 0
 7685 08a6 07F58363 		add	r3, r7, #1048
 7686 08aa C3F83821 		str	r2, [r3, #312]
 976:..\src/command_processing.c ****         
 977:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7687              		.loc 1 977 0
 7688 08ae D7F87835 		ldr	r3, [r7, #1400]
 7689 08b2 03F53472 		add	r2, r3, #720
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7690              		.loc 1 891 0
 7691 08b6 07F58363 		add	r3, r7, #1048
 7692 08ba C3F83C21 		str	r2, [r3, #316]
 978:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7693              		.loc 1 978 0
 7694 08be D7F87835 		ldr	r3, [r7, #1400]
 7695 08c2 03F53572 		add	r2, r3, #724
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7696              		.loc 1 891 0
 7697 08c6 07F58363 		add	r3, r7, #1048
 7698 08ca C3F84021 		str	r2, [r3, #320]
 979:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7699              		.loc 1 979 0
 7700 08ce D7F87835 		ldr	r3, [r7, #1400]
 7701 08d2 03F53672 		add	r2, r3, #728
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7702              		.loc 1 891 0
 7703 08d6 07F58363 		add	r3, r7, #1048
 7704 08da C3F84421 		str	r2, [r3, #324]
 980:..\src/command_processing.c ****         
 981:..\src/command_processing.c **** 
 982:..\src/command_processing.c ****     };
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 181


 983:..\src/command_processing.c ****     
 984:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7705              		.loc 1 984 0
 7706 08de 07F57173 		add	r3, r7, #964
 7707 08e2 F54A     		ldr	r2, .L367
 7708 08e4 1846     		mov	r0, r3
 7709 08e6 1146     		mov	r1, r2
 7710 08e8 5223     		movs	r3, #82
 7711 08ea 1A46     		mov	r2, r3
 7712 08ec FFF7FEFF 		bl	memcpy
 985:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 986:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 987:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 988:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 989:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 990:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 991:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 992:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 993:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 994:..\src/command_processing.c ****         
 995:..\src/command_processing.c ****         // GENERIC PARAMS
 996:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 997:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 998:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 999:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1000:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1001:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1002:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1003:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1004:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_UINT16, TYPE_INT16,
1005:..\src/command_processing.c ****         TYPE_UINT16, TYPE_FLAG, TYPE_FLAG, TYPE_UINT16,
1006:..\src/command_processing.c ****         
1007:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT32,
1008:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLOAT
1009:..\src/command_processing.c ****     };
1010:..\src/command_processing.c **** 
1011:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7713              		.loc 1 1011 0
 7714 08f0 07F55C73 		add	r3, r7, #880
 7715 08f4 0122     		movs	r2, #1
 7716 08f6 1A70     		strb	r2, [r3]
 7717 08f8 07F55C73 		add	r3, r7, #880
 7718 08fc 0322     		movs	r2, #3
 7719 08fe 5A70     		strb	r2, [r3, #1]
 7720 0900 07F55C73 		add	r3, r7, #880
 7721 0904 0322     		movs	r2, #3
 7722 0906 9A70     		strb	r2, [r3, #2]
 7723 0908 07F55C73 		add	r3, r7, #880
 7724 090c 0122     		movs	r2, #1
 7725 090e DA70     		strb	r2, [r3, #3]
 7726 0910 07F55C73 		add	r3, r7, #880
 7727 0914 0122     		movs	r2, #1
 7728 0916 1A71     		strb	r2, [r3, #4]
 7729 0918 07F55C73 		add	r3, r7, #880
 7730 091c 0122     		movs	r2, #1
 7731 091e 5A71     		strb	r2, [r3, #5]
 7732 0920 07F55C73 		add	r3, r7, #880
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 182


 7733 0924 0322     		movs	r2, #3
 7734 0926 9A71     		strb	r2, [r3, #6]
 7735 0928 07F55C73 		add	r3, r7, #880
 7736 092c 0322     		movs	r2, #3
 7737 092e DA71     		strb	r2, [r3, #7]
 7738 0930 07F55C73 		add	r3, r7, #880
 7739 0934 0322     		movs	r2, #3
 7740 0936 1A72     		strb	r2, [r3, #8]
 7741 0938 07F55C73 		add	r3, r7, #880
 7742 093c 0122     		movs	r2, #1
 7743 093e 5A72     		strb	r2, [r3, #9]
 7744 0940 07F55C73 		add	r3, r7, #880
 7745 0944 0222     		movs	r2, #2
 7746 0946 9A72     		strb	r2, [r3, #10]
 7747 0948 07F55C73 		add	r3, r7, #880
 7748 094c 0222     		movs	r2, #2
 7749 094e DA72     		strb	r2, [r3, #11]
 7750 0950 07F55C73 		add	r3, r7, #880
 7751 0954 0122     		movs	r2, #1
 7752 0956 1A73     		strb	r2, [r3, #12]
 7753 0958 07F55C73 		add	r3, r7, #880
 7754 095c 0222     		movs	r2, #2
 7755 095e 5A73     		strb	r2, [r3, #13]
 7756 0960 07F55C73 		add	r3, r7, #880
 7757 0964 0122     		movs	r2, #1
 7758 0966 9A73     		strb	r2, [r3, #14]
 7759 0968 07F55C73 		add	r3, r7, #880
 7760 096c 0222     		movs	r2, #2
 7761 096e DA73     		strb	r2, [r3, #15]
 7762 0970 07F55C73 		add	r3, r7, #880
 7763 0974 0222     		movs	r2, #2
 7764 0976 1A74     		strb	r2, [r3, #16]
 7765 0978 07F55C73 		add	r3, r7, #880
 7766 097c 0122     		movs	r2, #1
 7767 097e 5A74     		strb	r2, [r3, #17]
 7768 0980 07F55C73 		add	r3, r7, #880
 7769 0984 0122     		movs	r2, #1
 7770 0986 9A74     		strb	r2, [r3, #18]
 7771 0988 07F55C73 		add	r3, r7, #880
 7772 098c 0122     		movs	r2, #1
 7773 098e DA74     		strb	r2, [r3, #19]
 7774 0990 07F55C73 		add	r3, r7, #880
 7775 0994 0622     		movs	r2, #6
 7776 0996 1A75     		strb	r2, [r3, #20]
 7777 0998 07F55C73 		add	r3, r7, #880
 7778 099c 0322     		movs	r2, #3
 7779 099e 5A75     		strb	r2, [r3, #21]
 7780 09a0 07F55C73 		add	r3, r7, #880
 7781 09a4 0122     		movs	r2, #1
 7782 09a6 9A75     		strb	r2, [r3, #22]
 7783 09a8 07F55C73 		add	r3, r7, #880
 7784 09ac 0122     		movs	r2, #1
 7785 09ae DA75     		strb	r2, [r3, #23]
 7786 09b0 07F55C73 		add	r3, r7, #880
 7787 09b4 0122     		movs	r2, #1
 7788 09b6 1A76     		strb	r2, [r3, #24]
 7789 09b8 07F55C73 		add	r3, r7, #880
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 183


 7790 09bc 0122     		movs	r2, #1
 7791 09be 5A76     		strb	r2, [r3, #25]
 7792 09c0 07F55C73 		add	r3, r7, #880
 7793 09c4 0122     		movs	r2, #1
 7794 09c6 9A76     		strb	r2, [r3, #26]
 7795 09c8 07F55C73 		add	r3, r7, #880
 7796 09cc 0122     		movs	r2, #1
 7797 09ce DA76     		strb	r2, [r3, #27]
 7798 09d0 07F55C73 		add	r3, r7, #880
 7799 09d4 0122     		movs	r2, #1
 7800 09d6 1A77     		strb	r2, [r3, #28]
 7801 09d8 07F55C73 		add	r3, r7, #880
 7802 09dc 0122     		movs	r2, #1
 7803 09de 5A77     		strb	r2, [r3, #29]
 7804 09e0 07F55C73 		add	r3, r7, #880
 7805 09e4 0122     		movs	r2, #1
 7806 09e6 9A77     		strb	r2, [r3, #30]
 7807 09e8 07F55C73 		add	r3, r7, #880
 7808 09ec 0622     		movs	r2, #6
 7809 09ee DA77     		strb	r2, [r3, #31]
 7810 09f0 07F55C73 		add	r3, r7, #880
 7811 09f4 0122     		movs	r2, #1
 7812 09f6 83F82020 		strb	r2, [r3, #32]
 7813 09fa 07F55C73 		add	r3, r7, #880
 7814 09fe 0522     		movs	r2, #5
 7815 0a00 83F82120 		strb	r2, [r3, #33]
 7816 0a04 07F55C73 		add	r3, r7, #880
 7817 0a08 0122     		movs	r2, #1
 7818 0a0a 83F82220 		strb	r2, [r3, #34]
 7819 0a0e 07F55C73 		add	r3, r7, #880
 7820 0a12 0622     		movs	r2, #6
 7821 0a14 83F82320 		strb	r2, [r3, #35]
 7822 0a18 07F55C73 		add	r3, r7, #880
 7823 0a1c 0122     		movs	r2, #1
 7824 0a1e 83F82420 		strb	r2, [r3, #36]
 7825 0a22 07F55C73 		add	r3, r7, #880
 7826 0a26 0122     		movs	r2, #1
 7827 0a28 83F82520 		strb	r2, [r3, #37]
 7828 0a2c 07F55C73 		add	r3, r7, #880
 7829 0a30 0122     		movs	r2, #1
 7830 0a32 83F82620 		strb	r2, [r3, #38]
 7831 0a36 07F55C73 		add	r3, r7, #880
 7832 0a3a 0122     		movs	r2, #1
 7833 0a3c 83F82720 		strb	r2, [r3, #39]
 7834 0a40 07F55C73 		add	r3, r7, #880
 7835 0a44 0322     		movs	r2, #3
 7836 0a46 83F82820 		strb	r2, [r3, #40]
 7837 0a4a 07F55C73 		add	r3, r7, #880
 7838 0a4e 0322     		movs	r2, #3
 7839 0a50 83F82920 		strb	r2, [r3, #41]
 7840 0a54 07F55C73 		add	r3, r7, #880
 7841 0a58 0122     		movs	r2, #1
 7842 0a5a 83F82A20 		strb	r2, [r3, #42]
 7843 0a5e 07F55C73 		add	r3, r7, #880
 7844 0a62 0322     		movs	r2, #3
 7845 0a64 83F82B20 		strb	r2, [r3, #43]
 7846 0a68 07F55C73 		add	r3, r7, #880
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 184


 7847 0a6c 0322     		movs	r2, #3
 7848 0a6e 83F82C20 		strb	r2, [r3, #44]
 7849 0a72 07F55C73 		add	r3, r7, #880
 7850 0a76 0122     		movs	r2, #1
 7851 0a78 83F82D20 		strb	r2, [r3, #45]
 7852 0a7c 07F55C73 		add	r3, r7, #880
 7853 0a80 0122     		movs	r2, #1
 7854 0a82 83F82E20 		strb	r2, [r3, #46]
 7855 0a86 07F55C73 		add	r3, r7, #880
 7856 0a8a 0122     		movs	r2, #1
 7857 0a8c 83F82F20 		strb	r2, [r3, #47]
 7858 0a90 07F55C73 		add	r3, r7, #880
 7859 0a94 0322     		movs	r2, #3
 7860 0a96 83F83020 		strb	r2, [r3, #48]
 7861 0a9a 07F55C73 		add	r3, r7, #880
 7862 0a9e 0322     		movs	r2, #3
 7863 0aa0 83F83120 		strb	r2, [r3, #49]
 7864 0aa4 07F55C73 		add	r3, r7, #880
 7865 0aa8 0322     		movs	r2, #3
 7866 0aaa 83F83220 		strb	r2, [r3, #50]
 7867 0aae 07F55C73 		add	r3, r7, #880
 7868 0ab2 0122     		movs	r2, #1
 7869 0ab4 83F83320 		strb	r2, [r3, #51]
 7870 0ab8 07F55C73 		add	r3, r7, #880
 7871 0abc 0222     		movs	r2, #2
 7872 0abe 83F83420 		strb	r2, [r3, #52]
 7873 0ac2 07F55C73 		add	r3, r7, #880
 7874 0ac6 0222     		movs	r2, #2
 7875 0ac8 83F83520 		strb	r2, [r3, #53]
 7876 0acc 07F55C73 		add	r3, r7, #880
 7877 0ad0 0122     		movs	r2, #1
 7878 0ad2 83F83620 		strb	r2, [r3, #54]
 7879 0ad6 07F55C73 		add	r3, r7, #880
 7880 0ada 0122     		movs	r2, #1
 7881 0adc 83F83720 		strb	r2, [r3, #55]
 7882 0ae0 07F55C73 		add	r3, r7, #880
 7883 0ae4 0122     		movs	r2, #1
 7884 0ae6 83F83820 		strb	r2, [r3, #56]
 7885 0aea 07F55C73 		add	r3, r7, #880
 7886 0aee 0122     		movs	r2, #1
 7887 0af0 83F83920 		strb	r2, [r3, #57]
 7888 0af4 07F55C73 		add	r3, r7, #880
 7889 0af8 0622     		movs	r2, #6
 7890 0afa 83F83A20 		strb	r2, [r3, #58]
 7891 0afe 07F55C73 		add	r3, r7, #880
 7892 0b02 0122     		movs	r2, #1
 7893 0b04 83F83B20 		strb	r2, [r3, #59]
 7894 0b08 07F55C73 		add	r3, r7, #880
 7895 0b0c 0122     		movs	r2, #1
 7896 0b0e 83F83C20 		strb	r2, [r3, #60]
 7897 0b12 07F55C73 		add	r3, r7, #880
 7898 0b16 0122     		movs	r2, #1
 7899 0b18 83F83D20 		strb	r2, [r3, #61]
 7900 0b1c 07F55C73 		add	r3, r7, #880
 7901 0b20 0122     		movs	r2, #1
 7902 0b22 83F83E20 		strb	r2, [r3, #62]
 7903 0b26 07F55C73 		add	r3, r7, #880
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 185


 7904 0b2a 0322     		movs	r2, #3
 7905 0b2c 83F83F20 		strb	r2, [r3, #63]
 7906 0b30 07F55C73 		add	r3, r7, #880
 7907 0b34 0322     		movs	r2, #3
 7908 0b36 83F84020 		strb	r2, [r3, #64]
1012:..\src/command_processing.c ****         1, 3, 3, 1, 
1013:..\src/command_processing.c ****         1, 1, 3, 3,
1014:..\src/command_processing.c ****         3, 1, 2, 2, 
1015:..\src/command_processing.c ****         1, 2, 1, 2,
1016:..\src/command_processing.c ****         2, 1, 1, 1, 
1017:..\src/command_processing.c ****         6, 3, 1, 1,
1018:..\src/command_processing.c ****         1, 1, 1, 1, 
1019:..\src/command_processing.c ****         1, 1, 1, 6,
1020:..\src/command_processing.c ****         1, 5, 1, 6,
1021:..\src/command_processing.c ****         
1022:..\src/command_processing.c ****         // GENERIC PARAMS
1023:..\src/command_processing.c ****         1, 1, 1, 1,
1024:..\src/command_processing.c ****         3, 3, 1, 3,
1025:..\src/command_processing.c ****         3, 1, 1, 1,
1026:..\src/command_processing.c ****         3, 3, 3, 1,
1027:..\src/command_processing.c ****         2, 2, 1, 1,
1028:..\src/command_processing.c ****         1, 1, 6, 1,
1029:..\src/command_processing.c ****         1, 1, 1, 3, 
1030:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7909              		.loc 1 1030 0
 7910 0b3a 604B     		ldr	r3, .L367+4
 7911 0b3c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1011:..\src/command_processing.c ****         1, 3, 3, 1, 
 7912              		.loc 1 1011 0
 7913 0b3e 07F55C73 		add	r3, r7, #880
 7914 0b42 83F84120 		strb	r2, [r3, #65]
 7915              		.loc 1 1030 0
 7916 0b46 5D4B     		ldr	r3, .L367+4
 7917 0b48 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1011:..\src/command_processing.c ****         1, 3, 3, 1, 
 7918              		.loc 1 1011 0
 7919 0b4a 07F55C73 		add	r3, r7, #880
 7920 0b4e 83F84220 		strb	r2, [r3, #66]
 7921 0b52 07F55C73 		add	r3, r7, #880
 7922 0b56 0122     		movs	r2, #1
 7923 0b58 83F84320 		strb	r2, [r3, #67]
 7924 0b5c 07F55C73 		add	r3, r7, #880
 7925 0b60 0622     		movs	r2, #6
 7926 0b62 83F84420 		strb	r2, [r3, #68]
 7927 0b66 07F55C73 		add	r3, r7, #880
 7928 0b6a 0622     		movs	r2, #6
 7929 0b6c 83F84520 		strb	r2, [r3, #69]
 7930 0b70 07F55C73 		add	r3, r7, #880
 7931 0b74 0122     		movs	r2, #1
 7932 0b76 83F84620 		strb	r2, [r3, #70]
 7933 0b7a 07F55C73 		add	r3, r7, #880
 7934 0b7e 0122     		movs	r2, #1
 7935 0b80 83F84720 		strb	r2, [r3, #71]
 7936 0b84 07F55C73 		add	r3, r7, #880
 7937 0b88 0222     		movs	r2, #2
 7938 0b8a 83F84820 		strb	r2, [r3, #72]
 7939 0b8e 07F55C73 		add	r3, r7, #880
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 186


 7940 0b92 0122     		movs	r2, #1
 7941 0b94 83F84920 		strb	r2, [r3, #73]
 7942 0b98 07F55C73 		add	r3, r7, #880
 7943 0b9c 0122     		movs	r2, #1
 7944 0b9e 83F84A20 		strb	r2, [r3, #74]
 7945 0ba2 07F55C73 		add	r3, r7, #880
 7946 0ba6 0222     		movs	r2, #2
 7947 0ba8 83F84B20 		strb	r2, [r3, #75]
 7948 0bac 07F55C73 		add	r3, r7, #880
 7949 0bb0 0122     		movs	r2, #1
 7950 0bb2 83F84C20 		strb	r2, [r3, #76]
 7951 0bb6 07F55C73 		add	r3, r7, #880
 7952 0bba 0122     		movs	r2, #1
 7953 0bbc 83F84D20 		strb	r2, [r3, #77]
 7954 0bc0 07F55C73 		add	r3, r7, #880
 7955 0bc4 0122     		movs	r2, #1
 7956 0bc6 83F84E20 		strb	r2, [r3, #78]
 7957 0bca 07F55C73 		add	r3, r7, #880
 7958 0bce 0122     		movs	r2, #1
 7959 0bd0 83F84F20 		strb	r2, [r3, #79]
 7960 0bd4 07F55C73 		add	r3, r7, #880
 7961 0bd8 0122     		movs	r2, #1
 7962 0bda 83F85020 		strb	r2, [r3, #80]
 7963 0bde 07F55C73 		add	r3, r7, #880
 7964 0be2 0122     		movs	r2, #1
 7965 0be4 83F85120 		strb	r2, [r3, #81]
1031:..\src/command_processing.c ****         6, 6, 1, 1,
1032:..\src/command_processing.c ****         2, 1, 1, 2,
1033:..\src/command_processing.c ****         
1034:..\src/command_processing.c ****         1, 1, 1, 1,
1035:..\src/command_processing.c ****         1, 1
1036:..\src/command_processing.c ****     };
1037:..\src/command_processing.c ****     
1038:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 7966              		.loc 1 1038 0
 7967 0be8 07F54773 		add	r3, r7, #796
 7968 0bec 0022     		movs	r2, #0
 7969 0bee 1A70     		strb	r2, [r3]
 7970 0bf0 97F87535 		ldrb	r3, [r7, #1397]
 7971 0bf4 0A33     		adds	r3, r3, #10
 7972 0bf6 DAB2     		uxtb	r2, r3
 7973 0bf8 07F54773 		add	r3, r7, #796
 7974 0bfc 5A70     		strb	r2, [r3, #1]
 7975 0bfe 97F87535 		ldrb	r3, [r7, #1397]
 7976 0c02 0A33     		adds	r3, r3, #10
 7977 0c04 DAB2     		uxtb	r2, r3
 7978 0c06 07F54773 		add	r3, r7, #796
 7979 0c0a 9A70     		strb	r2, [r3, #2]
 7980 0c0c 97F87535 		ldrb	r3, [r7, #1397]
 7981 0c10 0A33     		adds	r3, r3, #10
 7982 0c12 DAB2     		uxtb	r2, r3
 7983 0c14 07F54773 		add	r3, r7, #796
 7984 0c18 DA70     		strb	r2, [r3, #3]
 7985 0c1a 97F87535 		ldrb	r3, [r7, #1397]
 7986 0c1e 0A33     		adds	r3, r3, #10
 7987 0c20 DAB2     		uxtb	r2, r3
 7988 0c22 07F54773 		add	r3, r7, #796
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 187


 7989 0c26 1A71     		strb	r2, [r3, #4]
 7990 0c28 97F87535 		ldrb	r3, [r7, #1397]
 7991 0c2c 0A33     		adds	r3, r3, #10
 7992 0c2e DAB2     		uxtb	r2, r3
 7993 0c30 07F54773 		add	r3, r7, #796
 7994 0c34 5A71     		strb	r2, [r3, #5]
1039:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1040:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 7995              		.loc 1 1040 0
 7996 0c36 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7997 0c3a D7F87815 		ldr	r1, [r7, #1400]
 7998 0c3e 1346     		mov	r3, r2
 7999 0c40 DB00     		lsls	r3, r3, #3
 8000 0c42 9B1A     		subs	r3, r3, r2
 8001 0c44 1B01     		lsls	r3, r3, #4
 8002 0c46 0B44     		add	r3, r3, r1
 8003 0c48 03F58873 		add	r3, r3, #272
 8004 0c4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8005              		.loc 1 1038 0
 8006 0c4e 1433     		adds	r3, r3, #20
 8007 0c50 DAB2     		uxtb	r2, r3
 8008 0c52 07F54773 		add	r3, r7, #796
 8009 0c56 9A71     		strb	r2, [r3, #6]
 8010              		.loc 1 1040 0
 8011 0c58 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8012 0c5c D7F87815 		ldr	r1, [r7, #1400]
 8013 0c60 1346     		mov	r3, r2
 8014 0c62 DB00     		lsls	r3, r3, #3
 8015 0c64 9B1A     		subs	r3, r3, r2
 8016 0c66 1B01     		lsls	r3, r3, #4
 8017 0c68 0B44     		add	r3, r3, r1
 8018 0c6a 03F58873 		add	r3, r3, #272
 8019 0c6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8020              		.loc 1 1038 0
 8021 0c70 1433     		adds	r3, r3, #20
 8022 0c72 DAB2     		uxtb	r2, r3
 8023 0c74 07F54773 		add	r3, r7, #796
 8024 0c78 DA71     		strb	r2, [r3, #7]
1041:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8025              		.loc 1 1041 0
 8026 0c7a 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8027 0c7e D7F87815 		ldr	r1, [r7, #1400]
 8028 0c82 1346     		mov	r3, r2
 8029 0c84 DB00     		lsls	r3, r3, #3
 8030 0c86 9B1A     		subs	r3, r3, r2
 8031 0c88 1B01     		lsls	r3, r3, #4
 8032 0c8a 0B44     		add	r3, r3, r1
 8033 0c8c 03F58873 		add	r3, r3, #272
 8034 0c90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8035              		.loc 1 1038 0
 8036 0c92 1433     		adds	r3, r3, #20
 8037 0c94 DAB2     		uxtb	r2, r3
 8038 0c96 07F54773 		add	r3, r7, #796
 8039 0c9a 1A72     		strb	r2, [r3, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 188


 8040 0c9c 97F87535 		ldrb	r3, [r7, #1397]
 8041 0ca0 0A33     		adds	r3, r3, #10
 8042 0ca2 DAB2     		uxtb	r2, r3
 8043 0ca4 07F54773 		add	r3, r7, #796
 8044 0ca8 5A72     		strb	r2, [r3, #9]
 8045 0caa 97F87535 		ldrb	r3, [r7, #1397]
 8046 0cae 0A33     		adds	r3, r3, #10
 8047 0cb0 DAB2     		uxtb	r2, r3
 8048 0cb2 07F54773 		add	r3, r7, #796
 8049 0cb6 03E0     		b	.L368
 8050              	.L369:
 8051              		.align	2
 8052              	.L367:
 8053 0cb8 24060000 		.word	.LC0
 8054 0cbc 00000000 		.word	N_Encoder_Line_Connected
 8055              	.L368:
 8056 0cc0 9A72     		strb	r2, [r3, #10]
 8057 0cc2 97F87535 		ldrb	r3, [r7, #1397]
 8058 0cc6 0A33     		adds	r3, r3, #10
 8059 0cc8 DAB2     		uxtb	r2, r3
 8060 0cca 07F54773 		add	r3, r7, #796
 8061 0cce DA72     		strb	r2, [r3, #11]
 8062 0cd0 97F87535 		ldrb	r3, [r7, #1397]
 8063 0cd4 0A33     		adds	r3, r3, #10
 8064 0cd6 DAB2     		uxtb	r2, r3
 8065 0cd8 07F54773 		add	r3, r7, #796
 8066 0cdc 1A73     		strb	r2, [r3, #12]
 8067 0cde 07F54773 		add	r3, r7, #796
 8068 0ce2 1E22     		movs	r2, #30
 8069 0ce4 5A73     		strb	r2, [r3, #13]
 8070 0ce6 07F54773 		add	r3, r7, #796
 8071 0cea 1E22     		movs	r2, #30
 8072 0cec 9A73     		strb	r2, [r3, #14]
 8073 0cee 07F54773 		add	r3, r7, #796
 8074 0cf2 1E22     		movs	r2, #30
 8075 0cf4 DA73     		strb	r2, [r3, #15]
 8076 0cf6 07F54773 		add	r3, r7, #796
 8077 0cfa 1E22     		movs	r2, #30
 8078 0cfc 1A74     		strb	r2, [r3, #16]
1042:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1043:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8079              		.loc 1 1043 0
 8080 0cfe 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8081 0d02 D7F87815 		ldr	r1, [r7, #1400]
 8082 0d06 1346     		mov	r3, r2
 8083 0d08 DB00     		lsls	r3, r3, #3
 8084 0d0a 9B1A     		subs	r3, r3, r2
 8085 0d0c 1B01     		lsls	r3, r3, #4
 8086 0d0e 0B44     		add	r3, r3, r1
 8087 0d10 03F58873 		add	r3, r3, #272
 8088 0d14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8089              		.loc 1 1038 0
 8090 0d16 1433     		adds	r3, r3, #20
 8091 0d18 DAB2     		uxtb	r2, r3
 8092 0d1a 07F54773 		add	r3, r7, #796
 8093 0d1e 5A74     		strb	r2, [r3, #17]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 189


 8094              		.loc 1 1043 0
 8095 0d20 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8096 0d24 D7F87815 		ldr	r1, [r7, #1400]
 8097 0d28 1346     		mov	r3, r2
 8098 0d2a DB00     		lsls	r3, r3, #3
 8099 0d2c 9B1A     		subs	r3, r3, r2
 8100 0d2e 1B01     		lsls	r3, r3, #4
 8101 0d30 0B44     		add	r3, r3, r1
 8102 0d32 03F58873 		add	r3, r3, #272
 8103 0d36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8104              		.loc 1 1038 0
 8105 0d38 1433     		adds	r3, r3, #20
 8106 0d3a DAB2     		uxtb	r2, r3
 8107 0d3c 07F54773 		add	r3, r7, #796
 8108 0d40 9A74     		strb	r2, [r3, #18]
 8109 0d42 97F87535 		ldrb	r3, [r7, #1397]
 8110 0d46 0A33     		adds	r3, r3, #10
 8111 0d48 DAB2     		uxtb	r2, r3
 8112 0d4a 07F54773 		add	r3, r7, #796
 8113 0d4e DA74     		strb	r2, [r3, #19]
 8114 0d50 97F87535 		ldrb	r3, [r7, #1397]
 8115 0d54 0A33     		adds	r3, r3, #10
 8116 0d56 DAB2     		uxtb	r2, r3
 8117 0d58 07F54773 		add	r3, r7, #796
 8118 0d5c 1A75     		strb	r2, [r3, #20]
 8119 0d5e 07F54773 		add	r3, r7, #796
 8120 0d62 0022     		movs	r2, #0
 8121 0d64 5A75     		strb	r2, [r3, #21]
 8122 0d66 07F54773 		add	r3, r7, #796
 8123 0d6a 4622     		movs	r2, #70
 8124 0d6c 9A75     		strb	r2, [r3, #22]
 8125 0d6e 07F54773 		add	r3, r7, #796
 8126 0d72 4622     		movs	r2, #70
 8127 0d74 DA75     		strb	r2, [r3, #23]
 8128 0d76 07F54773 		add	r3, r7, #796
 8129 0d7a 4622     		movs	r2, #70
 8130 0d7c 1A76     		strb	r2, [r3, #24]
 8131 0d7e 07F54773 		add	r3, r7, #796
 8132 0d82 4622     		movs	r2, #70
 8133 0d84 5A76     		strb	r2, [r3, #25]
 8134 0d86 07F54773 		add	r3, r7, #796
 8135 0d8a 1E22     		movs	r2, #30
 8136 0d8c 9A76     		strb	r2, [r3, #26]
 8137 0d8e 07F54773 		add	r3, r7, #796
 8138 0d92 0022     		movs	r2, #0
 8139 0d94 DA76     		strb	r2, [r3, #27]
 8140 0d96 07F54773 		add	r3, r7, #796
 8141 0d9a 2822     		movs	r2, #40
 8142 0d9c 1A77     		strb	r2, [r3, #28]
 8143 0d9e 07F54773 		add	r3, r7, #796
 8144 0da2 3222     		movs	r2, #50
 8145 0da4 5A77     		strb	r2, [r3, #29]
 8146 0da6 07F54773 		add	r3, r7, #796
 8147 0daa 0022     		movs	r2, #0
 8148 0dac 9A77     		strb	r2, [r3, #30]
 8149 0dae 07F54773 		add	r3, r7, #796
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 190


 8150 0db2 3222     		movs	r2, #50
 8151 0db4 DA77     		strb	r2, [r3, #31]
 8152 0db6 07F54773 		add	r3, r7, #796
 8153 0dba 2822     		movs	r2, #40
 8154 0dbc 83F82020 		strb	r2, [r3, #32]
 8155 0dc0 07F54773 		add	r3, r7, #796
 8156 0dc4 2822     		movs	r2, #40
 8157 0dc6 83F82120 		strb	r2, [r3, #33]
 8158 0dca 07F54773 		add	r3, r7, #796
 8159 0dce 0022     		movs	r2, #0
 8160 0dd0 83F82220 		strb	r2, [r3, #34]
1044:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1045:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1046:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1047:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8161              		.loc 1 1047 0
 8162 0dd4 D7F87835 		ldr	r3, [r7, #1400]
 8163 0dd8 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8164              		.loc 1 1038 0
 8165 0ddc 3C33     		adds	r3, r3, #60
 8166 0dde DAB2     		uxtb	r2, r3
 8167 0de0 07F54773 		add	r3, r7, #796
 8168 0de4 83F82320 		strb	r2, [r3, #35]
 8169 0de8 97F87535 		ldrb	r3, [r7, #1397]
 8170 0dec 0A33     		adds	r3, r3, #10
 8171 0dee DAB2     		uxtb	r2, r3
 8172 0df0 07F54773 		add	r3, r7, #796
 8173 0df4 83F82420 		strb	r2, [r3, #36]
 8174 0df8 97F87535 		ldrb	r3, [r7, #1397]
 8175 0dfc 0A33     		adds	r3, r3, #10
 8176 0dfe DAB2     		uxtb	r2, r3
 8177 0e00 07F54773 		add	r3, r7, #796
 8178 0e04 83F82520 		strb	r2, [r3, #37]
 8179 0e08 97F87535 		ldrb	r3, [r7, #1397]
 8180 0e0c 0A33     		adds	r3, r3, #10
 8181 0e0e DAB2     		uxtb	r2, r3
 8182 0e10 07F54773 		add	r3, r7, #796
 8183 0e14 83F82620 		strb	r2, [r3, #38]
 8184 0e18 97F87535 		ldrb	r3, [r7, #1397]
 8185 0e1c 0A33     		adds	r3, r3, #10
 8186 0e1e DAB2     		uxtb	r2, r3
 8187 0e20 07F54773 		add	r3, r7, #796
 8188 0e24 83F82720 		strb	r2, [r3, #39]
1048:..\src/command_processing.c ****         
1049:..\src/command_processing.c ****         // GENERIC PARAMS
1050:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1051:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8189              		.loc 1 1051 0
 8190 0e28 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8191 0e2c D7F87815 		ldr	r1, [r7, #1400]
 8192 0e30 1346     		mov	r3, r2
 8193 0e32 DB00     		lsls	r3, r3, #3
 8194 0e34 9B1A     		subs	r3, r3, r2
 8195 0e36 1B01     		lsls	r3, r3, #4
 8196 0e38 0B44     		add	r3, r3, r1
 8197 0e3a 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 191


 8198 0e3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8199              		.loc 1 1038 0
 8200 0e40 1433     		adds	r3, r3, #20
 8201 0e42 DAB2     		uxtb	r2, r3
 8202 0e44 07F54773 		add	r3, r7, #796
 8203 0e48 83F82820 		strb	r2, [r3, #40]
 8204              		.loc 1 1051 0
 8205 0e4c 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8206 0e50 D7F87815 		ldr	r1, [r7, #1400]
 8207 0e54 1346     		mov	r3, r2
 8208 0e56 DB00     		lsls	r3, r3, #3
 8209 0e58 9B1A     		subs	r3, r3, r2
 8210 0e5a 1B01     		lsls	r3, r3, #4
 8211 0e5c 0B44     		add	r3, r3, r1
 8212 0e5e 03F58873 		add	r3, r3, #272
 8213 0e62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8214              		.loc 1 1038 0
 8215 0e64 1433     		adds	r3, r3, #20
 8216 0e66 DAB2     		uxtb	r2, r3
 8217 0e68 07F54773 		add	r3, r7, #796
 8218 0e6c 83F82920 		strb	r2, [r3, #41]
 8219 0e70 07F54773 		add	r3, r7, #796
 8220 0e74 0022     		movs	r2, #0
 8221 0e76 83F82A20 		strb	r2, [r3, #42]
 8222 0e7a 97F87435 		ldrb	r3, [r7, #1396]
 8223 0e7e 0A33     		adds	r3, r3, #10
 8224 0e80 DAB2     		uxtb	r2, r3
 8225 0e82 07F54773 		add	r3, r7, #796
 8226 0e86 83F82B20 		strb	r2, [r3, #43]
 8227 0e8a 97F87435 		ldrb	r3, [r7, #1396]
 8228 0e8e 0A33     		adds	r3, r3, #10
 8229 0e90 DAB2     		uxtb	r2, r3
 8230 0e92 07F54773 		add	r3, r7, #796
 8231 0e96 83F82C20 		strb	r2, [r3, #44]
 8232 0e9a 97F87435 		ldrb	r3, [r7, #1396]
 8233 0e9e 0A33     		adds	r3, r3, #10
 8234 0ea0 DAB2     		uxtb	r2, r3
 8235 0ea2 07F54773 		add	r3, r7, #796
 8236 0ea6 83F82D20 		strb	r2, [r3, #45]
 8237 0eaa 97F87435 		ldrb	r3, [r7, #1396]
 8238 0eae 0A33     		adds	r3, r3, #10
 8239 0eb0 DAB2     		uxtb	r2, r3
 8240 0eb2 07F54773 		add	r3, r7, #796
 8241 0eb6 83F82E20 		strb	r2, [r3, #46]
 8242 0eba 97F87435 		ldrb	r3, [r7, #1396]
 8243 0ebe 0A33     		adds	r3, r3, #10
 8244 0ec0 DAB2     		uxtb	r2, r3
 8245 0ec2 07F54773 		add	r3, r7, #796
 8246 0ec6 83F82F20 		strb	r2, [r3, #47]
1052:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1053:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8247              		.loc 1 1053 0
 8248 0eca 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8249 0ece D7F87815 		ldr	r1, [r7, #1400]
 8250 0ed2 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 192


 8251 0ed4 DB00     		lsls	r3, r3, #3
 8252 0ed6 9B1A     		subs	r3, r3, r2
 8253 0ed8 1B01     		lsls	r3, r3, #4
 8254 0eda 0B44     		add	r3, r3, r1
 8255 0edc 03F58873 		add	r3, r3, #272
 8256 0ee0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8257              		.loc 1 1038 0
 8258 0ee2 1433     		adds	r3, r3, #20
 8259 0ee4 DAB2     		uxtb	r2, r3
 8260 0ee6 07F54773 		add	r3, r7, #796
 8261 0eea 83F83020 		strb	r2, [r3, #48]
 8262              		.loc 1 1053 0
 8263 0eee 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8264 0ef2 D7F87815 		ldr	r1, [r7, #1400]
 8265 0ef6 1346     		mov	r3, r2
 8266 0ef8 DB00     		lsls	r3, r3, #3
 8267 0efa 9B1A     		subs	r3, r3, r2
 8268 0efc 1B01     		lsls	r3, r3, #4
 8269 0efe 0B44     		add	r3, r3, r1
 8270 0f00 03F58873 		add	r3, r3, #272
 8271 0f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8272              		.loc 1 1038 0
 8273 0f06 1433     		adds	r3, r3, #20
 8274 0f08 DAB2     		uxtb	r2, r3
 8275 0f0a 07F54773 		add	r3, r7, #796
 8276 0f0e 83F83120 		strb	r2, [r3, #49]
 8277              		.loc 1 1053 0
 8278 0f12 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8279 0f16 D7F87815 		ldr	r1, [r7, #1400]
 8280 0f1a 1346     		mov	r3, r2
 8281 0f1c DB00     		lsls	r3, r3, #3
 8282 0f1e 9B1A     		subs	r3, r3, r2
 8283 0f20 1B01     		lsls	r3, r3, #4
 8284 0f22 0B44     		add	r3, r3, r1
 8285 0f24 03F58873 		add	r3, r3, #272
 8286 0f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8287              		.loc 1 1038 0
 8288 0f2a 1433     		adds	r3, r3, #20
 8289 0f2c DAB2     		uxtb	r2, r3
 8290 0f2e 07F54773 		add	r3, r7, #796
 8291 0f32 83F83220 		strb	r2, [r3, #50]
 8292 0f36 97F87435 		ldrb	r3, [r7, #1396]
 8293 0f3a 0A33     		adds	r3, r3, #10
 8294 0f3c DAB2     		uxtb	r2, r3
 8295 0f3e 07F54773 		add	r3, r7, #796
 8296 0f42 83F83320 		strb	r2, [r3, #51]
 8297 0f46 97F87435 		ldrb	r3, [r7, #1396]
 8298 0f4a 0A33     		adds	r3, r3, #10
 8299 0f4c DAB2     		uxtb	r2, r3
 8300 0f4e 07F54773 		add	r3, r7, #796
 8301 0f52 83F83420 		strb	r2, [r3, #52]
 8302 0f56 97F87435 		ldrb	r3, [r7, #1396]
 8303 0f5a 0A33     		adds	r3, r3, #10
 8304 0f5c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 193


 8305 0f5e 07F54773 		add	r3, r7, #796
 8306 0f62 83F83520 		strb	r2, [r3, #53]
 8307 0f66 97F87435 		ldrb	r3, [r7, #1396]
 8308 0f6a 0A33     		adds	r3, r3, #10
 8309 0f6c DAB2     		uxtb	r2, r3
 8310 0f6e 07F54773 		add	r3, r7, #796
 8311 0f72 83F83620 		strb	r2, [r3, #54]
1054:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8312              		.loc 1 1054 0
 8313 0f76 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8314 0f7a D7F87815 		ldr	r1, [r7, #1400]
 8315 0f7e 1346     		mov	r3, r2
 8316 0f80 DB00     		lsls	r3, r3, #3
 8317 0f82 9B1A     		subs	r3, r3, r2
 8318 0f84 1B01     		lsls	r3, r3, #4
 8319 0f86 0B44     		add	r3, r3, r1
 8320 0f88 03F58873 		add	r3, r3, #272
 8321 0f8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8322              		.loc 1 1038 0
 8323 0f8e 1433     		adds	r3, r3, #20
 8324 0f90 DAB2     		uxtb	r2, r3
 8325 0f92 07F54773 		add	r3, r7, #796
 8326 0f96 83F83720 		strb	r2, [r3, #55]
1055:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8327              		.loc 1 1055 0
 8328 0f9a 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8329 0f9e D7F87815 		ldr	r1, [r7, #1400]
 8330 0fa2 1346     		mov	r3, r2
 8331 0fa4 DB00     		lsls	r3, r3, #3
 8332 0fa6 9B1A     		subs	r3, r3, r2
 8333 0fa8 1B01     		lsls	r3, r3, #4
 8334 0faa 0B44     		add	r3, r3, r1
 8335 0fac 03F58873 		add	r3, r3, #272
 8336 0fb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8337              		.loc 1 1038 0
 8338 0fb2 1433     		adds	r3, r3, #20
 8339 0fb4 DAB2     		uxtb	r2, r3
 8340 0fb6 07F54773 		add	r3, r7, #796
 8341 0fba 83F83820 		strb	r2, [r3, #56]
 8342 0fbe 97F87435 		ldrb	r3, [r7, #1396]
 8343 0fc2 0A33     		adds	r3, r3, #10
 8344 0fc4 DAB2     		uxtb	r2, r3
 8345 0fc6 07F54773 		add	r3, r7, #796
 8346 0fca 83F83920 		strb	r2, [r3, #57]
 8347 0fce 97F87435 		ldrb	r3, [r7, #1396]
 8348 0fd2 0A33     		adds	r3, r3, #10
 8349 0fd4 DAB2     		uxtb	r2, r3
 8350 0fd6 07F54773 		add	r3, r7, #796
 8351 0fda 83F83A20 		strb	r2, [r3, #58]
 8352 0fde 97F87435 		ldrb	r3, [r7, #1396]
 8353 0fe2 0A33     		adds	r3, r3, #10
 8354 0fe4 DAB2     		uxtb	r2, r3
 8355 0fe6 07F54773 		add	r3, r7, #796
 8356 0fea 83F83B20 		strb	r2, [r3, #59]
 8357 0fee 97F87435 		ldrb	r3, [r7, #1396]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 194


 8358 0ff2 0A33     		adds	r3, r3, #10
 8359 0ff4 DAB2     		uxtb	r2, r3
 8360 0ff6 07F54773 		add	r3, r7, #796
 8361 0ffa 83F83C20 		strb	r2, [r3, #60]
 8362 0ffe 97F87435 		ldrb	r3, [r7, #1396]
 8363 1002 0A33     		adds	r3, r3, #10
 8364 1004 DAB2     		uxtb	r2, r3
 8365 1006 07F54773 		add	r3, r7, #796
 8366 100a 83F83D20 		strb	r2, [r3, #61]
 8367 100e 97F87435 		ldrb	r3, [r7, #1396]
 8368 1012 0A33     		adds	r3, r3, #10
 8369 1014 DAB2     		uxtb	r2, r3
 8370 1016 07F54773 		add	r3, r7, #796
 8371 101a 83F83E20 		strb	r2, [r3, #62]
1056:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8372              		.loc 1 1056 0
 8373 101e 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8374 1022 D7F87815 		ldr	r1, [r7, #1400]
 8375 1026 1346     		mov	r3, r2
 8376 1028 DB00     		lsls	r3, r3, #3
 8377 102a 9B1A     		subs	r3, r3, r2
 8378 102c 1B01     		lsls	r3, r3, #4
 8379 102e 0B44     		add	r3, r3, r1
 8380 1030 03F58873 		add	r3, r3, #272
 8381 1034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8382              		.loc 1 1038 0
 8383 1036 1433     		adds	r3, r3, #20
 8384 1038 DAB2     		uxtb	r2, r3
 8385 103a 07F54773 		add	r3, r7, #796
 8386 103e 83F83F20 		strb	r2, [r3, #63]
1057:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8387              		.loc 1 1057 0
 8388 1042 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8389 1046 D7F87815 		ldr	r1, [r7, #1400]
 8390 104a 1346     		mov	r3, r2
 8391 104c DB00     		lsls	r3, r3, #3
 8392 104e 9B1A     		subs	r3, r3, r2
 8393 1050 1B01     		lsls	r3, r3, #4
 8394 1052 0B44     		add	r3, r3, r1
 8395 1054 03F58873 		add	r3, r3, #272
 8396 1058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1038:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8397              		.loc 1 1038 0
 8398 105a 1433     		adds	r3, r3, #20
 8399 105c DAB2     		uxtb	r2, r3
 8400 105e 07F54773 		add	r3, r7, #796
 8401 1062 83F84020 		strb	r2, [r3, #64]
 8402 1066 07F54773 		add	r3, r7, #796
 8403 106a 1422     		movs	r2, #20
 8404 106c 83F84120 		strb	r2, [r3, #65]
 8405 1070 07F54773 		add	r3, r7, #796
 8406 1074 1522     		movs	r2, #21
 8407 1076 83F84220 		strb	r2, [r3, #66]
 8408 107a 07F54773 		add	r3, r7, #796
 8409 107e 3222     		movs	r2, #50
 8410 1080 83F84320 		strb	r2, [r3, #67]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 195


 8411 1084 07F54773 		add	r3, r7, #796
 8412 1088 3222     		movs	r2, #50
 8413 108a 83F84420 		strb	r2, [r3, #68]
 8414 108e 07F54773 		add	r3, r7, #796
 8415 1092 3222     		movs	r2, #50
 8416 1094 83F84520 		strb	r2, [r3, #69]
 8417 1098 07F54773 		add	r3, r7, #796
 8418 109c 6E22     		movs	r2, #110
 8419 109e 83F84620 		strb	r2, [r3, #70]
 8420 10a2 07F54773 		add	r3, r7, #796
 8421 10a6 6E22     		movs	r2, #110
 8422 10a8 83F84720 		strb	r2, [r3, #71]
 8423 10ac 07F54773 		add	r3, r7, #796
 8424 10b0 6E22     		movs	r2, #110
 8425 10b2 83F84820 		strb	r2, [r3, #72]
 8426 10b6 07F54773 		add	r3, r7, #796
 8427 10ba 0022     		movs	r2, #0
 8428 10bc 83F84920 		strb	r2, [r3, #73]
 8429 10c0 07F54773 		add	r3, r7, #796
 8430 10c4 6422     		movs	r2, #100
 8431 10c6 83F84A20 		strb	r2, [r3, #74]
 8432 10ca 07F54773 		add	r3, r7, #796
 8433 10ce 6422     		movs	r2, #100
 8434 10d0 83F84B20 		strb	r2, [r3, #75]
 8435 10d4 07F54773 		add	r3, r7, #796
 8436 10d8 6422     		movs	r2, #100
 8437 10da 83F84C20 		strb	r2, [r3, #76]
 8438 10de 07F54773 		add	r3, r7, #796
 8439 10e2 5022     		movs	r2, #80
 8440 10e4 83F84D20 		strb	r2, [r3, #77]
 8441 10e8 07F54773 		add	r3, r7, #796
 8442 10ec 5022     		movs	r2, #80
 8443 10ee 83F84E20 		strb	r2, [r3, #78]
 8444 10f2 07F54773 		add	r3, r7, #796
 8445 10f6 5A22     		movs	r2, #90
 8446 10f8 83F84F20 		strb	r2, [r3, #79]
 8447 10fc 07F54773 		add	r3, r7, #796
 8448 1100 5A22     		movs	r2, #90
 8449 1102 83F85020 		strb	r2, [r3, #80]
 8450 1106 07F54773 		add	r3, r7, #796
 8451 110a 5A22     		movs	r2, #90
 8452 110c 83F85120 		strb	r2, [r3, #81]
1058:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC, ST_JOY_SPEC,
1059:..\src/command_processing.c ****         ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, ST_WR_SPEC,
1060:..\src/command_processing.c ****         
1061:..\src/command_processing.c ****         ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC, ST_FB_SPEC,
1062:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC
1063:..\src/command_processing.c ****         
1064:..\src/command_processing.c ****     };
1065:..\src/command_processing.c ****     
1066:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8453              		.loc 1 1066 0
 8454 1110 07F5EA73 		add	r3, r7, #468
 8455 1114 D04A     		ldr	r2, .L370
 8456 1116 1846     		mov	r0, r3
 8457 1118 1146     		mov	r1, r2
 8458 111a 4FF4A473 		mov	r3, #328
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 196


 8459 111e 1A46     		mov	r2, r3
 8460 1120 FFF7FEFF 		bl	memcpy
1067:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1068:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1069:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1070:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1071:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1072:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1073:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1074:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1075:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1076:..\src/command_processing.c ****         
1077:..\src/command_processing.c ****         // GENERIC PARAMS
1078:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1079:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1080:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1081:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1082:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1083:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1084:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1085:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1086:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Joystick closure speed:", "72 
1087:..\src/command_processing.c ****         "73 - Joystick gains:", "74 - Device type:", "75 - EMG FSM act.mode:", "76 - Fast act.thres
1088:..\src/command_processing.c ****         
1089:..\src/command_processing.c ****         "77 - Wrist direction:", "78 - Slave communication active:", "79 - Slave ID:", "80 - Maximu
1090:..\src/command_processing.c ****         "81 - Maximum pressure feedback (kPa):", "82 - Proportional pressure error gain:", 
1091:..\src/command_processing.c ****     };
1092:..\src/command_processing.c **** 
1093:..\src/command_processing.c ****     //Parameters menu
1094:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8461              		.loc 1 1094 0
 8462 1124 07F5AE73 		add	r3, r7, #348
 8463 1128 0022     		movs	r2, #0
 8464 112a 1A60     		str	r2, [r3]
 8465 112c 0433     		adds	r3, r3, #4
 8466 112e 7222     		movs	r2, #114
 8467 1130 0021     		movs	r1, #0
 8468 1132 1846     		mov	r0, r3
 8469 1134 FFF7FEFF 		bl	memset
1095:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8470              		.loc 1 1095 0
 8471 1138 07F5AE70 		add	r0, r7, #348
 8472 113c 6423     		movs	r3, #100
 8473 113e 0A22     		movs	r2, #10
 8474 1140 C649     		ldr	r1, .L370+4
 8475 1142 FFF7FEFF 		bl	sprintf
1096:..\src/command_processing.c **** 
1097:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8476              		.loc 1 1097 0
 8477 1146 07F59273 		add	r3, r7, #292
 8478 114a 0022     		movs	r2, #0
 8479 114c 1A60     		str	r2, [r3]
 8480 114e 0433     		adds	r3, r3, #4
 8481 1150 3422     		movs	r2, #52
 8482 1152 0021     		movs	r1, #0
 8483 1154 1846     		mov	r0, r3
 8484 1156 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 197


1098:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8485              		.loc 1 1098 0
 8486 115a D7F87835 		ldr	r3, [r7, #1400]
 8487 115e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8488 1162 042B     		cmp	r3, #4
 8489 1164 10D1     		bne	.L302
1099:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8490              		.loc 1 1099 0
 8491 1166 07F59273 		add	r3, r7, #292
 8492 116a BD4A     		ldr	r2, .L370+8
 8493 116c 1C46     		mov	r4, r3
 8494 116e 1546     		mov	r5, r2
 8495 1170 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8496 1172 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8497 1174 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8498 1176 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8499 1178 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8500 117a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8501 117c 95E80300 		ldmia	r5, {r0, r1}
 8502 1180 2060     		str	r0, [r4]
 8503 1182 0434     		adds	r4, r4, #4
 8504 1184 2170     		strb	r1, [r4]
 8505 1186 12E0     		b	.L303
 8506              	.L302:
1100:..\src/command_processing.c ****     }
1101:..\src/command_processing.c ****     else {
1102:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist, Slow:hand\n1 -> Slow:wrist, Fast:hand\n
 8507              		.loc 1 1102 0
 8508 1188 07F59273 		add	r3, r7, #292
 8509 118c B54A     		ldr	r2, .L370+12
 8510 118e 1C46     		mov	r4, r3
 8511 1190 1546     		mov	r5, r2
 8512 1192 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8513 1194 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8514 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8515 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8516 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8517 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8518 119e 95E80300 		ldmia	r5, {r0, r1}
 8519 11a2 2060     		str	r0, [r4]
 8520 11a4 0434     		adds	r4, r4, #4
 8521 11a6 2180     		strh	r1, [r4]	@ movhi
 8522 11a8 0234     		adds	r4, r4, #2
 8523 11aa 0B0C     		lsrs	r3, r1, #16
 8524 11ac 2370     		strb	r3, [r4]
 8525              	.L303:
1103:..\src/command_processing.c ****     }
1104:..\src/command_processing.c ****     
1105:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8526              		.loc 1 1105 0
 8527 11ae 07F1F403 		add	r3, r7, #244
 8528 11b2 AD4A     		ldr	r2, .L370+16
 8529 11b4 1A60     		str	r2, [r3]
 8530 11b6 07F1F403 		add	r3, r7, #244
 8531 11ba AC4A     		ldr	r2, .L370+20
 8532 11bc 5A60     		str	r2, [r3, #4]
 8533 11be 07F1F403 		add	r3, r7, #244
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 198


 8534 11c2 AB4A     		ldr	r2, .L370+24
 8535 11c4 9A60     		str	r2, [r3, #8]
 8536 11c6 07F1F403 		add	r3, r7, #244
 8537 11ca AA4A     		ldr	r2, .L370+28
 8538 11cc DA60     		str	r2, [r3, #12]
 8539 11ce 07F1F403 		add	r3, r7, #244
 8540 11d2 A94A     		ldr	r2, .L370+32
 8541 11d4 1A61     		str	r2, [r3, #16]
 8542 11d6 07F1F403 		add	r3, r7, #244
 8543 11da A84A     		ldr	r2, .L370+36
 8544 11dc 5A61     		str	r2, [r3, #20]
 8545 11de 07F1F403 		add	r3, r7, #244
 8546 11e2 07F5AE72 		add	r2, r7, #348
 8547 11e6 9A61     		str	r2, [r3, #24]
 8548 11e8 07F1F403 		add	r3, r7, #244
 8549 11ec A44A     		ldr	r2, .L370+40
 8550 11ee DA61     		str	r2, [r3, #28]
 8551 11f0 07F1F403 		add	r3, r7, #244
 8552 11f4 A34A     		ldr	r2, .L370+44
 8553 11f6 1A62     		str	r2, [r3, #32]
 8554 11f8 07F1F403 		add	r3, r7, #244
 8555 11fc A24A     		ldr	r2, .L370+48
 8556 11fe 5A62     		str	r2, [r3, #36]
 8557 1200 07F1F403 		add	r3, r7, #244
 8558 1204 07F59272 		add	r2, r7, #292
 8559 1208 9A62     		str	r2, [r3, #40]
 8560 120a 07F1F403 		add	r3, r7, #244
 8561 120e 9F4A     		ldr	r2, .L370+52
 8562 1210 DA62     		str	r2, [r3, #44]
1106:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1107:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1108:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1109:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1110:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1111:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1112:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1113:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1114:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1115:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1116:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1117:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1118:..\src/command_processing.c ****     };   
1119:..\src/command_processing.c ****     
1120:..\src/command_processing.c ****     uint8 NUM_MENU[31] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8563              		.loc 1 1120 0
 8564 1212 07F1D403 		add	r3, r7, #212
 8565 1216 9E4A     		ldr	r2, .L370+56
 8566 1218 1C46     		mov	r4, r3
 8567 121a 1546     		mov	r5, r2
 8568 121c 2868     		ldr	r0, [r5]	@ unaligned
 8569 121e 6968     		ldr	r1, [r5, #4]	@ unaligned
 8570 1220 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8571 1222 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8572 1224 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8573 1226 2869     		ldr	r0, [r5, #16]	@ unaligned
 8574 1228 6969     		ldr	r1, [r5, #20]	@ unaligned
 8575 122a AA69     		ldr	r2, [r5, #24]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 199


 8576 122c 07C4     		stmia	r4!, {r0, r1, r2}
 8577 122e AB8B     		ldrh	r3, [r5, #28]	@ unaligned
 8578 1230 AA7F     		ldrb	r2, [r5, #30]
 8579 1232 2380     		strh	r3, [r4]	@ unaligned
 8580 1234 1346     		mov	r3, r2
 8581 1236 A370     		strb	r3, [r4, #2]
1121:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8582              		.loc 1 1121 0
 8583 1238 07F1C803 		add	r3, r7, #200
 8584 123c 954A     		ldr	r2, .L370+60
 8585 123e 1068     		ldr	r0, [r2]	@ unaligned
 8586 1240 5168     		ldr	r1, [r2, #4]	@ unaligned
 8587 1242 03C3     		stmia	r3!, {r0, r1}
 8588 1244 127A     		ldrb	r2, [r2, #8]
 8589 1246 1A70     		strb	r2, [r3]
1122:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8590              		.loc 1 1122 0
 8591 1248 07F1B403 		add	r3, r7, #180
 8592 124c 924A     		ldr	r2, .L370+64
 8593 124e 1C46     		mov	r4, r3
 8594 1250 1546     		mov	r5, r2
 8595 1252 2868     		ldr	r0, [r5]	@ unaligned
 8596 1254 6968     		ldr	r1, [r5, #4]	@ unaligned
 8597 1256 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8598 1258 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8599 125a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8600 125c 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8601 125e 2380     		strh	r3, [r4]	@ unaligned
1123:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8602              		.loc 1 1123 0
 8603 1260 2323     		movs	r3, #35
 8604 1262 87F87335 		strb	r3, [r7, #1395]
1124:..\src/command_processing.c **** 
1125:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1126:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1127:..\src/command_processing.c ****     
1128:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1129:..\src/command_processing.c **** 
1130:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1131:..\src/command_processing.c ****     
1132:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1133:..\src/command_processing.c ****     j = 0;
 8605              		.loc 1 1133 0
 8606 1266 0023     		movs	r3, #0
 8607 1268 87F87E35 		strb	r3, [r7, #1406]
1134:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8608              		.loc 1 1134 0
 8609 126c 0023     		movs	r3, #0
 8610 126e 87F87F35 		strb	r3, [r7, #1407]
 8611 1272 21E0     		b	.L304
 8612              	.L307:
1135:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8613              		.loc 1 1135 0
 8614 1274 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8615 1278 07F1C802 		add	r2, r7, #200
 8616 127c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8617 127e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 200


 8618 1280 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8619 1284 0133     		adds	r3, r3, #1
 8620 1286 9A42     		cmp	r2, r3
 8621 1288 0BD1     		bne	.L305
1136:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8622              		.loc 1 1136 0
 8623 128a 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8624 128e 07F16002 		add	r2, r7, #96
 8625 1292 0121     		movs	r1, #1
 8626 1294 D154     		strb	r1, [r2, r3]
1137:..\src/command_processing.c ****             j++;
 8627              		.loc 1 1137 0
 8628 1296 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8629 129a 0133     		adds	r3, r3, #1
 8630 129c 87F87E35 		strb	r3, [r7, #1406]
 8631 12a0 05E0     		b	.L306
 8632              	.L305:
1138:..\src/command_processing.c ****         }
1139:..\src/command_processing.c ****         else {
1140:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8633              		.loc 1 1140 0
 8634 12a2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8635 12a6 07F16002 		add	r2, r7, #96
 8636 12aa 0021     		movs	r1, #0
 8637 12ac D154     		strb	r1, [r2, r3]
 8638              	.L306:
1134:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8639              		.loc 1 1134 0 discriminator 2
 8640 12ae 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8641 12b2 0133     		adds	r3, r3, #1
 8642 12b4 87F87F35 		strb	r3, [r7, #1407]
 8643              	.L304:
1134:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8644              		.loc 1 1134 0 is_stmt 0 discriminator 1
 8645 12b8 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8646 12bc 512B     		cmp	r3, #81
 8647 12be D9D9     		bls	.L307
1141:..\src/command_processing.c ****         }
1142:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1143:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1144:..\src/command_processing.c ****     j = 0;
 8648              		.loc 1 1144 0 is_stmt 1
 8649 12c0 0023     		movs	r3, #0
 8650 12c2 87F87E35 		strb	r3, [r7, #1406]
1145:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8651              		.loc 1 1145 0
 8652 12c6 0023     		movs	r3, #0
 8653 12c8 87F87F35 		strb	r3, [r7, #1407]
 8654 12cc 21E0     		b	.L308
 8655              	.L311:
1146:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8656              		.loc 1 1146 0
 8657 12ce 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8658 12d2 07F1B402 		add	r2, r7, #180
 8659 12d6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8660 12d8 1A46     		mov	r2, r3
 8661 12da 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 201


 8662 12de 0133     		adds	r3, r3, #1
 8663 12e0 9A42     		cmp	r2, r3
 8664 12e2 0BD1     		bne	.L309
1147:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8665              		.loc 1 1147 0
 8666 12e4 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8667 12e8 07F10C02 		add	r2, r7, #12
 8668 12ec 0121     		movs	r1, #1
 8669 12ee D154     		strb	r1, [r2, r3]
1148:..\src/command_processing.c ****             j++;
 8670              		.loc 1 1148 0
 8671 12f0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8672 12f4 0133     		adds	r3, r3, #1
 8673 12f6 87F87E35 		strb	r3, [r7, #1406]
 8674 12fa 05E0     		b	.L310
 8675              	.L309:
1149:..\src/command_processing.c ****         }
1150:..\src/command_processing.c ****         else {
1151:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8676              		.loc 1 1151 0
 8677 12fc 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8678 1300 07F10C02 		add	r2, r7, #12
 8679 1304 0021     		movs	r1, #0
 8680 1306 D154     		strb	r1, [r2, r3]
 8681              	.L310:
1145:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8682              		.loc 1 1145 0 discriminator 2
 8683 1308 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8684 130c 0133     		adds	r3, r3, #1
 8685 130e 87F87F35 		strb	r3, [r7, #1407]
 8686              	.L308:
1145:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8687              		.loc 1 1145 0 is_stmt 0 discriminator 1
 8688 1312 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8689 1316 512B     		cmp	r3, #81
 8690 1318 D9D9     		bls	.L311
1152:..\src/command_processing.c ****         }
1153:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1154:..\src/command_processing.c ****         
1155:..\src/command_processing.c ****     if (!index) {
 8691              		.loc 1 1155 0 is_stmt 1
 8692 131a BB1D     		adds	r3, r7, #6
 8693 131c 1B88     		ldrh	r3, [r3]
 8694 131e 002B     		cmp	r3, #0
 8695 1320 17D1     		bne	.L312
1156:..\src/command_processing.c ****         // Get parameters list with relative types
1157:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8696              		.loc 1 1157 0
 8697 1322 07F54774 		add	r4, r7, #796
 8698 1326 07F55C72 		add	r2, r7, #880
 8699 132a 07F57171 		add	r1, r7, #964
 8700 132e 07F58360 		add	r0, r7, #1048
 8701 1332 07F1F403 		add	r3, r7, #244
 8702 1336 0393     		str	r3, [sp, #12]
 8703 1338 07F16003 		add	r3, r7, #96
 8704 133c 0293     		str	r3, [sp, #8]
 8705 133e 07F5EA73 		add	r3, r7, #468
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 202


 8706 1342 0193     		str	r3, [sp, #4]
 8707 1344 07F1D403 		add	r3, r7, #212
 8708 1348 0093     		str	r3, [sp]
 8709 134a 2346     		mov	r3, r4
 8710 134c FFF7FEFF 		bl	get_param_list
1158:..\src/command_processing.c ****     }
1159:..\src/command_processing.c ****     else {
1160:..\src/command_processing.c ****         // Set specific parameter        
1161:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1162:..\src/command_processing.c ****         
1163:..\src/command_processing.c ****         // Find size of data
1164:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1165:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1166:..\src/command_processing.c ****                 sod = 1; break;
1167:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1168:..\src/command_processing.c ****                 sod = 2; break;
1169:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1170:..\src/command_processing.c ****                 sod = 4; break;
1171:..\src/command_processing.c ****         }   
1172:..\src/command_processing.c ****             
1173:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1174:..\src/command_processing.c ****             // Use default specifications for param setting
1175:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1176:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1177:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1178:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1179:..\src/command_processing.c ****                     }
1180:..\src/command_processing.c ****                     break;                
1181:..\src/command_processing.c ****                 case TYPE_STRING:
1182:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1183:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1184:..\src/command_processing.c ****                     }
1185:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1186:..\src/command_processing.c ****                 break; 
1187:..\src/command_processing.c ****                 case TYPE_INT8:
1188:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1189:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1190:..\src/command_processing.c ****                     }
1191:..\src/command_processing.c ****                     break;                    
1192:..\src/command_processing.c ****                 case TYPE_INT16:
1193:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1194:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1195:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1196:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1197:..\src/command_processing.c ****                         }
1198:..\src/command_processing.c ****                     }                   
1199:..\src/command_processing.c ****                     break;
1200:..\src/command_processing.c ****                 case TYPE_UINT16:
1201:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1202:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1203:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1204:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1205:..\src/command_processing.c ****                         }
1206:..\src/command_processing.c ****                     }
1207:..\src/command_processing.c ****                     break;
1208:..\src/command_processing.c ****                 case TYPE_INT32:
1209:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 203


1210:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1211:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1212:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1213:..\src/command_processing.c ****                         }
1214:..\src/command_processing.c ****                     }
1215:..\src/command_processing.c ****                     break;
1216:..\src/command_processing.c ****                 case TYPE_UINT32:
1217:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1218:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1219:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1220:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1221:..\src/command_processing.c ****                         }
1222:..\src/command_processing.c ****                     }
1223:..\src/command_processing.c ****                     break;
1224:..\src/command_processing.c ****                 case TYPE_FLOAT:
1225:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1226:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1227:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1228:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1229:..\src/command_processing.c ****                         }
1230:..\src/command_processing.c ****                     }
1231:..\src/command_processing.c ****                     break;
1232:..\src/command_processing.c ****                 default:
1233:..\src/command_processing.c ****                     break;
1234:..\src/command_processing.c ****             }
1235:..\src/command_processing.c ****         }
1236:..\src/command_processing.c ****         else {  
1237:..\src/command_processing.c ****             // Use custom specifications for param setting
1238:..\src/command_processing.c ****             set_custom_param(index);
1239:..\src/command_processing.c ****         }
1240:..\src/command_processing.c ****         
1241:..\src/command_processing.c ****         // Store param also in user_emg structure
1242:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1243:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1244:..\src/command_processing.c ****         }
1245:..\src/command_processing.c ****         
1246:..\src/command_processing.c ****         // Perform chip reset if needed
1247:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1248:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1249:..\src/command_processing.c ****             do {
1250:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1251:..\src/command_processing.c ****                 idx++;
1252:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1253:..\src/command_processing.c ****             
1254:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1255:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1256:..\src/command_processing.c ****             }   
1257:..\src/command_processing.c ****         }
1258:..\src/command_processing.c ****     }
1259:..\src/command_processing.c **** } 
 8711              		.loc 1 1259 0
 8712 1350 E0E2     		b	.L363
 8713              	.L312:
1161:..\src/command_processing.c ****         
 8714              		.loc 1 1161 0
 8715 1352 BB1D     		adds	r3, r7, #6
 8716 1354 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 204


 8717 1356 DBB2     		uxtb	r3, r3
 8718 1358 013B     		subs	r3, r3, #1
 8719 135a 87F87235 		strb	r3, [r7, #1394]
1164:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8720              		.loc 1 1164 0
 8721 135e 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8722 1362 07F57172 		add	r2, r7, #964
 8723 1366 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8724 1368 092B     		cmp	r3, #9
 8725 136a 23D8     		bhi	.L314
 8726 136c 01A2     		adr	r2, .L316
 8727 136e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8728 1372 00BF     		.p2align 2
 8729              	.L316:
 8730 1374 9D130000 		.word	.L315+1
 8731 1378 9D130000 		.word	.L315+1
 8732 137c 9D130000 		.word	.L315+1
 8733 1380 A5130000 		.word	.L317+1
 8734 1384 A5130000 		.word	.L317+1
 8735 1388 AD130000 		.word	.L318+1
 8736 138c AD130000 		.word	.L318+1
 8737 1390 AD130000 		.word	.L318+1
 8738 1394 B5130000 		.word	.L314+1
 8739 1398 9D130000 		.word	.L315+1
 8740              		.p2align 1
 8741              	.L315:
1166:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8742              		.loc 1 1166 0
 8743 139c 0123     		movs	r3, #1
 8744 139e 87F87D35 		strb	r3, [r7, #1405]
 8745 13a2 07E0     		b	.L314
 8746              	.L317:
1168:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8747              		.loc 1 1168 0
 8748 13a4 0223     		movs	r3, #2
 8749 13a6 87F87D35 		strb	r3, [r7, #1405]
 8750 13aa 03E0     		b	.L314
 8751              	.L318:
1170:..\src/command_processing.c ****         }   
 8752              		.loc 1 1170 0
 8753 13ac 0423     		movs	r3, #4
 8754 13ae 87F87D35 		strb	r3, [r7, #1405]
 8755 13b2 00BF     		nop
 8756              	.L314:
1173:..\src/command_processing.c ****             // Use default specifications for param setting
 8757              		.loc 1 1173 0
 8758 13b4 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8759 13b8 07F10C02 		add	r2, r7, #12
 8760 13bc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8761 13be 002B     		cmp	r3, #0
 8762 13c0 40F03B82 		bne	.L319
1175:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8763              		.loc 1 1175 0
 8764 13c4 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8765 13c8 07F57172 		add	r2, r7, #964
 8766 13cc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8767 13ce 092B     		cmp	r3, #9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 205


 8768 13d0 00F23C82 		bhi	.L362
 8769 13d4 01A2     		adr	r2, .L322
 8770 13d6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8771 13da 00BF     		.p2align 2
 8772              	.L322:
 8773 13dc 05140000 		.word	.L321+1
 8774 13e0 03150000 		.word	.L323+1
 8775 13e4 05140000 		.word	.L321+1
 8776 13e8 55150000 		.word	.L324+1
 8777 13ec EB150000 		.word	.L325+1
 8778 13f0 7F160000 		.word	.L326+1
 8779 13f4 13170000 		.word	.L327+1
 8780 13f8 A7170000 		.word	.L328+1
 8781 13fc 4D180000 		.word	.L362+1
 8782 1400 51140000 		.word	.L329+1
 8783              		.p2align 1
 8784              	.L321:
1177:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8785              		.loc 1 1177 0
 8786 1404 0023     		movs	r3, #0
 8787 1406 87F87F35 		strb	r3, [r7, #1407]
 8788 140a 17E0     		b	.L330
 8789              	.L331:
1178:..\src/command_processing.c ****                     }
 8790              		.loc 1 1178 0 discriminator 3
 8791 140c 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 8792 1410 07F58363 		add	r3, r7, #1048
 8793 1414 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8794 1418 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8795 141c 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8796 1420 01FB02F2 		mul	r2, r1, r2
 8797 1424 1344     		add	r3, r3, r2
 8798 1426 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8799 142a 0332     		adds	r2, r2, #3
 8800 142c 1B49     		ldr	r1, .L370+68
 8801 142e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8802 1430 1A70     		strb	r2, [r3]
1177:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8803              		.loc 1 1177 0 discriminator 3
 8804 1432 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8805 1436 0133     		adds	r3, r3, #1
 8806 1438 87F87F35 		strb	r3, [r7, #1407]
 8807              	.L330:
1177:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8808              		.loc 1 1177 0 is_stmt 0 discriminator 1
 8809 143c 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8810 1440 07F55C72 		add	r2, r7, #880
 8811 1444 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8812 1446 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8813 144a 9A42     		cmp	r2, r3
 8814 144c DED3     		bcc	.L331
1180:..\src/command_processing.c ****                 case TYPE_STRING:
 8815              		.loc 1 1180 0 is_stmt 1
 8816 144e FEE1     		b	.L357
 8817              	.L329:
1182:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8818              		.loc 1 1182 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 206


 8819 1450 0023     		movs	r3, #0
 8820 1452 87F87F35 		strb	r3, [r7, #1407]
 8821 1456 3BE0     		b	.L333
 8822              	.L371:
 8823              		.align	2
 8824              	.L370:
 8825 1458 F00E0000 		.word	.LC127
 8826 145c 74020000 		.word	.LC128
 8827 1460 E8020000 		.word	.LC129
 8828 1464 20030000 		.word	.LC130
 8829 1468 58030000 		.word	.LC131
 8830 146c E4030000 		.word	.LC132
 8831 1470 24040000 		.word	.LC133
 8832 1474 50040000 		.word	.LC134
 8833 1478 68040000 		.word	.LC135
 8834 147c 90040000 		.word	.LC136
 8835 1480 EC040000 		.word	.LC137
 8836 1484 2C050000 		.word	.LC138
 8837 1488 74050000 		.word	.LC139
 8838 148c F0050000 		.word	.LC140
 8839 1490 38100000 		.word	.LC84
 8840 1494 58100000 		.word	.LC85
 8841 1498 64100000 		.word	.LC86
 8842 149c 00000000 		.word	g_rx
 8843              	.L334:
1183:..\src/command_processing.c ****                     }
 8844              		.loc 1 1183 0 discriminator 3
 8845 14a0 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 8846 14a4 07F58363 		add	r3, r7, #1048
 8847 14a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8848 14ac 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8849 14b0 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8850 14b4 01FB02F2 		mul	r2, r1, r2
 8851 14b8 1344     		add	r3, r3, r2
 8852 14ba 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8853 14be 0332     		adds	r2, r2, #3
 8854 14c0 E149     		ldr	r1, .L372
 8855 14c2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8856 14c4 1A70     		strb	r2, [r3]
1182:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8857              		.loc 1 1182 0 discriminator 3
 8858 14c6 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8859 14ca 0133     		adds	r3, r3, #1
 8860 14cc 87F87F35 		strb	r3, [r7, #1407]
 8861              	.L333:
1182:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8862              		.loc 1 1182 0 is_stmt 0 discriminator 1
 8863 14d0 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8864 14d4 07F55C72 		add	r2, r7, #880
 8865 14d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8866 14da 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8867 14de 9A42     		cmp	r2, r3
 8868 14e0 DED3     		bcc	.L334
1185:..\src/command_processing.c ****                 break; 
 8869              		.loc 1 1185 0 is_stmt 1
 8870 14e2 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 8871 14e6 07F58363 		add	r3, r7, #1048
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 207


 8872 14ea 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8873 14ee 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8874 14f2 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8875 14f6 01FB02F2 		mul	r2, r1, r2
 8876 14fa 1344     		add	r3, r3, r2
 8877 14fc 0022     		movs	r2, #0
 8878 14fe 1A70     		strb	r2, [r3]
1186:..\src/command_processing.c ****                 case TYPE_INT8:
 8879              		.loc 1 1186 0
 8880 1500 A5E1     		b	.L357
 8881              	.L323:
1188:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8882              		.loc 1 1188 0
 8883 1502 0023     		movs	r3, #0
 8884 1504 87F87F35 		strb	r3, [r7, #1407]
 8885 1508 1AE0     		b	.L335
 8886              	.L336:
1189:..\src/command_processing.c ****                     }
 8887              		.loc 1 1189 0 discriminator 3
 8888 150a 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 8889 150e 07F58363 		add	r3, r7, #1048
 8890 1512 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8891 1516 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8892 151a 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8893 151e 01FB02F2 		mul	r2, r1, r2
 8894 1522 1344     		add	r3, r3, r2
 8895 1524 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8896 1528 0332     		adds	r2, r2, #3
 8897 152a C749     		ldr	r1, .L372
 8898 152c 0A44     		add	r2, r2, r1
 8899 152e 92F90020 		ldrsb	r2, [r2]
 8900 1532 D2B2     		uxtb	r2, r2
 8901 1534 1A70     		strb	r2, [r3]
1188:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8902              		.loc 1 1188 0 discriminator 3
 8903 1536 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8904 153a 0133     		adds	r3, r3, #1
 8905 153c 87F87F35 		strb	r3, [r7, #1407]
 8906              	.L335:
1188:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8907              		.loc 1 1188 0 is_stmt 0 discriminator 1
 8908 1540 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8909 1544 07F55C72 		add	r2, r7, #880
 8910 1548 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8911 154a 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8912 154e 9A42     		cmp	r2, r3
 8913 1550 DBD3     		bcc	.L336
1191:..\src/command_processing.c ****                 case TYPE_INT16:
 8914              		.loc 1 1191 0 is_stmt 1
 8915 1552 7CE1     		b	.L357
 8916              	.L324:
1193:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8917              		.loc 1 1193 0
 8918 1554 0023     		movs	r3, #0
 8919 1556 87F87F35 		strb	r3, [r7, #1407]
 8920 155a 3CE0     		b	.L337
 8921              	.L340:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 208


1194:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8922              		.loc 1 1194 0
 8923 155c 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8924 1560 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8925 1564 02FB03F3 		mul	r3, r2, r3
 8926 1568 0333     		adds	r3, r3, #3
 8927 156a B74A     		ldr	r2, .L372
 8928 156c 1344     		add	r3, r3, r2
 8929 156e B3F90030 		ldrsh	r3, [r3]
 8930 1572 A7F87035 		strh	r3, [r7, #1392]	@ movhi
1195:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8931              		.loc 1 1195 0
 8932 1576 0023     		movs	r3, #0
 8933 1578 87F87E35 		strb	r3, [r7, #1406]
 8934 157c 20E0     		b	.L338
 8935              	.L339:
1196:..\src/command_processing.c ****                         }
 8936              		.loc 1 1196 0 discriminator 3
 8937 157e 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 8938 1582 07F58363 		add	r3, r7, #1048
 8939 1586 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8940 158a 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8941 158e 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8942 1592 01FB03F3 		mul	r3, r1, r3
 8943 1596 1846     		mov	r0, r3
 8944 1598 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8945 159c 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8946 15a0 CB1A     		subs	r3, r1, r3
 8947 15a2 0344     		add	r3, r3, r0
 8948 15a4 013B     		subs	r3, r3, #1
 8949 15a6 1344     		add	r3, r3, r2
 8950 15a8 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 8951 15ac 07F5AE61 		add	r1, r7, #1392
 8952 15b0 0A44     		add	r2, r2, r1
 8953 15b2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8954 15b4 1A70     		strb	r2, [r3]
1195:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8955              		.loc 1 1195 0 discriminator 3
 8956 15b6 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8957 15ba 0133     		adds	r3, r3, #1
 8958 15bc 87F87E35 		strb	r3, [r7, #1406]
 8959              	.L338:
1195:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8960              		.loc 1 1195 0 is_stmt 0 discriminator 1
 8961 15c0 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 8962 15c4 97F87D35 		ldrb	r3, [r7, #1405]	@ zero_extendqisi2
 8963 15c8 9A42     		cmp	r2, r3
 8964 15ca D8D3     		bcc	.L339
1193:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8965              		.loc 1 1193 0 is_stmt 1 discriminator 2
 8966 15cc 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8967 15d0 0133     		adds	r3, r3, #1
 8968 15d2 87F87F35 		strb	r3, [r7, #1407]
 8969              	.L337:
1193:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8970              		.loc 1 1193 0 is_stmt 0 discriminator 1
 8971 15d6 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 209


 8972 15da 07F55C72 		add	r2, r7, #880
 8973 15de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8974 15e0 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8975 15e4 9A42     		cmp	r2, r3
 8976 15e6 B9D3     		bcc	.L340
1199:..\src/command_processing.c ****                 case TYPE_UINT16:
 8977              		.loc 1 1199 0 is_stmt 1
 8978 15e8 31E1     		b	.L357
 8979              	.L325:
1201:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8980              		.loc 1 1201 0
 8981 15ea 0023     		movs	r3, #0
 8982 15ec 87F87F35 		strb	r3, [r7, #1407]
 8983 15f0 3BE0     		b	.L341
 8984              	.L344:
1202:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8985              		.loc 1 1202 0
 8986 15f2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8987 15f6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8988 15fa 02FB03F3 		mul	r3, r2, r3
 8989 15fe 0333     		adds	r3, r3, #3
 8990 1600 914A     		ldr	r2, .L372
 8991 1602 1344     		add	r3, r3, r2
 8992 1604 1B88     		ldrh	r3, [r3]
 8993 1606 A7F86E35 		strh	r3, [r7, #1390]	@ movhi
1203:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8994              		.loc 1 1203 0
 8995 160a 0023     		movs	r3, #0
 8996 160c 87F87E35 		strb	r3, [r7, #1406]
 8997 1610 20E0     		b	.L342
 8998              	.L343:
1204:..\src/command_processing.c ****                         }
 8999              		.loc 1 1204 0 discriminator 3
 9000 1612 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 9001 1616 07F58363 		add	r3, r7, #1048
 9002 161a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9003 161e 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9004 1622 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9005 1626 01FB03F3 		mul	r3, r1, r3
 9006 162a 1846     		mov	r0, r3
 9007 162c 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9008 1630 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9009 1634 CB1A     		subs	r3, r1, r3
 9010 1636 0344     		add	r3, r3, r0
 9011 1638 013B     		subs	r3, r3, #1
 9012 163a 1344     		add	r3, r3, r2
 9013 163c 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9014 1640 07F26E51 		addw	r1, r7, #1390
 9015 1644 0A44     		add	r2, r2, r1
 9016 1646 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9017 1648 1A70     		strb	r2, [r3]
1203:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9018              		.loc 1 1203 0 discriminator 3
 9019 164a 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9020 164e 0133     		adds	r3, r3, #1
 9021 1650 87F87E35 		strb	r3, [r7, #1406]
 9022              	.L342:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 210


1203:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9023              		.loc 1 1203 0 is_stmt 0 discriminator 1
 9024 1654 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9025 1658 97F87D35 		ldrb	r3, [r7, #1405]	@ zero_extendqisi2
 9026 165c 9A42     		cmp	r2, r3
 9027 165e D8D3     		bcc	.L343
1201:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9028              		.loc 1 1201 0 is_stmt 1 discriminator 2
 9029 1660 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9030 1664 0133     		adds	r3, r3, #1
 9031 1666 87F87F35 		strb	r3, [r7, #1407]
 9032              	.L341:
1201:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9033              		.loc 1 1201 0 is_stmt 0 discriminator 1
 9034 166a 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9035 166e 07F55C72 		add	r2, r7, #880
 9036 1672 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9037 1674 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9038 1678 9A42     		cmp	r2, r3
 9039 167a BAD3     		bcc	.L344
1207:..\src/command_processing.c ****                 case TYPE_INT32:
 9040              		.loc 1 1207 0 is_stmt 1
 9041 167c E7E0     		b	.L357
 9042              	.L326:
1209:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9043              		.loc 1 1209 0
 9044 167e 0023     		movs	r3, #0
 9045 1680 87F87F35 		strb	r3, [r7, #1407]
 9046 1684 3BE0     		b	.L345
 9047              	.L348:
1210:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9048              		.loc 1 1210 0
 9049 1686 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9050 168a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 9051 168e 02FB03F3 		mul	r3, r2, r3
 9052 1692 0333     		adds	r3, r3, #3
 9053 1694 6C4A     		ldr	r2, .L372
 9054 1696 1344     		add	r3, r3, r2
 9055 1698 1B68     		ldr	r3, [r3]
 9056 169a C7F86835 		str	r3, [r7, #1384]
1211:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9057              		.loc 1 1211 0
 9058 169e 0023     		movs	r3, #0
 9059 16a0 87F87E35 		strb	r3, [r7, #1406]
 9060 16a4 20E0     		b	.L346
 9061              	.L347:
1212:..\src/command_processing.c ****                         }
 9062              		.loc 1 1212 0 discriminator 3
 9063 16a6 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 9064 16aa 07F58363 		add	r3, r7, #1048
 9065 16ae 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9066 16b2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9067 16b6 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9068 16ba 01FB03F3 		mul	r3, r1, r3
 9069 16be 1846     		mov	r0, r3
 9070 16c0 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9071 16c4 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 211


 9072 16c8 CB1A     		subs	r3, r1, r3
 9073 16ca 0344     		add	r3, r3, r0
 9074 16cc 013B     		subs	r3, r3, #1
 9075 16ce 1344     		add	r3, r3, r2
 9076 16d0 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9077 16d4 07F5AD61 		add	r1, r7, #1384
 9078 16d8 0A44     		add	r2, r2, r1
 9079 16da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9080 16dc 1A70     		strb	r2, [r3]
1211:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9081              		.loc 1 1211 0 discriminator 3
 9082 16de 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9083 16e2 0133     		adds	r3, r3, #1
 9084 16e4 87F87E35 		strb	r3, [r7, #1406]
 9085              	.L346:
1211:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9086              		.loc 1 1211 0 is_stmt 0 discriminator 1
 9087 16e8 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9088 16ec 97F87D35 		ldrb	r3, [r7, #1405]	@ zero_extendqisi2
 9089 16f0 9A42     		cmp	r2, r3
 9090 16f2 D8D3     		bcc	.L347
1209:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9091              		.loc 1 1209 0 is_stmt 1 discriminator 2
 9092 16f4 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9093 16f8 0133     		adds	r3, r3, #1
 9094 16fa 87F87F35 		strb	r3, [r7, #1407]
 9095              	.L345:
1209:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9096              		.loc 1 1209 0 is_stmt 0 discriminator 1
 9097 16fe 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9098 1702 07F55C72 		add	r2, r7, #880
 9099 1706 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9100 1708 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9101 170c 9A42     		cmp	r2, r3
 9102 170e BAD3     		bcc	.L348
1215:..\src/command_processing.c ****                 case TYPE_UINT32:
 9103              		.loc 1 1215 0 is_stmt 1
 9104 1710 9DE0     		b	.L357
 9105              	.L327:
1217:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9106              		.loc 1 1217 0
 9107 1712 0023     		movs	r3, #0
 9108 1714 87F87F35 		strb	r3, [r7, #1407]
 9109 1718 3BE0     		b	.L349
 9110              	.L352:
1218:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9111              		.loc 1 1218 0
 9112 171a 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9113 171e 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 9114 1722 02FB03F3 		mul	r3, r2, r3
 9115 1726 0333     		adds	r3, r3, #3
 9116 1728 474A     		ldr	r2, .L372
 9117 172a 1344     		add	r3, r3, r2
 9118 172c 1B68     		ldr	r3, [r3]
 9119 172e C7F86435 		str	r3, [r7, #1380]
1219:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9120              		.loc 1 1219 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 212


 9121 1732 0023     		movs	r3, #0
 9122 1734 87F87E35 		strb	r3, [r7, #1406]
 9123 1738 20E0     		b	.L350
 9124              	.L351:
1220:..\src/command_processing.c ****                         }
 9125              		.loc 1 1220 0 discriminator 3
 9126 173a 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 9127 173e 07F58363 		add	r3, r7, #1048
 9128 1742 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9129 1746 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9130 174a 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9131 174e 01FB03F3 		mul	r3, r1, r3
 9132 1752 1846     		mov	r0, r3
 9133 1754 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9134 1758 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9135 175c CB1A     		subs	r3, r1, r3
 9136 175e 0344     		add	r3, r3, r0
 9137 1760 013B     		subs	r3, r3, #1
 9138 1762 1344     		add	r3, r3, r2
 9139 1764 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9140 1768 07F26451 		addw	r1, r7, #1380
 9141 176c 0A44     		add	r2, r2, r1
 9142 176e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9143 1770 1A70     		strb	r2, [r3]
1219:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9144              		.loc 1 1219 0 discriminator 3
 9145 1772 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9146 1776 0133     		adds	r3, r3, #1
 9147 1778 87F87E35 		strb	r3, [r7, #1406]
 9148              	.L350:
1219:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9149              		.loc 1 1219 0 is_stmt 0 discriminator 1
 9150 177c 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9151 1780 97F87D35 		ldrb	r3, [r7, #1405]	@ zero_extendqisi2
 9152 1784 9A42     		cmp	r2, r3
 9153 1786 D8D3     		bcc	.L351
1217:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9154              		.loc 1 1217 0 is_stmt 1 discriminator 2
 9155 1788 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9156 178c 0133     		adds	r3, r3, #1
 9157 178e 87F87F35 		strb	r3, [r7, #1407]
 9158              	.L349:
1217:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9159              		.loc 1 1217 0 is_stmt 0 discriminator 1
 9160 1792 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9161 1796 07F55C72 		add	r2, r7, #880
 9162 179a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9163 179c 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9164 17a0 9A42     		cmp	r2, r3
 9165 17a2 BAD3     		bcc	.L352
1223:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9166              		.loc 1 1223 0 is_stmt 1
 9167 17a4 53E0     		b	.L357
 9168              	.L328:
1225:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9169              		.loc 1 1225 0
 9170 17a6 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 213


 9171 17a8 87F87F35 		strb	r3, [r7, #1407]
 9172 17ac 3BE0     		b	.L353
 9173              	.L356:
1226:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9174              		.loc 1 1226 0
 9175 17ae 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9176 17b2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 9177 17b6 02FB03F3 		mul	r3, r2, r3
 9178 17ba 0333     		adds	r3, r3, #3
 9179 17bc 224A     		ldr	r2, .L372
 9180 17be 1344     		add	r3, r3, r2
 9181 17c0 1B68     		ldr	r3, [r3]	@ float
 9182 17c2 C7F86035 		str	r3, [r7, #1376]	@ float
1227:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9183              		.loc 1 1227 0
 9184 17c6 0023     		movs	r3, #0
 9185 17c8 87F87E35 		strb	r3, [r7, #1406]
 9186 17cc 20E0     		b	.L354
 9187              	.L355:
1228:..\src/command_processing.c ****                         }
 9188              		.loc 1 1228 0 discriminator 3
 9189 17ce 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 9190 17d2 07F58363 		add	r3, r7, #1048
 9191 17d6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9192 17da 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9193 17de 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9194 17e2 01FB03F3 		mul	r3, r1, r3
 9195 17e6 1846     		mov	r0, r3
 9196 17e8 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9197 17ec 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9198 17f0 CB1A     		subs	r3, r1, r3
 9199 17f2 0344     		add	r3, r3, r0
 9200 17f4 013B     		subs	r3, r3, #1
 9201 17f6 1344     		add	r3, r3, r2
 9202 17f8 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9203 17fc 07F5AC61 		add	r1, r7, #1376
 9204 1800 0A44     		add	r2, r2, r1
 9205 1802 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9206 1804 1A70     		strb	r2, [r3]
1227:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9207              		.loc 1 1227 0 discriminator 3
 9208 1806 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9209 180a 0133     		adds	r3, r3, #1
 9210 180c 87F87E35 		strb	r3, [r7, #1406]
 9211              	.L354:
1227:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9212              		.loc 1 1227 0 is_stmt 0 discriminator 1
 9213 1810 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9214 1814 97F87D35 		ldrb	r3, [r7, #1405]	@ zero_extendqisi2
 9215 1818 9A42     		cmp	r2, r3
 9216 181a D8D3     		bcc	.L355
1225:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9217              		.loc 1 1225 0 is_stmt 1 discriminator 2
 9218 181c 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9219 1820 0133     		adds	r3, r3, #1
 9220 1822 87F87F35 		strb	r3, [r7, #1407]
 9221              	.L353:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 214


1225:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9222              		.loc 1 1225 0 is_stmt 0 discriminator 1
 9223 1826 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9224 182a 07F55C72 		add	r2, r7, #880
 9225 182e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9226 1830 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9227 1834 9A42     		cmp	r2, r3
 9228 1836 BAD3     		bcc	.L356
1231:..\src/command_processing.c ****                 default:
 9229              		.loc 1 1231 0 is_stmt 1
 9230 1838 09E0     		b	.L357
 9231              	.L319:
1238:..\src/command_processing.c ****         }
 9232              		.loc 1 1238 0
 9233 183a BB1D     		adds	r3, r7, #6
 9234 183c 1B88     		ldrh	r3, [r3]
 9235 183e 1846     		mov	r0, r3
 9236 1840 FFF7FEFF 		bl	set_custom_param
 9237 1844 03E0     		b	.L357
 9238              	.L373:
 9239 1846 00BF     		.align	2
 9240              	.L372:
 9241 1848 00000000 		.word	g_rx
 9242              	.L362:
1233:..\src/command_processing.c ****             }
 9243              		.loc 1 1233 0
 9244 184c 00BF     		nop
 9245              	.L357:
1242:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9246              		.loc 1 1242 0
 9247 184e 97F87335 		ldrb	r3, [r7, #1395]	@ zero_extendqisi2
 9248 1852 9BB2     		uxth	r3, r3
 9249 1854 BA1D     		adds	r2, r7, #6
 9250 1856 1288     		ldrh	r2, [r2]
 9251 1858 9A42     		cmp	r2, r3
 9252 185a 11D0     		beq	.L358
1243:..\src/command_processing.c ****         }
 9253              		.loc 1 1243 0
 9254 185c D7F87835 		ldr	r3, [r7, #1400]
 9255 1860 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9256 1864 5B01     		lsls	r3, r3, #5
 9257 1866 03F51273 		add	r3, r3, #584
 9258 186a D7F87825 		ldr	r2, [r7, #1400]
 9259 186e D018     		adds	r0, r2, r3
 9260 1870 D7F87835 		ldr	r3, [r7, #1400]
 9261 1874 03F5F873 		add	r3, r3, #496
 9262 1878 1022     		movs	r2, #16
 9263 187a 1946     		mov	r1, r3
 9264 187c FFF7FEFF 		bl	memcpy
 9265              	.L358:
1247:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9266              		.loc 1 1247 0
 9267 1880 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9268 1884 07F57172 		add	r2, r7, #964
 9269 1888 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9270 188a 002B     		cmp	r3, #0
 9271 188c 42D1     		bne	.L363
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 215


 9272              	.LBB14:
1248:..\src/command_processing.c ****             do {
 9273              		.loc 1 1248 0
 9274 188e 0023     		movs	r3, #0
 9275 1890 87F87735 		strb	r3, [r7, #1399]
 9276 1894 FF23     		movs	r3, #255
 9277 1896 87F87635 		strb	r3, [r7, #1398]
 9278              	.L360:
1250:..\src/command_processing.c ****                 idx++;
 9279              		.loc 1 1250 0
 9280 189a 97F87735 		ldrb	r3, [r7, #1399]	@ zero_extendqisi2
 9281 189e 07F57172 		add	r2, r7, #964
 9282 18a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9283 18a4 002B     		cmp	r3, #0
 9284 18a6 04D1     		bne	.L359
1250:..\src/command_processing.c ****                 idx++;
 9285              		.loc 1 1250 0 is_stmt 0 discriminator 1
 9286 18a8 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9287 18ac 0133     		adds	r3, r3, #1
 9288 18ae 87F87635 		strb	r3, [r7, #1398]
 9289              	.L359:
1251:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9290              		.loc 1 1251 0 is_stmt 1
 9291 18b2 97F87735 		ldrb	r3, [r7, #1399]	@ zero_extendqisi2
 9292 18b6 0133     		adds	r3, r3, #1
 9293 18b8 87F87735 		strb	r3, [r7, #1399]
1252:..\src/command_processing.c ****             
 9294              		.loc 1 1252 0
 9295 18bc 97F87725 		ldrb	r2, [r7, #1399]	@ zero_extendqisi2
 9296 18c0 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9297 18c4 9A42     		cmp	r2, r3
 9298 18c6 E8D9     		bls	.L360
1254:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9299              		.loc 1 1254 0
 9300 18c8 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9301 18cc 07F1D402 		add	r2, r7, #212
 9302 18d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9303 18d2 052B     		cmp	r3, #5
 9304 18d4 1BD0     		beq	.L361
1254:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9305              		.loc 1 1254 0 is_stmt 0 discriminator 1
 9306 18d6 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9307 18da 07F1D402 		add	r2, r7, #212
 9308 18de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9309 18e0 062B     		cmp	r3, #6
 9310 18e2 14D0     		beq	.L361
1254:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9311              		.loc 1 1254 0 discriminator 2
 9312 18e4 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9313 18e8 07F1D402 		add	r2, r7, #212
 9314 18ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9315 18ee 082B     		cmp	r3, #8
 9316 18f0 0DD0     		beq	.L361
1254:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9317              		.loc 1 1254 0 discriminator 3
 9318 18f2 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9319 18f6 07F1D402 		add	r2, r7, #212
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 216


 9320 18fa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9321 18fc 092B     		cmp	r3, #9
 9322 18fe 06D0     		beq	.L361
1254:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9323              		.loc 1 1254 0 discriminator 4
 9324 1900 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9325 1904 07F1D402 		add	r2, r7, #212
 9326 1908 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9327 190a 0A2B     		cmp	r3, #10
 9328 190c 02D1     		bne	.L363
 9329              	.L361:
1255:..\src/command_processing.c ****             }   
 9330              		.loc 1 1255 0 is_stmt 1
 9331 190e 044B     		ldr	r3, .L374
 9332 1910 0122     		movs	r2, #1
 9333 1912 1A70     		strb	r2, [r3]
 9334              	.L363:
 9335              	.LBE14:
 9336              		.loc 1 1259 0
 9337 1914 00BF     		nop
 9338 1916 07F5B067 		add	r7, r7, #1408
 9339              		.cfi_def_cfa_offset 16
 9340 191a BD46     		mov	sp, r7
 9341              		.cfi_def_cfa_register 13
 9342              		@ sp needed
 9343 191c B0BD     		pop	{r4, r5, r7, pc}
 9344              	.L375:
 9345 191e 00BF     		.align	2
 9346              	.L374:
 9347 1920 00000000 		.word	reset_PSoC_flag
 9348              		.cfi_endproc
 9349              	.LFE68:
 9350              		.size	manage_param_list, .-manage_param_list
 9351              		.global	__aeabi_fmul
 9352              		.global	__aeabi_f2iz
 9353              		.section	.text.set_custom_param,"ax",%progbits
 9354              		.align	2
 9355              		.global	set_custom_param
 9356              		.thumb
 9357              		.thumb_func
 9358              		.type	set_custom_param, %function
 9359              	set_custom_param:
 9360              	.LFB69:
1260:..\src/command_processing.c **** 
1261:..\src/command_processing.c **** //==============================================================================
1262:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1263:..\src/command_processing.c **** //==============================================================================
1264:..\src/command_processing.c **** 
1265:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9361              		.loc 1 1265 0
 9362              		.cfi_startproc
 9363              		@ args = 0, pretend = 0, frame = 24
 9364              		@ frame_needed = 1, uses_anonymous_args = 0
 9365 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9366              		.cfi_def_cfa_offset 20
 9367              		.cfi_offset 4, -20
 9368              		.cfi_offset 5, -16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 217


 9369              		.cfi_offset 6, -12
 9370              		.cfi_offset 7, -8
 9371              		.cfi_offset 14, -4
 9372 0002 87B0     		sub	sp, sp, #28
 9373              		.cfi_def_cfa_offset 48
 9374 0004 00AF     		add	r7, sp, #0
 9375              		.cfi_def_cfa_register 7
 9376 0006 0346     		mov	r3, r0
 9377 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1266:..\src/command_processing.c **** 
1267:..\src/command_processing.c ****     uint8 CYDATA i, j;
1268:..\src/command_processing.c ****     uint8 aux_uchar;
1269:..\src/command_processing.c ****     float aux_float, aux_float2;
1270:..\src/command_processing.c **** 
1271:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9378              		.loc 1 1271 0
 9379 000a 0023     		movs	r3, #0
 9380 000c 3B75     		strb	r3, [r7, #20]
1272:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9381              		.loc 1 1272 0
 9382 000e 0123     		movs	r3, #1
 9383 0010 FB74     		strb	r3, [r7, #19]
1273:..\src/command_processing.c ****     
1274:..\src/command_processing.c ****     switch(index){
 9384              		.loc 1 1274 0
 9385 0012 FB88     		ldrh	r3, [r7, #6]
 9386 0014 023B     		subs	r3, r3, #2
 9387 0016 482B     		cmp	r3, #72
 9388 0018 01F22482 		bhi	.L469
 9389 001c 01A2     		adr	r2, .L379
 9390 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9391 0022 00BF     		.p2align 2
 9392              	.L379:
 9393 0024 49010000 		.word	.L378+1
 9394 0028 7B030000 		.word	.L380+1
 9395 002c 65140000 		.word	.L469+1
 9396 0030 C1050000 		.word	.L381+1
 9397 0034 65140000 		.word	.L469+1
 9398 0038 65140000 		.word	.L469+1
 9399 003c 0B060000 		.word	.L382+1
 9400 0040 65140000 		.word	.L469+1
 9401 0044 65140000 		.word	.L469+1
 9402 0048 41070000 		.word	.L383+1
 9403 004c 65140000 		.word	.L469+1
 9404 0050 65140000 		.word	.L469+1
 9405 0054 65140000 		.word	.L469+1
 9406 0058 65140000 		.word	.L469+1
 9407 005c 65140000 		.word	.L469+1
 9408 0060 65140000 		.word	.L469+1
 9409 0064 65140000 		.word	.L469+1
 9410 0068 65140000 		.word	.L469+1
 9411 006c 65140000 		.word	.L469+1
 9412 0070 65140000 		.word	.L469+1
 9413 0074 65140000 		.word	.L469+1
 9414 0078 41080000 		.word	.L384+1
 9415 007c 9F080000 		.word	.L385+1
 9416 0080 65140000 		.word	.L469+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 218


 9417 0084 65140000 		.word	.L469+1
 9418 0088 65140000 		.word	.L469+1
 9419 008c D9080000 		.word	.L386+1
 9420 0090 65140000 		.word	.L469+1
 9421 0094 65140000 		.word	.L469+1
 9422 0098 550A0000 		.word	.L387+1
 9423 009c 010B0000 		.word	.L388+1
 9424 00a0 65140000 		.word	.L469+1
 9425 00a4 65140000 		.word	.L469+1
 9426 00a8 65140000 		.word	.L469+1
 9427 00ac 65140000 		.word	.L469+1
 9428 00b0 65140000 		.word	.L469+1
 9429 00b4 3B0B0000 		.word	.L389+1
 9430 00b8 65140000 		.word	.L469+1
 9431 00bc 65140000 		.word	.L469+1
 9432 00c0 65140000 		.word	.L469+1
 9433 00c4 65140000 		.word	.L469+1
 9434 00c8 65140000 		.word	.L469+1
 9435 00cc 750B0000 		.word	.L390+1
 9436 00d0 BB0D0000 		.word	.L391+1
 9437 00d4 65140000 		.word	.L469+1
 9438 00d8 E90F0000 		.word	.L392+1
 9439 00dc 65140000 		.word	.L469+1
 9440 00e0 65140000 		.word	.L469+1
 9441 00e4 51100000 		.word	.L393+1
 9442 00e8 65140000 		.word	.L469+1
 9443 00ec 65140000 		.word	.L469+1
 9444 00f0 65110000 		.word	.L394+1
 9445 00f4 65140000 		.word	.L469+1
 9446 00f8 65140000 		.word	.L469+1
 9447 00fc 65140000 		.word	.L469+1
 9448 0100 65140000 		.word	.L469+1
 9449 0104 65140000 		.word	.L469+1
 9450 0108 65140000 		.word	.L469+1
 9451 010c 65140000 		.word	.L469+1
 9452 0110 63120000 		.word	.L395+1
 9453 0114 65140000 		.word	.L469+1
 9454 0118 65140000 		.word	.L469+1
 9455 011c 65140000 		.word	.L469+1
 9456 0120 65140000 		.word	.L469+1
 9457 0124 65140000 		.word	.L469+1
 9458 0128 65140000 		.word	.L469+1
 9459 012c 65140000 		.word	.L469+1
 9460 0130 65140000 		.word	.L469+1
 9461 0134 65140000 		.word	.L469+1
 9462 0138 65140000 		.word	.L469+1
 9463 013c 65140000 		.word	.L469+1
 9464 0140 65140000 		.word	.L469+1
 9465 0144 AD120000 		.word	.L396+1
 9466              		.p2align 1
 9467              	.L378:
1275:..\src/command_processing.c ****         case 2:         // Position PID
1276:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9468              		.loc 1 1276 0
 9469 0148 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9470 014a AB49     		ldr	r1, .L475
 9471 014c 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 219


 9472 014e DB00     		lsls	r3, r3, #3
 9473 0150 9B1A     		subs	r3, r3, r2
 9474 0152 1B01     		lsls	r3, r3, #4
 9475 0154 0B44     		add	r3, r3, r1
 9476 0156 03F20F13 		addw	r3, r3, #271
 9477 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9478 015c 032B     		cmp	r3, #3
 9479 015e 00F08680 		beq	.L397
1277:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9480              		.loc 1 1277 0
 9481 0162 A64B     		ldr	r3, .L475+4
 9482 0164 1B68     		ldr	r3, [r3]	@ float
 9483 0166 FB60     		str	r3, [r7, #12]	@ float
1278:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9484              		.loc 1 1278 0
 9485 0168 0023     		movs	r3, #0
 9486 016a BB75     		strb	r3, [r7, #22]
 9487 016c 0EE0     		b	.L398
 9488              	.L399:
1279:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9489              		.loc 1 1279 0 discriminator 3
 9490 016e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9491 0170 C3F10303 		rsb	r3, r3, #3
 9492 0174 07F10802 		add	r2, r7, #8
 9493 0178 1344     		add	r3, r3, r2
 9494 017a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9495 017c 07F10C01 		add	r1, r7, #12
 9496 0180 0A44     		add	r2, r2, r1
 9497 0182 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9498 0184 1A70     		strb	r2, [r3]
1278:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9499              		.loc 1 1278 0 discriminator 3
 9500 0186 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9501 0188 0133     		adds	r3, r3, #1
 9502 018a BB75     		strb	r3, [r7, #22]
 9503              	.L398:
1278:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9504              		.loc 1 1278 0 is_stmt 0 discriminator 1
 9505 018c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9506 018e 032B     		cmp	r3, #3
 9507 0190 EDD9     		bls	.L399
1280:..\src/command_processing.c ****                 }
1281:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9508              		.loc 1 1281 0 is_stmt 1
 9509 0192 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9510 0194 BB68     		ldr	r3, [r7, #8]	@ float
 9511 0196 4FF08F41 		mov	r1, #1199570944
 9512 019a 1846     		mov	r0, r3
 9513 019c FFF7FEFF 		bl	__aeabi_fmul
 9514 01a0 0346     		mov	r3, r0
 9515 01a2 1846     		mov	r0, r3
 9516 01a4 FFF7FEFF 		bl	__aeabi_f2iz
 9517 01a8 0146     		mov	r1, r0
 9518 01aa 954A     		ldr	r2, .L475+8
 9519 01ac 2346     		mov	r3, r4
 9520 01ae DB00     		lsls	r3, r3, #3
 9521 01b0 1B1B     		subs	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 220


 9522 01b2 1B01     		lsls	r3, r3, #4
 9523 01b4 1344     		add	r3, r3, r2
 9524 01b6 B033     		adds	r3, r3, #176
 9525 01b8 1960     		str	r1, [r3]
1282:..\src/command_processing.c ****                 
1283:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9526              		.loc 1 1283 0
 9527 01ba 924B     		ldr	r3, .L475+12
 9528 01bc 1B68     		ldr	r3, [r3]	@ float
 9529 01be FB60     		str	r3, [r7, #12]	@ float
1284:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9530              		.loc 1 1284 0
 9531 01c0 0023     		movs	r3, #0
 9532 01c2 BB75     		strb	r3, [r7, #22]
 9533 01c4 0EE0     		b	.L400
 9534              	.L401:
1285:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9535              		.loc 1 1285 0 discriminator 3
 9536 01c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9537 01c8 C3F10303 		rsb	r3, r3, #3
 9538 01cc 07F10802 		add	r2, r7, #8
 9539 01d0 1344     		add	r3, r3, r2
 9540 01d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9541 01d4 07F10C01 		add	r1, r7, #12
 9542 01d8 0A44     		add	r2, r2, r1
 9543 01da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9544 01dc 1A70     		strb	r2, [r3]
1284:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9545              		.loc 1 1284 0 discriminator 3
 9546 01de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9547 01e0 0133     		adds	r3, r3, #1
 9548 01e2 BB75     		strb	r3, [r7, #22]
 9549              	.L400:
1284:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9550              		.loc 1 1284 0 is_stmt 0 discriminator 1
 9551 01e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9552 01e6 032B     		cmp	r3, #3
 9553 01e8 EDD9     		bls	.L401
1286:..\src/command_processing.c ****                 }
1287:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9554              		.loc 1 1287 0 is_stmt 1
 9555 01ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9556 01ec BB68     		ldr	r3, [r7, #8]	@ float
 9557 01ee 4FF08F41 		mov	r1, #1199570944
 9558 01f2 1846     		mov	r0, r3
 9559 01f4 FFF7FEFF 		bl	__aeabi_fmul
 9560 01f8 0346     		mov	r3, r0
 9561 01fa 1846     		mov	r0, r3
 9562 01fc FFF7FEFF 		bl	__aeabi_f2iz
 9563 0200 0146     		mov	r1, r0
 9564 0202 7F4A     		ldr	r2, .L475+8
 9565 0204 2346     		mov	r3, r4
 9566 0206 DB00     		lsls	r3, r3, #3
 9567 0208 1B1B     		subs	r3, r3, r4
 9568 020a 1B01     		lsls	r3, r3, #4
 9569 020c 1344     		add	r3, r3, r2
 9570 020e B433     		adds	r3, r3, #180
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 221


 9571 0210 1960     		str	r1, [r3]
1288:..\src/command_processing.c ****                 
1289:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9572              		.loc 1 1289 0
 9573 0212 7D4B     		ldr	r3, .L475+16
 9574 0214 1B68     		ldr	r3, [r3]	@ float
 9575 0216 FB60     		str	r3, [r7, #12]	@ float
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9576              		.loc 1 1290 0
 9577 0218 0023     		movs	r3, #0
 9578 021a BB75     		strb	r3, [r7, #22]
 9579 021c 0EE0     		b	.L402
 9580              	.L403:
1291:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9581              		.loc 1 1291 0 discriminator 3
 9582 021e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9583 0220 C3F10303 		rsb	r3, r3, #3
 9584 0224 07F10802 		add	r2, r7, #8
 9585 0228 1344     		add	r3, r3, r2
 9586 022a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9587 022c 07F10C01 		add	r1, r7, #12
 9588 0230 0A44     		add	r2, r2, r1
 9589 0232 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9590 0234 1A70     		strb	r2, [r3]
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9591              		.loc 1 1290 0 discriminator 3
 9592 0236 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9593 0238 0133     		adds	r3, r3, #1
 9594 023a BB75     		strb	r3, [r7, #22]
 9595              	.L402:
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9596              		.loc 1 1290 0 is_stmt 0 discriminator 1
 9597 023c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9598 023e 032B     		cmp	r3, #3
 9599 0240 EDD9     		bls	.L403
1292:..\src/command_processing.c ****                 }
1293:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9600              		.loc 1 1293 0 is_stmt 1
 9601 0242 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9602 0244 BB68     		ldr	r3, [r7, #8]	@ float
 9603 0246 4FF08F41 		mov	r1, #1199570944
 9604 024a 1846     		mov	r0, r3
 9605 024c FFF7FEFF 		bl	__aeabi_fmul
 9606 0250 0346     		mov	r3, r0
 9607 0252 1846     		mov	r0, r3
 9608 0254 FFF7FEFF 		bl	__aeabi_f2iz
 9609 0258 0146     		mov	r1, r0
 9610 025a 694A     		ldr	r2, .L475+8
 9611 025c 2346     		mov	r3, r4
 9612 025e DB00     		lsls	r3, r3, #3
 9613 0260 1B1B     		subs	r3, r3, r4
 9614 0262 1B01     		lsls	r3, r3, #4
 9615 0264 1344     		add	r3, r3, r2
 9616 0266 B833     		adds	r3, r3, #184
 9617 0268 1960     		str	r1, [r3]
1294:..\src/command_processing.c ****             }
1295:..\src/command_processing.c ****             else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 222


1296:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1297:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1298:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1299:..\src/command_processing.c ****                 }
1300:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1301:..\src/command_processing.c ****                 
1302:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1303:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1304:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1305:..\src/command_processing.c ****                 }
1306:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1307:..\src/command_processing.c ****                 
1308:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1309:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1310:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1311:..\src/command_processing.c ****                 }
1312:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1313:..\src/command_processing.c ****             }
1314:..\src/command_processing.c ****             break;
 9618              		.loc 1 1314 0
 9619 026a 01F006B9 		b	.L411
 9620              	.L397:
1296:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9621              		.loc 1 1296 0
 9622 026e 634B     		ldr	r3, .L475+4
 9623 0270 1B68     		ldr	r3, [r3]	@ float
 9624 0272 FB60     		str	r3, [r7, #12]	@ float
1297:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9625              		.loc 1 1297 0
 9626 0274 0023     		movs	r3, #0
 9627 0276 BB75     		strb	r3, [r7, #22]
 9628 0278 0EE0     		b	.L405
 9629              	.L406:
1298:..\src/command_processing.c ****                 }
 9630              		.loc 1 1298 0 discriminator 3
 9631 027a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9632 027c C3F10303 		rsb	r3, r3, #3
 9633 0280 07F10802 		add	r2, r7, #8
 9634 0284 1344     		add	r3, r3, r2
 9635 0286 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9636 0288 07F10C01 		add	r1, r7, #12
 9637 028c 0A44     		add	r2, r2, r1
 9638 028e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9639 0290 1A70     		strb	r2, [r3]
1297:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9640              		.loc 1 1297 0 discriminator 3
 9641 0292 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9642 0294 0133     		adds	r3, r3, #1
 9643 0296 BB75     		strb	r3, [r7, #22]
 9644              	.L405:
1297:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9645              		.loc 1 1297 0 is_stmt 0 discriminator 1
 9646 0298 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9647 029a 032B     		cmp	r3, #3
 9648 029c EDD9     		bls	.L406
1300:..\src/command_processing.c ****                 
 9649              		.loc 1 1300 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 223


 9650 029e 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9651 02a0 BB68     		ldr	r3, [r7, #8]	@ float
 9652 02a2 4FF08F41 		mov	r1, #1199570944
 9653 02a6 1846     		mov	r0, r3
 9654 02a8 FFF7FEFF 		bl	__aeabi_fmul
 9655 02ac 0346     		mov	r3, r0
 9656 02ae 1846     		mov	r0, r3
 9657 02b0 FFF7FEFF 		bl	__aeabi_f2iz
 9658 02b4 0146     		mov	r1, r0
 9659 02b6 524A     		ldr	r2, .L475+8
 9660 02b8 2346     		mov	r3, r4
 9661 02ba DB00     		lsls	r3, r3, #3
 9662 02bc 1B1B     		subs	r3, r3, r4
 9663 02be 1B01     		lsls	r3, r3, #4
 9664 02c0 1344     		add	r3, r3, r2
 9665 02c2 C833     		adds	r3, r3, #200
 9666 02c4 1960     		str	r1, [r3]
1302:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9667              		.loc 1 1302 0
 9668 02c6 4F4B     		ldr	r3, .L475+12
 9669 02c8 1B68     		ldr	r3, [r3]	@ float
 9670 02ca FB60     		str	r3, [r7, #12]	@ float
1303:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9671              		.loc 1 1303 0
 9672 02cc 0023     		movs	r3, #0
 9673 02ce BB75     		strb	r3, [r7, #22]
 9674 02d0 0EE0     		b	.L407
 9675              	.L408:
1304:..\src/command_processing.c ****                 }
 9676              		.loc 1 1304 0 discriminator 3
 9677 02d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9678 02d4 C3F10303 		rsb	r3, r3, #3
 9679 02d8 07F10802 		add	r2, r7, #8
 9680 02dc 1344     		add	r3, r3, r2
 9681 02de BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9682 02e0 07F10C01 		add	r1, r7, #12
 9683 02e4 0A44     		add	r2, r2, r1
 9684 02e6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9685 02e8 1A70     		strb	r2, [r3]
1303:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9686              		.loc 1 1303 0 discriminator 3
 9687 02ea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9688 02ec 0133     		adds	r3, r3, #1
 9689 02ee BB75     		strb	r3, [r7, #22]
 9690              	.L407:
1303:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9691              		.loc 1 1303 0 is_stmt 0 discriminator 1
 9692 02f0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9693 02f2 032B     		cmp	r3, #3
 9694 02f4 EDD9     		bls	.L408
1306:..\src/command_processing.c ****                 
 9695              		.loc 1 1306 0 is_stmt 1
 9696 02f6 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9697 02f8 BB68     		ldr	r3, [r7, #8]	@ float
 9698 02fa 4FF08F41 		mov	r1, #1199570944
 9699 02fe 1846     		mov	r0, r3
 9700 0300 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 224


 9701 0304 0346     		mov	r3, r0
 9702 0306 1846     		mov	r0, r3
 9703 0308 FFF7FEFF 		bl	__aeabi_f2iz
 9704 030c 0146     		mov	r1, r0
 9705 030e 3C4A     		ldr	r2, .L475+8
 9706 0310 2346     		mov	r3, r4
 9707 0312 DB00     		lsls	r3, r3, #3
 9708 0314 1B1B     		subs	r3, r3, r4
 9709 0316 1B01     		lsls	r3, r3, #4
 9710 0318 1344     		add	r3, r3, r2
 9711 031a CC33     		adds	r3, r3, #204
 9712 031c 1960     		str	r1, [r3]
1308:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9713              		.loc 1 1308 0
 9714 031e 3A4B     		ldr	r3, .L475+16
 9715 0320 1B68     		ldr	r3, [r3]	@ float
 9716 0322 FB60     		str	r3, [r7, #12]	@ float
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9717              		.loc 1 1309 0
 9718 0324 0023     		movs	r3, #0
 9719 0326 BB75     		strb	r3, [r7, #22]
 9720 0328 0EE0     		b	.L409
 9721              	.L410:
1310:..\src/command_processing.c ****                 }
 9722              		.loc 1 1310 0 discriminator 3
 9723 032a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9724 032c C3F10303 		rsb	r3, r3, #3
 9725 0330 07F10802 		add	r2, r7, #8
 9726 0334 1344     		add	r3, r3, r2
 9727 0336 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9728 0338 07F10C01 		add	r1, r7, #12
 9729 033c 0A44     		add	r2, r2, r1
 9730 033e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9731 0340 1A70     		strb	r2, [r3]
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9732              		.loc 1 1309 0 discriminator 3
 9733 0342 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9734 0344 0133     		adds	r3, r3, #1
 9735 0346 BB75     		strb	r3, [r7, #22]
 9736              	.L409:
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9737              		.loc 1 1309 0 is_stmt 0 discriminator 1
 9738 0348 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9739 034a 032B     		cmp	r3, #3
 9740 034c EDD9     		bls	.L410
1312:..\src/command_processing.c ****             }
 9741              		.loc 1 1312 0 is_stmt 1
 9742 034e 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9743 0350 BB68     		ldr	r3, [r7, #8]	@ float
 9744 0352 4FF08F41 		mov	r1, #1199570944
 9745 0356 1846     		mov	r0, r3
 9746 0358 FFF7FEFF 		bl	__aeabi_fmul
 9747 035c 0346     		mov	r3, r0
 9748 035e 1846     		mov	r0, r3
 9749 0360 FFF7FEFF 		bl	__aeabi_f2iz
 9750 0364 0146     		mov	r1, r0
 9751 0366 264A     		ldr	r2, .L475+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 225


 9752 0368 2346     		mov	r3, r4
 9753 036a DB00     		lsls	r3, r3, #3
 9754 036c 1B1B     		subs	r3, r3, r4
 9755 036e 1B01     		lsls	r3, r3, #4
 9756 0370 1344     		add	r3, r3, r2
 9757 0372 D033     		adds	r3, r3, #208
 9758 0374 1960     		str	r1, [r3]
 9759              		.loc 1 1314 0
 9760 0376 01F080B8 		b	.L411
 9761              	.L380:
1315:..\src/command_processing.c ****             
1316:..\src/command_processing.c ****         case 3:         //Current PID
1317:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9762              		.loc 1 1317 0
 9763 037a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9764 037c 1E49     		ldr	r1, .L475
 9765 037e 1346     		mov	r3, r2
 9766 0380 DB00     		lsls	r3, r3, #3
 9767 0382 9B1A     		subs	r3, r3, r2
 9768 0384 1B01     		lsls	r3, r3, #4
 9769 0386 0B44     		add	r3, r3, r1
 9770 0388 03F20F13 		addw	r3, r3, #271
 9771 038c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9772 038e 032B     		cmp	r3, #3
 9773 0390 00F09080 		beq	.L412
1318:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9774              		.loc 1 1318 0
 9775 0394 194B     		ldr	r3, .L475+4
 9776 0396 1B68     		ldr	r3, [r3]	@ float
 9777 0398 FB60     		str	r3, [r7, #12]	@ float
1319:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9778              		.loc 1 1319 0
 9779 039a 0023     		movs	r3, #0
 9780 039c BB75     		strb	r3, [r7, #22]
 9781 039e 0EE0     		b	.L413
 9782              	.L414:
1320:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9783              		.loc 1 1320 0 discriminator 3
 9784 03a0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9785 03a2 C3F10303 		rsb	r3, r3, #3
 9786 03a6 07F10802 		add	r2, r7, #8
 9787 03aa 1344     		add	r3, r3, r2
 9788 03ac BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9789 03ae 07F10C01 		add	r1, r7, #12
 9790 03b2 0A44     		add	r2, r2, r1
 9791 03b4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9792 03b6 1A70     		strb	r2, [r3]
1319:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9793              		.loc 1 1319 0 discriminator 3
 9794 03b8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9795 03ba 0133     		adds	r3, r3, #1
 9796 03bc BB75     		strb	r3, [r7, #22]
 9797              	.L413:
1319:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9798              		.loc 1 1319 0 is_stmt 0 discriminator 1
 9799 03be BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9800 03c0 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 226


 9801 03c2 EDD9     		bls	.L414
1321:..\src/command_processing.c ****                 }
1322:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9802              		.loc 1 1322 0 is_stmt 1
 9803 03c4 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9804 03c6 BB68     		ldr	r3, [r7, #8]	@ float
 9805 03c8 4FF08F41 		mov	r1, #1199570944
 9806 03cc 1846     		mov	r0, r3
 9807 03ce FFF7FEFF 		bl	__aeabi_fmul
 9808 03d2 0346     		mov	r3, r0
 9809 03d4 1846     		mov	r0, r3
 9810 03d6 FFF7FEFF 		bl	__aeabi_f2iz
 9811 03da 0146     		mov	r1, r0
 9812 03dc 084A     		ldr	r2, .L475+8
 9813 03de 2346     		mov	r3, r4
 9814 03e0 DB00     		lsls	r3, r3, #3
 9815 03e2 1B1B     		subs	r3, r3, r4
 9816 03e4 1B01     		lsls	r3, r3, #4
 9817 03e6 1344     		add	r3, r3, r2
 9818 03e8 BC33     		adds	r3, r3, #188
 9819 03ea 1960     		str	r1, [r3]
1323:..\src/command_processing.c ****                 
1324:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9820              		.loc 1 1324 0
 9821 03ec 054B     		ldr	r3, .L475+12
 9822 03ee 1B68     		ldr	r3, [r3]	@ float
 9823 03f0 FB60     		str	r3, [r7, #12]	@ float
1325:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9824              		.loc 1 1325 0
 9825 03f2 0023     		movs	r3, #0
 9826 03f4 BB75     		strb	r3, [r7, #22]
 9827 03f6 18E0     		b	.L415
 9828              	.L476:
 9829              		.align	2
 9830              	.L475:
 9831 03f8 00000000 		.word	c_mem
 9832 03fc 03000000 		.word	g_rx+3
 9833 0400 00000000 		.word	g_mem
 9834 0404 07000000 		.word	g_rx+7
 9835 0408 0B000000 		.word	g_rx+11
 9836              	.L416:
1326:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9837              		.loc 1 1326 0 discriminator 3
 9838 040c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9839 040e C3F10303 		rsb	r3, r3, #3
 9840 0412 07F10802 		add	r2, r7, #8
 9841 0416 1344     		add	r3, r3, r2
 9842 0418 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9843 041a 07F10C01 		add	r1, r7, #12
 9844 041e 0A44     		add	r2, r2, r1
 9845 0420 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9846 0422 1A70     		strb	r2, [r3]
1325:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9847              		.loc 1 1325 0 discriminator 3
 9848 0424 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9849 0426 0133     		adds	r3, r3, #1
 9850 0428 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 227


 9851              	.L415:
1325:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9852              		.loc 1 1325 0 is_stmt 0 discriminator 1
 9853 042a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9854 042c 032B     		cmp	r3, #3
 9855 042e EDD9     		bls	.L416
1327:..\src/command_processing.c ****                 }
1328:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9856              		.loc 1 1328 0 is_stmt 1
 9857 0430 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9858 0432 BB68     		ldr	r3, [r7, #8]	@ float
 9859 0434 4FF08F41 		mov	r1, #1199570944
 9860 0438 1846     		mov	r0, r3
 9861 043a FFF7FEFF 		bl	__aeabi_fmul
 9862 043e 0346     		mov	r3, r0
 9863 0440 1846     		mov	r0, r3
 9864 0442 FFF7FEFF 		bl	__aeabi_f2iz
 9865 0446 0146     		mov	r1, r0
 9866 0448 B54A     		ldr	r2, .L477
 9867 044a 2346     		mov	r3, r4
 9868 044c DB00     		lsls	r3, r3, #3
 9869 044e 1B1B     		subs	r3, r3, r4
 9870 0450 1B01     		lsls	r3, r3, #4
 9871 0452 1344     		add	r3, r3, r2
 9872 0454 C033     		adds	r3, r3, #192
 9873 0456 1960     		str	r1, [r3]
1329:..\src/command_processing.c ****                 
1330:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9874              		.loc 1 1330 0
 9875 0458 B24B     		ldr	r3, .L477+4
 9876 045a 1B68     		ldr	r3, [r3]	@ float
 9877 045c FB60     		str	r3, [r7, #12]	@ float
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9878              		.loc 1 1331 0
 9879 045e 0023     		movs	r3, #0
 9880 0460 BB75     		strb	r3, [r7, #22]
 9881 0462 0EE0     		b	.L417
 9882              	.L418:
1332:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9883              		.loc 1 1332 0 discriminator 3
 9884 0464 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9885 0466 C3F10303 		rsb	r3, r3, #3
 9886 046a 07F10802 		add	r2, r7, #8
 9887 046e 1344     		add	r3, r3, r2
 9888 0470 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9889 0472 07F10C01 		add	r1, r7, #12
 9890 0476 0A44     		add	r2, r2, r1
 9891 0478 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9892 047a 1A70     		strb	r2, [r3]
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9893              		.loc 1 1331 0 discriminator 3
 9894 047c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9895 047e 0133     		adds	r3, r3, #1
 9896 0480 BB75     		strb	r3, [r7, #22]
 9897              	.L417:
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9898              		.loc 1 1331 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 228


 9899 0482 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9900 0484 032B     		cmp	r3, #3
 9901 0486 EDD9     		bls	.L418
1333:..\src/command_processing.c ****                 }
1334:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9902              		.loc 1 1334 0 is_stmt 1
 9903 0488 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9904 048a BB68     		ldr	r3, [r7, #8]	@ float
 9905 048c 4FF08F41 		mov	r1, #1199570944
 9906 0490 1846     		mov	r0, r3
 9907 0492 FFF7FEFF 		bl	__aeabi_fmul
 9908 0496 0346     		mov	r3, r0
 9909 0498 1846     		mov	r0, r3
 9910 049a FFF7FEFF 		bl	__aeabi_f2iz
 9911 049e 0146     		mov	r1, r0
 9912 04a0 9F4A     		ldr	r2, .L477
 9913 04a2 2346     		mov	r3, r4
 9914 04a4 DB00     		lsls	r3, r3, #3
 9915 04a6 1B1B     		subs	r3, r3, r4
 9916 04a8 1B01     		lsls	r3, r3, #4
 9917 04aa 1344     		add	r3, r3, r2
 9918 04ac C433     		adds	r3, r3, #196
 9919 04ae 1960     		str	r1, [r3]
1335:..\src/command_processing.c ****             }
1336:..\src/command_processing.c ****             else {
1337:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1338:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1339:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1340:..\src/command_processing.c ****                 }
1341:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1342:..\src/command_processing.c ****                 
1343:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1344:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1345:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1346:..\src/command_processing.c ****                 }
1347:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1348:..\src/command_processing.c ****                 
1349:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1350:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1351:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1352:..\src/command_processing.c ****                 }
1353:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1354:..\src/command_processing.c ****             }            
1355:..\src/command_processing.c ****             break;  
 9920              		.loc 1 1355 0
 9921 04b0 00F0E3BF 		b	.L411
 9922              	.L412:
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9923              		.loc 1 1337 0
 9924 04b4 9C4B     		ldr	r3, .L477+8
 9925 04b6 1B68     		ldr	r3, [r3]	@ float
 9926 04b8 FB60     		str	r3, [r7, #12]	@ float
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9927              		.loc 1 1338 0
 9928 04ba 0023     		movs	r3, #0
 9929 04bc BB75     		strb	r3, [r7, #22]
 9930 04be 0EE0     		b	.L420
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 229


 9931              	.L421:
1339:..\src/command_processing.c ****                 }
 9932              		.loc 1 1339 0 discriminator 3
 9933 04c0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9934 04c2 C3F10303 		rsb	r3, r3, #3
 9935 04c6 07F10802 		add	r2, r7, #8
 9936 04ca 1344     		add	r3, r3, r2
 9937 04cc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9938 04ce 07F10C01 		add	r1, r7, #12
 9939 04d2 0A44     		add	r2, r2, r1
 9940 04d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9941 04d6 1A70     		strb	r2, [r3]
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9942              		.loc 1 1338 0 discriminator 3
 9943 04d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9944 04da 0133     		adds	r3, r3, #1
 9945 04dc BB75     		strb	r3, [r7, #22]
 9946              	.L420:
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9947              		.loc 1 1338 0 is_stmt 0 discriminator 1
 9948 04de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9949 04e0 032B     		cmp	r3, #3
 9950 04e2 EDD9     		bls	.L421
1341:..\src/command_processing.c ****                 
 9951              		.loc 1 1341 0 is_stmt 1
 9952 04e4 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9953 04e6 BB68     		ldr	r3, [r7, #8]	@ float
 9954 04e8 4FF08F41 		mov	r1, #1199570944
 9955 04ec 1846     		mov	r0, r3
 9956 04ee FFF7FEFF 		bl	__aeabi_fmul
 9957 04f2 0346     		mov	r3, r0
 9958 04f4 1846     		mov	r0, r3
 9959 04f6 FFF7FEFF 		bl	__aeabi_f2iz
 9960 04fa 0146     		mov	r1, r0
 9961 04fc 884A     		ldr	r2, .L477
 9962 04fe 2346     		mov	r3, r4
 9963 0500 DB00     		lsls	r3, r3, #3
 9964 0502 1B1B     		subs	r3, r3, r4
 9965 0504 1B01     		lsls	r3, r3, #4
 9966 0506 1344     		add	r3, r3, r2
 9967 0508 D433     		adds	r3, r3, #212
 9968 050a 1960     		str	r1, [r3]
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9969              		.loc 1 1343 0
 9970 050c 874B     		ldr	r3, .L477+12
 9971 050e 1B68     		ldr	r3, [r3]	@ float
 9972 0510 FB60     		str	r3, [r7, #12]	@ float
1344:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9973              		.loc 1 1344 0
 9974 0512 0023     		movs	r3, #0
 9975 0514 BB75     		strb	r3, [r7, #22]
 9976 0516 0EE0     		b	.L422
 9977              	.L423:
1345:..\src/command_processing.c ****                 }
 9978              		.loc 1 1345 0 discriminator 3
 9979 0518 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9980 051a C3F10303 		rsb	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 230


 9981 051e 07F10802 		add	r2, r7, #8
 9982 0522 1344     		add	r3, r3, r2
 9983 0524 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9984 0526 07F10C01 		add	r1, r7, #12
 9985 052a 0A44     		add	r2, r2, r1
 9986 052c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9987 052e 1A70     		strb	r2, [r3]
1344:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9988              		.loc 1 1344 0 discriminator 3
 9989 0530 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9990 0532 0133     		adds	r3, r3, #1
 9991 0534 BB75     		strb	r3, [r7, #22]
 9992              	.L422:
1344:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9993              		.loc 1 1344 0 is_stmt 0 discriminator 1
 9994 0536 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9995 0538 032B     		cmp	r3, #3
 9996 053a EDD9     		bls	.L423
1347:..\src/command_processing.c ****                 
 9997              		.loc 1 1347 0 is_stmt 1
 9998 053c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9999 053e BB68     		ldr	r3, [r7, #8]	@ float
 10000 0540 4FF08F41 		mov	r1, #1199570944
 10001 0544 1846     		mov	r0, r3
 10002 0546 FFF7FEFF 		bl	__aeabi_fmul
 10003 054a 0346     		mov	r3, r0
 10004 054c 1846     		mov	r0, r3
 10005 054e FFF7FEFF 		bl	__aeabi_f2iz
 10006 0552 0146     		mov	r1, r0
 10007 0554 724A     		ldr	r2, .L477
 10008 0556 2346     		mov	r3, r4
 10009 0558 DB00     		lsls	r3, r3, #3
 10010 055a 1B1B     		subs	r3, r3, r4
 10011 055c 1B01     		lsls	r3, r3, #4
 10012 055e 1344     		add	r3, r3, r2
 10013 0560 D833     		adds	r3, r3, #216
 10014 0562 1960     		str	r1, [r3]
1349:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10015              		.loc 1 1349 0
 10016 0564 6F4B     		ldr	r3, .L477+4
 10017 0566 1B68     		ldr	r3, [r3]	@ float
 10018 0568 FB60     		str	r3, [r7, #12]	@ float
1350:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10019              		.loc 1 1350 0
 10020 056a 0023     		movs	r3, #0
 10021 056c BB75     		strb	r3, [r7, #22]
 10022 056e 0EE0     		b	.L424
 10023              	.L425:
1351:..\src/command_processing.c ****                 }
 10024              		.loc 1 1351 0 discriminator 3
 10025 0570 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10026 0572 C3F10303 		rsb	r3, r3, #3
 10027 0576 07F10802 		add	r2, r7, #8
 10028 057a 1344     		add	r3, r3, r2
 10029 057c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10030 057e 07F10C01 		add	r1, r7, #12
 10031 0582 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 231


 10032 0584 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10033 0586 1A70     		strb	r2, [r3]
1350:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10034              		.loc 1 1350 0 discriminator 3
 10035 0588 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10036 058a 0133     		adds	r3, r3, #1
 10037 058c BB75     		strb	r3, [r7, #22]
 10038              	.L424:
1350:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10039              		.loc 1 1350 0 is_stmt 0 discriminator 1
 10040 058e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10041 0590 032B     		cmp	r3, #3
 10042 0592 EDD9     		bls	.L425
1353:..\src/command_processing.c ****             }            
 10043              		.loc 1 1353 0 is_stmt 1
 10044 0594 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10045 0596 BB68     		ldr	r3, [r7, #8]	@ float
 10046 0598 4FF08F41 		mov	r1, #1199570944
 10047 059c 1846     		mov	r0, r3
 10048 059e FFF7FEFF 		bl	__aeabi_fmul
 10049 05a2 0346     		mov	r3, r0
 10050 05a4 1846     		mov	r0, r3
 10051 05a6 FFF7FEFF 		bl	__aeabi_f2iz
 10052 05aa 0146     		mov	r1, r0
 10053 05ac 5C4A     		ldr	r2, .L477
 10054 05ae 2346     		mov	r3, r4
 10055 05b0 DB00     		lsls	r3, r3, #3
 10056 05b2 1B1B     		subs	r3, r3, r4
 10057 05b4 1B01     		lsls	r3, r3, #4
 10058 05b6 1344     		add	r3, r3, r2
 10059 05b8 DC33     		adds	r3, r3, #220
 10060 05ba 1960     		str	r1, [r3]
 10061              		.loc 1 1355 0
 10062 05bc 00F05DBF 		b	.L411
 10063              	.L381:
1356:..\src/command_processing.c ****             
1357:..\src/command_processing.c ****         case 5:         //Input mode
1358:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10064              		.loc 1 1358 0
 10065 05c0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10066 05c2 5B4B     		ldr	r3, .L477+16
 10067 05c4 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10068 05c6 5649     		ldr	r1, .L477
 10069 05c8 1346     		mov	r3, r2
 10070 05ca DB00     		lsls	r3, r3, #3
 10071 05cc 9B1A     		subs	r3, r3, r2
 10072 05ce 1B01     		lsls	r3, r3, #4
 10073 05d0 0B44     		add	r3, r3, r1
 10074 05d2 03F58773 		add	r3, r3, #270
 10075 05d6 0246     		mov	r2, r0
 10076 05d8 1A70     		strb	r2, [r3]
1359:..\src/command_processing.c ****             
1360:..\src/command_processing.c ****             // Hold the actual position
1361:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10077              		.loc 1 1361 0
 10078 05da 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10079 05dc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 232


 10080 05de 5048     		ldr	r0, .L477
 10081 05e0 1346     		mov	r3, r2
 10082 05e2 DB00     		lsls	r3, r3, #3
 10083 05e4 9B1A     		subs	r3, r3, r2
 10084 05e6 1B01     		lsls	r3, r3, #4
 10085 05e8 0344     		add	r3, r3, r0
 10086 05ea 03F58873 		add	r3, r3, #272
 10087 05ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10088 05f0 1846     		mov	r0, r3
 10089 05f2 504A     		ldr	r2, .L477+20
 10090 05f4 3423     		movs	r3, #52
 10091 05f6 03FB00F3 		mul	r3, r3, r0
 10092 05fa 1344     		add	r3, r3, r2
 10093 05fc 1A68     		ldr	r2, [r3]
 10094 05fe 4E48     		ldr	r0, .L477+24
 10095 0600 0B01     		lsls	r3, r1, #4
 10096 0602 0344     		add	r3, r3, r0
 10097 0604 1A60     		str	r2, [r3]
1362:..\src/command_processing.c ****             break;   
 10098              		.loc 1 1362 0
 10099 0606 00F038BF 		b	.L411
 10100              	.L382:
1363:..\src/command_processing.c **** 
1364:..\src/command_processing.c ****         case 8:         //Measurement Offset
1365:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10101              		.loc 1 1365 0
 10102 060a 0023     		movs	r3, #0
 10103 060c FB75     		strb	r3, [r7, #23]
 10104 060e 7EE0     		b	.L426
 10105              	.L427:
1366:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10106              		.loc 1 1366 0 discriminator 3
 10107 0610 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10108 0612 4349     		ldr	r1, .L477
 10109 0614 1346     		mov	r3, r2
 10110 0616 DB00     		lsls	r3, r3, #3
 10111 0618 9B1A     		subs	r3, r3, r2
 10112 061a 1B01     		lsls	r3, r3, #4
 10113 061c 0B44     		add	r3, r3, r1
 10114 061e 03F58873 		add	r3, r3, #272
 10115 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10116 0624 1C46     		mov	r4, r3
 10117 0626 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10118 0628 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10119 062a 5B00     		lsls	r3, r3, #1
 10120 062c 0333     		adds	r3, r3, #3
 10121 062e 4049     		ldr	r1, .L477+16
 10122 0630 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10123 0632 1B02     		lsls	r3, r3, #8
 10124 0634 19B2     		sxth	r1, r3
 10125 0636 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10126 0638 0233     		adds	r3, r3, #2
 10127 063a 5B00     		lsls	r3, r3, #1
 10128 063c 3C48     		ldr	r0, .L477+16
 10129 063e C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10130 0640 1BB2     		sxth	r3, r3
 10131 0642 0B43     		orrs	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 233


 10132 0644 1BB2     		sxth	r3, r3
 10133 0646 1846     		mov	r0, r3
 10134 0648 3549     		ldr	r1, .L477
 10135 064a 2346     		mov	r3, r4
 10136 064c 5B00     		lsls	r3, r3, #1
 10137 064e 2344     		add	r3, r3, r4
 10138 0650 9B00     		lsls	r3, r3, #2
 10139 0652 1344     		add	r3, r3, r2
 10140 0654 6633     		adds	r3, r3, #102
 10141 0656 41F82300 		str	r0, [r1, r3, lsl #2]
1367:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10142              		.loc 1 1367 0 discriminator 3
 10143 065a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10144 065c 3049     		ldr	r1, .L477
 10145 065e 1346     		mov	r3, r2
 10146 0660 DB00     		lsls	r3, r3, #3
 10147 0662 9B1A     		subs	r3, r3, r2
 10148 0664 1B01     		lsls	r3, r3, #4
 10149 0666 0B44     		add	r3, r3, r1
 10150 0668 03F58873 		add	r3, r3, #272
 10151 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10152 066e 1D46     		mov	r5, r3
 10153 0670 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10154 0672 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10155 0674 2A48     		ldr	r0, .L477
 10156 0676 1346     		mov	r3, r2
 10157 0678 DB00     		lsls	r3, r3, #3
 10158 067a 9B1A     		subs	r3, r3, r2
 10159 067c 1B01     		lsls	r3, r3, #4
 10160 067e 0344     		add	r3, r3, r0
 10161 0680 03F58873 		add	r3, r3, #272
 10162 0684 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10163 0686 1C46     		mov	r4, r3
 10164 0688 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10165 068a 2548     		ldr	r0, .L477
 10166 068c 2346     		mov	r3, r4
 10167 068e 5B00     		lsls	r3, r3, #1
 10168 0690 2344     		add	r3, r3, r4
 10169 0692 9B00     		lsls	r3, r3, #2
 10170 0694 1344     		add	r3, r3, r2
 10171 0696 6633     		adds	r3, r3, #102
 10172 0698 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10173 069c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10174 069e 204C     		ldr	r4, .L477
 10175 06a0 1346     		mov	r3, r2
 10176 06a2 DB00     		lsls	r3, r3, #3
 10177 06a4 9B1A     		subs	r3, r3, r2
 10178 06a6 1B01     		lsls	r3, r3, #4
 10179 06a8 2344     		add	r3, r3, r4
 10180 06aa 03F58873 		add	r3, r3, #272
 10181 06ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10182 06b0 1E46     		mov	r6, r3
 10183 06b2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10184 06b4 1A4C     		ldr	r4, .L477
 10185 06b6 3346     		mov	r3, r6
 10186 06b8 5B00     		lsls	r3, r3, #1
 10187 06ba 3344     		add	r3, r3, r6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 234


 10188 06bc 1B01     		lsls	r3, r3, #4
 10189 06be 2344     		add	r3, r3, r4
 10190 06c0 1344     		add	r3, r3, r2
 10191 06c2 03F29513 		addw	r3, r3, #405
 10192 06c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10193 06c8 00FA03F2 		lsl	r2, r0, r3
 10194 06cc 1448     		ldr	r0, .L477
 10195 06ce 2B46     		mov	r3, r5
 10196 06d0 5B00     		lsls	r3, r3, #1
 10197 06d2 2B44     		add	r3, r3, r5
 10198 06d4 9B00     		lsls	r3, r3, #2
 10199 06d6 0B44     		add	r3, r3, r1
 10200 06d8 6633     		adds	r3, r3, #102
 10201 06da 40F82320 		str	r2, [r0, r3, lsl #2]
1368:..\src/command_processing.c **** 
1369:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10202              		.loc 1 1369 0 discriminator 3
 10203 06de 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10204 06e0 0F49     		ldr	r1, .L477
 10205 06e2 1346     		mov	r3, r2
 10206 06e4 DB00     		lsls	r3, r3, #3
 10207 06e6 9B1A     		subs	r3, r3, r2
 10208 06e8 1B01     		lsls	r3, r3, #4
 10209 06ea 0B44     		add	r3, r3, r1
 10210 06ec 03F58873 		add	r3, r3, #272
 10211 06f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10212 06f2 1846     		mov	r0, r3
 10213 06f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10214 06f6 0F49     		ldr	r1, .L477+20
 10215 06f8 3422     		movs	r2, #52
 10216 06fa 02FB00F2 		mul	r2, r2, r0
 10217 06fe 0A44     		add	r2, r2, r1
 10218 0700 1344     		add	r3, r3, r2
 10219 0702 1833     		adds	r3, r3, #24
 10220 0704 0022     		movs	r2, #0
 10221 0706 1A70     		strb	r2, [r3]
1365:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10222              		.loc 1 1365 0 discriminator 3
 10223 0708 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10224 070a 0133     		adds	r3, r3, #1
 10225 070c FB75     		strb	r3, [r7, #23]
 10226              	.L426:
1365:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10227              		.loc 1 1365 0 is_stmt 0 discriminator 1
 10228 070e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10229 0710 022B     		cmp	r3, #2
 10230 0712 7FF67DAF 		bls	.L427
1370:..\src/command_processing.c ****             }
1371:..\src/command_processing.c ****             reset_last_value_flag = 1;
 10231              		.loc 1 1371 0 is_stmt 1
 10232 0716 094B     		ldr	r3, .L477+28
 10233 0718 0122     		movs	r2, #1
 10234 071a 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****             break;
 10235              		.loc 1 1372 0
 10236 071c 00F0ADBE 		b	.L411
 10237              	.L478:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 235


 10238              		.align	2
 10239              	.L477:
 10240 0720 00000000 		.word	g_mem
 10241 0724 0B000000 		.word	g_rx+11
 10242 0728 03000000 		.word	g_rx+3
 10243 072c 07000000 		.word	g_rx+7
 10244 0730 00000000 		.word	g_rx
 10245 0734 00000000 		.word	g_meas
 10246 0738 00000000 		.word	g_refNew
 10247 073c 00000000 		.word	reset_last_value_flag
 10248              	.L383:
1373:..\src/command_processing.c ****     
1374:..\src/command_processing.c ****         case 11:        //Position limits
1375:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10249              		.loc 1 1375 0
 10250 0740 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10251 0742 C14B     		ldr	r3, .L479
 10252 0744 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10253 0746 1906     		lsls	r1, r3, #24
 10254 0748 BF4B     		ldr	r3, .L479
 10255 074a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10256 074c 1B04     		lsls	r3, r3, #16
 10257 074e 1943     		orrs	r1, r1, r3
 10258 0750 BD4B     		ldr	r3, .L479
 10259 0752 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10260 0754 1B02     		lsls	r3, r3, #8
 10261 0756 0B43     		orrs	r3, r3, r1
 10262 0758 BB49     		ldr	r1, .L479
 10263 075a 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10264 075c 1943     		orrs	r1, r1, r3
 10265 075e BB48     		ldr	r0, .L479+4
 10266 0760 1346     		mov	r3, r2
 10267 0762 DB00     		lsls	r3, r3, #3
 10268 0764 9B1A     		subs	r3, r3, r2
 10269 0766 1B01     		lsls	r3, r3, #4
 10270 0768 0344     		add	r3, r3, r0
 10271 076a E433     		adds	r3, r3, #228
 10272 076c 1960     		str	r1, [r3]
1376:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10273              		.loc 1 1376 0
 10274 076e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10275 0770 B54B     		ldr	r3, .L479
 10276 0772 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10277 0774 1906     		lsls	r1, r3, #24
 10278 0776 B44B     		ldr	r3, .L479
 10279 0778 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10280 077a 1B04     		lsls	r3, r3, #16
 10281 077c 1943     		orrs	r1, r1, r3
 10282 077e B24B     		ldr	r3, .L479
 10283 0780 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10284 0782 1B02     		lsls	r3, r3, #8
 10285 0784 0B43     		orrs	r3, r3, r1
 10286 0786 B049     		ldr	r1, .L479
 10287 0788 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10288 078a 1943     		orrs	r1, r1, r3
 10289 078c AF48     		ldr	r0, .L479+4
 10290 078e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 236


 10291 0790 DB00     		lsls	r3, r3, #3
 10292 0792 9B1A     		subs	r3, r3, r2
 10293 0794 1B01     		lsls	r3, r3, #4
 10294 0796 0344     		add	r3, r3, r0
 10295 0798 E833     		adds	r3, r3, #232
 10296 079a 1960     		str	r1, [r3]
1377:..\src/command_processing.c **** 
1378:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10297              		.loc 1 1378 0
 10298 079c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10299 079e 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10300 07a0 AA48     		ldr	r0, .L479+4
 10301 07a2 0B46     		mov	r3, r1
 10302 07a4 DB00     		lsls	r3, r3, #3
 10303 07a6 5B1A     		subs	r3, r3, r1
 10304 07a8 1B01     		lsls	r3, r3, #4
 10305 07aa 0344     		add	r3, r3, r0
 10306 07ac E433     		adds	r3, r3, #228
 10307 07ae 1868     		ldr	r0, [r3]
 10308 07b0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10309 07b2 A64C     		ldr	r4, .L479+4
 10310 07b4 0B46     		mov	r3, r1
 10311 07b6 DB00     		lsls	r3, r3, #3
 10312 07b8 5B1A     		subs	r3, r3, r1
 10313 07ba 1B01     		lsls	r3, r3, #4
 10314 07bc 2344     		add	r3, r3, r4
 10315 07be 03F58873 		add	r3, r3, #272
 10316 07c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10317 07c4 1C46     		mov	r4, r3
 10318 07c6 A149     		ldr	r1, .L479+4
 10319 07c8 2346     		mov	r3, r4
 10320 07ca 5B00     		lsls	r3, r3, #1
 10321 07cc 2344     		add	r3, r3, r4
 10322 07ce 1B01     		lsls	r3, r3, #4
 10323 07d0 0B44     		add	r3, r3, r1
 10324 07d2 03F29513 		addw	r3, r3, #405
 10325 07d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10326 07d8 00FA03F1 		lsl	r1, r0, r3
 10327 07dc 9B48     		ldr	r0, .L479+4
 10328 07de 1346     		mov	r3, r2
 10329 07e0 DB00     		lsls	r3, r3, #3
 10330 07e2 9B1A     		subs	r3, r3, r2
 10331 07e4 1B01     		lsls	r3, r3, #4
 10332 07e6 0344     		add	r3, r3, r0
 10333 07e8 E433     		adds	r3, r3, #228
 10334 07ea 1960     		str	r1, [r3]
1379:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10335              		.loc 1 1379 0
 10336 07ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10337 07ee 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10338 07f0 9648     		ldr	r0, .L479+4
 10339 07f2 0B46     		mov	r3, r1
 10340 07f4 DB00     		lsls	r3, r3, #3
 10341 07f6 5B1A     		subs	r3, r3, r1
 10342 07f8 1B01     		lsls	r3, r3, #4
 10343 07fa 0344     		add	r3, r3, r0
 10344 07fc E833     		adds	r3, r3, #232
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 237


 10345 07fe 1868     		ldr	r0, [r3]
 10346 0800 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10347 0802 924C     		ldr	r4, .L479+4
 10348 0804 0B46     		mov	r3, r1
 10349 0806 DB00     		lsls	r3, r3, #3
 10350 0808 5B1A     		subs	r3, r3, r1
 10351 080a 1B01     		lsls	r3, r3, #4
 10352 080c 2344     		add	r3, r3, r4
 10353 080e 03F58873 		add	r3, r3, #272
 10354 0812 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10355 0814 1C46     		mov	r4, r3
 10356 0816 8D49     		ldr	r1, .L479+4
 10357 0818 2346     		mov	r3, r4
 10358 081a 5B00     		lsls	r3, r3, #1
 10359 081c 2344     		add	r3, r3, r4
 10360 081e 1B01     		lsls	r3, r3, #4
 10361 0820 0B44     		add	r3, r3, r1
 10362 0822 03F29513 		addw	r3, r3, #405
 10363 0826 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10364 0828 00FA03F1 		lsl	r1, r0, r3
 10365 082c 8748     		ldr	r0, .L479+4
 10366 082e 1346     		mov	r3, r2
 10367 0830 DB00     		lsls	r3, r3, #3
 10368 0832 9B1A     		subs	r3, r3, r2
 10369 0834 1B01     		lsls	r3, r3, #4
 10370 0836 0344     		add	r3, r3, r0
 10371 0838 E833     		adds	r3, r3, #232
 10372 083a 1960     		str	r1, [r3]
1380:..\src/command_processing.c ****             break;            
 10373              		.loc 1 1380 0
 10374 083c 00F01DBE 		b	.L411
 10375              	.L384:
1381:..\src/command_processing.c **** 
1382:..\src/command_processing.c ****         case 23:        //Rest Position
1383:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10376              		.loc 1 1383 0
 10377 0840 814B     		ldr	r3, .L479
 10378 0842 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10379 0844 1A06     		lsls	r2, r3, #24
 10380 0846 804B     		ldr	r3, .L479
 10381 0848 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10382 084a 1B04     		lsls	r3, r3, #16
 10383 084c 1A43     		orrs	r2, r2, r3
 10384 084e 7E4B     		ldr	r3, .L479
 10385 0850 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10386 0852 1B02     		lsls	r3, r3, #8
 10387 0854 1343     		orrs	r3, r3, r2
 10388 0856 7C4A     		ldr	r2, .L479
 10389 0858 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10390 085a 1343     		orrs	r3, r3, r2
 10391 085c 7B4A     		ldr	r2, .L479+4
 10392 085e C2F8A032 		str	r3, [r2, #672]
1384:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10393              		.loc 1 1384 0
 10394 0862 7A4B     		ldr	r3, .L479+4
 10395 0864 D3F8A012 		ldr	r1, [r3, #672]
 10396 0868 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 238


 10397 086a 7848     		ldr	r0, .L479+4
 10398 086c 1346     		mov	r3, r2
 10399 086e DB00     		lsls	r3, r3, #3
 10400 0870 9B1A     		subs	r3, r3, r2
 10401 0872 1B01     		lsls	r3, r3, #4
 10402 0874 0344     		add	r3, r3, r0
 10403 0876 03F58873 		add	r3, r3, #272
 10404 087a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10405 087c 1846     		mov	r0, r3
 10406 087e 734A     		ldr	r2, .L479+4
 10407 0880 0346     		mov	r3, r0
 10408 0882 5B00     		lsls	r3, r3, #1
 10409 0884 0344     		add	r3, r3, r0
 10410 0886 1B01     		lsls	r3, r3, #4
 10411 0888 1344     		add	r3, r3, r2
 10412 088a 03F29513 		addw	r3, r3, #405
 10413 088e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10414 0890 01FA03F3 		lsl	r3, r1, r3
 10415 0894 6D4A     		ldr	r2, .L479+4
 10416 0896 C2F8A032 		str	r3, [r2, #672]
1385:..\src/command_processing.c ****             break; 
 10417              		.loc 1 1385 0
 10418 089a 00F0EEBD 		b	.L411
 10419              	.L385:
1386:..\src/command_processing.c ****             
1387:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1388:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10420              		.loc 1 1388 0
 10421 089e 6A4B     		ldr	r3, .L479
 10422 08a0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10423 08a2 1A06     		lsls	r2, r3, #24
 10424 08a4 684B     		ldr	r3, .L479
 10425 08a6 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10426 08a8 1B04     		lsls	r3, r3, #16
 10427 08aa 1A43     		orrs	r2, r2, r3
 10428 08ac 664B     		ldr	r3, .L479
 10429 08ae 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10430 08b0 1B02     		lsls	r3, r3, #8
 10431 08b2 1343     		orrs	r3, r3, r2
 10432 08b4 644A     		ldr	r2, .L479
 10433 08b6 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10434 08b8 1343     		orrs	r3, r3, r2
 10435 08ba 644A     		ldr	r2, .L479+4
 10436 08bc C2F8A432 		str	r3, [r2, #676]
1389:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10437              		.loc 1 1389 0
 10438 08c0 624B     		ldr	r3, .L479+4
 10439 08c2 D3F8A432 		ldr	r3, [r3, #676]
 10440 08c6 092B     		cmp	r3, #9
 10441 08c8 00F3CE85 		bgt	.L470
 10442              		.loc 1 1389 0 is_stmt 0 discriminator 1
 10443 08cc 5F4B     		ldr	r3, .L479+4
 10444 08ce 0A22     		movs	r2, #10
 10445 08d0 C3F8A422 		str	r2, [r3, #676]
1390:..\src/command_processing.c ****            break; 
 10446              		.loc 1 1390 0 is_stmt 1 discriminator 1
 10447 08d4 00F0C8BD 		b	.L470
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 239


 10448              	.L386:
1391:..\src/command_processing.c ****             
1392:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1393:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10449              		.loc 1 1393 0
 10450 08d8 5B4B     		ldr	r3, .L479
 10451 08da DB78     		ldrb	r3, [r3, #3]
 10452 08dc BB74     		strb	r3, [r7, #18]
1394:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10453              		.loc 1 1394 0
 10454 08de BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10455 08e0 002B     		cmp	r3, #0
 10456 08e2 04D0     		beq	.L429
1395:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10457              		.loc 1 1395 0
 10458 08e4 594B     		ldr	r3, .L479+4
 10459 08e6 0122     		movs	r2, #1
 10460 08e8 83F8A720 		strb	r2, [r3, #167]
 10461 08ec 03E0     		b	.L430
 10462              	.L429:
1396:..\src/command_processing.c ****             } else {            // 0
1397:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10463              		.loc 1 1397 0
 10464 08ee 574B     		ldr	r3, .L479+4
 10465 08f0 0022     		movs	r2, #0
 10466 08f2 83F8A720 		strb	r2, [r3, #167]
 10467              	.L430:
1398:..\src/command_processing.c ****             }
1399:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 10468              		.loc 1 1399 0
 10469 08f6 564B     		ldr	r3, .L479+8
 10470 08f8 0122     		movs	r2, #1
 10471 08fa 1A70     		strb	r2, [r3]
1400:..\src/command_processing.c **** 
1401:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10472              		.loc 1 1401 0
 10473 08fc 534B     		ldr	r3, .L479+4
 10474 08fe 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10475 0902 002B     		cmp	r3, #0
 10476 0904 40F0B285 		bne	.L471
1402:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1403:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10477              		.loc 1 1403 0
 10478 0908 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10479 090a 504B     		ldr	r3, .L479+4
 10480 090c 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10481 0910 4E49     		ldr	r1, .L479+4
 10482 0912 1346     		mov	r3, r2
 10483 0914 DB00     		lsls	r3, r3, #3
 10484 0916 9B1A     		subs	r3, r3, r2
 10485 0918 1B01     		lsls	r3, r3, #4
 10486 091a 0B44     		add	r3, r3, r1
 10487 091c 03F58873 		add	r3, r3, #272
 10488 0920 0246     		mov	r2, r0
 10489 0922 1A70     		strb	r2, [r3]
1404:..\src/command_processing.c ****                 
1405:..\src/command_processing.c ****                 // Change also gears parameters
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 240


1406:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10490              		.loc 1 1406 0
 10491 0924 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10492 0926 4949     		ldr	r1, .L479+4
 10493 0928 1346     		mov	r3, r2
 10494 092a DB00     		lsls	r3, r3, #3
 10495 092c 9B1A     		subs	r3, r3, r2
 10496 092e 1B01     		lsls	r3, r3, #4
 10497 0930 0B44     		add	r3, r3, r1
 10498 0932 03F58873 		add	r3, r3, #272
 10499 0936 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10500 0938 1946     		mov	r1, r3
 10501 093a 444A     		ldr	r2, .L479+4
 10502 093c 0B46     		mov	r3, r1
 10503 093e 5B00     		lsls	r3, r3, #1
 10504 0940 0B44     		add	r3, r3, r1
 10505 0942 1B01     		lsls	r3, r3, #4
 10506 0944 1344     		add	r3, r3, r2
 10507 0946 03F5D873 		add	r3, r3, #432
 10508 094a 0122     		movs	r2, #1
 10509 094c 1A70     		strb	r2, [r3]
1407:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10510              		.loc 1 1407 0
 10511 094e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10512 0950 3E49     		ldr	r1, .L479+4
 10513 0952 1346     		mov	r3, r2
 10514 0954 DB00     		lsls	r3, r3, #3
 10515 0956 9B1A     		subs	r3, r3, r2
 10516 0958 1B01     		lsls	r3, r3, #4
 10517 095a 0B44     		add	r3, r3, r1
 10518 095c 03F58873 		add	r3, r3, #272
 10519 0960 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10520 0962 1946     		mov	r1, r3
 10521 0964 394A     		ldr	r2, .L479+4
 10522 0966 0B46     		mov	r3, r1
 10523 0968 5B00     		lsls	r3, r3, #1
 10524 096a 0B44     		add	r3, r3, r1
 10525 096c 1B01     		lsls	r3, r3, #4
 10526 096e 1344     		add	r3, r3, r2
 10527 0970 03F2B513 		addw	r3, r3, #437
 10528 0974 2322     		movs	r2, #35
 10529 0976 1A70     		strb	r2, [r3]
1408:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10530              		.loc 1 1408 0
 10531 0978 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10532 097a 3449     		ldr	r1, .L479+4
 10533 097c 1346     		mov	r3, r2
 10534 097e DB00     		lsls	r3, r3, #3
 10535 0980 9B1A     		subs	r3, r3, r2
 10536 0982 1B01     		lsls	r3, r3, #4
 10537 0984 0B44     		add	r3, r3, r1
 10538 0986 03F58873 		add	r3, r3, #272
 10539 098a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10540 098c 1946     		mov	r1, r3
 10541 098e 2F4A     		ldr	r2, .L479+4
 10542 0990 0B46     		mov	r3, r1
 10543 0992 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 241


 10544 0994 0B44     		add	r3, r3, r1
 10545 0996 1B01     		lsls	r3, r3, #4
 10546 0998 1344     		add	r3, r3, r2
 10547 099a 03F5DB73 		add	r3, r3, #438
 10548 099e 0322     		movs	r2, #3
 10549 09a0 1A70     		strb	r2, [r3]
1409:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10550              		.loc 1 1409 0
 10551 09a2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10552 09a4 2949     		ldr	r1, .L479+4
 10553 09a6 1346     		mov	r3, r2
 10554 09a8 DB00     		lsls	r3, r3, #3
 10555 09aa 9B1A     		subs	r3, r3, r2
 10556 09ac 1B01     		lsls	r3, r3, #4
 10557 09ae 0B44     		add	r3, r3, r1
 10558 09b0 03F58873 		add	r3, r3, #272
 10559 09b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10560 09b6 1946     		mov	r1, r3
 10561 09b8 244A     		ldr	r2, .L479+4
 10562 09ba 0B46     		mov	r3, r1
 10563 09bc 5B00     		lsls	r3, r3, #1
 10564 09be 0B44     		add	r3, r3, r1
 10565 09c0 1B01     		lsls	r3, r3, #4
 10566 09c2 1344     		add	r3, r3, r2
 10567 09c4 03F2B713 		addw	r3, r3, #439
 10568 09c8 FF22     		movs	r2, #255
 10569 09ca 1A70     		strb	r2, [r3]
1410:..\src/command_processing.c ****                 
1411:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1412:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10570              		.loc 1 1412 0
 10571 09cc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10572 09ce 1F49     		ldr	r1, .L479+4
 10573 09d0 1346     		mov	r3, r2
 10574 09d2 DB00     		lsls	r3, r3, #3
 10575 09d4 9B1A     		subs	r3, r3, r2
 10576 09d6 1B01     		lsls	r3, r3, #4
 10577 09d8 0B44     		add	r3, r3, r1
 10578 09da 03F21113 		addw	r3, r3, #273
 10579 09de 0122     		movs	r2, #1
 10580 09e0 1A70     		strb	r2, [r3]
1413:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10581              		.loc 1 1413 0
 10582 09e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10583 09e4 1949     		ldr	r1, .L479+4
 10584 09e6 1346     		mov	r3, r2
 10585 09e8 DB00     		lsls	r3, r3, #3
 10586 09ea 9B1A     		subs	r3, r3, r2
 10587 09ec 1B01     		lsls	r3, r3, #4
 10588 09ee 0B44     		add	r3, r3, r1
 10589 09f0 03F58973 		add	r3, r3, #274
 10590 09f4 0122     		movs	r2, #1
 10591 09f6 1A70     		strb	r2, [r3]
1414:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10592              		.loc 1 1414 0
 10593 09f8 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10594 09fa 1449     		ldr	r1, .L479+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 242


 10595 09fc 1346     		mov	r3, r2
 10596 09fe DB00     		lsls	r3, r3, #3
 10597 0a00 9B1A     		subs	r3, r3, r2
 10598 0a02 1B01     		lsls	r3, r3, #4
 10599 0a04 0B44     		add	r3, r3, r1
 10600 0a06 E433     		adds	r3, r3, #228
 10601 0a08 0022     		movs	r2, #0
 10602 0a0a 1A60     		str	r2, [r3]
1415:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10603              		.loc 1 1415 0
 10604 0a0c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10605 0a0e 0F4B     		ldr	r3, .L479+4
 10606 0a10 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10607 0a14 1846     		mov	r0, r3
 10608 0a16 0D49     		ldr	r1, .L479+4
 10609 0a18 0346     		mov	r3, r0
 10610 0a1a 5B00     		lsls	r3, r3, #1
 10611 0a1c 0344     		add	r3, r3, r0
 10612 0a1e 1B01     		lsls	r3, r3, #4
 10613 0a20 0B44     		add	r3, r3, r1
 10614 0a22 03F29513 		addw	r3, r3, #405
 10615 0a26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10616 0a28 1946     		mov	r1, r3
 10617 0a2a 4FF47A53 		mov	r3, #16000
 10618 0a2e 03FA01F1 		lsl	r1, r3, r1
 10619 0a32 0648     		ldr	r0, .L479+4
 10620 0a34 1346     		mov	r3, r2
 10621 0a36 DB00     		lsls	r3, r3, #3
 10622 0a38 9B1A     		subs	r3, r3, r2
 10623 0a3a 1B01     		lsls	r3, r3, #4
 10624 0a3c 0344     		add	r3, r3, r0
 10625 0a3e E833     		adds	r3, r3, #232
 10626 0a40 1960     		str	r1, [r3]
1416:..\src/command_processing.c ****             }    
1417:..\src/command_processing.c **** 
1418:..\src/command_processing.c ****             break; 
 10627              		.loc 1 1418 0
 10628 0a42 00F013BD 		b	.L471
 10629              	.L480:
 10630 0a46 00BF     		.align	2
 10631              	.L479:
 10632 0a48 00000000 		.word	g_rx
 10633 0a4c 00000000 		.word	g_mem
 10634 0a50 00000000 		.word	reset_last_value_flag
 10635              	.L387:
1419:..\src/command_processing.c **** 
1420:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1421:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10636              		.loc 1 1421 0
 10637 0a54 A94B     		ldr	r3, .L481
 10638 0a56 DB78     		ldrb	r3, [r3, #3]
 10639 0a58 BB74     		strb	r3, [r7, #18]
1422:..\src/command_processing.c ****             if (aux_uchar) {
 10640              		.loc 1 1422 0
 10641 0a5a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10642 0a5c 002B     		cmp	r3, #0
 10643 0a5e 05D0     		beq	.L432
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 243


1423:..\src/command_processing.c ****                 reset_counters();
 10644              		.loc 1 1423 0
 10645 0a60 FFF7FEFF 		bl	reset_counters
1424:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10646              		.loc 1 1424 0
 10647 0a64 A64B     		ldr	r3, .L481+4
 10648 0a66 0022     		movs	r2, #0
 10649 0a68 83F8A820 		strb	r2, [r3, #168]
 10650              	.L432:
1425:..\src/command_processing.c ****             }
1426:..\src/command_processing.c ****             
1427:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10651              		.loc 1 1427 0
 10652 0a6c A54B     		ldr	r3, .L481+8
 10653 0a6e 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10654 0a72 012B     		cmp	r3, #1
 10655 0a74 40F0FC84 		bne	.L472
1428:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1429:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10656              		.loc 1 1429 0
 10657 0a78 8720     		movs	r0, #135
 10658 0a7a FFF7FEFF 		bl	DS1302_read
 10659 0a7e 0346     		mov	r3, r0
 10660 0a80 BB74     		strb	r3, [r7, #18]
1430:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10661              		.loc 1 1430 0
 10662 0a82 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10663 0a84 1B09     		lsrs	r3, r3, #4
 10664 0a86 DBB2     		uxtb	r3, r3
 10665 0a88 1A46     		mov	r2, r3
 10666 0a8a 9200     		lsls	r2, r2, #2
 10667 0a8c 1344     		add	r3, r3, r2
 10668 0a8e 5B00     		lsls	r3, r3, #1
 10669 0a90 DAB2     		uxtb	r2, r3
 10670 0a92 BB7C     		ldrb	r3, [r7, #18]
 10671 0a94 03F00F03 		and	r3, r3, #15
 10672 0a98 DBB2     		uxtb	r3, r3
 10673 0a9a 1344     		add	r3, r3, r2
 10674 0a9c DAB2     		uxtb	r2, r3
 10675 0a9e 984B     		ldr	r3, .L481+4
 10676 0aa0 83F8A420 		strb	r2, [r3, #164]
1431:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10677              		.loc 1 1431 0
 10678 0aa4 8920     		movs	r0, #137
 10679 0aa6 FFF7FEFF 		bl	DS1302_read
 10680 0aaa 0346     		mov	r3, r0
 10681 0aac BB74     		strb	r3, [r7, #18]
1432:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10682              		.loc 1 1432 0
 10683 0aae BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10684 0ab0 1B09     		lsrs	r3, r3, #4
 10685 0ab2 DBB2     		uxtb	r3, r3
 10686 0ab4 1A46     		mov	r2, r3
 10687 0ab6 9200     		lsls	r2, r2, #2
 10688 0ab8 1344     		add	r3, r3, r2
 10689 0aba 5B00     		lsls	r3, r3, #1
 10690 0abc DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 244


 10691 0abe BB7C     		ldrb	r3, [r7, #18]
 10692 0ac0 03F00F03 		and	r3, r3, #15
 10693 0ac4 DBB2     		uxtb	r3, r3
 10694 0ac6 1344     		add	r3, r3, r2
 10695 0ac8 DAB2     		uxtb	r2, r3
 10696 0aca 8D4B     		ldr	r3, .L481+4
 10697 0acc 83F8A520 		strb	r2, [r3, #165]
1433:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10698              		.loc 1 1433 0
 10699 0ad0 8D20     		movs	r0, #141
 10700 0ad2 FFF7FEFF 		bl	DS1302_read
 10701 0ad6 0346     		mov	r3, r0
 10702 0ad8 BB74     		strb	r3, [r7, #18]
1434:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10703              		.loc 1 1434 0
 10704 0ada BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10705 0adc 1B09     		lsrs	r3, r3, #4
 10706 0ade DBB2     		uxtb	r3, r3
 10707 0ae0 1A46     		mov	r2, r3
 10708 0ae2 9200     		lsls	r2, r2, #2
 10709 0ae4 1344     		add	r3, r3, r2
 10710 0ae6 5B00     		lsls	r3, r3, #1
 10711 0ae8 DAB2     		uxtb	r2, r3
 10712 0aea BB7C     		ldrb	r3, [r7, #18]
 10713 0aec 03F00F03 		and	r3, r3, #15
 10714 0af0 DBB2     		uxtb	r3, r3
 10715 0af2 1344     		add	r3, r3, r2
 10716 0af4 DAB2     		uxtb	r2, r3
 10717 0af6 824B     		ldr	r3, .L481+4
 10718 0af8 83F8A620 		strb	r2, [r3, #166]
1435:..\src/command_processing.c ****             }
1436:..\src/command_processing.c ****             break;             
 10719              		.loc 1 1436 0
 10720 0afc 00F0B8BC 		b	.L472
 10721              	.L388:
 10722              	.LBB15:
1437:..\src/command_processing.c ****             
1438:..\src/command_processing.c ****         case 32:         //Current Time
1439:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10723              		.loc 1 1439 0
 10724 0b00 0023     		movs	r3, #0
 10725 0b02 7B75     		strb	r3, [r7, #21]
 10726 0b04 0CE0     		b	.L434
 10727              	.L435:
1440:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10728              		.loc 1 1440 0 discriminator 3
 10729 0b06 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10730 0b08 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10731 0b0a 0332     		adds	r2, r2, #3
 10732 0b0c 7B49     		ldr	r1, .L481
 10733 0b0e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10734 0b10 7B4A     		ldr	r2, .L481+4
 10735 0b12 1344     		add	r3, r3, r2
 10736 0b14 0A46     		mov	r2, r1
 10737 0b16 83F82022 		strb	r2, [r3, #544]
1439:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10738              		.loc 1 1439 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 245


 10739 0b1a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10740 0b1c 0133     		adds	r3, r3, #1
 10741 0b1e 7B75     		strb	r3, [r7, #21]
 10742              	.L434:
1439:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10743              		.loc 1 1439 0 is_stmt 0 discriminator 1
 10744 0b20 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10745 0b22 052B     		cmp	r3, #5
 10746 0b24 EFD9     		bls	.L435
 10747              	.LBE15:
1441:..\src/command_processing.c ****             }
1442:..\src/command_processing.c ****             
1443:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10748              		.loc 1 1443 0 is_stmt 1
 10749 0b26 764B     		ldr	r3, .L481+4
 10750 0b28 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10751 0b2c 012B     		cmp	r3, #1
 10752 0b2e 40F0A184 		bne	.L473
1444:..\src/command_processing.c ****                 set_RTC_time();
 10753              		.loc 1 1444 0
 10754 0b32 FFF7FEFF 		bl	set_RTC_time
1445:..\src/command_processing.c ****             }
1446:..\src/command_processing.c ****             break;
 10755              		.loc 1 1446 0
 10756 0b36 00F09DBC 		b	.L473
 10757              	.L389:
1447:..\src/command_processing.c ****            
1448:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1449:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10758              		.loc 1 1449 0
 10759 0b3a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10760 0b3c 6F4B     		ldr	r3, .L481
 10761 0b3e D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10762 0b40 6F49     		ldr	r1, .L481+4
 10763 0b42 1346     		mov	r3, r2
 10764 0b44 DB00     		lsls	r3, r3, #3
 10765 0b46 9B1A     		subs	r3, r3, r2
 10766 0b48 1B01     		lsls	r3, r3, #4
 10767 0b4a 0B44     		add	r3, r3, r1
 10768 0b4c E233     		adds	r3, r3, #226
 10769 0b4e 0246     		mov	r2, r0
 10770 0b50 1A70     		strb	r2, [r3]
1450:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10771              		.loc 1 1450 0
 10772 0b52 6B4B     		ldr	r3, .L481+4
 10773 0b54 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10774 0b58 5B00     		lsls	r3, r3, #1
 10775 0b5a 5AB2     		sxtb	r2, r3
 10776 0b5c 684B     		ldr	r3, .L481+4
 10777 0b5e 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10778 0b62 5BB2     		sxtb	r3, r3
 10779 0b64 1343     		orrs	r3, r3, r2
 10780 0b66 5BB2     		sxtb	r3, r3
 10781 0b68 DBB2     		uxtb	r3, r3
 10782 0b6a 1846     		mov	r0, r3
 10783 0b6c FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1451:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 246


 10784              		.loc 1 1451 0
 10785 0b70 00F083BC 		b	.L411
 10786              	.L390:
1452:..\src/command_processing.c ****             
1453:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1454:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10787              		.loc 1 1454 0
 10788 0b74 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10789 0b76 6349     		ldr	r1, .L481+8
 10790 0b78 1346     		mov	r3, r2
 10791 0b7a DB00     		lsls	r3, r3, #3
 10792 0b7c 9B1A     		subs	r3, r3, r2
 10793 0b7e 1B01     		lsls	r3, r3, #4
 10794 0b80 0B44     		add	r3, r3, r1
 10795 0b82 03F20F13 		addw	r3, r3, #271
 10796 0b86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10797 0b88 032B     		cmp	r3, #3
 10798 0b8a 00F08580 		beq	.L437
1455:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10799              		.loc 1 1455 0
 10800 0b8e 5E4B     		ldr	r3, .L481+12
 10801 0b90 1B68     		ldr	r3, [r3]	@ float
 10802 0b92 FB60     		str	r3, [r7, #12]	@ float
1456:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10803              		.loc 1 1456 0
 10804 0b94 0023     		movs	r3, #0
 10805 0b96 BB75     		strb	r3, [r7, #22]
 10806 0b98 0EE0     		b	.L438
 10807              	.L439:
1457:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10808              		.loc 1 1457 0 discriminator 3
 10809 0b9a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10810 0b9c C3F10303 		rsb	r3, r3, #3
 10811 0ba0 07F10802 		add	r2, r7, #8
 10812 0ba4 1344     		add	r3, r3, r2
 10813 0ba6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10814 0ba8 07F10C01 		add	r1, r7, #12
 10815 0bac 0A44     		add	r2, r2, r1
 10816 0bae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10817 0bb0 1A70     		strb	r2, [r3]
1456:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10818              		.loc 1 1456 0 discriminator 3
 10819 0bb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10820 0bb4 0133     		adds	r3, r3, #1
 10821 0bb6 BB75     		strb	r3, [r7, #22]
 10822              	.L438:
1456:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10823              		.loc 1 1456 0 is_stmt 0 discriminator 1
 10824 0bb8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10825 0bba 032B     		cmp	r3, #3
 10826 0bbc EDD9     		bls	.L439
1458:..\src/command_processing.c ****                 }
1459:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10827              		.loc 1 1459 0 is_stmt 1
 10828 0bbe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10829 0bc0 BB68     		ldr	r3, [r7, #8]	@ float
 10830 0bc2 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 247


 10831 0bc6 1846     		mov	r0, r3
 10832 0bc8 FFF7FEFF 		bl	__aeabi_fmul
 10833 0bcc 0346     		mov	r3, r0
 10834 0bce 1846     		mov	r0, r3
 10835 0bd0 FFF7FEFF 		bl	__aeabi_f2iz
 10836 0bd4 0146     		mov	r1, r0
 10837 0bd6 4A4A     		ldr	r2, .L481+4
 10838 0bd8 2346     		mov	r3, r4
 10839 0bda DB00     		lsls	r3, r3, #3
 10840 0bdc 1B1B     		subs	r3, r3, r4
 10841 0bde 1B01     		lsls	r3, r3, #4
 10842 0be0 1344     		add	r3, r3, r2
 10843 0be2 B033     		adds	r3, r3, #176
 10844 0be4 1960     		str	r1, [r3]
1460:..\src/command_processing.c ****                 
1461:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10845              		.loc 1 1461 0
 10846 0be6 494B     		ldr	r3, .L481+16
 10847 0be8 1B68     		ldr	r3, [r3]	@ float
 10848 0bea FB60     		str	r3, [r7, #12]	@ float
1462:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10849              		.loc 1 1462 0
 10850 0bec 0023     		movs	r3, #0
 10851 0bee BB75     		strb	r3, [r7, #22]
 10852 0bf0 0EE0     		b	.L440
 10853              	.L441:
1463:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10854              		.loc 1 1463 0 discriminator 3
 10855 0bf2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10856 0bf4 C3F10303 		rsb	r3, r3, #3
 10857 0bf8 07F10802 		add	r2, r7, #8
 10858 0bfc 1344     		add	r3, r3, r2
 10859 0bfe BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10860 0c00 07F10C01 		add	r1, r7, #12
 10861 0c04 0A44     		add	r2, r2, r1
 10862 0c06 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10863 0c08 1A70     		strb	r2, [r3]
1462:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10864              		.loc 1 1462 0 discriminator 3
 10865 0c0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10866 0c0c 0133     		adds	r3, r3, #1
 10867 0c0e BB75     		strb	r3, [r7, #22]
 10868              	.L440:
1462:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10869              		.loc 1 1462 0 is_stmt 0 discriminator 1
 10870 0c10 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10871 0c12 032B     		cmp	r3, #3
 10872 0c14 EDD9     		bls	.L441
1464:..\src/command_processing.c ****                 }
1465:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10873              		.loc 1 1465 0 is_stmt 1
 10874 0c16 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10875 0c18 BB68     		ldr	r3, [r7, #8]	@ float
 10876 0c1a 4FF08F41 		mov	r1, #1199570944
 10877 0c1e 1846     		mov	r0, r3
 10878 0c20 FFF7FEFF 		bl	__aeabi_fmul
 10879 0c24 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 248


 10880 0c26 1846     		mov	r0, r3
 10881 0c28 FFF7FEFF 		bl	__aeabi_f2iz
 10882 0c2c 0146     		mov	r1, r0
 10883 0c2e 344A     		ldr	r2, .L481+4
 10884 0c30 2346     		mov	r3, r4
 10885 0c32 DB00     		lsls	r3, r3, #3
 10886 0c34 1B1B     		subs	r3, r3, r4
 10887 0c36 1B01     		lsls	r3, r3, #4
 10888 0c38 1344     		add	r3, r3, r2
 10889 0c3a B433     		adds	r3, r3, #180
 10890 0c3c 1960     		str	r1, [r3]
1466:..\src/command_processing.c ****                 
1467:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10891              		.loc 1 1467 0
 10892 0c3e 344B     		ldr	r3, .L481+20
 10893 0c40 1B68     		ldr	r3, [r3]	@ float
 10894 0c42 FB60     		str	r3, [r7, #12]	@ float
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10895              		.loc 1 1468 0
 10896 0c44 0023     		movs	r3, #0
 10897 0c46 BB75     		strb	r3, [r7, #22]
 10898 0c48 0EE0     		b	.L442
 10899              	.L443:
1469:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10900              		.loc 1 1469 0 discriminator 3
 10901 0c4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10902 0c4c C3F10303 		rsb	r3, r3, #3
 10903 0c50 07F10802 		add	r2, r7, #8
 10904 0c54 1344     		add	r3, r3, r2
 10905 0c56 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10906 0c58 07F10C01 		add	r1, r7, #12
 10907 0c5c 0A44     		add	r2, r2, r1
 10908 0c5e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10909 0c60 1A70     		strb	r2, [r3]
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10910              		.loc 1 1468 0 discriminator 3
 10911 0c62 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10912 0c64 0133     		adds	r3, r3, #1
 10913 0c66 BB75     		strb	r3, [r7, #22]
 10914              	.L442:
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10915              		.loc 1 1468 0 is_stmt 0 discriminator 1
 10916 0c68 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10917 0c6a 032B     		cmp	r3, #3
 10918 0c6c EDD9     		bls	.L443
1470:..\src/command_processing.c ****                 }
1471:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 10919              		.loc 1 1471 0 is_stmt 1
 10920 0c6e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10921 0c70 BB68     		ldr	r3, [r7, #8]	@ float
 10922 0c72 4FF08F41 		mov	r1, #1199570944
 10923 0c76 1846     		mov	r0, r3
 10924 0c78 FFF7FEFF 		bl	__aeabi_fmul
 10925 0c7c 0346     		mov	r3, r0
 10926 0c7e 1846     		mov	r0, r3
 10927 0c80 FFF7FEFF 		bl	__aeabi_f2iz
 10928 0c84 0146     		mov	r1, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 249


 10929 0c86 1E4A     		ldr	r2, .L481+4
 10930 0c88 2346     		mov	r3, r4
 10931 0c8a DB00     		lsls	r3, r3, #3
 10932 0c8c 1B1B     		subs	r3, r3, r4
 10933 0c8e 1B01     		lsls	r3, r3, #4
 10934 0c90 1344     		add	r3, r3, r2
 10935 0c92 B833     		adds	r3, r3, #184
 10936 0c94 1960     		str	r1, [r3]
1472:..\src/command_processing.c ****             }
1473:..\src/command_processing.c ****             else {
1474:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1475:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1476:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1477:..\src/command_processing.c ****                 }
1478:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1479:..\src/command_processing.c ****                 
1480:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1481:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1482:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1483:..\src/command_processing.c ****                 }
1484:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1485:..\src/command_processing.c ****                 
1486:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1487:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1488:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1489:..\src/command_processing.c ****                 }
1490:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1491:..\src/command_processing.c ****             }
1492:..\src/command_processing.c ****             break;
 10937              		.loc 1 1492 0
 10938 0c96 F0E3     		b	.L411
 10939              	.L437:
1474:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10940              		.loc 1 1474 0
 10941 0c98 1B4B     		ldr	r3, .L481+12
 10942 0c9a 1B68     		ldr	r3, [r3]	@ float
 10943 0c9c FB60     		str	r3, [r7, #12]	@ float
1475:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10944              		.loc 1 1475 0
 10945 0c9e 0023     		movs	r3, #0
 10946 0ca0 BB75     		strb	r3, [r7, #22]
 10947 0ca2 0EE0     		b	.L445
 10948              	.L446:
1476:..\src/command_processing.c ****                 }
 10949              		.loc 1 1476 0 discriminator 3
 10950 0ca4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10951 0ca6 C3F10303 		rsb	r3, r3, #3
 10952 0caa 07F10802 		add	r2, r7, #8
 10953 0cae 1344     		add	r3, r3, r2
 10954 0cb0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10955 0cb2 07F10C01 		add	r1, r7, #12
 10956 0cb6 0A44     		add	r2, r2, r1
 10957 0cb8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10958 0cba 1A70     		strb	r2, [r3]
1475:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10959              		.loc 1 1475 0 discriminator 3
 10960 0cbc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 250


 10961 0cbe 0133     		adds	r3, r3, #1
 10962 0cc0 BB75     		strb	r3, [r7, #22]
 10963              	.L445:
1475:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10964              		.loc 1 1475 0 is_stmt 0 discriminator 1
 10965 0cc2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10966 0cc4 032B     		cmp	r3, #3
 10967 0cc6 EDD9     		bls	.L446
1478:..\src/command_processing.c ****                 
 10968              		.loc 1 1478 0 is_stmt 1
 10969 0cc8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10970 0cca BB68     		ldr	r3, [r7, #8]	@ float
 10971 0ccc 4FF08F41 		mov	r1, #1199570944
 10972 0cd0 1846     		mov	r0, r3
 10973 0cd2 FFF7FEFF 		bl	__aeabi_fmul
 10974 0cd6 0346     		mov	r3, r0
 10975 0cd8 1846     		mov	r0, r3
 10976 0cda FFF7FEFF 		bl	__aeabi_f2iz
 10977 0cde 0146     		mov	r1, r0
 10978 0ce0 074A     		ldr	r2, .L481+4
 10979 0ce2 2346     		mov	r3, r4
 10980 0ce4 DB00     		lsls	r3, r3, #3
 10981 0ce6 1B1B     		subs	r3, r3, r4
 10982 0ce8 1B01     		lsls	r3, r3, #4
 10983 0cea 1344     		add	r3, r3, r2
 10984 0cec C833     		adds	r3, r3, #200
 10985 0cee 1960     		str	r1, [r3]
1480:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10986              		.loc 1 1480 0
 10987 0cf0 064B     		ldr	r3, .L481+16
 10988 0cf2 1B68     		ldr	r3, [r3]	@ float
 10989 0cf4 FB60     		str	r3, [r7, #12]	@ float
1481:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10990              		.loc 1 1481 0
 10991 0cf6 0023     		movs	r3, #0
 10992 0cf8 BB75     		strb	r3, [r7, #22]
 10993 0cfa 1AE0     		b	.L447
 10994              	.L482:
 10995              		.align	2
 10996              	.L481:
 10997 0cfc 00000000 		.word	g_rx
 10998 0d00 00000000 		.word	g_mem
 10999 0d04 00000000 		.word	c_mem
 11000 0d08 03000000 		.word	g_rx+3
 11001 0d0c 07000000 		.word	g_rx+7
 11002 0d10 0B000000 		.word	g_rx+11
 11003              	.L448:
1482:..\src/command_processing.c ****                 }
 11004              		.loc 1 1482 0 discriminator 3
 11005 0d14 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11006 0d16 C3F10303 		rsb	r3, r3, #3
 11007 0d1a 07F10802 		add	r2, r7, #8
 11008 0d1e 1344     		add	r3, r3, r2
 11009 0d20 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11010 0d22 07F10C01 		add	r1, r7, #12
 11011 0d26 0A44     		add	r2, r2, r1
 11012 0d28 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 251


 11013 0d2a 1A70     		strb	r2, [r3]
1481:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11014              		.loc 1 1481 0 discriminator 3
 11015 0d2c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11016 0d2e 0133     		adds	r3, r3, #1
 11017 0d30 BB75     		strb	r3, [r7, #22]
 11018              	.L447:
1481:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11019              		.loc 1 1481 0 is_stmt 0 discriminator 1
 11020 0d32 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11021 0d34 032B     		cmp	r3, #3
 11022 0d36 EDD9     		bls	.L448
1484:..\src/command_processing.c ****                 
 11023              		.loc 1 1484 0 is_stmt 1
 11024 0d38 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11025 0d3a BB68     		ldr	r3, [r7, #8]	@ float
 11026 0d3c 4FF08F41 		mov	r1, #1199570944
 11027 0d40 1846     		mov	r0, r3
 11028 0d42 FFF7FEFF 		bl	__aeabi_fmul
 11029 0d46 0346     		mov	r3, r0
 11030 0d48 1846     		mov	r0, r3
 11031 0d4a FFF7FEFF 		bl	__aeabi_f2iz
 11032 0d4e 0146     		mov	r1, r0
 11033 0d50 B74A     		ldr	r2, .L483
 11034 0d52 2346     		mov	r3, r4
 11035 0d54 DB00     		lsls	r3, r3, #3
 11036 0d56 1B1B     		subs	r3, r3, r4
 11037 0d58 1B01     		lsls	r3, r3, #4
 11038 0d5a 1344     		add	r3, r3, r2
 11039 0d5c CC33     		adds	r3, r3, #204
 11040 0d5e 1960     		str	r1, [r3]
1486:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11041              		.loc 1 1486 0
 11042 0d60 B44B     		ldr	r3, .L483+4
 11043 0d62 1B68     		ldr	r3, [r3]	@ float
 11044 0d64 FB60     		str	r3, [r7, #12]	@ float
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11045              		.loc 1 1487 0
 11046 0d66 0023     		movs	r3, #0
 11047 0d68 BB75     		strb	r3, [r7, #22]
 11048 0d6a 0EE0     		b	.L449
 11049              	.L450:
1488:..\src/command_processing.c ****                 }
 11050              		.loc 1 1488 0 discriminator 3
 11051 0d6c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11052 0d6e C3F10303 		rsb	r3, r3, #3
 11053 0d72 07F10802 		add	r2, r7, #8
 11054 0d76 1344     		add	r3, r3, r2
 11055 0d78 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11056 0d7a 07F10C01 		add	r1, r7, #12
 11057 0d7e 0A44     		add	r2, r2, r1
 11058 0d80 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11059 0d82 1A70     		strb	r2, [r3]
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11060              		.loc 1 1487 0 discriminator 3
 11061 0d84 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11062 0d86 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 252


 11063 0d88 BB75     		strb	r3, [r7, #22]
 11064              	.L449:
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11065              		.loc 1 1487 0 is_stmt 0 discriminator 1
 11066 0d8a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11067 0d8c 032B     		cmp	r3, #3
 11068 0d8e EDD9     		bls	.L450
1490:..\src/command_processing.c ****             }
 11069              		.loc 1 1490 0 is_stmt 1
 11070 0d90 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11071 0d92 BB68     		ldr	r3, [r7, #8]	@ float
 11072 0d94 4FF08F41 		mov	r1, #1199570944
 11073 0d98 1846     		mov	r0, r3
 11074 0d9a FFF7FEFF 		bl	__aeabi_fmul
 11075 0d9e 0346     		mov	r3, r0
 11076 0da0 1846     		mov	r0, r3
 11077 0da2 FFF7FEFF 		bl	__aeabi_f2iz
 11078 0da6 0146     		mov	r1, r0
 11079 0da8 A14A     		ldr	r2, .L483
 11080 0daa 2346     		mov	r3, r4
 11081 0dac DB00     		lsls	r3, r3, #3
 11082 0dae 1B1B     		subs	r3, r3, r4
 11083 0db0 1B01     		lsls	r3, r3, #4
 11084 0db2 1344     		add	r3, r3, r2
 11085 0db4 D033     		adds	r3, r3, #208
 11086 0db6 1960     		str	r1, [r3]
 11087              		.loc 1 1492 0
 11088 0db8 5FE3     		b	.L411
 11089              	.L391:
1493:..\src/command_processing.c ****             
1494:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1495:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11090              		.loc 1 1495 0
 11091 0dba FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11092 0dbc 9E49     		ldr	r1, .L483+8
 11093 0dbe 1346     		mov	r3, r2
 11094 0dc0 DB00     		lsls	r3, r3, #3
 11095 0dc2 9B1A     		subs	r3, r3, r2
 11096 0dc4 1B01     		lsls	r3, r3, #4
 11097 0dc6 0B44     		add	r3, r3, r1
 11098 0dc8 03F20F13 		addw	r3, r3, #271
 11099 0dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11100 0dce 032B     		cmp	r3, #3
 11101 0dd0 00F08580 		beq	.L451
1496:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11102              		.loc 1 1496 0
 11103 0dd4 994B     		ldr	r3, .L483+12
 11104 0dd6 1B68     		ldr	r3, [r3]	@ float
 11105 0dd8 FB60     		str	r3, [r7, #12]	@ float
1497:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11106              		.loc 1 1497 0
 11107 0dda 0023     		movs	r3, #0
 11108 0ddc BB75     		strb	r3, [r7, #22]
 11109 0dde 0EE0     		b	.L452
 11110              	.L453:
1498:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11111              		.loc 1 1498 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 253


 11112 0de0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11113 0de2 C3F10303 		rsb	r3, r3, #3
 11114 0de6 07F10802 		add	r2, r7, #8
 11115 0dea 1344     		add	r3, r3, r2
 11116 0dec BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11117 0dee 07F10C01 		add	r1, r7, #12
 11118 0df2 0A44     		add	r2, r2, r1
 11119 0df4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11120 0df6 1A70     		strb	r2, [r3]
1497:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11121              		.loc 1 1497 0 discriminator 3
 11122 0df8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11123 0dfa 0133     		adds	r3, r3, #1
 11124 0dfc BB75     		strb	r3, [r7, #22]
 11125              	.L452:
1497:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11126              		.loc 1 1497 0 is_stmt 0 discriminator 1
 11127 0dfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11128 0e00 032B     		cmp	r3, #3
 11129 0e02 EDD9     		bls	.L453
1499:..\src/command_processing.c ****                 }
1500:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11130              		.loc 1 1500 0 is_stmt 1
 11131 0e04 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11132 0e06 BB68     		ldr	r3, [r7, #8]	@ float
 11133 0e08 4FF08F41 		mov	r1, #1199570944
 11134 0e0c 1846     		mov	r0, r3
 11135 0e0e FFF7FEFF 		bl	__aeabi_fmul
 11136 0e12 0346     		mov	r3, r0
 11137 0e14 1846     		mov	r0, r3
 11138 0e16 FFF7FEFF 		bl	__aeabi_f2iz
 11139 0e1a 0146     		mov	r1, r0
 11140 0e1c 844A     		ldr	r2, .L483
 11141 0e1e 2346     		mov	r3, r4
 11142 0e20 DB00     		lsls	r3, r3, #3
 11143 0e22 1B1B     		subs	r3, r3, r4
 11144 0e24 1B01     		lsls	r3, r3, #4
 11145 0e26 1344     		add	r3, r3, r2
 11146 0e28 BC33     		adds	r3, r3, #188
 11147 0e2a 1960     		str	r1, [r3]
1501:..\src/command_processing.c ****                 
1502:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11148              		.loc 1 1502 0
 11149 0e2c 844B     		ldr	r3, .L483+16
 11150 0e2e 1B68     		ldr	r3, [r3]	@ float
 11151 0e30 FB60     		str	r3, [r7, #12]	@ float
1503:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11152              		.loc 1 1503 0
 11153 0e32 0023     		movs	r3, #0
 11154 0e34 BB75     		strb	r3, [r7, #22]
 11155 0e36 0EE0     		b	.L454
 11156              	.L455:
1504:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11157              		.loc 1 1504 0 discriminator 3
 11158 0e38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11159 0e3a C3F10303 		rsb	r3, r3, #3
 11160 0e3e 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 254


 11161 0e42 1344     		add	r3, r3, r2
 11162 0e44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11163 0e46 07F10C01 		add	r1, r7, #12
 11164 0e4a 0A44     		add	r2, r2, r1
 11165 0e4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11166 0e4e 1A70     		strb	r2, [r3]
1503:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11167              		.loc 1 1503 0 discriminator 3
 11168 0e50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11169 0e52 0133     		adds	r3, r3, #1
 11170 0e54 BB75     		strb	r3, [r7, #22]
 11171              	.L454:
1503:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11172              		.loc 1 1503 0 is_stmt 0 discriminator 1
 11173 0e56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11174 0e58 032B     		cmp	r3, #3
 11175 0e5a EDD9     		bls	.L455
1505:..\src/command_processing.c ****                 }
1506:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11176              		.loc 1 1506 0 is_stmt 1
 11177 0e5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11178 0e5e BB68     		ldr	r3, [r7, #8]	@ float
 11179 0e60 4FF08F41 		mov	r1, #1199570944
 11180 0e64 1846     		mov	r0, r3
 11181 0e66 FFF7FEFF 		bl	__aeabi_fmul
 11182 0e6a 0346     		mov	r3, r0
 11183 0e6c 1846     		mov	r0, r3
 11184 0e6e FFF7FEFF 		bl	__aeabi_f2iz
 11185 0e72 0146     		mov	r1, r0
 11186 0e74 6E4A     		ldr	r2, .L483
 11187 0e76 2346     		mov	r3, r4
 11188 0e78 DB00     		lsls	r3, r3, #3
 11189 0e7a 1B1B     		subs	r3, r3, r4
 11190 0e7c 1B01     		lsls	r3, r3, #4
 11191 0e7e 1344     		add	r3, r3, r2
 11192 0e80 C033     		adds	r3, r3, #192
 11193 0e82 1960     		str	r1, [r3]
1507:..\src/command_processing.c ****                 
1508:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11194              		.loc 1 1508 0
 11195 0e84 6B4B     		ldr	r3, .L483+4
 11196 0e86 1B68     		ldr	r3, [r3]	@ float
 11197 0e88 FB60     		str	r3, [r7, #12]	@ float
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11198              		.loc 1 1509 0
 11199 0e8a 0023     		movs	r3, #0
 11200 0e8c BB75     		strb	r3, [r7, #22]
 11201 0e8e 0EE0     		b	.L456
 11202              	.L457:
1510:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11203              		.loc 1 1510 0 discriminator 3
 11204 0e90 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11205 0e92 C3F10303 		rsb	r3, r3, #3
 11206 0e96 07F10802 		add	r2, r7, #8
 11207 0e9a 1344     		add	r3, r3, r2
 11208 0e9c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11209 0e9e 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 255


 11210 0ea2 0A44     		add	r2, r2, r1
 11211 0ea4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11212 0ea6 1A70     		strb	r2, [r3]
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11213              		.loc 1 1509 0 discriminator 3
 11214 0ea8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11215 0eaa 0133     		adds	r3, r3, #1
 11216 0eac BB75     		strb	r3, [r7, #22]
 11217              	.L456:
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11218              		.loc 1 1509 0 is_stmt 0 discriminator 1
 11219 0eae BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11220 0eb0 032B     		cmp	r3, #3
 11221 0eb2 EDD9     		bls	.L457
1511:..\src/command_processing.c ****                 }
1512:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11222              		.loc 1 1512 0 is_stmt 1
 11223 0eb4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11224 0eb6 BB68     		ldr	r3, [r7, #8]	@ float
 11225 0eb8 4FF08F41 		mov	r1, #1199570944
 11226 0ebc 1846     		mov	r0, r3
 11227 0ebe FFF7FEFF 		bl	__aeabi_fmul
 11228 0ec2 0346     		mov	r3, r0
 11229 0ec4 1846     		mov	r0, r3
 11230 0ec6 FFF7FEFF 		bl	__aeabi_f2iz
 11231 0eca 0146     		mov	r1, r0
 11232 0ecc 584A     		ldr	r2, .L483
 11233 0ece 2346     		mov	r3, r4
 11234 0ed0 DB00     		lsls	r3, r3, #3
 11235 0ed2 1B1B     		subs	r3, r3, r4
 11236 0ed4 1B01     		lsls	r3, r3, #4
 11237 0ed6 1344     		add	r3, r3, r2
 11238 0ed8 C433     		adds	r3, r3, #196
 11239 0eda 1960     		str	r1, [r3]
1513:..\src/command_processing.c ****             }
1514:..\src/command_processing.c ****             else {
1515:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1516:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1517:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1518:..\src/command_processing.c ****                 }
1519:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1520:..\src/command_processing.c ****                 
1521:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1522:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1523:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1524:..\src/command_processing.c ****                 }
1525:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1526:..\src/command_processing.c ****                 
1527:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1528:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1529:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1530:..\src/command_processing.c ****                 }
1531:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1532:..\src/command_processing.c ****             }            
1533:..\src/command_processing.c ****             break;  
 11240              		.loc 1 1533 0
 11241 0edc CDE2     		b	.L411
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 256


 11242              	.L451:
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11243              		.loc 1 1515 0
 11244 0ede 574B     		ldr	r3, .L483+12
 11245 0ee0 1B68     		ldr	r3, [r3]	@ float
 11246 0ee2 FB60     		str	r3, [r7, #12]	@ float
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11247              		.loc 1 1516 0
 11248 0ee4 0023     		movs	r3, #0
 11249 0ee6 BB75     		strb	r3, [r7, #22]
 11250 0ee8 0EE0     		b	.L459
 11251              	.L460:
1517:..\src/command_processing.c ****                 }
 11252              		.loc 1 1517 0 discriminator 3
 11253 0eea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11254 0eec C3F10303 		rsb	r3, r3, #3
 11255 0ef0 07F10802 		add	r2, r7, #8
 11256 0ef4 1344     		add	r3, r3, r2
 11257 0ef6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11258 0ef8 07F10C01 		add	r1, r7, #12
 11259 0efc 0A44     		add	r2, r2, r1
 11260 0efe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11261 0f00 1A70     		strb	r2, [r3]
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11262              		.loc 1 1516 0 discriminator 3
 11263 0f02 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11264 0f04 0133     		adds	r3, r3, #1
 11265 0f06 BB75     		strb	r3, [r7, #22]
 11266              	.L459:
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11267              		.loc 1 1516 0 is_stmt 0 discriminator 1
 11268 0f08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11269 0f0a 032B     		cmp	r3, #3
 11270 0f0c EDD9     		bls	.L460
1519:..\src/command_processing.c ****                 
 11271              		.loc 1 1519 0 is_stmt 1
 11272 0f0e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11273 0f10 BB68     		ldr	r3, [r7, #8]	@ float
 11274 0f12 4FF08F41 		mov	r1, #1199570944
 11275 0f16 1846     		mov	r0, r3
 11276 0f18 FFF7FEFF 		bl	__aeabi_fmul
 11277 0f1c 0346     		mov	r3, r0
 11278 0f1e 1846     		mov	r0, r3
 11279 0f20 FFF7FEFF 		bl	__aeabi_f2iz
 11280 0f24 0146     		mov	r1, r0
 11281 0f26 424A     		ldr	r2, .L483
 11282 0f28 2346     		mov	r3, r4
 11283 0f2a DB00     		lsls	r3, r3, #3
 11284 0f2c 1B1B     		subs	r3, r3, r4
 11285 0f2e 1B01     		lsls	r3, r3, #4
 11286 0f30 1344     		add	r3, r3, r2
 11287 0f32 D433     		adds	r3, r3, #212
 11288 0f34 1960     		str	r1, [r3]
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11289              		.loc 1 1521 0
 11290 0f36 424B     		ldr	r3, .L483+16
 11291 0f38 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 257


 11292 0f3a FB60     		str	r3, [r7, #12]	@ float
1522:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11293              		.loc 1 1522 0
 11294 0f3c 0023     		movs	r3, #0
 11295 0f3e BB75     		strb	r3, [r7, #22]
 11296 0f40 0EE0     		b	.L461
 11297              	.L462:
1523:..\src/command_processing.c ****                 }
 11298              		.loc 1 1523 0 discriminator 3
 11299 0f42 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11300 0f44 C3F10303 		rsb	r3, r3, #3
 11301 0f48 07F10802 		add	r2, r7, #8
 11302 0f4c 1344     		add	r3, r3, r2
 11303 0f4e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11304 0f50 07F10C01 		add	r1, r7, #12
 11305 0f54 0A44     		add	r2, r2, r1
 11306 0f56 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11307 0f58 1A70     		strb	r2, [r3]
1522:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11308              		.loc 1 1522 0 discriminator 3
 11309 0f5a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11310 0f5c 0133     		adds	r3, r3, #1
 11311 0f5e BB75     		strb	r3, [r7, #22]
 11312              	.L461:
1522:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11313              		.loc 1 1522 0 is_stmt 0 discriminator 1
 11314 0f60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11315 0f62 032B     		cmp	r3, #3
 11316 0f64 EDD9     		bls	.L462
1525:..\src/command_processing.c ****                 
 11317              		.loc 1 1525 0 is_stmt 1
 11318 0f66 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11319 0f68 BB68     		ldr	r3, [r7, #8]	@ float
 11320 0f6a 4FF08F41 		mov	r1, #1199570944
 11321 0f6e 1846     		mov	r0, r3
 11322 0f70 FFF7FEFF 		bl	__aeabi_fmul
 11323 0f74 0346     		mov	r3, r0
 11324 0f76 1846     		mov	r0, r3
 11325 0f78 FFF7FEFF 		bl	__aeabi_f2iz
 11326 0f7c 0146     		mov	r1, r0
 11327 0f7e 2C4A     		ldr	r2, .L483
 11328 0f80 2346     		mov	r3, r4
 11329 0f82 DB00     		lsls	r3, r3, #3
 11330 0f84 1B1B     		subs	r3, r3, r4
 11331 0f86 1B01     		lsls	r3, r3, #4
 11332 0f88 1344     		add	r3, r3, r2
 11333 0f8a D833     		adds	r3, r3, #216
 11334 0f8c 1960     		str	r1, [r3]
1527:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11335              		.loc 1 1527 0
 11336 0f8e 294B     		ldr	r3, .L483+4
 11337 0f90 1B68     		ldr	r3, [r3]	@ float
 11338 0f92 FB60     		str	r3, [r7, #12]	@ float
1528:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11339              		.loc 1 1528 0
 11340 0f94 0023     		movs	r3, #0
 11341 0f96 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 258


 11342 0f98 0EE0     		b	.L463
 11343              	.L464:
1529:..\src/command_processing.c ****                 }
 11344              		.loc 1 1529 0 discriminator 3
 11345 0f9a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11346 0f9c C3F10303 		rsb	r3, r3, #3
 11347 0fa0 07F10802 		add	r2, r7, #8
 11348 0fa4 1344     		add	r3, r3, r2
 11349 0fa6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11350 0fa8 07F10C01 		add	r1, r7, #12
 11351 0fac 0A44     		add	r2, r2, r1
 11352 0fae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11353 0fb0 1A70     		strb	r2, [r3]
1528:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11354              		.loc 1 1528 0 discriminator 3
 11355 0fb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11356 0fb4 0133     		adds	r3, r3, #1
 11357 0fb6 BB75     		strb	r3, [r7, #22]
 11358              	.L463:
1528:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11359              		.loc 1 1528 0 is_stmt 0 discriminator 1
 11360 0fb8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11361 0fba 032B     		cmp	r3, #3
 11362 0fbc EDD9     		bls	.L464
1531:..\src/command_processing.c ****             }            
 11363              		.loc 1 1531 0 is_stmt 1
 11364 0fbe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11365 0fc0 BB68     		ldr	r3, [r7, #8]	@ float
 11366 0fc2 4FF08F41 		mov	r1, #1199570944
 11367 0fc6 1846     		mov	r0, r3
 11368 0fc8 FFF7FEFF 		bl	__aeabi_fmul
 11369 0fcc 0346     		mov	r3, r0
 11370 0fce 1846     		mov	r0, r3
 11371 0fd0 FFF7FEFF 		bl	__aeabi_f2iz
 11372 0fd4 0146     		mov	r1, r0
 11373 0fd6 164A     		ldr	r2, .L483
 11374 0fd8 2346     		mov	r3, r4
 11375 0fda DB00     		lsls	r3, r3, #3
 11376 0fdc 1B1B     		subs	r3, r3, r4
 11377 0fde 1B01     		lsls	r3, r3, #4
 11378 0fe0 1344     		add	r3, r3, r2
 11379 0fe2 DC33     		adds	r3, r3, #220
 11380 0fe4 1960     		str	r1, [r3]
 11381              		.loc 1 1533 0
 11382 0fe6 48E2     		b	.L411
 11383              	.L392:
1534:..\src/command_processing.c ****             
1535:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1536:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11384              		.loc 1 1536 0
 11385 0fe8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11386 0fea 164B     		ldr	r3, .L483+20
 11387 0fec D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11388 0fee 1049     		ldr	r1, .L483
 11389 0ff0 1346     		mov	r3, r2
 11390 0ff2 DB00     		lsls	r3, r3, #3
 11391 0ff4 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 259


 11392 0ff6 1B01     		lsls	r3, r3, #4
 11393 0ff8 0B44     		add	r3, r3, r1
 11394 0ffa 03F58773 		add	r3, r3, #270
 11395 0ffe 0246     		mov	r2, r0
 11396 1000 1A70     		strb	r2, [r3]
1537:..\src/command_processing.c ****             
1538:..\src/command_processing.c ****             // Hold the actual position
1539:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11397              		.loc 1 1539 0
 11398 1002 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11399 1004 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11400 1006 0A48     		ldr	r0, .L483
 11401 1008 1346     		mov	r3, r2
 11402 100a DB00     		lsls	r3, r3, #3
 11403 100c 9B1A     		subs	r3, r3, r2
 11404 100e 1B01     		lsls	r3, r3, #4
 11405 1010 0344     		add	r3, r3, r0
 11406 1012 03F58873 		add	r3, r3, #272
 11407 1016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11408 1018 1846     		mov	r0, r3
 11409 101a 0B4A     		ldr	r2, .L483+24
 11410 101c 3423     		movs	r3, #52
 11411 101e 03FB00F3 		mul	r3, r3, r0
 11412 1022 1344     		add	r3, r3, r2
 11413 1024 1A68     		ldr	r2, [r3]
 11414 1026 0948     		ldr	r0, .L483+28
 11415 1028 0B01     		lsls	r3, r1, #4
 11416 102a 0344     		add	r3, r3, r0
 11417 102c 1A60     		str	r2, [r3]
1540:..\src/command_processing.c ****             break;   
 11418              		.loc 1 1540 0
 11419 102e 24E2     		b	.L411
 11420              	.L484:
 11421              		.align	2
 11422              	.L483:
 11423 1030 00000000 		.word	g_mem
 11424 1034 0B000000 		.word	g_rx+11
 11425 1038 00000000 		.word	c_mem
 11426 103c 03000000 		.word	g_rx+3
 11427 1040 07000000 		.word	g_rx+7
 11428 1044 00000000 		.word	g_rx
 11429 1048 00000000 		.word	g_meas
 11430 104c 00000000 		.word	g_refNew
 11431              	.L393:
1541:..\src/command_processing.c **** 
1542:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1543:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11432              		.loc 1 1543 0
 11433 1050 0023     		movs	r3, #0
 11434 1052 FB75     		strb	r3, [r7, #23]
 11435 1054 7EE0     		b	.L465
 11436              	.L466:
1544:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11437              		.loc 1 1544 0 discriminator 3
 11438 1056 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11439 1058 9049     		ldr	r1, .L485
 11440 105a 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 260


 11441 105c DB00     		lsls	r3, r3, #3
 11442 105e 9B1A     		subs	r3, r3, r2
 11443 1060 1B01     		lsls	r3, r3, #4
 11444 1062 0B44     		add	r3, r3, r1
 11445 1064 03F58873 		add	r3, r3, #272
 11446 1068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11447 106a 1C46     		mov	r4, r3
 11448 106c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11449 106e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11450 1070 5B00     		lsls	r3, r3, #1
 11451 1072 0333     		adds	r3, r3, #3
 11452 1074 8A49     		ldr	r1, .L485+4
 11453 1076 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11454 1078 1B02     		lsls	r3, r3, #8
 11455 107a 19B2     		sxth	r1, r3
 11456 107c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11457 107e 0233     		adds	r3, r3, #2
 11458 1080 5B00     		lsls	r3, r3, #1
 11459 1082 8748     		ldr	r0, .L485+4
 11460 1084 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11461 1086 1BB2     		sxth	r3, r3
 11462 1088 0B43     		orrs	r3, r3, r1
 11463 108a 1BB2     		sxth	r3, r3
 11464 108c 1846     		mov	r0, r3
 11465 108e 8349     		ldr	r1, .L485
 11466 1090 2346     		mov	r3, r4
 11467 1092 5B00     		lsls	r3, r3, #1
 11468 1094 2344     		add	r3, r3, r4
 11469 1096 9B00     		lsls	r3, r3, #2
 11470 1098 1344     		add	r3, r3, r2
 11471 109a 6633     		adds	r3, r3, #102
 11472 109c 41F82300 		str	r0, [r1, r3, lsl #2]
1545:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11473              		.loc 1 1545 0 discriminator 3
 11474 10a0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11475 10a2 7E49     		ldr	r1, .L485
 11476 10a4 1346     		mov	r3, r2
 11477 10a6 DB00     		lsls	r3, r3, #3
 11478 10a8 9B1A     		subs	r3, r3, r2
 11479 10aa 1B01     		lsls	r3, r3, #4
 11480 10ac 0B44     		add	r3, r3, r1
 11481 10ae 03F58873 		add	r3, r3, #272
 11482 10b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11483 10b4 1D46     		mov	r5, r3
 11484 10b6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11485 10b8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11486 10ba 7848     		ldr	r0, .L485
 11487 10bc 1346     		mov	r3, r2
 11488 10be DB00     		lsls	r3, r3, #3
 11489 10c0 9B1A     		subs	r3, r3, r2
 11490 10c2 1B01     		lsls	r3, r3, #4
 11491 10c4 0344     		add	r3, r3, r0
 11492 10c6 03F58873 		add	r3, r3, #272
 11493 10ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11494 10cc 1C46     		mov	r4, r3
 11495 10ce FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11496 10d0 7248     		ldr	r0, .L485
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 261


 11497 10d2 2346     		mov	r3, r4
 11498 10d4 5B00     		lsls	r3, r3, #1
 11499 10d6 2344     		add	r3, r3, r4
 11500 10d8 9B00     		lsls	r3, r3, #2
 11501 10da 1344     		add	r3, r3, r2
 11502 10dc 6633     		adds	r3, r3, #102
 11503 10de 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11504 10e2 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11505 10e4 6D4C     		ldr	r4, .L485
 11506 10e6 1346     		mov	r3, r2
 11507 10e8 DB00     		lsls	r3, r3, #3
 11508 10ea 9B1A     		subs	r3, r3, r2
 11509 10ec 1B01     		lsls	r3, r3, #4
 11510 10ee 2344     		add	r3, r3, r4
 11511 10f0 03F58873 		add	r3, r3, #272
 11512 10f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11513 10f6 1E46     		mov	r6, r3
 11514 10f8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11515 10fa 684C     		ldr	r4, .L485
 11516 10fc 3346     		mov	r3, r6
 11517 10fe 5B00     		lsls	r3, r3, #1
 11518 1100 3344     		add	r3, r3, r6
 11519 1102 1B01     		lsls	r3, r3, #4
 11520 1104 2344     		add	r3, r3, r4
 11521 1106 1344     		add	r3, r3, r2
 11522 1108 03F29513 		addw	r3, r3, #405
 11523 110c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11524 110e 00FA03F2 		lsl	r2, r0, r3
 11525 1112 6248     		ldr	r0, .L485
 11526 1114 2B46     		mov	r3, r5
 11527 1116 5B00     		lsls	r3, r3, #1
 11528 1118 2B44     		add	r3, r3, r5
 11529 111a 9B00     		lsls	r3, r3, #2
 11530 111c 0B44     		add	r3, r3, r1
 11531 111e 6633     		adds	r3, r3, #102
 11532 1120 40F82320 		str	r2, [r0, r3, lsl #2]
1546:..\src/command_processing.c **** 
1547:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11533              		.loc 1 1547 0 discriminator 3
 11534 1124 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11535 1126 5D49     		ldr	r1, .L485
 11536 1128 1346     		mov	r3, r2
 11537 112a DB00     		lsls	r3, r3, #3
 11538 112c 9B1A     		subs	r3, r3, r2
 11539 112e 1B01     		lsls	r3, r3, #4
 11540 1130 0B44     		add	r3, r3, r1
 11541 1132 03F58873 		add	r3, r3, #272
 11542 1136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11543 1138 1846     		mov	r0, r3
 11544 113a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11545 113c 5949     		ldr	r1, .L485+8
 11546 113e 3422     		movs	r2, #52
 11547 1140 02FB00F2 		mul	r2, r2, r0
 11548 1144 0A44     		add	r2, r2, r1
 11549 1146 1344     		add	r3, r3, r2
 11550 1148 1833     		adds	r3, r3, #24
 11551 114a 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 262


 11552 114c 1A70     		strb	r2, [r3]
1543:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11553              		.loc 1 1543 0 discriminator 3
 11554 114e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11555 1150 0133     		adds	r3, r3, #1
 11556 1152 FB75     		strb	r3, [r7, #23]
 11557              	.L465:
1543:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11558              		.loc 1 1543 0 is_stmt 0 discriminator 1
 11559 1154 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11560 1156 022B     		cmp	r3, #2
 11561 1158 7FF67DAF 		bls	.L466
1548:..\src/command_processing.c ****             }
1549:..\src/command_processing.c ****             reset_last_value_flag = 1;
 11562              		.loc 1 1549 0 is_stmt 1
 11563 115c 524B     		ldr	r3, .L485+12
 11564 115e 0122     		movs	r2, #1
 11565 1160 1A70     		strb	r2, [r3]
1550:..\src/command_processing.c ****             break;
 11566              		.loc 1 1550 0
 11567 1162 8AE1     		b	.L411
 11568              	.L394:
1551:..\src/command_processing.c ****     
1552:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1553:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11569              		.loc 1 1553 0
 11570 1164 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11571 1166 4E4B     		ldr	r3, .L485+4
 11572 1168 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11573 116a 1906     		lsls	r1, r3, #24
 11574 116c 4C4B     		ldr	r3, .L485+4
 11575 116e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11576 1170 1B04     		lsls	r3, r3, #16
 11577 1172 1943     		orrs	r1, r1, r3
 11578 1174 4A4B     		ldr	r3, .L485+4
 11579 1176 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11580 1178 1B02     		lsls	r3, r3, #8
 11581 117a 0B43     		orrs	r3, r3, r1
 11582 117c 4849     		ldr	r1, .L485+4
 11583 117e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11584 1180 1943     		orrs	r1, r1, r3
 11585 1182 4648     		ldr	r0, .L485
 11586 1184 1346     		mov	r3, r2
 11587 1186 DB00     		lsls	r3, r3, #3
 11588 1188 9B1A     		subs	r3, r3, r2
 11589 118a 1B01     		lsls	r3, r3, #4
 11590 118c 0344     		add	r3, r3, r0
 11591 118e E433     		adds	r3, r3, #228
 11592 1190 1960     		str	r1, [r3]
1554:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11593              		.loc 1 1554 0
 11594 1192 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11595 1194 424B     		ldr	r3, .L485+4
 11596 1196 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11597 1198 1906     		lsls	r1, r3, #24
 11598 119a 414B     		ldr	r3, .L485+4
 11599 119c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 263


 11600 119e 1B04     		lsls	r3, r3, #16
 11601 11a0 1943     		orrs	r1, r1, r3
 11602 11a2 3F4B     		ldr	r3, .L485+4
 11603 11a4 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11604 11a6 1B02     		lsls	r3, r3, #8
 11605 11a8 0B43     		orrs	r3, r3, r1
 11606 11aa 3D49     		ldr	r1, .L485+4
 11607 11ac 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11608 11ae 1943     		orrs	r1, r1, r3
 11609 11b0 3A48     		ldr	r0, .L485
 11610 11b2 1346     		mov	r3, r2
 11611 11b4 DB00     		lsls	r3, r3, #3
 11612 11b6 9B1A     		subs	r3, r3, r2
 11613 11b8 1B01     		lsls	r3, r3, #4
 11614 11ba 0344     		add	r3, r3, r0
 11615 11bc E833     		adds	r3, r3, #232
 11616 11be 1960     		str	r1, [r3]
1555:..\src/command_processing.c **** 
1556:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11617              		.loc 1 1556 0
 11618 11c0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11619 11c2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11620 11c4 3548     		ldr	r0, .L485
 11621 11c6 0B46     		mov	r3, r1
 11622 11c8 DB00     		lsls	r3, r3, #3
 11623 11ca 5B1A     		subs	r3, r3, r1
 11624 11cc 1B01     		lsls	r3, r3, #4
 11625 11ce 0344     		add	r3, r3, r0
 11626 11d0 E433     		adds	r3, r3, #228
 11627 11d2 1868     		ldr	r0, [r3]
 11628 11d4 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11629 11d6 314C     		ldr	r4, .L485
 11630 11d8 0B46     		mov	r3, r1
 11631 11da DB00     		lsls	r3, r3, #3
 11632 11dc 5B1A     		subs	r3, r3, r1
 11633 11de 1B01     		lsls	r3, r3, #4
 11634 11e0 2344     		add	r3, r3, r4
 11635 11e2 03F58873 		add	r3, r3, #272
 11636 11e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11637 11e8 1C46     		mov	r4, r3
 11638 11ea 2C49     		ldr	r1, .L485
 11639 11ec 2346     		mov	r3, r4
 11640 11ee 5B00     		lsls	r3, r3, #1
 11641 11f0 2344     		add	r3, r3, r4
 11642 11f2 1B01     		lsls	r3, r3, #4
 11643 11f4 0B44     		add	r3, r3, r1
 11644 11f6 03F29513 		addw	r3, r3, #405
 11645 11fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11646 11fc 00FA03F1 		lsl	r1, r0, r3
 11647 1200 2648     		ldr	r0, .L485
 11648 1202 1346     		mov	r3, r2
 11649 1204 DB00     		lsls	r3, r3, #3
 11650 1206 9B1A     		subs	r3, r3, r2
 11651 1208 1B01     		lsls	r3, r3, #4
 11652 120a 0344     		add	r3, r3, r0
 11653 120c E433     		adds	r3, r3, #228
 11654 120e 1960     		str	r1, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 264


1557:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11655              		.loc 1 1557 0
 11656 1210 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11657 1212 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11658 1214 2148     		ldr	r0, .L485
 11659 1216 0B46     		mov	r3, r1
 11660 1218 DB00     		lsls	r3, r3, #3
 11661 121a 5B1A     		subs	r3, r3, r1
 11662 121c 1B01     		lsls	r3, r3, #4
 11663 121e 0344     		add	r3, r3, r0
 11664 1220 E833     		adds	r3, r3, #232
 11665 1222 1868     		ldr	r0, [r3]
 11666 1224 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11667 1226 1D4C     		ldr	r4, .L485
 11668 1228 0B46     		mov	r3, r1
 11669 122a DB00     		lsls	r3, r3, #3
 11670 122c 5B1A     		subs	r3, r3, r1
 11671 122e 1B01     		lsls	r3, r3, #4
 11672 1230 2344     		add	r3, r3, r4
 11673 1232 03F58873 		add	r3, r3, #272
 11674 1236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11675 1238 1C46     		mov	r4, r3
 11676 123a 1849     		ldr	r1, .L485
 11677 123c 2346     		mov	r3, r4
 11678 123e 5B00     		lsls	r3, r3, #1
 11679 1240 2344     		add	r3, r3, r4
 11680 1242 1B01     		lsls	r3, r3, #4
 11681 1244 0B44     		add	r3, r3, r1
 11682 1246 03F29513 		addw	r3, r3, #405
 11683 124a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11684 124c 00FA03F1 		lsl	r1, r0, r3
 11685 1250 1248     		ldr	r0, .L485
 11686 1252 1346     		mov	r3, r2
 11687 1254 DB00     		lsls	r3, r3, #3
 11688 1256 9B1A     		subs	r3, r3, r2
 11689 1258 1B01     		lsls	r3, r3, #4
 11690 125a 0344     		add	r3, r3, r0
 11691 125c E833     		adds	r3, r3, #232
 11692 125e 1960     		str	r1, [r3]
1558:..\src/command_processing.c ****             break;
 11693              		.loc 1 1558 0
 11694 1260 0BE1     		b	.L411
 11695              	.L395:
1559:..\src/command_processing.c ****             
1560:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1561:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11696              		.loc 1 1561 0
 11697 1262 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11698 1264 0E4B     		ldr	r3, .L485+4
 11699 1266 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11700 1268 0C49     		ldr	r1, .L485
 11701 126a 1346     		mov	r3, r2
 11702 126c DB00     		lsls	r3, r3, #3
 11703 126e 9B1A     		subs	r3, r3, r2
 11704 1270 1B01     		lsls	r3, r3, #4
 11705 1272 0B44     		add	r3, r3, r1
 11706 1274 E233     		adds	r3, r3, #226
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 265


 11707 1276 0246     		mov	r2, r0
 11708 1278 1A70     		strb	r2, [r3]
1562:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11709              		.loc 1 1562 0
 11710 127a 084B     		ldr	r3, .L485
 11711 127c 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 11712 1280 5B00     		lsls	r3, r3, #1
 11713 1282 5AB2     		sxtb	r2, r3
 11714 1284 054B     		ldr	r3, .L485
 11715 1286 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 11716 128a 5BB2     		sxtb	r3, r3
 11717 128c 1343     		orrs	r3, r3, r2
 11718 128e 5BB2     		sxtb	r3, r3
 11719 1290 DBB2     		uxtb	r3, r3
 11720 1292 1846     		mov	r0, r3
 11721 1294 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1563:..\src/command_processing.c ****             break;
 11722              		.loc 1 1563 0
 11723 1298 EFE0     		b	.L411
 11724              	.L486:
 11725 129a 00BF     		.align	2
 11726              	.L485:
 11727 129c 00000000 		.word	g_mem
 11728 12a0 00000000 		.word	g_rx
 11729 12a4 00000000 		.word	g_meas
 11730 12a8 00000000 		.word	reset_last_value_flag
 11731              	.L396:
1564:..\src/command_processing.c **** 
1565:..\src/command_processing.c ****         case 74:        // Device type
1566:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11732              		.loc 1 1566 0
 11733 12ac 754B     		ldr	r3, .L487
 11734 12ae DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11735 12b0 754B     		ldr	r3, .L487+4
 11736 12b2 83F8AC20 		strb	r2, [r3, #172]
1567:..\src/command_processing.c ****             
1568:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11737              		.loc 1 1568 0
 11738 12b6 744B     		ldr	r3, .L487+4
 11739 12b8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11740 12bc 002B     		cmp	r3, #0
 11741 12be 40F09D80 		bne	.L467
1569:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11742              		.loc 1 1569 0
 11743 12c2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11744 12c4 7049     		ldr	r1, .L487+4
 11745 12c6 1346     		mov	r3, r2
 11746 12c8 DB00     		lsls	r3, r3, #3
 11747 12ca 9B1A     		subs	r3, r3, r2
 11748 12cc 1B01     		lsls	r3, r3, #4
 11749 12ce 0B44     		add	r3, r3, r1
 11750 12d0 03F58873 		add	r3, r3, #272
 11751 12d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11752 12d6 1946     		mov	r1, r3
 11753 12d8 6B4A     		ldr	r2, .L487+4
 11754 12da 0B46     		mov	r3, r1
 11755 12dc 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 266


 11756 12de 0B44     		add	r3, r3, r1
 11757 12e0 1B01     		lsls	r3, r3, #4
 11758 12e2 1344     		add	r3, r3, r2
 11759 12e4 03F5D873 		add	r3, r3, #432
 11760 12e8 0122     		movs	r2, #1
 11761 12ea 1A70     		strb	r2, [r3]
1570:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11762              		.loc 1 1570 0
 11763 12ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11764 12ee 6649     		ldr	r1, .L487+4
 11765 12f0 1346     		mov	r3, r2
 11766 12f2 DB00     		lsls	r3, r3, #3
 11767 12f4 9B1A     		subs	r3, r3, r2
 11768 12f6 1B01     		lsls	r3, r3, #4
 11769 12f8 0B44     		add	r3, r3, r1
 11770 12fa 03F58873 		add	r3, r3, #272
 11771 12fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11772 1300 1946     		mov	r1, r3
 11773 1302 614A     		ldr	r2, .L487+4
 11774 1304 0B46     		mov	r3, r1
 11775 1306 5B00     		lsls	r3, r3, #1
 11776 1308 0B44     		add	r3, r3, r1
 11777 130a 1B01     		lsls	r3, r3, #4
 11778 130c 1344     		add	r3, r3, r2
 11779 130e 03F2B513 		addw	r3, r3, #437
 11780 1312 2322     		movs	r2, #35
 11781 1314 1A70     		strb	r2, [r3]
1571:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11782              		.loc 1 1571 0
 11783 1316 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11784 1318 5B49     		ldr	r1, .L487+4
 11785 131a 1346     		mov	r3, r2
 11786 131c DB00     		lsls	r3, r3, #3
 11787 131e 9B1A     		subs	r3, r3, r2
 11788 1320 1B01     		lsls	r3, r3, #4
 11789 1322 0B44     		add	r3, r3, r1
 11790 1324 03F58873 		add	r3, r3, #272
 11791 1328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11792 132a 1946     		mov	r1, r3
 11793 132c 564A     		ldr	r2, .L487+4
 11794 132e 0B46     		mov	r3, r1
 11795 1330 5B00     		lsls	r3, r3, #1
 11796 1332 0B44     		add	r3, r3, r1
 11797 1334 1B01     		lsls	r3, r3, #4
 11798 1336 1344     		add	r3, r3, r2
 11799 1338 03F5DB73 		add	r3, r3, #438
 11800 133c 0322     		movs	r2, #3
 11801 133e 1A70     		strb	r2, [r3]
1572:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11802              		.loc 1 1572 0
 11803 1340 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11804 1342 5149     		ldr	r1, .L487+4
 11805 1344 1346     		mov	r3, r2
 11806 1346 DB00     		lsls	r3, r3, #3
 11807 1348 9B1A     		subs	r3, r3, r2
 11808 134a 1B01     		lsls	r3, r3, #4
 11809 134c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 267


 11810 134e 03F58873 		add	r3, r3, #272
 11811 1352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11812 1354 1946     		mov	r1, r3
 11813 1356 4C4A     		ldr	r2, .L487+4
 11814 1358 0B46     		mov	r3, r1
 11815 135a 5B00     		lsls	r3, r3, #1
 11816 135c 0B44     		add	r3, r3, r1
 11817 135e 1B01     		lsls	r3, r3, #4
 11818 1360 1344     		add	r3, r3, r2
 11819 1362 03F2B713 		addw	r3, r3, #439
 11820 1366 FF22     		movs	r2, #255
 11821 1368 1A70     		strb	r2, [r3]
1573:..\src/command_processing.c ****                 
1574:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1575:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11822              		.loc 1 1575 0
 11823 136a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11824 136c 464B     		ldr	r3, .L487+4
 11825 136e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11826 1372 4549     		ldr	r1, .L487+4
 11827 1374 1346     		mov	r3, r2
 11828 1376 DB00     		lsls	r3, r3, #3
 11829 1378 9B1A     		subs	r3, r3, r2
 11830 137a 1B01     		lsls	r3, r3, #4
 11831 137c 0B44     		add	r3, r3, r1
 11832 137e 03F58873 		add	r3, r3, #272
 11833 1382 0246     		mov	r2, r0
 11834 1384 1A70     		strb	r2, [r3]
1576:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11835              		.loc 1 1576 0
 11836 1386 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11837 1388 3F49     		ldr	r1, .L487+4
 11838 138a 1346     		mov	r3, r2
 11839 138c DB00     		lsls	r3, r3, #3
 11840 138e 9B1A     		subs	r3, r3, r2
 11841 1390 1B01     		lsls	r3, r3, #4
 11842 1392 0B44     		add	r3, r3, r1
 11843 1394 03F21113 		addw	r3, r3, #273
 11844 1398 0122     		movs	r2, #1
 11845 139a 1A70     		strb	r2, [r3]
1577:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11846              		.loc 1 1577 0
 11847 139c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11848 139e 3A49     		ldr	r1, .L487+4
 11849 13a0 1346     		mov	r3, r2
 11850 13a2 DB00     		lsls	r3, r3, #3
 11851 13a4 9B1A     		subs	r3, r3, r2
 11852 13a6 1B01     		lsls	r3, r3, #4
 11853 13a8 0B44     		add	r3, r3, r1
 11854 13aa 03F58973 		add	r3, r3, #274
 11855 13ae 0122     		movs	r2, #1
 11856 13b0 1A70     		strb	r2, [r3]
1578:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11857              		.loc 1 1578 0
 11858 13b2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11859 13b4 3449     		ldr	r1, .L487+4
 11860 13b6 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 268


 11861 13b8 DB00     		lsls	r3, r3, #3
 11862 13ba 9B1A     		subs	r3, r3, r2
 11863 13bc 1B01     		lsls	r3, r3, #4
 11864 13be 0B44     		add	r3, r3, r1
 11865 13c0 E433     		adds	r3, r3, #228
 11866 13c2 0022     		movs	r2, #0
 11867 13c4 1A60     		str	r2, [r3]
1579:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 11868              		.loc 1 1579 0
 11869 13c6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11870 13c8 2F4B     		ldr	r3, .L487+4
 11871 13ca 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 11872 13ce 1846     		mov	r0, r3
 11873 13d0 2D49     		ldr	r1, .L487+4
 11874 13d2 0346     		mov	r3, r0
 11875 13d4 5B00     		lsls	r3, r3, #1
 11876 13d6 0344     		add	r3, r3, r0
 11877 13d8 1B01     		lsls	r3, r3, #4
 11878 13da 0B44     		add	r3, r3, r1
 11879 13dc 03F29513 		addw	r3, r3, #405
 11880 13e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11881 13e2 1946     		mov	r1, r3
 11882 13e4 4FF47A53 		mov	r3, #16000
 11883 13e8 03FA01F1 		lsl	r1, r3, r1
 11884 13ec 2648     		ldr	r0, .L487+4
 11885 13ee 1346     		mov	r3, r2
 11886 13f0 DB00     		lsls	r3, r3, #3
 11887 13f2 9B1A     		subs	r3, r3, r2
 11888 13f4 1B01     		lsls	r3, r3, #4
 11889 13f6 0344     		add	r3, r3, r0
 11890 13f8 E833     		adds	r3, r3, #232
 11891 13fa 1960     		str	r1, [r3]
 11892              	.L467:
1580:..\src/command_processing.c ****             }      
1581:..\src/command_processing.c ****             
1582:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 11893              		.loc 1 1582 0
 11894 13fc 224B     		ldr	r3, .L487+4
 11895 13fe 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11896 1402 042B     		cmp	r3, #4
 11897 1404 38D1     		bne	.L474
1583:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 11898              		.loc 1 1583 0
 11899 1406 204B     		ldr	r3, .L487+4
 11900 1408 0122     		movs	r2, #1
 11901 140a 83F8A920 		strb	r2, [r3, #169]
1584:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11902              		.loc 1 1584 0
 11903 140e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11904 1410 1D49     		ldr	r1, .L487+4
 11905 1412 1346     		mov	r3, r2
 11906 1414 DB00     		lsls	r3, r3, #3
 11907 1416 9B1A     		subs	r3, r3, r2
 11908 1418 1B01     		lsls	r3, r3, #4
 11909 141a 0B44     		add	r3, r3, r1
 11910 141c 03F58873 		add	r3, r3, #272
 11911 1420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 269


 11912 1422 1946     		mov	r1, r3
 11913 1424 184A     		ldr	r2, .L487+4
 11914 1426 0B46     		mov	r3, r1
 11915 1428 5B00     		lsls	r3, r3, #1
 11916 142a 0B44     		add	r3, r3, r1
 11917 142c 1B01     		lsls	r3, r3, #4
 11918 142e 1344     		add	r3, r3, r2
 11919 1430 03F5D873 		add	r3, r3, #432
 11920 1434 0122     		movs	r2, #1
 11921 1436 1A70     		strb	r2, [r3]
1585:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11922              		.loc 1 1585 0
 11923 1438 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11924 143a 1349     		ldr	r1, .L487+4
 11925 143c 1346     		mov	r3, r2
 11926 143e DB00     		lsls	r3, r3, #3
 11927 1440 9B1A     		subs	r3, r3, r2
 11928 1442 1B01     		lsls	r3, r3, #4
 11929 1444 0B44     		add	r3, r3, r1
 11930 1446 03F58873 		add	r3, r3, #272
 11931 144a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11932 144c 1946     		mov	r1, r3
 11933 144e 0E4A     		ldr	r2, .L487+4
 11934 1450 0B46     		mov	r3, r1
 11935 1452 5B00     		lsls	r3, r3, #1
 11936 1454 0B44     		add	r3, r3, r1
 11937 1456 1B01     		lsls	r3, r3, #4
 11938 1458 1344     		add	r3, r3, r2
 11939 145a 03F5D873 		add	r3, r3, #432
 11940 145e 0122     		movs	r2, #1
 11941 1460 1A70     		strb	r2, [r3]
1586:..\src/command_processing.c ****             }      
1587:..\src/command_processing.c ****             
1588:..\src/command_processing.c ****             break;
 11942              		.loc 1 1588 0
 11943 1462 09E0     		b	.L474
 11944              	.L469:
1589:..\src/command_processing.c ****             
1590:..\src/command_processing.c ****         default:
1591:..\src/command_processing.c ****             break;
 11945              		.loc 1 1591 0
 11946 1464 00BF     		nop
 11947 1466 08E0     		b	.L411
 11948              	.L470:
1390:..\src/command_processing.c ****             
 11949              		.loc 1 1390 0
 11950 1468 00BF     		nop
 11951 146a 06E0     		b	.L411
 11952              	.L471:
1418:..\src/command_processing.c **** 
 11953              		.loc 1 1418 0
 11954 146c 00BF     		nop
 11955 146e 04E0     		b	.L411
 11956              	.L472:
1436:..\src/command_processing.c ****             
 11957              		.loc 1 1436 0
 11958 1470 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 270


 11959 1472 02E0     		b	.L411
 11960              	.L473:
1446:..\src/command_processing.c ****            
 11961              		.loc 1 1446 0
 11962 1474 00BF     		nop
 11963 1476 00E0     		b	.L411
 11964              	.L474:
1588:..\src/command_processing.c ****             
 11965              		.loc 1 1588 0
 11966 1478 00BF     		nop
 11967              	.L411:
1592:..\src/command_processing.c ****     }
1593:..\src/command_processing.c **** }
 11968              		.loc 1 1593 0 discriminator 1
 11969 147a 00BF     		nop
 11970 147c 1C37     		adds	r7, r7, #28
 11971              		.cfi_def_cfa_offset 20
 11972 147e BD46     		mov	sp, r7
 11973              		.cfi_def_cfa_register 13
 11974              		@ sp needed
 11975 1480 F0BD     		pop	{r4, r5, r6, r7, pc}
 11976              	.L488:
 11977 1482 00BF     		.align	2
 11978              	.L487:
 11979 1484 00000000 		.word	g_rx
 11980 1488 00000000 		.word	g_mem
 11981              		.cfi_endproc
 11982              	.LFE69:
 11983              		.size	set_custom_param, .-set_custom_param
 11984              		.section	.rodata
 11985 1076 0000     		.align	2
 11986              	.LC143:
 11987 1078 506F7274 		.ascii	"Port %u ID:\000"
 11987      20257520 
 11987      49443A00 
 11988              		.align	2
 11989              	.LC144:
 11990 1084 2575202D 		.ascii	"%u - Device ID:\000"
 11990      20446576 
 11990      69636520 
 11990      49443A00 
 11991              		.align	2
 11992              	.LC145:
 11993 1094 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 11993      20494D55 
 11993      20256420 
 11993      636F6E66 
 11993      69677572 
 11994 10af 00       		.align	2
 11995              	.LC146:
 11996 10b0 2575202D 		.ascii	"%u - SPI read delay:\000"
 11996      20535049 
 11996      20726561 
 11996      64206465 
 11996      6C61793A 
 11997 10c5 000000   		.align	2
 11998              	.LC147:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 271


 11999 10c8 204E6F6E 		.ascii	" None\000"
 11999      6500
 12000 10ce 0000     		.align	2
 12001              	.LC148:
 12002 10d0 204C6F77 		.ascii	" Low\000"
 12002      00
 12003 10d5 000000   		.align	2
 12004              	.LC149:
 12005 10d8 20486967 		.ascii	" High\000"
 12005      6800
 12006 10de 0000     		.align	2
 12007              	.LC141:
 12008 10e0 4E756D62 		.ascii	"Number of connected IMUs:\000"
 12008      6572206F 
 12008      6620636F 
 12008      6E6E6563 
 12008      74656420 
 12009 10fa 0000     		.align	2
 12010              	.LC142:
 12011 10fc 4D616720 		.ascii	"Mag cal parameters:\000"
 12011      63616C20 
 12011      70617261 
 12011      6D657465 
 12011      72733A00 
 12012              		.section	.text.get_IMU_param_list,"ax",%progbits
 12013              		.align	2
 12014              		.global	get_IMU_param_list
 12015              		.thumb
 12016              		.thumb_func
 12017              		.type	get_IMU_param_list, %function
 12018              	get_IMU_param_list:
 12019              	.LFB70:
1594:..\src/command_processing.c **** 
1595:..\src/command_processing.c **** //==============================================================================
1596:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1597:..\src/command_processing.c **** //==============================================================================
1598:..\src/command_processing.c **** 
1599:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1600:..\src/command_processing.c **** {
 12020              		.loc 1 1600 0
 12021              		.cfi_startproc
 12022              		@ args = 0, pretend = 0, frame = 1704
 12023              		@ frame_needed = 1, uses_anonymous_args = 0
 12024 0000 B0B5     		push	{r4, r5, r7, lr}
 12025              		.cfi_def_cfa_offset 16
 12026              		.cfi_offset 4, -16
 12027              		.cfi_offset 5, -12
 12028              		.cfi_offset 7, -8
 12029              		.cfi_offset 14, -4
 12030 0002 ADF5D56D 		sub	sp, sp, #1704
 12031              		.cfi_def_cfa_offset 1720
 12032 0006 00AF     		add	r7, sp, #0
 12033              		.cfi_def_cfa_register 7
 12034 0008 0246     		mov	r2, r0
 12035 000a BB1D     		adds	r3, r7, #6
 12036 000c 1A80     		strh	r2, [r3]	@ movhi
1601:..\src/command_processing.c ****     //Package to be sent variables
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 272


1602:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12037              		.loc 1 1602 0
 12038 000e 07F58A73 		add	r3, r7, #276
 12039 0012 0022     		movs	r2, #0
 12040 0014 1A60     		str	r2, [r3]
 12041 0016 0433     		adds	r3, r3, #4
 12042 0018 40F27552 		movw	r2, #1397
 12043 001c 0021     		movs	r1, #0
 12044 001e 1846     		mov	r0, r3
 12045 0020 FFF7FEFF 		bl	memset
1603:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1604:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1605:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1606:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1607:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1608:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1609:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12046              		.loc 1 1609 0
 12047 0024 0723     		movs	r3, #7
 12048 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1610:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12049              		.loc 1 1610 0
 12050 002a 0023     		movs	r3, #0
 12051 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1611:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12052              		.loc 1 1611 0
 12053 0030 0223     		movs	r3, #2
 12054 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1612:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12055              		.loc 1 1612 0
 12056 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 12057 003a 5A1C     		adds	r2, r3, #1
1613:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12058              		.loc 1 1613 0
 12059 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12060 0040 1344     		add	r3, r3, r2
1614:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12061              		.loc 1 1614 0
 12062 0042 0133     		adds	r3, r3, #1
1612:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12063              		.loc 1 1612 0
 12064 0044 9AB2     		uxth	r2, r3
 12065 0046 D24B     		ldr	r3, .L535
 12066 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12067 004a 9BB2     		uxth	r3, r3
 12068 004c 1344     		add	r3, r3, r2
 12069 004e 9BB2     		uxth	r3, r3
 12070 0050 1A46     		mov	r2, r3	@ movhi
 12071 0052 9200     		lsls	r2, r2, #2
 12072 0054 1344     		add	r3, r3, r2
 12073 0056 1A46     		mov	r2, r3	@ movhi
 12074 0058 9100     		lsls	r1, r2, #2
 12075 005a 1A46     		mov	r2, r3	@ movhi
 12076 005c 0B46     		mov	r3, r1	@ movhi
 12077 005e 1344     		add	r3, r3, r2
 12078 0060 5B00     		lsls	r3, r3, #1
 12079 0062 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 273


 12080 0064 FB33     		adds	r3, r3, #251
 12081 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1615:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1616:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1617:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1618:..\src/command_processing.c **** 
1619:..\src/command_processing.c ****     //Auxiliary variables
1620:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1621:..\src/command_processing.c ****     uint16 start_byte = 0;
 12082              		.loc 1 1621 0
 12083 006a 0023     		movs	r3, #0
 12084 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1622:..\src/command_processing.c **** 
1623:..\src/command_processing.c ****     //Parameters menu string definitions
1624:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12085              		.loc 1 1624 0
 12086 0070 07F1F803 		add	r3, r7, #248
 12087 0074 C74A     		ldr	r2, .L535+4
 12088 0076 1C46     		mov	r4, r3
 12089 0078 1546     		mov	r5, r2
 12090 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12091 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12092 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12093 0082 03C4     		stmia	r4!, {r0, r1}
 12094 0084 2280     		strh	r2, [r4]	@ movhi
1625:..\src/command_processing.c ****     char ids_str[11]            = "";
 12095              		.loc 1 1625 0
 12096 0086 07F1EC03 		add	r3, r7, #236
 12097 008a 0022     		movs	r2, #0
 12098 008c 1A60     		str	r2, [r3]
 12099 008e 0433     		adds	r3, r3, #4
 12100 0090 0022     		movs	r2, #0
 12101 0092 1A60     		str	r2, [r3]
 12102 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1626:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12103              		.loc 1 1626 0
 12104 0098 07F1D803 		add	r3, r7, #216
 12105 009c BE4A     		ldr	r2, .L535+8
 12106 009e 1C46     		mov	r4, r3
 12107 00a0 1546     		mov	r5, r2
 12108 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12109 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12110 00a6 2B68     		ldr	r3, [r5]
 12111 00a8 2360     		str	r3, [r4]
1627:..\src/command_processing.c ****     char id_str[16]             = "";
 12112              		.loc 1 1627 0
 12113 00aa 07F1C803 		add	r3, r7, #200
 12114 00ae 0022     		movs	r2, #0
 12115 00b0 1A60     		str	r2, [r3]
 12116 00b2 0433     		adds	r3, r3, #4
 12117 00b4 0022     		movs	r2, #0
 12118 00b6 1A60     		str	r2, [r3]
 12119 00b8 5A60     		str	r2, [r3, #4]
 12120 00ba 9A60     		str	r2, [r3, #8]
1628:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12121              		.loc 1 1628 0
 12122 00bc 07F19C03 		add	r3, r7, #156
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 274


 12123 00c0 0022     		movs	r2, #0
 12124 00c2 1A60     		str	r2, [r3]
 12125 00c4 0433     		adds	r3, r3, #4
 12126 00c6 2622     		movs	r2, #38
 12127 00c8 0021     		movs	r1, #0
 12128 00ca 1846     		mov	r0, r3
 12129 00cc FFF7FEFF 		bl	memset
1629:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12130              		.loc 1 1629 0
 12131 00d0 07F18003 		add	r3, r7, #128
 12132 00d4 0022     		movs	r2, #0
 12133 00d6 1A60     		str	r2, [r3]
 12134 00d8 0433     		adds	r3, r3, #4
 12135 00da 0022     		movs	r2, #0
 12136 00dc 1A60     		str	r2, [r3]
 12137 00de 5A60     		str	r2, [r3, #4]
 12138 00e0 9A60     		str	r2, [r3, #8]
 12139 00e2 DA60     		str	r2, [r3, #12]
 12140 00e4 1A61     		str	r2, [r3, #16]
 12141 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1630:..\src/command_processing.c ****     
1631:..\src/command_processing.c ****     //Strings lenghts
1632:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12142              		.loc 1 1632 0
 12143 00e8 07F1C803 		add	r3, r7, #200
 12144 00ec 1846     		mov	r0, r3
 12145 00ee FFF7FEFF 		bl	strlen
 12146 00f2 0346     		mov	r3, r0
 12147 00f4 87F89336 		strb	r3, [r7, #1683]
1633:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12148              		.loc 1 1633 0
 12149 00f8 07F1F803 		add	r3, r7, #248
 12150 00fc 1846     		mov	r0, r3
 12151 00fe FFF7FEFF 		bl	strlen
 12152 0102 0346     		mov	r3, r0
 12153 0104 87F89236 		strb	r3, [r7, #1682]
1634:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12154              		.loc 1 1634 0
 12155 0108 07F1EC03 		add	r3, r7, #236
 12156 010c 1846     		mov	r0, r3
 12157 010e FFF7FEFF 		bl	strlen
 12158 0112 0346     		mov	r3, r0
 12159 0114 87F89136 		strb	r3, [r7, #1681]
1635:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12160              		.loc 1 1635 0
 12161 0118 07F1D803 		add	r3, r7, #216
 12162 011c 1846     		mov	r0, r3
 12163 011e FFF7FEFF 		bl	strlen
 12164 0122 0346     		mov	r3, r0
 12165 0124 87F89036 		strb	r3, [r7, #1680]
1636:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12166              		.loc 1 1636 0
 12167 0128 07F19C03 		add	r3, r7, #156
 12168 012c 1846     		mov	r0, r3
 12169 012e FFF7FEFF 		bl	strlen
 12170 0132 0346     		mov	r3, r0
 12171 0134 87F88F36 		strb	r3, [r7, #1679]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 275


1637:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12172              		.loc 1 1637 0
 12173 0138 07F18003 		add	r3, r7, #128
 12174 013c 1846     		mov	r0, r3
 12175 013e FFF7FEFF 		bl	strlen
 12176 0142 0346     		mov	r3, r0
 12177 0144 87F89D36 		strb	r3, [r7, #1693]
1638:..\src/command_processing.c ****     
1639:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12178              		.loc 1 1639 0
 12179 0148 07F10803 		add	r3, r7, #8
 12180 014c 0022     		movs	r2, #0
 12181 014e 1A60     		str	r2, [r3]
 12182 0150 0433     		adds	r3, r3, #4
 12183 0152 7222     		movs	r2, #114
 12184 0154 0021     		movs	r1, #0
 12185 0156 1846     		mov	r0, r3
 12186 0158 FFF7FEFF 		bl	memset
1640:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1641:..\src/command_processing.c ****  
1642:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12187              		.loc 1 1642 0
 12188 015c 07F10800 		add	r0, r7, #8
 12189 0160 6423     		movs	r3, #100
 12190 0162 0A22     		movs	r2, #10
 12191 0164 8D49     		ldr	r1, .L535+12
 12192 0166 FFF7FEFF 		bl	sprintf
1643:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12193              		.loc 1 1643 0
 12194 016a 07F10803 		add	r3, r7, #8
 12195 016e 1846     		mov	r0, r3
 12196 0170 FFF7FEFF 		bl	strlen
 12197 0174 0346     		mov	r3, r0
 12198 0176 87F88E36 		strb	r3, [r7, #1678]
1644:..\src/command_processing.c **** 
1645:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1646:..\src/command_processing.c ****     // update packet_length
1647:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12199              		.loc 1 1647 0
 12200 017a 854B     		ldr	r3, .L535
 12201 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12202 017e 5B08     		lsrs	r3, r3, #1
 12203 0180 DBB2     		uxtb	r3, r3
 12204 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1648:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12205              		.loc 1 1648 0
 12206 0186 824B     		ldr	r3, .L535
 12207 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12208 018a 1A46     		mov	r2, r3
 12209 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12210 0190 5B00     		lsls	r3, r3, #1
 12211 0192 D31A     		subs	r3, r2, r3
 12212 0194 002B     		cmp	r3, #0
 12213 0196 04DD     		ble	.L490
 12214              		.loc 1 1648 0 is_stmt 0 discriminator 1
 12215 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12216 019c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 276


 12217 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12218              	.L490:
1649:..\src/command_processing.c ****     
1650:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12219              		.loc 1 1650 0 is_stmt 1
 12220 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12221 01a6 5A1C     		adds	r2, r3, #1
1651:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12222              		.loc 1 1651 0
 12223 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12224 01ac 1344     		add	r3, r3, r2
1652:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12225              		.loc 1 1652 0
 12226 01ae 0133     		adds	r3, r3, #1
1650:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12227              		.loc 1 1650 0
 12228 01b0 9AB2     		uxth	r2, r3
 12229 01b2 774B     		ldr	r3, .L535
 12230 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12231 01b6 9BB2     		uxth	r3, r3
 12232 01b8 1344     		add	r3, r3, r2
 12233 01ba 9BB2     		uxth	r3, r3
 12234 01bc 1A46     		mov	r2, r3	@ movhi
 12235 01be 9200     		lsls	r2, r2, #2
 12236 01c0 1344     		add	r3, r3, r2
 12237 01c2 1A46     		mov	r2, r3	@ movhi
 12238 01c4 9100     		lsls	r1, r2, #2
 12239 01c6 1A46     		mov	r2, r3	@ movhi
 12240 01c8 0B46     		mov	r3, r1	@ movhi
 12241 01ca 1344     		add	r3, r3, r2
 12242 01cc 5B00     		lsls	r3, r3, #1
 12243 01ce 9BB2     		uxth	r3, r3
 12244 01d0 C933     		adds	r3, r3, #201
 12245 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1653:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1654:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1655:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1656:..\src/command_processing.c **** 
1657:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12246              		.loc 1 1657 0
 12247 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12248 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12249 01de 1344     		add	r3, r3, r2
 12250 01e0 9BB2     		uxth	r3, r3
 12251 01e2 0333     		adds	r3, r3, #3
 12252 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1658:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12253              		.loc 1 1658 0
 12254 01e8 07F58A73 		add	r3, r7, #276
 12255 01ec A222     		movs	r2, #162
 12256 01ee 1A70     		strb	r2, [r3]
1659:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12257              		.loc 1 1659 0
 12258 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12259 01f4 DAB2     		uxtb	r2, r3
 12260 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12261 01fa DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 277


 12262 01fc 1344     		add	r3, r3, r2
 12263 01fe DAB2     		uxtb	r2, r3
 12264 0200 634B     		ldr	r3, .L535
 12265 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12266 0204 1344     		add	r3, r3, r2
 12267 0206 DBB2     		uxtb	r3, r3
 12268 0208 0333     		adds	r3, r3, #3
 12269 020a DAB2     		uxtb	r2, r3
 12270 020c 07F58A73 		add	r3, r7, #276
 12271 0210 5A70     		strb	r2, [r3, #1]
1660:..\src/command_processing.c **** 
1661:..\src/command_processing.c ****     switch(index) {
 12272              		.loc 1 1661 0
 12273 0212 BB1D     		adds	r3, r7, #6
 12274 0214 1B88     		ldrh	r3, [r3]
 12275 0216 002B     		cmp	r3, #0
 12276 0218 40F0D084 		bne	.L533
1662:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1663:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1664:..\src/command_processing.c ****             start_byte = 0;
 12277              		.loc 1 1664 0
 12278 021c 0023     		movs	r3, #0
 12279 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1665:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12280              		.loc 1 1665 0
 12281 0222 07F58A73 		add	r3, r7, #276
 12282 0226 0222     		movs	r2, #2
 12283 0228 9A70     		strb	r2, [r3, #2]
1666:..\src/command_processing.c ****             packet_data[3] = 1;
 12284              		.loc 1 1666 0
 12285 022a 07F58A73 		add	r3, r7, #276
 12286 022e 0122     		movs	r2, #1
 12287 0230 DA70     		strb	r2, [r3, #3]
1667:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12288              		.loc 1 1667 0
 12289 0232 574B     		ldr	r3, .L535
 12290 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12291 0236 07F58A73 		add	r3, r7, #276
 12292 023a 1A71     		strb	r2, [r3, #4]
1668:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12293              		.loc 1 1668 0
 12294 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12295 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12296 0244 15E0     		b	.L493
 12297              	.L494:
1669:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12298              		.loc 1 1669 0 discriminator 3
 12299 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12300 024a 5A1D     		adds	r2, r3, #5
 12301 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12302 0250 D31A     		subs	r3, r2, r3
 12303 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12304 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12305 025a 8A1A     		subs	r2, r1, r2
 12306 025c 07F1F801 		add	r1, r7, #248
 12307 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12308 0262 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 278


 12309 0266 D154     		strb	r1, [r2, r3]
1668:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12310              		.loc 1 1668 0 discriminator 3
 12311 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12312 026c 013B     		subs	r3, r3, #1
 12313 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12314              	.L493:
1668:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12315              		.loc 1 1668 0 is_stmt 0 discriminator 1
 12316 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12317 0276 002B     		cmp	r3, #0
 12318 0278 E5D1     		bne	.L494
1670:..\src/command_processing.c ****                 
1671:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1672:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12319              		.loc 1 1672 0 is_stmt 1
 12320 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12321 027e 3233     		adds	r3, r3, #50
 12322 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1673:..\src/command_processing.c ****             i = 0;
 12323              		.loc 1 1673 0
 12324 0284 0023     		movs	r3, #0
 12325 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1674:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12326              		.loc 1 1674 0
 12327 028a 0023     		movs	r3, #0
 12328 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12329 0290 B2E0     		b	.L495
 12330              	.L502:
1675:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12331              		.loc 1 1675 0
 12332 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12333 0296 07F1EC03 		add	r3, r7, #236
 12334 029a 4149     		ldr	r1, .L535+16
 12335 029c 1846     		mov	r0, r3
 12336 029e FFF7FEFF 		bl	sprintf
1676:..\src/command_processing.c ****                 h = 4;
 12337              		.loc 1 1676 0
 12338 02a2 0423     		movs	r3, #4
 12339 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1677:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12340              		.loc 1 1677 0
 12341 02a8 07F1EC03 		add	r3, r7, #236
 12342 02ac 1846     		mov	r0, r3
 12343 02ae FFF7FEFF 		bl	strlen
 12344 02b2 0346     		mov	r3, r0
 12345 02b4 87F89136 		strb	r3, [r7, #1681]
1678:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12346              		.loc 1 1678 0
 12347 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12348 02bc 9A1C     		adds	r2, r3, #2
 12349 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12350 02c2 3221     		movs	r1, #50
 12351 02c4 01FB03F3 		mul	r3, r1, r3
 12352 02c8 1344     		add	r3, r3, r2
 12353 02ca 07F58A72 		add	r2, r7, #276
 12354 02ce 0221     		movs	r1, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 279


 12355 02d0 D154     		strb	r1, [r2, r3]
1679:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12356              		.loc 1 1679 0
 12357 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12358 02d6 DA1C     		adds	r2, r3, #3
 12359 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12360 02dc 3221     		movs	r1, #50
 12361 02de 01FB03F3 		mul	r3, r1, r3
 12362 02e2 1344     		add	r3, r3, r2
 12363 02e4 07F58A72 		add	r2, r7, #276
 12364 02e8 0321     		movs	r1, #3
 12365 02ea D154     		strb	r1, [r2, r3]
1680:..\src/command_processing.c ****                 
1681:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12366              		.loc 1 1681 0
 12367 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12368 02f0 1A46     		mov	r2, r3	@ movhi
 12369 02f2 5200     		lsls	r2, r2, #1
 12370 02f4 1344     		add	r3, r3, r2
 12371 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12372 02fa 39E0     		b	.L496
 12373              	.L499:
1682:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12374              		.loc 1 1682 0
 12375 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12376 0300 284A     		ldr	r2, .L535+20
 12377 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12378 0304 9BB2     		uxth	r3, r3
 12379 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12380 030a 9A42     		cmp	r2, r3
 12381 030c 17D1     		bne	.L497
1683:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12382              		.loc 1 1683 0
 12383 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12384 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12385 0316 1A44     		add	r2, r2, r3
 12386 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12387 031c 3221     		movs	r1, #50
 12388 031e 01FB03F3 		mul	r3, r1, r3
 12389 0322 1344     		add	r3, r3, r2
 12390 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12391 0328 1E49     		ldr	r1, .L535+20
 12392 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12393 032c 07F58A72 		add	r2, r7, #276
 12394 0330 D154     		strb	r1, [r2, r3]
1684:..\src/command_processing.c ****                         i++;
 12395              		.loc 1 1684 0
 12396 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12397 0336 0133     		adds	r3, r3, #1
 12398 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12399 033c 0EE0     		b	.L498
 12400              	.L497:
1685:..\src/command_processing.c ****                     } 
1686:..\src/command_processing.c ****                     else {
1687:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12401              		.loc 1 1687 0
 12402 033e B7F89E26 		ldrh	r2, [r7, #1694]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 280


 12403 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12404 0346 1A44     		add	r2, r2, r3
 12405 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12406 034c 3221     		movs	r1, #50
 12407 034e 01FB03F3 		mul	r3, r1, r3
 12408 0352 1344     		add	r3, r3, r2
 12409 0354 07F58A72 		add	r2, r7, #276
 12410 0358 FF21     		movs	r1, #255
 12411 035a D154     		strb	r1, [r2, r3]
 12412              	.L498:
1688:..\src/command_processing.c ****                     }
1689:..\src/command_processing.c ****                     h++;
 12413              		.loc 1 1689 0 discriminator 2
 12414 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12415 0360 0133     		adds	r3, r3, #1
 12416 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1681:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12417              		.loc 1 1681 0 discriminator 2
 12418 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12419 036a 0133     		adds	r3, r3, #1
 12420 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12421              	.L496:
1681:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12422              		.loc 1 1681 0 is_stmt 0 discriminator 1
 12423 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12424 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12425 0378 1346     		mov	r3, r2
 12426 037a 5B00     		lsls	r3, r3, #1
 12427 037c 1344     		add	r3, r3, r2
 12428 037e 0233     		adds	r3, r3, #2
 12429 0380 9942     		cmp	r1, r3
 12430 0382 BBDD     		ble	.L499
1690:..\src/command_processing.c ****                 }
1691:..\src/command_processing.c **** 
1692:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1693:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12431              		.loc 1 1693 0 is_stmt 1
 12432 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12433 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12434 038c 2BE0     		b	.L500
 12435              	.L536:
 12436 038e 00BF     		.align	2
 12437              	.L535:
 12438 0390 00000000 		.word	N_IMU_Connected
 12439 0394 E0100000 		.word	.LC141
 12440 0398 FC100000 		.word	.LC142
 12441 039c 74020000 		.word	.LC128
 12442 03a0 78100000 		.word	.LC143
 12443 03a4 00000000 		.word	IMU_connected
 12444              	.L501:
1694:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12445              		.loc 1 1694 0 discriminator 3
 12446 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12447 03ac DA1D     		adds	r2, r3, #7
 12448 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12449 03b2 3221     		movs	r1, #50
 12450 03b4 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 281


 12451 03b8 1A44     		add	r2, r2, r3
 12452 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12453 03be 1A44     		add	r2, r2, r3
 12454 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12455 03c4 D31A     		subs	r3, r2, r3
 12456 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12457 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12458 03ce 8A1A     		subs	r2, r1, r2
 12459 03d0 07F1EC01 		add	r1, r7, #236
 12460 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12461 03d6 07F58A72 		add	r2, r7, #276
 12462 03da D154     		strb	r1, [r2, r3]
1693:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12463              		.loc 1 1693 0 discriminator 3
 12464 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12465 03e0 013B     		subs	r3, r3, #1
 12466 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12467              	.L500:
1693:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12468              		.loc 1 1693 0 is_stmt 0 discriminator 1
 12469 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12470 03ea 002B     		cmp	r3, #0
 12471 03ec DCD1     		bne	.L501
1674:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12472              		.loc 1 1674 0 is_stmt 1 discriminator 2
 12473 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12474 03f2 0133     		adds	r3, r3, #1
 12475 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12476              	.L495:
1674:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12477              		.loc 1 1674 0 is_stmt 0 discriminator 1
 12478 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12479 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12480 0400 9A42     		cmp	r2, r3
 12481 0402 FFF446AF 		bcc	.L502
1695:..\src/command_processing.c ****             }
1696:..\src/command_processing.c ****             
1697:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1698:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12482              		.loc 1 1698 0 is_stmt 1
 12483 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12484 040a 1A46     		mov	r2, r3	@ movhi
 12485 040c 9200     		lsls	r2, r2, #2
 12486 040e 1344     		add	r3, r3, r2
 12487 0410 1A46     		mov	r2, r3	@ movhi
 12488 0412 9100     		lsls	r1, r2, #2
 12489 0414 1A46     		mov	r2, r3	@ movhi
 12490 0416 0B46     		mov	r3, r1	@ movhi
 12491 0418 1344     		add	r3, r3, r2
 12492 041a 5B00     		lsls	r3, r3, #1
 12493 041c 9AB2     		uxth	r2, r3
 12494 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12495 0422 1344     		add	r3, r3, r2
 12496 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1699:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12497              		.loc 1 1699 0
 12498 0428 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 282


 12499 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12500 042e 1FE1     		b	.L503
 12501              	.L510:
1700:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12502              		.loc 1 1700 0
 12503 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12504 0434 9A1C     		adds	r2, r3, #2
 12505 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12506 043a 3221     		movs	r1, #50
 12507 043c 01FB03F3 		mul	r3, r1, r3
 12508 0440 1344     		add	r3, r3, r2
 12509 0442 07F58A72 		add	r2, r7, #276
 12510 0446 0221     		movs	r1, #2
 12511 0448 D154     		strb	r1, [r2, r3]
1701:..\src/command_processing.c ****                 
1702:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12512              		.loc 1 1702 0
 12513 044a B7F89436 		ldrh	r3, [r7, #1684]
 12514 044e DA1C     		adds	r2, r3, #3
 12515 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12516 0454 3221     		movs	r1, #50
 12517 0456 01FB03F3 		mul	r3, r1, r3
 12518 045a 1344     		add	r3, r3, r2
 12519 045c 07F58A72 		add	r2, r7, #276
 12520 0460 0321     		movs	r1, #3
 12521 0462 D154     		strb	r1, [r2, r3]
1703:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12522              		.loc 1 1703 0
 12523 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12524 0468 1A1D     		adds	r2, r3, #4
 12525 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12526 046e 3221     		movs	r1, #50
 12527 0470 01FB03F3 		mul	r3, r1, r3
 12528 0474 1A44     		add	r2, r2, r3
 12529 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12530 047a 5B00     		lsls	r3, r3, #1
 12531 047c B249     		ldr	r1, .L537
 12532 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12533 0480 1846     		mov	r0, r3
 12534 0482 B249     		ldr	r1, .L537+4
 12535 0484 0346     		mov	r3, r0
 12536 0486 5B00     		lsls	r3, r3, #1
 12537 0488 0344     		add	r3, r3, r0
 12538 048a 0B44     		add	r3, r3, r1
 12539 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12540 048e 07F58A73 		add	r3, r7, #276
 12541 0492 9954     		strb	r1, [r3, r2]
1704:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12542              		.loc 1 1704 0
 12543 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12544 0498 5A1D     		adds	r2, r3, #5
 12545 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12546 049e 3221     		movs	r1, #50
 12547 04a0 01FB03F3 		mul	r3, r1, r3
 12548 04a4 1A44     		add	r2, r2, r3
 12549 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12550 04aa 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 283


 12551 04ac A649     		ldr	r1, .L537
 12552 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12553 04b0 1846     		mov	r0, r3
 12554 04b2 A649     		ldr	r1, .L537+4
 12555 04b4 0346     		mov	r3, r0
 12556 04b6 5B00     		lsls	r3, r3, #1
 12557 04b8 0344     		add	r3, r3, r0
 12558 04ba 0B44     		add	r3, r3, r1
 12559 04bc 0133     		adds	r3, r3, #1
 12560 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12561 04c0 07F58A73 		add	r3, r7, #276
 12562 04c4 9954     		strb	r1, [r3, r2]
1705:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12563              		.loc 1 1705 0
 12564 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12565 04ca 9A1D     		adds	r2, r3, #6
 12566 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12567 04d0 3221     		movs	r1, #50
 12568 04d2 01FB03F3 		mul	r3, r1, r3
 12569 04d6 1A44     		add	r2, r2, r3
 12570 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12571 04dc 5B00     		lsls	r3, r3, #1
 12572 04de 9A49     		ldr	r1, .L537
 12573 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12574 04e2 1846     		mov	r0, r3
 12575 04e4 9949     		ldr	r1, .L537+4
 12576 04e6 0346     		mov	r3, r0
 12577 04e8 5B00     		lsls	r3, r3, #1
 12578 04ea 0344     		add	r3, r3, r0
 12579 04ec 0B44     		add	r3, r3, r1
 12580 04ee 0233     		adds	r3, r3, #2
 12581 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12582 04f2 07F58A73 		add	r3, r7, #276
 12583 04f6 9954     		strb	r1, [r3, r2]
1706:..\src/command_processing.c ****                 
1707:..\src/command_processing.c ****                 // check if there is a second value
1708:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12584              		.loc 1 1708 0
 12585 04f8 954B     		ldr	r3, .L537+8
 12586 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12587 04fc 1A46     		mov	r2, r3
 12588 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12589 0502 0133     		adds	r3, r3, #1
 12590 0504 5B00     		lsls	r3, r3, #1
 12591 0506 9A42     		cmp	r2, r3
 12592 0508 28DA     		bge	.L504
1709:..\src/command_processing.c ****                     // there is only one value
1710:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12593              		.loc 1 1710 0
 12594 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12595 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12596 0512 1EE0     		b	.L505
 12597              	.L506:
1711:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12598              		.loc 1 1711 0 discriminator 3
 12599 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12600 0518 DA1D     		adds	r2, r3, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 284


 12601 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12602 051e 3221     		movs	r1, #50
 12603 0520 01FB03F3 		mul	r3, r1, r3
 12604 0524 1A44     		add	r2, r2, r3
 12605 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12606 052a 1A44     		add	r2, r2, r3
 12607 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12608 0530 D31A     		subs	r3, r2, r3
 12609 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12610 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12611 053a 8A1A     		subs	r2, r1, r2
 12612 053c 07F1D801 		add	r1, r7, #216
 12613 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12614 0542 07F58A72 		add	r2, r7, #276
 12615 0546 D154     		strb	r1, [r2, r3]
1710:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12616              		.loc 1 1710 0 discriminator 3
 12617 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12618 054c 013B     		subs	r3, r3, #1
 12619 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12620              	.L505:
1710:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12621              		.loc 1 1710 0 is_stmt 0 discriminator 1
 12622 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12623 0556 002B     		cmp	r3, #0
 12624 0558 DCD1     		bne	.L506
 12625 055a 84E0     		b	.L507
 12626              	.L504:
1712:..\src/command_processing.c ****                 }
1713:..\src/command_processing.c ****                 else {
1714:..\src/command_processing.c ****                     // fill the second value
1715:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12627              		.loc 1 1715 0 is_stmt 1
 12628 055c B7F89436 		ldrh	r3, [r7, #1684]
 12629 0560 DA1C     		adds	r2, r3, #3
 12630 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12631 0566 3221     		movs	r1, #50
 12632 0568 01FB03F3 		mul	r3, r1, r3
 12633 056c 1344     		add	r3, r3, r2
 12634 056e 07F58A72 		add	r2, r7, #276
 12635 0572 0621     		movs	r1, #6
 12636 0574 D154     		strb	r1, [r2, r3]
1716:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12637              		.loc 1 1716 0
 12638 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12639 057a DA1D     		adds	r2, r3, #7
 12640 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12641 0580 3221     		movs	r1, #50
 12642 0582 01FB03F3 		mul	r3, r1, r3
 12643 0586 1A44     		add	r2, r2, r3
 12644 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12645 058c 5B00     		lsls	r3, r3, #1
 12646 058e 0133     		adds	r3, r3, #1
 12647 0590 6D49     		ldr	r1, .L537
 12648 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12649 0594 1846     		mov	r0, r3
 12650 0596 6D49     		ldr	r1, .L537+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 285


 12651 0598 0346     		mov	r3, r0
 12652 059a 5B00     		lsls	r3, r3, #1
 12653 059c 0344     		add	r3, r3, r0
 12654 059e 0B44     		add	r3, r3, r1
 12655 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12656 05a2 07F58A73 		add	r3, r7, #276
 12657 05a6 9954     		strb	r1, [r3, r2]
1717:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12658              		.loc 1 1717 0
 12659 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12660 05ac 03F10802 		add	r2, r3, #8
 12661 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12662 05b4 3221     		movs	r1, #50
 12663 05b6 01FB03F3 		mul	r3, r1, r3
 12664 05ba 1A44     		add	r2, r2, r3
 12665 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12666 05c0 5B00     		lsls	r3, r3, #1
 12667 05c2 0133     		adds	r3, r3, #1
 12668 05c4 6049     		ldr	r1, .L537
 12669 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12670 05c8 1846     		mov	r0, r3
 12671 05ca 6049     		ldr	r1, .L537+4
 12672 05cc 0346     		mov	r3, r0
 12673 05ce 5B00     		lsls	r3, r3, #1
 12674 05d0 0344     		add	r3, r3, r0
 12675 05d2 0B44     		add	r3, r3, r1
 12676 05d4 0133     		adds	r3, r3, #1
 12677 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12678 05d8 07F58A73 		add	r3, r7, #276
 12679 05dc 9954     		strb	r1, [r3, r2]
1718:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12680              		.loc 1 1718 0
 12681 05de B7F89436 		ldrh	r3, [r7, #1684]
 12682 05e2 03F10902 		add	r2, r3, #9
 12683 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12684 05ea 3221     		movs	r1, #50
 12685 05ec 01FB03F3 		mul	r3, r1, r3
 12686 05f0 1A44     		add	r2, r2, r3
 12687 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12688 05f6 5B00     		lsls	r3, r3, #1
 12689 05f8 0133     		adds	r3, r3, #1
 12690 05fa 5349     		ldr	r1, .L537
 12691 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12692 05fe 1846     		mov	r0, r3
 12693 0600 5249     		ldr	r1, .L537+4
 12694 0602 0346     		mov	r3, r0
 12695 0604 5B00     		lsls	r3, r3, #1
 12696 0606 0344     		add	r3, r3, r0
 12697 0608 0B44     		add	r3, r3, r1
 12698 060a 0233     		adds	r3, r3, #2
 12699 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12700 060e 07F58A73 		add	r3, r7, #276
 12701 0612 9954     		strb	r1, [r3, r2]
1719:..\src/command_processing.c ****                 
1720:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12702              		.loc 1 1720 0
 12703 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 286


 12704 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12705 061c 1FE0     		b	.L508
 12706              	.L509:
1721:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12707              		.loc 1 1721 0 discriminator 3
 12708 061e B7F89436 		ldrh	r3, [r7, #1684]
 12709 0622 03F10A02 		add	r2, r3, #10
 12710 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12711 062a 3221     		movs	r1, #50
 12712 062c 01FB03F3 		mul	r3, r1, r3
 12713 0630 1A44     		add	r2, r2, r3
 12714 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12715 0636 1A44     		add	r2, r2, r3
 12716 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12717 063c D31A     		subs	r3, r2, r3
 12718 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12719 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12720 0646 8A1A     		subs	r2, r1, r2
 12721 0648 07F1D801 		add	r1, r7, #216
 12722 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12723 064e 07F58A72 		add	r2, r7, #276
 12724 0652 D154     		strb	r1, [r2, r3]
1720:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12725              		.loc 1 1720 0 discriminator 3
 12726 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12727 0658 013B     		subs	r3, r3, #1
 12728 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12729              	.L508:
1720:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12730              		.loc 1 1720 0 is_stmt 0 discriminator 1
 12731 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12732 0662 002B     		cmp	r3, #0
 12733 0664 DBD1     		bne	.L509
 12734              	.L507:
1699:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12735              		.loc 1 1699 0 is_stmt 1 discriminator 2
 12736 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12737 066a 0133     		adds	r3, r3, #1
 12738 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12739              	.L503:
1699:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12740              		.loc 1 1699 0 is_stmt 0 discriminator 1
 12741 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12742 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12743 0678 9A42     		cmp	r2, r3
 12744 067a FFF4D9AE 		bcc	.L510
1722:..\src/command_processing.c ****                 }
1723:..\src/command_processing.c ****             }
1724:..\src/command_processing.c ****             
1725:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1726:..\src/command_processing.c ****             
1727:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12745              		.loc 1 1727 0 is_stmt 1
 12746 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12747 0682 1A46     		mov	r2, r3	@ movhi
 12748 0684 9200     		lsls	r2, r2, #2
 12749 0686 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 287


 12750 0688 1A46     		mov	r2, r3	@ movhi
 12751 068a 9100     		lsls	r1, r2, #2
 12752 068c 1A46     		mov	r2, r3	@ movhi
 12753 068e 0B46     		mov	r3, r1	@ movhi
 12754 0690 1344     		add	r3, r3, r2
 12755 0692 5B00     		lsls	r3, r3, #1
 12756 0694 9AB2     		uxth	r2, r3
 12757 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12758 069a 1344     		add	r3, r3, r2
 12759 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1728:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12760              		.loc 1 1728 0
 12761 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12762 06a4 5A1E     		subs	r2, r3, #1
 12763 06a6 07F1C803 		add	r3, r7, #200
 12764 06aa 2A49     		ldr	r1, .L537+12
 12765 06ac 1846     		mov	r0, r3
 12766 06ae FFF7FEFF 		bl	sprintf
1729:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12767              		.loc 1 1729 0
 12768 06b2 07F1C803 		add	r3, r7, #200
 12769 06b6 1846     		mov	r0, r3
 12770 06b8 FFF7FEFF 		bl	strlen
 12771 06bc 0346     		mov	r3, r0
 12772 06be 87F89336 		strb	r3, [r7, #1683]
1730:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12773              		.loc 1 1730 0
 12774 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12775 06c6 0233     		adds	r3, r3, #2
 12776 06c8 07F58A72 		add	r2, r7, #276
 12777 06cc 0221     		movs	r1, #2
 12778 06ce D154     		strb	r1, [r2, r3]
1731:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12779              		.loc 1 1731 0
 12780 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12781 06d4 0333     		adds	r3, r3, #3
 12782 06d6 07F58A72 		add	r2, r7, #276
 12783 06da 0121     		movs	r1, #1
 12784 06dc D154     		strb	r1, [r2, r3]
1732:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12785              		.loc 1 1732 0
 12786 06de B7F89436 		ldrh	r3, [r7, #1684]
 12787 06e2 0433     		adds	r3, r3, #4
 12788 06e4 1C4A     		ldr	r2, .L537+16
 12789 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12790 06ea 07F58A72 		add	r2, r7, #276
 12791 06ee D154     		strb	r1, [r2, r3]
1733:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12792              		.loc 1 1733 0
 12793 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12794 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12795 06f8 18E0     		b	.L511
 12796              	.L512:
1734:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12797              		.loc 1 1734 0 discriminator 3
 12798 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12799 06fe 5A1D     		adds	r2, r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 288


 12800 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12801 0704 1A44     		add	r2, r2, r3
 12802 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12803 070a D31A     		subs	r3, r2, r3
 12804 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12805 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12806 0714 8A1A     		subs	r2, r1, r2
 12807 0716 07F1C801 		add	r1, r7, #200
 12808 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12809 071c 07F58A72 		add	r2, r7, #276
 12810 0720 D154     		strb	r1, [r2, r3]
1733:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12811              		.loc 1 1733 0 discriminator 3
 12812 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12813 0726 013B     		subs	r3, r3, #1
 12814 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12815              	.L511:
1733:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12816              		.loc 1 1733 0 is_stmt 0 discriminator 1
 12817 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12818 0730 002B     		cmp	r3, #0
 12819 0732 E2D1     		bne	.L512
1735:..\src/command_processing.c ****                 
1736:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1737:..\src/command_processing.c ****             
1738:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12820              		.loc 1 1738 0 is_stmt 1
 12821 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12822 0738 3233     		adds	r3, r3, #50
 12823 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1739:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12824              		.loc 1 1739 0
 12825 073e 0023     		movs	r3, #0
 12826 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12827 0744 38E1     		b	.L513
 12828              	.L538:
 12829 0746 00BF     		.align	2
 12830              	.L537:
 12831 0748 00000000 		.word	IMU_connected
 12832 074c 00000000 		.word	MagCal
 12833 0750 00000000 		.word	N_IMU_Connected
 12834 0754 84100000 		.word	.LC144
 12835 0758 00000000 		.word	c_mem
 12836              	.L516:
1740:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12837              		.loc 1 1740 0
 12838 075c B7F89826 		ldrh	r2, [r7, #1688]
 12839 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 12840 0764 D118     		adds	r1, r2, r3
 12841 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 12842 076a D54A     		ldr	r2, .L539
 12843 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12844 076e 07F19C00 		add	r0, r7, #156
 12845 0772 0A46     		mov	r2, r1
 12846 0774 D349     		ldr	r1, .L539+4
 12847 0776 FFF7FEFF 		bl	sprintf
1741:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 289


 12848              		.loc 1 1741 0
 12849 077a 07F19C03 		add	r3, r7, #156
 12850 077e 1846     		mov	r0, r3
 12851 0780 FFF7FEFF 		bl	strlen
 12852 0784 0346     		mov	r3, r0
 12853 0786 87F88F36 		strb	r3, [r7, #1679]
1742:..\src/command_processing.c ****             
1743:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 12854              		.loc 1 1743 0
 12855 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12856 078e 1A46     		mov	r2, r3	@ movhi
 12857 0790 9200     		lsls	r2, r2, #2
 12858 0792 1344     		add	r3, r3, r2
 12859 0794 1A46     		mov	r2, r3	@ movhi
 12860 0796 9100     		lsls	r1, r2, #2
 12861 0798 1A46     		mov	r2, r3	@ movhi
 12862 079a 0B46     		mov	r3, r1	@ movhi
 12863 079c 1344     		add	r3, r3, r2
 12864 079e 5B00     		lsls	r3, r3, #1
 12865 07a0 9AB2     		uxth	r2, r3
 12866 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12867 07a6 1344     		add	r3, r3, r2
 12868 07a8 9BB2     		uxth	r3, r3
 12869 07aa 0233     		adds	r3, r3, #2
 12870 07ac 9BB2     		uxth	r3, r3
 12871 07ae 1A46     		mov	r2, r3
 12872 07b0 07F58A73 		add	r3, r7, #276
 12873 07b4 0221     		movs	r1, #2
 12874 07b6 9954     		strb	r1, [r3, r2]
1744:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 12875              		.loc 1 1744 0
 12876 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12877 07bc 1A46     		mov	r2, r3	@ movhi
 12878 07be 9200     		lsls	r2, r2, #2
 12879 07c0 1344     		add	r3, r3, r2
 12880 07c2 1A46     		mov	r2, r3	@ movhi
 12881 07c4 9100     		lsls	r1, r2, #2
 12882 07c6 1A46     		mov	r2, r3	@ movhi
 12883 07c8 0B46     		mov	r3, r1	@ movhi
 12884 07ca 1344     		add	r3, r3, r2
 12885 07cc 5B00     		lsls	r3, r3, #1
 12886 07ce 9AB2     		uxth	r2, r3
 12887 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12888 07d4 1344     		add	r3, r3, r2
 12889 07d6 9BB2     		uxth	r3, r3
 12890 07d8 0333     		adds	r3, r3, #3
 12891 07da 9BB2     		uxth	r3, r3
 12892 07dc 1A46     		mov	r2, r3
 12893 07de 07F58A73 		add	r3, r7, #276
 12894 07e2 0521     		movs	r1, #5
 12895 07e4 9954     		strb	r1, [r3, r2]
1745:..\src/command_processing.c ****                 
1746:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12896              		.loc 1 1746 0
 12897 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12898 07ea 1A46     		mov	r2, r3	@ movhi
 12899 07ec 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 290


 12900 07ee 1344     		add	r3, r3, r2
 12901 07f0 1A46     		mov	r2, r3	@ movhi
 12902 07f2 9100     		lsls	r1, r2, #2
 12903 07f4 1A46     		mov	r2, r3	@ movhi
 12904 07f6 0B46     		mov	r3, r1	@ movhi
 12905 07f8 1344     		add	r3, r3, r2
 12906 07fa 5B00     		lsls	r3, r3, #1
 12907 07fc 9AB2     		uxth	r2, r3
 12908 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12909 0802 1344     		add	r3, r3, r2
 12910 0804 9BB2     		uxth	r3, r3
 12911 0806 0433     		adds	r3, r3, #4
 12912 0808 9BB2     		uxth	r3, r3
 12913 080a 1846     		mov	r0, r3
 12914 080c B7F8A436 		ldrh	r3, [r7, #1700]
 12915 0810 AB4A     		ldr	r2, .L539
 12916 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12917 0814 1946     		mov	r1, r3
 12918 0816 AC4A     		ldr	r2, .L539+8
 12919 0818 0B46     		mov	r3, r1
 12920 081a 9B00     		lsls	r3, r3, #2
 12921 081c 0B44     		add	r3, r3, r1
 12922 081e 1344     		add	r3, r3, r2
 12923 0820 03F20223 		addw	r3, r3, #514
 12924 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12925 0826 07F58A73 		add	r3, r7, #276
 12926 082a 1A54     		strb	r2, [r3, r0]
1747:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12927              		.loc 1 1747 0
 12928 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12929 0830 1A46     		mov	r2, r3	@ movhi
 12930 0832 9200     		lsls	r2, r2, #2
 12931 0834 1344     		add	r3, r3, r2
 12932 0836 1A46     		mov	r2, r3	@ movhi
 12933 0838 9100     		lsls	r1, r2, #2
 12934 083a 1A46     		mov	r2, r3	@ movhi
 12935 083c 0B46     		mov	r3, r1	@ movhi
 12936 083e 1344     		add	r3, r3, r2
 12937 0840 5B00     		lsls	r3, r3, #1
 12938 0842 9AB2     		uxth	r2, r3
 12939 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12940 0848 1344     		add	r3, r3, r2
 12941 084a 9BB2     		uxth	r3, r3
 12942 084c 0533     		adds	r3, r3, #5
 12943 084e 9BB2     		uxth	r3, r3
 12944 0850 1846     		mov	r0, r3
 12945 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 12946 0856 9A4A     		ldr	r2, .L539
 12947 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12948 085a 1946     		mov	r1, r3
 12949 085c 9A4A     		ldr	r2, .L539+8
 12950 085e 0B46     		mov	r3, r1
 12951 0860 9B00     		lsls	r3, r3, #2
 12952 0862 0B44     		add	r3, r3, r1
 12953 0864 1344     		add	r3, r3, r2
 12954 0866 03F20323 		addw	r3, r3, #515
 12955 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 291


 12956 086c 07F58A73 		add	r3, r7, #276
 12957 0870 1A54     		strb	r2, [r3, r0]
1748:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12958              		.loc 1 1748 0
 12959 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12960 0876 1A46     		mov	r2, r3	@ movhi
 12961 0878 9200     		lsls	r2, r2, #2
 12962 087a 1344     		add	r3, r3, r2
 12963 087c 1A46     		mov	r2, r3	@ movhi
 12964 087e 9100     		lsls	r1, r2, #2
 12965 0880 1A46     		mov	r2, r3	@ movhi
 12966 0882 0B46     		mov	r3, r1	@ movhi
 12967 0884 1344     		add	r3, r3, r2
 12968 0886 5B00     		lsls	r3, r3, #1
 12969 0888 9AB2     		uxth	r2, r3
 12970 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12971 088e 1344     		add	r3, r3, r2
 12972 0890 9BB2     		uxth	r3, r3
 12973 0892 0633     		adds	r3, r3, #6
 12974 0894 9BB2     		uxth	r3, r3
 12975 0896 1846     		mov	r0, r3
 12976 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 12977 089c 884A     		ldr	r2, .L539
 12978 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12979 08a0 1946     		mov	r1, r3
 12980 08a2 894A     		ldr	r2, .L539+8
 12981 08a4 0B46     		mov	r3, r1
 12982 08a6 9B00     		lsls	r3, r3, #2
 12983 08a8 0B44     		add	r3, r3, r1
 12984 08aa 1344     		add	r3, r3, r2
 12985 08ac 03F50173 		add	r3, r3, #516
 12986 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12987 08b2 07F58A73 		add	r3, r7, #276
 12988 08b6 1A54     		strb	r2, [r3, r0]
1749:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12989              		.loc 1 1749 0
 12990 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12991 08bc 1A46     		mov	r2, r3	@ movhi
 12992 08be 9200     		lsls	r2, r2, #2
 12993 08c0 1344     		add	r3, r3, r2
 12994 08c2 1A46     		mov	r2, r3	@ movhi
 12995 08c4 9100     		lsls	r1, r2, #2
 12996 08c6 1A46     		mov	r2, r3	@ movhi
 12997 08c8 0B46     		mov	r3, r1	@ movhi
 12998 08ca 1344     		add	r3, r3, r2
 12999 08cc 5B00     		lsls	r3, r3, #1
 13000 08ce 9AB2     		uxth	r2, r3
 13001 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13002 08d4 1344     		add	r3, r3, r2
 13003 08d6 9BB2     		uxth	r3, r3
 13004 08d8 0733     		adds	r3, r3, #7
 13005 08da 9BB2     		uxth	r3, r3
 13006 08dc 1846     		mov	r0, r3
 13007 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13008 08e2 774A     		ldr	r2, .L539
 13009 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13010 08e6 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 292


 13011 08e8 774A     		ldr	r2, .L539+8
 13012 08ea 0B46     		mov	r3, r1
 13013 08ec 9B00     		lsls	r3, r3, #2
 13014 08ee 0B44     		add	r3, r3, r1
 13015 08f0 1344     		add	r3, r3, r2
 13016 08f2 03F20523 		addw	r3, r3, #517
 13017 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13018 08f8 07F58A73 		add	r3, r7, #276
 13019 08fc 1A54     		strb	r2, [r3, r0]
1750:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13020              		.loc 1 1750 0
 13021 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13022 0902 1A46     		mov	r2, r3	@ movhi
 13023 0904 9200     		lsls	r2, r2, #2
 13024 0906 1344     		add	r3, r3, r2
 13025 0908 1A46     		mov	r2, r3	@ movhi
 13026 090a 9100     		lsls	r1, r2, #2
 13027 090c 1A46     		mov	r2, r3	@ movhi
 13028 090e 0B46     		mov	r3, r1	@ movhi
 13029 0910 1344     		add	r3, r3, r2
 13030 0912 5B00     		lsls	r3, r3, #1
 13031 0914 9AB2     		uxth	r2, r3
 13032 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13033 091a 1344     		add	r3, r3, r2
 13034 091c 9BB2     		uxth	r3, r3
 13035 091e 0833     		adds	r3, r3, #8
 13036 0920 9BB2     		uxth	r3, r3
 13037 0922 1846     		mov	r0, r3
 13038 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13039 0928 654A     		ldr	r2, .L539
 13040 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13041 092c 1946     		mov	r1, r3
 13042 092e 664A     		ldr	r2, .L539+8
 13043 0930 0B46     		mov	r3, r1
 13044 0932 9B00     		lsls	r3, r3, #2
 13045 0934 0B44     		add	r3, r3, r1
 13046 0936 1344     		add	r3, r3, r2
 13047 0938 03F20623 		addw	r3, r3, #518
 13048 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13049 093e 07F58A73 		add	r3, r7, #276
 13050 0942 1A54     		strb	r2, [r3, r0]
1751:..\src/command_processing.c **** 
1752:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13051              		.loc 1 1752 0
 13052 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13053 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13054 094c 2BE0     		b	.L514
 13055              	.L515:
1753:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13056              		.loc 1 1753 0 discriminator 3
 13057 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13058 0952 1A46     		mov	r2, r3	@ movhi
 13059 0954 9200     		lsls	r2, r2, #2
 13060 0956 1344     		add	r3, r3, r2
 13061 0958 1A46     		mov	r2, r3	@ movhi
 13062 095a 9100     		lsls	r1, r2, #2
 13063 095c 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 293


 13064 095e 0B46     		mov	r3, r1	@ movhi
 13065 0960 1344     		add	r3, r3, r2
 13066 0962 5B00     		lsls	r3, r3, #1
 13067 0964 9AB2     		uxth	r2, r3
 13068 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13069 096a 1344     		add	r3, r3, r2
 13070 096c 9AB2     		uxth	r2, r3
 13071 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13072 0972 9BB2     		uxth	r3, r3
 13073 0974 1344     		add	r3, r3, r2
 13074 0976 9AB2     		uxth	r2, r3
 13075 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13076 097c D31A     		subs	r3, r2, r3
 13077 097e 9BB2     		uxth	r3, r3
 13078 0980 0933     		adds	r3, r3, #9
 13079 0982 9BB2     		uxth	r3, r3
 13080 0984 1946     		mov	r1, r3
 13081 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13082 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13083 098e D31A     		subs	r3, r2, r3
 13084 0990 07F19C02 		add	r2, r7, #156
 13085 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 13086 0996 07F58A73 		add	r3, r7, #276
 13087 099a 5A54     		strb	r2, [r3, r1]
1752:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13088              		.loc 1 1752 0 discriminator 3
 13089 099c B7F8A236 		ldrh	r3, [r7, #1698]
 13090 09a0 013B     		subs	r3, r3, #1
 13091 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13092              	.L514:
1752:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13093              		.loc 1 1752 0 is_stmt 0 discriminator 1
 13094 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13095 09aa 002B     		cmp	r3, #0
 13096 09ac CFD1     		bne	.L515
1739:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13097              		.loc 1 1739 0 is_stmt 1 discriminator 2
 13098 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13099 09b2 0133     		adds	r3, r3, #1
 13100 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13101              	.L513:
1739:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13102              		.loc 1 1739 0 is_stmt 0 discriminator 1
 13103 09b8 444B     		ldr	r3, .L539+12
 13104 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13105 09bc 9BB2     		uxth	r3, r3
 13106 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13107 09c2 9A42     		cmp	r2, r3
 13108 09c4 FFF4CAAE 		bcc	.L516
1754:..\src/command_processing.c ****             }  
1755:..\src/command_processing.c ****           
1756:..\src/command_processing.c **** 
1757:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1758:..\src/command_processing.c ****             
1759:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13109              		.loc 1 1759 0 is_stmt 1
 13110 09c8 404B     		ldr	r3, .L539+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 294


 13111 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13112 09cc 9BB2     		uxth	r3, r3
 13113 09ce 1A46     		mov	r2, r3	@ movhi
 13114 09d0 9200     		lsls	r2, r2, #2
 13115 09d2 1344     		add	r3, r3, r2
 13116 09d4 1A46     		mov	r2, r3	@ movhi
 13117 09d6 9100     		lsls	r1, r2, #2
 13118 09d8 1A46     		mov	r2, r3	@ movhi
 13119 09da 0B46     		mov	r3, r1	@ movhi
 13120 09dc 1344     		add	r3, r3, r2
 13121 09de 5B00     		lsls	r3, r3, #1
 13122 09e0 9AB2     		uxth	r2, r3
 13123 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13124 09e6 1344     		add	r3, r3, r2
 13125 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1760:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13126              		.loc 1 1760 0
 13127 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13128 09f0 364A     		ldr	r2, .L539+12
 13129 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13130 09f4 1A44     		add	r2, r2, r3
 13131 09f6 07F18003 		add	r3, r7, #128
 13132 09fa 3549     		ldr	r1, .L539+16
 13133 09fc 1846     		mov	r0, r3
 13134 09fe FFF7FEFF 		bl	sprintf
1761:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13135              		.loc 1 1761 0
 13136 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13137 0a06 0233     		adds	r3, r3, #2
 13138 0a08 07F58A72 		add	r2, r7, #276
 13139 0a0c 0021     		movs	r1, #0
 13140 0a0e D154     		strb	r1, [r2, r3]
1762:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13141              		.loc 1 1762 0
 13142 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13143 0a14 0333     		adds	r3, r3, #3
 13144 0a16 07F58A72 		add	r2, r7, #276
 13145 0a1a 0121     		movs	r1, #1
 13146 0a1c D154     		strb	r1, [r2, r3]
1763:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13147              		.loc 1 1763 0
 13148 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13149 0a22 0433     		adds	r3, r3, #4
 13150 0a24 284A     		ldr	r2, .L539+8
 13151 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13152 0a2a 07F58A72 		add	r2, r7, #276
 13153 0a2e D154     		strb	r1, [r2, r3]
1764:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13154              		.loc 1 1764 0
 13155 0a30 254B     		ldr	r3, .L539+8
 13156 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13157 0a36 012B     		cmp	r3, #1
 13158 0a38 17D0     		beq	.L518
 13159 0a3a 022B     		cmp	r3, #2
 13160 0a3c 28D0     		beq	.L519
 13161 0a3e 002B     		cmp	r3, #0
 13162 0a40 00D0     		beq	.L520
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 295


1765:..\src/command_processing.c ****                 case 0: 
1766:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1767:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1768:..\src/command_processing.c ****                     break;
1769:..\src/command_processing.c ****                 case 1: 
1770:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1771:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1772:..\src/command_processing.c ****                     break;
1773:..\src/command_processing.c ****                 case 2: 
1774:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1775:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1776:..\src/command_processing.c ****                     break;
1777:..\src/command_processing.c ****                 default:
1778:..\src/command_processing.c ****                     break;
 13163              		.loc 1 1778 0
 13164 0a42 38E0     		b	.L521
 13165              	.L520:
1766:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13166              		.loc 1 1766 0
 13167 0a44 07F18003 		add	r3, r7, #128
 13168 0a48 1846     		mov	r0, r3
 13169 0a4a FFF7FEFF 		bl	strlen
 13170 0a4e 0346     		mov	r3, r0
 13171 0a50 1A46     		mov	r2, r3
 13172 0a52 07F18003 		add	r3, r7, #128
 13173 0a56 1344     		add	r3, r3, r2
 13174 0a58 1E4A     		ldr	r2, .L539+20
 13175 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13176 0a5c 1860     		str	r0, [r3]	@ unaligned
 13177 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13178 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1767:..\src/command_processing.c ****                     break;
 13179              		.loc 1 1767 0
 13180 0a62 1A23     		movs	r3, #26
 13181 0a64 87F89D36 		strb	r3, [r7, #1693]
1768:..\src/command_processing.c ****                 case 1: 
 13182              		.loc 1 1768 0
 13183 0a68 25E0     		b	.L521
 13184              	.L518:
1770:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13185              		.loc 1 1770 0
 13186 0a6a 07F18003 		add	r3, r7, #128
 13187 0a6e 1846     		mov	r0, r3
 13188 0a70 FFF7FEFF 		bl	strlen
 13189 0a74 0346     		mov	r3, r0
 13190 0a76 1A46     		mov	r2, r3
 13191 0a78 07F18003 		add	r3, r7, #128
 13192 0a7c 1344     		add	r3, r3, r2
 13193 0a7e 164A     		ldr	r2, .L539+24
 13194 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13195 0a82 1860     		str	r0, [r3]	@ unaligned
 13196 0a84 1279     		ldrb	r2, [r2, #4]
 13197 0a86 1A71     		strb	r2, [r3, #4]
1771:..\src/command_processing.c ****                     break;
 13198              		.loc 1 1771 0
 13199 0a88 1923     		movs	r3, #25
 13200 0a8a 87F89D36 		strb	r3, [r7, #1693]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 296


1772:..\src/command_processing.c ****                 case 2: 
 13201              		.loc 1 1772 0
 13202 0a8e 12E0     		b	.L521
 13203              	.L519:
1774:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13204              		.loc 1 1774 0
 13205 0a90 07F18003 		add	r3, r7, #128
 13206 0a94 1846     		mov	r0, r3
 13207 0a96 FFF7FEFF 		bl	strlen
 13208 0a9a 0346     		mov	r3, r0
 13209 0a9c 1A46     		mov	r2, r3
 13210 0a9e 07F18003 		add	r3, r7, #128
 13211 0aa2 1344     		add	r3, r3, r2
 13212 0aa4 0D4A     		ldr	r2, .L539+28
 13213 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13214 0aa8 1860     		str	r0, [r3]	@ unaligned
 13215 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13216 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1775:..\src/command_processing.c ****                     break;
 13217              		.loc 1 1775 0
 13218 0aae 1A23     		movs	r3, #26
 13219 0ab0 87F89D36 		strb	r3, [r7, #1693]
1776:..\src/command_processing.c ****                 default:
 13220              		.loc 1 1776 0
 13221 0ab4 00BF     		nop
 13222              	.L521:
1779:..\src/command_processing.c ****             }            
1780:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13223              		.loc 1 1780 0
 13224 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13225 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13226 0abe 28E0     		b	.L522
 13227              	.L540:
 13228              		.align	2
 13229              	.L539:
 13230 0ac0 00000000 		.word	IMU_connected
 13231 0ac4 94100000 		.word	.LC145
 13232 0ac8 00000000 		.word	c_mem
 13233 0acc 00000000 		.word	N_IMU_Connected
 13234 0ad0 B0100000 		.word	.LC146
 13235 0ad4 C8100000 		.word	.LC147
 13236 0ad8 D0100000 		.word	.LC148
 13237 0adc D8100000 		.word	.LC149
 13238              	.L523:
1781:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13239              		.loc 1 1781 0 discriminator 3
 13240 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13241 0ae4 5A1D     		adds	r2, r3, #5
 13242 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13243 0aea 1A44     		add	r2, r2, r3
 13244 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13245 0af0 D31A     		subs	r3, r2, r3
 13246 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13247 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13248 0afa 8A1A     		subs	r2, r1, r2
 13249 0afc 07F18001 		add	r1, r7, #128
 13250 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 297


 13251 0b02 07F58A72 		add	r2, r7, #276
 13252 0b06 D154     		strb	r1, [r2, r3]
1780:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13253              		.loc 1 1780 0 discriminator 3
 13254 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13255 0b0c 013B     		subs	r3, r3, #1
 13256 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13257              	.L522:
1780:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13258              		.loc 1 1780 0 is_stmt 0 discriminator 1
 13259 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13260 0b16 002B     		cmp	r3, #0
 13261 0b18 E2D1     		bne	.L523
1782:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1783:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13262              		.loc 1 1783 0 is_stmt 1
 13263 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13264 0b1e 5A1D     		adds	r2, r3, #5
 13265 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13266 0b24 1344     		add	r3, r3, r2
 13267 0b26 07F58A72 		add	r2, r7, #276
 13268 0b2a 0121     		movs	r1, #1
 13269 0b2c D154     		strb	r1, [r2, r3]
1784:..\src/command_processing.c ****                   
1785:..\src/command_processing.c ****             
1786:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1787:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13270              		.loc 1 1787 0
 13271 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13272 0b32 3233     		adds	r3, r3, #50
 13273 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1788:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13274              		.loc 1 1788 0
 13275 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13276 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13277 0b40 1AE0     		b	.L524
 13278              	.L525:
1789:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13279              		.loc 1 1789 0 discriminator 3
 13280 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13281 0b46 0233     		adds	r3, r3, #2
 13282 0b48 9BB2     		uxth	r3, r3
 13283 0b4a 1A46     		mov	r2, r3
 13284 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13285 0b50 1A44     		add	r2, r2, r3
 13286 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13287 0b56 D31A     		subs	r3, r2, r3
 13288 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13289 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13290 0b60 8A1A     		subs	r2, r1, r2
 13291 0b62 07F10801 		add	r1, r7, #8
 13292 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13293 0b68 07F58A72 		add	r2, r7, #276
 13294 0b6c D154     		strb	r1, [r2, r3]
1788:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13295              		.loc 1 1788 0 discriminator 3
 13296 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 298


 13297 0b72 013B     		subs	r3, r3, #1
 13298 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13299              	.L524:
1788:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13300              		.loc 1 1788 0 is_stmt 0 discriminator 1
 13301 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13302 0b7c 002B     		cmp	r3, #0
 13303 0b7e E0D1     		bne	.L525
1790:..\src/command_processing.c **** 
1791:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13304              		.loc 1 1791 0 is_stmt 1
 13305 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13306 0b84 5C1E     		subs	r4, r3, #1
 13307 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13308 0b8a DBB2     		uxtb	r3, r3
 13309 0b8c 013B     		subs	r3, r3, #1
 13310 0b8e DAB2     		uxtb	r2, r3
 13311 0b90 07F58A73 		add	r3, r7, #276
 13312 0b94 1146     		mov	r1, r2
 13313 0b96 1846     		mov	r0, r3
 13314 0b98 FFF7FEFF 		bl	LCRChecksum
 13315 0b9c 0346     		mov	r3, r0
 13316 0b9e 1A46     		mov	r2, r3
 13317 0ba0 07F58A73 		add	r3, r7, #276
 13318 0ba4 1A55     		strb	r2, [r3, r4]
1792:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13319              		.loc 1 1792 0
 13320 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13321 0baa 07F58A73 		add	r3, r7, #276
 13322 0bae 1146     		mov	r1, r2
 13323 0bb0 1846     		mov	r0, r3
 13324 0bb2 FFF7FEFF 		bl	commWrite
1793:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13325              		.loc 1 1793 0
 13326 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1794:..\src/command_processing.c ****         break;
 13327              		.loc 1 1794 0
 13328 0bba 09E1     		b	.L526
 13329              	.L533:
1795:..\src/command_processing.c **** 
1796:..\src/command_processing.c **** //=========================================================     other_params
1797:..\src/command_processing.c ****         default: 
1798:..\src/command_processing.c ****             
1799:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13330              		.loc 1 1799 0
 13331 0bbc BB1D     		adds	r3, r7, #6
 13332 0bbe 1A88     		ldrh	r2, [r3]
 13333 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13334 0bc4 013B     		subs	r3, r3, #1
 13335 0bc6 9A42     		cmp	r2, r3
 13336 0bc8 C0F20181 		blt	.L534
1800:..\src/command_processing.c ****                 break;
1801:..\src/command_processing.c ****             
1802:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13337              		.loc 1 1802 0
 13338 0bcc BB1D     		adds	r3, r7, #6
 13339 0bce 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 299


 13340 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13341 0bd4 8149     		ldr	r1, .L541
 13342 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13343 0bd8 0B44     		add	r3, r3, r1
 13344 0bda 9A42     		cmp	r2, r3
 13345 0bdc 05D1     		bne	.L528
1803:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13346              		.loc 1 1803 0
 13347 0bde 804B     		ldr	r3, .L541+4
 13348 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13349 0be2 804B     		ldr	r3, .L541+8
 13350 0be4 83F80122 		strb	r2, [r3, #513]
1804:..\src/command_processing.c ****                 break;
 13351              		.loc 1 1804 0
 13352 0be8 F2E0     		b	.L526
 13353              	.L528:
1805:..\src/command_processing.c ****             }
1806:..\src/command_processing.c ****             
1807:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13354              		.loc 1 1807 0
 13355 0bea BB1D     		adds	r3, r7, #6
 13356 0bec 1A88     		ldrh	r2, [r3]
 13357 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13358 0bf2 013B     		subs	r3, r3, #1
 13359 0bf4 9A42     		cmp	r2, r3
 13360 0bf6 05D1     		bne	.L529
1808:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13361              		.loc 1 1808 0
 13362 0bf8 794B     		ldr	r3, .L541+4
 13363 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13364 0bfc 794B     		ldr	r3, .L541+8
 13365 0bfe 83F8A020 		strb	r2, [r3, #160]
1809:..\src/command_processing.c ****             }
1810:..\src/command_processing.c ****             else {
1811:..\src/command_processing.c ****             
1812:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1813:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1814:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1815:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1816:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1817:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1818:..\src/command_processing.c ****                 
1819:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1820:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1821:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1822:..\src/command_processing.c ****                 {
1823:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1824:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1825:..\src/command_processing.c ****                 }
1826:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1827:..\src/command_processing.c ****             
1828:..\src/command_processing.c ****             }
1829:..\src/command_processing.c ****             
1830:..\src/command_processing.c ****         break;
 13366              		.loc 1 1830 0
 13367 0c02 E5E0     		b	.L526
 13368              	.L529:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 300


1813:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13369              		.loc 1 1813 0
 13370 0c04 BB1D     		adds	r3, r7, #6
 13371 0c06 1A88     		ldrh	r2, [r3]
 13372 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13373 0c0c D31A     		subs	r3, r2, r3
 13374 0c0e 764A     		ldr	r2, .L541+12
 13375 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13376 0c12 1946     		mov	r1, r3
 13377 0c14 724B     		ldr	r3, .L541+4
 13378 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13379 0c18 724A     		ldr	r2, .L541+8
 13380 0c1a 0B46     		mov	r3, r1
 13381 0c1c 9B00     		lsls	r3, r3, #2
 13382 0c1e 0B44     		add	r3, r3, r1
 13383 0c20 1344     		add	r3, r3, r2
 13384 0c22 03F20223 		addw	r3, r3, #514
 13385 0c26 0246     		mov	r2, r0
 13386 0c28 1A70     		strb	r2, [r3]
1814:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13387              		.loc 1 1814 0
 13388 0c2a BB1D     		adds	r3, r7, #6
 13389 0c2c 1A88     		ldrh	r2, [r3]
 13390 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13391 0c32 D31A     		subs	r3, r2, r3
 13392 0c34 6C4A     		ldr	r2, .L541+12
 13393 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13394 0c38 1946     		mov	r1, r3
 13395 0c3a 694B     		ldr	r3, .L541+4
 13396 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13397 0c3e 694A     		ldr	r2, .L541+8
 13398 0c40 0B46     		mov	r3, r1
 13399 0c42 9B00     		lsls	r3, r3, #2
 13400 0c44 0B44     		add	r3, r3, r1
 13401 0c46 1344     		add	r3, r3, r2
 13402 0c48 03F20323 		addw	r3, r3, #515
 13403 0c4c 0246     		mov	r2, r0
 13404 0c4e 1A70     		strb	r2, [r3]
1815:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13405              		.loc 1 1815 0
 13406 0c50 BB1D     		adds	r3, r7, #6
 13407 0c52 1A88     		ldrh	r2, [r3]
 13408 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13409 0c58 D31A     		subs	r3, r2, r3
 13410 0c5a 634A     		ldr	r2, .L541+12
 13411 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13412 0c5e 1946     		mov	r1, r3
 13413 0c60 5F4B     		ldr	r3, .L541+4
 13414 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13415 0c64 5F4A     		ldr	r2, .L541+8
 13416 0c66 0B46     		mov	r3, r1
 13417 0c68 9B00     		lsls	r3, r3, #2
 13418 0c6a 0B44     		add	r3, r3, r1
 13419 0c6c 1344     		add	r3, r3, r2
 13420 0c6e 03F50173 		add	r3, r3, #516
 13421 0c72 0246     		mov	r2, r0
 13422 0c74 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 301


1816:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13423              		.loc 1 1816 0
 13424 0c76 BB1D     		adds	r3, r7, #6
 13425 0c78 1A88     		ldrh	r2, [r3]
 13426 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13427 0c7e D31A     		subs	r3, r2, r3
 13428 0c80 594A     		ldr	r2, .L541+12
 13429 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13430 0c84 1946     		mov	r1, r3
 13431 0c86 564B     		ldr	r3, .L541+4
 13432 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13433 0c8a 564A     		ldr	r2, .L541+8
 13434 0c8c 0B46     		mov	r3, r1
 13435 0c8e 9B00     		lsls	r3, r3, #2
 13436 0c90 0B44     		add	r3, r3, r1
 13437 0c92 1344     		add	r3, r3, r2
 13438 0c94 03F20523 		addw	r3, r3, #517
 13439 0c98 0246     		mov	r2, r0
 13440 0c9a 1A70     		strb	r2, [r3]
1817:..\src/command_processing.c ****                 
 13441              		.loc 1 1817 0
 13442 0c9c BB1D     		adds	r3, r7, #6
 13443 0c9e 1A88     		ldrh	r2, [r3]
 13444 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13445 0ca4 D31A     		subs	r3, r2, r3
 13446 0ca6 504A     		ldr	r2, .L541+12
 13447 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13448 0caa 1946     		mov	r1, r3
 13449 0cac 4C4B     		ldr	r3, .L541+4
 13450 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13451 0cb0 4C4A     		ldr	r2, .L541+8
 13452 0cb2 0B46     		mov	r3, r1
 13453 0cb4 9B00     		lsls	r3, r3, #2
 13454 0cb6 0B44     		add	r3, r3, r1
 13455 0cb8 1344     		add	r3, r3, r2
 13456 0cba 03F20623 		addw	r3, r3, #518
 13457 0cbe 0246     		mov	r2, r0
 13458 0cc0 1A70     		strb	r2, [r3]
1820:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13459              		.loc 1 1820 0
 13460 0cc2 4A4B     		ldr	r3, .L541+16
 13461 0cc4 0122     		movs	r2, #1
 13462 0cc6 1A60     		str	r2, [r3]
1821:..\src/command_processing.c ****                 {
 13463              		.loc 1 1821 0
 13464 0cc8 0023     		movs	r3, #0
 13465 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13466 0cce 71E0     		b	.L531
 13467              	.L532:
1823:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13468              		.loc 1 1823 0 discriminator 3
 13469 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13470 0cd4 444A     		ldr	r2, .L541+12
 13471 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13472 0cd8 1C46     		mov	r4, r3
 13473 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13474 0cde 424A     		ldr	r2, .L541+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 302


 13475 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13476 0ce2 1946     		mov	r1, r3
 13477 0ce4 3F4A     		ldr	r2, .L541+8
 13478 0ce6 0B46     		mov	r3, r1
 13479 0ce8 9B00     		lsls	r3, r3, #2
 13480 0cea 0B44     		add	r3, r3, r1
 13481 0cec 1344     		add	r3, r3, r2
 13482 0cee 03F20223 		addw	r3, r3, #514
 13483 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13484 0cf4 1A46     		mov	r2, r3
 13485 0cf6 1346     		mov	r3, r2
 13486 0cf8 5B00     		lsls	r3, r3, #1
 13487 0cfa 1344     		add	r3, r3, r2
 13488 0cfc 5B00     		lsls	r3, r3, #1
 13489 0cfe 5A1C     		adds	r2, r3, #1
 13490 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13491 0d04 3849     		ldr	r1, .L541+12
 13492 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13493 0d08 1846     		mov	r0, r3
 13494 0d0a 3649     		ldr	r1, .L541+8
 13495 0d0c 0346     		mov	r3, r0
 13496 0d0e 9B00     		lsls	r3, r3, #2
 13497 0d10 0344     		add	r3, r3, r0
 13498 0d12 0B44     		add	r3, r3, r1
 13499 0d14 03F20323 		addw	r3, r3, #515
 13500 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13501 0d1a 1946     		mov	r1, r3
 13502 0d1c 0B46     		mov	r3, r1
 13503 0d1e 5B00     		lsls	r3, r3, #1
 13504 0d20 0B44     		add	r3, r3, r1
 13505 0d22 5B00     		lsls	r3, r3, #1
 13506 0d24 1A44     		add	r2, r2, r3
 13507 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13508 0d2a 2F49     		ldr	r1, .L541+12
 13509 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13510 0d2e 1846     		mov	r0, r3
 13511 0d30 2C49     		ldr	r1, .L541+8
 13512 0d32 0346     		mov	r3, r0
 13513 0d34 9B00     		lsls	r3, r3, #2
 13514 0d36 0344     		add	r3, r3, r0
 13515 0d38 0B44     		add	r3, r3, r1
 13516 0d3a 03F50173 		add	r3, r3, #516
 13517 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13518 0d40 1946     		mov	r1, r3
 13519 0d42 0B46     		mov	r3, r1
 13520 0d44 5B00     		lsls	r3, r3, #1
 13521 0d46 0B44     		add	r3, r3, r1
 13522 0d48 5B00     		lsls	r3, r3, #1
 13523 0d4a 1A44     		add	r2, r2, r3
 13524 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13525 0d50 2549     		ldr	r1, .L541+12
 13526 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13527 0d54 1846     		mov	r0, r3
 13528 0d56 2349     		ldr	r1, .L541+8
 13529 0d58 0346     		mov	r3, r0
 13530 0d5a 9B00     		lsls	r3, r3, #2
 13531 0d5c 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 303


 13532 0d5e 0B44     		add	r3, r3, r1
 13533 0d60 03F20523 		addw	r3, r3, #517
 13534 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13535 0d66 1B01     		lsls	r3, r3, #4
 13536 0d68 1A44     		add	r2, r2, r3
 13537 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13538 0d6e 1E49     		ldr	r1, .L541+12
 13539 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13540 0d72 1846     		mov	r0, r3
 13541 0d74 1B49     		ldr	r1, .L541+8
 13542 0d76 0346     		mov	r3, r0
 13543 0d78 9B00     		lsls	r3, r3, #2
 13544 0d7a 0344     		add	r3, r3, r0
 13545 0d7c 0B44     		add	r3, r3, r1
 13546 0d7e 03F20623 		addw	r3, r3, #518
 13547 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13548 0d84 5B00     		lsls	r3, r3, #1
 13549 0d86 1344     		add	r3, r3, r2
 13550 0d88 0133     		adds	r3, r3, #1
 13551 0d8a 194A     		ldr	r2, .L541+20
 13552 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1824:..\src/command_processing.c ****                 }
 13553              		.loc 1 1824 0 discriminator 3
 13554 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13555 0d94 144A     		ldr	r2, .L541+12
 13556 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13557 0d98 1A46     		mov	r2, r3
 13558 0d9a 154B     		ldr	r3, .L541+20
 13559 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13560 0da0 124B     		ldr	r3, .L541+16
 13561 0da2 1B68     		ldr	r3, [r3]
 13562 0da4 1344     		add	r3, r3, r2
 13563 0da6 114A     		ldr	r2, .L541+16
 13564 0da8 1360     		str	r3, [r2]
1821:..\src/command_processing.c ****                 {
 13565              		.loc 1 1821 0 discriminator 3
 13566 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13567 0dae 0133     		adds	r3, r3, #1
 13568 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13569              	.L531:
1821:..\src/command_processing.c ****                 {
 13570              		.loc 1 1821 0 is_stmt 0 discriminator 1
 13571 0db4 094B     		ldr	r3, .L541
 13572 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13573 0db8 9BB2     		uxth	r3, r3
 13574 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13575 0dbe 9A42     		cmp	r2, r3
 13576 0dc0 86D3     		bcc	.L532
1826:..\src/command_processing.c ****             
 13577              		.loc 1 1826 0 is_stmt 1
 13578 0dc2 0A4B     		ldr	r3, .L541+16
 13579 0dc4 1B68     		ldr	r3, [r3]
 13580 0dc6 0133     		adds	r3, r3, #1
 13581 0dc8 084A     		ldr	r2, .L541+16
 13582 0dca 1360     		str	r3, [r2]
 13583              		.loc 1 1830 0
 13584 0dcc 00E0     		b	.L526
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 304


 13585              	.L534:
1800:..\src/command_processing.c ****             
 13586              		.loc 1 1800 0
 13587 0dce 00BF     		nop
 13588              	.L526:
1831:..\src/command_processing.c ****     }
1832:..\src/command_processing.c **** }
 13589              		.loc 1 1832 0 discriminator 1
 13590 0dd0 00BF     		nop
 13591 0dd2 07F5D567 		add	r7, r7, #1704
 13592              		.cfi_def_cfa_offset 16
 13593 0dd6 BD46     		mov	sp, r7
 13594              		.cfi_def_cfa_register 13
 13595              		@ sp needed
 13596 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13597              	.L542:
 13598 0dda 00BF     		.align	2
 13599              	.L541:
 13600 0ddc 00000000 		.word	N_IMU_Connected
 13601 0de0 00000000 		.word	g_rx
 13602 0de4 00000000 		.word	g_mem
 13603 0de8 00000000 		.word	IMU_connected
 13604 0dec 00000000 		.word	imus_data_size
 13605 0df0 00000000 		.word	single_imu_size
 13606              		.cfi_endproc
 13607              	.LFE70:
 13608              		.size	get_IMU_param_list, .-get_IMU_param_list
 13609              		.section	.text.setZeros,"ax",%progbits
 13610              		.align	2
 13611              		.global	setZeros
 13612              		.thumb
 13613              		.thumb_func
 13614              		.type	setZeros, %function
 13615              	setZeros:
 13616              	.LFB71:
1833:..\src/command_processing.c **** 
1834:..\src/command_processing.c **** //==============================================================================
1835:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1836:..\src/command_processing.c **** //==============================================================================
1837:..\src/command_processing.c **** 
1838:..\src/command_processing.c **** void setZeros()
1839:..\src/command_processing.c **** {
 13617              		.loc 1 1839 0
 13618              		.cfi_startproc
 13619              		@ args = 0, pretend = 0, frame = 8
 13620              		@ frame_needed = 1, uses_anonymous_args = 0
 13621 0000 90B5     		push	{r4, r7, lr}
 13622              		.cfi_def_cfa_offset 12
 13623              		.cfi_offset 4, -12
 13624              		.cfi_offset 7, -8
 13625              		.cfi_offset 14, -4
 13626 0002 83B0     		sub	sp, sp, #12
 13627              		.cfi_def_cfa_offset 24
 13628 0004 00AF     		add	r7, sp, #0
 13629              		.cfi_def_cfa_register 7
1840:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1841:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 305


1842:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13630              		.loc 1 1842 0
 13631 0006 0023     		movs	r3, #0
 13632 0008 BB71     		strb	r3, [r7, #6]
 13633 000a 26E0     		b	.L544
 13634              	.L547:
1843:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13635              		.loc 1 1843 0
 13636 000c 0023     		movs	r3, #0
 13637 000e FB71     		strb	r3, [r7, #7]
 13638 0010 1DE0     		b	.L545
 13639              	.L546:
1844:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 13640              		.loc 1 1844 0 discriminator 3
 13641 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13642 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 13643 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13644 0018 1648     		ldr	r0, .L548
 13645 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 13646 001e 1C46     		mov	r4, r3
 13647 0020 1548     		ldr	r0, .L548+4
 13648 0022 1346     		mov	r3, r2
 13649 0024 5B00     		lsls	r3, r3, #1
 13650 0026 1344     		add	r3, r3, r2
 13651 0028 9B00     		lsls	r3, r3, #2
 13652 002a 0B44     		add	r3, r3, r1
 13653 002c 6633     		adds	r3, r3, #102
 13654 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1845:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 13655              		.loc 1 1845 0 discriminator 3
 13656 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13657 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13658 0036 1149     		ldr	r1, .L548+8
 13659 0038 3420     		movs	r0, #52
 13660 003a 00FB02F2 		mul	r2, r0, r2
 13661 003e 0A44     		add	r2, r2, r1
 13662 0040 1344     		add	r3, r3, r2
 13663 0042 1833     		adds	r3, r3, #24
 13664 0044 0022     		movs	r2, #0
 13665 0046 1A70     		strb	r2, [r3]
1843:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13666              		.loc 1 1843 0 discriminator 3
 13667 0048 FB79     		ldrb	r3, [r7, #7]
 13668 004a 0133     		adds	r3, r3, #1
 13669 004c FB71     		strb	r3, [r7, #7]
 13670              	.L545:
1843:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13671              		.loc 1 1843 0 is_stmt 0 discriminator 1
 13672 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13673 0050 022B     		cmp	r3, #2
 13674 0052 DED9     		bls	.L546
1842:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13675              		.loc 1 1842 0 is_stmt 1 discriminator 2
 13676 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13677 0056 0133     		adds	r3, r3, #1
 13678 0058 BB71     		strb	r3, [r7, #6]
 13679              	.L544:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 306


1842:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13680              		.loc 1 1842 0 is_stmt 0 discriminator 1
 13681 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13682 005c 012B     		cmp	r3, #1
 13683 005e D5D9     		bls	.L547
1846:..\src/command_processing.c ****         }
1847:..\src/command_processing.c ****     }
1848:..\src/command_processing.c ****     reset_last_value_flag = 1;
 13684              		.loc 1 1848 0 is_stmt 1
 13685 0060 074B     		ldr	r3, .L548+12
 13686 0062 0122     		movs	r2, #1
 13687 0064 1A70     		strb	r2, [r3]
1849:..\src/command_processing.c **** 
1850:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13688              		.loc 1 1850 0
 13689 0066 0120     		movs	r0, #1
 13690 0068 FFF7FEFF 		bl	sendAcknowledgment
1851:..\src/command_processing.c **** }
 13691              		.loc 1 1851 0
 13692 006c 00BF     		nop
 13693 006e 0C37     		adds	r7, r7, #12
 13694              		.cfi_def_cfa_offset 12
 13695 0070 BD46     		mov	sp, r7
 13696              		.cfi_def_cfa_register 13
 13697              		@ sp needed
 13698 0072 90BD     		pop	{r4, r7, pc}
 13699              	.L549:
 13700              		.align	2
 13701              	.L548:
 13702 0074 00000000 		.word	data_encoder_raw
 13703 0078 00000000 		.word	g_mem
 13704 007c 00000000 		.word	g_meas
 13705 0080 00000000 		.word	reset_last_value_flag
 13706              		.cfi_endproc
 13707              	.LFE71:
 13708              		.size	setZeros, .-setZeros
 13709              		.section	.rodata
 13710              		.align	2
 13711              	.LC150:
 13712 1110 0D0A00   		.ascii	"\015\012\000"
 13713 1113 00       		.align	2
 13714              	.LC151:
 13715 1114 4669726D 		.ascii	"Firmware version: \000"
 13715      77617265 
 13715      20766572 
 13715      73696F6E 
 13715      3A2000
 13716 1127 00       		.align	2
 13717              	.LC152:
 13718 1128 47656E65 		.ascii	"Generic firmware v. 1.9 (PSoC5)\000"
 13718      72696320 
 13718      6669726D 
 13718      77617265 
 13718      20762E20 
 13719              		.align	2
 13720              	.LC153:
 13721 1148 2E0D0A0D 		.ascii	".\015\012\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 307


 13721      0A00
 13722 114e 0000     		.align	2
 13723              	.LC154:
 13724 1150 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13724      43452049 
 13724      4E464F0D 
 13724      0A00
 13725 115e 0000     		.align	2
 13726              	.LC155:
 13727 1160 49443A20 		.ascii	"ID: %d\015\012\000"
 13727      25640D0A 
 13727      00
 13728 1169 000000   		.align	2
 13729              	.LC156:
 13730 116c 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13730      63653A20 
 13730      534F4654 
 13730      48414E44 
 13730      2050524F 
 13731 1183 00       		.align	2
 13732              	.LC157:
 13733 1184 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13733      63653A20 
 13733      47454E45 
 13733      52494320 
 13733      32204D4F 
 13734 119f 00       		.align	2
 13735              	.LC158:
 13736 11a0 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13736      63653A20 
 13736      41495220 
 13736      4348414D 
 13736      42455253 
 13737 11c7 00       		.align	2
 13738              	.LC159:
 13739 11c8 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 13739      63653A20 
 13739      4F54544F 
 13739      424F434B 
 13739      20367620 
 13740 11f2 0000     		.align	2
 13741              	.LC160:
 13742 11f4 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 13742      63653A20 
 13742      534F4654 
 13742      48414E44 
 13742      2032204D 
 13743              		.align	2
 13744              	.LC161:
 13745 1210 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13745      20736964 
 13745      653A2052 
 13745      49474854 
 13745      0D0A00
 13746 1223 00       		.align	2
 13747              	.LC162:
 13748 1224 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 308


 13748      20736964 
 13748      653A204C 
 13748      4546540D 
 13748      0A00
 13749 1236 0000     		.align	2
 13750              	.LC163:
 13751 1238 55736572 		.ascii	"User: MARIA\015\012\000"
 13751      3A204D41 
 13751      5249410D 
 13751      0A00
 13752 1246 0000     		.align	2
 13753              	.LC164:
 13754 1248 55736572 		.ascii	"User: ROZA\015\012\000"
 13754      3A20524F 
 13754      5A410D0A 
 13754      00
 13755 1255 000000   		.align	2
 13756              	.LC165:
 13757 1258 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13757      3A204745 
 13757      4E455249 
 13757      43205553 
 13757      45520D0A 
 13758 126d 000000   		.align	2
 13759              	.LC166:
 13760 1270 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13760      52202564 
 13760      20494E46 
 13760      4F0D0A00 
 13761              		.align	2
 13762              	.LC167:
 13763 1280 4D6F746F 		.ascii	"Motor reference\000"
 13763      72207265 
 13763      66657265 
 13763      6E636500 
 13764              		.align	2
 13765              	.LC168:
 13766 1290 202D2043 		.ascii	" - Currents: \000"
 13766      75727265 
 13766      6E74733A 
 13766      2000
 13767 129e 0000     		.align	2
 13768              	.LC169:
 13769 12a0 202D2050 		.ascii	" - Pwm: \000"
 13769      776D3A20 
 13769      00
 13770 12a9 000000   		.align	2
 13771              	.LC170:
 13772 12ac 202D2050 		.ascii	" - Position: \000"
 13772      6F736974 
 13772      696F6E3A 
 13772      2000
 13773 12ba 0000     		.align	2
 13774              	.LC171:
 13775 12bc 25642000 		.ascii	"%d \000"
 13776              		.align	2
 13777              	.LC172:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 309


 13778 12c0 4D6F746F 		.ascii	"Motor enabled: \000"
 13778      7220656E 
 13778      61626C65 
 13778      643A2000 
 13779              		.align	2
 13780              	.LC173:
 13781 12d0 5945530D 		.ascii	"YES\015\012\000"
 13781      0A00
 13782 12d6 0000     		.align	2
 13783              	.LC174:
 13784 12d8 4E4F0D0A 		.ascii	"NO\015\012\000"
 13784      00
 13785 12dd 000000   		.align	2
 13786              	.LC175:
 13787 12e0 50574D20 		.ascii	"PWM rescaling activation: \000"
 13787      72657363 
 13787      616C696E 
 13787      67206163 
 13787      74697661 
 13788 12fb 00       		.align	2
 13789              	.LC176:
 13790 12fc 5945530A 		.ascii	"YES\012\000"
 13790      00
 13791 1301 000000   		.align	2
 13792              	.LC177:
 13793 1304 4E4F0A00 		.ascii	"NO\012\000"
 13794              		.align	2
 13795              	.LC178:
 13796 1308 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13796      4C696D69 
 13796      743A2025 
 13796      640D0A00 
 13797              		.align	2
 13798              	.LC179:
 13799 1318 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13799      41535552 
 13799      454D454E 
 13799      54532049 
 13799      4E464F0D 
 13800 132e 0000     		.align	2
 13801              	.LC180:
 13802 1330 53656E73 		.ascii	"Sensor value: \000"
 13802      6F722076 
 13802      616C7565 
 13802      3A2000
 13803 133f 00       		.align	2
 13804              	.LC181:
 13805 1340 256400   		.ascii	"%d\000"
 13806 1343 00       		.align	2
 13807              	.LC182:
 13808 1344 2C2000   		.ascii	", \000"
 13809 1347 00       		.align	2
 13810              	.LC183:
 13811 1348 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 13811      7469636B 
 13811      206D6561 
 13811      73757265 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 310


 13811      6D656E74 
 13812 1366 0000     		.align	2
 13813              	.LC184:
 13814 1368 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13814      65727920 
 13814      25642056 
 13814      6F6C7461 
 13814      67652028 
 13815 1385 000000   		.align	2
 13816              	.LC185:
 13817 1388 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 13817      20636861 
 13817      72676520 
 13817      706F7765 
 13817      72207465 
 13818 13af 00       		.align	2
 13819              	.LC186:
 13820 13b0 43757272 		.ascii	"Current %d (mA): %ld\000"
 13820      656E7420 
 13820      25642028 
 13820      6D41293A 
 13820      20256C64 
 13821 13c5 000000   		.align	2
 13822              	.LC187:
 13823 13c8 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 13823      20477261 
 13823      73702048 
 13823      6F6C6420 
 13823      43757272 
 13824 13ed 000000   		.align	2
 13825              	.LC188:
 13826 13f0 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13826      544F5220 
 13826      25642043 
 13826      4F4E4649 
 13826      47555241 
 13827 140b 00       		.align	2
 13828              	.LC189:
 13829 140c 50494420 		.ascii	"PID Controller: \000"
 13829      436F6E74 
 13829      726F6C6C 
 13829      65723A20 
 13829      00
 13830              		.global	__aeabi_i2d
 13831              		.global	__aeabi_ddiv
 13832 141d 000000   		.align	2
 13833              	.LC190:
 13834 1420 50202D3E 		.ascii	"P -> %f  \000"
 13834      20256620 
 13834      2000
 13835 142a 0000     		.align	2
 13836              	.LC191:
 13837 142c 49202D3E 		.ascii	"I -> %f  \000"
 13837      20256620 
 13837      2000
 13838 1436 0000     		.align	2
 13839              	.LC192:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 311


 13840 1438 44202D3E 		.ascii	"D -> %f\015\012\000"
 13840      2025660D 
 13840      0A00
 13841 1442 0000     		.align	2
 13842              	.LC193:
 13843 1444 43757272 		.ascii	"Current PID Controller: \000"
 13843      656E7420 
 13843      50494420 
 13843      436F6E74 
 13843      726F6C6C 
 13844 145d 000000   		.align	2
 13845              	.LC194:
 13846 1460 53746172 		.ascii	"Startup activation: YES\015\012\000"
 13846      74757020 
 13846      61637469 
 13846      76617469 
 13846      6F6E3A20 
 13847 147a 0000     		.align	2
 13848              	.LC195:
 13849 147c 53746172 		.ascii	"Startup activation: NO\015\012\000"
 13849      74757020 
 13849      61637469 
 13849      76617469 
 13849      6F6E3A20 
 13850 1495 000000   		.align	2
 13851              	.LC196:
 13852 1498 496E7075 		.ascii	"Input mode: USB\015\012\000"
 13852      74206D6F 
 13852      64653A20 
 13852      5553420D 
 13852      0A00
 13853 14aa 0000     		.align	2
 13854              	.LC197:
 13855 14ac 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 13855      74206D6F 
 13855      64653A20 
 13855      48616E64 
 13855      6C650D0A 
 13856 14c1 000000   		.align	2
 13857              	.LC198:
 13858 14c4 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 13858      74206D6F 
 13858      64653A20 
 13858      454D4720 
 13858      70726F70 
 13859 14e3 00       		.align	2
 13860              	.LC199:
 13861 14e4 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 13861      74206D6F 
 13861      64653A20 
 13861      454D4720 
 13861      696E7465 
 13862 14ff 00       		.align	2
 13863              	.LC200:
 13864 1500 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 13864      74206D6F 
 13864      64653A20 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 312


 13864      454D4720 
 13864      46434653 
 13865 1517 00       		.align	2
 13866              	.LC201:
 13867 1518 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 13867      74206D6F 
 13867      64653A20 
 13867      454D4720 
 13867      46434653 
 13868 1533 00       		.align	2
 13869              	.LC202:
 13870 1534 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 13870      74206D6F 
 13870      64653A20 
 13870      4A6F7973 
 13870      7469636B 
 13871 154b 00       		.align	2
 13872              	.LC203:
 13873 154c 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 13873      74206D6F 
 13873      64653A20 
 13873      454D4720 
 13873      70726F70 
 13874 157a 00       		.ascii	"\000"
 13875 157b 00       		.align	2
 13876              	.LC204:
 13877 157c 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 13877      726F6C20 
 13877      6D6F6465 
 13877      3A20506F 
 13877      73697469 
 13878 1595 000000   		.align	2
 13879              	.LC205:
 13880 1598 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 13880      726F6C20 
 13880      6D6F6465 
 13880      3A205057 
 13880      4D0D0A00 
 13881              		.align	2
 13882              	.LC206:
 13883 15ac 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 13883      726F6C20 
 13883      6D6F6465 
 13883      3A204375 
 13883      7272656E 
 13884              		.align	2
 13885              	.LC207:
 13886 15c4 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 13886      726F6C20 
 13886      6D6F6465 
 13886      3A20506F 
 13886      73697469 
 13887 15e9 000000   		.align	2
 13888              	.LC208:
 13889 15ec 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 13889      6C757465 
 13889      20656E63 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 313


 13889      6F646572 
 13889      20706F73 
 13890 160d 000000   		.align	2
 13891              	.LC209:
 13892 1610 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 13892      6C757465 
 13892      20656E63 
 13892      6F646572 
 13892      20706F73 
 13893              		.align	2
 13894              	.LC210:
 13895 1630 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 13895      722D4861 
 13895      6E646C65 
 13895      20526174 
 13895      696F3A20 
 13896 1649 000000   		.align	2
 13897              	.LC211:
 13898 164c 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 13898      64657220 
 13898      696E6469 
 13898      63657320 
 13898      75736564 
 13899 1675 000000   		.align	2
 13900              	.LC212:
 13901 1678 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 13901      74204765 
 13901      61723A20 
 13901      25642074 
 13901      65657468 
 13902 168f 00       		.align	2
 13903              	.LC213:
 13904 1690 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 13904      6E642047 
 13904      6561723A 
 13904      20256420 
 13904      74656574 
 13905              		.align	2
 13906              	.LC214:
 13907 16a8 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 13907      20696E76 
 13907      61726961 
 13907      6E743A20 
 13907      25640D0A 
 13908 16bd 000000   		.align	2
 13909              	.LC215:
 13910 16c0 53656E73 		.ascii	"Sensor resolution: \000"
 13910      6F722072 
 13910      65736F6C 
 13910      7574696F 
 13910      6E3A2000 
 13911              		.align	2
 13912              	.LC216:
 13913 16d4 4D656173 		.ascii	"Measurement Offset: \000"
 13913      7572656D 
 13913      656E7420 
 13913      4F666673 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 314


 13913      65743A20 
 13914 16e9 000000   		.align	2
 13915              	.LC217:
 13916 16ec 256C6400 		.ascii	"%ld\000"
 13917              		.align	2
 13918              	.LC218:
 13919 16f0 4D656173 		.ascii	"Measurement Multiplier: \000"
 13919      7572656D 
 13919      656E7420 
 13919      4D756C74 
 13919      69706C69 
 13920              		.global	__aeabi_f2d
 13921 1709 000000   		.align	2
 13922              	.LC219:
 13923 170c 256600   		.ascii	"%f\000"
 13924 170f 00       		.align	2
 13925              	.LC220:
 13926 1710 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 13926      656E7420 
 13926      6C6F6F6B 
 13926      75702074 
 13926      61626C65 
 13927 173e 00       		.ascii	"\000"
 13928 173f 00       		.align	2
 13929              	.LC221:
 13930 1740 506F7369 		.ascii	"Position limit active: %d\000"
 13930      74696F6E 
 13930      206C696D 
 13930      69742061 
 13930      63746976 
 13931 175a 0000     		.align	2
 13932              	.LC222:
 13933 175c 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 13933      74696F6E 
 13933      206C696D 
 13933      6974206D 
 13933      6F746F72 
 13934 177f 00       		.align	2
 13935              	.LC223:
 13936 1780 73757020 		.ascii	"sup -> %ld\015\012\000"
 13936      2D3E2025 
 13936      6C640D0A 
 13936      00
 13937 178d 000000   		.align	2
 13938              	.LC224:
 13939 1790 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 13939      73746570 
 13939      20706F73 
 13939      20616E64 
 13939      206E6567 
 13940              		.align	2
 13941              	.LC225:
 13942 17ac 43757272 		.ascii	"Current limit: %d\015\012\000"
 13942      656E7420 
 13942      6C696D69 
 13942      743A2025 
 13942      640D0A00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 315


 13943              		.align	2
 13944              	.LC226:
 13945 17c0 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 13945      7220626F 
 13945      61726420 
 13945      6173736F 
 13945      63696174 
 13946 17ea 0000     		.align	2
 13947              	.LC227:
 13948 17ec 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
 13948      65722074 
 13948      7970653A 
 13948      204D4333 
 13948      33383837 
 13949 180e 0000     		.align	2
 13950              	.LC228:
 13951 1810 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 13951      65722074 
 13951      7970653A 
 13951      20564E48 
 13951      35303139 
 13952              		.align	2
 13953              	.LC229:
 13954 1834 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 13954      72617465 
 13954      206C696D 
 13954      69746572 
 13954      2076616C 
 13955 1851 000000   		.align	2
 13956              	.LC230:
 13957 1854 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 13957      72657665 
 13957      72736962 
 13957      6C65206D 
 13957      6F746F72 
 13958              		.align	2
 13959              	.LC231:
 13960 1870 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 13960      72657665 
 13960      72736962 
 13960      6C65206D 
 13960      6F746F72 
 13961 188b 00       		.align	2
 13962              	.LC232:
 13963 188c 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 13963      434F4E46 
 13963      49475552 
 13963      4154494F 
 13963      4E0D0A00 
 13964              		.align	2
 13965              	.LC233:
 13966 18a0 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 13966      74687265 
 13966      73686F6C 
 13966      6473205B 
 13966      30202D20 
 13967 18c2 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 316


 13968              	.LC234:
 13969 18c4 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 13969      6D617820 
 13969      76616C75 
 13969      6573205B 
 13969      30202D20 
 13970              		.align	2
 13971              	.LC235:
 13972 18e8 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 13972      696E7665 
 13972      7273696F 
 13972      6E3A2059 
 13972      45530D0A 
 13973 18fd 000000   		.align	2
 13974              	.LC236:
 13975 1900 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 13975      696E7665 
 13975      7273696F 
 13975      6E3A204E 
 13975      4F0D0A00 
 13976              		.align	2
 13977              	.LC237:
 13978 1914 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 13978      62726174 
 13978      696F6E20 
 13978      656E6162 
 13978      6C65643A 
 13979 192f 00       		.align	2
 13980              	.LC238:
 13981 1930 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 13981      62726174 
 13981      696F6E20 
 13981      656E6162 
 13981      6C65643A 
 13982 194a 0000     		.align	2
 13983              	.LC239:
 13984 194c 454D4720 		.ascii	"EMG max speed: %d %d\000"
 13984      6D617820 
 13984      73706565 
 13984      643A2025 
 13984      64202564 
 13985 1961 000000   		.align	2
 13986              	.LC240:
 13987 1964 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 13987      74696F6E 
 13987      616C2041 
 13987      44432073 
 13987      656E736F 
 13988              		.align	2
 13989              	.LC241:
 13990 1984 41444320 		.ascii	"ADC %d -> %d\000"
 13990      2564202D 
 13990      3E202564 
 13990      00
 13991 1991 000000   		.align	2
 13992              	.LC242:
 13993 1994 454D4720 		.ascii	"EMG input %d -> %d\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 317


 13993      696E7075 
 13993      74202564 
 13993      202D3E20 
 13993      256400
 13994 19a7 00       		.align	2
 13995              	.LC243:
 13996 19a8 4A4F5953 		.ascii	"JOYSTICK CONFIGURATION\015\012\000"
 13996      5449434B 
 13996      20434F4E 
 13996      46494755 
 13996      52415449 
 13997 19c1 000000   		.align	2
 13998              	.LC244:
 13999 19c4 436C6F73 		.ascii	"Closure speed: %d\000"
 13999      75726520 
 13999      73706565 
 13999      643A2025 
 13999      6400
 14000 19d6 0000     		.align	2
 14001              	.LC245:
 14002 19d8 4A6F7973 		.ascii	"Joystick Threshold: %d\000"
 14002      7469636B 
 14002      20546872 
 14002      6573686F 
 14002      6C643A20 
 14003 19ef 00       		.align	2
 14004              	.LC246:
 14005 19f0 4A6F7973 		.ascii	"Joystick Gains - X:%hu  Y:%hu\000"
 14005      7469636B 
 14005      20476169 
 14005      6E73202D 
 14005      20583A25 
 14006 1a0e 0000     		.align	2
 14007              	.LC247:
 14008 1a10 52657374 		.ascii	"Rest time delay (ms): %d\000"
 14008      2074696D 
 14008      65206465 
 14008      6C617920 
 14008      286D7329 
 14009 1a29 000000   		.align	2
 14010              	.LC248:
 14011 1a2c 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 14011      2076656C 
 14011      6F636974 
 14011      7920636C 
 14011      6F737572 
 14012 1a52 0000     		.align	2
 14013              	.LC249:
 14014 1a54 52657374 		.ascii	"Rest position: %d\000"
 14014      20706F73 
 14014      6974696F 
 14014      6E3A2025 
 14014      6400
 14015 1a66 0000     		.align	2
 14016              	.LC250:
 14017 1a68 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 14017      436F6E6E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 318


 14017      65637465 
 14017      643A2025 
 14017      640D0A00 
 14018              		.align	2
 14019              	.LC251:
 14020 1a7c 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14020      20434F4E 
 14020      46494755 
 14020      52415449 
 14020      4F4E0D0A 
 14021 1a91 000000   		.align	2
 14022              	.LC252:
 14023 1a94 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14023      2564200D 
 14023      0A094944 
 14023      3A202564 
 14023      0D0A00
 14024 1aa7 00       		.align	2
 14025              	.LC253:
 14026 1aa8 09416363 		.ascii	"\011Accelerometers: \000"
 14026      656C6572 
 14026      6F6D6574 
 14026      6572733A 
 14026      2000
 14027 1aba 0000     		.align	2
 14028              	.LC254:
 14029 1abc 09477972 		.ascii	"\011Gyroscopes: \000"
 14029      6F73636F 
 14029      7065733A 
 14029      2000
 14030 1aca 0000     		.align	2
 14031              	.LC255:
 14032 1acc 094D6167 		.ascii	"\011Magnetometers: \000"
 14032      6E65746F 
 14032      6D657465 
 14032      72733A20 
 14032      00
 14033 1add 000000   		.align	2
 14034              	.LC256:
 14035 1ae0 09517561 		.ascii	"\011Quaternion: \000"
 14035      7465726E 
 14035      696F6E3A 
 14035      2000
 14036 1aee 0000     		.align	2
 14037              	.LC257:
 14038 1af0 0954656D 		.ascii	"\011Temperature: \000"
 14038      70657261 
 14038      74757265 
 14038      3A2000
 14039 1aff 00       		.align	2
 14040              	.LC258:
 14041 1b00 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 14041      44455220 
 14041      434F4E46 
 14041      49475552 
 14041      4154494F 
 14042              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 319


 14043              	.LC259:
 14044 1b18 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 14044      64657220 
 14044      436F6E6E 
 14044      65637465 
 14044      64204C69 
 14045 1b36 0000     		.align	2
 14046              	.LC260:
 14047 1b38 4C454654 		.ascii	"LEFT\000"
 14047      00
 14048 1b3d 000000   		.align	2
 14049              	.LC261:
 14050 1b40 52494748 		.ascii	"RIGHT\000"
 14050      5400
 14051 1b46 0000     		.align	2
 14052              	.LC262:
 14053 1b48 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 14053      2048414E 
 14053      44206D61 
 14053      696E2065 
 14053      6E636F64 
 14054 1b65 000000   		.align	2
 14055              	.LC263:
 14056 1b68 52617720 		.ascii	"Raw value [status]:\015\012\000"
 14056      76616C75 
 14056      65205B73 
 14056      74617475 
 14056      735D3A0D 
 14057 1b7e 0000     		.align	2
 14058              	.LC264:
 14059 1b80 4F4B00   		.ascii	"OK\000"
 14060 1b83 00       		.align	2
 14061              	.LC265:
 14062 1b84 5800     		.ascii	"X\000"
 14063 1b86 0000     		.align	2
 14064              	.LC266:
 14065 1b88 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 14065      25735D0D 
 14065      0A00
 14066 1b92 0000     		.align	2
 14067              	.LC267:
 14068 1b94 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14068      20465720 
 14068      6379636C 
 14068      65207469 
 14068      6D653A20 
 14069              		.align	2
 14070              	.LC268:
 14071 1bb0 0D0A0000 		.ascii	"\015\012\000\000"
 14072              		.section	.text.prepare_generic_info,"ax",%progbits
 14073              		.align	2
 14074              		.global	prepare_generic_info
 14075              		.thumb
 14076              		.thumb_func
 14077              		.type	prepare_generic_info, %function
 14078              	prepare_generic_info:
 14079              	.LFB72:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 320


1852:..\src/command_processing.c **** 
1853:..\src/command_processing.c **** //==============================================================================
1854:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1855:..\src/command_processing.c **** //==============================================================================
1856:..\src/command_processing.c **** 
1857:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1858:..\src/command_processing.c **** {
 14080              		.loc 1 1858 0
 14081              		.cfi_startproc
 14082              		@ args = 0, pretend = 0, frame = 152
 14083              		@ frame_needed = 1, uses_anonymous_args = 0
 14084 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14085              		.cfi_def_cfa_offset 36
 14086              		.cfi_offset 4, -36
 14087              		.cfi_offset 5, -32
 14088              		.cfi_offset 6, -28
 14089              		.cfi_offset 7, -24
 14090              		.cfi_offset 8, -20
 14091              		.cfi_offset 9, -16
 14092              		.cfi_offset 10, -12
 14093              		.cfi_offset 11, -8
 14094              		.cfi_offset 14, -4
 14095 0004 B1B0     		sub	sp, sp, #196
 14096              		.cfi_def_cfa_offset 232
 14097 0006 0AAF     		add	r7, sp, #40
 14098              		.cfi_def_cfa 7, 192
 14099 0008 7861     		str	r0, [r7, #20]
1859:..\src/command_processing.c ****     int i;
1860:..\src/command_processing.c **** 
1861:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14100              		.loc 1 1861 0
 14101 000a C34B     		ldr	r3, .L672
 14102 000c C7F88830 		str	r3, [r7, #136]
1862:..\src/command_processing.c ****     
1863:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14103              		.loc 1 1863 0
 14104 0010 C14B     		ldr	r3, .L672
 14105 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14106 0016 FA2B     		cmp	r3, #250
 14107 0018 02F07880 		beq	.L669
 14108              	.LBB16:
1864:..\src/command_processing.c ****         char str[100];
1865:..\src/command_processing.c ****         strcpy(info_string, "");
 14109              		.loc 1 1865 0
 14110 001c 7B69     		ldr	r3, [r7, #20]
 14111 001e 0022     		movs	r2, #0
 14112 0020 1A70     		strb	r2, [r3]
1866:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14113              		.loc 1 1866 0
 14114 0022 7869     		ldr	r0, [r7, #20]
 14115 0024 FFF7FEFF 		bl	strlen
 14116 0028 0346     		mov	r3, r0
 14117 002a 1A46     		mov	r2, r3
 14118 002c 7B69     		ldr	r3, [r7, #20]
 14119 002e 1344     		add	r3, r3, r2
 14120 0030 BA4A     		ldr	r2, .L672+4
 14121 0032 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 321


 14122 0034 9278     		ldrb	r2, [r2, #2]
 14123 0036 1980     		strh	r1, [r3]	@ unaligned
 14124 0038 9A70     		strb	r2, [r3, #2]
1867:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14125              		.loc 1 1867 0
 14126 003a 7869     		ldr	r0, [r7, #20]
 14127 003c FFF7FEFF 		bl	strlen
 14128 0040 0346     		mov	r3, r0
 14129 0042 1A46     		mov	r2, r3
 14130 0044 7B69     		ldr	r3, [r7, #20]
 14131 0046 1344     		add	r3, r3, r2
 14132 0048 B54A     		ldr	r2, .L672+8
 14133 004a 1D46     		mov	r5, r3
 14134 004c 1446     		mov	r4, r2
 14135 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14136 0050 2860     		str	r0, [r5]	@ unaligned
 14137 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14138 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 14139 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 14140 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14141 005a A278     		ldrb	r2, [r4, #2]
 14142 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14143 005e 1346     		mov	r3, r2
 14144 0060 AB74     		strb	r3, [r5, #18]
1868:..\src/command_processing.c ****         strcat(info_string, VERSION);
 14145              		.loc 1 1868 0
 14146 0062 7869     		ldr	r0, [r7, #20]
 14147 0064 FFF7FEFF 		bl	strlen
 14148 0068 0346     		mov	r3, r0
 14149 006a 1A46     		mov	r2, r3
 14150 006c 7B69     		ldr	r3, [r7, #20]
 14151 006e 1344     		add	r3, r3, r2
 14152 0070 AC4A     		ldr	r2, .L672+12
 14153 0072 1C46     		mov	r4, r3
 14154 0074 1546     		mov	r5, r2
 14155 0076 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14156 0078 2060     		str	r0, [r4]	@ unaligned
 14157 007a 6160     		str	r1, [r4, #4]	@ unaligned
 14158 007c A260     		str	r2, [r4, #8]	@ unaligned
 14159 007e E360     		str	r3, [r4, #12]	@ unaligned
 14160 0080 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14161 0082 2061     		str	r0, [r4, #16]	@ unaligned
 14162 0084 6161     		str	r1, [r4, #20]	@ unaligned
 14163 0086 A261     		str	r2, [r4, #24]	@ unaligned
 14164 0088 E361     		str	r3, [r4, #28]	@ unaligned
1869:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14165              		.loc 1 1869 0
 14166 008a 7869     		ldr	r0, [r7, #20]
 14167 008c FFF7FEFF 		bl	strlen
 14168 0090 0346     		mov	r3, r0
 14169 0092 1A46     		mov	r2, r3
 14170 0094 7B69     		ldr	r3, [r7, #20]
 14171 0096 1344     		add	r3, r3, r2
 14172 0098 A34A     		ldr	r2, .L672+16
 14173 009a 1068     		ldr	r0, [r2]	@ unaligned
 14174 009c 1860     		str	r0, [r3]	@ unaligned
 14175 009e 9288     		ldrh	r2, [r2, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 322


 14176 00a0 9A80     		strh	r2, [r3, #4]	@ unaligned
1870:..\src/command_processing.c **** 
1871:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14177              		.loc 1 1871 0
 14178 00a2 7869     		ldr	r0, [r7, #20]
 14179 00a4 FFF7FEFF 		bl	strlen
 14180 00a8 0346     		mov	r3, r0
 14181 00aa 1A46     		mov	r2, r3
 14182 00ac 7B69     		ldr	r3, [r7, #20]
 14183 00ae 1344     		add	r3, r3, r2
 14184 00b0 9E4A     		ldr	r2, .L672+20
 14185 00b2 1C46     		mov	r4, r3
 14186 00b4 1346     		mov	r3, r2
 14187 00b6 07CB     		ldmia	r3!, {r0, r1, r2}
 14188 00b8 2060     		str	r0, [r4]	@ unaligned
 14189 00ba 6160     		str	r1, [r4, #4]	@ unaligned
 14190 00bc A260     		str	r2, [r4, #8]	@ unaligned
 14191 00be 1B88     		ldrh	r3, [r3]	@ unaligned
 14192 00c0 A381     		strh	r3, [r4, #12]	@ unaligned
1872:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14193              		.loc 1 1872 0
 14194 00c2 D7F88830 		ldr	r3, [r7, #136]
 14195 00c6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14196 00ca 1A46     		mov	r2, r3
 14197 00cc 07F11803 		add	r3, r7, #24
 14198 00d0 9749     		ldr	r1, .L672+24
 14199 00d2 1846     		mov	r0, r3
 14200 00d4 FFF7FEFF 		bl	sprintf
1873:..\src/command_processing.c ****         strcat(info_string, str);
 14201              		.loc 1 1873 0
 14202 00d8 07F11803 		add	r3, r7, #24
 14203 00dc 1946     		mov	r1, r3
 14204 00de 7869     		ldr	r0, [r7, #20]
 14205 00e0 FFF7FEFF 		bl	strcat
1874:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14206              		.loc 1 1874 0
 14207 00e4 D7F88830 		ldr	r3, [r7, #136]
 14208 00e8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14209 00ec 042B     		cmp	r3, #4
 14210 00ee 00F29180 		bhi	.L670
 14211 00f2 01A2     		adr	r2, .L554
 14212 00f4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14213              		.p2align 2
 14214              	.L554:
 14215 00f8 0D010000 		.word	.L553+1
 14216 00fc 3B010000 		.word	.L555+1
 14217 0100 6B010000 		.word	.L556+1
 14218 0104 AD010000 		.word	.L557+1
 14219 0108 ED010000 		.word	.L558+1
 14220              		.p2align 1
 14221              	.L553:
1875:..\src/command_processing.c ****             case SOFTHAND_PRO:
1876:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14222              		.loc 1 1876 0
 14223 010c 7869     		ldr	r0, [r7, #20]
 14224 010e FFF7FEFF 		bl	strlen
 14225 0112 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 323


 14226 0114 1A46     		mov	r2, r3
 14227 0116 7B69     		ldr	r3, [r7, #20]
 14228 0118 1344     		add	r3, r3, r2
 14229 011a 864A     		ldr	r2, .L672+28
 14230 011c 1C46     		mov	r4, r3
 14231 011e 1546     		mov	r5, r2
 14232 0120 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14233 0122 2060     		str	r0, [r4]	@ unaligned
 14234 0124 6160     		str	r1, [r4, #4]	@ unaligned
 14235 0126 A260     		str	r2, [r4, #8]	@ unaligned
 14236 0128 E360     		str	r3, [r4, #12]	@ unaligned
 14237 012a 2868     		ldr	r0, [r5]	@ unaligned
 14238 012c 2061     		str	r0, [r4, #16]	@ unaligned
 14239 012e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14240 0130 AA79     		ldrb	r2, [r5, #6]
 14241 0132 A382     		strh	r3, [r4, #20]	@ unaligned
 14242 0134 1346     		mov	r3, r2
 14243 0136 A375     		strb	r3, [r4, #22]
1877:..\src/command_processing.c ****                 break;
 14244              		.loc 1 1877 0
 14245 0138 6DE0     		b	.L559
 14246              	.L555:
1878:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1879:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14247              		.loc 1 1879 0
 14248 013a 7869     		ldr	r0, [r7, #20]
 14249 013c FFF7FEFF 		bl	strlen
 14250 0140 0346     		mov	r3, r0
 14251 0142 1A46     		mov	r2, r3
 14252 0144 7B69     		ldr	r3, [r7, #20]
 14253 0146 1344     		add	r3, r3, r2
 14254 0148 7B4A     		ldr	r2, .L672+32
 14255 014a 1D46     		mov	r5, r3
 14256 014c 1446     		mov	r4, r2
 14257 014e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14258 0150 2860     		str	r0, [r5]	@ unaligned
 14259 0152 6960     		str	r1, [r5, #4]	@ unaligned
 14260 0154 AA60     		str	r2, [r5, #8]	@ unaligned
 14261 0156 EB60     		str	r3, [r5, #12]	@ unaligned
 14262 0158 03CC     		ldmia	r4!, {r0, r1}
 14263 015a 2861     		str	r0, [r5, #16]	@ unaligned
 14264 015c 6961     		str	r1, [r5, #20]	@ unaligned
 14265 015e 2388     		ldrh	r3, [r4]	@ unaligned
 14266 0160 A278     		ldrb	r2, [r4, #2]
 14267 0162 2B83     		strh	r3, [r5, #24]	@ unaligned
 14268 0164 1346     		mov	r3, r2
 14269 0166 AB76     		strb	r3, [r5, #26]
1880:..\src/command_processing.c ****                 break;
 14270              		.loc 1 1880 0
 14271 0168 55E0     		b	.L559
 14272              	.L556:
1881:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1882:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14273              		.loc 1 1882 0
 14274 016a 7869     		ldr	r0, [r7, #20]
 14275 016c FFF7FEFF 		bl	strlen
 14276 0170 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 324


 14277 0172 1A46     		mov	r2, r3
 14278 0174 7B69     		ldr	r3, [r7, #20]
 14279 0176 1344     		add	r3, r3, r2
 14280 0178 704A     		ldr	r2, .L672+36
 14281 017a 1446     		mov	r4, r2
 14282 017c 9E46     		mov	lr, r3
 14283 017e 04F1200C 		add	ip, r4, #32
 14284              	.L560:
 14285 0182 7546     		mov	r5, lr
 14286 0184 2646     		mov	r6, r4
 14287 0186 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14288 0188 2860     		str	r0, [r5]	@ unaligned
 14289 018a 6960     		str	r1, [r5, #4]	@ unaligned
 14290 018c AA60     		str	r2, [r5, #8]	@ unaligned
 14291 018e EB60     		str	r3, [r5, #12]	@ unaligned
 14292 0190 1034     		adds	r4, r4, #16
 14293 0192 0EF1100E 		add	lr, lr, #16
 14294 0196 6445     		cmp	r4, ip
 14295 0198 F3D1     		bne	.L560
 14296 019a 7346     		mov	r3, lr
 14297 019c 2246     		mov	r2, r4
 14298 019e 1068     		ldr	r0, [r2]	@ unaligned
 14299 01a0 1860     		str	r0, [r3]	@ unaligned
 14300 01a2 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14301 01a4 9279     		ldrb	r2, [r2, #6]
 14302 01a6 9980     		strh	r1, [r3, #4]	@ unaligned
 14303 01a8 9A71     		strb	r2, [r3, #6]
1883:..\src/command_processing.c ****                 break;
 14304              		.loc 1 1883 0
 14305 01aa 34E0     		b	.L559
 14306              	.L557:
1884:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1885:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14307              		.loc 1 1885 0
 14308 01ac 7869     		ldr	r0, [r7, #20]
 14309 01ae FFF7FEFF 		bl	strlen
 14310 01b2 0346     		mov	r3, r0
 14311 01b4 1A46     		mov	r2, r3
 14312 01b6 7B69     		ldr	r3, [r7, #20]
 14313 01b8 1344     		add	r3, r3, r2
 14314 01ba 614A     		ldr	r2, .L672+40
 14315 01bc 1446     		mov	r4, r2
 14316 01be 9E46     		mov	lr, r3
 14317 01c0 04F1200C 		add	ip, r4, #32
 14318              	.L561:
 14319 01c4 7546     		mov	r5, lr
 14320 01c6 2646     		mov	r6, r4
 14321 01c8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14322 01ca 2860     		str	r0, [r5]	@ unaligned
 14323 01cc 6960     		str	r1, [r5, #4]	@ unaligned
 14324 01ce AA60     		str	r2, [r5, #8]	@ unaligned
 14325 01d0 EB60     		str	r3, [r5, #12]	@ unaligned
 14326 01d2 1034     		adds	r4, r4, #16
 14327 01d4 0EF1100E 		add	lr, lr, #16
 14328 01d8 6445     		cmp	r4, ip
 14329 01da F3D1     		bne	.L561
 14330 01dc 7246     		mov	r2, lr
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 325


 14331 01de 2346     		mov	r3, r4
 14332 01e0 03CB     		ldmia	r3!, {r0, r1}
 14333 01e2 1060     		str	r0, [r2]	@ unaligned
 14334 01e4 5160     		str	r1, [r2, #4]	@ unaligned
 14335 01e6 1B88     		ldrh	r3, [r3]	@ unaligned
 14336 01e8 1381     		strh	r3, [r2, #8]	@ unaligned
1886:..\src/command_processing.c ****                 break;
 14337              		.loc 1 1886 0
 14338 01ea 14E0     		b	.L559
 14339              	.L558:
1887:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1888:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14340              		.loc 1 1888 0
 14341 01ec 7869     		ldr	r0, [r7, #20]
 14342 01ee FFF7FEFF 		bl	strlen
 14343 01f2 0346     		mov	r3, r0
 14344 01f4 1A46     		mov	r2, r3
 14345 01f6 7B69     		ldr	r3, [r7, #20]
 14346 01f8 1344     		add	r3, r3, r2
 14347 01fa 524A     		ldr	r2, .L672+44
 14348 01fc 1D46     		mov	r5, r3
 14349 01fe 1446     		mov	r4, r2
 14350 0200 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14351 0202 2860     		str	r0, [r5]	@ unaligned
 14352 0204 6960     		str	r1, [r5, #4]	@ unaligned
 14353 0206 AA60     		str	r2, [r5, #8]	@ unaligned
 14354 0208 EB60     		str	r3, [r5, #12]	@ unaligned
 14355 020a 07CC     		ldmia	r4!, {r0, r1, r2}
 14356 020c 2861     		str	r0, [r5, #16]	@ unaligned
 14357 020e 6961     		str	r1, [r5, #20]	@ unaligned
 14358 0210 AA61     		str	r2, [r5, #24]	@ unaligned
1889:..\src/command_processing.c ****                 break;
 14359              		.loc 1 1889 0
 14360 0212 00E0     		b	.L559
 14361              	.L670:
1890:..\src/command_processing.c ****             default:
1891:..\src/command_processing.c ****                 break;
 14362              		.loc 1 1891 0
 14363 0214 00BF     		nop
 14364              	.L559:
1892:..\src/command_processing.c ****         }
1893:..\src/command_processing.c ****         
1894:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14365              		.loc 1 1894 0
 14366 0216 D7F88830 		ldr	r3, [r7, #136]
 14367 021a 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14368 021e 002B     		cmp	r3, #0
 14369 0220 02D0     		beq	.L563
 14370 0222 012B     		cmp	r3, #1
 14371 0224 15D0     		beq	.L564
 14372 0226 26E0     		b	.L562
 14373              	.L563:
1895:..\src/command_processing.c ****             case RIGHT_HAND:
1896:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14374              		.loc 1 1896 0
 14375 0228 7869     		ldr	r0, [r7, #20]
 14376 022a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 326


 14377 022e 0346     		mov	r3, r0
 14378 0230 1A46     		mov	r2, r3
 14379 0232 7B69     		ldr	r3, [r7, #20]
 14380 0234 1344     		add	r3, r3, r2
 14381 0236 444A     		ldr	r2, .L672+48
 14382 0238 1D46     		mov	r5, r3
 14383 023a 1446     		mov	r4, r2
 14384 023c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14385 023e 2860     		str	r0, [r5]	@ unaligned
 14386 0240 6960     		str	r1, [r5, #4]	@ unaligned
 14387 0242 AA60     		str	r2, [r5, #8]	@ unaligned
 14388 0244 EB60     		str	r3, [r5, #12]	@ unaligned
 14389 0246 2388     		ldrh	r3, [r4]	@ unaligned
 14390 0248 A278     		ldrb	r2, [r4, #2]
 14391 024a 2B82     		strh	r3, [r5, #16]	@ unaligned
 14392 024c 1346     		mov	r3, r2
 14393 024e AB74     		strb	r3, [r5, #18]
1897:..\src/command_processing.c ****                 break;
 14394              		.loc 1 1897 0
 14395 0250 11E0     		b	.L562
 14396              	.L564:
1898:..\src/command_processing.c ****             case LEFT_HAND:
1899:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14397              		.loc 1 1899 0
 14398 0252 7869     		ldr	r0, [r7, #20]
 14399 0254 FFF7FEFF 		bl	strlen
 14400 0258 0346     		mov	r3, r0
 14401 025a 1A46     		mov	r2, r3
 14402 025c 7B69     		ldr	r3, [r7, #20]
 14403 025e 1344     		add	r3, r3, r2
 14404 0260 3A4A     		ldr	r2, .L672+52
 14405 0262 1D46     		mov	r5, r3
 14406 0264 1446     		mov	r4, r2
 14407 0266 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14408 0268 2860     		str	r0, [r5]	@ unaligned
 14409 026a 6960     		str	r1, [r5, #4]	@ unaligned
 14410 026c AA60     		str	r2, [r5, #8]	@ unaligned
 14411 026e EB60     		str	r3, [r5, #12]	@ unaligned
 14412 0270 2388     		ldrh	r3, [r4]	@ unaligned
 14413 0272 2B82     		strh	r3, [r5, #16]	@ unaligned
1900:..\src/command_processing.c ****                 break;
 14414              		.loc 1 1900 0
 14415 0274 00BF     		nop
 14416              	.L562:
1901:..\src/command_processing.c ****         }
1902:..\src/command_processing.c **** 
1903:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14417              		.loc 1 1903 0
 14418 0276 D7F88830 		ldr	r3, [r7, #136]
 14419 027a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14420 027e 012B     		cmp	r3, #1
 14421 0280 02D0     		beq	.L566
 14422 0282 022B     		cmp	r3, #2
 14423 0284 11D0     		beq	.L567
 14424 0286 21E0     		b	.L668
 14425              	.L566:
1904:..\src/command_processing.c ****             case MARIA:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 327


1905:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14426              		.loc 1 1905 0
 14427 0288 7869     		ldr	r0, [r7, #20]
 14428 028a FFF7FEFF 		bl	strlen
 14429 028e 0346     		mov	r3, r0
 14430 0290 1A46     		mov	r2, r3
 14431 0292 7B69     		ldr	r3, [r7, #20]
 14432 0294 1344     		add	r3, r3, r2
 14433 0296 2E4A     		ldr	r2, .L672+56
 14434 0298 1C46     		mov	r4, r3
 14435 029a 1346     		mov	r3, r2
 14436 029c 07CB     		ldmia	r3!, {r0, r1, r2}
 14437 029e 2060     		str	r0, [r4]	@ unaligned
 14438 02a0 6160     		str	r1, [r4, #4]	@ unaligned
 14439 02a2 A260     		str	r2, [r4, #8]	@ unaligned
 14440 02a4 1B88     		ldrh	r3, [r3]	@ unaligned
 14441 02a6 A381     		strh	r3, [r4, #12]	@ unaligned
1906:..\src/command_processing.c ****                 break;
 14442              		.loc 1 1906 0
 14443 02a8 24E0     		b	.L568
 14444              	.L567:
1907:..\src/command_processing.c ****             case ROZA:
1908:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 14445              		.loc 1 1908 0
 14446 02aa 7869     		ldr	r0, [r7, #20]
 14447 02ac FFF7FEFF 		bl	strlen
 14448 02b0 0346     		mov	r3, r0
 14449 02b2 1A46     		mov	r2, r3
 14450 02b4 7B69     		ldr	r3, [r7, #20]
 14451 02b6 1344     		add	r3, r3, r2
 14452 02b8 264A     		ldr	r2, .L672+60
 14453 02ba 1C46     		mov	r4, r3
 14454 02bc 1346     		mov	r3, r2
 14455 02be 07CB     		ldmia	r3!, {r0, r1, r2}
 14456 02c0 2060     		str	r0, [r4]	@ unaligned
 14457 02c2 6160     		str	r1, [r4, #4]	@ unaligned
 14458 02c4 A260     		str	r2, [r4, #8]	@ unaligned
 14459 02c6 1B78     		ldrb	r3, [r3]
 14460 02c8 2373     		strb	r3, [r4, #12]
1909:..\src/command_processing.c ****                 break;
 14461              		.loc 1 1909 0
 14462 02ca 13E0     		b	.L568
 14463              	.L668:
1910:..\src/command_processing.c ****             default:
1911:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14464              		.loc 1 1911 0
 14465 02cc 7869     		ldr	r0, [r7, #20]
 14466 02ce FFF7FEFF 		bl	strlen
 14467 02d2 0346     		mov	r3, r0
 14468 02d4 1A46     		mov	r2, r3
 14469 02d6 7B69     		ldr	r3, [r7, #20]
 14470 02d8 1344     		add	r3, r3, r2
 14471 02da 1F4A     		ldr	r2, .L672+64
 14472 02dc 1D46     		mov	r5, r3
 14473 02de 1446     		mov	r4, r2
 14474 02e0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14475 02e2 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 328


 14476 02e4 6960     		str	r1, [r5, #4]	@ unaligned
 14477 02e6 AA60     		str	r2, [r5, #8]	@ unaligned
 14478 02e8 EB60     		str	r3, [r5, #12]	@ unaligned
 14479 02ea 2068     		ldr	r0, [r4]	@ unaligned
 14480 02ec 2861     		str	r0, [r5, #16]	@ unaligned
 14481 02ee 2379     		ldrb	r3, [r4, #4]
 14482 02f0 2B75     		strb	r3, [r5, #20]
1912:..\src/command_processing.c ****                 break;
 14483              		.loc 1 1912 0
 14484 02f2 00BF     		nop
 14485              	.L568:
1913:..\src/command_processing.c ****         }
1914:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14486              		.loc 1 1914 0
 14487 02f4 7869     		ldr	r0, [r7, #20]
 14488 02f6 FFF7FEFF 		bl	strlen
 14489 02fa 0346     		mov	r3, r0
 14490 02fc 1A46     		mov	r2, r3
 14491 02fe 7B69     		ldr	r3, [r7, #20]
 14492 0300 1344     		add	r3, r3, r2
 14493 0302 064A     		ldr	r2, .L672+4
 14494 0304 1188     		ldrh	r1, [r2]	@ unaligned
 14495 0306 9278     		ldrb	r2, [r2, #2]
 14496 0308 1980     		strh	r1, [r3]	@ unaligned
 14497 030a 9A70     		strb	r2, [r3, #2]
 14498              	.LBB17:
1915:..\src/command_processing.c ****         
1916:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14499              		.loc 1 1916 0
 14500 030c 0023     		movs	r3, #0
 14501 030e 87F89330 		strb	r3, [r7, #147]
 14502 0312 01F0D9B9 		b	.L569
 14503              	.L673:
 14504 0316 00BF     		.align	2
 14505              	.L672:
 14506 0318 00000000 		.word	c_mem
 14507 031c 10110000 		.word	.LC150
 14508 0320 14110000 		.word	.LC151
 14509 0324 28110000 		.word	.LC152
 14510 0328 48110000 		.word	.LC153
 14511 032c 50110000 		.word	.LC154
 14512 0330 60110000 		.word	.LC155
 14513 0334 6C110000 		.word	.LC156
 14514 0338 84110000 		.word	.LC157
 14515 033c A0110000 		.word	.LC158
 14516 0340 C8110000 		.word	.LC159
 14517 0344 F4110000 		.word	.LC160
 14518 0348 10120000 		.word	.LC161
 14519 034c 24120000 		.word	.LC162
 14520 0350 38120000 		.word	.LC163
 14521 0354 48120000 		.word	.LC164
 14522 0358 58120000 		.word	.LC165
 14523              	.L634:
 14524              	.LBB18:
1917:..\src/command_processing.c ****             
1918:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14525              		.loc 1 1918 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 329


 14526 035c 97F89330 		ldrb	r3, [r7, #147]
 14527 0360 87F88730 		strb	r3, [r7, #135]
1919:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14528              		.loc 1 1919 0
 14529 0364 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 14530 0368 1346     		mov	r3, r2
 14531 036a DB00     		lsls	r3, r3, #3
 14532 036c 9B1A     		subs	r3, r3, r2
 14533 036e 1B01     		lsls	r3, r3, #4
 14534 0370 B033     		adds	r3, r3, #176
 14535 0372 D7F88820 		ldr	r2, [r7, #136]
 14536 0376 1344     		add	r3, r3, r2
 14537 0378 C7F88030 		str	r3, [r7, #128]
1920:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14538              		.loc 1 1920 0
 14539 037c D7F88030 		ldr	r3, [r7, #128]
 14540 0380 93F86030 		ldrb	r3, [r3, #96]
 14541 0384 87F87F30 		strb	r3, [r7, #127]
1921:..\src/command_processing.c ****                   
1922:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14542              		.loc 1 1922 0
 14543 0388 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14544 038c 5A1C     		adds	r2, r3, #1
 14545 038e 07F11803 		add	r3, r7, #24
 14546 0392 AE49     		ldr	r1, .L674
 14547 0394 1846     		mov	r0, r3
 14548 0396 FFF7FEFF 		bl	sprintf
1923:..\src/command_processing.c ****             strcat(info_string, str);
 14549              		.loc 1 1923 0
 14550 039a 07F11803 		add	r3, r7, #24
 14551 039e 1946     		mov	r1, r3
 14552 03a0 7869     		ldr	r0, [r7, #20]
 14553 03a2 FFF7FEFF 		bl	strcat
1924:..\src/command_processing.c ****                         
1925:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14554              		.loc 1 1925 0
 14555 03a6 7869     		ldr	r0, [r7, #20]
 14556 03a8 FFF7FEFF 		bl	strlen
 14557 03ac 0346     		mov	r3, r0
 14558 03ae 1A46     		mov	r2, r3
 14559 03b0 7B69     		ldr	r3, [r7, #20]
 14560 03b2 1344     		add	r3, r3, r2
 14561 03b4 A64A     		ldr	r2, .L674+4
 14562 03b6 1C46     		mov	r4, r3
 14563 03b8 1546     		mov	r5, r2
 14564 03ba 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14565 03bc 2060     		str	r0, [r4]	@ unaligned
 14566 03be 6160     		str	r1, [r4, #4]	@ unaligned
 14567 03c0 A260     		str	r2, [r4, #8]	@ unaligned
 14568 03c2 E360     		str	r3, [r4, #12]	@ unaligned
1926:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14569              		.loc 1 1926 0
 14570 03c4 D7F88030 		ldr	r3, [r7, #128]
 14571 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14572 03cc 022B     		cmp	r3, #2
 14573 03ce 10D1     		bne	.L570
1927:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 330


 14574              		.loc 1 1927 0
 14575 03d0 7869     		ldr	r0, [r7, #20]
 14576 03d2 FFF7FEFF 		bl	strlen
 14577 03d6 0346     		mov	r3, r0
 14578 03d8 1A46     		mov	r2, r3
 14579 03da 7B69     		ldr	r3, [r7, #20]
 14580 03dc 1344     		add	r3, r3, r2
 14581 03de 9D4A     		ldr	r2, .L674+8
 14582 03e0 1C46     		mov	r4, r3
 14583 03e2 1346     		mov	r3, r2
 14584 03e4 07CB     		ldmia	r3!, {r0, r1, r2}
 14585 03e6 2060     		str	r0, [r4]	@ unaligned
 14586 03e8 6160     		str	r1, [r4, #4]	@ unaligned
 14587 03ea A260     		str	r2, [r4, #8]	@ unaligned
 14588 03ec 1B88     		ldrh	r3, [r3]	@ unaligned
 14589 03ee A381     		strh	r3, [r4, #12]	@ unaligned
 14590 03f0 25E0     		b	.L571
 14591              	.L570:
1928:..\src/command_processing.c ****             else {
1929:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14592              		.loc 1 1929 0
 14593 03f2 D7F88030 		ldr	r3, [r7, #128]
 14594 03f6 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14595 03fa 012B     		cmp	r3, #1
 14596 03fc 0FD1     		bne	.L572
1930:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14597              		.loc 1 1930 0
 14598 03fe 7869     		ldr	r0, [r7, #20]
 14599 0400 FFF7FEFF 		bl	strlen
 14600 0404 0346     		mov	r3, r0
 14601 0406 1A46     		mov	r2, r3
 14602 0408 7B69     		ldr	r3, [r7, #20]
 14603 040a 1344     		add	r3, r3, r2
 14604 040c 9249     		ldr	r1, .L674+12
 14605 040e 1A46     		mov	r2, r3
 14606 0410 0B46     		mov	r3, r1
 14607 0412 03CB     		ldmia	r3!, {r0, r1}
 14608 0414 1060     		str	r0, [r2]	@ unaligned
 14609 0416 5160     		str	r1, [r2, #4]	@ unaligned
 14610 0418 1B78     		ldrb	r3, [r3]
 14611 041a 1372     		strb	r3, [r2, #8]
 14612 041c 0FE0     		b	.L571
 14613              	.L572:
1931:..\src/command_processing.c ****                 else
1932:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14614              		.loc 1 1932 0
 14615 041e 7869     		ldr	r0, [r7, #20]
 14616 0420 FFF7FEFF 		bl	strlen
 14617 0424 0346     		mov	r3, r0
 14618 0426 1A46     		mov	r2, r3
 14619 0428 7B69     		ldr	r3, [r7, #20]
 14620 042a 1344     		add	r3, r3, r2
 14621 042c 8B4A     		ldr	r2, .L674+16
 14622 042e 1C46     		mov	r4, r3
 14623 0430 1346     		mov	r3, r2
 14624 0432 07CB     		ldmia	r3!, {r0, r1, r2}
 14625 0434 2060     		str	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 331


 14626 0436 6160     		str	r1, [r4, #4]	@ unaligned
 14627 0438 A260     		str	r2, [r4, #8]	@ unaligned
 14628 043a 1B88     		ldrh	r3, [r3]	@ unaligned
 14629 043c A381     		strh	r3, [r4, #12]	@ unaligned
 14630              	.L571:
1933:..\src/command_processing.c ****             }
1934:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14631              		.loc 1 1934 0
 14632 043e D7F88030 		ldr	r3, [r7, #128]
 14633 0442 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14634 0446 022B     		cmp	r3, #2
 14635 0448 13D1     		bne	.L573
1935:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14636              		.loc 1 1935 0
 14637 044a 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14638 044e 844A     		ldr	r2, .L674+20
 14639 0450 1B01     		lsls	r3, r3, #4
 14640 0452 1344     		add	r3, r3, r2
 14641 0454 0433     		adds	r3, r3, #4
 14642 0456 1A68     		ldr	r2, [r3]
 14643 0458 07F11803 		add	r3, r7, #24
 14644 045c 8149     		ldr	r1, .L674+24
 14645 045e 1846     		mov	r0, r3
 14646 0460 FFF7FEFF 		bl	sprintf
1936:..\src/command_processing.c ****                 strcat(info_string,str);
 14647              		.loc 1 1936 0
 14648 0464 07F11803 		add	r3, r7, #24
 14649 0468 1946     		mov	r1, r3
 14650 046a 7869     		ldr	r0, [r7, #20]
 14651 046c FFF7FEFF 		bl	strcat
 14652 0470 39E0     		b	.L574
 14653              	.L573:
1937:..\src/command_processing.c ****             }
1938:..\src/command_processing.c ****             else {
1939:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14654              		.loc 1 1939 0
 14655 0472 D7F88030 		ldr	r3, [r7, #128]
 14656 0476 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14657 047a 012B     		cmp	r3, #1
 14658 047c 13D1     		bne	.L575
1940:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14659              		.loc 1 1940 0
 14660 047e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14661 0482 774A     		ldr	r2, .L674+20
 14662 0484 1B01     		lsls	r3, r3, #4
 14663 0486 1344     		add	r3, r3, r2
 14664 0488 0833     		adds	r3, r3, #8
 14665 048a 1A68     		ldr	r2, [r3]
 14666 048c 07F11803 		add	r3, r7, #24
 14667 0490 7449     		ldr	r1, .L674+24
 14668 0492 1846     		mov	r0, r3
 14669 0494 FFF7FEFF 		bl	sprintf
1941:..\src/command_processing.c ****                     strcat(info_string,str);
 14670              		.loc 1 1941 0
 14671 0498 07F11803 		add	r3, r7, #24
 14672 049c 1946     		mov	r1, r3
 14673 049e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 332


 14674 04a0 FFF7FEFF 		bl	strcat
 14675 04a4 1FE0     		b	.L574
 14676              	.L575:
1942:..\src/command_processing.c ****                 }
1943:..\src/command_processing.c ****                 else {
1944:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14677              		.loc 1 1944 0
 14678 04a6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14679 04aa 6D4A     		ldr	r2, .L674+20
 14680 04ac 1B01     		lsls	r3, r3, #4
 14681 04ae 1344     		add	r3, r3, r2
 14682 04b0 1968     		ldr	r1, [r3]
 14683 04b2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14684 04b6 D7F88800 		ldr	r0, [r7, #136]
 14685 04ba 1346     		mov	r3, r2
 14686 04bc 5B00     		lsls	r3, r3, #1
 14687 04be 1344     		add	r3, r3, r2
 14688 04c0 1B01     		lsls	r3, r3, #4
 14689 04c2 0344     		add	r3, r3, r0
 14690 04c4 03F29513 		addw	r3, r3, #405
 14691 04c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14692 04ca 41FA03F2 		asr	r2, r1, r3
 14693 04ce 07F11803 		add	r3, r7, #24
 14694 04d2 6449     		ldr	r1, .L674+24
 14695 04d4 1846     		mov	r0, r3
 14696 04d6 FFF7FEFF 		bl	sprintf
1945:..\src/command_processing.c ****                     strcat(info_string,str);
 14697              		.loc 1 1945 0
 14698 04da 07F11803 		add	r3, r7, #24
 14699 04de 1946     		mov	r1, r3
 14700 04e0 7869     		ldr	r0, [r7, #20]
 14701 04e2 FFF7FEFF 		bl	strcat
 14702              	.L574:
1946:..\src/command_processing.c ****                 }
1947:..\src/command_processing.c ****             }
1948:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14703              		.loc 1 1948 0
 14704 04e6 7869     		ldr	r0, [r7, #20]
 14705 04e8 FFF7FEFF 		bl	strlen
 14706 04ec 0346     		mov	r3, r0
 14707 04ee 1A46     		mov	r2, r3
 14708 04f0 7B69     		ldr	r3, [r7, #20]
 14709 04f2 1344     		add	r3, r3, r2
 14710 04f4 5C4A     		ldr	r2, .L674+28
 14711 04f6 1188     		ldrh	r1, [r2]	@ unaligned
 14712 04f8 9278     		ldrb	r2, [r2, #2]
 14713 04fa 1980     		strh	r1, [r3]	@ unaligned
 14714 04fc 9A70     		strb	r2, [r3, #2]
1949:..\src/command_processing.c **** 
1950:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14715              		.loc 1 1950 0
 14716 04fe 07F11803 		add	r3, r7, #24
 14717 0502 5A4A     		ldr	r2, .L674+32
 14718 0504 1C46     		mov	r4, r3
 14719 0506 1346     		mov	r3, r2
 14720 0508 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14721 050a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 333


1951:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14722              		.loc 1 1951 0
 14723 050e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14724 0512 574A     		ldr	r2, .L674+36
 14725 0514 1B01     		lsls	r3, r3, #4
 14726 0516 1344     		add	r3, r3, r2
 14727 0518 0C33     		adds	r3, r3, #12
 14728 051a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14729 051c 03F00103 		and	r3, r3, #1
 14730 0520 002B     		cmp	r3, #0
 14731 0522 0FD0     		beq	.L576
1952:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14732              		.loc 1 1952 0
 14733 0524 07F11803 		add	r3, r7, #24
 14734 0528 1846     		mov	r0, r3
 14735 052a FFF7FEFF 		bl	strlen
 14736 052e 0346     		mov	r3, r0
 14737 0530 1A46     		mov	r2, r3
 14738 0532 07F11803 		add	r3, r7, #24
 14739 0536 1344     		add	r3, r3, r2
 14740 0538 4E4A     		ldr	r2, .L674+40
 14741 053a 1068     		ldr	r0, [r2]	@ unaligned
 14742 053c 1860     		str	r0, [r3]	@ unaligned
 14743 053e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14744 0540 9A80     		strh	r2, [r3, #4]	@ unaligned
 14745 0542 0EE0     		b	.L577
 14746              	.L576:
1953:..\src/command_processing.c ****             } else {
1954:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14747              		.loc 1 1954 0
 14748 0544 07F11803 		add	r3, r7, #24
 14749 0548 1846     		mov	r0, r3
 14750 054a FFF7FEFF 		bl	strlen
 14751 054e 0346     		mov	r3, r0
 14752 0550 1A46     		mov	r2, r3
 14753 0552 07F11803 		add	r3, r7, #24
 14754 0556 1344     		add	r3, r3, r2
 14755 0558 474A     		ldr	r2, .L674+44
 14756 055a 1068     		ldr	r0, [r2]	@ unaligned
 14757 055c 1860     		str	r0, [r3]	@ unaligned
 14758 055e 1279     		ldrb	r2, [r2, #4]
 14759 0560 1A71     		strb	r2, [r3, #4]
 14760              	.L577:
1955:..\src/command_processing.c ****             }
1956:..\src/command_processing.c ****             strcat(info_string, str);
 14761              		.loc 1 1956 0
 14762 0562 07F11803 		add	r3, r7, #24
 14763 0566 1946     		mov	r1, r3
 14764 0568 7869     		ldr	r0, [r7, #20]
 14765 056a FFF7FEFF 		bl	strcat
1957:..\src/command_processing.c ****                         
1958:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14766              		.loc 1 1958 0
 14767 056e 7869     		ldr	r0, [r7, #20]
 14768 0570 FFF7FEFF 		bl	strlen
 14769 0574 0346     		mov	r3, r0
 14770 0576 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 334


 14771 0578 7B69     		ldr	r3, [r7, #20]
 14772 057a 1344     		add	r3, r3, r2
 14773 057c 3F4A     		ldr	r2, .L674+48
 14774 057e 1D46     		mov	r5, r3
 14775 0580 1446     		mov	r4, r2
 14776 0582 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14777 0584 2860     		str	r0, [r5]	@ unaligned
 14778 0586 6960     		str	r1, [r5, #4]	@ unaligned
 14779 0588 AA60     		str	r2, [r5, #8]	@ unaligned
 14780 058a EB60     		str	r3, [r5, #12]	@ unaligned
 14781 058c 03CC     		ldmia	r4!, {r0, r1}
 14782 058e 2861     		str	r0, [r5, #16]	@ unaligned
 14783 0590 6961     		str	r1, [r5, #20]	@ unaligned
 14784 0592 2388     		ldrh	r3, [r4]	@ unaligned
 14785 0594 A278     		ldrb	r2, [r4, #2]
 14786 0596 2B83     		strh	r3, [r5, #24]	@ unaligned
 14787 0598 1346     		mov	r3, r2
 14788 059a AB76     		strb	r3, [r5, #26]
1959:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14789              		.loc 1 1959 0
 14790 059c D7F88030 		ldr	r3, [r7, #128]
 14791 05a0 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14792 05a4 012B     		cmp	r3, #1
 14793 05a6 0CD1     		bne	.L578
1960:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14794              		.loc 1 1960 0
 14795 05a8 7869     		ldr	r0, [r7, #20]
 14796 05aa FFF7FEFF 		bl	strlen
 14797 05ae 0346     		mov	r3, r0
 14798 05b0 1A46     		mov	r2, r3
 14799 05b2 7B69     		ldr	r3, [r7, #20]
 14800 05b4 1344     		add	r3, r3, r2
 14801 05b6 324A     		ldr	r2, .L674+52
 14802 05b8 1068     		ldr	r0, [r2]	@ unaligned
 14803 05ba 1860     		str	r0, [r3]	@ unaligned
 14804 05bc 1279     		ldrb	r2, [r2, #4]
 14805 05be 1A71     		strb	r2, [r3, #4]
 14806 05c0 09E0     		b	.L579
 14807              	.L578:
1961:..\src/command_processing.c ****             else
1962:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14808              		.loc 1 1962 0
 14809 05c2 7869     		ldr	r0, [r7, #20]
 14810 05c4 FFF7FEFF 		bl	strlen
 14811 05c8 0346     		mov	r3, r0
 14812 05ca 1A46     		mov	r2, r3
 14813 05cc 7B69     		ldr	r3, [r7, #20]
 14814 05ce 1344     		add	r3, r3, r2
 14815 05d0 2C4A     		ldr	r2, .L674+56
 14816 05d2 1068     		ldr	r0, [r2]	@ unaligned
 14817 05d4 1860     		str	r0, [r3]	@ unaligned
 14818              	.L579:
1963:..\src/command_processing.c ****             
1964:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14819              		.loc 1 1964 0
 14820 05d6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14821 05da 2B4A     		ldr	r2, .L674+60
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 335


 14822 05dc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 14823 05de 1A46     		mov	r2, r3
 14824 05e0 07F11803 		add	r3, r7, #24
 14825 05e4 2949     		ldr	r1, .L674+64
 14826 05e6 1846     		mov	r0, r3
 14827 05e8 FFF7FEFF 		bl	sprintf
1965:..\src/command_processing.c ****             strcat(info_string, str);
 14828              		.loc 1 1965 0
 14829 05ec 07F11803 		add	r3, r7, #24
 14830 05f0 1946     		mov	r1, r3
 14831 05f2 7869     		ldr	r0, [r7, #20]
 14832 05f4 FFF7FEFF 		bl	strcat
1966:..\src/command_processing.c **** 
1967:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 14833              		.loc 1 1967 0
 14834 05f8 7869     		ldr	r0, [r7, #20]
 14835 05fa FFF7FEFF 		bl	strlen
 14836 05fe 0346     		mov	r3, r0
 14837 0600 1A46     		mov	r2, r3
 14838 0602 7B69     		ldr	r3, [r7, #20]
 14839 0604 1344     		add	r3, r3, r2
 14840 0606 224A     		ldr	r2, .L674+68
 14841 0608 1D46     		mov	r5, r3
 14842 060a 1446     		mov	r4, r2
 14843 060c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14844 060e 2860     		str	r0, [r5]	@ unaligned
 14845 0610 6960     		str	r1, [r5, #4]	@ unaligned
 14846 0612 AA60     		str	r2, [r5, #8]	@ unaligned
 14847 0614 EB60     		str	r3, [r5, #12]	@ unaligned
 14848 0616 2068     		ldr	r0, [r4]	@ unaligned
 14849 0618 2861     		str	r0, [r5, #16]	@ unaligned
 14850 061a A388     		ldrh	r3, [r4, #4]	@ unaligned
 14851 061c AB82     		strh	r3, [r5, #20]	@ unaligned
1968:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 14852              		.loc 1 1968 0
 14853 061e 7869     		ldr	r0, [r7, #20]
 14854 0620 FFF7FEFF 		bl	strlen
 14855 0624 0346     		mov	r3, r0
 14856 0626 1A46     		mov	r2, r3
 14857 0628 7B69     		ldr	r3, [r7, #20]
 14858 062a 1344     		add	r3, r3, r2
 14859 062c 194A     		ldr	r2, .L674+72
 14860 062e 1C46     		mov	r4, r3
 14861 0630 1346     		mov	r3, r2
 14862 0632 07CB     		ldmia	r3!, {r0, r1, r2}
 14863 0634 2060     		str	r0, [r4]	@ unaligned
 14864 0636 6160     		str	r1, [r4, #4]	@ unaligned
 14865 0638 A260     		str	r2, [r4, #8]	@ unaligned
 14866 063a 1A88     		ldrh	r2, [r3]	@ unaligned
 14867 063c 9B78     		ldrb	r3, [r3, #2]
 14868 063e A281     		strh	r2, [r4, #12]	@ unaligned
 14869 0640 A373     		strb	r3, [r4, #14]
1969:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 14870              		.loc 1 1969 0
 14871 0642 0023     		movs	r3, #0
 14872 0644 C7F89430 		str	r3, [r7, #148]
 14873 0648 65E0     		b	.L580
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 336


 14874              	.L675:
 14875 064a 00BF     		.align	2
 14876              	.L674:
 14877 064c 70120000 		.word	.LC166
 14878 0650 80120000 		.word	.LC167
 14879 0654 90120000 		.word	.LC168
 14880 0658 A0120000 		.word	.LC169
 14881 065c AC120000 		.word	.LC170
 14882 0660 00000000 		.word	g_refOld
 14883 0664 BC120000 		.word	.LC171
 14884 0668 10110000 		.word	.LC150
 14885 066c C0120000 		.word	.LC172
 14886 0670 00000000 		.word	g_ref
 14887 0674 D0120000 		.word	.LC173
 14888 0678 D8120000 		.word	.LC174
 14889 067c E0120000 		.word	.LC175
 14890 0680 FC120000 		.word	.LC176
 14891 0684 04130000 		.word	.LC177
 14892 0688 00000000 		.word	dev_pwm_limit
 14893 068c 08130000 		.word	.LC178
 14894 0690 18130000 		.word	.LC179
 14895 0694 30130000 		.word	.LC180
 14896              	.L582:
1970:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14897              		.loc 1 1970 0
 14898 0698 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14899 069c B849     		ldr	r1, .L676
 14900 069e 1346     		mov	r3, r2
 14901 06a0 5B00     		lsls	r3, r3, #1
 14902 06a2 1344     		add	r3, r3, r2
 14903 06a4 9B00     		lsls	r3, r3, #2
 14904 06a6 1344     		add	r3, r3, r2
 14905 06a8 D7F89420 		ldr	r2, [r7, #148]
 14906 06ac 1344     		add	r3, r3, r2
 14907 06ae 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14908 06b2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14909 06b6 D7F88800 		ldr	r0, [r7, #136]
 14910 06ba 1346     		mov	r3, r2
 14911 06bc 5B00     		lsls	r3, r3, #1
 14912 06be 1344     		add	r3, r3, r2
 14913 06c0 1B01     		lsls	r3, r3, #4
 14914 06c2 C218     		adds	r2, r0, r3
 14915 06c4 D7F89430 		ldr	r3, [r7, #148]
 14916 06c8 1344     		add	r3, r3, r2
 14917 06ca 03F29513 		addw	r3, r3, #405
 14918 06ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14919 06d0 41FA03F2 		asr	r2, r1, r3
 14920 06d4 07F11803 		add	r3, r7, #24
 14921 06d8 AA49     		ldr	r1, .L676+4
 14922 06da 1846     		mov	r0, r3
 14923 06dc FFF7FEFF 		bl	sprintf
1971:..\src/command_processing.c ****                 strcat(info_string, str);
 14924              		.loc 1 1971 0
 14925 06e0 07F11803 		add	r3, r7, #24
 14926 06e4 1946     		mov	r1, r3
 14927 06e6 7869     		ldr	r0, [r7, #20]
 14928 06e8 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 337


1972:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14929              		.loc 1 1972 0
 14930 06ec D7F89430 		ldr	r3, [r7, #148]
 14931 06f0 022B     		cmp	r3, #2
 14932 06f2 0BD0     		beq	.L581
1973:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14933              		.loc 1 1973 0
 14934 06f4 7869     		ldr	r0, [r7, #20]
 14935 06f6 FFF7FEFF 		bl	strlen
 14936 06fa 0346     		mov	r3, r0
 14937 06fc 1A46     		mov	r2, r3
 14938 06fe 7B69     		ldr	r3, [r7, #20]
 14939 0700 1344     		add	r3, r3, r2
 14940 0702 A14A     		ldr	r2, .L676+8
 14941 0704 1188     		ldrh	r1, [r2]	@ unaligned
 14942 0706 9278     		ldrb	r2, [r2, #2]
 14943 0708 1980     		strh	r1, [r3]	@ unaligned
 14944 070a 9A70     		strb	r2, [r3, #2]
 14945              	.L581:
1969:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14946              		.loc 1 1969 0 discriminator 2
 14947 070c D7F89430 		ldr	r3, [r7, #148]
 14948 0710 0133     		adds	r3, r3, #1
 14949 0712 C7F89430 		str	r3, [r7, #148]
 14950              	.L580:
1969:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14951              		.loc 1 1969 0 is_stmt 0 discriminator 1
 14952 0716 D7F89430 		ldr	r3, [r7, #148]
 14953 071a 022B     		cmp	r3, #2
 14954 071c BCDD     		ble	.L582
1974:..\src/command_processing.c ****                 }                
1975:..\src/command_processing.c ****             }
1976:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14955              		.loc 1 1976 0 is_stmt 1
 14956 071e 7869     		ldr	r0, [r7, #20]
 14957 0720 FFF7FEFF 		bl	strlen
 14958 0724 0346     		mov	r3, r0
 14959 0726 1A46     		mov	r2, r3
 14960 0728 7B69     		ldr	r3, [r7, #20]
 14961 072a 1344     		add	r3, r3, r2
 14962 072c 974A     		ldr	r2, .L676+12
 14963 072e 1188     		ldrh	r1, [r2]	@ unaligned
 14964 0730 9278     		ldrb	r2, [r2, #2]
 14965 0732 1980     		strh	r1, [r3]	@ unaligned
 14966 0734 9A70     		strb	r2, [r3, #2]
1977:..\src/command_processing.c ****             
1978:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 14967              		.loc 1 1978 0
 14968 0736 D7F88030 		ldr	r3, [r7, #128]
 14969 073a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 14970 073e 062B     		cmp	r3, #6
 14971 0740 1AD1     		bne	.L583
1979:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 14972              		.loc 1 1979 0
 14973 0742 934B     		ldr	r3, .L676+16
 14974 0744 1A6A     		ldr	r2, [r3, #32]
 14975 0746 924B     		ldr	r3, .L676+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 338


 14976 0748 5B6A     		ldr	r3, [r3, #36]
 14977 074a 07F11800 		add	r0, r7, #24
 14978 074e 9149     		ldr	r1, .L676+20
 14979 0750 FFF7FEFF 		bl	sprintf
1980:..\src/command_processing.c ****                 strcat(info_string, str);
 14980              		.loc 1 1980 0
 14981 0754 07F11803 		add	r3, r7, #24
 14982 0758 1946     		mov	r1, r3
 14983 075a 7869     		ldr	r0, [r7, #20]
 14984 075c FFF7FEFF 		bl	strcat
1981:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 14985              		.loc 1 1981 0
 14986 0760 7869     		ldr	r0, [r7, #20]
 14987 0762 FFF7FEFF 		bl	strlen
 14988 0766 0346     		mov	r3, r0
 14989 0768 1A46     		mov	r2, r3
 14990 076a 7B69     		ldr	r3, [r7, #20]
 14991 076c 1344     		add	r3, r3, r2
 14992 076e 874A     		ldr	r2, .L676+12
 14993 0770 1188     		ldrh	r1, [r2]	@ unaligned
 14994 0772 9278     		ldrb	r2, [r2, #2]
 14995 0774 1980     		strh	r1, [r3]	@ unaligned
 14996 0776 9A70     		strb	r2, [r3, #2]
 14997              	.L583:
1982:..\src/command_processing.c ****             }
1983:..\src/command_processing.c **** 
1984:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 14998              		.loc 1 1984 0
 14999 0778 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15000 077c 591C     		adds	r1, r3, #1
 15001 077e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15002 0782 854A     		ldr	r2, .L676+24
 15003 0784 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15004 0788 07F11800 		add	r0, r7, #24
 15005 078c 0A46     		mov	r2, r1
 15006 078e 8349     		ldr	r1, .L676+28
 15007 0790 FFF7FEFF 		bl	sprintf
1985:..\src/command_processing.c ****             strcat(info_string, str);
 15008              		.loc 1 1985 0
 15009 0794 07F11803 		add	r3, r7, #24
 15010 0798 1946     		mov	r1, r3
 15011 079a 7869     		ldr	r0, [r7, #20]
 15012 079c FFF7FEFF 		bl	strcat
1986:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15013              		.loc 1 1986 0
 15014 07a0 7869     		ldr	r0, [r7, #20]
 15015 07a2 FFF7FEFF 		bl	strlen
 15016 07a6 0346     		mov	r3, r0
 15017 07a8 1A46     		mov	r2, r3
 15018 07aa 7B69     		ldr	r3, [r7, #20]
 15019 07ac 1344     		add	r3, r3, r2
 15020 07ae 774A     		ldr	r2, .L676+12
 15021 07b0 1188     		ldrh	r1, [r2]	@ unaligned
 15022 07b2 9278     		ldrb	r2, [r2, #2]
 15023 07b4 1980     		strh	r1, [r3]	@ unaligned
 15024 07b6 9A70     		strb	r2, [r3, #2]
1987:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 339


1988:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15025              		.loc 1 1988 0
 15026 07b8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15027 07bc 591C     		adds	r1, r3, #1
 15028 07be 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15029 07c2 774A     		ldr	r2, .L676+32
 15030 07c4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15031 07c8 07F11800 		add	r0, r7, #24
 15032 07cc 0A46     		mov	r2, r1
 15033 07ce 7549     		ldr	r1, .L676+36
 15034 07d0 FFF7FEFF 		bl	sprintf
1989:..\src/command_processing.c ****             strcat(info_string, str);
 15035              		.loc 1 1989 0
 15036 07d4 07F11803 		add	r3, r7, #24
 15037 07d8 1946     		mov	r1, r3
 15038 07da 7869     		ldr	r0, [r7, #20]
 15039 07dc FFF7FEFF 		bl	strcat
1990:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15040              		.loc 1 1990 0
 15041 07e0 7869     		ldr	r0, [r7, #20]
 15042 07e2 FFF7FEFF 		bl	strlen
 15043 07e6 0346     		mov	r3, r0
 15044 07e8 1A46     		mov	r2, r3
 15045 07ea 7B69     		ldr	r3, [r7, #20]
 15046 07ec 1344     		add	r3, r3, r2
 15047 07ee 674A     		ldr	r2, .L676+12
 15048 07f0 1188     		ldrh	r1, [r2]	@ unaligned
 15049 07f2 9278     		ldrb	r2, [r2, #2]
 15050 07f4 1980     		strh	r1, [r3]	@ unaligned
 15051 07f6 9A70     		strb	r2, [r3, #2]
1991:..\src/command_processing.c **** 
1992:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15052              		.loc 1 1992 0
 15053 07f8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15054 07fc 5C1C     		adds	r4, r3, #1
 15055 07fe 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15056 0802 5F4A     		ldr	r2, .L676
 15057 0804 3421     		movs	r1, #52
 15058 0806 01FB03F3 		mul	r3, r1, r3
 15059 080a 1344     		add	r3, r3, r2
 15060 080c 0C33     		adds	r3, r3, #12
 15061 080e 1B68     		ldr	r3, [r3]
 15062 0810 07F11800 		add	r0, r7, #24
 15063 0814 2246     		mov	r2, r4
 15064 0816 6449     		ldr	r1, .L676+40
 15065 0818 FFF7FEFF 		bl	sprintf
1993:..\src/command_processing.c ****             strcat(info_string, str);
 15066              		.loc 1 1993 0
 15067 081c 07F11803 		add	r3, r7, #24
 15068 0820 1946     		mov	r1, r3
 15069 0822 7869     		ldr	r0, [r7, #20]
 15070 0824 FFF7FEFF 		bl	strcat
1994:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15071              		.loc 1 1994 0
 15072 0828 7869     		ldr	r0, [r7, #20]
 15073 082a FFF7FEFF 		bl	strlen
 15074 082e 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 340


 15075 0830 1A46     		mov	r2, r3
 15076 0832 7B69     		ldr	r3, [r7, #20]
 15077 0834 1344     		add	r3, r3, r2
 15078 0836 554A     		ldr	r2, .L676+12
 15079 0838 1188     		ldrh	r1, [r2]	@ unaligned
 15080 083a 9278     		ldrb	r2, [r2, #2]
 15081 083c 1980     		strh	r1, [r3]	@ unaligned
 15082 083e 9A70     		strb	r2, [r3, #2]
1995:..\src/command_processing.c ****             
1996:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 15083              		.loc 1 1996 0
 15084 0840 D7F88030 		ldr	r3, [r7, #128]
 15085 0844 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15086 0848 012B     		cmp	r3, #1
 15087 084a 23D1     		bne	.L584
1997:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 15088              		.loc 1 1997 0
 15089 084c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15090 0850 5C1C     		adds	r4, r3, #1
 15091 0852 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15092 0856 4A4A     		ldr	r2, .L676
 15093 0858 3421     		movs	r1, #52
 15094 085a 01FB03F3 		mul	r3, r1, r3
 15095 085e 1344     		add	r3, r3, r2
 15096 0860 1433     		adds	r3, r3, #20
 15097 0862 1B68     		ldr	r3, [r3]
 15098 0864 07F11800 		add	r0, r7, #24
 15099 0868 2246     		mov	r2, r4
 15100 086a 5049     		ldr	r1, .L676+44
 15101 086c FFF7FEFF 		bl	sprintf
1998:..\src/command_processing.c ****                 strcat(info_string, str);
 15102              		.loc 1 1998 0
 15103 0870 07F11803 		add	r3, r7, #24
 15104 0874 1946     		mov	r1, r3
 15105 0876 7869     		ldr	r0, [r7, #20]
 15106 0878 FFF7FEFF 		bl	strcat
1999:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15107              		.loc 1 1999 0
 15108 087c 7869     		ldr	r0, [r7, #20]
 15109 087e FFF7FEFF 		bl	strlen
 15110 0882 0346     		mov	r3, r0
 15111 0884 1A46     		mov	r2, r3
 15112 0886 7B69     		ldr	r3, [r7, #20]
 15113 0888 1344     		add	r3, r3, r2
 15114 088a 404A     		ldr	r2, .L676+12
 15115 088c 1188     		ldrh	r1, [r2]	@ unaligned
 15116 088e 9278     		ldrb	r2, [r2, #2]
 15117 0890 1980     		strh	r1, [r3]	@ unaligned
 15118 0892 9A70     		strb	r2, [r3, #2]
 15119              	.L584:
2000:..\src/command_processing.c ****             }
2001:..\src/command_processing.c ****             
2002:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15120              		.loc 1 2002 0
 15121 0894 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15122 0898 5A1C     		adds	r2, r3, #1
 15123 089a 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 341


 15124 089e 4449     		ldr	r1, .L676+48
 15125 08a0 1846     		mov	r0, r3
 15126 08a2 FFF7FEFF 		bl	sprintf
2003:..\src/command_processing.c ****             strcat(info_string, str);
 15127              		.loc 1 2003 0
 15128 08a6 07F11803 		add	r3, r7, #24
 15129 08aa 1946     		mov	r1, r3
 15130 08ac 7869     		ldr	r0, [r7, #20]
 15131 08ae FFF7FEFF 		bl	strcat
2004:..\src/command_processing.c **** 
2005:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 15132              		.loc 1 2005 0
 15133 08b2 7869     		ldr	r0, [r7, #20]
 15134 08b4 FFF7FEFF 		bl	strlen
 15135 08b8 0346     		mov	r3, r0
 15136 08ba 1A46     		mov	r2, r3
 15137 08bc 7B69     		ldr	r3, [r7, #20]
 15138 08be 1344     		add	r3, r3, r2
 15139 08c0 3C4A     		ldr	r2, .L676+52
 15140 08c2 1D46     		mov	r5, r3
 15141 08c4 1446     		mov	r4, r2
 15142 08c6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15143 08c8 2860     		str	r0, [r5]	@ unaligned
 15144 08ca 6960     		str	r1, [r5, #4]	@ unaligned
 15145 08cc AA60     		str	r2, [r5, #8]	@ unaligned
 15146 08ce EB60     		str	r3, [r5, #12]	@ unaligned
 15147 08d0 2378     		ldrb	r3, [r4]
 15148 08d2 2B74     		strb	r3, [r5, #16]
2006:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15149              		.loc 1 2006 0
 15150 08d4 D7F88030 		ldr	r3, [r7, #128]
 15151 08d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15152 08dc 032B     		cmp	r3, #3
 15153 08de 73D0     		beq	.L585
2007:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15154              		.loc 1 2007 0
 15155 08e0 D7F88030 		ldr	r3, [r7, #128]
 15156 08e4 1B68     		ldr	r3, [r3]
 15157 08e6 1846     		mov	r0, r3
 15158 08e8 FFF7FEFF 		bl	__aeabi_i2d
 15159 08ec 4FF00002 		mov	r2, #0
 15160 08f0 314B     		ldr	r3, .L676+56
 15161 08f2 FFF7FEFF 		bl	__aeabi_ddiv
 15162 08f6 0346     		mov	r3, r0
 15163 08f8 0C46     		mov	r4, r1
 15164 08fa 07F11800 		add	r0, r7, #24
 15165 08fe 1A46     		mov	r2, r3
 15166 0900 2346     		mov	r3, r4
 15167 0902 2E49     		ldr	r1, .L676+60
 15168 0904 FFF7FEFF 		bl	sprintf
2008:..\src/command_processing.c ****                 strcat(info_string, str);
 15169              		.loc 1 2008 0
 15170 0908 07F11803 		add	r3, r7, #24
 15171 090c 1946     		mov	r1, r3
 15172 090e 7869     		ldr	r0, [r7, #20]
 15173 0910 FFF7FEFF 		bl	strcat
2009:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 342


 15174              		.loc 1 2009 0
 15175 0914 D7F88030 		ldr	r3, [r7, #128]
 15176 0918 5B68     		ldr	r3, [r3, #4]
 15177 091a 1846     		mov	r0, r3
 15178 091c FFF7FEFF 		bl	__aeabi_i2d
 15179 0920 4FF00002 		mov	r2, #0
 15180 0924 244B     		ldr	r3, .L676+56
 15181 0926 FFF7FEFF 		bl	__aeabi_ddiv
 15182 092a 0346     		mov	r3, r0
 15183 092c 0C46     		mov	r4, r1
 15184 092e 07F11800 		add	r0, r7, #24
 15185 0932 1A46     		mov	r2, r3
 15186 0934 2346     		mov	r3, r4
 15187 0936 2249     		ldr	r1, .L676+64
 15188 0938 FFF7FEFF 		bl	sprintf
2010:..\src/command_processing.c ****                 strcat(info_string, str);
 15189              		.loc 1 2010 0
 15190 093c 07F11803 		add	r3, r7, #24
 15191 0940 1946     		mov	r1, r3
 15192 0942 7869     		ldr	r0, [r7, #20]
 15193 0944 FFF7FEFF 		bl	strcat
2011:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15194              		.loc 1 2011 0
 15195 0948 D7F88030 		ldr	r3, [r7, #128]
 15196 094c 9B68     		ldr	r3, [r3, #8]
 15197 094e 1846     		mov	r0, r3
 15198 0950 FFF7FEFF 		bl	__aeabi_i2d
 15199 0954 4FF00002 		mov	r2, #0
 15200 0958 174B     		ldr	r3, .L676+56
 15201 095a FFF7FEFF 		bl	__aeabi_ddiv
 15202 095e 0346     		mov	r3, r0
 15203 0960 0C46     		mov	r4, r1
 15204 0962 07F11800 		add	r0, r7, #24
 15205 0966 1A46     		mov	r2, r3
 15206 0968 2346     		mov	r3, r4
 15207 096a 1649     		ldr	r1, .L676+68
 15208 096c FFF7FEFF 		bl	sprintf
2012:..\src/command_processing.c ****                 strcat(info_string, str);
 15209              		.loc 1 2012 0
 15210 0970 07F11803 		add	r3, r7, #24
 15211 0974 1946     		mov	r1, r3
 15212 0976 7869     		ldr	r0, [r7, #20]
 15213 0978 FFF7FEFF 		bl	strcat
 15214 097c 72E0     		b	.L586
 15215              	.L677:
 15216 097e 00BF     		.align	2
 15217              	.L676:
 15218 0980 00000000 		.word	g_meas
 15219 0984 40130000 		.word	.LC181
 15220 0988 44130000 		.word	.LC182
 15221 098c 10110000 		.word	.LC150
 15222 0990 00000000 		.word	g_adc_measOld
 15223 0994 48130000 		.word	.LC183
 15224 0998 00000000 		.word	dev_tension
 15225 099c 68130000 		.word	.LC184
 15226 09a0 00000000 		.word	pow_tension
 15227 09a4 88130000 		.word	.LC185
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 343


 15228 09a8 B0130000 		.word	.LC186
 15229 09ac C8130000 		.word	.LC187
 15230 09b0 F0130000 		.word	.LC188
 15231 09b4 0C140000 		.word	.LC189
 15232 09b8 0000F040 		.word	1089470464
 15233 09bc 20140000 		.word	.LC190
 15234 09c0 2C140000 		.word	.LC191
 15235 09c4 38140000 		.word	.LC192
 15236              	.L585:
2013:..\src/command_processing.c ****             }
2014:..\src/command_processing.c ****             else { 
2015:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15237              		.loc 1 2015 0
 15238 09c8 D7F88030 		ldr	r3, [r7, #128]
 15239 09cc 9B69     		ldr	r3, [r3, #24]
 15240 09ce 1846     		mov	r0, r3
 15241 09d0 FFF7FEFF 		bl	__aeabi_i2d
 15242 09d4 4FF00002 		mov	r2, #0
 15243 09d8 CE4B     		ldr	r3, .L678
 15244 09da FFF7FEFF 		bl	__aeabi_ddiv
 15245 09de 0346     		mov	r3, r0
 15246 09e0 0C46     		mov	r4, r1
 15247 09e2 07F11800 		add	r0, r7, #24
 15248 09e6 1A46     		mov	r2, r3
 15249 09e8 2346     		mov	r3, r4
 15250 09ea CB49     		ldr	r1, .L678+4
 15251 09ec FFF7FEFF 		bl	sprintf
2016:..\src/command_processing.c ****                 strcat(info_string, str);
 15252              		.loc 1 2016 0
 15253 09f0 07F11803 		add	r3, r7, #24
 15254 09f4 1946     		mov	r1, r3
 15255 09f6 7869     		ldr	r0, [r7, #20]
 15256 09f8 FFF7FEFF 		bl	strcat
2017:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15257              		.loc 1 2017 0
 15258 09fc D7F88030 		ldr	r3, [r7, #128]
 15259 0a00 DB69     		ldr	r3, [r3, #28]
 15260 0a02 1846     		mov	r0, r3
 15261 0a04 FFF7FEFF 		bl	__aeabi_i2d
 15262 0a08 4FF00002 		mov	r2, #0
 15263 0a0c C14B     		ldr	r3, .L678
 15264 0a0e FFF7FEFF 		bl	__aeabi_ddiv
 15265 0a12 0346     		mov	r3, r0
 15266 0a14 0C46     		mov	r4, r1
 15267 0a16 07F11800 		add	r0, r7, #24
 15268 0a1a 1A46     		mov	r2, r3
 15269 0a1c 2346     		mov	r3, r4
 15270 0a1e BF49     		ldr	r1, .L678+8
 15271 0a20 FFF7FEFF 		bl	sprintf
2018:..\src/command_processing.c ****                 strcat(info_string, str);
 15272              		.loc 1 2018 0
 15273 0a24 07F11803 		add	r3, r7, #24
 15274 0a28 1946     		mov	r1, r3
 15275 0a2a 7869     		ldr	r0, [r7, #20]
 15276 0a2c FFF7FEFF 		bl	strcat
2019:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15277              		.loc 1 2019 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 344


 15278 0a30 D7F88030 		ldr	r3, [r7, #128]
 15279 0a34 1B6A     		ldr	r3, [r3, #32]
 15280 0a36 1846     		mov	r0, r3
 15281 0a38 FFF7FEFF 		bl	__aeabi_i2d
 15282 0a3c 4FF00002 		mov	r2, #0
 15283 0a40 B44B     		ldr	r3, .L678
 15284 0a42 FFF7FEFF 		bl	__aeabi_ddiv
 15285 0a46 0346     		mov	r3, r0
 15286 0a48 0C46     		mov	r4, r1
 15287 0a4a 07F11800 		add	r0, r7, #24
 15288 0a4e 1A46     		mov	r2, r3
 15289 0a50 2346     		mov	r3, r4
 15290 0a52 B349     		ldr	r1, .L678+12
 15291 0a54 FFF7FEFF 		bl	sprintf
2020:..\src/command_processing.c ****                 strcat(info_string, str);
 15292              		.loc 1 2020 0
 15293 0a58 07F11803 		add	r3, r7, #24
 15294 0a5c 1946     		mov	r1, r3
 15295 0a5e 7869     		ldr	r0, [r7, #20]
 15296 0a60 FFF7FEFF 		bl	strcat
 15297              	.L586:
2021:..\src/command_processing.c ****             }
2022:..\src/command_processing.c **** 
2023:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15298              		.loc 1 2023 0
 15299 0a64 7869     		ldr	r0, [r7, #20]
 15300 0a66 FFF7FEFF 		bl	strlen
 15301 0a6a 0346     		mov	r3, r0
 15302 0a6c 1A46     		mov	r2, r3
 15303 0a6e 7B69     		ldr	r3, [r7, #20]
 15304 0a70 1344     		add	r3, r3, r2
 15305 0a72 AC4A     		ldr	r2, .L678+16
 15306 0a74 1D46     		mov	r5, r3
 15307 0a76 1446     		mov	r4, r2
 15308 0a78 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15309 0a7a 2860     		str	r0, [r5]	@ unaligned
 15310 0a7c 6960     		str	r1, [r5, #4]	@ unaligned
 15311 0a7e AA60     		str	r2, [r5, #8]	@ unaligned
 15312 0a80 EB60     		str	r3, [r5, #12]	@ unaligned
 15313 0a82 03CC     		ldmia	r4!, {r0, r1}
 15314 0a84 2861     		str	r0, [r5, #16]	@ unaligned
 15315 0a86 6961     		str	r1, [r5, #20]	@ unaligned
 15316 0a88 2378     		ldrb	r3, [r4]
 15317 0a8a 2B76     		strb	r3, [r5, #24]
2024:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15318              		.loc 1 2024 0
 15319 0a8c D7F88030 		ldr	r3, [r7, #128]
 15320 0a90 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15321 0a94 032B     		cmp	r3, #3
 15322 0a96 4ED0     		beq	.L587
2025:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15323              		.loc 1 2025 0
 15324 0a98 D7F88030 		ldr	r3, [r7, #128]
 15325 0a9c DB68     		ldr	r3, [r3, #12]
 15326 0a9e 1846     		mov	r0, r3
 15327 0aa0 FFF7FEFF 		bl	__aeabi_i2d
 15328 0aa4 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 345


 15329 0aa8 9A4B     		ldr	r3, .L678
 15330 0aaa FFF7FEFF 		bl	__aeabi_ddiv
 15331 0aae 0346     		mov	r3, r0
 15332 0ab0 0C46     		mov	r4, r1
 15333 0ab2 07F11800 		add	r0, r7, #24
 15334 0ab6 1A46     		mov	r2, r3
 15335 0ab8 2346     		mov	r3, r4
 15336 0aba 9749     		ldr	r1, .L678+4
 15337 0abc FFF7FEFF 		bl	sprintf
2026:..\src/command_processing.c ****                 strcat(info_string, str);
 15338              		.loc 1 2026 0
 15339 0ac0 07F11803 		add	r3, r7, #24
 15340 0ac4 1946     		mov	r1, r3
 15341 0ac6 7869     		ldr	r0, [r7, #20]
 15342 0ac8 FFF7FEFF 		bl	strcat
2027:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15343              		.loc 1 2027 0
 15344 0acc D7F88030 		ldr	r3, [r7, #128]
 15345 0ad0 1B69     		ldr	r3, [r3, #16]
 15346 0ad2 1846     		mov	r0, r3
 15347 0ad4 FFF7FEFF 		bl	__aeabi_i2d
 15348 0ad8 4FF00002 		mov	r2, #0
 15349 0adc 8D4B     		ldr	r3, .L678
 15350 0ade FFF7FEFF 		bl	__aeabi_ddiv
 15351 0ae2 0346     		mov	r3, r0
 15352 0ae4 0C46     		mov	r4, r1
 15353 0ae6 07F11800 		add	r0, r7, #24
 15354 0aea 1A46     		mov	r2, r3
 15355 0aec 2346     		mov	r3, r4
 15356 0aee 8B49     		ldr	r1, .L678+8
 15357 0af0 FFF7FEFF 		bl	sprintf
2028:..\src/command_processing.c ****                 strcat(info_string, str);
 15358              		.loc 1 2028 0
 15359 0af4 07F11803 		add	r3, r7, #24
 15360 0af8 1946     		mov	r1, r3
 15361 0afa 7869     		ldr	r0, [r7, #20]
 15362 0afc FFF7FEFF 		bl	strcat
2029:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15363              		.loc 1 2029 0
 15364 0b00 D7F88030 		ldr	r3, [r7, #128]
 15365 0b04 5B69     		ldr	r3, [r3, #20]
 15366 0b06 1846     		mov	r0, r3
 15367 0b08 FFF7FEFF 		bl	__aeabi_i2d
 15368 0b0c 4FF00002 		mov	r2, #0
 15369 0b10 804B     		ldr	r3, .L678
 15370 0b12 FFF7FEFF 		bl	__aeabi_ddiv
 15371 0b16 0346     		mov	r3, r0
 15372 0b18 0C46     		mov	r4, r1
 15373 0b1a 07F11800 		add	r0, r7, #24
 15374 0b1e 1A46     		mov	r2, r3
 15375 0b20 2346     		mov	r3, r4
 15376 0b22 7F49     		ldr	r1, .L678+12
 15377 0b24 FFF7FEFF 		bl	sprintf
2030:..\src/command_processing.c ****                 strcat(info_string, str);
 15378              		.loc 1 2030 0
 15379 0b28 07F11803 		add	r3, r7, #24
 15380 0b2c 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 346


 15381 0b2e 7869     		ldr	r0, [r7, #20]
 15382 0b30 FFF7FEFF 		bl	strcat
 15383 0b34 4DE0     		b	.L588
 15384              	.L587:
2031:..\src/command_processing.c **** 
2032:..\src/command_processing.c ****             }
2033:..\src/command_processing.c ****             else {
2034:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15385              		.loc 1 2034 0
 15386 0b36 D7F88030 		ldr	r3, [r7, #128]
 15387 0b3a 5B6A     		ldr	r3, [r3, #36]
 15388 0b3c 1846     		mov	r0, r3
 15389 0b3e FFF7FEFF 		bl	__aeabi_i2d
 15390 0b42 4FF00002 		mov	r2, #0
 15391 0b46 734B     		ldr	r3, .L678
 15392 0b48 FFF7FEFF 		bl	__aeabi_ddiv
 15393 0b4c 0346     		mov	r3, r0
 15394 0b4e 0C46     		mov	r4, r1
 15395 0b50 07F11800 		add	r0, r7, #24
 15396 0b54 1A46     		mov	r2, r3
 15397 0b56 2346     		mov	r3, r4
 15398 0b58 6F49     		ldr	r1, .L678+4
 15399 0b5a FFF7FEFF 		bl	sprintf
2035:..\src/command_processing.c ****                 strcat(info_string, str);
 15400              		.loc 1 2035 0
 15401 0b5e 07F11803 		add	r3, r7, #24
 15402 0b62 1946     		mov	r1, r3
 15403 0b64 7869     		ldr	r0, [r7, #20]
 15404 0b66 FFF7FEFF 		bl	strcat
2036:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15405              		.loc 1 2036 0
 15406 0b6a D7F88030 		ldr	r3, [r7, #128]
 15407 0b6e 9B6A     		ldr	r3, [r3, #40]
 15408 0b70 1846     		mov	r0, r3
 15409 0b72 FFF7FEFF 		bl	__aeabi_i2d
 15410 0b76 4FF00002 		mov	r2, #0
 15411 0b7a 664B     		ldr	r3, .L678
 15412 0b7c FFF7FEFF 		bl	__aeabi_ddiv
 15413 0b80 0346     		mov	r3, r0
 15414 0b82 0C46     		mov	r4, r1
 15415 0b84 07F11800 		add	r0, r7, #24
 15416 0b88 1A46     		mov	r2, r3
 15417 0b8a 2346     		mov	r3, r4
 15418 0b8c 6349     		ldr	r1, .L678+8
 15419 0b8e FFF7FEFF 		bl	sprintf
2037:..\src/command_processing.c ****                 strcat(info_string, str);
 15420              		.loc 1 2037 0
 15421 0b92 07F11803 		add	r3, r7, #24
 15422 0b96 1946     		mov	r1, r3
 15423 0b98 7869     		ldr	r0, [r7, #20]
 15424 0b9a FFF7FEFF 		bl	strcat
2038:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15425              		.loc 1 2038 0
 15426 0b9e D7F88030 		ldr	r3, [r7, #128]
 15427 0ba2 DB6A     		ldr	r3, [r3, #44]
 15428 0ba4 1846     		mov	r0, r3
 15429 0ba6 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 347


 15430 0baa 4FF00002 		mov	r2, #0
 15431 0bae 594B     		ldr	r3, .L678
 15432 0bb0 FFF7FEFF 		bl	__aeabi_ddiv
 15433 0bb4 0346     		mov	r3, r0
 15434 0bb6 0C46     		mov	r4, r1
 15435 0bb8 07F11800 		add	r0, r7, #24
 15436 0bbc 1A46     		mov	r2, r3
 15437 0bbe 2346     		mov	r3, r4
 15438 0bc0 5749     		ldr	r1, .L678+12
 15439 0bc2 FFF7FEFF 		bl	sprintf
2039:..\src/command_processing.c ****                 strcat(info_string, str);
 15440              		.loc 1 2039 0
 15441 0bc6 07F11803 		add	r3, r7, #24
 15442 0bca 1946     		mov	r1, r3
 15443 0bcc 7869     		ldr	r0, [r7, #20]
 15444 0bce FFF7FEFF 		bl	strcat
 15445              	.L588:
2040:..\src/command_processing.c ****             }
2041:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15446              		.loc 1 2041 0
 15447 0bd2 D7F88030 		ldr	r3, [r7, #128]
 15448 0bd6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15449 0bda 012B     		cmp	r3, #1
 15450 0bdc 14D1     		bne	.L589
2042:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15451              		.loc 1 2042 0
 15452 0bde 7869     		ldr	r0, [r7, #20]
 15453 0be0 FFF7FEFF 		bl	strlen
 15454 0be4 0346     		mov	r3, r0
 15455 0be6 1A46     		mov	r2, r3
 15456 0be8 7B69     		ldr	r3, [r7, #20]
 15457 0bea 1344     		add	r3, r3, r2
 15458 0bec 4E4A     		ldr	r2, .L678+20
 15459 0bee 1D46     		mov	r5, r3
 15460 0bf0 1446     		mov	r4, r2
 15461 0bf2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15462 0bf4 2860     		str	r0, [r5]	@ unaligned
 15463 0bf6 6960     		str	r1, [r5, #4]	@ unaligned
 15464 0bf8 AA60     		str	r2, [r5, #8]	@ unaligned
 15465 0bfa EB60     		str	r3, [r5, #12]	@ unaligned
 15466 0bfc 03CC     		ldmia	r4!, {r0, r1}
 15467 0bfe 2861     		str	r0, [r5, #16]	@ unaligned
 15468 0c00 6961     		str	r1, [r5, #20]	@ unaligned
 15469 0c02 2388     		ldrh	r3, [r4]	@ unaligned
 15470 0c04 2B83     		strh	r3, [r5, #24]	@ unaligned
 15471 0c06 13E0     		b	.L590
 15472              	.L589:
2043:..\src/command_processing.c ****             else
2044:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15473              		.loc 1 2044 0
 15474 0c08 7869     		ldr	r0, [r7, #20]
 15475 0c0a FFF7FEFF 		bl	strlen
 15476 0c0e 0346     		mov	r3, r0
 15477 0c10 1A46     		mov	r2, r3
 15478 0c12 7B69     		ldr	r3, [r7, #20]
 15479 0c14 1344     		add	r3, r3, r2
 15480 0c16 454A     		ldr	r2, .L678+24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 348


 15481 0c18 1D46     		mov	r5, r3
 15482 0c1a 1446     		mov	r4, r2
 15483 0c1c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15484 0c1e 2860     		str	r0, [r5]	@ unaligned
 15485 0c20 6960     		str	r1, [r5, #4]	@ unaligned
 15486 0c22 AA60     		str	r2, [r5, #8]	@ unaligned
 15487 0c24 EB60     		str	r3, [r5, #12]	@ unaligned
 15488 0c26 03CC     		ldmia	r4!, {r0, r1}
 15489 0c28 2861     		str	r0, [r5, #16]	@ unaligned
 15490 0c2a 6961     		str	r1, [r5, #20]	@ unaligned
 15491 0c2c 2378     		ldrb	r3, [r4]
 15492 0c2e 2B76     		strb	r3, [r5, #24]
 15493              	.L590:
2045:..\src/command_processing.c **** 
2046:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15494              		.loc 1 2046 0
 15495 0c30 D7F88030 		ldr	r3, [r7, #128]
 15496 0c34 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15497 0c38 072B     		cmp	r3, #7
 15498 0c3a 00F2EA80 		bhi	.L591
 15499 0c3e 01A2     		adr	r2, .L593
 15500 0c40 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15501              		.p2align 2
 15502              	.L593:
 15503 0c44 650C0000 		.word	.L592+1
 15504 0c48 890C0000 		.word	.L594+1
 15505 0c4c B10C0000 		.word	.L595+1
 15506 0c50 E30C0000 		.word	.L596+1
 15507 0c54 410D0000 		.word	.L597+1
 15508 0c58 6F0D0000 		.word	.L598+1
 15509 0c5c 9F0D0000 		.word	.L599+1
 15510 0c60 CD0D0000 		.word	.L600+1
 15511              		.p2align 1
 15512              	.L592:
2047:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2048:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15513              		.loc 1 2048 0
 15514 0c64 7869     		ldr	r0, [r7, #20]
 15515 0c66 FFF7FEFF 		bl	strlen
 15516 0c6a 0346     		mov	r3, r0
 15517 0c6c 1A46     		mov	r2, r3
 15518 0c6e 7B69     		ldr	r3, [r7, #20]
 15519 0c70 1344     		add	r3, r3, r2
 15520 0c72 2F4A     		ldr	r2, .L678+28
 15521 0c74 1D46     		mov	r5, r3
 15522 0c76 1446     		mov	r4, r2
 15523 0c78 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15524 0c7a 2860     		str	r0, [r5]	@ unaligned
 15525 0c7c 6960     		str	r1, [r5, #4]	@ unaligned
 15526 0c7e AA60     		str	r2, [r5, #8]	@ unaligned
 15527 0c80 EB60     		str	r3, [r5, #12]	@ unaligned
 15528 0c82 2388     		ldrh	r3, [r4]	@ unaligned
 15529 0c84 2B82     		strh	r3, [r5, #16]	@ unaligned
2049:..\src/command_processing.c ****                     break;
 15530              		.loc 1 2049 0
 15531 0c86 C4E0     		b	.L591
 15532              	.L594:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 349


2050:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2051:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15533              		.loc 1 2051 0
 15534 0c88 7869     		ldr	r0, [r7, #20]
 15535 0c8a FFF7FEFF 		bl	strlen
 15536 0c8e 0346     		mov	r3, r0
 15537 0c90 1A46     		mov	r2, r3
 15538 0c92 7B69     		ldr	r3, [r7, #20]
 15539 0c94 1344     		add	r3, r3, r2
 15540 0c96 274A     		ldr	r2, .L678+32
 15541 0c98 1D46     		mov	r5, r3
 15542 0c9a 1446     		mov	r4, r2
 15543 0c9c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15544 0c9e 2860     		str	r0, [r5]	@ unaligned
 15545 0ca0 6960     		str	r1, [r5, #4]	@ unaligned
 15546 0ca2 AA60     		str	r2, [r5, #8]	@ unaligned
 15547 0ca4 EB60     		str	r3, [r5, #12]	@ unaligned
 15548 0ca6 2068     		ldr	r0, [r4]	@ unaligned
 15549 0ca8 2861     		str	r0, [r5, #16]	@ unaligned
 15550 0caa 2379     		ldrb	r3, [r4, #4]
 15551 0cac 2B75     		strb	r3, [r5, #20]
2052:..\src/command_processing.c ****                     break;
 15552              		.loc 1 2052 0
 15553 0cae B0E0     		b	.L591
 15554              	.L595:
2053:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2054:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15555              		.loc 1 2054 0
 15556 0cb0 7869     		ldr	r0, [r7, #20]
 15557 0cb2 FFF7FEFF 		bl	strlen
 15558 0cb6 0346     		mov	r3, r0
 15559 0cb8 1A46     		mov	r2, r3
 15560 0cba 7B69     		ldr	r3, [r7, #20]
 15561 0cbc 1344     		add	r3, r3, r2
 15562 0cbe 1E4A     		ldr	r2, .L678+36
 15563 0cc0 1D46     		mov	r5, r3
 15564 0cc2 1446     		mov	r4, r2
 15565 0cc4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15566 0cc6 2860     		str	r0, [r5]	@ unaligned
 15567 0cc8 6960     		str	r1, [r5, #4]	@ unaligned
 15568 0cca AA60     		str	r2, [r5, #8]	@ unaligned
 15569 0ccc EB60     		str	r3, [r5, #12]	@ unaligned
 15570 0cce 07CC     		ldmia	r4!, {r0, r1, r2}
 15571 0cd0 2861     		str	r0, [r5, #16]	@ unaligned
 15572 0cd2 6961     		str	r1, [r5, #20]	@ unaligned
 15573 0cd4 AA61     		str	r2, [r5, #24]	@ unaligned
 15574 0cd6 2388     		ldrh	r3, [r4]	@ unaligned
 15575 0cd8 A278     		ldrb	r2, [r4, #2]
 15576 0cda AB83     		strh	r3, [r5, #28]	@ unaligned
 15577 0cdc 1346     		mov	r3, r2
 15578 0cde AB77     		strb	r3, [r5, #30]
2055:..\src/command_processing.c ****                     break;
 15579              		.loc 1 2055 0
 15580 0ce0 97E0     		b	.L591
 15581              	.L596:
2056:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2057:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 350


 15582              		.loc 1 2057 0
 15583 0ce2 7869     		ldr	r0, [r7, #20]
 15584 0ce4 FFF7FEFF 		bl	strlen
 15585 0ce8 0346     		mov	r3, r0
 15586 0cea 1A46     		mov	r2, r3
 15587 0cec 7B69     		ldr	r3, [r7, #20]
 15588 0cee 1344     		add	r3, r3, r2
 15589 0cf0 124A     		ldr	r2, .L678+40
 15590 0cf2 1D46     		mov	r5, r3
 15591 0cf4 1446     		mov	r4, r2
 15592 0cf6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15593 0cf8 2860     		str	r0, [r5]	@ unaligned
 15594 0cfa 6960     		str	r1, [r5, #4]	@ unaligned
 15595 0cfc AA60     		str	r2, [r5, #8]	@ unaligned
 15596 0cfe EB60     		str	r3, [r5, #12]	@ unaligned
 15597 0d00 03CC     		ldmia	r4!, {r0, r1}
 15598 0d02 2861     		str	r0, [r5, #16]	@ unaligned
 15599 0d04 6961     		str	r1, [r5, #20]	@ unaligned
 15600 0d06 2388     		ldrh	r3, [r4]	@ unaligned
 15601 0d08 A278     		ldrb	r2, [r4, #2]
 15602 0d0a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15603 0d0c 1346     		mov	r3, r2
 15604 0d0e AB76     		strb	r3, [r5, #26]
2058:..\src/command_processing.c ****                     break;
 15605              		.loc 1 2058 0
 15606 0d10 7FE0     		b	.L591
 15607              	.L679:
 15608 0d12 00BF     		.align	2
 15609              	.L678:
 15610 0d14 0000F040 		.word	1089470464
 15611 0d18 20140000 		.word	.LC190
 15612 0d1c 2C140000 		.word	.LC191
 15613 0d20 38140000 		.word	.LC192
 15614 0d24 44140000 		.word	.LC193
 15615 0d28 60140000 		.word	.LC194
 15616 0d2c 7C140000 		.word	.LC195
 15617 0d30 98140000 		.word	.LC196
 15618 0d34 AC140000 		.word	.LC197
 15619 0d38 C4140000 		.word	.LC198
 15620 0d3c E4140000 		.word	.LC199
 15621              	.L597:
2059:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2060:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15622              		.loc 1 2060 0
 15623 0d40 7869     		ldr	r0, [r7, #20]
 15624 0d42 FFF7FEFF 		bl	strlen
 15625 0d46 0346     		mov	r3, r0
 15626 0d48 1A46     		mov	r2, r3
 15627 0d4a 7B69     		ldr	r3, [r7, #20]
 15628 0d4c 1344     		add	r3, r3, r2
 15629 0d4e A44A     		ldr	r2, .L680
 15630 0d50 1C46     		mov	r4, r3
 15631 0d52 1546     		mov	r5, r2
 15632 0d54 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15633 0d56 2060     		str	r0, [r4]	@ unaligned
 15634 0d58 6160     		str	r1, [r4, #4]	@ unaligned
 15635 0d5a A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 351


 15636 0d5c E360     		str	r3, [r4, #12]	@ unaligned
 15637 0d5e 2868     		ldr	r0, [r5]	@ unaligned
 15638 0d60 2061     		str	r0, [r4, #16]	@ unaligned
 15639 0d62 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15640 0d64 AA79     		ldrb	r2, [r5, #6]
 15641 0d66 A382     		strh	r3, [r4, #20]	@ unaligned
 15642 0d68 1346     		mov	r3, r2
 15643 0d6a A375     		strb	r3, [r4, #22]
2061:..\src/command_processing.c ****                     break;
 15644              		.loc 1 2061 0
 15645 0d6c 51E0     		b	.L591
 15646              	.L598:
2062:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2063:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15647              		.loc 1 2063 0
 15648 0d6e 7869     		ldr	r0, [r7, #20]
 15649 0d70 FFF7FEFF 		bl	strlen
 15650 0d74 0346     		mov	r3, r0
 15651 0d76 1A46     		mov	r2, r3
 15652 0d78 7B69     		ldr	r3, [r7, #20]
 15653 0d7a 1344     		add	r3, r3, r2
 15654 0d7c 994A     		ldr	r2, .L680+4
 15655 0d7e 1D46     		mov	r5, r3
 15656 0d80 1446     		mov	r4, r2
 15657 0d82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15658 0d84 2860     		str	r0, [r5]	@ unaligned
 15659 0d86 6960     		str	r1, [r5, #4]	@ unaligned
 15660 0d88 AA60     		str	r2, [r5, #8]	@ unaligned
 15661 0d8a EB60     		str	r3, [r5, #12]	@ unaligned
 15662 0d8c 03CC     		ldmia	r4!, {r0, r1}
 15663 0d8e 2861     		str	r0, [r5, #16]	@ unaligned
 15664 0d90 6961     		str	r1, [r5, #20]	@ unaligned
 15665 0d92 2388     		ldrh	r3, [r4]	@ unaligned
 15666 0d94 A278     		ldrb	r2, [r4, #2]
 15667 0d96 2B83     		strh	r3, [r5, #24]	@ unaligned
 15668 0d98 1346     		mov	r3, r2
 15669 0d9a AB76     		strb	r3, [r5, #26]
2064:..\src/command_processing.c ****                     break;
 15670              		.loc 1 2064 0
 15671 0d9c 39E0     		b	.L591
 15672              	.L599:
2065:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2066:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15673              		.loc 1 2066 0
 15674 0d9e 7869     		ldr	r0, [r7, #20]
 15675 0da0 FFF7FEFF 		bl	strlen
 15676 0da4 0346     		mov	r3, r0
 15677 0da6 1A46     		mov	r2, r3
 15678 0da8 7B69     		ldr	r3, [r7, #20]
 15679 0daa 1344     		add	r3, r3, r2
 15680 0dac 8E4A     		ldr	r2, .L680+8
 15681 0dae 1C46     		mov	r4, r3
 15682 0db0 1546     		mov	r5, r2
 15683 0db2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15684 0db4 2060     		str	r0, [r4]	@ unaligned
 15685 0db6 6160     		str	r1, [r4, #4]	@ unaligned
 15686 0db8 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 352


 15687 0dba E360     		str	r3, [r4, #12]	@ unaligned
 15688 0dbc 2868     		ldr	r0, [r5]	@ unaligned
 15689 0dbe 2061     		str	r0, [r4, #16]	@ unaligned
 15690 0dc0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15691 0dc2 AA79     		ldrb	r2, [r5, #6]
 15692 0dc4 A382     		strh	r3, [r4, #20]	@ unaligned
 15693 0dc6 1346     		mov	r3, r2
 15694 0dc8 A375     		strb	r3, [r4, #22]
2067:..\src/command_processing.c ****                     break;
 15695              		.loc 1 2067 0
 15696 0dca 22E0     		b	.L591
 15697              	.L600:
2068:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2069:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15698              		.loc 1 2069 0
 15699 0dcc 7869     		ldr	r0, [r7, #20]
 15700 0dce FFF7FEFF 		bl	strlen
 15701 0dd2 0346     		mov	r3, r0
 15702 0dd4 1A46     		mov	r2, r3
 15703 0dd6 7B69     		ldr	r3, [r7, #20]
 15704 0dd8 1344     		add	r3, r3, r2
 15705 0dda 844A     		ldr	r2, .L680+12
 15706 0ddc 1546     		mov	r5, r2
 15707 0dde 9E46     		mov	lr, r3
 15708 0de0 05F1200C 		add	ip, r5, #32
 15709              	.L601:
 15710 0de4 7446     		mov	r4, lr
 15711 0de6 2E46     		mov	r6, r5
 15712 0de8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15713 0dea 2060     		str	r0, [r4]	@ unaligned
 15714 0dec 6160     		str	r1, [r4, #4]	@ unaligned
 15715 0dee A260     		str	r2, [r4, #8]	@ unaligned
 15716 0df0 E360     		str	r3, [r4, #12]	@ unaligned
 15717 0df2 1035     		adds	r5, r5, #16
 15718 0df4 0EF1100E 		add	lr, lr, #16
 15719 0df8 6545     		cmp	r5, ip
 15720 0dfa F3D1     		bne	.L601
 15721 0dfc 7446     		mov	r4, lr
 15722 0dfe 2B46     		mov	r3, r5
 15723 0e00 07CB     		ldmia	r3!, {r0, r1, r2}
 15724 0e02 2060     		str	r0, [r4]	@ unaligned
 15725 0e04 6160     		str	r1, [r4, #4]	@ unaligned
 15726 0e06 A260     		str	r2, [r4, #8]	@ unaligned
 15727 0e08 1A88     		ldrh	r2, [r3]	@ unaligned
 15728 0e0a 9B78     		ldrb	r3, [r3, #2]
 15729 0e0c A281     		strh	r2, [r4, #12]	@ unaligned
 15730 0e0e A373     		strb	r3, [r4, #14]
2070:..\src/command_processing.c ****                     break;
 15731              		.loc 1 2070 0
 15732 0e10 00BF     		nop
 15733              	.L591:
2071:..\src/command_processing.c ****             }
2072:..\src/command_processing.c **** 
2073:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15734              		.loc 1 2073 0
 15735 0e12 D7F88030 		ldr	r3, [r7, #128]
 15736 0e16 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 353


 15737 0e1a 032B     		cmp	r3, #3
 15738 0e1c 63D8     		bhi	.L671
 15739 0e1e 01A2     		adr	r2, .L604
 15740 0e20 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15741              		.p2align 2
 15742              	.L604:
 15743 0e24 350E0000 		.word	.L603+1
 15744 0e28 5F0E0000 		.word	.L605+1
 15745 0e2c 830E0000 		.word	.L606+1
 15746 0e30 A90E0000 		.word	.L607+1
 15747              		.p2align 1
 15748              	.L603:
2074:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2075:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15749              		.loc 1 2075 0
 15750 0e34 7869     		ldr	r0, [r7, #20]
 15751 0e36 FFF7FEFF 		bl	strlen
 15752 0e3a 0346     		mov	r3, r0
 15753 0e3c 1A46     		mov	r2, r3
 15754 0e3e 7B69     		ldr	r3, [r7, #20]
 15755 0e40 1344     		add	r3, r3, r2
 15756 0e42 6B4A     		ldr	r2, .L680+16
 15757 0e44 1D46     		mov	r5, r3
 15758 0e46 1446     		mov	r4, r2
 15759 0e48 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15760 0e4a 2860     		str	r0, [r5]	@ unaligned
 15761 0e4c 6960     		str	r1, [r5, #4]	@ unaligned
 15762 0e4e AA60     		str	r2, [r5, #8]	@ unaligned
 15763 0e50 EB60     		str	r3, [r5, #12]	@ unaligned
 15764 0e52 03CC     		ldmia	r4!, {r0, r1}
 15765 0e54 2861     		str	r0, [r5, #16]	@ unaligned
 15766 0e56 6961     		str	r1, [r5, #20]	@ unaligned
 15767 0e58 2378     		ldrb	r3, [r4]
 15768 0e5a 2B76     		strb	r3, [r5, #24]
2076:..\src/command_processing.c ****                     break;
 15769              		.loc 1 2076 0
 15770 0e5c 44E0     		b	.L608
 15771              	.L605:
2077:..\src/command_processing.c ****                 case CONTROL_PWM:
2078:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15772              		.loc 1 2078 0
 15773 0e5e 7869     		ldr	r0, [r7, #20]
 15774 0e60 FFF7FEFF 		bl	strlen
 15775 0e64 0346     		mov	r3, r0
 15776 0e66 1A46     		mov	r2, r3
 15777 0e68 7B69     		ldr	r3, [r7, #20]
 15778 0e6a 1344     		add	r3, r3, r2
 15779 0e6c 614A     		ldr	r2, .L680+20
 15780 0e6e 1D46     		mov	r5, r3
 15781 0e70 1446     		mov	r4, r2
 15782 0e72 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15783 0e74 2860     		str	r0, [r5]	@ unaligned
 15784 0e76 6960     		str	r1, [r5, #4]	@ unaligned
 15785 0e78 AA60     		str	r2, [r5, #8]	@ unaligned
 15786 0e7a EB60     		str	r3, [r5, #12]	@ unaligned
 15787 0e7c 2068     		ldr	r0, [r4]	@ unaligned
 15788 0e7e 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 354


2079:..\src/command_processing.c ****                     break;
 15789              		.loc 1 2079 0
 15790 0e80 32E0     		b	.L608
 15791              	.L606:
2080:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2081:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15792              		.loc 1 2081 0
 15793 0e82 7869     		ldr	r0, [r7, #20]
 15794 0e84 FFF7FEFF 		bl	strlen
 15795 0e88 0346     		mov	r3, r0
 15796 0e8a 1A46     		mov	r2, r3
 15797 0e8c 7B69     		ldr	r3, [r7, #20]
 15798 0e8e 1344     		add	r3, r3, r2
 15799 0e90 594A     		ldr	r2, .L680+24
 15800 0e92 1D46     		mov	r5, r3
 15801 0e94 1446     		mov	r4, r2
 15802 0e96 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15803 0e98 2860     		str	r0, [r5]	@ unaligned
 15804 0e9a 6960     		str	r1, [r5, #4]	@ unaligned
 15805 0e9c AA60     		str	r2, [r5, #8]	@ unaligned
 15806 0e9e EB60     		str	r3, [r5, #12]	@ unaligned
 15807 0ea0 03CC     		ldmia	r4!, {r0, r1}
 15808 0ea2 2861     		str	r0, [r5, #16]	@ unaligned
 15809 0ea4 6961     		str	r1, [r5, #20]	@ unaligned
2082:..\src/command_processing.c ****                     break;
 15810              		.loc 1 2082 0
 15811 0ea6 1FE0     		b	.L608
 15812              	.L607:
2083:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2084:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 15813              		.loc 1 2084 0
 15814 0ea8 7869     		ldr	r0, [r7, #20]
 15815 0eaa FFF7FEFF 		bl	strlen
 15816 0eae 0346     		mov	r3, r0
 15817 0eb0 1A46     		mov	r2, r3
 15818 0eb2 7B69     		ldr	r3, [r7, #20]
 15819 0eb4 1344     		add	r3, r3, r2
 15820 0eb6 514A     		ldr	r2, .L680+28
 15821 0eb8 1446     		mov	r4, r2
 15822 0eba 9E46     		mov	lr, r3
 15823 0ebc 04F1200C 		add	ip, r4, #32
 15824              	.L609:
 15825 0ec0 7546     		mov	r5, lr
 15826 0ec2 2646     		mov	r6, r4
 15827 0ec4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15828 0ec6 2860     		str	r0, [r5]	@ unaligned
 15829 0ec8 6960     		str	r1, [r5, #4]	@ unaligned
 15830 0eca AA60     		str	r2, [r5, #8]	@ unaligned
 15831 0ecc EB60     		str	r3, [r5, #12]	@ unaligned
 15832 0ece 1034     		adds	r4, r4, #16
 15833 0ed0 0EF1100E 		add	lr, lr, #16
 15834 0ed4 6445     		cmp	r4, ip
 15835 0ed6 F3D1     		bne	.L609
 15836 0ed8 7346     		mov	r3, lr
 15837 0eda 2246     		mov	r2, r4
 15838 0edc 1068     		ldr	r0, [r2]	@ unaligned
 15839 0ede 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 355


 15840 0ee0 1279     		ldrb	r2, [r2, #4]
 15841 0ee2 1A71     		strb	r2, [r3, #4]
2085:..\src/command_processing.c ****                     break;
 15842              		.loc 1 2085 0
 15843 0ee4 00E0     		b	.L608
 15844              	.L671:
2086:..\src/command_processing.c ****                 default:
2087:..\src/command_processing.c ****                     break;
 15845              		.loc 1 2087 0
 15846 0ee6 00BF     		nop
 15847              	.L608:
2088:..\src/command_processing.c ****             }
2089:..\src/command_processing.c **** 
2090:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 15848              		.loc 1 2090 0
 15849 0ee8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15850 0eec D7F88810 		ldr	r1, [r7, #136]
 15851 0ef0 1346     		mov	r3, r2
 15852 0ef2 5B00     		lsls	r3, r3, #1
 15853 0ef4 1344     		add	r3, r3, r2
 15854 0ef6 1B01     		lsls	r3, r3, #4
 15855 0ef8 0B44     		add	r3, r3, r1
 15856 0efa 03F5D873 		add	r3, r3, #432
 15857 0efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15858 0f00 002B     		cmp	r3, #0
 15859 0f02 1CD0     		beq	.L610
2091:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 15860              		.loc 1 2091 0
 15861 0f04 7869     		ldr	r0, [r7, #20]
 15862 0f06 FFF7FEFF 		bl	strlen
 15863 0f0a 0346     		mov	r3, r0
 15864 0f0c 1A46     		mov	r2, r3
 15865 0f0e 7B69     		ldr	r3, [r7, #20]
 15866 0f10 1344     		add	r3, r3, r2
 15867 0f12 3B4A     		ldr	r2, .L680+32
 15868 0f14 1446     		mov	r4, r2
 15869 0f16 9E46     		mov	lr, r3
 15870 0f18 04F1200C 		add	ip, r4, #32
 15871              	.L611:
 15872 0f1c 7546     		mov	r5, lr
 15873 0f1e 2646     		mov	r6, r4
 15874 0f20 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15875 0f22 2860     		str	r0, [r5]	@ unaligned
 15876 0f24 6960     		str	r1, [r5, #4]	@ unaligned
 15877 0f26 AA60     		str	r2, [r5, #8]	@ unaligned
 15878 0f28 EB60     		str	r3, [r5, #12]	@ unaligned
 15879 0f2a 1034     		adds	r4, r4, #16
 15880 0f2c 0EF1100E 		add	lr, lr, #16
 15881 0f30 6445     		cmp	r4, ip
 15882 0f32 F3D1     		bne	.L611
 15883 0f34 7346     		mov	r3, lr
 15884 0f36 2246     		mov	r2, r4
 15885 0f38 1278     		ldrb	r2, [r2]
 15886 0f3a 1A70     		strb	r2, [r3]
 15887 0f3c 13E0     		b	.L612
 15888              	.L610:
2092:..\src/command_processing.c ****             else
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 356


2093:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 15889              		.loc 1 2093 0
 15890 0f3e 7869     		ldr	r0, [r7, #20]
 15891 0f40 FFF7FEFF 		bl	strlen
 15892 0f44 0346     		mov	r3, r0
 15893 0f46 1A46     		mov	r2, r3
 15894 0f48 7B69     		ldr	r3, [r7, #20]
 15895 0f4a 1344     		add	r3, r3, r2
 15896 0f4c 2D4A     		ldr	r2, .L680+36
 15897 0f4e 1C46     		mov	r4, r3
 15898 0f50 1546     		mov	r5, r2
 15899 0f52 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15900 0f54 2060     		str	r0, [r4]	@ unaligned
 15901 0f56 6160     		str	r1, [r4, #4]	@ unaligned
 15902 0f58 A260     		str	r2, [r4, #8]	@ unaligned
 15903 0f5a E360     		str	r3, [r4, #12]	@ unaligned
 15904 0f5c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15905 0f5e 2061     		str	r0, [r4, #16]	@ unaligned
 15906 0f60 6161     		str	r1, [r4, #20]	@ unaligned
 15907 0f62 A261     		str	r2, [r4, #24]	@ unaligned
 15908 0f64 E361     		str	r3, [r4, #28]	@ unaligned
 15909              	.L612:
2094:..\src/command_processing.c **** 
2095:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 15910              		.loc 1 2095 0
 15911 0f66 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15912 0f6a D7F88810 		ldr	r1, [r7, #136]
 15913 0f6e 1346     		mov	r3, r2
 15914 0f70 5B00     		lsls	r3, r3, #1
 15915 0f72 1344     		add	r3, r3, r2
 15916 0f74 1B01     		lsls	r3, r3, #4
 15917 0f76 0B44     		add	r3, r3, r1
 15918 0f78 03F5DA73 		add	r3, r3, #436
 15919 0f7c 93F90030 		ldrsb	r3, [r3]
 15920 0f80 1A46     		mov	r2, r3
 15921 0f82 07F11803 		add	r3, r7, #24
 15922 0f86 2049     		ldr	r1, .L680+40
 15923 0f88 1846     		mov	r0, r3
 15924 0f8a FFF7FEFF 		bl	sprintf
2096:..\src/command_processing.c ****             strcat(info_string, str);
 15925              		.loc 1 2096 0
 15926 0f8e 07F11803 		add	r3, r7, #24
 15927 0f92 1946     		mov	r1, r3
 15928 0f94 7869     		ldr	r0, [r7, #20]
 15929 0f96 FFF7FEFF 		bl	strcat
2097:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2098:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 15930              		.loc 1 2098 0
 15931 0f9a 7869     		ldr	r0, [r7, #20]
 15932 0f9c FFF7FEFF 		bl	strlen
 15933 0fa0 0346     		mov	r3, r0
 15934 0fa2 1A46     		mov	r2, r3
 15935 0fa4 7B69     		ldr	r3, [r7, #20]
 15936 0fa6 1344     		add	r3, r3, r2
 15937 0fa8 184A     		ldr	r2, .L680+44
 15938 0faa 1446     		mov	r4, r2
 15939 0fac 9E46     		mov	lr, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 357


 15940 0fae 04F1200C 		add	ip, r4, #32
 15941              	.L613:
 15942 0fb2 7546     		mov	r5, lr
 15943 0fb4 2646     		mov	r6, r4
 15944 0fb6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15945 0fb8 2860     		str	r0, [r5]	@ unaligned
 15946 0fba 6960     		str	r1, [r5, #4]	@ unaligned
 15947 0fbc AA60     		str	r2, [r5, #8]	@ unaligned
 15948 0fbe EB60     		str	r3, [r5, #12]	@ unaligned
 15949 0fc0 1034     		adds	r4, r4, #16
 15950 0fc2 0EF1100E 		add	lr, lr, #16
 15951 0fc6 6445     		cmp	r4, ip
 15952 0fc8 F3D1     		bne	.L613
 15953 0fca 7246     		mov	r2, lr
 15954 0fcc 2346     		mov	r3, r4
 15955 0fce 03CB     		ldmia	r3!, {r0, r1}
 15956 0fd0 1060     		str	r0, [r2]	@ unaligned
 15957 0fd2 5160     		str	r1, [r2, #4]	@ unaligned
 15958 0fd4 1B78     		ldrb	r3, [r3]
 15959 0fd6 1372     		strb	r3, [r2, #8]
2099:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15960              		.loc 1 2099 0
 15961 0fd8 0023     		movs	r3, #0
 15962 0fda C7F89430 		str	r3, [r7, #148]
 15963 0fde 48E0     		b	.L614
 15964              	.L681:
 15965              		.align	2
 15966              	.L680:
 15967 0fe0 00150000 		.word	.LC200
 15968 0fe4 18150000 		.word	.LC201
 15969 0fe8 34150000 		.word	.LC202
 15970 0fec 4C150000 		.word	.LC203
 15971 0ff0 7C150000 		.word	.LC204
 15972 0ff4 98150000 		.word	.LC205
 15973 0ff8 AC150000 		.word	.LC206
 15974 0ffc C4150000 		.word	.LC207
 15975 1000 EC150000 		.word	.LC208
 15976 1004 10160000 		.word	.LC209
 15977 1008 30160000 		.word	.LC210
 15978 100c 4C160000 		.word	.LC211
 15979              	.L616:
2100:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15980              		.loc 1 2100 0
 15981 1010 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15982 1014 D7F88810 		ldr	r1, [r7, #136]
 15983 1018 1346     		mov	r3, r2
 15984 101a 5B00     		lsls	r3, r3, #1
 15985 101c 1344     		add	r3, r3, r2
 15986 101e 1B01     		lsls	r3, r3, #4
 15987 1020 CA18     		adds	r2, r1, r3
 15988 1022 D7F89430 		ldr	r3, [r7, #148]
 15989 1026 1344     		add	r3, r3, r2
 15990 1028 03F2B113 		addw	r3, r3, #433
 15991 102c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15992 102e 1A46     		mov	r2, r3
 15993 1030 07F11803 		add	r3, r7, #24
 15994 1034 AE49     		ldr	r1, .L682
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 358


 15995 1036 1846     		mov	r0, r3
 15996 1038 FFF7FEFF 		bl	sprintf
2101:..\src/command_processing.c ****                 strcat(info_string, str);
 15997              		.loc 1 2101 0
 15998 103c 07F11803 		add	r3, r7, #24
 15999 1040 1946     		mov	r1, r3
 16000 1042 7869     		ldr	r0, [r7, #20]
 16001 1044 FFF7FEFF 		bl	strcat
2102:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16002              		.loc 1 2102 0
 16003 1048 D7F89430 		ldr	r3, [r7, #148]
 16004 104c 022B     		cmp	r3, #2
 16005 104e 0BD0     		beq	.L615
2103:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16006              		.loc 1 2103 0
 16007 1050 7869     		ldr	r0, [r7, #20]
 16008 1052 FFF7FEFF 		bl	strlen
 16009 1056 0346     		mov	r3, r0
 16010 1058 1A46     		mov	r2, r3
 16011 105a 7B69     		ldr	r3, [r7, #20]
 16012 105c 1344     		add	r3, r3, r2
 16013 105e A54A     		ldr	r2, .L682+4
 16014 1060 1188     		ldrh	r1, [r2]	@ unaligned
 16015 1062 9278     		ldrb	r2, [r2, #2]
 16016 1064 1980     		strh	r1, [r3]	@ unaligned
 16017 1066 9A70     		strb	r2, [r3, #2]
 16018              	.L615:
2099:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16019              		.loc 1 2099 0 discriminator 2
 16020 1068 D7F89430 		ldr	r3, [r7, #148]
 16021 106c 0133     		adds	r3, r3, #1
 16022 106e C7F89430 		str	r3, [r7, #148]
 16023              	.L614:
2099:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16024              		.loc 1 2099 0 is_stmt 0 discriminator 1
 16025 1072 D7F89430 		ldr	r3, [r7, #148]
 16026 1076 022B     		cmp	r3, #2
 16027 1078 CADD     		ble	.L616
2104:..\src/command_processing.c ****                 }                
2105:..\src/command_processing.c ****             }
2106:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16028              		.loc 1 2106 0 is_stmt 1
 16029 107a 7869     		ldr	r0, [r7, #20]
 16030 107c FFF7FEFF 		bl	strlen
 16031 1080 0346     		mov	r3, r0
 16032 1082 1A46     		mov	r2, r3
 16033 1084 7B69     		ldr	r3, [r7, #20]
 16034 1086 1344     		add	r3, r3, r2
 16035 1088 9B4A     		ldr	r2, .L682+8
 16036 108a 1188     		ldrh	r1, [r2]	@ unaligned
 16037 108c 9278     		ldrb	r2, [r2, #2]
 16038 108e 1980     		strh	r1, [r3]	@ unaligned
 16039 1090 9A70     		strb	r2, [r3, #2]
2107:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 16040              		.loc 1 2107 0
 16041 1092 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16042 1096 D7F88810 		ldr	r1, [r7, #136]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 359


 16043 109a 1346     		mov	r3, r2
 16044 109c 5B00     		lsls	r3, r3, #1
 16045 109e 1344     		add	r3, r3, r2
 16046 10a0 1B01     		lsls	r3, r3, #4
 16047 10a2 0B44     		add	r3, r3, r1
 16048 10a4 03F2B513 		addw	r3, r3, #437
 16049 10a8 93F90030 		ldrsb	r3, [r3]
 16050 10ac 1A46     		mov	r2, r3
 16051 10ae 07F11803 		add	r3, r7, #24
 16052 10b2 9249     		ldr	r1, .L682+12
 16053 10b4 1846     		mov	r0, r3
 16054 10b6 FFF7FEFF 		bl	sprintf
2108:..\src/command_processing.c ****             strcat(info_string, str);
 16055              		.loc 1 2108 0
 16056 10ba 07F11803 		add	r3, r7, #24
 16057 10be 1946     		mov	r1, r3
 16058 10c0 7869     		ldr	r0, [r7, #20]
 16059 10c2 FFF7FEFF 		bl	strcat
2109:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 16060              		.loc 1 2109 0
 16061 10c6 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16062 10ca D7F88810 		ldr	r1, [r7, #136]
 16063 10ce 1346     		mov	r3, r2
 16064 10d0 5B00     		lsls	r3, r3, #1
 16065 10d2 1344     		add	r3, r3, r2
 16066 10d4 1B01     		lsls	r3, r3, #4
 16067 10d6 0B44     		add	r3, r3, r1
 16068 10d8 03F5DB73 		add	r3, r3, #438
 16069 10dc 93F90030 		ldrsb	r3, [r3]
 16070 10e0 1A46     		mov	r2, r3
 16071 10e2 07F11803 		add	r3, r7, #24
 16072 10e6 8649     		ldr	r1, .L682+16
 16073 10e8 1846     		mov	r0, r3
 16074 10ea FFF7FEFF 		bl	sprintf
2110:..\src/command_processing.c ****             strcat(info_string, str);
 16075              		.loc 1 2110 0
 16076 10ee 07F11803 		add	r3, r7, #24
 16077 10f2 1946     		mov	r1, r3
 16078 10f4 7869     		ldr	r0, [r7, #20]
 16079 10f6 FFF7FEFF 		bl	strcat
2111:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 16080              		.loc 1 2111 0
 16081 10fa 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16082 10fe D7F88810 		ldr	r1, [r7, #136]
 16083 1102 1346     		mov	r3, r2
 16084 1104 5B00     		lsls	r3, r3, #1
 16085 1106 1344     		add	r3, r3, r2
 16086 1108 1B01     		lsls	r3, r3, #4
 16087 110a 0B44     		add	r3, r3, r1
 16088 110c 03F2B713 		addw	r3, r3, #439
 16089 1110 93F90030 		ldrsb	r3, [r3]
 16090 1114 1A46     		mov	r2, r3
 16091 1116 07F11803 		add	r3, r7, #24
 16092 111a 7A49     		ldr	r1, .L682+20
 16093 111c 1846     		mov	r0, r3
 16094 111e FFF7FEFF 		bl	sprintf
2112:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 360


 16095              		.loc 1 2112 0
 16096 1122 07F11803 		add	r3, r7, #24
 16097 1126 1946     		mov	r1, r3
 16098 1128 7869     		ldr	r0, [r7, #20]
 16099 112a FFF7FEFF 		bl	strcat
2113:..\src/command_processing.c **** #endif            
2114:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16100              		.loc 1 2114 0
 16101 112e 7869     		ldr	r0, [r7, #20]
 16102 1130 FFF7FEFF 		bl	strlen
 16103 1134 0346     		mov	r3, r0
 16104 1136 1A46     		mov	r2, r3
 16105 1138 7B69     		ldr	r3, [r7, #20]
 16106 113a 1344     		add	r3, r3, r2
 16107 113c 6E4A     		ldr	r2, .L682+8
 16108 113e 1188     		ldrh	r1, [r2]	@ unaligned
 16109 1140 9278     		ldrb	r2, [r2, #2]
 16110 1142 1980     		strh	r1, [r3]	@ unaligned
 16111 1144 9A70     		strb	r2, [r3, #2]
2115:..\src/command_processing.c **** 
2116:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16112              		.loc 1 2116 0
 16113 1146 7869     		ldr	r0, [r7, #20]
 16114 1148 FFF7FEFF 		bl	strlen
 16115 114c 0346     		mov	r3, r0
 16116 114e 1A46     		mov	r2, r3
 16117 1150 7B69     		ldr	r3, [r7, #20]
 16118 1152 1344     		add	r3, r3, r2
 16119 1154 6C4A     		ldr	r2, .L682+24
 16120 1156 1D46     		mov	r5, r3
 16121 1158 1446     		mov	r4, r2
 16122 115a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16123 115c 2860     		str	r0, [r5]	@ unaligned
 16124 115e 6960     		str	r1, [r5, #4]	@ unaligned
 16125 1160 AA60     		str	r2, [r5, #8]	@ unaligned
 16126 1162 EB60     		str	r3, [r5, #12]	@ unaligned
 16127 1164 2068     		ldr	r0, [r4]	@ unaligned
 16128 1166 2861     		str	r0, [r5, #16]	@ unaligned
2117:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16129              		.loc 1 2117 0
 16130 1168 0023     		movs	r3, #0
 16131 116a C7F89430 		str	r3, [r7, #148]
 16132 116e 30E0     		b	.L617
 16133              	.L619:
2118:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16134              		.loc 1 2118 0
 16135 1170 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16136 1174 D7F88810 		ldr	r1, [r7, #136]
 16137 1178 1346     		mov	r3, r2
 16138 117a 5B00     		lsls	r3, r3, #1
 16139 117c 1344     		add	r3, r3, r2
 16140 117e 1B01     		lsls	r3, r3, #4
 16141 1180 CA18     		adds	r2, r1, r3
 16142 1182 D7F89430 		ldr	r3, [r7, #148]
 16143 1186 1344     		add	r3, r3, r2
 16144 1188 03F29513 		addw	r3, r3, #405
 16145 118c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 361


 16146 118e 1A46     		mov	r2, r3
 16147 1190 07F11803 		add	r3, r7, #24
 16148 1194 5649     		ldr	r1, .L682
 16149 1196 1846     		mov	r0, r3
 16150 1198 FFF7FEFF 		bl	sprintf
2119:..\src/command_processing.c ****                 strcat(info_string, str);
 16151              		.loc 1 2119 0
 16152 119c 07F11803 		add	r3, r7, #24
 16153 11a0 1946     		mov	r1, r3
 16154 11a2 7869     		ldr	r0, [r7, #20]
 16155 11a4 FFF7FEFF 		bl	strcat
2120:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16156              		.loc 1 2120 0
 16157 11a8 D7F89430 		ldr	r3, [r7, #148]
 16158 11ac 022B     		cmp	r3, #2
 16159 11ae 0BD0     		beq	.L618
2121:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16160              		.loc 1 2121 0
 16161 11b0 7869     		ldr	r0, [r7, #20]
 16162 11b2 FFF7FEFF 		bl	strlen
 16163 11b6 0346     		mov	r3, r0
 16164 11b8 1A46     		mov	r2, r3
 16165 11ba 7B69     		ldr	r3, [r7, #20]
 16166 11bc 1344     		add	r3, r3, r2
 16167 11be 4D4A     		ldr	r2, .L682+4
 16168 11c0 1188     		ldrh	r1, [r2]	@ unaligned
 16169 11c2 9278     		ldrb	r2, [r2, #2]
 16170 11c4 1980     		strh	r1, [r3]	@ unaligned
 16171 11c6 9A70     		strb	r2, [r3, #2]
 16172              	.L618:
2117:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16173              		.loc 1 2117 0 discriminator 2
 16174 11c8 D7F89430 		ldr	r3, [r7, #148]
 16175 11cc 0133     		adds	r3, r3, #1
 16176 11ce C7F89430 		str	r3, [r7, #148]
 16177              	.L617:
2117:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16178              		.loc 1 2117 0 is_stmt 0 discriminator 1
 16179 11d2 D7F89430 		ldr	r3, [r7, #148]
 16180 11d6 022B     		cmp	r3, #2
 16181 11d8 CADD     		ble	.L619
2122:..\src/command_processing.c ****                 }                
2123:..\src/command_processing.c ****             }
2124:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16182              		.loc 1 2124 0 is_stmt 1
 16183 11da 7869     		ldr	r0, [r7, #20]
 16184 11dc FFF7FEFF 		bl	strlen
 16185 11e0 0346     		mov	r3, r0
 16186 11e2 1A46     		mov	r2, r3
 16187 11e4 7B69     		ldr	r3, [r7, #20]
 16188 11e6 1344     		add	r3, r3, r2
 16189 11e8 434A     		ldr	r2, .L682+8
 16190 11ea 1188     		ldrh	r1, [r2]	@ unaligned
 16191 11ec 9278     		ldrb	r2, [r2, #2]
 16192 11ee 1980     		strh	r1, [r3]	@ unaligned
 16193 11f0 9A70     		strb	r2, [r3, #2]
2125:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 362


2126:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16194              		.loc 1 2126 0
 16195 11f2 7869     		ldr	r0, [r7, #20]
 16196 11f4 FFF7FEFF 		bl	strlen
 16197 11f8 0346     		mov	r3, r0
 16198 11fa 1A46     		mov	r2, r3
 16199 11fc 7B69     		ldr	r3, [r7, #20]
 16200 11fe 1344     		add	r3, r3, r2
 16201 1200 424A     		ldr	r2, .L682+28
 16202 1202 1D46     		mov	r5, r3
 16203 1204 1446     		mov	r4, r2
 16204 1206 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16205 1208 2860     		str	r0, [r5]	@ unaligned
 16206 120a 6960     		str	r1, [r5, #4]	@ unaligned
 16207 120c AA60     		str	r2, [r5, #8]	@ unaligned
 16208 120e EB60     		str	r3, [r5, #12]	@ unaligned
 16209 1210 2068     		ldr	r0, [r4]	@ unaligned
 16210 1212 2861     		str	r0, [r5, #16]	@ unaligned
 16211 1214 2379     		ldrb	r3, [r4, #4]
 16212 1216 2B75     		strb	r3, [r5, #20]
2127:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16213              		.loc 1 2127 0
 16214 1218 0023     		movs	r3, #0
 16215 121a C7F89430 		str	r3, [r7, #148]
 16216 121e 3FE0     		b	.L620
 16217              	.L622:
2128:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16218              		.loc 1 2128 0
 16219 1220 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16220 1224 D7F88810 		ldr	r1, [r7, #136]
 16221 1228 1346     		mov	r3, r2
 16222 122a 5B00     		lsls	r3, r3, #1
 16223 122c 1344     		add	r3, r3, r2
 16224 122e 9B00     		lsls	r3, r3, #2
 16225 1230 D7F89420 		ldr	r2, [r7, #148]
 16226 1234 1344     		add	r3, r3, r2
 16227 1236 6633     		adds	r3, r3, #102
 16228 1238 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16229 123c 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16230 1240 D7F88800 		ldr	r0, [r7, #136]
 16231 1244 1346     		mov	r3, r2
 16232 1246 5B00     		lsls	r3, r3, #1
 16233 1248 1344     		add	r3, r3, r2
 16234 124a 1B01     		lsls	r3, r3, #4
 16235 124c C218     		adds	r2, r0, r3
 16236 124e D7F89430 		ldr	r3, [r7, #148]
 16237 1252 1344     		add	r3, r3, r2
 16238 1254 03F29513 		addw	r3, r3, #405
 16239 1258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16240 125a 41FA03F2 		asr	r2, r1, r3
 16241 125e 07F11803 		add	r3, r7, #24
 16242 1262 2B49     		ldr	r1, .L682+32
 16243 1264 1846     		mov	r0, r3
 16244 1266 FFF7FEFF 		bl	sprintf
2129:..\src/command_processing.c ****                 strcat(info_string, str);
 16245              		.loc 1 2129 0
 16246 126a 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 363


 16247 126e 1946     		mov	r1, r3
 16248 1270 7869     		ldr	r0, [r7, #20]
 16249 1272 FFF7FEFF 		bl	strcat
2130:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16250              		.loc 1 2130 0
 16251 1276 D7F89430 		ldr	r3, [r7, #148]
 16252 127a 022B     		cmp	r3, #2
 16253 127c 0BD0     		beq	.L621
2131:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16254              		.loc 1 2131 0
 16255 127e 7869     		ldr	r0, [r7, #20]
 16256 1280 FFF7FEFF 		bl	strlen
 16257 1284 0346     		mov	r3, r0
 16258 1286 1A46     		mov	r2, r3
 16259 1288 7B69     		ldr	r3, [r7, #20]
 16260 128a 1344     		add	r3, r3, r2
 16261 128c 194A     		ldr	r2, .L682+4
 16262 128e 1188     		ldrh	r1, [r2]	@ unaligned
 16263 1290 9278     		ldrb	r2, [r2, #2]
 16264 1292 1980     		strh	r1, [r3]	@ unaligned
 16265 1294 9A70     		strb	r2, [r3, #2]
 16266              	.L621:
2127:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16267              		.loc 1 2127 0 discriminator 2
 16268 1296 D7F89430 		ldr	r3, [r7, #148]
 16269 129a 0133     		adds	r3, r3, #1
 16270 129c C7F89430 		str	r3, [r7, #148]
 16271              	.L620:
2127:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16272              		.loc 1 2127 0 is_stmt 0 discriminator 1
 16273 12a0 D7F89430 		ldr	r3, [r7, #148]
 16274 12a4 022B     		cmp	r3, #2
 16275 12a6 BBDD     		ble	.L622
2132:..\src/command_processing.c ****                 }
2133:..\src/command_processing.c ****             }
2134:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16276              		.loc 1 2134 0 is_stmt 1
 16277 12a8 7869     		ldr	r0, [r7, #20]
 16278 12aa FFF7FEFF 		bl	strlen
 16279 12ae 0346     		mov	r3, r0
 16280 12b0 1A46     		mov	r2, r3
 16281 12b2 7B69     		ldr	r3, [r7, #20]
 16282 12b4 1344     		add	r3, r3, r2
 16283 12b6 104A     		ldr	r2, .L682+8
 16284 12b8 1188     		ldrh	r1, [r2]	@ unaligned
 16285 12ba 9278     		ldrb	r2, [r2, #2]
 16286 12bc 1980     		strh	r1, [r3]	@ unaligned
 16287 12be 9A70     		strb	r2, [r3, #2]
2135:..\src/command_processing.c ****                 
2136:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16288              		.loc 1 2136 0
 16289 12c0 7869     		ldr	r0, [r7, #20]
 16290 12c2 FFF7FEFF 		bl	strlen
 16291 12c6 0346     		mov	r3, r0
 16292 12c8 1A46     		mov	r2, r3
 16293 12ca 7B69     		ldr	r3, [r7, #20]
 16294 12cc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 364


 16295 12ce 114A     		ldr	r2, .L682+36
 16296 12d0 1D46     		mov	r5, r3
 16297 12d2 1446     		mov	r4, r2
 16298 12d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16299 12d6 2860     		str	r0, [r5]	@ unaligned
 16300 12d8 6960     		str	r1, [r5, #4]	@ unaligned
 16301 12da AA60     		str	r2, [r5, #8]	@ unaligned
 16302 12dc EB60     		str	r3, [r5, #12]	@ unaligned
 16303 12de 03CC     		ldmia	r4!, {r0, r1}
 16304 12e0 2861     		str	r0, [r5, #16]	@ unaligned
 16305 12e2 6961     		str	r1, [r5, #20]	@ unaligned
 16306 12e4 2378     		ldrb	r3, [r4]
 16307 12e6 2B76     		strb	r3, [r5, #24]
2137:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16308              		.loc 1 2137 0
 16309 12e8 0023     		movs	r3, #0
 16310 12ea C7F89430 		str	r3, [r7, #148]
 16311 12ee 49E0     		b	.L623
 16312              	.L683:
 16313              		.align	2
 16314              	.L682:
 16315 12f0 40130000 		.word	.LC181
 16316 12f4 44130000 		.word	.LC182
 16317 12f8 10110000 		.word	.LC150
 16318 12fc 78160000 		.word	.LC212
 16319 1300 90160000 		.word	.LC213
 16320 1304 A8160000 		.word	.LC214
 16321 1308 C0160000 		.word	.LC215
 16322 130c D4160000 		.word	.LC216
 16323 1310 EC160000 		.word	.LC217
 16324 1314 F0160000 		.word	.LC218
 16325              	.L625:
2138:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16326              		.loc 1 2138 0
 16327 1318 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16328 131c D7F88810 		ldr	r1, [r7, #136]
 16329 1320 1346     		mov	r3, r2
 16330 1322 5B00     		lsls	r3, r3, #1
 16331 1324 1344     		add	r3, r3, r2
 16332 1326 9B00     		lsls	r3, r3, #2
 16333 1328 D7F89420 		ldr	r2, [r7, #148]
 16334 132c 1344     		add	r3, r3, r2
 16335 132e 6833     		adds	r3, r3, #104
 16336 1330 9B00     		lsls	r3, r3, #2
 16337 1332 0B44     		add	r3, r3, r1
 16338 1334 5B68     		ldr	r3, [r3, #4]	@ float
 16339 1336 1846     		mov	r0, r3
 16340 1338 FFF7FEFF 		bl	__aeabi_f2d
 16341 133c 0346     		mov	r3, r0
 16342 133e 0C46     		mov	r4, r1
 16343 1340 07F11800 		add	r0, r7, #24
 16344 1344 1A46     		mov	r2, r3
 16345 1346 2346     		mov	r3, r4
 16346 1348 BD49     		ldr	r1, .L684
 16347 134a FFF7FEFF 		bl	sprintf
2139:..\src/command_processing.c ****                 strcat(info_string, str);
 16348              		.loc 1 2139 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 365


 16349 134e 07F11803 		add	r3, r7, #24
 16350 1352 1946     		mov	r1, r3
 16351 1354 7869     		ldr	r0, [r7, #20]
 16352 1356 FFF7FEFF 		bl	strcat
2140:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16353              		.loc 1 2140 0
 16354 135a D7F89430 		ldr	r3, [r7, #148]
 16355 135e 022B     		cmp	r3, #2
 16356 1360 0BD0     		beq	.L624
2141:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16357              		.loc 1 2141 0
 16358 1362 7869     		ldr	r0, [r7, #20]
 16359 1364 FFF7FEFF 		bl	strlen
 16360 1368 0346     		mov	r3, r0
 16361 136a 1A46     		mov	r2, r3
 16362 136c 7B69     		ldr	r3, [r7, #20]
 16363 136e 1344     		add	r3, r3, r2
 16364 1370 B44A     		ldr	r2, .L684+4
 16365 1372 1188     		ldrh	r1, [r2]	@ unaligned
 16366 1374 9278     		ldrb	r2, [r2, #2]
 16367 1376 1980     		strh	r1, [r3]	@ unaligned
 16368 1378 9A70     		strb	r2, [r3, #2]
 16369              	.L624:
2137:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16370              		.loc 1 2137 0 discriminator 2
 16371 137a D7F89430 		ldr	r3, [r7, #148]
 16372 137e 0133     		adds	r3, r3, #1
 16373 1380 C7F89430 		str	r3, [r7, #148]
 16374              	.L623:
2137:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16375              		.loc 1 2137 0 is_stmt 0 discriminator 1
 16376 1384 D7F89430 		ldr	r3, [r7, #148]
 16377 1388 022B     		cmp	r3, #2
 16378 138a C5DD     		ble	.L625
2142:..\src/command_processing.c ****                 }
2143:..\src/command_processing.c ****             }
2144:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16379              		.loc 1 2144 0 is_stmt 1
 16380 138c 7869     		ldr	r0, [r7, #20]
 16381 138e FFF7FEFF 		bl	strlen
 16382 1392 0346     		mov	r3, r0
 16383 1394 1A46     		mov	r2, r3
 16384 1396 7B69     		ldr	r3, [r7, #20]
 16385 1398 1344     		add	r3, r3, r2
 16386 139a AB4A     		ldr	r2, .L684+8
 16387 139c 1188     		ldrh	r1, [r2]	@ unaligned
 16388 139e 9278     		ldrb	r2, [r2, #2]
 16389 13a0 1980     		strh	r1, [r3]	@ unaligned
 16390 13a2 9A70     		strb	r2, [r3, #2]
2145:..\src/command_processing.c ****             
2146:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2147:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16391              		.loc 1 2147 0
 16392 13a4 D7F88030 		ldr	r3, [r7, #128]
 16393 13a8 5B6C     		ldr	r3, [r3, #68]	@ float
2146:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16394              		.loc 1 2146 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 366


 16395 13aa 1846     		mov	r0, r3
 16396 13ac FFF7FEFF 		bl	__aeabi_f2d
 16397 13b0 C7E90201 		strd	r0, [r7, #8]
 16398              		.loc 1 2147 0
 16399 13b4 D7F88030 		ldr	r3, [r7, #128]
 16400 13b8 9B6C     		ldr	r3, [r3, #72]	@ float
2146:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16401              		.loc 1 2146 0
 16402 13ba 1846     		mov	r0, r3
 16403 13bc FFF7FEFF 		bl	__aeabi_f2d
 16404 13c0 0446     		mov	r4, r0
 16405 13c2 0D46     		mov	r5, r1
 16406              		.loc 1 2147 0
 16407 13c4 D7F88030 		ldr	r3, [r7, #128]
 16408 13c8 DB6C     		ldr	r3, [r3, #76]	@ float
2146:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16409              		.loc 1 2146 0
 16410 13ca 1846     		mov	r0, r3
 16411 13cc FFF7FEFF 		bl	__aeabi_f2d
 16412 13d0 8046     		mov	r8, r0
 16413 13d2 8946     		mov	r9, r1
2148:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16414              		.loc 1 2148 0
 16415 13d4 D7F88030 		ldr	r3, [r7, #128]
 16416 13d8 1B6D     		ldr	r3, [r3, #80]	@ float
2146:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16417              		.loc 1 2146 0
 16418 13da 1846     		mov	r0, r3
 16419 13dc FFF7FEFF 		bl	__aeabi_f2d
 16420 13e0 8246     		mov	r10, r0
 16421 13e2 8B46     		mov	fp, r1
 16422              		.loc 1 2148 0
 16423 13e4 D7F88030 		ldr	r3, [r7, #128]
 16424 13e8 5B6D     		ldr	r3, [r3, #84]	@ float
2146:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16425              		.loc 1 2146 0
 16426 13ea 1846     		mov	r0, r3
 16427 13ec FFF7FEFF 		bl	__aeabi_f2d
 16428 13f0 C7E90001 		strd	r0, [r7]
 16429              		.loc 1 2148 0
 16430 13f4 D7F88030 		ldr	r3, [r7, #128]
 16431 13f8 9B6D     		ldr	r3, [r3, #88]	@ float
2146:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16432              		.loc 1 2146 0
 16433 13fa 1846     		mov	r0, r3
 16434 13fc FFF7FEFF 		bl	__aeabi_f2d
 16435 1400 0246     		mov	r2, r0
 16436 1402 0B46     		mov	r3, r1
 16437 1404 07F11800 		add	r0, r7, #24
 16438 1408 CDE90823 		strd	r2, [sp, #32]
 16439 140c D7E90012 		ldrd	r1, [r7]
 16440 1410 CDE90612 		strd	r1, [sp, #24]
 16441 1414 CDE904AB 		strd	r10, [sp, #16]
 16442 1418 CDE90289 		strd	r8, [sp, #8]
 16443 141c CDE90045 		strd	r4, [sp]
 16444 1420 D7E90223 		ldrd	r2, [r7, #8]
 16445 1424 8949     		ldr	r1, .L684+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 367


 16446 1426 FFF7FEFF 		bl	sprintf
2149:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16447              		.loc 1 2149 0
 16448 142a 07F11803 		add	r3, r7, #24
 16449 142e 1946     		mov	r1, r3
 16450 1430 7869     		ldr	r0, [r7, #20]
 16451 1432 FFF7FEFF 		bl	strcat
2150:..\src/command_processing.c **** 
2151:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16452              		.loc 1 2151 0
 16453 1436 D7F88030 		ldr	r3, [r7, #128]
 16454 143a 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16455 143e 1A46     		mov	r2, r3
 16456 1440 07F11803 		add	r3, r7, #24
 16457 1444 8249     		ldr	r1, .L684+16
 16458 1446 1846     		mov	r0, r3
 16459 1448 FFF7FEFF 		bl	sprintf
2152:..\src/command_processing.c ****             strcat(info_string, str);
 16460              		.loc 1 2152 0
 16461 144c 07F11803 		add	r3, r7, #24
 16462 1450 1946     		mov	r1, r3
 16463 1452 7869     		ldr	r0, [r7, #20]
 16464 1454 FFF7FEFF 		bl	strcat
2153:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16465              		.loc 1 2153 0
 16466 1458 7869     		ldr	r0, [r7, #20]
 16467 145a FFF7FEFF 		bl	strlen
 16468 145e 0346     		mov	r3, r0
 16469 1460 1A46     		mov	r2, r3
 16470 1462 7B69     		ldr	r3, [r7, #20]
 16471 1464 1344     		add	r3, r3, r2
 16472 1466 784A     		ldr	r2, .L684+8
 16473 1468 1188     		ldrh	r1, [r2]	@ unaligned
 16474 146a 9278     		ldrb	r2, [r2, #2]
 16475 146c 1980     		strh	r1, [r3]	@ unaligned
 16476 146e 9A70     		strb	r2, [r3, #2]
2154:..\src/command_processing.c **** 
2155:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16477              		.loc 1 2155 0
 16478 1470 D7F88030 		ldr	r3, [r7, #128]
 16479 1474 596B     		ldr	r1, [r3, #52]
 16480 1476 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16481 147a D7F88800 		ldr	r0, [r7, #136]
 16482 147e 1346     		mov	r3, r2
 16483 1480 5B00     		lsls	r3, r3, #1
 16484 1482 1344     		add	r3, r3, r2
 16485 1484 1B01     		lsls	r3, r3, #4
 16486 1486 0344     		add	r3, r3, r0
 16487 1488 03F29513 		addw	r3, r3, #405
 16488 148c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16489 148e 41FA03F2 		asr	r2, r1, r3
 16490 1492 07F11803 		add	r3, r7, #24
 16491 1496 6F49     		ldr	r1, .L684+20
 16492 1498 1846     		mov	r0, r3
 16493 149a FFF7FEFF 		bl	sprintf
2156:..\src/command_processing.c ****             strcat(info_string, str);
 16494              		.loc 1 2156 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 368


 16495 149e 07F11803 		add	r3, r7, #24
 16496 14a2 1946     		mov	r1, r3
 16497 14a4 7869     		ldr	r0, [r7, #20]
 16498 14a6 FFF7FEFF 		bl	strcat
2157:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16499              		.loc 1 2157 0
 16500 14aa D7F88030 		ldr	r3, [r7, #128]
 16501 14ae 996B     		ldr	r1, [r3, #56]
 16502 14b0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16503 14b4 D7F88800 		ldr	r0, [r7, #136]
 16504 14b8 1346     		mov	r3, r2
 16505 14ba 5B00     		lsls	r3, r3, #1
 16506 14bc 1344     		add	r3, r3, r2
 16507 14be 1B01     		lsls	r3, r3, #4
 16508 14c0 0344     		add	r3, r3, r0
 16509 14c2 03F29513 		addw	r3, r3, #405
 16510 14c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16511 14c8 41FA03F2 		asr	r2, r1, r3
 16512 14cc 07F11803 		add	r3, r7, #24
 16513 14d0 6149     		ldr	r1, .L684+24
 16514 14d2 1846     		mov	r0, r3
 16515 14d4 FFF7FEFF 		bl	sprintf
2158:..\src/command_processing.c ****             strcat(info_string, str);
 16516              		.loc 1 2158 0
 16517 14d8 07F11803 		add	r3, r7, #24
 16518 14dc 1946     		mov	r1, r3
 16519 14de 7869     		ldr	r0, [r7, #20]
 16520 14e0 FFF7FEFF 		bl	strcat
2159:..\src/command_processing.c **** 
2160:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16521              		.loc 1 2160 0
 16522 14e4 D7F88030 		ldr	r3, [r7, #128]
 16523 14e8 1A6C     		ldr	r2, [r3, #64]
 16524 14ea D7F88030 		ldr	r3, [r7, #128]
 16525 14ee DB6B     		ldr	r3, [r3, #60]
 16526 14f0 07F11800 		add	r0, r7, #24
 16527 14f4 5949     		ldr	r1, .L684+28
 16528 14f6 FFF7FEFF 		bl	sprintf
2161:..\src/command_processing.c ****             strcat(info_string, str);
 16529              		.loc 1 2161 0
 16530 14fa 07F11803 		add	r3, r7, #24
 16531 14fe 1946     		mov	r1, r3
 16532 1500 7869     		ldr	r0, [r7, #20]
 16533 1502 FFF7FEFF 		bl	strcat
2162:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16534              		.loc 1 2162 0
 16535 1506 7869     		ldr	r0, [r7, #20]
 16536 1508 FFF7FEFF 		bl	strlen
 16537 150c 0346     		mov	r3, r0
 16538 150e 1A46     		mov	r2, r3
 16539 1510 7B69     		ldr	r3, [r7, #20]
 16540 1512 1344     		add	r3, r3, r2
 16541 1514 4C4A     		ldr	r2, .L684+8
 16542 1516 1188     		ldrh	r1, [r2]	@ unaligned
 16543 1518 9278     		ldrb	r2, [r2, #2]
 16544 151a 1980     		strh	r1, [r3]	@ unaligned
 16545 151c 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 369


2163:..\src/command_processing.c **** 
2164:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16546              		.loc 1 2164 0
 16547 151e D7F88030 		ldr	r3, [r7, #128]
 16548 1522 B3F95C30 		ldrsh	r3, [r3, #92]
 16549 1526 1A46     		mov	r2, r3
 16550 1528 07F11803 		add	r3, r7, #24
 16551 152c 4C49     		ldr	r1, .L684+32
 16552 152e 1846     		mov	r0, r3
 16553 1530 FFF7FEFF 		bl	sprintf
2165:..\src/command_processing.c ****             strcat(info_string, str);
 16554              		.loc 1 2165 0
 16555 1534 07F11803 		add	r3, r7, #24
 16556 1538 1946     		mov	r1, r3
 16557 153a 7869     		ldr	r0, [r7, #20]
 16558 153c FFF7FEFF 		bl	strcat
2166:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2167:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 16559              		.loc 1 2167 0
 16560 1540 D7F88030 		ldr	r3, [r7, #128]
 16561 1544 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 16562 1548 1A46     		mov	r2, r3
 16563 154a 07F11803 		add	r3, r7, #24
 16564 154e 4549     		ldr	r1, .L684+36
 16565 1550 1846     		mov	r0, r3
 16566 1552 FFF7FEFF 		bl	sprintf
2168:..\src/command_processing.c ****             strcat(info_string, str);
 16567              		.loc 1 2168 0
 16568 1556 07F11803 		add	r3, r7, #24
 16569 155a 1946     		mov	r1, r3
 16570 155c 7869     		ldr	r0, [r7, #20]
 16571 155e FFF7FEFF 		bl	strcat
2169:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 16572              		.loc 1 2169 0
 16573 1562 D7F88030 		ldr	r3, [r7, #128]
 16574 1566 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 16575 156a 002B     		cmp	r3, #0
 16576 156c 02D0     		beq	.L627
 16577 156e 012B     		cmp	r3, #1
 16578 1570 1DD0     		beq	.L628
2170:..\src/command_processing.c ****                 case DRIVER_MC33887:
2171:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2172:..\src/command_processing.c ****                     break;
2173:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2174:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2175:..\src/command_processing.c ****                     break;
2176:..\src/command_processing.c ****                 default:
2177:..\src/command_processing.c ****                     break;
 16579              		.loc 1 2177 0
 16580 1572 39E0     		b	.L630
 16581              	.L627:
2171:..\src/command_processing.c ****                     break;
 16582              		.loc 1 2171 0
 16583 1574 7869     		ldr	r0, [r7, #20]
 16584 1576 FFF7FEFF 		bl	strlen
 16585 157a 0346     		mov	r3, r0
 16586 157c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 370


 16587 157e 7B69     		ldr	r3, [r7, #20]
 16588 1580 1344     		add	r3, r3, r2
 16589 1582 394A     		ldr	r2, .L684+40
 16590 1584 1446     		mov	r4, r2
 16591 1586 9E46     		mov	lr, r3
 16592 1588 04F1200C 		add	ip, r4, #32
 16593              	.L629:
 16594 158c 7546     		mov	r5, lr
 16595 158e 2646     		mov	r6, r4
 16596 1590 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16597 1592 2860     		str	r0, [r5]	@ unaligned
 16598 1594 6960     		str	r1, [r5, #4]	@ unaligned
 16599 1596 AA60     		str	r2, [r5, #8]	@ unaligned
 16600 1598 EB60     		str	r3, [r5, #12]	@ unaligned
 16601 159a 1034     		adds	r4, r4, #16
 16602 159c 0EF1100E 		add	lr, lr, #16
 16603 15a0 6445     		cmp	r4, ip
 16604 15a2 F3D1     		bne	.L629
 16605 15a4 7246     		mov	r2, lr
 16606 15a6 2346     		mov	r3, r4
 16607 15a8 1B88     		ldrh	r3, [r3]	@ unaligned
 16608 15aa 1380     		strh	r3, [r2]	@ unaligned
2172:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 16609              		.loc 1 2172 0
 16610 15ac 1CE0     		b	.L630
 16611              	.L628:
2174:..\src/command_processing.c ****                     break;
 16612              		.loc 1 2174 0
 16613 15ae 7869     		ldr	r0, [r7, #20]
 16614 15b0 FFF7FEFF 		bl	strlen
 16615 15b4 0346     		mov	r3, r0
 16616 15b6 1A46     		mov	r2, r3
 16617 15b8 7B69     		ldr	r3, [r7, #20]
 16618 15ba 1344     		add	r3, r3, r2
 16619 15bc 2B4A     		ldr	r2, .L684+44
 16620 15be 1446     		mov	r4, r2
 16621 15c0 9E46     		mov	lr, r3
 16622 15c2 04F1200C 		add	ip, r4, #32
 16623              	.L631:
 16624 15c6 7546     		mov	r5, lr
 16625 15c8 2646     		mov	r6, r4
 16626 15ca 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16627 15cc 2860     		str	r0, [r5]	@ unaligned
 16628 15ce 6960     		str	r1, [r5, #4]	@ unaligned
 16629 15d0 AA60     		str	r2, [r5, #8]	@ unaligned
 16630 15d2 EB60     		str	r3, [r5, #12]	@ unaligned
 16631 15d4 1034     		adds	r4, r4, #16
 16632 15d6 0EF1100E 		add	lr, lr, #16
 16633 15da 6445     		cmp	r4, ip
 16634 15dc F3D1     		bne	.L631
 16635 15de 7346     		mov	r3, lr
 16636 15e0 2246     		mov	r2, r4
 16637 15e2 1068     		ldr	r0, [r2]	@ unaligned
 16638 15e4 1860     		str	r0, [r3]	@ unaligned
2175:..\src/command_processing.c ****                 default:
 16639              		.loc 1 2175 0
 16640 15e6 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 371


 16641              	.L630:
2178:..\src/command_processing.c ****             }
2179:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 16642              		.loc 1 2179 0
 16643 15e8 D7F88030 		ldr	r3, [r7, #128]
 16644 15ec 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 16645 15f0 1A46     		mov	r2, r3
 16646 15f2 07F11803 		add	r3, r7, #24
 16647 15f6 1E49     		ldr	r1, .L684+48
 16648 15f8 1846     		mov	r0, r3
 16649 15fa FFF7FEFF 		bl	sprintf
2180:..\src/command_processing.c ****             strcat(info_string, str);
 16650              		.loc 1 2180 0
 16651 15fe 07F11803 		add	r3, r7, #24
 16652 1602 1946     		mov	r1, r3
 16653 1604 7869     		ldr	r0, [r7, #20]
 16654 1606 FFF7FEFF 		bl	strcat
2181:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 16655              		.loc 1 2181 0
 16656 160a D7F88030 		ldr	r3, [r7, #128]
 16657 160e 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 16658 1612 002B     		cmp	r3, #0
 16659 1614 30D0     		beq	.L632
2182:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 16660              		.loc 1 2182 0
 16661 1616 7869     		ldr	r0, [r7, #20]
 16662 1618 FFF7FEFF 		bl	strlen
 16663 161c 0346     		mov	r3, r0
 16664 161e 1A46     		mov	r2, r3
 16665 1620 7B69     		ldr	r3, [r7, #20]
 16666 1622 1344     		add	r3, r3, r2
 16667 1624 134A     		ldr	r2, .L684+52
 16668 1626 1D46     		mov	r5, r3
 16669 1628 1446     		mov	r4, r2
 16670 162a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16671 162c 2860     		str	r0, [r5]	@ unaligned
 16672 162e 6960     		str	r1, [r5, #4]	@ unaligned
 16673 1630 AA60     		str	r2, [r5, #8]	@ unaligned
 16674 1632 EB60     		str	r3, [r5, #12]	@ unaligned
 16675 1634 07CC     		ldmia	r4!, {r0, r1, r2}
 16676 1636 2861     		str	r0, [r5, #16]	@ unaligned
 16677 1638 6961     		str	r1, [r5, #20]	@ unaligned
 16678 163a AA61     		str	r2, [r5, #24]	@ unaligned
 16679 163c 33E0     		b	.L633
 16680              	.L685:
 16681 163e 00BF     		.align	2
 16682              	.L684:
 16683 1640 0C170000 		.word	.LC219
 16684 1644 44130000 		.word	.LC182
 16685 1648 10110000 		.word	.LC150
 16686 164c 10170000 		.word	.LC220
 16687 1650 40170000 		.word	.LC221
 16688 1654 5C170000 		.word	.LC222
 16689 1658 80170000 		.word	.LC223
 16690 165c 90170000 		.word	.LC224
 16691 1660 AC170000 		.word	.LC225
 16692 1664 C0170000 		.word	.LC226
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 372


 16693 1668 EC170000 		.word	.LC227
 16694 166c 10180000 		.word	.LC228
 16695 1670 34180000 		.word	.LC229
 16696 1674 54180000 		.word	.LC230
 16697              	.L632:
2183:..\src/command_processing.c ****             else
2184:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 16698              		.loc 1 2184 0
 16699 1678 7869     		ldr	r0, [r7, #20]
 16700 167a FFF7FEFF 		bl	strlen
 16701 167e 0346     		mov	r3, r0
 16702 1680 1A46     		mov	r2, r3
 16703 1682 7B69     		ldr	r3, [r7, #20]
 16704 1684 1344     		add	r3, r3, r2
 16705 1686 A24A     		ldr	r2, .L686
 16706 1688 1D46     		mov	r5, r3
 16707 168a 1446     		mov	r4, r2
 16708 168c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16709 168e 2860     		str	r0, [r5]	@ unaligned
 16710 1690 6960     		str	r1, [r5, #4]	@ unaligned
 16711 1692 AA60     		str	r2, [r5, #8]	@ unaligned
 16712 1694 EB60     		str	r3, [r5, #12]	@ unaligned
 16713 1696 03CC     		ldmia	r4!, {r0, r1}
 16714 1698 2861     		str	r0, [r5, #16]	@ unaligned
 16715 169a 6961     		str	r1, [r5, #20]	@ unaligned
 16716 169c 2388     		ldrh	r3, [r4]	@ unaligned
 16717 169e A278     		ldrb	r2, [r4, #2]
 16718 16a0 2B83     		strh	r3, [r5, #24]	@ unaligned
 16719 16a2 1346     		mov	r3, r2
 16720 16a4 AB76     		strb	r3, [r5, #26]
 16721              	.L633:
2185:..\src/command_processing.c **** #endif                
2186:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16722              		.loc 1 2186 0 discriminator 2
 16723 16a6 7869     		ldr	r0, [r7, #20]
 16724 16a8 FFF7FEFF 		bl	strlen
 16725 16ac 0346     		mov	r3, r0
 16726 16ae 1A46     		mov	r2, r3
 16727 16b0 7B69     		ldr	r3, [r7, #20]
 16728 16b2 1344     		add	r3, r3, r2
 16729 16b4 974A     		ldr	r2, .L686+4
 16730 16b6 1188     		ldrh	r1, [r2]	@ unaligned
 16731 16b8 9278     		ldrb	r2, [r2, #2]
 16732 16ba 1980     		strh	r1, [r3]	@ unaligned
 16733 16bc 9A70     		strb	r2, [r3, #2]
 16734              	.LBE18:
1916:..\src/command_processing.c ****             
 16735              		.loc 1 1916 0 discriminator 2
 16736 16be 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16737 16c2 0133     		adds	r3, r3, #1
 16738 16c4 87F89330 		strb	r3, [r7, #147]
 16739              	.L569:
1916:..\src/command_processing.c ****             
 16740              		.loc 1 1916 0 is_stmt 0 discriminator 1
 16741 16c8 D7F88830 		ldr	r3, [r7, #136]
 16742 16cc 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 16743 16d0 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 373


 16744 16d4 9A42     		cmp	r2, r3
 16745 16d6 7EF641AE 		bls	.L634
 16746              	.LBE17:
2187:..\src/command_processing.c ****         }
2188:..\src/command_processing.c ****       
2189:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16747              		.loc 1 2189 0 is_stmt 1
 16748 16da 7869     		ldr	r0, [r7, #20]
 16749 16dc FFF7FEFF 		bl	strlen
 16750 16e0 0346     		mov	r3, r0
 16751 16e2 1A46     		mov	r2, r3
 16752 16e4 7B69     		ldr	r3, [r7, #20]
 16753 16e6 1344     		add	r3, r3, r2
 16754 16e8 8B4A     		ldr	r2, .L686+8
 16755 16ea 1D46     		mov	r5, r3
 16756 16ec 1446     		mov	r4, r2
 16757 16ee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16758 16f0 2860     		str	r0, [r5]	@ unaligned
 16759 16f2 6960     		str	r1, [r5, #4]	@ unaligned
 16760 16f4 AA60     		str	r2, [r5, #8]	@ unaligned
 16761 16f6 EB60     		str	r3, [r5, #12]	@ unaligned
 16762 16f8 2068     		ldr	r0, [r4]	@ unaligned
 16763 16fa 2861     		str	r0, [r5, #16]	@ unaligned
2190:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16764              		.loc 1 2190 0
 16765 16fc D7F88830 		ldr	r3, [r7, #136]
 16766 1700 B3F8F031 		ldrh	r3, [r3, #496]
 16767 1704 1A46     		mov	r2, r3
 16768 1706 D7F88830 		ldr	r3, [r7, #136]
 16769 170a B3F8F231 		ldrh	r3, [r3, #498]
 16770 170e 07F11800 		add	r0, r7, #24
 16771 1712 8249     		ldr	r1, .L686+12
 16772 1714 FFF7FEFF 		bl	sprintf
2191:..\src/command_processing.c ****         strcat(info_string, str);
 16773              		.loc 1 2191 0
 16774 1718 07F11803 		add	r3, r7, #24
 16775 171c 1946     		mov	r1, r3
 16776 171e 7869     		ldr	r0, [r7, #20]
 16777 1720 FFF7FEFF 		bl	strcat
2192:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16778              		.loc 1 2192 0
 16779 1724 7869     		ldr	r0, [r7, #20]
 16780 1726 FFF7FEFF 		bl	strlen
 16781 172a 0346     		mov	r3, r0
 16782 172c 1A46     		mov	r2, r3
 16783 172e 7B69     		ldr	r3, [r7, #20]
 16784 1730 1344     		add	r3, r3, r2
 16785 1732 784A     		ldr	r2, .L686+4
 16786 1734 1188     		ldrh	r1, [r2]	@ unaligned
 16787 1736 9278     		ldrb	r2, [r2, #2]
 16788 1738 1980     		strh	r1, [r3]	@ unaligned
 16789 173a 9A70     		strb	r2, [r3, #2]
2193:..\src/command_processing.c **** 
2194:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16790              		.loc 1 2194 0
 16791 173c D7F88830 		ldr	r3, [r7, #136]
 16792 1740 D3F8F421 		ldr	r2, [r3, #500]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 374


 16793 1744 D7F88830 		ldr	r3, [r7, #136]
 16794 1748 D3F8F831 		ldr	r3, [r3, #504]
 16795 174c 07F11800 		add	r0, r7, #24
 16796 1750 7349     		ldr	r1, .L686+16
 16797 1752 FFF7FEFF 		bl	sprintf
2195:..\src/command_processing.c ****         strcat(info_string, str);
 16798              		.loc 1 2195 0
 16799 1756 07F11803 		add	r3, r7, #24
 16800 175a 1946     		mov	r1, r3
 16801 175c 7869     		ldr	r0, [r7, #20]
 16802 175e FFF7FEFF 		bl	strcat
2196:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16803              		.loc 1 2196 0
 16804 1762 7869     		ldr	r0, [r7, #20]
 16805 1764 FFF7FEFF 		bl	strlen
 16806 1768 0346     		mov	r3, r0
 16807 176a 1A46     		mov	r2, r3
 16808 176c 7B69     		ldr	r3, [r7, #20]
 16809 176e 1344     		add	r3, r3, r2
 16810 1770 684A     		ldr	r2, .L686+4
 16811 1772 1188     		ldrh	r1, [r2]	@ unaligned
 16812 1774 9278     		ldrb	r2, [r2, #2]
 16813 1776 1980     		strh	r1, [r3]	@ unaligned
 16814 1778 9A70     		strb	r2, [r3, #2]
2197:..\src/command_processing.c **** 
2198:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16815              		.loc 1 2198 0
 16816 177a D7F88830 		ldr	r3, [r7, #136]
 16817 177e 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 16818 1782 002B     		cmp	r3, #0
 16819 1784 13D0     		beq	.L635
2199:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16820              		.loc 1 2199 0
 16821 1786 7869     		ldr	r0, [r7, #20]
 16822 1788 FFF7FEFF 		bl	strlen
 16823 178c 0346     		mov	r3, r0
 16824 178e 1A46     		mov	r2, r3
 16825 1790 7B69     		ldr	r3, [r7, #20]
 16826 1792 1344     		add	r3, r3, r2
 16827 1794 634A     		ldr	r2, .L686+20
 16828 1796 1D46     		mov	r5, r3
 16829 1798 1446     		mov	r4, r2
 16830 179a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16831 179c 2860     		str	r0, [r5]	@ unaligned
 16832 179e 6960     		str	r1, [r5, #4]	@ unaligned
 16833 17a0 AA60     		str	r2, [r5, #8]	@ unaligned
 16834 17a2 EB60     		str	r3, [r5, #12]	@ unaligned
 16835 17a4 2068     		ldr	r0, [r4]	@ unaligned
 16836 17a6 2861     		str	r0, [r5, #16]	@ unaligned
 16837 17a8 2379     		ldrb	r3, [r4, #4]
 16838 17aa 2B75     		strb	r3, [r5, #20]
 16839 17ac 10E0     		b	.L636
 16840              	.L635:
2200:..\src/command_processing.c ****         else
2201:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 16841              		.loc 1 2201 0
 16842 17ae 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 375


 16843 17b0 FFF7FEFF 		bl	strlen
 16844 17b4 0346     		mov	r3, r0
 16845 17b6 1A46     		mov	r2, r3
 16846 17b8 7B69     		ldr	r3, [r7, #20]
 16847 17ba 1344     		add	r3, r3, r2
 16848 17bc 5A4A     		ldr	r2, .L686+24
 16849 17be 1D46     		mov	r5, r3
 16850 17c0 1446     		mov	r4, r2
 16851 17c2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16852 17c4 2860     		str	r0, [r5]	@ unaligned
 16853 17c6 6960     		str	r1, [r5, #4]	@ unaligned
 16854 17c8 AA60     		str	r2, [r5, #8]	@ unaligned
 16855 17ca EB60     		str	r3, [r5, #12]	@ unaligned
 16856 17cc 2068     		ldr	r0, [r4]	@ unaligned
 16857 17ce 2861     		str	r0, [r5, #16]	@ unaligned
 16858              	.L636:
2202:..\src/command_processing.c ****             
2203:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 16859              		.loc 1 2203 0
 16860 17d0 D7F88830 		ldr	r3, [r7, #136]
 16861 17d4 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 16862 17d8 002B     		cmp	r3, #0
 16863 17da 17D0     		beq	.L637
2204:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 16864              		.loc 1 2204 0
 16865 17dc 7869     		ldr	r0, [r7, #20]
 16866 17de FFF7FEFF 		bl	strlen
 16867 17e2 0346     		mov	r3, r0
 16868 17e4 1A46     		mov	r2, r3
 16869 17e6 7B69     		ldr	r3, [r7, #20]
 16870 17e8 1344     		add	r3, r3, r2
 16871 17ea 504A     		ldr	r2, .L686+28
 16872 17ec 1D46     		mov	r5, r3
 16873 17ee 1446     		mov	r4, r2
 16874 17f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16875 17f2 2860     		str	r0, [r5]	@ unaligned
 16876 17f4 6960     		str	r1, [r5, #4]	@ unaligned
 16877 17f6 AA60     		str	r2, [r5, #8]	@ unaligned
 16878 17f8 EB60     		str	r3, [r5, #12]	@ unaligned
 16879 17fa 03CC     		ldmia	r4!, {r0, r1}
 16880 17fc 2861     		str	r0, [r5, #16]	@ unaligned
 16881 17fe 6961     		str	r1, [r5, #20]	@ unaligned
 16882 1800 2388     		ldrh	r3, [r4]	@ unaligned
 16883 1802 A278     		ldrb	r2, [r4, #2]
 16884 1804 2B83     		strh	r3, [r5, #24]	@ unaligned
 16885 1806 1346     		mov	r3, r2
 16886 1808 AB76     		strb	r3, [r5, #26]
 16887 180a 13E0     		b	.L638
 16888              	.L637:
2205:..\src/command_processing.c ****         else
2206:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 16889              		.loc 1 2206 0
 16890 180c 7869     		ldr	r0, [r7, #20]
 16891 180e FFF7FEFF 		bl	strlen
 16892 1812 0346     		mov	r3, r0
 16893 1814 1A46     		mov	r2, r3
 16894 1816 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 376


 16895 1818 1344     		add	r3, r3, r2
 16896 181a 454A     		ldr	r2, .L686+32
 16897 181c 1D46     		mov	r5, r3
 16898 181e 1446     		mov	r4, r2
 16899 1820 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16900 1822 2860     		str	r0, [r5]	@ unaligned
 16901 1824 6960     		str	r1, [r5, #4]	@ unaligned
 16902 1826 AA60     		str	r2, [r5, #8]	@ unaligned
 16903 1828 EB60     		str	r3, [r5, #12]	@ unaligned
 16904 182a 03CC     		ldmia	r4!, {r0, r1}
 16905 182c 2861     		str	r0, [r5, #16]	@ unaligned
 16906 182e 6961     		str	r1, [r5, #20]	@ unaligned
 16907 1830 2388     		ldrh	r3, [r4]	@ unaligned
 16908 1832 2B83     		strh	r3, [r5, #24]	@ unaligned
 16909              	.L638:
2207:..\src/command_processing.c **** 
2208:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 16910              		.loc 1 2208 0
 16911 1834 D7F88830 		ldr	r3, [r7, #136]
 16912 1838 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 16913 183c 1A46     		mov	r2, r3
 16914 183e D7F88830 		ldr	r3, [r7, #136]
 16915 1842 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 16916 1846 07F11800 		add	r0, r7, #24
 16917 184a 3A49     		ldr	r1, .L686+36
 16918 184c FFF7FEFF 		bl	sprintf
2209:..\src/command_processing.c ****         strcat(info_string, str);
 16919              		.loc 1 2209 0
 16920 1850 07F11803 		add	r3, r7, #24
 16921 1854 1946     		mov	r1, r3
 16922 1856 7869     		ldr	r0, [r7, #20]
 16923 1858 FFF7FEFF 		bl	strcat
2210:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16924              		.loc 1 2210 0
 16925 185c 7869     		ldr	r0, [r7, #20]
 16926 185e FFF7FEFF 		bl	strlen
 16927 1862 0346     		mov	r3, r0
 16928 1864 1A46     		mov	r2, r3
 16929 1866 7B69     		ldr	r3, [r7, #20]
 16930 1868 1344     		add	r3, r3, r2
 16931 186a 2A4A     		ldr	r2, .L686+4
 16932 186c 1188     		ldrh	r1, [r2]	@ unaligned
 16933 186e 9278     		ldrb	r2, [r2, #2]
 16934 1870 1980     		strh	r1, [r3]	@ unaligned
 16935 1872 9A70     		strb	r2, [r3, #2]
2211:..\src/command_processing.c **** 
2212:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 16936              		.loc 1 2212 0
 16937 1874 D7F88830 		ldr	r3, [r7, #136]
 16938 1878 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 16939 187c 012B     		cmp	r3, #1
 16940 187e 40F08A80 		bne	.L639
2213:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 16941              		.loc 1 2213 0
 16942 1882 7869     		ldr	r0, [r7, #20]
 16943 1884 FFF7FEFF 		bl	strlen
 16944 1888 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 377


 16945 188a 1A46     		mov	r2, r3
 16946 188c 7B69     		ldr	r3, [r7, #20]
 16947 188e 1344     		add	r3, r3, r2
 16948 1890 294A     		ldr	r2, .L686+40
 16949 1892 1C46     		mov	r4, r3
 16950 1894 1546     		mov	r5, r2
 16951 1896 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16952 1898 2060     		str	r0, [r4]	@ unaligned
 16953 189a 6160     		str	r1, [r4, #4]	@ unaligned
 16954 189c A260     		str	r2, [r4, #8]	@ unaligned
 16955 189e E360     		str	r3, [r4, #12]	@ unaligned
 16956 18a0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16957 18a2 2061     		str	r0, [r4, #16]	@ unaligned
 16958 18a4 6161     		str	r1, [r4, #20]	@ unaligned
 16959 18a6 A261     		str	r2, [r4, #24]	@ unaligned
 16960 18a8 E361     		str	r3, [r4, #28]	@ unaligned
2214:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 16961              		.loc 1 2214 0
 16962 18aa 0023     		movs	r3, #0
 16963 18ac C7F89430 		str	r3, [r7, #148]
 16964 18b0 25E0     		b	.L640
 16965              	.L641:
2215:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16966              		.loc 1 2215 0 discriminator 3
 16967 18b2 D7F89430 		ldr	r3, [r7, #148]
 16968 18b6 591C     		adds	r1, r3, #1
 16969 18b8 204A     		ldr	r2, .L686+44
 16970 18ba D7F89430 		ldr	r3, [r7, #148]
 16971 18be 0233     		adds	r3, r3, #2
 16972 18c0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16973 18c4 07F11800 		add	r0, r7, #24
 16974 18c8 0A46     		mov	r2, r1
 16975 18ca 1D49     		ldr	r1, .L686+48
 16976 18cc FFF7FEFF 		bl	sprintf
2216:..\src/command_processing.c ****                 strcat(info_string, str);
 16977              		.loc 1 2216 0 discriminator 3
 16978 18d0 07F11803 		add	r3, r7, #24
 16979 18d4 1946     		mov	r1, r3
 16980 18d6 7869     		ldr	r0, [r7, #20]
 16981 18d8 FFF7FEFF 		bl	strcat
2217:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16982              		.loc 1 2217 0 discriminator 3
 16983 18dc 7869     		ldr	r0, [r7, #20]
 16984 18de FFF7FEFF 		bl	strlen
 16985 18e2 0346     		mov	r3, r0
 16986 18e4 1A46     		mov	r2, r3
 16987 18e6 7B69     		ldr	r3, [r7, #20]
 16988 18e8 1344     		add	r3, r3, r2
 16989 18ea 0A4A     		ldr	r2, .L686+4
 16990 18ec 1188     		ldrh	r1, [r2]	@ unaligned
 16991 18ee 9278     		ldrb	r2, [r2, #2]
 16992 18f0 1980     		strh	r1, [r3]	@ unaligned
 16993 18f2 9A70     		strb	r2, [r3, #2]
2214:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16994              		.loc 1 2214 0 discriminator 3
 16995 18f4 D7F89430 		ldr	r3, [r7, #148]
 16996 18f8 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 378


 16997 18fa C7F89430 		str	r3, [r7, #148]
 16998              	.L640:
2214:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16999              		.loc 1 2214 0 is_stmt 0 discriminator 1
 17000 18fe D7F89430 		ldr	r3, [r7, #148]
 17001 1902 052B     		cmp	r3, #5
 17002 1904 D5DD     		ble	.L641
2218:..\src/command_processing.c ****             }
2219:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 17003              		.loc 1 2219 0 is_stmt 1
 17004 1906 0023     		movs	r3, #0
 17005 1908 C7F89430 		str	r3, [r7, #148]
 17006 190c 3FE0     		b	.L642
 17007              	.L687:
 17008 190e 00BF     		.align	2
 17009              	.L686:
 17010 1910 70180000 		.word	.LC231
 17011 1914 10110000 		.word	.LC150
 17012 1918 8C180000 		.word	.LC232
 17013 191c A0180000 		.word	.LC233
 17014 1920 C4180000 		.word	.LC234
 17015 1924 E8180000 		.word	.LC235
 17016 1928 00190000 		.word	.LC236
 17017 192c 14190000 		.word	.LC237
 17018 1930 30190000 		.word	.LC238
 17019 1934 4C190000 		.word	.LC239
 17020 1938 64190000 		.word	.LC240
 17021 193c 00000000 		.word	g_adc_meas
 17022 1940 84190000 		.word	.LC241
 17023              	.L643:
2220:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17024              		.loc 1 2220 0 discriminator 3
 17025 1944 D7F89430 		ldr	r3, [r7, #148]
 17026 1948 591C     		adds	r1, r3, #1
 17027 194a BD4A     		ldr	r2, .L688
 17028 194c D7F89430 		ldr	r3, [r7, #148]
 17029 1950 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17030 1954 07F11800 		add	r0, r7, #24
 17031 1958 0A46     		mov	r2, r1
 17032 195a BA49     		ldr	r1, .L688+4
 17033 195c FFF7FEFF 		bl	sprintf
2221:..\src/command_processing.c ****                 strcat(info_string, str);
 17034              		.loc 1 2221 0 discriminator 3
 17035 1960 07F11803 		add	r3, r7, #24
 17036 1964 1946     		mov	r1, r3
 17037 1966 7869     		ldr	r0, [r7, #20]
 17038 1968 FFF7FEFF 		bl	strcat
2222:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17039              		.loc 1 2222 0 discriminator 3
 17040 196c 7869     		ldr	r0, [r7, #20]
 17041 196e FFF7FEFF 		bl	strlen
 17042 1972 0346     		mov	r3, r0
 17043 1974 1A46     		mov	r2, r3
 17044 1976 7B69     		ldr	r3, [r7, #20]
 17045 1978 1344     		add	r3, r3, r2
 17046 197a B34A     		ldr	r2, .L688+8
 17047 197c 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 379


 17048 197e 9278     		ldrb	r2, [r2, #2]
 17049 1980 1980     		strh	r1, [r3]	@ unaligned
 17050 1982 9A70     		strb	r2, [r3, #2]
2219:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17051              		.loc 1 2219 0 discriminator 3
 17052 1984 D7F89430 		ldr	r3, [r7, #148]
 17053 1988 0133     		adds	r3, r3, #1
 17054 198a C7F89430 		str	r3, [r7, #148]
 17055              	.L642:
2219:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17056              		.loc 1 2219 0 is_stmt 0 discriminator 1
 17057 198e D7F89430 		ldr	r3, [r7, #148]
 17058 1992 012B     		cmp	r3, #1
 17059 1994 D6DD     		ble	.L643
 17060              	.L639:
2223:..\src/command_processing.c ****             }
2224:..\src/command_processing.c ****         }
2225:..\src/command_processing.c **** 
2226:..\src/command_processing.c **** #ifdef GENERIC_FW
2227:..\src/command_processing.c ****     
2228:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17061              		.loc 1 2228 0 is_stmt 1
 17062 1996 7869     		ldr	r0, [r7, #20]
 17063 1998 FFF7FEFF 		bl	strlen
 17064 199c 0346     		mov	r3, r0
 17065 199e 1A46     		mov	r2, r3
 17066 19a0 7B69     		ldr	r3, [r7, #20]
 17067 19a2 1344     		add	r3, r3, r2
 17068 19a4 A84A     		ldr	r2, .L688+8
 17069 19a6 1188     		ldrh	r1, [r2]	@ unaligned
 17070 19a8 9278     		ldrb	r2, [r2, #2]
 17071 19aa 1980     		strh	r1, [r3]	@ unaligned
 17072 19ac 9A70     		strb	r2, [r3, #2]
2229:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
 17073              		.loc 1 2229 0
 17074 19ae 7869     		ldr	r0, [r7, #20]
 17075 19b0 FFF7FEFF 		bl	strlen
 17076 19b4 0346     		mov	r3, r0
 17077 19b6 1A46     		mov	r2, r3
 17078 19b8 7B69     		ldr	r3, [r7, #20]
 17079 19ba 1344     		add	r3, r3, r2
 17080 19bc A34A     		ldr	r2, .L688+12
 17081 19be 1D46     		mov	r5, r3
 17082 19c0 1446     		mov	r4, r2
 17083 19c2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17084 19c4 2860     		str	r0, [r5]	@ unaligned
 17085 19c6 6960     		str	r1, [r5, #4]	@ unaligned
 17086 19c8 AA60     		str	r2, [r5, #8]	@ unaligned
 17087 19ca EB60     		str	r3, [r5, #12]	@ unaligned
 17088 19cc 03CC     		ldmia	r4!, {r0, r1}
 17089 19ce 2861     		str	r0, [r5, #16]	@ unaligned
 17090 19d0 6961     		str	r1, [r5, #20]	@ unaligned
 17091 19d2 2378     		ldrb	r3, [r4]
 17092 19d4 2B76     		strb	r3, [r5, #24]
2230:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
 17093              		.loc 1 2230 0
 17094 19d6 9E4B     		ldr	r3, .L688+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 380


 17095 19d8 B3F8B032 		ldrh	r3, [r3, #688]
 17096 19dc 1A46     		mov	r2, r3
 17097 19de 07F11803 		add	r3, r7, #24
 17098 19e2 9C49     		ldr	r1, .L688+20
 17099 19e4 1846     		mov	r0, r3
 17100 19e6 FFF7FEFF 		bl	sprintf
2231:..\src/command_processing.c ****         strcat(info_string, str);
 17101              		.loc 1 2231 0
 17102 19ea 07F11803 		add	r3, r7, #24
 17103 19ee 1946     		mov	r1, r3
 17104 19f0 7869     		ldr	r0, [r7, #20]
 17105 19f2 FFF7FEFF 		bl	strcat
2232:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17106              		.loc 1 2232 0
 17107 19f6 7869     		ldr	r0, [r7, #20]
 17108 19f8 FFF7FEFF 		bl	strlen
 17109 19fc 0346     		mov	r3, r0
 17110 19fe 1A46     		mov	r2, r3
 17111 1a00 7B69     		ldr	r3, [r7, #20]
 17112 1a02 1344     		add	r3, r3, r2
 17113 1a04 904A     		ldr	r2, .L688+8
 17114 1a06 1188     		ldrh	r1, [r2]	@ unaligned
 17115 1a08 9278     		ldrb	r2, [r2, #2]
 17116 1a0a 1980     		strh	r1, [r3]	@ unaligned
 17117 1a0c 9A70     		strb	r2, [r3, #2]
2233:..\src/command_processing.c **** 
2234:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
 17118              		.loc 1 2234 0
 17119 1a0e 904B     		ldr	r3, .L688+16
 17120 1a10 B3F9B232 		ldrsh	r3, [r3, #690]
 17121 1a14 1A46     		mov	r2, r3
 17122 1a16 07F11803 		add	r3, r7, #24
 17123 1a1a 8F49     		ldr	r1, .L688+24
 17124 1a1c 1846     		mov	r0, r3
 17125 1a1e FFF7FEFF 		bl	sprintf
2235:..\src/command_processing.c ****         strcat(info_string, str);
 17126              		.loc 1 2235 0
 17127 1a22 07F11803 		add	r3, r7, #24
 17128 1a26 1946     		mov	r1, r3
 17129 1a28 7869     		ldr	r0, [r7, #20]
 17130 1a2a FFF7FEFF 		bl	strcat
2236:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17131              		.loc 1 2236 0
 17132 1a2e 7869     		ldr	r0, [r7, #20]
 17133 1a30 FFF7FEFF 		bl	strlen
 17134 1a34 0346     		mov	r3, r0
 17135 1a36 1A46     		mov	r2, r3
 17136 1a38 7B69     		ldr	r3, [r7, #20]
 17137 1a3a 1344     		add	r3, r3, r2
 17138 1a3c 824A     		ldr	r2, .L688+8
 17139 1a3e 1188     		ldrh	r1, [r2]	@ unaligned
 17140 1a40 9278     		ldrb	r2, [r2, #2]
 17141 1a42 1980     		strh	r1, [r3]	@ unaligned
 17142 1a44 9A70     		strb	r2, [r3, #2]
2237:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
 17143              		.loc 1 2237 0
 17144 1a46 824B     		ldr	r3, .L688+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 381


 17145 1a48 B3F8B432 		ldrh	r3, [r3, #692]
 17146 1a4c 1A46     		mov	r2, r3
 17147 1a4e 804B     		ldr	r3, .L688+16
 17148 1a50 B3F8B632 		ldrh	r3, [r3, #694]
 17149 1a54 07F11800 		add	r0, r7, #24
 17150 1a58 8049     		ldr	r1, .L688+28
 17151 1a5a FFF7FEFF 		bl	sprintf
2238:..\src/command_processing.c ****         strcat(info_string, str);
 17152              		.loc 1 2238 0
 17153 1a5e 07F11803 		add	r3, r7, #24
 17154 1a62 1946     		mov	r1, r3
 17155 1a64 7869     		ldr	r0, [r7, #20]
 17156 1a66 FFF7FEFF 		bl	strcat
2239:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17157              		.loc 1 2239 0
 17158 1a6a 7869     		ldr	r0, [r7, #20]
 17159 1a6c FFF7FEFF 		bl	strlen
 17160 1a70 0346     		mov	r3, r0
 17161 1a72 1A46     		mov	r2, r3
 17162 1a74 7B69     		ldr	r3, [r7, #20]
 17163 1a76 1344     		add	r3, r3, r2
 17164 1a78 734A     		ldr	r2, .L688+8
 17165 1a7a 1188     		ldrh	r1, [r2]	@ unaligned
 17166 1a7c 9278     		ldrb	r2, [r2, #2]
 17167 1a7e 1980     		strh	r1, [r3]	@ unaligned
 17168 1a80 9A70     		strb	r2, [r3, #2]
2240:..\src/command_processing.c **** 
2241:..\src/command_processing.c **** #endif
2242:..\src/command_processing.c ****         
2243:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 17169              		.loc 1 2243 0
 17170 1a82 D7F88830 		ldr	r3, [r7, #136]
 17171 1a86 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17172 1a8a 002B     		cmp	r3, #0
 17173 1a8c 63D0     		beq	.L644
2244:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17174              		.loc 1 2244 0
 17175 1a8e D7F88830 		ldr	r3, [r7, #136]
 17176 1a92 D3F8A422 		ldr	r2, [r3, #676]
 17177 1a96 07F11803 		add	r3, r7, #24
 17178 1a9a 7149     		ldr	r1, .L688+32
 17179 1a9c 1846     		mov	r0, r3
 17180 1a9e FFF7FEFF 		bl	sprintf
2245:..\src/command_processing.c ****             strcat(info_string, str);
 17181              		.loc 1 2245 0
 17182 1aa2 07F11803 		add	r3, r7, #24
 17183 1aa6 1946     		mov	r1, r3
 17184 1aa8 7869     		ldr	r0, [r7, #20]
 17185 1aaa FFF7FEFF 		bl	strcat
2246:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17186              		.loc 1 2246 0
 17187 1aae 7869     		ldr	r0, [r7, #20]
 17188 1ab0 FFF7FEFF 		bl	strlen
 17189 1ab4 0346     		mov	r3, r0
 17190 1ab6 1A46     		mov	r2, r3
 17191 1ab8 7B69     		ldr	r3, [r7, #20]
 17192 1aba 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 382


 17193 1abc 624A     		ldr	r2, .L688+8
 17194 1abe 1188     		ldrh	r1, [r2]	@ unaligned
 17195 1ac0 9278     		ldrb	r2, [r2, #2]
 17196 1ac2 1980     		strh	r1, [r3]	@ unaligned
 17197 1ac4 9A70     		strb	r2, [r3, #2]
2247:..\src/command_processing.c ****             
2248:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17198              		.loc 1 2248 0
 17199 1ac6 D7F88830 		ldr	r3, [r7, #136]
 17200 1aca D3F8A822 		ldr	r2, [r3, #680]
 17201 1ace 07F11803 		add	r3, r7, #24
 17202 1ad2 6449     		ldr	r1, .L688+36
 17203 1ad4 1846     		mov	r0, r3
 17204 1ad6 FFF7FEFF 		bl	sprintf
2249:..\src/command_processing.c ****             strcat(info_string, str);
 17205              		.loc 1 2249 0
 17206 1ada 07F11803 		add	r3, r7, #24
 17207 1ade 1946     		mov	r1, r3
 17208 1ae0 7869     		ldr	r0, [r7, #20]
 17209 1ae2 FFF7FEFF 		bl	strcat
2250:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17210              		.loc 1 2250 0
 17211 1ae6 7869     		ldr	r0, [r7, #20]
 17212 1ae8 FFF7FEFF 		bl	strlen
 17213 1aec 0346     		mov	r3, r0
 17214 1aee 1A46     		mov	r2, r3
 17215 1af0 7B69     		ldr	r3, [r7, #20]
 17216 1af2 1344     		add	r3, r3, r2
 17217 1af4 544A     		ldr	r2, .L688+8
 17218 1af6 1188     		ldrh	r1, [r2]	@ unaligned
 17219 1af8 9278     		ldrb	r2, [r2, #2]
 17220 1afa 1980     		strh	r1, [r3]	@ unaligned
 17221 1afc 9A70     		strb	r2, [r3, #2]
2251:..\src/command_processing.c ****             
2252:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 17222              		.loc 1 2252 0
 17223 1afe D7F88830 		ldr	r3, [r7, #136]
 17224 1b02 D3F8A022 		ldr	r2, [r3, #672]
 17225 1b06 D7F88830 		ldr	r3, [r7, #136]
 17226 1b0a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17227 1b0e 1846     		mov	r0, r3
 17228 1b10 D7F88810 		ldr	r1, [r7, #136]
 17229 1b14 0346     		mov	r3, r0
 17230 1b16 5B00     		lsls	r3, r3, #1
 17231 1b18 0344     		add	r3, r3, r0
 17232 1b1a 1B01     		lsls	r3, r3, #4
 17233 1b1c 0B44     		add	r3, r3, r1
 17234 1b1e 03F29513 		addw	r3, r3, #405
 17235 1b22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17236 1b24 1A41     		asrs	r2, r2, r3
 17237 1b26 07F11803 		add	r3, r7, #24
 17238 1b2a 4F49     		ldr	r1, .L688+40
 17239 1b2c 1846     		mov	r0, r3
 17240 1b2e FFF7FEFF 		bl	sprintf
2253:..\src/command_processing.c ****             strcat(info_string, str);
 17241              		.loc 1 2253 0
 17242 1b32 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 383


 17243 1b36 1946     		mov	r1, r3
 17244 1b38 7869     		ldr	r0, [r7, #20]
 17245 1b3a FFF7FEFF 		bl	strcat
2254:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 17246              		.loc 1 2254 0
 17247 1b3e 7869     		ldr	r0, [r7, #20]
 17248 1b40 FFF7FEFF 		bl	strlen
 17249 1b44 0346     		mov	r3, r0
 17250 1b46 1A46     		mov	r2, r3
 17251 1b48 7B69     		ldr	r3, [r7, #20]
 17252 1b4a 1344     		add	r3, r3, r2
 17253 1b4c 3E4A     		ldr	r2, .L688+8
 17254 1b4e 1188     		ldrh	r1, [r2]	@ unaligned
 17255 1b50 9278     		ldrb	r2, [r2, #2]
 17256 1b52 1980     		strh	r1, [r3]	@ unaligned
 17257 1b54 9A70     		strb	r2, [r3, #2]
 17258              	.L644:
2255:..\src/command_processing.c ****         }
2256:..\src/command_processing.c **** 
2257:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17259              		.loc 1 2257 0
 17260 1b56 D7F88830 		ldr	r3, [r7, #136]
 17261 1b5a 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17262 1b5e 002B     		cmp	r3, #0
 17263 1b60 00F0D281 		beq	.L645
2258:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17264              		.loc 1 2258 0
 17265 1b64 414B     		ldr	r3, .L688+44
 17266 1b66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17267 1b68 1A46     		mov	r2, r3
 17268 1b6a 07F11803 		add	r3, r7, #24
 17269 1b6e 4049     		ldr	r1, .L688+48
 17270 1b70 1846     		mov	r0, r3
 17271 1b72 FFF7FEFF 		bl	sprintf
2259:..\src/command_processing.c ****             strcat(info_string, str);
 17272              		.loc 1 2259 0
 17273 1b76 07F11803 		add	r3, r7, #24
 17274 1b7a 1946     		mov	r1, r3
 17275 1b7c 7869     		ldr	r0, [r7, #20]
 17276 1b7e FFF7FEFF 		bl	strcat
2260:..\src/command_processing.c ****             
2261:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17277              		.loc 1 2261 0
 17278 1b82 7869     		ldr	r0, [r7, #20]
 17279 1b84 FFF7FEFF 		bl	strlen
 17280 1b88 0346     		mov	r3, r0
 17281 1b8a 1A46     		mov	r2, r3
 17282 1b8c 7B69     		ldr	r3, [r7, #20]
 17283 1b8e 1344     		add	r3, r3, r2
 17284 1b90 2D4A     		ldr	r2, .L688+8
 17285 1b92 1188     		ldrh	r1, [r2]	@ unaligned
 17286 1b94 9278     		ldrb	r2, [r2, #2]
 17287 1b96 1980     		strh	r1, [r3]	@ unaligned
 17288 1b98 9A70     		strb	r2, [r3, #2]
2262:..\src/command_processing.c ****             
2263:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17289              		.loc 1 2263 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 384


 17290 1b9a 7869     		ldr	r0, [r7, #20]
 17291 1b9c FFF7FEFF 		bl	strlen
 17292 1ba0 0346     		mov	r3, r0
 17293 1ba2 1A46     		mov	r2, r3
 17294 1ba4 7B69     		ldr	r3, [r7, #20]
 17295 1ba6 1344     		add	r3, r3, r2
 17296 1ba8 324A     		ldr	r2, .L688+52
 17297 1baa 1D46     		mov	r5, r3
 17298 1bac 1446     		mov	r4, r2
 17299 1bae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17300 1bb0 2860     		str	r0, [r5]	@ unaligned
 17301 1bb2 6960     		str	r1, [r5, #4]	@ unaligned
 17302 1bb4 AA60     		str	r2, [r5, #8]	@ unaligned
 17303 1bb6 EB60     		str	r3, [r5, #12]	@ unaligned
 17304 1bb8 2068     		ldr	r0, [r4]	@ unaligned
 17305 1bba 2861     		str	r0, [r5, #16]	@ unaligned
 17306 1bbc 2379     		ldrb	r3, [r4, #4]
 17307 1bbe 2B75     		strb	r3, [r5, #20]
2264:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17308              		.loc 1 2264 0
 17309 1bc0 0023     		movs	r3, #0
 17310 1bc2 C7F89430 		str	r3, [r7, #148]
 17311 1bc6 88E1     		b	.L646
 17312              	.L657:
2265:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17313              		.loc 1 2265 0
 17314 1bc8 2B4A     		ldr	r2, .L688+56
 17315 1bca D7F89430 		ldr	r3, [r7, #148]
 17316 1bce 1344     		add	r3, r3, r2
 17317 1bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17318 1bd2 07F11800 		add	r0, r7, #24
 17319 1bd6 D7F89420 		ldr	r2, [r7, #148]
 17320 1bda 2849     		ldr	r1, .L688+60
 17321 1bdc FFF7FEFF 		bl	sprintf
2266:..\src/command_processing.c ****                 strcat(info_string, str);
 17322              		.loc 1 2266 0
 17323 1be0 07F11803 		add	r3, r7, #24
 17324 1be4 1946     		mov	r1, r3
 17325 1be6 7869     		ldr	r0, [r7, #20]
 17326 1be8 FFF7FEFF 		bl	strcat
2267:..\src/command_processing.c ****                 
2268:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17327              		.loc 1 2268 0
 17328 1bec 07F11803 		add	r3, r7, #24
 17329 1bf0 234A     		ldr	r2, .L688+64
 17330 1bf2 1C46     		mov	r4, r3
 17331 1bf4 1546     		mov	r5, r2
 17332 1bf6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17333 1bf8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17334 1bfa 2B68     		ldr	r3, [r5]
 17335 1bfc 2380     		strh	r3, [r4]	@ movhi
2269:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17336              		.loc 1 2269 0
 17337 1bfe 1E4A     		ldr	r2, .L688+56
 17338 1c00 D7F89430 		ldr	r3, [r7, #148]
 17339 1c04 1344     		add	r3, r3, r2
 17340 1c06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 385


 17341 1c08 1946     		mov	r1, r3
 17342 1c0a D7F88820 		ldr	r2, [r7, #136]
 17343 1c0e 0B46     		mov	r3, r1
 17344 1c10 9B00     		lsls	r3, r3, #2
 17345 1c12 0B44     		add	r3, r3, r1
 17346 1c14 1344     		add	r3, r3, r2
 17347 1c16 03F20223 		addw	r3, r3, #514
 17348 1c1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17349 1c1c 002B     		cmp	r3, #0
 17350 1c1e 33D0     		beq	.L647
2270:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17351              		.loc 1 2270 0
 17352 1c20 07F11803 		add	r3, r7, #24
 17353 1c24 1846     		mov	r0, r3
 17354 1c26 FFF7FEFF 		bl	strlen
 17355 1c2a 0346     		mov	r3, r0
 17356 1c2c 1A46     		mov	r2, r3
 17357 1c2e 07F11803 		add	r3, r7, #24
 17358 1c32 1344     		add	r3, r3, r2
 17359 1c34 134A     		ldr	r2, .L688+68
 17360 1c36 1068     		ldr	r0, [r2]	@ unaligned
 17361 1c38 1860     		str	r0, [r3]	@ unaligned
 17362 1c3a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17363 1c3c 9A80     		strh	r2, [r3, #4]	@ unaligned
 17364 1c3e 32E0     		b	.L648
 17365              	.L689:
 17366              		.align	2
 17367              	.L688:
 17368 1c40 00000000 		.word	g_adc_meas
 17369 1c44 94190000 		.word	.LC242
 17370 1c48 10110000 		.word	.LC150
 17371 1c4c A8190000 		.word	.LC243
 17372 1c50 00000000 		.word	c_mem
 17373 1c54 C4190000 		.word	.LC244
 17374 1c58 D8190000 		.word	.LC245
 17375 1c5c F0190000 		.word	.LC246
 17376 1c60 101A0000 		.word	.LC247
 17377 1c64 2C1A0000 		.word	.LC248
 17378 1c68 541A0000 		.word	.LC249
 17379 1c6c 00000000 		.word	N_IMU_Connected
 17380 1c70 681A0000 		.word	.LC250
 17381 1c74 7C1A0000 		.word	.LC251
 17382 1c78 00000000 		.word	IMU_connected
 17383 1c7c 941A0000 		.word	.LC252
 17384 1c80 A81A0000 		.word	.LC253
 17385 1c84 D0120000 		.word	.LC173
 17386              	.L647:
2271:..\src/command_processing.c ****                 else
2272:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17387              		.loc 1 2272 0
 17388 1c88 07F11803 		add	r3, r7, #24
 17389 1c8c 1846     		mov	r0, r3
 17390 1c8e FFF7FEFF 		bl	strlen
 17391 1c92 0346     		mov	r3, r0
 17392 1c94 1A46     		mov	r2, r3
 17393 1c96 07F11803 		add	r3, r7, #24
 17394 1c9a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 386


 17395 1c9c BD4A     		ldr	r2, .L690
 17396 1c9e 1068     		ldr	r0, [r2]	@ unaligned
 17397 1ca0 1860     		str	r0, [r3]	@ unaligned
 17398 1ca2 1279     		ldrb	r2, [r2, #4]
 17399 1ca4 1A71     		strb	r2, [r3, #4]
 17400              	.L648:
2273:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17401              		.loc 1 2273 0
 17402 1ca6 07F11803 		add	r3, r7, #24
 17403 1caa 1846     		mov	r0, r3
 17404 1cac FFF7FEFF 		bl	strlen
 17405 1cb0 0346     		mov	r3, r0
 17406 1cb2 1A46     		mov	r2, r3
 17407 1cb4 07F11803 		add	r3, r7, #24
 17408 1cb8 1344     		add	r3, r3, r2
 17409 1cba B74A     		ldr	r2, .L690+4
 17410 1cbc 1C46     		mov	r4, r3
 17411 1cbe 1346     		mov	r3, r2
 17412 1cc0 07CB     		ldmia	r3!, {r0, r1, r2}
 17413 1cc2 2060     		str	r0, [r4]	@ unaligned
 17414 1cc4 6160     		str	r1, [r4, #4]	@ unaligned
 17415 1cc6 A260     		str	r2, [r4, #8]	@ unaligned
 17416 1cc8 1B88     		ldrh	r3, [r3]	@ unaligned
 17417 1cca A381     		strh	r3, [r4, #12]	@ unaligned
2274:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17418              		.loc 1 2274 0
 17419 1ccc B34A     		ldr	r2, .L690+8
 17420 1cce D7F89430 		ldr	r3, [r7, #148]
 17421 1cd2 1344     		add	r3, r3, r2
 17422 1cd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17423 1cd6 1946     		mov	r1, r3
 17424 1cd8 D7F88820 		ldr	r2, [r7, #136]
 17425 1cdc 0B46     		mov	r3, r1
 17426 1cde 9B00     		lsls	r3, r3, #2
 17427 1ce0 0B44     		add	r3, r3, r1
 17428 1ce2 1344     		add	r3, r3, r2
 17429 1ce4 03F20323 		addw	r3, r3, #515
 17430 1ce8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17431 1cea 002B     		cmp	r3, #0
 17432 1cec 0FD0     		beq	.L649
2275:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17433              		.loc 1 2275 0
 17434 1cee 07F11803 		add	r3, r7, #24
 17435 1cf2 1846     		mov	r0, r3
 17436 1cf4 FFF7FEFF 		bl	strlen
 17437 1cf8 0346     		mov	r3, r0
 17438 1cfa 1A46     		mov	r2, r3
 17439 1cfc 07F11803 		add	r3, r7, #24
 17440 1d00 1344     		add	r3, r3, r2
 17441 1d02 A74A     		ldr	r2, .L690+12
 17442 1d04 1068     		ldr	r0, [r2]	@ unaligned
 17443 1d06 1860     		str	r0, [r3]	@ unaligned
 17444 1d08 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17445 1d0a 9A80     		strh	r2, [r3, #4]	@ unaligned
 17446 1d0c 0EE0     		b	.L650
 17447              	.L649:
2276:..\src/command_processing.c ****                 else
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 387


2277:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17448              		.loc 1 2277 0
 17449 1d0e 07F11803 		add	r3, r7, #24
 17450 1d12 1846     		mov	r0, r3
 17451 1d14 FFF7FEFF 		bl	strlen
 17452 1d18 0346     		mov	r3, r0
 17453 1d1a 1A46     		mov	r2, r3
 17454 1d1c 07F11803 		add	r3, r7, #24
 17455 1d20 1344     		add	r3, r3, r2
 17456 1d22 9C4A     		ldr	r2, .L690
 17457 1d24 1068     		ldr	r0, [r2]	@ unaligned
 17458 1d26 1860     		str	r0, [r3]	@ unaligned
 17459 1d28 1279     		ldrb	r2, [r2, #4]
 17460 1d2a 1A71     		strb	r2, [r3, #4]
 17461              	.L650:
2278:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17462              		.loc 1 2278 0
 17463 1d2c 07F11803 		add	r3, r7, #24
 17464 1d30 1846     		mov	r0, r3
 17465 1d32 FFF7FEFF 		bl	strlen
 17466 1d36 0346     		mov	r3, r0
 17467 1d38 1A46     		mov	r2, r3
 17468 1d3a 07F11803 		add	r3, r7, #24
 17469 1d3e 1344     		add	r3, r3, r2
 17470 1d40 984A     		ldr	r2, .L690+16
 17471 1d42 1D46     		mov	r5, r3
 17472 1d44 1446     		mov	r4, r2
 17473 1d46 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17474 1d48 2860     		str	r0, [r5]	@ unaligned
 17475 1d4a 6960     		str	r1, [r5, #4]	@ unaligned
 17476 1d4c AA60     		str	r2, [r5, #8]	@ unaligned
 17477 1d4e EB60     		str	r3, [r5, #12]	@ unaligned
 17478 1d50 2378     		ldrb	r3, [r4]
 17479 1d52 2B74     		strb	r3, [r5, #16]
2279:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17480              		.loc 1 2279 0
 17481 1d54 914A     		ldr	r2, .L690+8
 17482 1d56 D7F89430 		ldr	r3, [r7, #148]
 17483 1d5a 1344     		add	r3, r3, r2
 17484 1d5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17485 1d5e 1946     		mov	r1, r3
 17486 1d60 D7F88820 		ldr	r2, [r7, #136]
 17487 1d64 0B46     		mov	r3, r1
 17488 1d66 9B00     		lsls	r3, r3, #2
 17489 1d68 0B44     		add	r3, r3, r1
 17490 1d6a 1344     		add	r3, r3, r2
 17491 1d6c 03F50173 		add	r3, r3, #516
 17492 1d70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17493 1d72 002B     		cmp	r3, #0
 17494 1d74 0FD0     		beq	.L651
2280:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17495              		.loc 1 2280 0
 17496 1d76 07F11803 		add	r3, r7, #24
 17497 1d7a 1846     		mov	r0, r3
 17498 1d7c FFF7FEFF 		bl	strlen
 17499 1d80 0346     		mov	r3, r0
 17500 1d82 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 388


 17501 1d84 07F11803 		add	r3, r7, #24
 17502 1d88 1344     		add	r3, r3, r2
 17503 1d8a 854A     		ldr	r2, .L690+12
 17504 1d8c 1068     		ldr	r0, [r2]	@ unaligned
 17505 1d8e 1860     		str	r0, [r3]	@ unaligned
 17506 1d90 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17507 1d92 9A80     		strh	r2, [r3, #4]	@ unaligned
 17508 1d94 0EE0     		b	.L652
 17509              	.L651:
2281:..\src/command_processing.c ****                 else
2282:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17510              		.loc 1 2282 0
 17511 1d96 07F11803 		add	r3, r7, #24
 17512 1d9a 1846     		mov	r0, r3
 17513 1d9c FFF7FEFF 		bl	strlen
 17514 1da0 0346     		mov	r3, r0
 17515 1da2 1A46     		mov	r2, r3
 17516 1da4 07F11803 		add	r3, r7, #24
 17517 1da8 1344     		add	r3, r3, r2
 17518 1daa 7A4A     		ldr	r2, .L690
 17519 1dac 1068     		ldr	r0, [r2]	@ unaligned
 17520 1dae 1860     		str	r0, [r3]	@ unaligned
 17521 1db0 1279     		ldrb	r2, [r2, #4]
 17522 1db2 1A71     		strb	r2, [r3, #4]
 17523              	.L652:
2283:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17524              		.loc 1 2283 0
 17525 1db4 07F11803 		add	r3, r7, #24
 17526 1db8 1846     		mov	r0, r3
 17527 1dba FFF7FEFF 		bl	strlen
 17528 1dbe 0346     		mov	r3, r0
 17529 1dc0 1A46     		mov	r2, r3
 17530 1dc2 07F11803 		add	r3, r7, #24
 17531 1dc6 1344     		add	r3, r3, r2
 17532 1dc8 774A     		ldr	r2, .L690+20
 17533 1dca 1C46     		mov	r4, r3
 17534 1dcc 1346     		mov	r3, r2
 17535 1dce 07CB     		ldmia	r3!, {r0, r1, r2}
 17536 1dd0 2060     		str	r0, [r4]	@ unaligned
 17537 1dd2 6160     		str	r1, [r4, #4]	@ unaligned
 17538 1dd4 A260     		str	r2, [r4, #8]	@ unaligned
 17539 1dd6 1B88     		ldrh	r3, [r3]	@ unaligned
 17540 1dd8 A381     		strh	r3, [r4, #12]	@ unaligned
2284:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17541              		.loc 1 2284 0
 17542 1dda 704A     		ldr	r2, .L690+8
 17543 1ddc D7F89430 		ldr	r3, [r7, #148]
 17544 1de0 1344     		add	r3, r3, r2
 17545 1de2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17546 1de4 1946     		mov	r1, r3
 17547 1de6 D7F88820 		ldr	r2, [r7, #136]
 17548 1dea 0B46     		mov	r3, r1
 17549 1dec 9B00     		lsls	r3, r3, #2
 17550 1dee 0B44     		add	r3, r3, r1
 17551 1df0 1344     		add	r3, r3, r2
 17552 1df2 03F20523 		addw	r3, r3, #517
 17553 1df6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 389


 17554 1df8 002B     		cmp	r3, #0
 17555 1dfa 0FD0     		beq	.L653
2285:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17556              		.loc 1 2285 0
 17557 1dfc 07F11803 		add	r3, r7, #24
 17558 1e00 1846     		mov	r0, r3
 17559 1e02 FFF7FEFF 		bl	strlen
 17560 1e06 0346     		mov	r3, r0
 17561 1e08 1A46     		mov	r2, r3
 17562 1e0a 07F11803 		add	r3, r7, #24
 17563 1e0e 1344     		add	r3, r3, r2
 17564 1e10 634A     		ldr	r2, .L690+12
 17565 1e12 1068     		ldr	r0, [r2]	@ unaligned
 17566 1e14 1860     		str	r0, [r3]	@ unaligned
 17567 1e16 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17568 1e18 9A80     		strh	r2, [r3, #4]	@ unaligned
 17569 1e1a 0EE0     		b	.L654
 17570              	.L653:
2286:..\src/command_processing.c ****                 else
2287:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17571              		.loc 1 2287 0
 17572 1e1c 07F11803 		add	r3, r7, #24
 17573 1e20 1846     		mov	r0, r3
 17574 1e22 FFF7FEFF 		bl	strlen
 17575 1e26 0346     		mov	r3, r0
 17576 1e28 1A46     		mov	r2, r3
 17577 1e2a 07F11803 		add	r3, r7, #24
 17578 1e2e 1344     		add	r3, r3, r2
 17579 1e30 584A     		ldr	r2, .L690
 17580 1e32 1068     		ldr	r0, [r2]	@ unaligned
 17581 1e34 1860     		str	r0, [r3]	@ unaligned
 17582 1e36 1279     		ldrb	r2, [r2, #4]
 17583 1e38 1A71     		strb	r2, [r3, #4]
 17584              	.L654:
2288:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17585              		.loc 1 2288 0
 17586 1e3a 07F11803 		add	r3, r7, #24
 17587 1e3e 1846     		mov	r0, r3
 17588 1e40 FFF7FEFF 		bl	strlen
 17589 1e44 0346     		mov	r3, r0
 17590 1e46 1A46     		mov	r2, r3
 17591 1e48 07F11803 		add	r3, r7, #24
 17592 1e4c 1344     		add	r3, r3, r2
 17593 1e4e 574A     		ldr	r2, .L690+24
 17594 1e50 1C46     		mov	r4, r3
 17595 1e52 1346     		mov	r3, r2
 17596 1e54 07CB     		ldmia	r3!, {r0, r1, r2}
 17597 1e56 2060     		str	r0, [r4]	@ unaligned
 17598 1e58 6160     		str	r1, [r4, #4]	@ unaligned
 17599 1e5a A260     		str	r2, [r4, #8]	@ unaligned
 17600 1e5c 1A88     		ldrh	r2, [r3]	@ unaligned
 17601 1e5e 9B78     		ldrb	r3, [r3, #2]
 17602 1e60 A281     		strh	r2, [r4, #12]	@ unaligned
 17603 1e62 A373     		strb	r3, [r4, #14]
2289:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17604              		.loc 1 2289 0
 17605 1e64 4D4A     		ldr	r2, .L690+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 390


 17606 1e66 D7F89430 		ldr	r3, [r7, #148]
 17607 1e6a 1344     		add	r3, r3, r2
 17608 1e6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17609 1e6e 1946     		mov	r1, r3
 17610 1e70 D7F88820 		ldr	r2, [r7, #136]
 17611 1e74 0B46     		mov	r3, r1
 17612 1e76 9B00     		lsls	r3, r3, #2
 17613 1e78 0B44     		add	r3, r3, r1
 17614 1e7a 1344     		add	r3, r3, r2
 17615 1e7c 03F20623 		addw	r3, r3, #518
 17616 1e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17617 1e82 002B     		cmp	r3, #0
 17618 1e84 0FD0     		beq	.L655
2290:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17619              		.loc 1 2290 0
 17620 1e86 07F11803 		add	r3, r7, #24
 17621 1e8a 1846     		mov	r0, r3
 17622 1e8c FFF7FEFF 		bl	strlen
 17623 1e90 0346     		mov	r3, r0
 17624 1e92 1A46     		mov	r2, r3
 17625 1e94 07F11803 		add	r3, r7, #24
 17626 1e98 1344     		add	r3, r3, r2
 17627 1e9a 414A     		ldr	r2, .L690+12
 17628 1e9c 1068     		ldr	r0, [r2]	@ unaligned
 17629 1e9e 1860     		str	r0, [r3]	@ unaligned
 17630 1ea0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17631 1ea2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17632 1ea4 0EE0     		b	.L656
 17633              	.L655:
2291:..\src/command_processing.c ****                 else
2292:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17634              		.loc 1 2292 0
 17635 1ea6 07F11803 		add	r3, r7, #24
 17636 1eaa 1846     		mov	r0, r3
 17637 1eac FFF7FEFF 		bl	strlen
 17638 1eb0 0346     		mov	r3, r0
 17639 1eb2 1A46     		mov	r2, r3
 17640 1eb4 07F11803 		add	r3, r7, #24
 17641 1eb8 1344     		add	r3, r3, r2
 17642 1eba 364A     		ldr	r2, .L690
 17643 1ebc 1068     		ldr	r0, [r2]	@ unaligned
 17644 1ebe 1860     		str	r0, [r3]	@ unaligned
 17645 1ec0 1279     		ldrb	r2, [r2, #4]
 17646 1ec2 1A71     		strb	r2, [r3, #4]
 17647              	.L656:
2293:..\src/command_processing.c ****                      
2294:..\src/command_processing.c ****                 strcat(info_string, str);
 17648              		.loc 1 2294 0 discriminator 2
 17649 1ec4 07F11803 		add	r3, r7, #24
 17650 1ec8 1946     		mov	r1, r3
 17651 1eca 7869     		ldr	r0, [r7, #20]
 17652 1ecc FFF7FEFF 		bl	strcat
2264:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17653              		.loc 1 2264 0 discriminator 2
 17654 1ed0 D7F89430 		ldr	r3, [r7, #148]
 17655 1ed4 0133     		adds	r3, r3, #1
 17656 1ed6 C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 391


 17657              	.L646:
2264:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17658              		.loc 1 2264 0 is_stmt 0 discriminator 1
 17659 1eda 354B     		ldr	r3, .L690+28
 17660 1edc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17661 1ede 1A46     		mov	r2, r3
 17662 1ee0 D7F89430 		ldr	r3, [r7, #148]
 17663 1ee4 9A42     		cmp	r2, r3
 17664 1ee6 3FF76FAE 		bgt	.L657
2295:..\src/command_processing.c ****             }       
2296:..\src/command_processing.c ****             
2297:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17665              		.loc 1 2297 0 is_stmt 1
 17666 1eea 7869     		ldr	r0, [r7, #20]
 17667 1eec FFF7FEFF 		bl	strlen
 17668 1ef0 0346     		mov	r3, r0
 17669 1ef2 1A46     		mov	r2, r3
 17670 1ef4 7B69     		ldr	r3, [r7, #20]
 17671 1ef6 1344     		add	r3, r3, r2
 17672 1ef8 2E4A     		ldr	r2, .L690+32
 17673 1efa 1188     		ldrh	r1, [r2]	@ unaligned
 17674 1efc 9278     		ldrb	r2, [r2, #2]
 17675 1efe 1980     		strh	r1, [r3]	@ unaligned
 17676 1f00 9A70     		strb	r2, [r3, #2]
2298:..\src/command_processing.c ****           
2299:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17677              		.loc 1 2299 0
 17678 1f02 7869     		ldr	r0, [r7, #20]
 17679 1f04 FFF7FEFF 		bl	IMU_reading_info
 17680              	.L645:
2300:..\src/command_processing.c ****         }
2301:..\src/command_processing.c ****         
2302:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17681              		.loc 1 2302 0
 17682 1f08 7869     		ldr	r0, [r7, #20]
 17683 1f0a FFF7FEFF 		bl	strlen
 17684 1f0e 0346     		mov	r3, r0
 17685 1f10 1A46     		mov	r2, r3
 17686 1f12 7B69     		ldr	r3, [r7, #20]
 17687 1f14 1344     		add	r3, r3, r2
 17688 1f16 274A     		ldr	r2, .L690+32
 17689 1f18 1188     		ldrh	r1, [r2]	@ unaligned
 17690 1f1a 9278     		ldrb	r2, [r2, #2]
 17691 1f1c 1980     		strh	r1, [r3]	@ unaligned
 17692 1f1e 9A70     		strb	r2, [r3, #2]
2303:..\src/command_processing.c **** 
2304:..\src/command_processing.c **** #ifdef GENERIC_FW   
2305:..\src/command_processing.c ****         int j;
2306:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 17693              		.loc 1 2306 0
 17694 1f20 7869     		ldr	r0, [r7, #20]
 17695 1f22 FFF7FEFF 		bl	strlen
 17696 1f26 0346     		mov	r3, r0
 17697 1f28 1A46     		mov	r2, r3
 17698 1f2a 7B69     		ldr	r3, [r7, #20]
 17699 1f2c 1344     		add	r3, r3, r2
 17700 1f2e 224A     		ldr	r2, .L690+36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 392


 17701 1f30 1D46     		mov	r5, r3
 17702 1f32 1446     		mov	r4, r2
 17703 1f34 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17704 1f36 2860     		str	r0, [r5]	@ unaligned
 17705 1f38 6960     		str	r1, [r5, #4]	@ unaligned
 17706 1f3a AA60     		str	r2, [r5, #8]	@ unaligned
 17707 1f3c EB60     		str	r3, [r5, #12]	@ unaligned
 17708 1f3e 03CC     		ldmia	r4!, {r0, r1}
 17709 1f40 2861     		str	r0, [r5, #16]	@ unaligned
 17710 1f42 6961     		str	r1, [r5, #20]	@ unaligned
2307:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 17711              		.loc 1 2307 0
 17712 1f44 0023     		movs	r3, #0
 17713 1f46 C7F89430 		str	r3, [r7, #148]
 17714 1f4a BCE0     		b	.L658
 17715              	.L667:
2308:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17716              		.loc 1 2308 0
 17717 1f4c 1B4A     		ldr	r2, .L690+40
 17718 1f4e D7F89430 		ldr	r3, [r7, #148]
 17719 1f52 1344     		add	r3, r3, r2
 17720 1f54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17721 1f56 07F11800 		add	r0, r7, #24
 17722 1f5a D7F89420 		ldr	r2, [r7, #148]
 17723 1f5e 1849     		ldr	r1, .L690+44
 17724 1f60 FFF7FEFF 		bl	sprintf
2309:..\src/command_processing.c ****             strcat(info_string, str);
 17725              		.loc 1 2309 0
 17726 1f64 07F11803 		add	r3, r7, #24
 17727 1f68 1946     		mov	r1, r3
 17728 1f6a 7869     		ldr	r0, [r7, #20]
 17729 1f6c FFF7FEFF 		bl	strcat
2310:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 17730              		.loc 1 2310 0
 17731 1f70 D7F88830 		ldr	r3, [r7, #136]
 17732 1f74 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17733 1f78 1A46     		mov	r2, r3
 17734 1f7a D7F89430 		ldr	r3, [r7, #148]
 17735 1f7e 9A42     		cmp	r2, r3
 17736 1f80 2FD1     		bne	.L659
2311:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 17737              		.loc 1 2311 0
 17738 1f82 D7F88830 		ldr	r3, [r7, #136]
 17739 1f86 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17740 1f8a 002B     		cmp	r3, #0
 17741 1f8c 1CD0     		beq	.L660
 17742              		.loc 1 2311 0 is_stmt 0 discriminator 1
 17743 1f8e 0D4A     		ldr	r2, .L690+48
 17744 1f90 1BE0     		b	.L661
 17745              	.L691:
 17746 1f92 00BF     		.align	2
 17747              	.L690:
 17748 1f94 D8120000 		.word	.LC174
 17749 1f98 BC1A0000 		.word	.LC254
 17750 1f9c 00000000 		.word	IMU_connected
 17751 1fa0 D0120000 		.word	.LC173
 17752 1fa4 CC1A0000 		.word	.LC255
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 393


 17753 1fa8 E01A0000 		.word	.LC256
 17754 1fac F01A0000 		.word	.LC257
 17755 1fb0 00000000 		.word	N_IMU_Connected
 17756 1fb4 10110000 		.word	.LC150
 17757 1fb8 001B0000 		.word	.LC258
 17758 1fbc 00000000 		.word	N_Encoder_Line_Connected
 17759 1fc0 181B0000 		.word	.LC259
 17760 1fc4 381B0000 		.word	.LC260
 17761              	.L660:
 17762              		.loc 1 2311 0 discriminator 2
 17763 1fc8 534A     		ldr	r2, .L692
 17764              	.L661:
 17765              		.loc 1 2311 0 discriminator 4
 17766 1fca 07F11803 		add	r3, r7, #24
 17767 1fce 5349     		ldr	r1, .L692+4
 17768 1fd0 1846     		mov	r0, r3
 17769 1fd2 FFF7FEFF 		bl	sprintf
2312:..\src/command_processing.c ****                 strcat(info_string, str);
 17770              		.loc 1 2312 0 is_stmt 1 discriminator 4
 17771 1fd6 07F11803 		add	r3, r7, #24
 17772 1fda 1946     		mov	r1, r3
 17773 1fdc 7869     		ldr	r0, [r7, #20]
 17774 1fde FFF7FEFF 		bl	strcat
 17775              	.L659:
2313:..\src/command_processing.c ****             }
2314:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17776              		.loc 1 2314 0
 17777 1fe2 7869     		ldr	r0, [r7, #20]
 17778 1fe4 FFF7FEFF 		bl	strlen
 17779 1fe8 0346     		mov	r3, r0
 17780 1fea 1A46     		mov	r2, r3
 17781 1fec 7B69     		ldr	r3, [r7, #20]
 17782 1fee 1344     		add	r3, r3, r2
 17783 1ff0 4B4A     		ldr	r2, .L692+8
 17784 1ff2 1188     		ldrh	r1, [r2]	@ unaligned
 17785 1ff4 9278     		ldrb	r2, [r2, #2]
 17786 1ff6 1980     		strh	r1, [r3]	@ unaligned
 17787 1ff8 9A70     		strb	r2, [r3, #2]
2315:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 17788              		.loc 1 2315 0
 17789 1ffa 4A4A     		ldr	r2, .L692+12
 17790 1ffc D7F89430 		ldr	r3, [r7, #148]
 17791 2000 1344     		add	r3, r3, r2
 17792 2002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17793 2004 002B     		cmp	r3, #0
 17794 2006 59D0     		beq	.L662
2316:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 17795              		.loc 1 2316 0
 17796 2008 7869     		ldr	r0, [r7, #20]
 17797 200a FFF7FEFF 		bl	strlen
 17798 200e 0346     		mov	r3, r0
 17799 2010 1A46     		mov	r2, r3
 17800 2012 7B69     		ldr	r3, [r7, #20]
 17801 2014 1344     		add	r3, r3, r2
 17802 2016 444A     		ldr	r2, .L692+16
 17803 2018 1D46     		mov	r5, r3
 17804 201a 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 394


 17805 201c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17806 201e 2860     		str	r0, [r5]	@ unaligned
 17807 2020 6960     		str	r1, [r5, #4]	@ unaligned
 17808 2022 AA60     		str	r2, [r5, #8]	@ unaligned
 17809 2024 EB60     		str	r3, [r5, #12]	@ unaligned
 17810 2026 2068     		ldr	r0, [r4]	@ unaligned
 17811 2028 2861     		str	r0, [r5, #16]	@ unaligned
 17812 202a A388     		ldrh	r3, [r4, #4]	@ unaligned
 17813 202c AB82     		strh	r3, [r5, #20]	@ unaligned
2317:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17814              		.loc 1 2317 0
 17815 202e 0023     		movs	r3, #0
 17816 2030 C7F88C30 		str	r3, [r7, #140]
 17817 2034 2CE0     		b	.L663
 17818              	.L666:
2318:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 17819              		.loc 1 2318 0
 17820 2036 3D49     		ldr	r1, .L692+20
 17821 2038 D7F89420 		ldr	r2, [r7, #148]
 17822 203c 1346     		mov	r3, r2
 17823 203e 9B00     		lsls	r3, r3, #2
 17824 2040 1344     		add	r3, r3, r2
 17825 2042 D7F88C20 		ldr	r2, [r7, #140]
 17826 2046 1344     		add	r3, r3, r2
 17827 2048 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 17828 204c 1C46     		mov	r4, r3
 17829 204e 3849     		ldr	r1, .L692+24
 17830 2050 D7F89420 		ldr	r2, [r7, #148]
 17831 2054 1346     		mov	r3, r2
 17832 2056 9B00     		lsls	r3, r3, #2
 17833 2058 1344     		add	r3, r3, r2
 17834 205a CA18     		adds	r2, r1, r3
 17835 205c D7F88C30 		ldr	r3, [r7, #140]
 17836 2060 1344     		add	r3, r3, r2
 17837 2062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17838 2064 102B     		cmp	r3, #16
 17839 2066 01D1     		bne	.L664
 17840              		.loc 1 2318 0 is_stmt 0 discriminator 1
 17841 2068 324B     		ldr	r3, .L692+28
 17842 206a 00E0     		b	.L665
 17843              	.L664:
 17844              		.loc 1 2318 0 discriminator 2
 17845 206c 324B     		ldr	r3, .L692+32
 17846              	.L665:
 17847              		.loc 1 2318 0 discriminator 4
 17848 206e 07F11800 		add	r0, r7, #24
 17849 2072 2246     		mov	r2, r4
 17850 2074 3149     		ldr	r1, .L692+36
 17851 2076 FFF7FEFF 		bl	sprintf
2319:..\src/command_processing.c ****                     strcat(info_string, str);
 17852              		.loc 1 2319 0 is_stmt 1 discriminator 4
 17853 207a 07F11803 		add	r3, r7, #24
 17854 207e 1946     		mov	r1, r3
 17855 2080 7869     		ldr	r0, [r7, #20]
 17856 2082 FFF7FEFF 		bl	strcat
2317:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17857              		.loc 1 2317 0 discriminator 4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 395


 17858 2086 D7F88C30 		ldr	r3, [r7, #140]
 17859 208a 0133     		adds	r3, r3, #1
 17860 208c C7F88C30 		str	r3, [r7, #140]
 17861              	.L663:
2317:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17862              		.loc 1 2317 0 is_stmt 0 discriminator 2
 17863 2090 244A     		ldr	r2, .L692+12
 17864 2092 D7F89430 		ldr	r3, [r7, #148]
 17865 2096 1344     		add	r3, r3, r2
 17866 2098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17867 209a 1A46     		mov	r2, r3
 17868 209c D7F88C30 		ldr	r3, [r7, #140]
 17869 20a0 9A42     		cmp	r2, r3
 17870 20a2 C8DC     		bgt	.L666
2320:..\src/command_processing.c ****                 }
2321:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 17871              		.loc 1 2321 0 is_stmt 1
 17872 20a4 7869     		ldr	r0, [r7, #20]
 17873 20a6 FFF7FEFF 		bl	strlen
 17874 20aa 0346     		mov	r3, r0
 17875 20ac 1A46     		mov	r2, r3
 17876 20ae 7B69     		ldr	r3, [r7, #20]
 17877 20b0 1344     		add	r3, r3, r2
 17878 20b2 1B4A     		ldr	r2, .L692+8
 17879 20b4 1188     		ldrh	r1, [r2]	@ unaligned
 17880 20b6 9278     		ldrb	r2, [r2, #2]
 17881 20b8 1980     		strh	r1, [r3]	@ unaligned
 17882 20ba 9A70     		strb	r2, [r3, #2]
 17883              	.L662:
2307:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17884              		.loc 1 2307 0 discriminator 2
 17885 20bc D7F89430 		ldr	r3, [r7, #148]
 17886 20c0 0133     		adds	r3, r3, #1
 17887 20c2 C7F89430 		str	r3, [r7, #148]
 17888              	.L658:
2307:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17889              		.loc 1 2307 0 is_stmt 0 discriminator 1
 17890 20c6 D7F89430 		ldr	r3, [r7, #148]
 17891 20ca 012B     		cmp	r3, #1
 17892 20cc 7FF73EAF 		ble	.L667
2322:..\src/command_processing.c ****             }
2323:..\src/command_processing.c ****         }
2324:..\src/command_processing.c **** #endif   
2325:..\src/command_processing.c ****         
2326:..\src/command_processing.c **** #ifdef MASTER_FW
2327:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2328:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2329:..\src/command_processing.c ****         else
2330:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2331:..\src/command_processing.c **** 
2332:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2333:..\src/command_processing.c ****         strcat(info_string, str);
2334:..\src/command_processing.c **** #endif
2335:..\src/command_processing.c **** 
2336:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17893              		.loc 1 2336 0 is_stmt 1
 17894 20d0 1B4B     		ldr	r3, .L692+40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 396


 17895 20d2 1B88     		ldrh	r3, [r3]
 17896 20d4 1A46     		mov	r2, r3
 17897 20d6 1B4B     		ldr	r3, .L692+44
 17898 20d8 1B88     		ldrh	r3, [r3]
 17899 20da D21A     		subs	r2, r2, r3
 17900 20dc 07F11803 		add	r3, r7, #24
 17901 20e0 1949     		ldr	r1, .L692+48
 17902 20e2 1846     		mov	r0, r3
 17903 20e4 FFF7FEFF 		bl	sprintf
2337:..\src/command_processing.c ****         strcat(info_string, str);
 17904              		.loc 1 2337 0
 17905 20e8 07F11803 		add	r3, r7, #24
 17906 20ec 1946     		mov	r1, r3
 17907 20ee 7869     		ldr	r0, [r7, #20]
 17908 20f0 FFF7FEFF 		bl	strcat
2338:..\src/command_processing.c ****   
2339:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 17909              		.loc 1 2339 0
 17910 20f4 7869     		ldr	r0, [r7, #20]
 17911 20f6 FFF7FEFF 		bl	strlen
 17912 20fa 0346     		mov	r3, r0
 17913 20fc 1A46     		mov	r2, r3
 17914 20fe 7B69     		ldr	r3, [r7, #20]
 17915 2100 1344     		add	r3, r3, r2
 17916 2102 124A     		ldr	r2, .L692+52
 17917 2104 1188     		ldrh	r1, [r2]	@ unaligned
 17918 2106 9278     		ldrb	r2, [r2, #2]
 17919 2108 1980     		strh	r1, [r3]	@ unaligned
 17920 210a 9A70     		strb	r2, [r3, #2]
 17921              	.L669:
 17922              	.LBE16:
2340:..\src/command_processing.c ****     }
2341:..\src/command_processing.c **** }
 17923              		.loc 1 2341 0
 17924 210c 00BF     		nop
 17925 210e 9C37     		adds	r7, r7, #156
 17926              		.cfi_def_cfa_offset 36
 17927 2110 BD46     		mov	sp, r7
 17928              		.cfi_def_cfa_register 13
 17929              		@ sp needed
 17930 2112 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17931              	.L693:
 17932 2116 00BF     		.align	2
 17933              	.L692:
 17934 2118 401B0000 		.word	.LC261
 17935 211c 481B0000 		.word	.LC262
 17936 2120 10110000 		.word	.LC150
 17937 2124 00000000 		.word	N_Encoder_Line_Connected
 17938 2128 681B0000 		.word	.LC263
 17939 212c 00000000 		.word	Encoder_Value
 17940 2130 00000000 		.word	Encoder_Check
 17941 2134 801B0000 		.word	.LC264
 17942 2138 841B0000 		.word	.LC265
 17943 213c 881B0000 		.word	.LC266
 17944 2140 00000000 		.word	timer_value0
 17945 2144 00000000 		.word	timer_value
 17946 2148 941B0000 		.word	.LC267
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 397


 17947 214c B01B0000 		.word	.LC268
 17948              		.cfi_endproc
 17949              	.LFE72:
 17950              		.size	prepare_generic_info, .-prepare_generic_info
 17951              		.section	.rodata
 17952              		.align	2
 17953              	.LC269:
 17954 1bb4 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 17954      41474520 
 17954      53544154 
 17954      49535449 
 17954      43530D0A 
 17955 1bc9 000000   		.align	2
 17956              	.LC270:
 17957 1bcc 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 17957      206F6620 
 17957      4857206D 
 17957      61696E74 
 17957      656E616E 
 17958 1bf7 00       		.align	2
 17959              	.LC271:
 17960 1bf8 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 17960      206F6620 
 17960      75736167 
 17960      65207374 
 17960      61747320 
 17961 1c2b 0A00     		.ascii	"\012\000"
 17962 1c2d 000000   		.align	2
 17963              	.LC272:
 17964 1c30 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 17964      20636865 
 17964      636B6564 
 17964      2054696D 
 17964      653A2025 
 17965 1c63 0A00     		.ascii	"\012\000"
 17966 1c65 000000   		.align	2
 17967              	.LC273:
 17968 1c68 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 17968      74696F6E 
 17968      73206869 
 17968      73746F67 
 17968      72616D20 
 17969 1c87 00       		.align	2
 17970              	.LC274:
 17971 1c88 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 17971      2564205B 
 17971      25642D25 
 17971      645D3A20 
 17971      256C750D 
 17972 1c9e 0000     		.align	2
 17973              	.LC275:
 17974 1ca0 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 17974      656E7420 
 17974      68697374 
 17974      6F677261 
 17974      6D20286D 
 17975 1cba 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 398


 17976              	.LC276:
 17977 1cbc 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 17977      73686F6C 
 17977      64202564 
 17977      205B2564 
 17977      2D25645D 
 17978              		.align	2
 17979              	.LC277:
 17980 1cd8 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 17980      61637469 
 17980      76617469 
 17980      6F6E7320 
 17980      636F756E 
 17981 1cfa 0000     		.align	2
 17982              	.LC278:
 17983 1cfc 52657374 		.ascii	"Rest position occurrences: %lu\000"
 17983      20706F73 
 17983      6974696F 
 17983      6E206F63 
 17983      63757272 
 17984 1d1b 00       		.align	2
 17985              	.LC279:
 17986 1d1c 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 17986      6520746F 
 17986      74616C20 
 17986      64697370 
 17986      6C616365 
 17987 1d42 0000     		.align	2
 17988              	.LC280:
 17989 1d44 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 17989      6C20706F 
 17989      77657220 
 17989      6F6E2074 
 17989      696D6520 
 17990 1d63 00       		.align	2
 17991              	.LC281:
 17992 1d64 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 17992      6C207265 
 17992      73742070 
 17992      6F736974 
 17992      696F6E20 
 17993              		.section	.text.prepare_counter_info,"ax",%progbits
 17994              		.align	2
 17995              		.global	prepare_counter_info
 17996              		.thumb
 17997              		.thumb_func
 17998              		.type	prepare_counter_info, %function
 17999              	prepare_counter_info:
 18000              	.LFB73:
2342:..\src/command_processing.c **** 
2343:..\src/command_processing.c **** //==============================================================================
2344:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2345:..\src/command_processing.c **** //==============================================================================
2346:..\src/command_processing.c **** 
2347:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2348:..\src/command_processing.c **** {
 18001              		.loc 1 2348 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 399


 18002              		.cfi_startproc
 18003              		@ args = 0, pretend = 0, frame = 128
 18004              		@ frame_needed = 1, uses_anonymous_args = 0
 18005 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 18006              		.cfi_def_cfa_offset 20
 18007              		.cfi_offset 4, -20
 18008              		.cfi_offset 5, -16
 18009              		.cfi_offset 6, -12
 18010              		.cfi_offset 7, -8
 18011              		.cfi_offset 14, -4
 18012 0002 A5B0     		sub	sp, sp, #148
 18013              		.cfi_def_cfa_offset 168
 18014 0004 04AF     		add	r7, sp, #16
 18015              		.cfi_def_cfa 7, 152
 18016 0006 7860     		str	r0, [r7, #4]
2349:..\src/command_processing.c ****     char str[100];  
2350:..\src/command_processing.c ****     int i;
2351:..\src/command_processing.c ****     int step;
2352:..\src/command_processing.c **** 
2353:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18017              		.loc 1 2353 0
 18018 0008 7D4B     		ldr	r3, .L700
 18019 000a BB67     		str	r3, [r7, #120]
2354:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 18020              		.loc 1 2354 0
 18021 000c BB6F     		ldr	r3, [r7, #120]
 18022 000e B033     		adds	r3, r3, #176
 18023 0010 7B67     		str	r3, [r7, #116]
2355:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 18024              		.loc 1 2355 0
 18025 0012 7B6F     		ldr	r3, [r7, #116]
 18026 0014 93F86030 		ldrb	r3, [r3, #96]
 18027 0018 87F87330 		strb	r3, [r7, #115]
2356:..\src/command_processing.c ****     
2357:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 18028              		.loc 1 2357 0
 18029 001c 7868     		ldr	r0, [r7, #4]
 18030 001e FFF7FEFF 		bl	strlen
 18031 0022 0346     		mov	r3, r0
 18032 0024 1A46     		mov	r2, r3
 18033 0026 7B68     		ldr	r3, [r7, #4]
 18034 0028 1344     		add	r3, r3, r2
 18035 002a 764A     		ldr	r2, .L700+4
 18036 002c 1D46     		mov	r5, r3
 18037 002e 1446     		mov	r4, r2
 18038 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18039 0032 2860     		str	r0, [r5]	@ unaligned
 18040 0034 6960     		str	r1, [r5, #4]	@ unaligned
 18041 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 18042 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 18043 003a 2068     		ldr	r0, [r4]	@ unaligned
 18044 003c 2861     		str	r0, [r5, #16]	@ unaligned
 18045 003e 2379     		ldrb	r3, [r4, #4]
 18046 0040 2B75     		strb	r3, [r5, #20]
2358:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18047              		.loc 1 2358 0
 18048 0042 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 400


 18049 0044 FFF7FEFF 		bl	strlen
 18050 0048 0346     		mov	r3, r0
 18051 004a 1A46     		mov	r2, r3
 18052 004c 7B68     		ldr	r3, [r7, #4]
 18053 004e 1344     		add	r3, r3, r2
 18054 0050 6D4A     		ldr	r2, .L700+8
 18055 0052 1188     		ldrh	r1, [r2]	@ unaligned
 18056 0054 9278     		ldrb	r2, [r2, #2]
 18057 0056 1980     		strh	r1, [r3]	@ unaligned
 18058 0058 9A70     		strb	r2, [r3, #2]
2359:..\src/command_processing.c ****     
2360:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18059              		.loc 1 2360 0
 18060 005a BB6F     		ldr	r3, [r7, #120]
 18061 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18062 0060 1A46     		mov	r2, r3
 18063 0062 BB6F     		ldr	r3, [r7, #120]
 18064 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18065 0068 1946     		mov	r1, r3
 18066 006a BB6F     		ldr	r3, [r7, #120]
 18067 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18068 0070 07F10800 		add	r0, r7, #8
 18069 0074 0093     		str	r3, [sp]
 18070 0076 0B46     		mov	r3, r1
 18071 0078 6449     		ldr	r1, .L700+12
 18072 007a FFF7FEFF 		bl	sprintf
2361:..\src/command_processing.c ****     strcat(info_string, str);
 18073              		.loc 1 2361 0
 18074 007e 07F10803 		add	r3, r7, #8
 18075 0082 1946     		mov	r1, r3
 18076 0084 7868     		ldr	r0, [r7, #4]
 18077 0086 FFF7FEFF 		bl	strcat
2362:..\src/command_processing.c ****     
2363:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18078              		.loc 1 2363 0
 18079 008a BB6F     		ldr	r3, [r7, #120]
 18080 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18081 0090 1A46     		mov	r2, r3
 18082 0092 BB6F     		ldr	r3, [r7, #120]
 18083 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18084 0098 1946     		mov	r1, r3
 18085 009a BB6F     		ldr	r3, [r7, #120]
 18086 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18087 00a0 07F10800 		add	r0, r7, #8
 18088 00a4 0093     		str	r3, [sp]
 18089 00a6 0B46     		mov	r3, r1
 18090 00a8 5949     		ldr	r1, .L700+16
 18091 00aa FFF7FEFF 		bl	sprintf
2364:..\src/command_processing.c ****     strcat(info_string, str);
 18092              		.loc 1 2364 0
 18093 00ae 07F10803 		add	r3, r7, #8
 18094 00b2 1946     		mov	r1, r3
 18095 00b4 7868     		ldr	r0, [r7, #4]
 18096 00b6 FFF7FEFF 		bl	strcat
2365:..\src/command_processing.c ****             
2366:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 18097              		.loc 1 2366 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 401


 18098 00ba BB6F     		ldr	r3, [r7, #120]
 18099 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 18100 00c0 1D46     		mov	r5, r3
 18101 00c2 BB6F     		ldr	r3, [r7, #120]
 18102 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 18103 00c8 1E46     		mov	r6, r3
 18104 00ca BB6F     		ldr	r3, [r7, #120]
 18105 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 18106 00d0 1A46     		mov	r2, r3
 18107 00d2 BB6F     		ldr	r3, [r7, #120]
 18108 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 18109 00d8 1946     		mov	r1, r3
 18110 00da BB6F     		ldr	r3, [r7, #120]
 18111 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 18112 00e0 1C46     		mov	r4, r3
 18113 00e2 BB6F     		ldr	r3, [r7, #120]
 18114 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 18115 00e8 07F10800 		add	r0, r7, #8
 18116 00ec 0393     		str	r3, [sp, #12]
 18117 00ee 0294     		str	r4, [sp, #8]
 18118 00f0 0191     		str	r1, [sp, #4]
 18119 00f2 0092     		str	r2, [sp]
 18120 00f4 3346     		mov	r3, r6
 18121 00f6 2A46     		mov	r2, r5
 18122 00f8 4649     		ldr	r1, .L700+20
 18123 00fa FFF7FEFF 		bl	sprintf
2367:..\src/command_processing.c ****     strcat(info_string, str);
 18124              		.loc 1 2367 0
 18125 00fe 07F10803 		add	r3, r7, #8
 18126 0102 1946     		mov	r1, r3
 18127 0104 7868     		ldr	r0, [r7, #4]
 18128 0106 FFF7FEFF 		bl	strcat
2368:..\src/command_processing.c ****     
2369:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 18129              		.loc 1 2369 0
 18130 010a 07F10803 		add	r3, r7, #8
 18131 010e 424A     		ldr	r2, .L700+24
 18132 0110 1C46     		mov	r4, r3
 18133 0112 1546     		mov	r5, r2
 18134 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18135 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18136 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 18137 011c 07C4     		stmia	r4!, {r0, r1, r2}
 18138 011e 2380     		strh	r3, [r4]	@ movhi
 18139 0120 0234     		adds	r4, r4, #2
 18140 0122 1B0C     		lsrs	r3, r3, #16
 18141 0124 2370     		strb	r3, [r4]
2370:..\src/command_processing.c ****     strcat(info_string, str);
 18142              		.loc 1 2370 0
 18143 0126 07F10803 		add	r3, r7, #8
 18144 012a 1946     		mov	r1, r3
 18145 012c 7868     		ldr	r0, [r7, #4]
 18146 012e FFF7FEFF 		bl	strcat
2371:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 18147              		.loc 1 2371 0
 18148 0132 7B6F     		ldr	r3, [r7, #116]
 18149 0134 996B     		ldr	r1, [r3, #56]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 402


 18150 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 18151 013a B86F     		ldr	r0, [r7, #120]
 18152 013c 1346     		mov	r3, r2
 18153 013e 5B00     		lsls	r3, r3, #1
 18154 0140 1344     		add	r3, r3, r2
 18155 0142 1B01     		lsls	r3, r3, #4
 18156 0144 0344     		add	r3, r3, r0
 18157 0146 03F29513 		addw	r3, r3, #405
 18158 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18159 014c 41FA03F3 		asr	r3, r1, r3
 18160 0150 324A     		ldr	r2, .L700+28
 18161 0152 82FB0312 		smull	r1, r2, r2, r3
 18162 0156 9210     		asrs	r2, r2, #2
 18163 0158 DB17     		asrs	r3, r3, #31
 18164 015a D31A     		subs	r3, r2, r3
 18165 015c FB66     		str	r3, [r7, #108]
2372:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18166              		.loc 1 2372 0
 18167 015e 0123     		movs	r3, #1
 18168 0160 FB67     		str	r3, [r7, #124]
 18169 0162 21E0     		b	.L695
 18170              	.L696:
2373:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 18171              		.loc 1 2373 0 discriminator 3
 18172 0164 FB6F     		ldr	r3, [r7, #124]
 18173 0166 013B     		subs	r3, r3, #1
 18174 0168 FA6E     		ldr	r2, [r7, #108]
 18175 016a 02FB03F3 		mul	r3, r2, r3
 18176 016e 5C1C     		adds	r4, r3, #1
 18177 0170 FB6E     		ldr	r3, [r7, #108]
 18178 0172 FA6F     		ldr	r2, [r7, #124]
 18179 0174 02FB03F3 		mul	r3, r2, r3
 18180 0178 FA6F     		ldr	r2, [r7, #124]
 18181 017a 511E     		subs	r1, r2, #1
 18182 017c BA6F     		ldr	r2, [r7, #120]
 18183 017e 0631     		adds	r1, r1, #6
 18184 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18185 0184 07F10800 		add	r0, r7, #8
 18186 0188 0192     		str	r2, [sp, #4]
 18187 018a 0093     		str	r3, [sp]
 18188 018c 2346     		mov	r3, r4
 18189 018e FA6F     		ldr	r2, [r7, #124]
 18190 0190 2349     		ldr	r1, .L700+32
 18191 0192 FFF7FEFF 		bl	sprintf
2374:..\src/command_processing.c ****         strcat(info_string, str);
 18192              		.loc 1 2374 0 discriminator 3
 18193 0196 07F10803 		add	r3, r7, #8
 18194 019a 1946     		mov	r1, r3
 18195 019c 7868     		ldr	r0, [r7, #4]
 18196 019e FFF7FEFF 		bl	strcat
2372:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18197              		.loc 1 2372 0 discriminator 3
 18198 01a2 FB6F     		ldr	r3, [r7, #124]
 18199 01a4 0133     		adds	r3, r3, #1
 18200 01a6 FB67     		str	r3, [r7, #124]
 18201              	.L695:
2372:..\src/command_processing.c ****     for (i=1; i<=10;i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 403


 18202              		.loc 1 2372 0 is_stmt 0 discriminator 1
 18203 01a8 FB6F     		ldr	r3, [r7, #124]
 18204 01aa 0A2B     		cmp	r3, #10
 18205 01ac DADD     		ble	.L696
2375:..\src/command_processing.c ****     }
2376:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18206              		.loc 1 2376 0 is_stmt 1
 18207 01ae 7868     		ldr	r0, [r7, #4]
 18208 01b0 FFF7FEFF 		bl	strlen
 18209 01b4 0346     		mov	r3, r0
 18210 01b6 1A46     		mov	r2, r3
 18211 01b8 7B68     		ldr	r3, [r7, #4]
 18212 01ba 1344     		add	r3, r3, r2
 18213 01bc 124A     		ldr	r2, .L700+8
 18214 01be 1188     		ldrh	r1, [r2]	@ unaligned
 18215 01c0 9278     		ldrb	r2, [r2, #2]
 18216 01c2 1980     		strh	r1, [r3]	@ unaligned
 18217 01c4 9A70     		strb	r2, [r3, #2]
2377:..\src/command_processing.c ****     
2378:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 18218              		.loc 1 2378 0
 18219 01c6 07F10803 		add	r3, r7, #8
 18220 01ca 164A     		ldr	r2, .L700+36
 18221 01cc 1C46     		mov	r4, r3
 18222 01ce 1546     		mov	r5, r2
 18223 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18224 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18225 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 18226 01d8 03C4     		stmia	r4!, {r0, r1}
 18227 01da 2280     		strh	r2, [r4]	@ movhi
2379:..\src/command_processing.c ****     strcat(info_string, str);
 18228              		.loc 1 2379 0
 18229 01dc 07F10803 		add	r3, r7, #8
 18230 01e0 1946     		mov	r1, r3
 18231 01e2 7868     		ldr	r0, [r7, #4]
 18232 01e4 FFF7FEFF 		bl	strcat
2380:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 18233              		.loc 1 2380 0
 18234 01e8 7B6F     		ldr	r3, [r7, #116]
 18235 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 18236 01ee 002B     		cmp	r3, #0
 18237 01f0 00DA     		bge	.L697
 18238 01f2 0333     		adds	r3, r3, #3
 18239              	.L697:
 18240 01f4 9B10     		asrs	r3, r3, #2
 18241 01f6 1BB2     		sxth	r3, r3
 18242 01f8 FB66     		str	r3, [r7, #108]
2381:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18243              		.loc 1 2381 0
 18244 01fa 0123     		movs	r3, #1
 18245 01fc FB67     		str	r3, [r7, #124]
 18246 01fe 34E0     		b	.L698
 18247              	.L701:
 18248              		.align	2
 18249              	.L700:
 18250 0200 00000000 		.word	g_mem
 18251 0204 B41B0000 		.word	.LC269
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 404


 18252 0208 10110000 		.word	.LC150
 18253 020c CC1B0000 		.word	.LC270
 18254 0210 F81B0000 		.word	.LC271
 18255 0214 301C0000 		.word	.LC272
 18256 0218 681C0000 		.word	.LC273
 18257 021c 67666666 		.word	1717986919
 18258 0220 881C0000 		.word	.LC274
 18259 0224 A01C0000 		.word	.LC275
 18260              	.L699:
2382:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 18261              		.loc 1 2382 0 discriminator 3
 18262 0228 FB6F     		ldr	r3, [r7, #124]
 18263 022a 013B     		subs	r3, r3, #1
 18264 022c FA6E     		ldr	r2, [r7, #108]
 18265 022e 02FB03F4 		mul	r4, r2, r3
 18266 0232 FB6E     		ldr	r3, [r7, #108]
 18267 0234 FA6F     		ldr	r2, [r7, #124]
 18268 0236 02FB03F3 		mul	r3, r2, r3
 18269 023a FA6F     		ldr	r2, [r7, #124]
 18270 023c 511E     		subs	r1, r2, #1
 18271 023e BA6F     		ldr	r2, [r7, #120]
 18272 0240 1031     		adds	r1, r1, #16
 18273 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18274 0246 07F10800 		add	r0, r7, #8
 18275 024a 0192     		str	r2, [sp, #4]
 18276 024c 0093     		str	r3, [sp]
 18277 024e 2346     		mov	r3, r4
 18278 0250 FA6F     		ldr	r2, [r7, #124]
 18279 0252 5149     		ldr	r1, .L702
 18280 0254 FFF7FEFF 		bl	sprintf
2383:..\src/command_processing.c ****         strcat(info_string, str);
 18281              		.loc 1 2383 0 discriminator 3
 18282 0258 07F10803 		add	r3, r7, #8
 18283 025c 1946     		mov	r1, r3
 18284 025e 7868     		ldr	r0, [r7, #4]
 18285 0260 FFF7FEFF 		bl	strcat
2381:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18286              		.loc 1 2381 0 discriminator 3
 18287 0264 FB6F     		ldr	r3, [r7, #124]
 18288 0266 0133     		adds	r3, r3, #1
 18289 0268 FB67     		str	r3, [r7, #124]
 18290              	.L698:
2381:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18291              		.loc 1 2381 0 is_stmt 0 discriminator 1
 18292 026a FB6F     		ldr	r3, [r7, #124]
 18293 026c 042B     		cmp	r3, #4
 18294 026e DBDD     		ble	.L699
2384:..\src/command_processing.c ****     }
2385:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18295              		.loc 1 2385 0 is_stmt 1
 18296 0270 7868     		ldr	r0, [r7, #4]
 18297 0272 FFF7FEFF 		bl	strlen
 18298 0276 0346     		mov	r3, r0
 18299 0278 1A46     		mov	r2, r3
 18300 027a 7B68     		ldr	r3, [r7, #4]
 18301 027c 1344     		add	r3, r3, r2
 18302 027e 474A     		ldr	r2, .L702+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 405


 18303 0280 1188     		ldrh	r1, [r2]	@ unaligned
 18304 0282 9278     		ldrb	r2, [r2, #2]
 18305 0284 1980     		strh	r1, [r3]	@ unaligned
 18306 0286 9A70     		strb	r2, [r3, #2]
2386:..\src/command_processing.c ****             
2387:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 18307              		.loc 1 2387 0
 18308 0288 BB6F     		ldr	r3, [r7, #120]
 18309 028a 1A69     		ldr	r2, [r3, #16]
 18310 028c BB6F     		ldr	r3, [r7, #120]
 18311 028e 5B69     		ldr	r3, [r3, #20]
 18312 0290 07F10800 		add	r0, r7, #8
 18313 0294 4249     		ldr	r1, .L702+8
 18314 0296 FFF7FEFF 		bl	sprintf
2388:..\src/command_processing.c ****     strcat(info_string, str);
 18315              		.loc 1 2388 0
 18316 029a 07F10803 		add	r3, r7, #8
 18317 029e 1946     		mov	r1, r3
 18318 02a0 7868     		ldr	r0, [r7, #4]
 18319 02a2 FFF7FEFF 		bl	strcat
2389:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18320              		.loc 1 2389 0
 18321 02a6 7868     		ldr	r0, [r7, #4]
 18322 02a8 FFF7FEFF 		bl	strlen
 18323 02ac 0346     		mov	r3, r0
 18324 02ae 1A46     		mov	r2, r3
 18325 02b0 7B68     		ldr	r3, [r7, #4]
 18326 02b2 1344     		add	r3, r3, r2
 18327 02b4 394A     		ldr	r2, .L702+4
 18328 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 18329 02b8 9278     		ldrb	r2, [r2, #2]
 18330 02ba 1980     		strh	r1, [r3]	@ unaligned
 18331 02bc 9A70     		strb	r2, [r3, #2]
2390:..\src/command_processing.c ****     
2391:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18332              		.loc 1 2391 0
 18333 02be BB6F     		ldr	r3, [r7, #120]
 18334 02c0 1A6D     		ldr	r2, [r3, #80]
 18335 02c2 07F10803 		add	r3, r7, #8
 18336 02c6 3749     		ldr	r1, .L702+12
 18337 02c8 1846     		mov	r0, r3
 18338 02ca FFF7FEFF 		bl	sprintf
2392:..\src/command_processing.c ****     strcat(info_string, str);
 18339              		.loc 1 2392 0
 18340 02ce 07F10803 		add	r3, r7, #8
 18341 02d2 1946     		mov	r1, r3
 18342 02d4 7868     		ldr	r0, [r7, #4]
 18343 02d6 FFF7FEFF 		bl	strcat
2393:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18344              		.loc 1 2393 0
 18345 02da 7868     		ldr	r0, [r7, #4]
 18346 02dc FFF7FEFF 		bl	strlen
 18347 02e0 0346     		mov	r3, r0
 18348 02e2 1A46     		mov	r2, r3
 18349 02e4 7B68     		ldr	r3, [r7, #4]
 18350 02e6 1344     		add	r3, r3, r2
 18351 02e8 2C4A     		ldr	r2, .L702+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 406


 18352 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 18353 02ec 9278     		ldrb	r2, [r2, #2]
 18354 02ee 1980     		strh	r1, [r3]	@ unaligned
 18355 02f0 9A70     		strb	r2, [r3, #2]
2394:..\src/command_processing.c ****     
2395:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18356              		.loc 1 2395 0
 18357 02f2 BB6F     		ldr	r3, [r7, #120]
 18358 02f4 5A6D     		ldr	r2, [r3, #84]
 18359 02f6 07F10803 		add	r3, r7, #8
 18360 02fa 2B49     		ldr	r1, .L702+16
 18361 02fc 1846     		mov	r0, r3
 18362 02fe FFF7FEFF 		bl	sprintf
2396:..\src/command_processing.c ****     strcat(info_string, str);
 18363              		.loc 1 2396 0
 18364 0302 07F10803 		add	r3, r7, #8
 18365 0306 1946     		mov	r1, r3
 18366 0308 7868     		ldr	r0, [r7, #4]
 18367 030a FFF7FEFF 		bl	strcat
2397:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18368              		.loc 1 2397 0
 18369 030e 7868     		ldr	r0, [r7, #4]
 18370 0310 FFF7FEFF 		bl	strlen
 18371 0314 0346     		mov	r3, r0
 18372 0316 1A46     		mov	r2, r3
 18373 0318 7B68     		ldr	r3, [r7, #4]
 18374 031a 1344     		add	r3, r3, r2
 18375 031c 1F4A     		ldr	r2, .L702+4
 18376 031e 1188     		ldrh	r1, [r2]	@ unaligned
 18377 0320 9278     		ldrb	r2, [r2, #2]
 18378 0322 1980     		strh	r1, [r3]	@ unaligned
 18379 0324 9A70     		strb	r2, [r3, #2]
2398:..\src/command_processing.c ****     
2399:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 18380              		.loc 1 2399 0
 18381 0326 BB6F     		ldr	r3, [r7, #120]
 18382 0328 9A6D     		ldr	r2, [r3, #88]
 18383 032a 07F10803 		add	r3, r7, #8
 18384 032e 1F49     		ldr	r1, .L702+20
 18385 0330 1846     		mov	r0, r3
 18386 0332 FFF7FEFF 		bl	sprintf
2400:..\src/command_processing.c ****     strcat(info_string, str);
 18387              		.loc 1 2400 0
 18388 0336 07F10803 		add	r3, r7, #8
 18389 033a 1946     		mov	r1, r3
 18390 033c 7868     		ldr	r0, [r7, #4]
 18391 033e FFF7FEFF 		bl	strcat
2401:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18392              		.loc 1 2401 0
 18393 0342 7868     		ldr	r0, [r7, #4]
 18394 0344 FFF7FEFF 		bl	strlen
 18395 0348 0346     		mov	r3, r0
 18396 034a 1A46     		mov	r2, r3
 18397 034c 7B68     		ldr	r3, [r7, #4]
 18398 034e 1344     		add	r3, r3, r2
 18399 0350 124A     		ldr	r2, .L702+4
 18400 0352 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 407


 18401 0354 9278     		ldrb	r2, [r2, #2]
 18402 0356 1980     		strh	r1, [r3]	@ unaligned
 18403 0358 9A70     		strb	r2, [r3, #2]
2402:..\src/command_processing.c ****     
2403:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18404              		.loc 1 2403 0
 18405 035a BB6F     		ldr	r3, [r7, #120]
 18406 035c DA6D     		ldr	r2, [r3, #92]
 18407 035e 07F10803 		add	r3, r7, #8
 18408 0362 1349     		ldr	r1, .L702+24
 18409 0364 1846     		mov	r0, r3
 18410 0366 FFF7FEFF 		bl	sprintf
2404:..\src/command_processing.c ****     strcat(info_string, str);
 18411              		.loc 1 2404 0
 18412 036a 07F10803 		add	r3, r7, #8
 18413 036e 1946     		mov	r1, r3
 18414 0370 7868     		ldr	r0, [r7, #4]
 18415 0372 FFF7FEFF 		bl	strcat
2405:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18416              		.loc 1 2405 0
 18417 0376 7868     		ldr	r0, [r7, #4]
 18418 0378 FFF7FEFF 		bl	strlen
 18419 037c 0346     		mov	r3, r0
 18420 037e 1A46     		mov	r2, r3
 18421 0380 7B68     		ldr	r3, [r7, #4]
 18422 0382 1344     		add	r3, r3, r2
 18423 0384 054A     		ldr	r2, .L702+4
 18424 0386 1188     		ldrh	r1, [r2]	@ unaligned
 18425 0388 9278     		ldrb	r2, [r2, #2]
 18426 038a 1980     		strh	r1, [r3]	@ unaligned
 18427 038c 9A70     		strb	r2, [r3, #2]
2406:..\src/command_processing.c **** 
2407:..\src/command_processing.c **** }
 18428              		.loc 1 2407 0
 18429 038e 00BF     		nop
 18430 0390 8437     		adds	r7, r7, #132
 18431              		.cfi_def_cfa_offset 20
 18432 0392 BD46     		mov	sp, r7
 18433              		.cfi_def_cfa_register 13
 18434              		@ sp needed
 18435 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 18436              	.L703:
 18437 0396 00BF     		.align	2
 18438              	.L702:
 18439 0398 BC1C0000 		.word	.LC276
 18440 039c 10110000 		.word	.LC150
 18441 03a0 D81C0000 		.word	.LC277
 18442 03a4 FC1C0000 		.word	.LC278
 18443 03a8 1C1D0000 		.word	.LC279
 18444 03ac 441D0000 		.word	.LC280
 18445 03b0 641D0000 		.word	.LC281
 18446              		.cfi_endproc
 18447              	.LFE73:
 18448              		.size	prepare_counter_info, .-prepare_counter_info
 18449              		.section	.rodata
 18450              		.align	2
 18451              	.LC282:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 408


 18452 1d88 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18452      77617265 
 18452      20766572 
 18452      73696F6E 
 18452      3A202573 
 18453 1d9f 00       		.align	2
 18454              	.LC283:
 18455 1da0 506F7369 		.ascii	"Position PID: \000"
 18455      74696F6E 
 18455      20504944 
 18455      3A2000
 18456 1daf 00       		.align	2
 18457              	.LC284:
 18458 1db0 43757272 		.ascii	"Current PID: \000"
 18458      656E7420 
 18458      5049443A 
 18458      2000
 18459 1dbe 0000     		.align	2
 18460              	.LC285:
 18461 1dc0 5265736F 		.ascii	"Resolutions: \000"
 18461      6C757469 
 18461      6F6E733A 
 18461      2000
 18462 1dce 0000     		.align	2
 18463              	.LC286:
 18464 1dd0 4F666673 		.ascii	"Offsets: \000"
 18464      6574733A 
 18464      2000
 18465 1dda 0000     		.align	2
 18466              	.LC287:
 18467 1ddc 4D756C74 		.ascii	"Multipliers: \000"
 18467      69706C69 
 18467      6572733A 
 18467      2000
 18468 1dea 0000     		.align	2
 18469              	.LC288:
 18470 1dec 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18470      656E7420 
 18470      6C6F6F6B 
 18470      75702074 
 18470      61626C65 
 18471 1e1f 662C2025 		.ascii	"f, %f\015\012\000"
 18471      660D0A00 
 18472 1e27 00       		.align	2
 18473              	.LC289:
 18474 1e28 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18474      74696F6E 
 18474      206C696D 
 18474      69742061 
 18474      63746976 
 18475              		.align	2
 18476              	.LC290:
 18477 1e44 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18477      74696F6E 
 18477      206C696D 
 18477      6974733A 
 18477      20696E66 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 409


 18478              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18479              		.align	2
 18480              		.global	prepare_SD_param_info
 18481              		.thumb
 18482              		.thumb_func
 18483              		.type	prepare_SD_param_info, %function
 18484              	prepare_SD_param_info:
 18485              	.LFB74:
2408:..\src/command_processing.c **** 
2409:..\src/command_processing.c **** //==============================================================================
2410:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2411:..\src/command_processing.c **** //==============================================================================
2412:..\src/command_processing.c **** 
2413:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2414:..\src/command_processing.c **** {
 18486              		.loc 1 2414 0
 18487              		.cfi_startproc
 18488              		@ args = 0, pretend = 0, frame = 152
 18489              		@ frame_needed = 1, uses_anonymous_args = 0
 18490 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18491              		.cfi_def_cfa_offset 36
 18492              		.cfi_offset 4, -36
 18493              		.cfi_offset 5, -32
 18494              		.cfi_offset 6, -28
 18495              		.cfi_offset 7, -24
 18496              		.cfi_offset 8, -20
 18497              		.cfi_offset 9, -16
 18498              		.cfi_offset 10, -12
 18499              		.cfi_offset 11, -8
 18500              		.cfi_offset 14, -4
 18501 0004 B1B0     		sub	sp, sp, #196
 18502              		.cfi_def_cfa_offset 232
 18503 0006 0AAF     		add	r7, sp, #40
 18504              		.cfi_def_cfa 7, 192
 18505 0008 7861     		str	r0, [r7, #20]
2415:..\src/command_processing.c ****     char str[100];  
2416:..\src/command_processing.c ****     int i;
2417:..\src/command_processing.c ****            
2418:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2419:..\src/command_processing.c ****     
2420:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18506              		.loc 1 2420 0
 18507 000a AB4B     		ldr	r3, .L769
 18508 000c C7F88C30 		str	r3, [r7, #140]
2421:..\src/command_processing.c ****         
2422:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18509              		.loc 1 2422 0
 18510 0010 AA4A     		ldr	r2, .L769+4
 18511 0012 AB49     		ldr	r1, .L769+8
 18512 0014 7869     		ldr	r0, [r7, #20]
 18513 0016 FFF7FEFF 		bl	sprintf
2423:..\src/command_processing.c ****     
2424:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18514              		.loc 1 2424 0
 18515 001a D7F88C30 		ldr	r3, [r7, #140]
 18516 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18517 0022 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 410


 18518 0024 07F11C03 		add	r3, r7, #28
 18519 0028 A649     		ldr	r1, .L769+12
 18520 002a 1846     		mov	r0, r3
 18521 002c FFF7FEFF 		bl	sprintf
2425:..\src/command_processing.c ****     strcat(info_string, str);
 18522              		.loc 1 2425 0
 18523 0030 07F11C03 		add	r3, r7, #28
 18524 0034 1946     		mov	r1, r3
 18525 0036 7869     		ldr	r0, [r7, #20]
 18526 0038 FFF7FEFF 		bl	strcat
2426:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18527              		.loc 1 2426 0
 18528 003c D7F88C30 		ldr	r3, [r7, #140]
 18529 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18530 0044 002B     		cmp	r3, #0
 18531 0046 02D0     		beq	.L706
 18532 0048 012B     		cmp	r3, #1
 18533 004a 15D0     		beq	.L707
 18534 004c 26E0     		b	.L705
 18535              	.L706:
2427:..\src/command_processing.c ****         case RIGHT_HAND:
2428:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18536              		.loc 1 2428 0
 18537 004e 7869     		ldr	r0, [r7, #20]
 18538 0050 FFF7FEFF 		bl	strlen
 18539 0054 0346     		mov	r3, r0
 18540 0056 1A46     		mov	r2, r3
 18541 0058 7B69     		ldr	r3, [r7, #20]
 18542 005a 1344     		add	r3, r3, r2
 18543 005c 9A4A     		ldr	r2, .L769+16
 18544 005e 1D46     		mov	r5, r3
 18545 0060 1446     		mov	r4, r2
 18546 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18547 0064 2860     		str	r0, [r5]	@ unaligned
 18548 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18549 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18550 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18551 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18552 006e A278     		ldrb	r2, [r4, #2]
 18553 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18554 0072 1346     		mov	r3, r2
 18555 0074 AB74     		strb	r3, [r5, #18]
2429:..\src/command_processing.c ****             break;
 18556              		.loc 1 2429 0
 18557 0076 11E0     		b	.L705
 18558              	.L707:
2430:..\src/command_processing.c ****         case LEFT_HAND:
2431:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18559              		.loc 1 2431 0
 18560 0078 7869     		ldr	r0, [r7, #20]
 18561 007a FFF7FEFF 		bl	strlen
 18562 007e 0346     		mov	r3, r0
 18563 0080 1A46     		mov	r2, r3
 18564 0082 7B69     		ldr	r3, [r7, #20]
 18565 0084 1344     		add	r3, r3, r2
 18566 0086 914A     		ldr	r2, .L769+20
 18567 0088 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 411


 18568 008a 1446     		mov	r4, r2
 18569 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18570 008e 2860     		str	r0, [r5]	@ unaligned
 18571 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18572 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 18573 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18574 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18575 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2432:..\src/command_processing.c ****             break;
 18576              		.loc 1 2432 0
 18577 009a 00BF     		nop
 18578              	.L705:
2433:..\src/command_processing.c ****     }
2434:..\src/command_processing.c **** 
2435:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18579              		.loc 1 2435 0
 18580 009c D7F88C30 		ldr	r3, [r7, #140]
 18581 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18582 00a4 1A46     		mov	r2, r3
 18583 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18584 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18585 00ae 1946     		mov	r1, r3
 18586 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18587 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18588 00b8 07F11C00 		add	r0, r7, #28
 18589 00bc 0093     		str	r3, [sp]
 18590 00be 0B46     		mov	r3, r1
 18591 00c0 8349     		ldr	r1, .L769+24
 18592 00c2 FFF7FEFF 		bl	sprintf
2436:..\src/command_processing.c ****     strcat(info_string, str);
 18593              		.loc 1 2436 0
 18594 00c6 07F11C03 		add	r3, r7, #28
 18595 00ca 1946     		mov	r1, r3
 18596 00cc 7869     		ldr	r0, [r7, #20]
 18597 00ce FFF7FEFF 		bl	strcat
2437:..\src/command_processing.c ****     
2438:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18598              		.loc 1 2438 0
 18599 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18600 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18601 00da 1A46     		mov	r2, r3
 18602 00dc D7F88C30 		ldr	r3, [r7, #140]
 18603 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18604 00e4 1946     		mov	r1, r3
 18605 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18606 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18607 00ee 07F11C00 		add	r0, r7, #28
 18608 00f2 0093     		str	r3, [sp]
 18609 00f4 0B46     		mov	r3, r1
 18610 00f6 7749     		ldr	r1, .L769+28
 18611 00f8 FFF7FEFF 		bl	sprintf
2439:..\src/command_processing.c ****     strcat(info_string, str);
 18612              		.loc 1 2439 0
 18613 00fc 07F11C03 		add	r3, r7, #28
 18614 0100 1946     		mov	r1, r3
 18615 0102 7869     		ldr	r0, [r7, #20]
 18616 0104 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 412


 18617              	.LBB19:
2440:..\src/command_processing.c ****     
2441:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18618              		.loc 1 2441 0
 18619 0108 0023     		movs	r3, #0
 18620 010a 87F89330 		strb	r3, [r7, #147]
 18621 010e 00F05CBE 		b	.L708
 18622              	.L752:
 18623              	.LBB20:
2442:..\src/command_processing.c ****             
2443:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18624              		.loc 1 2443 0
 18625 0112 97F89330 		ldrb	r3, [r7, #147]
 18626 0116 87F88B30 		strb	r3, [r7, #139]
2444:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18627              		.loc 1 2444 0
 18628 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 18629 011e 1346     		mov	r3, r2
 18630 0120 DB00     		lsls	r3, r3, #3
 18631 0122 9B1A     		subs	r3, r3, r2
 18632 0124 1B01     		lsls	r3, r3, #4
 18633 0126 B033     		adds	r3, r3, #176
 18634 0128 D7F88C20 		ldr	r2, [r7, #140]
 18635 012c 1344     		add	r3, r3, r2
 18636 012e C7F88430 		str	r3, [r7, #132]
2445:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 18637              		.loc 1 2445 0
 18638 0132 D7F88430 		ldr	r3, [r7, #132]
 18639 0136 93F86030 		ldrb	r3, [r3, #96]
 18640 013a 87F88330 		strb	r3, [r7, #131]
2446:..\src/command_processing.c ****               
2447:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18641              		.loc 1 2447 0
 18642 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18643 0142 5A1C     		adds	r2, r3, #1
 18644 0144 07F11C03 		add	r3, r7, #28
 18645 0148 6349     		ldr	r1, .L769+32
 18646 014a 1846     		mov	r0, r3
 18647 014c FFF7FEFF 		bl	sprintf
2448:..\src/command_processing.c ****         strcat(info_string, str);
 18648              		.loc 1 2448 0
 18649 0150 07F11C03 		add	r3, r7, #28
 18650 0154 1946     		mov	r1, r3
 18651 0156 7869     		ldr	r0, [r7, #20]
 18652 0158 FFF7FEFF 		bl	strcat
2449:..\src/command_processing.c ****                     
2450:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18653              		.loc 1 2450 0
 18654 015c 7869     		ldr	r0, [r7, #20]
 18655 015e FFF7FEFF 		bl	strlen
 18656 0162 0346     		mov	r3, r0
 18657 0164 1A46     		mov	r2, r3
 18658 0166 7B69     		ldr	r3, [r7, #20]
 18659 0168 1344     		add	r3, r3, r2
 18660 016a 5C4A     		ldr	r2, .L769+36
 18661 016c 1D46     		mov	r5, r3
 18662 016e 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 413


 18663 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18664 0172 2860     		str	r0, [r5]	@ unaligned
 18665 0174 6960     		str	r1, [r5, #4]	@ unaligned
 18666 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 18667 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 18668 017a 03CC     		ldmia	r4!, {r0, r1}
 18669 017c 2861     		str	r0, [r5, #16]	@ unaligned
 18670 017e 6961     		str	r1, [r5, #20]	@ unaligned
 18671 0180 2388     		ldrh	r3, [r4]	@ unaligned
 18672 0182 A278     		ldrb	r2, [r4, #2]
 18673 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 18674 0186 1346     		mov	r3, r2
 18675 0188 AB76     		strb	r3, [r5, #26]
2451:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18676              		.loc 1 2451 0
 18677 018a D7F88430 		ldr	r3, [r7, #132]
 18678 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18679 0192 012B     		cmp	r3, #1
 18680 0194 0CD1     		bne	.L709
2452:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18681              		.loc 1 2452 0
 18682 0196 7869     		ldr	r0, [r7, #20]
 18683 0198 FFF7FEFF 		bl	strlen
 18684 019c 0346     		mov	r3, r0
 18685 019e 1A46     		mov	r2, r3
 18686 01a0 7B69     		ldr	r3, [r7, #20]
 18687 01a2 1344     		add	r3, r3, r2
 18688 01a4 4E4A     		ldr	r2, .L769+40
 18689 01a6 1068     		ldr	r0, [r2]	@ unaligned
 18690 01a8 1860     		str	r0, [r3]	@ unaligned
 18691 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18692 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 18693 01ae 0BE0     		b	.L710
 18694              	.L709:
2453:..\src/command_processing.c ****         else
2454:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18695              		.loc 1 2454 0
 18696 01b0 7869     		ldr	r0, [r7, #20]
 18697 01b2 FFF7FEFF 		bl	strlen
 18698 01b6 0346     		mov	r3, r0
 18699 01b8 1A46     		mov	r2, r3
 18700 01ba 7B69     		ldr	r3, [r7, #20]
 18701 01bc 1344     		add	r3, r3, r2
 18702 01be 494A     		ldr	r2, .L769+44
 18703 01c0 1068     		ldr	r0, [r2]	@ unaligned
 18704 01c2 1860     		str	r0, [r3]	@ unaligned
 18705 01c4 1279     		ldrb	r2, [r2, #4]
 18706 01c6 1A71     		strb	r2, [r3, #4]
 18707              	.L710:
2455:..\src/command_processing.c ****         
2456:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18708              		.loc 1 2456 0
 18709 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18710 01cc 464A     		ldr	r2, .L769+48
 18711 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 18712 01d0 1A46     		mov	r2, r3
 18713 01d2 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 414


 18714 01d6 4549     		ldr	r1, .L769+52
 18715 01d8 1846     		mov	r0, r3
 18716 01da FFF7FEFF 		bl	sprintf
2457:..\src/command_processing.c ****         strcat(info_string, str);
 18717              		.loc 1 2457 0
 18718 01de 07F11C03 		add	r3, r7, #28
 18719 01e2 1946     		mov	r1, r3
 18720 01e4 7869     		ldr	r0, [r7, #20]
 18721 01e6 FFF7FEFF 		bl	strcat
2458:..\src/command_processing.c **** 
2459:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18722              		.loc 1 2459 0
 18723 01ea 7869     		ldr	r0, [r7, #20]
 18724 01ec FFF7FEFF 		bl	strlen
 18725 01f0 0346     		mov	r3, r0
 18726 01f2 1A46     		mov	r2, r3
 18727 01f4 7B69     		ldr	r3, [r7, #20]
 18728 01f6 1344     		add	r3, r3, r2
 18729 01f8 3D4A     		ldr	r2, .L769+56
 18730 01fa 1C46     		mov	r4, r3
 18731 01fc 1346     		mov	r3, r2
 18732 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 18733 0200 2060     		str	r0, [r4]	@ unaligned
 18734 0202 6160     		str	r1, [r4, #4]	@ unaligned
 18735 0204 A260     		str	r2, [r4, #8]	@ unaligned
 18736 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 18737 0208 9B78     		ldrb	r3, [r3, #2]
 18738 020a A281     		strh	r2, [r4, #12]	@ unaligned
 18739 020c A373     		strb	r3, [r4, #14]
2460:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18740              		.loc 1 2460 0
 18741 020e D7F88430 		ldr	r3, [r7, #132]
 18742 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18743 0216 032B     		cmp	r3, #3
 18744 0218 74D0     		beq	.L711
2461:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18745              		.loc 1 2461 0
 18746 021a D7F88430 		ldr	r3, [r7, #132]
 18747 021e 1B68     		ldr	r3, [r3]
 18748 0220 1846     		mov	r0, r3
 18749 0222 FFF7FEFF 		bl	__aeabi_i2d
 18750 0226 4FF00002 		mov	r2, #0
 18751 022a 324B     		ldr	r3, .L769+60
 18752 022c FFF7FEFF 		bl	__aeabi_ddiv
 18753 0230 0346     		mov	r3, r0
 18754 0232 0C46     		mov	r4, r1
 18755 0234 07F11C00 		add	r0, r7, #28
 18756 0238 1A46     		mov	r2, r3
 18757 023a 2346     		mov	r3, r4
 18758 023c 2E49     		ldr	r1, .L769+64
 18759 023e FFF7FEFF 		bl	sprintf
2462:..\src/command_processing.c ****             strcat(info_string, str);
 18760              		.loc 1 2462 0
 18761 0242 07F11C03 		add	r3, r7, #28
 18762 0246 1946     		mov	r1, r3
 18763 0248 7869     		ldr	r0, [r7, #20]
 18764 024a FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 415


2463:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 18765              		.loc 1 2463 0
 18766 024e D7F88430 		ldr	r3, [r7, #132]
 18767 0252 5B68     		ldr	r3, [r3, #4]
 18768 0254 1846     		mov	r0, r3
 18769 0256 FFF7FEFF 		bl	__aeabi_i2d
 18770 025a 4FF00002 		mov	r2, #0
 18771 025e 254B     		ldr	r3, .L769+60
 18772 0260 FFF7FEFF 		bl	__aeabi_ddiv
 18773 0264 0346     		mov	r3, r0
 18774 0266 0C46     		mov	r4, r1
 18775 0268 07F11C00 		add	r0, r7, #28
 18776 026c 1A46     		mov	r2, r3
 18777 026e 2346     		mov	r3, r4
 18778 0270 2249     		ldr	r1, .L769+68
 18779 0272 FFF7FEFF 		bl	sprintf
2464:..\src/command_processing.c ****             strcat(info_string, str);
 18780              		.loc 1 2464 0
 18781 0276 07F11C03 		add	r3, r7, #28
 18782 027a 1946     		mov	r1, r3
 18783 027c 7869     		ldr	r0, [r7, #20]
 18784 027e FFF7FEFF 		bl	strcat
2465:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 18785              		.loc 1 2465 0
 18786 0282 D7F88430 		ldr	r3, [r7, #132]
 18787 0286 9B68     		ldr	r3, [r3, #8]
 18788 0288 1846     		mov	r0, r3
 18789 028a FFF7FEFF 		bl	__aeabi_i2d
 18790 028e 4FF00002 		mov	r2, #0
 18791 0292 184B     		ldr	r3, .L769+60
 18792 0294 FFF7FEFF 		bl	__aeabi_ddiv
 18793 0298 0346     		mov	r3, r0
 18794 029a 0C46     		mov	r4, r1
 18795 029c 07F11C00 		add	r0, r7, #28
 18796 02a0 1A46     		mov	r2, r3
 18797 02a2 2346     		mov	r3, r4
 18798 02a4 1649     		ldr	r1, .L769+72
 18799 02a6 FFF7FEFF 		bl	sprintf
2466:..\src/command_processing.c ****             strcat(info_string, str);
 18800              		.loc 1 2466 0
 18801 02aa 07F11C03 		add	r3, r7, #28
 18802 02ae 1946     		mov	r1, r3
 18803 02b0 7869     		ldr	r0, [r7, #20]
 18804 02b2 FFF7FEFF 		bl	strcat
 18805 02b6 73E0     		b	.L712
 18806              	.L770:
 18807              		.align	2
 18808              	.L769:
 18809 02b8 00000000 		.word	g_mem
 18810 02bc 28110000 		.word	.LC152
 18811 02c0 881D0000 		.word	.LC282
 18812 02c4 60110000 		.word	.LC155
 18813 02c8 10120000 		.word	.LC161
 18814 02cc 24120000 		.word	.LC162
 18815 02d0 CC1B0000 		.word	.LC270
 18816 02d4 F81B0000 		.word	.LC271
 18817 02d8 70120000 		.word	.LC166
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 416


 18818 02dc E0120000 		.word	.LC175
 18819 02e0 D0120000 		.word	.LC173
 18820 02e4 D8120000 		.word	.LC174
 18821 02e8 00000000 		.word	dev_pwm_limit
 18822 02ec 08130000 		.word	.LC178
 18823 02f0 A01D0000 		.word	.LC283
 18824 02f4 0000F040 		.word	1089470464
 18825 02f8 20140000 		.word	.LC190
 18826 02fc 2C140000 		.word	.LC191
 18827 0300 38140000 		.word	.LC192
 18828              	.L711:
2467:..\src/command_processing.c ****         }
2468:..\src/command_processing.c ****         else { 
2469:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 18829              		.loc 1 2469 0
 18830 0304 D7F88430 		ldr	r3, [r7, #132]
 18831 0308 9B69     		ldr	r3, [r3, #24]
 18832 030a 1846     		mov	r0, r3
 18833 030c FFF7FEFF 		bl	__aeabi_i2d
 18834 0310 4FF00002 		mov	r2, #0
 18835 0314 CC4B     		ldr	r3, .L771
 18836 0316 FFF7FEFF 		bl	__aeabi_ddiv
 18837 031a 0346     		mov	r3, r0
 18838 031c 0C46     		mov	r4, r1
 18839 031e 07F11C00 		add	r0, r7, #28
 18840 0322 1A46     		mov	r2, r3
 18841 0324 2346     		mov	r3, r4
 18842 0326 C949     		ldr	r1, .L771+4
 18843 0328 FFF7FEFF 		bl	sprintf
2470:..\src/command_processing.c ****             strcat(info_string, str);
 18844              		.loc 1 2470 0
 18845 032c 07F11C03 		add	r3, r7, #28
 18846 0330 1946     		mov	r1, r3
 18847 0332 7869     		ldr	r0, [r7, #20]
 18848 0334 FFF7FEFF 		bl	strcat
2471:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 18849              		.loc 1 2471 0
 18850 0338 D7F88430 		ldr	r3, [r7, #132]
 18851 033c DB69     		ldr	r3, [r3, #28]
 18852 033e 1846     		mov	r0, r3
 18853 0340 FFF7FEFF 		bl	__aeabi_i2d
 18854 0344 4FF00002 		mov	r2, #0
 18855 0348 BF4B     		ldr	r3, .L771
 18856 034a FFF7FEFF 		bl	__aeabi_ddiv
 18857 034e 0346     		mov	r3, r0
 18858 0350 0C46     		mov	r4, r1
 18859 0352 07F11C00 		add	r0, r7, #28
 18860 0356 1A46     		mov	r2, r3
 18861 0358 2346     		mov	r3, r4
 18862 035a BD49     		ldr	r1, .L771+8
 18863 035c FFF7FEFF 		bl	sprintf
2472:..\src/command_processing.c ****             strcat(info_string, str);
 18864              		.loc 1 2472 0
 18865 0360 07F11C03 		add	r3, r7, #28
 18866 0364 1946     		mov	r1, r3
 18867 0366 7869     		ldr	r0, [r7, #20]
 18868 0368 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 417


2473:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 18869              		.loc 1 2473 0
 18870 036c D7F88430 		ldr	r3, [r7, #132]
 18871 0370 1B6A     		ldr	r3, [r3, #32]
 18872 0372 1846     		mov	r0, r3
 18873 0374 FFF7FEFF 		bl	__aeabi_i2d
 18874 0378 4FF00002 		mov	r2, #0
 18875 037c B24B     		ldr	r3, .L771
 18876 037e FFF7FEFF 		bl	__aeabi_ddiv
 18877 0382 0346     		mov	r3, r0
 18878 0384 0C46     		mov	r4, r1
 18879 0386 07F11C00 		add	r0, r7, #28
 18880 038a 1A46     		mov	r2, r3
 18881 038c 2346     		mov	r3, r4
 18882 038e B149     		ldr	r1, .L771+12
 18883 0390 FFF7FEFF 		bl	sprintf
2474:..\src/command_processing.c ****             strcat(info_string, str);
 18884              		.loc 1 2474 0
 18885 0394 07F11C03 		add	r3, r7, #28
 18886 0398 1946     		mov	r1, r3
 18887 039a 7869     		ldr	r0, [r7, #20]
 18888 039c FFF7FEFF 		bl	strcat
 18889              	.L712:
2475:..\src/command_processing.c ****         }
2476:..\src/command_processing.c **** 
2477:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 18890              		.loc 1 2477 0
 18891 03a0 7869     		ldr	r0, [r7, #20]
 18892 03a2 FFF7FEFF 		bl	strlen
 18893 03a6 0346     		mov	r3, r0
 18894 03a8 1A46     		mov	r2, r3
 18895 03aa 7B69     		ldr	r3, [r7, #20]
 18896 03ac 1344     		add	r3, r3, r2
 18897 03ae AA4A     		ldr	r2, .L771+16
 18898 03b0 1C46     		mov	r4, r3
 18899 03b2 1346     		mov	r3, r2
 18900 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 18901 03b6 2060     		str	r0, [r4]	@ unaligned
 18902 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 18903 03ba A260     		str	r2, [r4, #8]	@ unaligned
 18904 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 18905 03be A381     		strh	r3, [r4, #12]	@ unaligned
2478:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18906              		.loc 1 2478 0
 18907 03c0 D7F88430 		ldr	r3, [r7, #132]
 18908 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18909 03c8 032B     		cmp	r3, #3
 18910 03ca 4ED0     		beq	.L713
2479:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 18911              		.loc 1 2479 0
 18912 03cc D7F88430 		ldr	r3, [r7, #132]
 18913 03d0 DB68     		ldr	r3, [r3, #12]
 18914 03d2 1846     		mov	r0, r3
 18915 03d4 FFF7FEFF 		bl	__aeabi_i2d
 18916 03d8 4FF00002 		mov	r2, #0
 18917 03dc 9A4B     		ldr	r3, .L771
 18918 03de FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 418


 18919 03e2 0346     		mov	r3, r0
 18920 03e4 0C46     		mov	r4, r1
 18921 03e6 07F11C00 		add	r0, r7, #28
 18922 03ea 1A46     		mov	r2, r3
 18923 03ec 2346     		mov	r3, r4
 18924 03ee 9749     		ldr	r1, .L771+4
 18925 03f0 FFF7FEFF 		bl	sprintf
2480:..\src/command_processing.c ****             strcat(info_string, str);
 18926              		.loc 1 2480 0
 18927 03f4 07F11C03 		add	r3, r7, #28
 18928 03f8 1946     		mov	r1, r3
 18929 03fa 7869     		ldr	r0, [r7, #20]
 18930 03fc FFF7FEFF 		bl	strcat
2481:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 18931              		.loc 1 2481 0
 18932 0400 D7F88430 		ldr	r3, [r7, #132]
 18933 0404 1B69     		ldr	r3, [r3, #16]
 18934 0406 1846     		mov	r0, r3
 18935 0408 FFF7FEFF 		bl	__aeabi_i2d
 18936 040c 4FF00002 		mov	r2, #0
 18937 0410 8D4B     		ldr	r3, .L771
 18938 0412 FFF7FEFF 		bl	__aeabi_ddiv
 18939 0416 0346     		mov	r3, r0
 18940 0418 0C46     		mov	r4, r1
 18941 041a 07F11C00 		add	r0, r7, #28
 18942 041e 1A46     		mov	r2, r3
 18943 0420 2346     		mov	r3, r4
 18944 0422 8B49     		ldr	r1, .L771+8
 18945 0424 FFF7FEFF 		bl	sprintf
2482:..\src/command_processing.c ****             strcat(info_string, str);
 18946              		.loc 1 2482 0
 18947 0428 07F11C03 		add	r3, r7, #28
 18948 042c 1946     		mov	r1, r3
 18949 042e 7869     		ldr	r0, [r7, #20]
 18950 0430 FFF7FEFF 		bl	strcat
2483:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 18951              		.loc 1 2483 0
 18952 0434 D7F88430 		ldr	r3, [r7, #132]
 18953 0438 5B69     		ldr	r3, [r3, #20]
 18954 043a 1846     		mov	r0, r3
 18955 043c FFF7FEFF 		bl	__aeabi_i2d
 18956 0440 4FF00002 		mov	r2, #0
 18957 0444 804B     		ldr	r3, .L771
 18958 0446 FFF7FEFF 		bl	__aeabi_ddiv
 18959 044a 0346     		mov	r3, r0
 18960 044c 0C46     		mov	r4, r1
 18961 044e 07F11C00 		add	r0, r7, #28
 18962 0452 1A46     		mov	r2, r3
 18963 0454 2346     		mov	r3, r4
 18964 0456 7F49     		ldr	r1, .L771+12
 18965 0458 FFF7FEFF 		bl	sprintf
2484:..\src/command_processing.c ****             strcat(info_string, str);
 18966              		.loc 1 2484 0
 18967 045c 07F11C03 		add	r3, r7, #28
 18968 0460 1946     		mov	r1, r3
 18969 0462 7869     		ldr	r0, [r7, #20]
 18970 0464 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 419


 18971 0468 4DE0     		b	.L714
 18972              	.L713:
2485:..\src/command_processing.c **** 
2486:..\src/command_processing.c ****         }
2487:..\src/command_processing.c ****         else {
2488:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 18973              		.loc 1 2488 0
 18974 046a D7F88430 		ldr	r3, [r7, #132]
 18975 046e 5B6A     		ldr	r3, [r3, #36]
 18976 0470 1846     		mov	r0, r3
 18977 0472 FFF7FEFF 		bl	__aeabi_i2d
 18978 0476 4FF00002 		mov	r2, #0
 18979 047a 734B     		ldr	r3, .L771
 18980 047c FFF7FEFF 		bl	__aeabi_ddiv
 18981 0480 0346     		mov	r3, r0
 18982 0482 0C46     		mov	r4, r1
 18983 0484 07F11C00 		add	r0, r7, #28
 18984 0488 1A46     		mov	r2, r3
 18985 048a 2346     		mov	r3, r4
 18986 048c 6F49     		ldr	r1, .L771+4
 18987 048e FFF7FEFF 		bl	sprintf
2489:..\src/command_processing.c ****             strcat(info_string, str);
 18988              		.loc 1 2489 0
 18989 0492 07F11C03 		add	r3, r7, #28
 18990 0496 1946     		mov	r1, r3
 18991 0498 7869     		ldr	r0, [r7, #20]
 18992 049a FFF7FEFF 		bl	strcat
2490:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 18993              		.loc 1 2490 0
 18994 049e D7F88430 		ldr	r3, [r7, #132]
 18995 04a2 9B6A     		ldr	r3, [r3, #40]
 18996 04a4 1846     		mov	r0, r3
 18997 04a6 FFF7FEFF 		bl	__aeabi_i2d
 18998 04aa 4FF00002 		mov	r2, #0
 18999 04ae 664B     		ldr	r3, .L771
 19000 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 19001 04b4 0346     		mov	r3, r0
 19002 04b6 0C46     		mov	r4, r1
 19003 04b8 07F11C00 		add	r0, r7, #28
 19004 04bc 1A46     		mov	r2, r3
 19005 04be 2346     		mov	r3, r4
 19006 04c0 6349     		ldr	r1, .L771+8
 19007 04c2 FFF7FEFF 		bl	sprintf
2491:..\src/command_processing.c ****             strcat(info_string, str);
 19008              		.loc 1 2491 0
 19009 04c6 07F11C03 		add	r3, r7, #28
 19010 04ca 1946     		mov	r1, r3
 19011 04cc 7869     		ldr	r0, [r7, #20]
 19012 04ce FFF7FEFF 		bl	strcat
2492:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19013              		.loc 1 2492 0
 19014 04d2 D7F88430 		ldr	r3, [r7, #132]
 19015 04d6 DB6A     		ldr	r3, [r3, #44]
 19016 04d8 1846     		mov	r0, r3
 19017 04da FFF7FEFF 		bl	__aeabi_i2d
 19018 04de 4FF00002 		mov	r2, #0
 19019 04e2 594B     		ldr	r3, .L771
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 420


 19020 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 19021 04e8 0346     		mov	r3, r0
 19022 04ea 0C46     		mov	r4, r1
 19023 04ec 07F11C00 		add	r0, r7, #28
 19024 04f0 1A46     		mov	r2, r3
 19025 04f2 2346     		mov	r3, r4
 19026 04f4 5749     		ldr	r1, .L771+12
 19027 04f6 FFF7FEFF 		bl	sprintf
2493:..\src/command_processing.c ****             strcat(info_string, str);
 19028              		.loc 1 2493 0
 19029 04fa 07F11C03 		add	r3, r7, #28
 19030 04fe 1946     		mov	r1, r3
 19031 0500 7869     		ldr	r0, [r7, #20]
 19032 0502 FFF7FEFF 		bl	strcat
 19033              	.L714:
2494:..\src/command_processing.c ****         }
2495:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19034              		.loc 1 2495 0
 19035 0506 D7F88430 		ldr	r3, [r7, #132]
 19036 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19037 050e 012B     		cmp	r3, #1
 19038 0510 14D1     		bne	.L715
2496:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19039              		.loc 1 2496 0
 19040 0512 7869     		ldr	r0, [r7, #20]
 19041 0514 FFF7FEFF 		bl	strlen
 19042 0518 0346     		mov	r3, r0
 19043 051a 1A46     		mov	r2, r3
 19044 051c 7B69     		ldr	r3, [r7, #20]
 19045 051e 1344     		add	r3, r3, r2
 19046 0520 4E4A     		ldr	r2, .L771+20
 19047 0522 1D46     		mov	r5, r3
 19048 0524 1446     		mov	r4, r2
 19049 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19050 0528 2860     		str	r0, [r5]	@ unaligned
 19051 052a 6960     		str	r1, [r5, #4]	@ unaligned
 19052 052c AA60     		str	r2, [r5, #8]	@ unaligned
 19053 052e EB60     		str	r3, [r5, #12]	@ unaligned
 19054 0530 03CC     		ldmia	r4!, {r0, r1}
 19055 0532 2861     		str	r0, [r5, #16]	@ unaligned
 19056 0534 6961     		str	r1, [r5, #20]	@ unaligned
 19057 0536 2388     		ldrh	r3, [r4]	@ unaligned
 19058 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 19059 053a 13E0     		b	.L716
 19060              	.L715:
2497:..\src/command_processing.c ****         else
2498:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19061              		.loc 1 2498 0
 19062 053c 7869     		ldr	r0, [r7, #20]
 19063 053e FFF7FEFF 		bl	strlen
 19064 0542 0346     		mov	r3, r0
 19065 0544 1A46     		mov	r2, r3
 19066 0546 7B69     		ldr	r3, [r7, #20]
 19067 0548 1344     		add	r3, r3, r2
 19068 054a 454A     		ldr	r2, .L771+24
 19069 054c 1D46     		mov	r5, r3
 19070 054e 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 421


 19071 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19072 0552 2860     		str	r0, [r5]	@ unaligned
 19073 0554 6960     		str	r1, [r5, #4]	@ unaligned
 19074 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 19075 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 19076 055a 03CC     		ldmia	r4!, {r0, r1}
 19077 055c 2861     		str	r0, [r5, #16]	@ unaligned
 19078 055e 6961     		str	r1, [r5, #20]	@ unaligned
 19079 0560 2378     		ldrb	r3, [r4]
 19080 0562 2B76     		strb	r3, [r5, #24]
 19081              	.L716:
2499:..\src/command_processing.c **** 
2500:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19082              		.loc 1 2500 0
 19083 0564 D7F88430 		ldr	r3, [r7, #132]
 19084 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19085 056c 072B     		cmp	r3, #7
 19086 056e 00F2EA80 		bhi	.L717
 19087 0572 01A2     		adr	r2, .L719
 19088 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19089              		.p2align 2
 19090              	.L719:
 19091 0578 99050000 		.word	.L718+1
 19092 057c BD050000 		.word	.L720+1
 19093 0580 E5050000 		.word	.L721+1
 19094 0584 17060000 		.word	.L722+1
 19095 0588 75060000 		.word	.L723+1
 19096 058c A3060000 		.word	.L724+1
 19097 0590 D3060000 		.word	.L725+1
 19098 0594 01070000 		.word	.L726+1
 19099              		.p2align 1
 19100              	.L718:
2501:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2502:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19101              		.loc 1 2502 0
 19102 0598 7869     		ldr	r0, [r7, #20]
 19103 059a FFF7FEFF 		bl	strlen
 19104 059e 0346     		mov	r3, r0
 19105 05a0 1A46     		mov	r2, r3
 19106 05a2 7B69     		ldr	r3, [r7, #20]
 19107 05a4 1344     		add	r3, r3, r2
 19108 05a6 2F4A     		ldr	r2, .L771+28
 19109 05a8 1D46     		mov	r5, r3
 19110 05aa 1446     		mov	r4, r2
 19111 05ac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19112 05ae 2860     		str	r0, [r5]	@ unaligned
 19113 05b0 6960     		str	r1, [r5, #4]	@ unaligned
 19114 05b2 AA60     		str	r2, [r5, #8]	@ unaligned
 19115 05b4 EB60     		str	r3, [r5, #12]	@ unaligned
 19116 05b6 2388     		ldrh	r3, [r4]	@ unaligned
 19117 05b8 2B82     		strh	r3, [r5, #16]	@ unaligned
2503:..\src/command_processing.c ****                 break;
 19118              		.loc 1 2503 0
 19119 05ba C4E0     		b	.L717
 19120              	.L720:
2504:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2505:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 422


 19121              		.loc 1 2505 0
 19122 05bc 7869     		ldr	r0, [r7, #20]
 19123 05be FFF7FEFF 		bl	strlen
 19124 05c2 0346     		mov	r3, r0
 19125 05c4 1A46     		mov	r2, r3
 19126 05c6 7B69     		ldr	r3, [r7, #20]
 19127 05c8 1344     		add	r3, r3, r2
 19128 05ca 274A     		ldr	r2, .L771+32
 19129 05cc 1D46     		mov	r5, r3
 19130 05ce 1446     		mov	r4, r2
 19131 05d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19132 05d2 2860     		str	r0, [r5]	@ unaligned
 19133 05d4 6960     		str	r1, [r5, #4]	@ unaligned
 19134 05d6 AA60     		str	r2, [r5, #8]	@ unaligned
 19135 05d8 EB60     		str	r3, [r5, #12]	@ unaligned
 19136 05da 2068     		ldr	r0, [r4]	@ unaligned
 19137 05dc 2861     		str	r0, [r5, #16]	@ unaligned
 19138 05de 2379     		ldrb	r3, [r4, #4]
 19139 05e0 2B75     		strb	r3, [r5, #20]
2506:..\src/command_processing.c ****                 break;
 19140              		.loc 1 2506 0
 19141 05e2 B0E0     		b	.L717
 19142              	.L721:
2507:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2508:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19143              		.loc 1 2508 0
 19144 05e4 7869     		ldr	r0, [r7, #20]
 19145 05e6 FFF7FEFF 		bl	strlen
 19146 05ea 0346     		mov	r3, r0
 19147 05ec 1A46     		mov	r2, r3
 19148 05ee 7B69     		ldr	r3, [r7, #20]
 19149 05f0 1344     		add	r3, r3, r2
 19150 05f2 1E4A     		ldr	r2, .L771+36
 19151 05f4 1D46     		mov	r5, r3
 19152 05f6 1446     		mov	r4, r2
 19153 05f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19154 05fa 2860     		str	r0, [r5]	@ unaligned
 19155 05fc 6960     		str	r1, [r5, #4]	@ unaligned
 19156 05fe AA60     		str	r2, [r5, #8]	@ unaligned
 19157 0600 EB60     		str	r3, [r5, #12]	@ unaligned
 19158 0602 07CC     		ldmia	r4!, {r0, r1, r2}
 19159 0604 2861     		str	r0, [r5, #16]	@ unaligned
 19160 0606 6961     		str	r1, [r5, #20]	@ unaligned
 19161 0608 AA61     		str	r2, [r5, #24]	@ unaligned
 19162 060a 2388     		ldrh	r3, [r4]	@ unaligned
 19163 060c A278     		ldrb	r2, [r4, #2]
 19164 060e AB83     		strh	r3, [r5, #28]	@ unaligned
 19165 0610 1346     		mov	r3, r2
 19166 0612 AB77     		strb	r3, [r5, #30]
2509:..\src/command_processing.c ****                 break;
 19167              		.loc 1 2509 0
 19168 0614 97E0     		b	.L717
 19169              	.L722:
2510:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2511:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19170              		.loc 1 2511 0
 19171 0616 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 423


 19172 0618 FFF7FEFF 		bl	strlen
 19173 061c 0346     		mov	r3, r0
 19174 061e 1A46     		mov	r2, r3
 19175 0620 7B69     		ldr	r3, [r7, #20]
 19176 0622 1344     		add	r3, r3, r2
 19177 0624 124A     		ldr	r2, .L771+40
 19178 0626 1D46     		mov	r5, r3
 19179 0628 1446     		mov	r4, r2
 19180 062a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19181 062c 2860     		str	r0, [r5]	@ unaligned
 19182 062e 6960     		str	r1, [r5, #4]	@ unaligned
 19183 0630 AA60     		str	r2, [r5, #8]	@ unaligned
 19184 0632 EB60     		str	r3, [r5, #12]	@ unaligned
 19185 0634 03CC     		ldmia	r4!, {r0, r1}
 19186 0636 2861     		str	r0, [r5, #16]	@ unaligned
 19187 0638 6961     		str	r1, [r5, #20]	@ unaligned
 19188 063a 2388     		ldrh	r3, [r4]	@ unaligned
 19189 063c A278     		ldrb	r2, [r4, #2]
 19190 063e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19191 0640 1346     		mov	r3, r2
 19192 0642 AB76     		strb	r3, [r5, #26]
2512:..\src/command_processing.c ****                 break;
 19193              		.loc 1 2512 0
 19194 0644 7FE0     		b	.L717
 19195              	.L772:
 19196 0646 00BF     		.align	2
 19197              	.L771:
 19198 0648 0000F040 		.word	1089470464
 19199 064c 20140000 		.word	.LC190
 19200 0650 2C140000 		.word	.LC191
 19201 0654 38140000 		.word	.LC192
 19202 0658 B01D0000 		.word	.LC284
 19203 065c 60140000 		.word	.LC194
 19204 0660 7C140000 		.word	.LC195
 19205 0664 98140000 		.word	.LC196
 19206 0668 AC140000 		.word	.LC197
 19207 066c C4140000 		.word	.LC198
 19208 0670 E4140000 		.word	.LC199
 19209              	.L723:
2513:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2514:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19210              		.loc 1 2514 0
 19211 0674 7869     		ldr	r0, [r7, #20]
 19212 0676 FFF7FEFF 		bl	strlen
 19213 067a 0346     		mov	r3, r0
 19214 067c 1A46     		mov	r2, r3
 19215 067e 7B69     		ldr	r3, [r7, #20]
 19216 0680 1344     		add	r3, r3, r2
 19217 0682 BA4A     		ldr	r2, .L773
 19218 0684 1C46     		mov	r4, r3
 19219 0686 1546     		mov	r5, r2
 19220 0688 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19221 068a 2060     		str	r0, [r4]	@ unaligned
 19222 068c 6160     		str	r1, [r4, #4]	@ unaligned
 19223 068e A260     		str	r2, [r4, #8]	@ unaligned
 19224 0690 E360     		str	r3, [r4, #12]	@ unaligned
 19225 0692 2868     		ldr	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 424


 19226 0694 2061     		str	r0, [r4, #16]	@ unaligned
 19227 0696 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19228 0698 AA79     		ldrb	r2, [r5, #6]
 19229 069a A382     		strh	r3, [r4, #20]	@ unaligned
 19230 069c 1346     		mov	r3, r2
 19231 069e A375     		strb	r3, [r4, #22]
2515:..\src/command_processing.c ****                 break;
 19232              		.loc 1 2515 0
 19233 06a0 51E0     		b	.L717
 19234              	.L724:
2516:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2517:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19235              		.loc 1 2517 0
 19236 06a2 7869     		ldr	r0, [r7, #20]
 19237 06a4 FFF7FEFF 		bl	strlen
 19238 06a8 0346     		mov	r3, r0
 19239 06aa 1A46     		mov	r2, r3
 19240 06ac 7B69     		ldr	r3, [r7, #20]
 19241 06ae 1344     		add	r3, r3, r2
 19242 06b0 AF4A     		ldr	r2, .L773+4
 19243 06b2 1D46     		mov	r5, r3
 19244 06b4 1446     		mov	r4, r2
 19245 06b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19246 06b8 2860     		str	r0, [r5]	@ unaligned
 19247 06ba 6960     		str	r1, [r5, #4]	@ unaligned
 19248 06bc AA60     		str	r2, [r5, #8]	@ unaligned
 19249 06be EB60     		str	r3, [r5, #12]	@ unaligned
 19250 06c0 03CC     		ldmia	r4!, {r0, r1}
 19251 06c2 2861     		str	r0, [r5, #16]	@ unaligned
 19252 06c4 6961     		str	r1, [r5, #20]	@ unaligned
 19253 06c6 2388     		ldrh	r3, [r4]	@ unaligned
 19254 06c8 A278     		ldrb	r2, [r4, #2]
 19255 06ca 2B83     		strh	r3, [r5, #24]	@ unaligned
 19256 06cc 1346     		mov	r3, r2
 19257 06ce AB76     		strb	r3, [r5, #26]
2518:..\src/command_processing.c ****                 break;
 19258              		.loc 1 2518 0
 19259 06d0 39E0     		b	.L717
 19260              	.L725:
2519:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2520:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19261              		.loc 1 2520 0
 19262 06d2 7869     		ldr	r0, [r7, #20]
 19263 06d4 FFF7FEFF 		bl	strlen
 19264 06d8 0346     		mov	r3, r0
 19265 06da 1A46     		mov	r2, r3
 19266 06dc 7B69     		ldr	r3, [r7, #20]
 19267 06de 1344     		add	r3, r3, r2
 19268 06e0 A44A     		ldr	r2, .L773+8
 19269 06e2 1C46     		mov	r4, r3
 19270 06e4 1546     		mov	r5, r2
 19271 06e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19272 06e8 2060     		str	r0, [r4]	@ unaligned
 19273 06ea 6160     		str	r1, [r4, #4]	@ unaligned
 19274 06ec A260     		str	r2, [r4, #8]	@ unaligned
 19275 06ee E360     		str	r3, [r4, #12]	@ unaligned
 19276 06f0 2868     		ldr	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 425


 19277 06f2 2061     		str	r0, [r4, #16]	@ unaligned
 19278 06f4 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19279 06f6 AA79     		ldrb	r2, [r5, #6]
 19280 06f8 A382     		strh	r3, [r4, #20]	@ unaligned
 19281 06fa 1346     		mov	r3, r2
 19282 06fc A375     		strb	r3, [r4, #22]
2521:..\src/command_processing.c ****                 break;
 19283              		.loc 1 2521 0
 19284 06fe 22E0     		b	.L717
 19285              	.L726:
2522:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2523:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 19286              		.loc 1 2523 0
 19287 0700 7869     		ldr	r0, [r7, #20]
 19288 0702 FFF7FEFF 		bl	strlen
 19289 0706 0346     		mov	r3, r0
 19290 0708 1A46     		mov	r2, r3
 19291 070a 7B69     		ldr	r3, [r7, #20]
 19292 070c 1344     		add	r3, r3, r2
 19293 070e 9A4A     		ldr	r2, .L773+12
 19294 0710 1546     		mov	r5, r2
 19295 0712 9E46     		mov	lr, r3
 19296 0714 05F1200C 		add	ip, r5, #32
 19297              	.L727:
 19298 0718 7446     		mov	r4, lr
 19299 071a 2E46     		mov	r6, r5
 19300 071c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19301 071e 2060     		str	r0, [r4]	@ unaligned
 19302 0720 6160     		str	r1, [r4, #4]	@ unaligned
 19303 0722 A260     		str	r2, [r4, #8]	@ unaligned
 19304 0724 E360     		str	r3, [r4, #12]	@ unaligned
 19305 0726 1035     		adds	r5, r5, #16
 19306 0728 0EF1100E 		add	lr, lr, #16
 19307 072c 6545     		cmp	r5, ip
 19308 072e F3D1     		bne	.L727
 19309 0730 7446     		mov	r4, lr
 19310 0732 2B46     		mov	r3, r5
 19311 0734 07CB     		ldmia	r3!, {r0, r1, r2}
 19312 0736 2060     		str	r0, [r4]	@ unaligned
 19313 0738 6160     		str	r1, [r4, #4]	@ unaligned
 19314 073a A260     		str	r2, [r4, #8]	@ unaligned
 19315 073c 1A88     		ldrh	r2, [r3]	@ unaligned
 19316 073e 9B78     		ldrb	r3, [r3, #2]
 19317 0740 A281     		strh	r2, [r4, #12]	@ unaligned
 19318 0742 A373     		strb	r3, [r4, #14]
2524:..\src/command_processing.c ****                 break;
 19319              		.loc 1 2524 0
 19320 0744 00BF     		nop
 19321              	.L717:
2525:..\src/command_processing.c ****         }
2526:..\src/command_processing.c **** 
2527:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19322              		.loc 1 2527 0
 19323 0746 D7F88430 		ldr	r3, [r7, #132]
 19324 074a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19325 074e 032B     		cmp	r3, #3
 19326 0750 63D8     		bhi	.L767
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 426


 19327 0752 01A2     		adr	r2, .L730
 19328 0754 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19329              		.p2align 2
 19330              	.L730:
 19331 0758 69070000 		.word	.L729+1
 19332 075c 93070000 		.word	.L731+1
 19333 0760 B7070000 		.word	.L732+1
 19334 0764 DD070000 		.word	.L733+1
 19335              		.p2align 1
 19336              	.L729:
2528:..\src/command_processing.c ****             case CONTROL_ANGLE:
2529:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 19337              		.loc 1 2529 0
 19338 0768 7869     		ldr	r0, [r7, #20]
 19339 076a FFF7FEFF 		bl	strlen
 19340 076e 0346     		mov	r3, r0
 19341 0770 1A46     		mov	r2, r3
 19342 0772 7B69     		ldr	r3, [r7, #20]
 19343 0774 1344     		add	r3, r3, r2
 19344 0776 814A     		ldr	r2, .L773+16
 19345 0778 1D46     		mov	r5, r3
 19346 077a 1446     		mov	r4, r2
 19347 077c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19348 077e 2860     		str	r0, [r5]	@ unaligned
 19349 0780 6960     		str	r1, [r5, #4]	@ unaligned
 19350 0782 AA60     		str	r2, [r5, #8]	@ unaligned
 19351 0784 EB60     		str	r3, [r5, #12]	@ unaligned
 19352 0786 03CC     		ldmia	r4!, {r0, r1}
 19353 0788 2861     		str	r0, [r5, #16]	@ unaligned
 19354 078a 6961     		str	r1, [r5, #20]	@ unaligned
 19355 078c 2378     		ldrb	r3, [r4]
 19356 078e 2B76     		strb	r3, [r5, #24]
2530:..\src/command_processing.c ****                 break;
 19357              		.loc 1 2530 0
 19358 0790 44E0     		b	.L734
 19359              	.L731:
2531:..\src/command_processing.c ****             case CONTROL_PWM:
2532:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19360              		.loc 1 2532 0
 19361 0792 7869     		ldr	r0, [r7, #20]
 19362 0794 FFF7FEFF 		bl	strlen
 19363 0798 0346     		mov	r3, r0
 19364 079a 1A46     		mov	r2, r3
 19365 079c 7B69     		ldr	r3, [r7, #20]
 19366 079e 1344     		add	r3, r3, r2
 19367 07a0 774A     		ldr	r2, .L773+20
 19368 07a2 1D46     		mov	r5, r3
 19369 07a4 1446     		mov	r4, r2
 19370 07a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19371 07a8 2860     		str	r0, [r5]	@ unaligned
 19372 07aa 6960     		str	r1, [r5, #4]	@ unaligned
 19373 07ac AA60     		str	r2, [r5, #8]	@ unaligned
 19374 07ae EB60     		str	r3, [r5, #12]	@ unaligned
 19375 07b0 2068     		ldr	r0, [r4]	@ unaligned
 19376 07b2 2861     		str	r0, [r5, #16]	@ unaligned
2533:..\src/command_processing.c ****                 break;
 19377              		.loc 1 2533 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 427


 19378 07b4 32E0     		b	.L734
 19379              	.L732:
2534:..\src/command_processing.c ****             case CONTROL_CURRENT:
2535:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19380              		.loc 1 2535 0
 19381 07b6 7869     		ldr	r0, [r7, #20]
 19382 07b8 FFF7FEFF 		bl	strlen
 19383 07bc 0346     		mov	r3, r0
 19384 07be 1A46     		mov	r2, r3
 19385 07c0 7B69     		ldr	r3, [r7, #20]
 19386 07c2 1344     		add	r3, r3, r2
 19387 07c4 6F4A     		ldr	r2, .L773+24
 19388 07c6 1D46     		mov	r5, r3
 19389 07c8 1446     		mov	r4, r2
 19390 07ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19391 07cc 2860     		str	r0, [r5]	@ unaligned
 19392 07ce 6960     		str	r1, [r5, #4]	@ unaligned
 19393 07d0 AA60     		str	r2, [r5, #8]	@ unaligned
 19394 07d2 EB60     		str	r3, [r5, #12]	@ unaligned
 19395 07d4 03CC     		ldmia	r4!, {r0, r1}
 19396 07d6 2861     		str	r0, [r5, #16]	@ unaligned
 19397 07d8 6961     		str	r1, [r5, #20]	@ unaligned
2536:..\src/command_processing.c ****                 break;
 19398              		.loc 1 2536 0
 19399 07da 1FE0     		b	.L734
 19400              	.L733:
2537:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2538:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19401              		.loc 1 2538 0
 19402 07dc 7869     		ldr	r0, [r7, #20]
 19403 07de FFF7FEFF 		bl	strlen
 19404 07e2 0346     		mov	r3, r0
 19405 07e4 1A46     		mov	r2, r3
 19406 07e6 7B69     		ldr	r3, [r7, #20]
 19407 07e8 1344     		add	r3, r3, r2
 19408 07ea 674A     		ldr	r2, .L773+28
 19409 07ec 1446     		mov	r4, r2
 19410 07ee 9E46     		mov	lr, r3
 19411 07f0 04F1200C 		add	ip, r4, #32
 19412              	.L735:
 19413 07f4 7546     		mov	r5, lr
 19414 07f6 2646     		mov	r6, r4
 19415 07f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19416 07fa 2860     		str	r0, [r5]	@ unaligned
 19417 07fc 6960     		str	r1, [r5, #4]	@ unaligned
 19418 07fe AA60     		str	r2, [r5, #8]	@ unaligned
 19419 0800 EB60     		str	r3, [r5, #12]	@ unaligned
 19420 0802 1034     		adds	r4, r4, #16
 19421 0804 0EF1100E 		add	lr, lr, #16
 19422 0808 6445     		cmp	r4, ip
 19423 080a F3D1     		bne	.L735
 19424 080c 7346     		mov	r3, lr
 19425 080e 2246     		mov	r2, r4
 19426 0810 1068     		ldr	r0, [r2]	@ unaligned
 19427 0812 1860     		str	r0, [r3]	@ unaligned
 19428 0814 1279     		ldrb	r2, [r2, #4]
 19429 0816 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 428


2539:..\src/command_processing.c ****                 break;
 19430              		.loc 1 2539 0
 19431 0818 00E0     		b	.L734
 19432              	.L767:
2540:..\src/command_processing.c ****             default:
2541:..\src/command_processing.c ****                 break;
 19433              		.loc 1 2541 0
 19434 081a 00BF     		nop
 19435              	.L734:
2542:..\src/command_processing.c ****         }
2543:..\src/command_processing.c **** 
2544:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 19436              		.loc 1 2544 0
 19437 081c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19438 0820 D7F88C10 		ldr	r1, [r7, #140]
 19439 0824 1346     		mov	r3, r2
 19440 0826 5B00     		lsls	r3, r3, #1
 19441 0828 1344     		add	r3, r3, r2
 19442 082a 1B01     		lsls	r3, r3, #4
 19443 082c 0B44     		add	r3, r3, r1
 19444 082e 03F5D873 		add	r3, r3, #432
 19445 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19446 0834 002B     		cmp	r3, #0
 19447 0836 1CD0     		beq	.L736
2545:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19448              		.loc 1 2545 0
 19449 0838 7869     		ldr	r0, [r7, #20]
 19450 083a FFF7FEFF 		bl	strlen
 19451 083e 0346     		mov	r3, r0
 19452 0840 1A46     		mov	r2, r3
 19453 0842 7B69     		ldr	r3, [r7, #20]
 19454 0844 1344     		add	r3, r3, r2
 19455 0846 514A     		ldr	r2, .L773+32
 19456 0848 1446     		mov	r4, r2
 19457 084a 9E46     		mov	lr, r3
 19458 084c 04F1200C 		add	ip, r4, #32
 19459              	.L737:
 19460 0850 7546     		mov	r5, lr
 19461 0852 2646     		mov	r6, r4
 19462 0854 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19463 0856 2860     		str	r0, [r5]	@ unaligned
 19464 0858 6960     		str	r1, [r5, #4]	@ unaligned
 19465 085a AA60     		str	r2, [r5, #8]	@ unaligned
 19466 085c EB60     		str	r3, [r5, #12]	@ unaligned
 19467 085e 1034     		adds	r4, r4, #16
 19468 0860 0EF1100E 		add	lr, lr, #16
 19469 0864 6445     		cmp	r4, ip
 19470 0866 F3D1     		bne	.L737
 19471 0868 7346     		mov	r3, lr
 19472 086a 2246     		mov	r2, r4
 19473 086c 1278     		ldrb	r2, [r2]
 19474 086e 1A70     		strb	r2, [r3]
 19475 0870 13E0     		b	.L738
 19476              	.L736:
2546:..\src/command_processing.c ****         else
2547:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19477              		.loc 1 2547 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 429


 19478 0872 7869     		ldr	r0, [r7, #20]
 19479 0874 FFF7FEFF 		bl	strlen
 19480 0878 0346     		mov	r3, r0
 19481 087a 1A46     		mov	r2, r3
 19482 087c 7B69     		ldr	r3, [r7, #20]
 19483 087e 1344     		add	r3, r3, r2
 19484 0880 434A     		ldr	r2, .L773+36
 19485 0882 1C46     		mov	r4, r3
 19486 0884 1546     		mov	r5, r2
 19487 0886 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19488 0888 2060     		str	r0, [r4]	@ unaligned
 19489 088a 6160     		str	r1, [r4, #4]	@ unaligned
 19490 088c A260     		str	r2, [r4, #8]	@ unaligned
 19491 088e E360     		str	r3, [r4, #12]	@ unaligned
 19492 0890 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19493 0892 2061     		str	r0, [r4, #16]	@ unaligned
 19494 0894 6161     		str	r1, [r4, #20]	@ unaligned
 19495 0896 A261     		str	r2, [r4, #24]	@ unaligned
 19496 0898 E361     		str	r3, [r4, #28]	@ unaligned
 19497              	.L738:
2548:..\src/command_processing.c **** 
2549:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19498              		.loc 1 2549 0
 19499 089a 7869     		ldr	r0, [r7, #20]
 19500 089c FFF7FEFF 		bl	strlen
 19501 08a0 0346     		mov	r3, r0
 19502 08a2 1A46     		mov	r2, r3
 19503 08a4 7B69     		ldr	r3, [r7, #20]
 19504 08a6 1344     		add	r3, r3, r2
 19505 08a8 3A4A     		ldr	r2, .L773+40
 19506 08aa 1C46     		mov	r4, r3
 19507 08ac 1346     		mov	r3, r2
 19508 08ae 07CB     		ldmia	r3!, {r0, r1, r2}
 19509 08b0 2060     		str	r0, [r4]	@ unaligned
 19510 08b2 6160     		str	r1, [r4, #4]	@ unaligned
 19511 08b4 A260     		str	r2, [r4, #8]	@ unaligned
 19512 08b6 1B88     		ldrh	r3, [r3]	@ unaligned
 19513 08b8 A381     		strh	r3, [r4, #12]	@ unaligned
2550:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19514              		.loc 1 2550 0
 19515 08ba 0023     		movs	r3, #0
 19516 08bc C7F89430 		str	r3, [r7, #148]
 19517 08c0 30E0     		b	.L739
 19518              	.L741:
2551:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19519              		.loc 1 2551 0
 19520 08c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19521 08c6 D7F88C10 		ldr	r1, [r7, #140]
 19522 08ca 1346     		mov	r3, r2
 19523 08cc 5B00     		lsls	r3, r3, #1
 19524 08ce 1344     		add	r3, r3, r2
 19525 08d0 1B01     		lsls	r3, r3, #4
 19526 08d2 CA18     		adds	r2, r1, r3
 19527 08d4 D7F89430 		ldr	r3, [r7, #148]
 19528 08d8 1344     		add	r3, r3, r2
 19529 08da 03F29513 		addw	r3, r3, #405
 19530 08de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 430


 19531 08e0 1A46     		mov	r2, r3
 19532 08e2 07F11C03 		add	r3, r7, #28
 19533 08e6 2C49     		ldr	r1, .L773+44
 19534 08e8 1846     		mov	r0, r3
 19535 08ea FFF7FEFF 		bl	sprintf
2552:..\src/command_processing.c ****             strcat(info_string, str);
 19536              		.loc 1 2552 0
 19537 08ee 07F11C03 		add	r3, r7, #28
 19538 08f2 1946     		mov	r1, r3
 19539 08f4 7869     		ldr	r0, [r7, #20]
 19540 08f6 FFF7FEFF 		bl	strcat
2553:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19541              		.loc 1 2553 0
 19542 08fa D7F89430 		ldr	r3, [r7, #148]
 19543 08fe 022B     		cmp	r3, #2
 19544 0900 0BD0     		beq	.L740
2554:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19545              		.loc 1 2554 0
 19546 0902 7869     		ldr	r0, [r7, #20]
 19547 0904 FFF7FEFF 		bl	strlen
 19548 0908 0346     		mov	r3, r0
 19549 090a 1A46     		mov	r2, r3
 19550 090c 7B69     		ldr	r3, [r7, #20]
 19551 090e 1344     		add	r3, r3, r2
 19552 0910 224A     		ldr	r2, .L773+48
 19553 0912 1188     		ldrh	r1, [r2]	@ unaligned
 19554 0914 9278     		ldrb	r2, [r2, #2]
 19555 0916 1980     		strh	r1, [r3]	@ unaligned
 19556 0918 9A70     		strb	r2, [r3, #2]
 19557              	.L740:
2550:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19558              		.loc 1 2550 0 discriminator 2
 19559 091a D7F89430 		ldr	r3, [r7, #148]
 19560 091e 0133     		adds	r3, r3, #1
 19561 0920 C7F89430 		str	r3, [r7, #148]
 19562              	.L739:
2550:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19563              		.loc 1 2550 0 is_stmt 0 discriminator 1
 19564 0924 D7F89430 		ldr	r3, [r7, #148]
 19565 0928 022B     		cmp	r3, #2
 19566 092a CADD     		ble	.L741
2555:..\src/command_processing.c ****             }                
2556:..\src/command_processing.c ****         }
2557:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19567              		.loc 1 2557 0 is_stmt 1
 19568 092c 7869     		ldr	r0, [r7, #20]
 19569 092e FFF7FEFF 		bl	strlen
 19570 0932 0346     		mov	r3, r0
 19571 0934 1A46     		mov	r2, r3
 19572 0936 7B69     		ldr	r3, [r7, #20]
 19573 0938 1344     		add	r3, r3, r2
 19574 093a 194A     		ldr	r2, .L773+52
 19575 093c 1188     		ldrh	r1, [r2]	@ unaligned
 19576 093e 9278     		ldrb	r2, [r2, #2]
 19577 0940 1980     		strh	r1, [r3]	@ unaligned
 19578 0942 9A70     		strb	r2, [r3, #2]
2558:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 431


2559:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19579              		.loc 1 2559 0
 19580 0944 7869     		ldr	r0, [r7, #20]
 19581 0946 FFF7FEFF 		bl	strlen
 19582 094a 0346     		mov	r3, r0
 19583 094c 1A46     		mov	r2, r3
 19584 094e 7B69     		ldr	r3, [r7, #20]
 19585 0950 1344     		add	r3, r3, r2
 19586 0952 1449     		ldr	r1, .L773+56
 19587 0954 1A46     		mov	r2, r3
 19588 0956 0B46     		mov	r3, r1
 19589 0958 03CB     		ldmia	r3!, {r0, r1}
 19590 095a 1060     		str	r0, [r2]	@ unaligned
 19591 095c 5160     		str	r1, [r2, #4]	@ unaligned
 19592 095e 1B88     		ldrh	r3, [r3]	@ unaligned
 19593 0960 1381     		strh	r3, [r2, #8]	@ unaligned
2560:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19594              		.loc 1 2560 0
 19595 0962 0023     		movs	r3, #0
 19596 0964 C7F89430 		str	r3, [r7, #148]
 19597 0968 5EE0     		b	.L742
 19598              	.L774:
 19599 096a 00BF     		.align	2
 19600              	.L773:
 19601 096c 00150000 		.word	.LC200
 19602 0970 18150000 		.word	.LC201
 19603 0974 34150000 		.word	.LC202
 19604 0978 4C150000 		.word	.LC203
 19605 097c 7C150000 		.word	.LC204
 19606 0980 98150000 		.word	.LC205
 19607 0984 AC150000 		.word	.LC206
 19608 0988 C4150000 		.word	.LC207
 19609 098c EC150000 		.word	.LC208
 19610 0990 10160000 		.word	.LC209
 19611 0994 C01D0000 		.word	.LC285
 19612 0998 40130000 		.word	.LC181
 19613 099c 44130000 		.word	.LC182
 19614 09a0 10110000 		.word	.LC150
 19615 09a4 D01D0000 		.word	.LC286
 19616              	.L744:
2561:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19617              		.loc 1 2561 0
 19618 09a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19619 09ac D7F88C10 		ldr	r1, [r7, #140]
 19620 09b0 1346     		mov	r3, r2
 19621 09b2 5B00     		lsls	r3, r3, #1
 19622 09b4 1344     		add	r3, r3, r2
 19623 09b6 9B00     		lsls	r3, r3, #2
 19624 09b8 D7F89420 		ldr	r2, [r7, #148]
 19625 09bc 1344     		add	r3, r3, r2
 19626 09be 6633     		adds	r3, r3, #102
 19627 09c0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19628 09c4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19629 09c8 D7F88C00 		ldr	r0, [r7, #140]
 19630 09cc 1346     		mov	r3, r2
 19631 09ce 5B00     		lsls	r3, r3, #1
 19632 09d0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 432


 19633 09d2 1B01     		lsls	r3, r3, #4
 19634 09d4 C218     		adds	r2, r0, r3
 19635 09d6 D7F89430 		ldr	r3, [r7, #148]
 19636 09da 1344     		add	r3, r3, r2
 19637 09dc 03F29513 		addw	r3, r3, #405
 19638 09e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19639 09e2 41FA03F2 		asr	r2, r1, r3
 19640 09e6 07F11C03 		add	r3, r7, #28
 19641 09ea CF49     		ldr	r1, .L775
 19642 09ec 1846     		mov	r0, r3
 19643 09ee FFF7FEFF 		bl	sprintf
2562:..\src/command_processing.c ****             strcat(info_string, str);
 19644              		.loc 1 2562 0
 19645 09f2 07F11C03 		add	r3, r7, #28
 19646 09f6 1946     		mov	r1, r3
 19647 09f8 7869     		ldr	r0, [r7, #20]
 19648 09fa FFF7FEFF 		bl	strcat
2563:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19649              		.loc 1 2563 0
 19650 09fe D7F89430 		ldr	r3, [r7, #148]
 19651 0a02 022B     		cmp	r3, #2
 19652 0a04 0BD0     		beq	.L743
2564:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19653              		.loc 1 2564 0
 19654 0a06 7869     		ldr	r0, [r7, #20]
 19655 0a08 FFF7FEFF 		bl	strlen
 19656 0a0c 0346     		mov	r3, r0
 19657 0a0e 1A46     		mov	r2, r3
 19658 0a10 7B69     		ldr	r3, [r7, #20]
 19659 0a12 1344     		add	r3, r3, r2
 19660 0a14 C54A     		ldr	r2, .L775+4
 19661 0a16 1188     		ldrh	r1, [r2]	@ unaligned
 19662 0a18 9278     		ldrb	r2, [r2, #2]
 19663 0a1a 1980     		strh	r1, [r3]	@ unaligned
 19664 0a1c 9A70     		strb	r2, [r3, #2]
 19665              	.L743:
2560:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19666              		.loc 1 2560 0 discriminator 2
 19667 0a1e D7F89430 		ldr	r3, [r7, #148]
 19668 0a22 0133     		adds	r3, r3, #1
 19669 0a24 C7F89430 		str	r3, [r7, #148]
 19670              	.L742:
2560:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19671              		.loc 1 2560 0 is_stmt 0 discriminator 1
 19672 0a28 D7F89430 		ldr	r3, [r7, #148]
 19673 0a2c 022B     		cmp	r3, #2
 19674 0a2e BBDD     		ble	.L744
2565:..\src/command_processing.c ****             }
2566:..\src/command_processing.c ****         }
2567:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19675              		.loc 1 2567 0 is_stmt 1
 19676 0a30 7869     		ldr	r0, [r7, #20]
 19677 0a32 FFF7FEFF 		bl	strlen
 19678 0a36 0346     		mov	r3, r0
 19679 0a38 1A46     		mov	r2, r3
 19680 0a3a 7B69     		ldr	r3, [r7, #20]
 19681 0a3c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 433


 19682 0a3e BC4A     		ldr	r2, .L775+8
 19683 0a40 1188     		ldrh	r1, [r2]	@ unaligned
 19684 0a42 9278     		ldrb	r2, [r2, #2]
 19685 0a44 1980     		strh	r1, [r3]	@ unaligned
 19686 0a46 9A70     		strb	r2, [r3, #2]
2568:..\src/command_processing.c ****             
2569:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19687              		.loc 1 2569 0
 19688 0a48 7869     		ldr	r0, [r7, #20]
 19689 0a4a FFF7FEFF 		bl	strlen
 19690 0a4e 0346     		mov	r3, r0
 19691 0a50 1A46     		mov	r2, r3
 19692 0a52 7B69     		ldr	r3, [r7, #20]
 19693 0a54 1344     		add	r3, r3, r2
 19694 0a56 B74A     		ldr	r2, .L775+12
 19695 0a58 1C46     		mov	r4, r3
 19696 0a5a 1346     		mov	r3, r2
 19697 0a5c 07CB     		ldmia	r3!, {r0, r1, r2}
 19698 0a5e 2060     		str	r0, [r4]	@ unaligned
 19699 0a60 6160     		str	r1, [r4, #4]	@ unaligned
 19700 0a62 A260     		str	r2, [r4, #8]	@ unaligned
 19701 0a64 1B88     		ldrh	r3, [r3]	@ unaligned
 19702 0a66 A381     		strh	r3, [r4, #12]	@ unaligned
2570:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19703              		.loc 1 2570 0
 19704 0a68 0023     		movs	r3, #0
 19705 0a6a C7F89430 		str	r3, [r7, #148]
 19706 0a6e 35E0     		b	.L745
 19707              	.L747:
2571:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19708              		.loc 1 2571 0
 19709 0a70 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19710 0a74 D7F88C10 		ldr	r1, [r7, #140]
 19711 0a78 1346     		mov	r3, r2
 19712 0a7a 5B00     		lsls	r3, r3, #1
 19713 0a7c 1344     		add	r3, r3, r2
 19714 0a7e 9B00     		lsls	r3, r3, #2
 19715 0a80 D7F89420 		ldr	r2, [r7, #148]
 19716 0a84 1344     		add	r3, r3, r2
 19717 0a86 6833     		adds	r3, r3, #104
 19718 0a88 9B00     		lsls	r3, r3, #2
 19719 0a8a 0B44     		add	r3, r3, r1
 19720 0a8c 5B68     		ldr	r3, [r3, #4]	@ float
 19721 0a8e 1846     		mov	r0, r3
 19722 0a90 FFF7FEFF 		bl	__aeabi_f2d
 19723 0a94 0346     		mov	r3, r0
 19724 0a96 0C46     		mov	r4, r1
 19725 0a98 07F11C00 		add	r0, r7, #28
 19726 0a9c 1A46     		mov	r2, r3
 19727 0a9e 2346     		mov	r3, r4
 19728 0aa0 A549     		ldr	r1, .L775+16
 19729 0aa2 FFF7FEFF 		bl	sprintf
2572:..\src/command_processing.c ****             strcat(info_string, str);
 19730              		.loc 1 2572 0
 19731 0aa6 07F11C03 		add	r3, r7, #28
 19732 0aaa 1946     		mov	r1, r3
 19733 0aac 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 434


 19734 0aae FFF7FEFF 		bl	strcat
2573:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19735              		.loc 1 2573 0
 19736 0ab2 D7F89430 		ldr	r3, [r7, #148]
 19737 0ab6 022B     		cmp	r3, #2
 19738 0ab8 0BD0     		beq	.L746
2574:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19739              		.loc 1 2574 0
 19740 0aba 7869     		ldr	r0, [r7, #20]
 19741 0abc FFF7FEFF 		bl	strlen
 19742 0ac0 0346     		mov	r3, r0
 19743 0ac2 1A46     		mov	r2, r3
 19744 0ac4 7B69     		ldr	r3, [r7, #20]
 19745 0ac6 1344     		add	r3, r3, r2
 19746 0ac8 984A     		ldr	r2, .L775+4
 19747 0aca 1188     		ldrh	r1, [r2]	@ unaligned
 19748 0acc 9278     		ldrb	r2, [r2, #2]
 19749 0ace 1980     		strh	r1, [r3]	@ unaligned
 19750 0ad0 9A70     		strb	r2, [r3, #2]
 19751              	.L746:
2570:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19752              		.loc 1 2570 0 discriminator 2
 19753 0ad2 D7F89430 		ldr	r3, [r7, #148]
 19754 0ad6 0133     		adds	r3, r3, #1
 19755 0ad8 C7F89430 		str	r3, [r7, #148]
 19756              	.L745:
2570:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19757              		.loc 1 2570 0 is_stmt 0 discriminator 1
 19758 0adc D7F89430 		ldr	r3, [r7, #148]
 19759 0ae0 022B     		cmp	r3, #2
 19760 0ae2 C5DD     		ble	.L747
2575:..\src/command_processing.c ****             }
2576:..\src/command_processing.c ****         }
2577:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 19761              		.loc 1 2577 0 is_stmt 1
 19762 0ae4 7869     		ldr	r0, [r7, #20]
 19763 0ae6 FFF7FEFF 		bl	strlen
 19764 0aea 0346     		mov	r3, r0
 19765 0aec 1A46     		mov	r2, r3
 19766 0aee 7B69     		ldr	r3, [r7, #20]
 19767 0af0 1344     		add	r3, r3, r2
 19768 0af2 8F4A     		ldr	r2, .L775+8
 19769 0af4 1188     		ldrh	r1, [r2]	@ unaligned
 19770 0af6 9278     		ldrb	r2, [r2, #2]
 19771 0af8 1980     		strh	r1, [r3]	@ unaligned
 19772 0afa 9A70     		strb	r2, [r3, #2]
2578:..\src/command_processing.c **** 
2579:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 19773              		.loc 1 2579 0
 19774 0afc D7F88430 		ldr	r3, [r7, #132]
 19775 0b00 5B6C     		ldr	r3, [r3, #68]	@ float
 19776 0b02 1846     		mov	r0, r3
 19777 0b04 FFF7FEFF 		bl	__aeabi_f2d
 19778 0b08 C7E90201 		strd	r0, [r7, #8]
 19779 0b0c D7F88430 		ldr	r3, [r7, #132]
 19780 0b10 9B6C     		ldr	r3, [r3, #72]	@ float
 19781 0b12 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 435


 19782 0b14 FFF7FEFF 		bl	__aeabi_f2d
 19783 0b18 0446     		mov	r4, r0
 19784 0b1a 0D46     		mov	r5, r1
 19785 0b1c D7F88430 		ldr	r3, [r7, #132]
 19786 0b20 DB6C     		ldr	r3, [r3, #76]	@ float
 19787 0b22 1846     		mov	r0, r3
 19788 0b24 FFF7FEFF 		bl	__aeabi_f2d
 19789 0b28 8046     		mov	r8, r0
 19790 0b2a 8946     		mov	r9, r1
 19791 0b2c D7F88430 		ldr	r3, [r7, #132]
 19792 0b30 1B6D     		ldr	r3, [r3, #80]	@ float
 19793 0b32 1846     		mov	r0, r3
 19794 0b34 FFF7FEFF 		bl	__aeabi_f2d
 19795 0b38 8246     		mov	r10, r0
 19796 0b3a 8B46     		mov	fp, r1
 19797 0b3c D7F88430 		ldr	r3, [r7, #132]
 19798 0b40 5B6D     		ldr	r3, [r3, #84]	@ float
 19799 0b42 1846     		mov	r0, r3
 19800 0b44 FFF7FEFF 		bl	__aeabi_f2d
 19801 0b48 C7E90001 		strd	r0, [r7]
 19802 0b4c D7F88430 		ldr	r3, [r7, #132]
 19803 0b50 9B6D     		ldr	r3, [r3, #88]	@ float
 19804 0b52 1846     		mov	r0, r3
 19805 0b54 FFF7FEFF 		bl	__aeabi_f2d
 19806 0b58 0246     		mov	r2, r0
 19807 0b5a 0B46     		mov	r3, r1
 19808 0b5c 07F11C00 		add	r0, r7, #28
 19809 0b60 CDE90823 		strd	r2, [sp, #32]
 19810 0b64 D7E90012 		ldrd	r1, [r7]
 19811 0b68 CDE90612 		strd	r1, [sp, #24]
 19812 0b6c CDE904AB 		strd	r10, [sp, #16]
 19813 0b70 CDE90289 		strd	r8, [sp, #8]
 19814 0b74 CDE90045 		strd	r4, [sp]
 19815 0b78 D7E90223 		ldrd	r2, [r7, #8]
 19816 0b7c 6F49     		ldr	r1, .L775+20
 19817 0b7e FFF7FEFF 		bl	sprintf
2580:..\src/command_processing.c **** 		strcat(info_string, str);
 19818              		.loc 1 2580 0
 19819 0b82 07F11C03 		add	r3, r7, #28
 19820 0b86 1946     		mov	r1, r3
 19821 0b88 7869     		ldr	r0, [r7, #20]
 19822 0b8a FFF7FEFF 		bl	strcat
2581:..\src/command_processing.c **** 
2582:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 19823              		.loc 1 2582 0
 19824 0b8e D7F88430 		ldr	r3, [r7, #132]
 19825 0b92 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 19826 0b96 1A46     		mov	r2, r3
 19827 0b98 07F11C03 		add	r3, r7, #28
 19828 0b9c 6849     		ldr	r1, .L775+24
 19829 0b9e 1846     		mov	r0, r3
 19830 0ba0 FFF7FEFF 		bl	sprintf
2583:..\src/command_processing.c **** 		strcat(info_string, str);
 19831              		.loc 1 2583 0
 19832 0ba4 07F11C03 		add	r3, r7, #28
 19833 0ba8 1946     		mov	r1, r3
 19834 0baa 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 436


 19835 0bac FFF7FEFF 		bl	strcat
2584:..\src/command_processing.c **** 
2585:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 19836              		.loc 1 2585 0
 19837 0bb0 D7F88430 		ldr	r3, [r7, #132]
 19838 0bb4 596B     		ldr	r1, [r3, #52]
 19839 0bb6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19840 0bba D7F88C00 		ldr	r0, [r7, #140]
 19841 0bbe 1346     		mov	r3, r2
 19842 0bc0 5B00     		lsls	r3, r3, #1
 19843 0bc2 1344     		add	r3, r3, r2
 19844 0bc4 1B01     		lsls	r3, r3, #4
 19845 0bc6 0344     		add	r3, r3, r0
 19846 0bc8 03F29513 		addw	r3, r3, #405
 19847 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19848 0bce 41FA03F4 		asr	r4, r1, r3
 19849 0bd2 D7F88430 		ldr	r3, [r7, #132]
 19850 0bd6 996B     		ldr	r1, [r3, #56]
 19851 0bd8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19852 0bdc D7F88C00 		ldr	r0, [r7, #140]
 19853 0be0 1346     		mov	r3, r2
 19854 0be2 5B00     		lsls	r3, r3, #1
 19855 0be4 1344     		add	r3, r3, r2
 19856 0be6 1B01     		lsls	r3, r3, #4
 19857 0be8 0344     		add	r3, r3, r0
 19858 0bea 03F29513 		addw	r3, r3, #405
 19859 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19860 0bf0 41FA03F3 		asr	r3, r1, r3
 19861 0bf4 07F11C00 		add	r0, r7, #28
 19862 0bf8 2246     		mov	r2, r4
 19863 0bfa 5249     		ldr	r1, .L775+28
 19864 0bfc FFF7FEFF 		bl	sprintf
2586:..\src/command_processing.c **** 		strcat(info_string, str);
 19865              		.loc 1 2586 0
 19866 0c00 07F11C03 		add	r3, r7, #28
 19867 0c04 1946     		mov	r1, r3
 19868 0c06 7869     		ldr	r0, [r7, #20]
 19869 0c08 FFF7FEFF 		bl	strcat
2587:..\src/command_processing.c **** 
2588:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 19870              		.loc 1 2588 0
 19871 0c0c D7F88430 		ldr	r3, [r7, #132]
 19872 0c10 B3F95C30 		ldrsh	r3, [r3, #92]
 19873 0c14 1A46     		mov	r2, r3
 19874 0c16 07F11C03 		add	r3, r7, #28
 19875 0c1a 4B49     		ldr	r1, .L775+32
 19876 0c1c 1846     		mov	r0, r3
 19877 0c1e FFF7FEFF 		bl	sprintf
2589:..\src/command_processing.c **** 		strcat(info_string, str);
 19878              		.loc 1 2589 0
 19879 0c22 07F11C03 		add	r3, r7, #28
 19880 0c26 1946     		mov	r1, r3
 19881 0c28 7869     		ldr	r0, [r7, #20]
 19882 0c2a FFF7FEFF 		bl	strcat
2590:..\src/command_processing.c **** 
2591:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 19883              		.loc 1 2591 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 437


 19884 0c2e D7F88430 		ldr	r3, [r7, #132]
 19885 0c32 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19886 0c36 022B     		cmp	r3, #2
 19887 0c38 18D0     		beq	.L748
2592:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19888              		.loc 1 2592 0 discriminator 1
 19889 0c3a D7F88430 		ldr	r3, [r7, #132]
 19890 0c3e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2591:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19891              		.loc 1 2591 0 discriminator 1
 19892 0c42 032B     		cmp	r3, #3
 19893 0c44 12D0     		beq	.L748
2593:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19894              		.loc 1 2593 0
 19895 0c46 D7F88430 		ldr	r3, [r7, #132]
 19896 0c4a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2592:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19897              		.loc 1 2592 0
 19898 0c4e 042B     		cmp	r3, #4
 19899 0c50 0CD0     		beq	.L748
2594:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19900              		.loc 1 2594 0
 19901 0c52 D7F88430 		ldr	r3, [r7, #132]
 19902 0c56 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2593:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19903              		.loc 1 2593 0
 19904 0c5a 052B     		cmp	r3, #5
 19905 0c5c 06D0     		beq	.L748
2595:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 19906              		.loc 1 2595 0
 19907 0c5e D7F88430 		ldr	r3, [r7, #132]
 19908 0c62 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2594:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19909              		.loc 1 2594 0
 19910 0c66 072B     		cmp	r3, #7
 19911 0c68 40F0AA80 		bne	.L749
 19912              	.L748:
2596:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 19913              		.loc 1 2596 0
 19914 0c6c D7F88C30 		ldr	r3, [r7, #140]
 19915 0c70 B3F8F031 		ldrh	r3, [r3, #496]
 19916 0c74 1A46     		mov	r2, r3
 19917 0c76 D7F88C30 		ldr	r3, [r7, #140]
 19918 0c7a B3F8F231 		ldrh	r3, [r3, #498]
 19919 0c7e 07F11C00 		add	r0, r7, #28
 19920 0c82 3249     		ldr	r1, .L775+36
 19921 0c84 FFF7FEFF 		bl	sprintf
2597:..\src/command_processing.c **** 			strcat(info_string, str);
 19922              		.loc 1 2597 0
 19923 0c88 07F11C03 		add	r3, r7, #28
 19924 0c8c 1946     		mov	r1, r3
 19925 0c8e 7869     		ldr	r0, [r7, #20]
 19926 0c90 FFF7FEFF 		bl	strcat
2598:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19927              		.loc 1 2598 0
 19928 0c94 7869     		ldr	r0, [r7, #20]
 19929 0c96 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 438


 19930 0c9a 0346     		mov	r3, r0
 19931 0c9c 1A46     		mov	r2, r3
 19932 0c9e 7B69     		ldr	r3, [r7, #20]
 19933 0ca0 1344     		add	r3, r3, r2
 19934 0ca2 234A     		ldr	r2, .L775+8
 19935 0ca4 1188     		ldrh	r1, [r2]	@ unaligned
 19936 0ca6 9278     		ldrb	r2, [r2, #2]
 19937 0ca8 1980     		strh	r1, [r3]	@ unaligned
 19938 0caa 9A70     		strb	r2, [r3, #2]
2599:..\src/command_processing.c **** 
2600:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 19939              		.loc 1 2600 0
 19940 0cac D7F88C30 		ldr	r3, [r7, #140]
 19941 0cb0 D3F8F421 		ldr	r2, [r3, #500]
 19942 0cb4 D7F88C30 		ldr	r3, [r7, #140]
 19943 0cb8 D3F8F831 		ldr	r3, [r3, #504]
 19944 0cbc 07F11C00 		add	r0, r7, #28
 19945 0cc0 2349     		ldr	r1, .L775+40
 19946 0cc2 FFF7FEFF 		bl	sprintf
2601:..\src/command_processing.c **** 			strcat(info_string, str);
 19947              		.loc 1 2601 0
 19948 0cc6 07F11C03 		add	r3, r7, #28
 19949 0cca 1946     		mov	r1, r3
 19950 0ccc 7869     		ldr	r0, [r7, #20]
 19951 0cce FFF7FEFF 		bl	strcat
2602:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19952              		.loc 1 2602 0
 19953 0cd2 7869     		ldr	r0, [r7, #20]
 19954 0cd4 FFF7FEFF 		bl	strlen
 19955 0cd8 0346     		mov	r3, r0
 19956 0cda 1A46     		mov	r2, r3
 19957 0cdc 7B69     		ldr	r3, [r7, #20]
 19958 0cde 1344     		add	r3, r3, r2
 19959 0ce0 134A     		ldr	r2, .L775+8
 19960 0ce2 1188     		ldrh	r1, [r2]	@ unaligned
 19961 0ce4 9278     		ldrb	r2, [r2, #2]
 19962 0ce6 1980     		strh	r1, [r3]	@ unaligned
 19963 0ce8 9A70     		strb	r2, [r3, #2]
2603:..\src/command_processing.c **** 
2604:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 19964              		.loc 1 2604 0
 19965 0cea D7F88C30 		ldr	r3, [r7, #140]
 19966 0cee 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 19967 0cf2 002B     		cmp	r3, #0
 19968 0cf4 30D0     		beq	.L750
2605:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 19969              		.loc 1 2605 0
 19970 0cf6 7869     		ldr	r0, [r7, #20]
 19971 0cf8 FFF7FEFF 		bl	strlen
 19972 0cfc 0346     		mov	r3, r0
 19973 0cfe 1A46     		mov	r2, r3
 19974 0d00 7B69     		ldr	r3, [r7, #20]
 19975 0d02 1344     		add	r3, r3, r2
 19976 0d04 134A     		ldr	r2, .L775+44
 19977 0d06 1D46     		mov	r5, r3
 19978 0d08 1446     		mov	r4, r2
 19979 0d0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 439


 19980 0d0c 2860     		str	r0, [r5]	@ unaligned
 19981 0d0e 6960     		str	r1, [r5, #4]	@ unaligned
 19982 0d10 AA60     		str	r2, [r5, #8]	@ unaligned
 19983 0d12 EB60     		str	r3, [r5, #12]	@ unaligned
 19984 0d14 03CC     		ldmia	r4!, {r0, r1}
 19985 0d16 2861     		str	r0, [r5, #16]	@ unaligned
 19986 0d18 6961     		str	r1, [r5, #20]	@ unaligned
 19987 0d1a 2388     		ldrh	r3, [r4]	@ unaligned
 19988 0d1c A278     		ldrb	r2, [r4, #2]
 19989 0d1e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19990 0d20 1346     		mov	r3, r2
 19991 0d22 AB76     		strb	r3, [r5, #26]
 19992 0d24 2CE0     		b	.L751
 19993              	.L776:
 19994 0d26 00BF     		.align	2
 19995              	.L775:
 19996 0d28 EC160000 		.word	.LC217
 19997 0d2c 44130000 		.word	.LC182
 19998 0d30 10110000 		.word	.LC150
 19999 0d34 DC1D0000 		.word	.LC287
 20000 0d38 0C170000 		.word	.LC219
 20001 0d3c EC1D0000 		.word	.LC288
 20002 0d40 281E0000 		.word	.LC289
 20003 0d44 441E0000 		.word	.LC290
 20004 0d48 AC170000 		.word	.LC225
 20005 0d4c A0180000 		.word	.LC233
 20006 0d50 C4180000 		.word	.LC234
 20007 0d54 14190000 		.word	.LC237
 20008              	.L750:
2606:..\src/command_processing.c **** 			else
2607:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20009              		.loc 1 2607 0
 20010 0d58 7869     		ldr	r0, [r7, #20]
 20011 0d5a FFF7FEFF 		bl	strlen
 20012 0d5e 0346     		mov	r3, r0
 20013 0d60 1A46     		mov	r2, r3
 20014 0d62 7B69     		ldr	r3, [r7, #20]
 20015 0d64 1344     		add	r3, r3, r2
 20016 0d66 D04A     		ldr	r2, .L777
 20017 0d68 1D46     		mov	r5, r3
 20018 0d6a 1446     		mov	r4, r2
 20019 0d6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20020 0d6e 2860     		str	r0, [r5]	@ unaligned
 20021 0d70 6960     		str	r1, [r5, #4]	@ unaligned
 20022 0d72 AA60     		str	r2, [r5, #8]	@ unaligned
 20023 0d74 EB60     		str	r3, [r5, #12]	@ unaligned
 20024 0d76 03CC     		ldmia	r4!, {r0, r1}
 20025 0d78 2861     		str	r0, [r5, #16]	@ unaligned
 20026 0d7a 6961     		str	r1, [r5, #20]	@ unaligned
 20027 0d7c 2388     		ldrh	r3, [r4]	@ unaligned
 20028 0d7e 2B83     		strh	r3, [r5, #24]	@ unaligned
 20029              	.L751:
2608:..\src/command_processing.c **** 
2609:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20030              		.loc 1 2609 0
 20031 0d80 D7F88C30 		ldr	r3, [r7, #140]
 20032 0d84 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 440


 20033 0d88 1A46     		mov	r2, r3
 20034 0d8a D7F88C30 		ldr	r3, [r7, #140]
 20035 0d8e 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20036 0d92 07F11C00 		add	r0, r7, #28
 20037 0d96 C549     		ldr	r1, .L777+4
 20038 0d98 FFF7FEFF 		bl	sprintf
2610:..\src/command_processing.c **** 			strcat(info_string, str);
 20039              		.loc 1 2610 0
 20040 0d9c 07F11C03 		add	r3, r7, #28
 20041 0da0 1946     		mov	r1, r3
 20042 0da2 7869     		ldr	r0, [r7, #20]
 20043 0da4 FFF7FEFF 		bl	strcat
2611:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20044              		.loc 1 2611 0
 20045 0da8 7869     		ldr	r0, [r7, #20]
 20046 0daa FFF7FEFF 		bl	strlen
 20047 0dae 0346     		mov	r3, r0
 20048 0db0 1A46     		mov	r2, r3
 20049 0db2 7B69     		ldr	r3, [r7, #20]
 20050 0db4 1344     		add	r3, r3, r2
 20051 0db6 BE4A     		ldr	r2, .L777+8
 20052 0db8 1188     		ldrh	r1, [r2]	@ unaligned
 20053 0dba 9278     		ldrb	r2, [r2, #2]
 20054 0dbc 1980     		strh	r1, [r3]	@ unaligned
 20055 0dbe 9A70     		strb	r2, [r3, #2]
 20056              	.L749:
 20057              	.LBE20:
2441:..\src/command_processing.c ****             
 20058              		.loc 1 2441 0 discriminator 2
 20059 0dc0 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20060 0dc4 0133     		adds	r3, r3, #1
 20061 0dc6 87F89330 		strb	r3, [r7, #147]
 20062              	.L708:
2441:..\src/command_processing.c ****             
 20063              		.loc 1 2441 0 is_stmt 0 discriminator 1
 20064 0dca D7F88C30 		ldr	r3, [r7, #140]
 20065 0dce 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20066 0dd2 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20067 0dd6 9A42     		cmp	r2, r3
 20068 0dd8 7FF69BA9 		bls	.L752
 20069              	.LBE19:
2612:..\src/command_processing.c **** 		}
2613:..\src/command_processing.c **** 	}
2614:..\src/command_processing.c **** 	 
2615:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20070              		.loc 1 2615 0 is_stmt 1
 20071 0ddc D7F88C30 		ldr	r3, [r7, #140]
 20072 0de0 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20073 0de4 002B     		cmp	r3, #0
 20074 0de6 63D0     		beq	.L753
2616:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20075              		.loc 1 2616 0
 20076 0de8 D7F88C30 		ldr	r3, [r7, #140]
 20077 0dec D3F8A422 		ldr	r2, [r3, #676]
 20078 0df0 07F11C03 		add	r3, r7, #28
 20079 0df4 AF49     		ldr	r1, .L777+12
 20080 0df6 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 441


 20081 0df8 FFF7FEFF 		bl	sprintf
2617:..\src/command_processing.c ****         strcat(info_string, str);
 20082              		.loc 1 2617 0
 20083 0dfc 07F11C03 		add	r3, r7, #28
 20084 0e00 1946     		mov	r1, r3
 20085 0e02 7869     		ldr	r0, [r7, #20]
 20086 0e04 FFF7FEFF 		bl	strcat
2618:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20087              		.loc 1 2618 0
 20088 0e08 7869     		ldr	r0, [r7, #20]
 20089 0e0a FFF7FEFF 		bl	strlen
 20090 0e0e 0346     		mov	r3, r0
 20091 0e10 1A46     		mov	r2, r3
 20092 0e12 7B69     		ldr	r3, [r7, #20]
 20093 0e14 1344     		add	r3, r3, r2
 20094 0e16 A64A     		ldr	r2, .L777+8
 20095 0e18 1188     		ldrh	r1, [r2]	@ unaligned
 20096 0e1a 9278     		ldrb	r2, [r2, #2]
 20097 0e1c 1980     		strh	r1, [r3]	@ unaligned
 20098 0e1e 9A70     		strb	r2, [r3, #2]
2619:..\src/command_processing.c ****         
2620:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20099              		.loc 1 2620 0
 20100 0e20 D7F88C30 		ldr	r3, [r7, #140]
 20101 0e24 D3F8A822 		ldr	r2, [r3, #680]
 20102 0e28 07F11C03 		add	r3, r7, #28
 20103 0e2c A249     		ldr	r1, .L777+16
 20104 0e2e 1846     		mov	r0, r3
 20105 0e30 FFF7FEFF 		bl	sprintf
2621:..\src/command_processing.c ****         strcat(info_string, str);
 20106              		.loc 1 2621 0
 20107 0e34 07F11C03 		add	r3, r7, #28
 20108 0e38 1946     		mov	r1, r3
 20109 0e3a 7869     		ldr	r0, [r7, #20]
 20110 0e3c FFF7FEFF 		bl	strcat
2622:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20111              		.loc 1 2622 0
 20112 0e40 7869     		ldr	r0, [r7, #20]
 20113 0e42 FFF7FEFF 		bl	strlen
 20114 0e46 0346     		mov	r3, r0
 20115 0e48 1A46     		mov	r2, r3
 20116 0e4a 7B69     		ldr	r3, [r7, #20]
 20117 0e4c 1344     		add	r3, r3, r2
 20118 0e4e 984A     		ldr	r2, .L777+8
 20119 0e50 1188     		ldrh	r1, [r2]	@ unaligned
 20120 0e52 9278     		ldrb	r2, [r2, #2]
 20121 0e54 1980     		strh	r1, [r3]	@ unaligned
 20122 0e56 9A70     		strb	r2, [r3, #2]
2623:..\src/command_processing.c ****         
2624:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20123              		.loc 1 2624 0
 20124 0e58 D7F88C30 		ldr	r3, [r7, #140]
 20125 0e5c D3F8A022 		ldr	r2, [r3, #672]
 20126 0e60 D7F88C30 		ldr	r3, [r7, #140]
 20127 0e64 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20128 0e68 1846     		mov	r0, r3
 20129 0e6a D7F88C10 		ldr	r1, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 442


 20130 0e6e 0346     		mov	r3, r0
 20131 0e70 5B00     		lsls	r3, r3, #1
 20132 0e72 0344     		add	r3, r3, r0
 20133 0e74 1B01     		lsls	r3, r3, #4
 20134 0e76 0B44     		add	r3, r3, r1
 20135 0e78 03F29513 		addw	r3, r3, #405
 20136 0e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20137 0e7e 1A41     		asrs	r2, r2, r3
 20138 0e80 07F11C03 		add	r3, r7, #28
 20139 0e84 8D49     		ldr	r1, .L777+20
 20140 0e86 1846     		mov	r0, r3
 20141 0e88 FFF7FEFF 		bl	sprintf
2625:..\src/command_processing.c ****         strcat(info_string, str);
 20142              		.loc 1 2625 0
 20143 0e8c 07F11C03 		add	r3, r7, #28
 20144 0e90 1946     		mov	r1, r3
 20145 0e92 7869     		ldr	r0, [r7, #20]
 20146 0e94 FFF7FEFF 		bl	strcat
2626:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20147              		.loc 1 2626 0
 20148 0e98 7869     		ldr	r0, [r7, #20]
 20149 0e9a FFF7FEFF 		bl	strlen
 20150 0e9e 0346     		mov	r3, r0
 20151 0ea0 1A46     		mov	r2, r3
 20152 0ea2 7B69     		ldr	r3, [r7, #20]
 20153 0ea4 1344     		add	r3, r3, r2
 20154 0ea6 824A     		ldr	r2, .L777+8
 20155 0ea8 1188     		ldrh	r1, [r2]	@ unaligned
 20156 0eaa 9278     		ldrb	r2, [r2, #2]
 20157 0eac 1980     		strh	r1, [r3]	@ unaligned
 20158 0eae 9A70     		strb	r2, [r3, #2]
 20159              	.L753:
2627:..\src/command_processing.c ****     }
2628:..\src/command_processing.c **** 	
2629:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20160              		.loc 1 2629 0
 20161 0eb0 D7F88C30 		ldr	r3, [r7, #140]
 20162 0eb4 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20163 0eb8 002B     		cmp	r3, #0
 20164 0eba 00F0CB81 		beq	.L768
2630:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20165              		.loc 1 2630 0
 20166 0ebe 804B     		ldr	r3, .L777+24
 20167 0ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20168 0ec2 1A46     		mov	r2, r3
 20169 0ec4 07F11C03 		add	r3, r7, #28
 20170 0ec8 7E49     		ldr	r1, .L777+28
 20171 0eca 1846     		mov	r0, r3
 20172 0ecc FFF7FEFF 		bl	sprintf
2631:..\src/command_processing.c **** 		strcat(info_string, str);
 20173              		.loc 1 2631 0
 20174 0ed0 07F11C03 		add	r3, r7, #28
 20175 0ed4 1946     		mov	r1, r3
 20176 0ed6 7869     		ldr	r0, [r7, #20]
 20177 0ed8 FFF7FEFF 		bl	strcat
2632:..\src/command_processing.c **** 		
2633:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 443


 20178              		.loc 1 2633 0
 20179 0edc 7869     		ldr	r0, [r7, #20]
 20180 0ede FFF7FEFF 		bl	strlen
 20181 0ee2 0346     		mov	r3, r0
 20182 0ee4 1A46     		mov	r2, r3
 20183 0ee6 7B69     		ldr	r3, [r7, #20]
 20184 0ee8 1344     		add	r3, r3, r2
 20185 0eea 714A     		ldr	r2, .L777+8
 20186 0eec 1188     		ldrh	r1, [r2]	@ unaligned
 20187 0eee 9278     		ldrb	r2, [r2, #2]
 20188 0ef0 1980     		strh	r1, [r3]	@ unaligned
 20189 0ef2 9A70     		strb	r2, [r3, #2]
2634:..\src/command_processing.c **** 		
2635:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20190              		.loc 1 2635 0
 20191 0ef4 7869     		ldr	r0, [r7, #20]
 20192 0ef6 FFF7FEFF 		bl	strlen
 20193 0efa 0346     		mov	r3, r0
 20194 0efc 1A46     		mov	r2, r3
 20195 0efe 7B69     		ldr	r3, [r7, #20]
 20196 0f00 1344     		add	r3, r3, r2
 20197 0f02 714A     		ldr	r2, .L777+32
 20198 0f04 1D46     		mov	r5, r3
 20199 0f06 1446     		mov	r4, r2
 20200 0f08 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20201 0f0a 2860     		str	r0, [r5]	@ unaligned
 20202 0f0c 6960     		str	r1, [r5, #4]	@ unaligned
 20203 0f0e AA60     		str	r2, [r5, #8]	@ unaligned
 20204 0f10 EB60     		str	r3, [r5, #12]	@ unaligned
 20205 0f12 2068     		ldr	r0, [r4]	@ unaligned
 20206 0f14 2861     		str	r0, [r5, #16]	@ unaligned
 20207 0f16 2379     		ldrb	r3, [r4, #4]
 20208 0f18 2B75     		strb	r3, [r5, #20]
2636:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20209              		.loc 1 2636 0
 20210 0f1a 0023     		movs	r3, #0
 20211 0f1c C7F89430 		str	r3, [r7, #148]
 20212 0f20 84E1     		b	.L755
 20213              	.L766:
2637:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20214              		.loc 1 2637 0
 20215 0f22 6A4A     		ldr	r2, .L777+36
 20216 0f24 D7F89430 		ldr	r3, [r7, #148]
 20217 0f28 1344     		add	r3, r3, r2
 20218 0f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20219 0f2c 07F11C00 		add	r0, r7, #28
 20220 0f30 D7F89420 		ldr	r2, [r7, #148]
 20221 0f34 6649     		ldr	r1, .L777+40
 20222 0f36 FFF7FEFF 		bl	sprintf
2638:..\src/command_processing.c **** 			strcat(info_string, str);
 20223              		.loc 1 2638 0
 20224 0f3a 07F11C03 		add	r3, r7, #28
 20225 0f3e 1946     		mov	r1, r3
 20226 0f40 7869     		ldr	r0, [r7, #20]
 20227 0f42 FFF7FEFF 		bl	strcat
2639:..\src/command_processing.c **** 			
2640:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 444


 20228              		.loc 1 2640 0
 20229 0f46 07F11C03 		add	r3, r7, #28
 20230 0f4a 624A     		ldr	r2, .L777+44
 20231 0f4c 1C46     		mov	r4, r3
 20232 0f4e 1546     		mov	r5, r2
 20233 0f50 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20234 0f52 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20235 0f54 2B68     		ldr	r3, [r5]
 20236 0f56 2380     		strh	r3, [r4]	@ movhi
2641:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 20237              		.loc 1 2641 0
 20238 0f58 5C4A     		ldr	r2, .L777+36
 20239 0f5a D7F89430 		ldr	r3, [r7, #148]
 20240 0f5e 1344     		add	r3, r3, r2
 20241 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20242 0f62 1946     		mov	r1, r3
 20243 0f64 D7F88C20 		ldr	r2, [r7, #140]
 20244 0f68 0B46     		mov	r3, r1
 20245 0f6a 9B00     		lsls	r3, r3, #2
 20246 0f6c 0B44     		add	r3, r3, r1
 20247 0f6e 1344     		add	r3, r3, r2
 20248 0f70 03F20223 		addw	r3, r3, #514
 20249 0f74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20250 0f76 002B     		cmp	r3, #0
 20251 0f78 0FD0     		beq	.L756
2642:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20252              		.loc 1 2642 0
 20253 0f7a 07F11C03 		add	r3, r7, #28
 20254 0f7e 1846     		mov	r0, r3
 20255 0f80 FFF7FEFF 		bl	strlen
 20256 0f84 0346     		mov	r3, r0
 20257 0f86 1A46     		mov	r2, r3
 20258 0f88 07F11C03 		add	r3, r7, #28
 20259 0f8c 1344     		add	r3, r3, r2
 20260 0f8e 524A     		ldr	r2, .L777+48
 20261 0f90 1068     		ldr	r0, [r2]	@ unaligned
 20262 0f92 1860     		str	r0, [r3]	@ unaligned
 20263 0f94 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20264 0f96 9A80     		strh	r2, [r3, #4]	@ unaligned
 20265 0f98 0EE0     		b	.L757
 20266              	.L756:
2643:..\src/command_processing.c **** 			else
2644:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20267              		.loc 1 2644 0
 20268 0f9a 07F11C03 		add	r3, r7, #28
 20269 0f9e 1846     		mov	r0, r3
 20270 0fa0 FFF7FEFF 		bl	strlen
 20271 0fa4 0346     		mov	r3, r0
 20272 0fa6 1A46     		mov	r2, r3
 20273 0fa8 07F11C03 		add	r3, r7, #28
 20274 0fac 1344     		add	r3, r3, r2
 20275 0fae 4B4A     		ldr	r2, .L777+52
 20276 0fb0 1068     		ldr	r0, [r2]	@ unaligned
 20277 0fb2 1860     		str	r0, [r3]	@ unaligned
 20278 0fb4 1279     		ldrb	r2, [r2, #4]
 20279 0fb6 1A71     		strb	r2, [r3, #4]
 20280              	.L757:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 445


2645:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20281              		.loc 1 2645 0
 20282 0fb8 07F11C03 		add	r3, r7, #28
 20283 0fbc 1846     		mov	r0, r3
 20284 0fbe FFF7FEFF 		bl	strlen
 20285 0fc2 0346     		mov	r3, r0
 20286 0fc4 1A46     		mov	r2, r3
 20287 0fc6 07F11C03 		add	r3, r7, #28
 20288 0fca 1344     		add	r3, r3, r2
 20289 0fcc 444A     		ldr	r2, .L777+56
 20290 0fce 1C46     		mov	r4, r3
 20291 0fd0 1346     		mov	r3, r2
 20292 0fd2 07CB     		ldmia	r3!, {r0, r1, r2}
 20293 0fd4 2060     		str	r0, [r4]	@ unaligned
 20294 0fd6 6160     		str	r1, [r4, #4]	@ unaligned
 20295 0fd8 A260     		str	r2, [r4, #8]	@ unaligned
 20296 0fda 1B88     		ldrh	r3, [r3]	@ unaligned
 20297 0fdc A381     		strh	r3, [r4, #12]	@ unaligned
2646:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20298              		.loc 1 2646 0
 20299 0fde 3B4A     		ldr	r2, .L777+36
 20300 0fe0 D7F89430 		ldr	r3, [r7, #148]
 20301 0fe4 1344     		add	r3, r3, r2
 20302 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20303 0fe8 1946     		mov	r1, r3
 20304 0fea D7F88C20 		ldr	r2, [r7, #140]
 20305 0fee 0B46     		mov	r3, r1
 20306 0ff0 9B00     		lsls	r3, r3, #2
 20307 0ff2 0B44     		add	r3, r3, r1
 20308 0ff4 1344     		add	r3, r3, r2
 20309 0ff6 03F20323 		addw	r3, r3, #515
 20310 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20311 0ffc 002B     		cmp	r3, #0
 20312 0ffe 0FD0     		beq	.L758
2647:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20313              		.loc 1 2647 0
 20314 1000 07F11C03 		add	r3, r7, #28
 20315 1004 1846     		mov	r0, r3
 20316 1006 FFF7FEFF 		bl	strlen
 20317 100a 0346     		mov	r3, r0
 20318 100c 1A46     		mov	r2, r3
 20319 100e 07F11C03 		add	r3, r7, #28
 20320 1012 1344     		add	r3, r3, r2
 20321 1014 304A     		ldr	r2, .L777+48
 20322 1016 1068     		ldr	r0, [r2]	@ unaligned
 20323 1018 1860     		str	r0, [r3]	@ unaligned
 20324 101a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20325 101c 9A80     		strh	r2, [r3, #4]	@ unaligned
 20326 101e 0EE0     		b	.L759
 20327              	.L758:
2648:..\src/command_processing.c **** 			else
2649:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20328              		.loc 1 2649 0
 20329 1020 07F11C03 		add	r3, r7, #28
 20330 1024 1846     		mov	r0, r3
 20331 1026 FFF7FEFF 		bl	strlen
 20332 102a 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 446


 20333 102c 1A46     		mov	r2, r3
 20334 102e 07F11C03 		add	r3, r7, #28
 20335 1032 1344     		add	r3, r3, r2
 20336 1034 294A     		ldr	r2, .L777+52
 20337 1036 1068     		ldr	r0, [r2]	@ unaligned
 20338 1038 1860     		str	r0, [r3]	@ unaligned
 20339 103a 1279     		ldrb	r2, [r2, #4]
 20340 103c 1A71     		strb	r2, [r3, #4]
 20341              	.L759:
2650:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 20342              		.loc 1 2650 0
 20343 103e 07F11C03 		add	r3, r7, #28
 20344 1042 1846     		mov	r0, r3
 20345 1044 FFF7FEFF 		bl	strlen
 20346 1048 0346     		mov	r3, r0
 20347 104a 1A46     		mov	r2, r3
 20348 104c 07F11C03 		add	r3, r7, #28
 20349 1050 1344     		add	r3, r3, r2
 20350 1052 244A     		ldr	r2, .L777+60
 20351 1054 1D46     		mov	r5, r3
 20352 1056 1446     		mov	r4, r2
 20353 1058 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20354 105a 2860     		str	r0, [r5]	@ unaligned
 20355 105c 6960     		str	r1, [r5, #4]	@ unaligned
 20356 105e AA60     		str	r2, [r5, #8]	@ unaligned
 20357 1060 EB60     		str	r3, [r5, #12]	@ unaligned
 20358 1062 2378     		ldrb	r3, [r4]
 20359 1064 2B74     		strb	r3, [r5, #16]
2651:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20360              		.loc 1 2651 0
 20361 1066 194A     		ldr	r2, .L777+36
 20362 1068 D7F89430 		ldr	r3, [r7, #148]
 20363 106c 1344     		add	r3, r3, r2
 20364 106e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20365 1070 1946     		mov	r1, r3
 20366 1072 D7F88C20 		ldr	r2, [r7, #140]
 20367 1076 0B46     		mov	r3, r1
 20368 1078 9B00     		lsls	r3, r3, #2
 20369 107a 0B44     		add	r3, r3, r1
 20370 107c 1344     		add	r3, r3, r2
 20371 107e 03F50173 		add	r3, r3, #516
 20372 1082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20373 1084 002B     		cmp	r3, #0
 20374 1086 2FD0     		beq	.L760
2652:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20375              		.loc 1 2652 0
 20376 1088 07F11C03 		add	r3, r7, #28
 20377 108c 1846     		mov	r0, r3
 20378 108e FFF7FEFF 		bl	strlen
 20379 1092 0346     		mov	r3, r0
 20380 1094 1A46     		mov	r2, r3
 20381 1096 07F11C03 		add	r3, r7, #28
 20382 109a 1344     		add	r3, r3, r2
 20383 109c 0E4A     		ldr	r2, .L777+48
 20384 109e 1068     		ldr	r0, [r2]	@ unaligned
 20385 10a0 1860     		str	r0, [r3]	@ unaligned
 20386 10a2 9288     		ldrh	r2, [r2, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 447


 20387 10a4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20388 10a6 2EE0     		b	.L761
 20389              	.L778:
 20390              		.align	2
 20391              	.L777:
 20392 10a8 30190000 		.word	.LC238
 20393 10ac 4C190000 		.word	.LC239
 20394 10b0 10110000 		.word	.LC150
 20395 10b4 101A0000 		.word	.LC247
 20396 10b8 2C1A0000 		.word	.LC248
 20397 10bc 541A0000 		.word	.LC249
 20398 10c0 00000000 		.word	N_IMU_Connected
 20399 10c4 681A0000 		.word	.LC250
 20400 10c8 7C1A0000 		.word	.LC251
 20401 10cc 00000000 		.word	IMU_connected
 20402 10d0 941A0000 		.word	.LC252
 20403 10d4 A81A0000 		.word	.LC253
 20404 10d8 D0120000 		.word	.LC173
 20405 10dc D8120000 		.word	.LC174
 20406 10e0 BC1A0000 		.word	.LC254
 20407 10e4 CC1A0000 		.word	.LC255
 20408              	.L760:
2653:..\src/command_processing.c **** 			else
2654:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20409              		.loc 1 2654 0
 20410 10e8 07F11C03 		add	r3, r7, #28
 20411 10ec 1846     		mov	r0, r3
 20412 10ee FFF7FEFF 		bl	strlen
 20413 10f2 0346     		mov	r3, r0
 20414 10f4 1A46     		mov	r2, r3
 20415 10f6 07F11C03 		add	r3, r7, #28
 20416 10fa 1344     		add	r3, r3, r2
 20417 10fc 584A     		ldr	r2, .L779
 20418 10fe 1068     		ldr	r0, [r2]	@ unaligned
 20419 1100 1860     		str	r0, [r3]	@ unaligned
 20420 1102 1279     		ldrb	r2, [r2, #4]
 20421 1104 1A71     		strb	r2, [r3, #4]
 20422              	.L761:
2655:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20423              		.loc 1 2655 0
 20424 1106 07F11C03 		add	r3, r7, #28
 20425 110a 1846     		mov	r0, r3
 20426 110c FFF7FEFF 		bl	strlen
 20427 1110 0346     		mov	r3, r0
 20428 1112 1A46     		mov	r2, r3
 20429 1114 07F11C03 		add	r3, r7, #28
 20430 1118 1344     		add	r3, r3, r2
 20431 111a 524A     		ldr	r2, .L779+4
 20432 111c 1C46     		mov	r4, r3
 20433 111e 1346     		mov	r3, r2
 20434 1120 07CB     		ldmia	r3!, {r0, r1, r2}
 20435 1122 2060     		str	r0, [r4]	@ unaligned
 20436 1124 6160     		str	r1, [r4, #4]	@ unaligned
 20437 1126 A260     		str	r2, [r4, #8]	@ unaligned
 20438 1128 1B88     		ldrh	r3, [r3]	@ unaligned
 20439 112a A381     		strh	r3, [r4, #12]	@ unaligned
2656:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 448


 20440              		.loc 1 2656 0
 20441 112c 4E4A     		ldr	r2, .L779+8
 20442 112e D7F89430 		ldr	r3, [r7, #148]
 20443 1132 1344     		add	r3, r3, r2
 20444 1134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20445 1136 1946     		mov	r1, r3
 20446 1138 D7F88C20 		ldr	r2, [r7, #140]
 20447 113c 0B46     		mov	r3, r1
 20448 113e 9B00     		lsls	r3, r3, #2
 20449 1140 0B44     		add	r3, r3, r1
 20450 1142 1344     		add	r3, r3, r2
 20451 1144 03F20523 		addw	r3, r3, #517
 20452 1148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20453 114a 002B     		cmp	r3, #0
 20454 114c 0FD0     		beq	.L762
2657:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20455              		.loc 1 2657 0
 20456 114e 07F11C03 		add	r3, r7, #28
 20457 1152 1846     		mov	r0, r3
 20458 1154 FFF7FEFF 		bl	strlen
 20459 1158 0346     		mov	r3, r0
 20460 115a 1A46     		mov	r2, r3
 20461 115c 07F11C03 		add	r3, r7, #28
 20462 1160 1344     		add	r3, r3, r2
 20463 1162 424A     		ldr	r2, .L779+12
 20464 1164 1068     		ldr	r0, [r2]	@ unaligned
 20465 1166 1860     		str	r0, [r3]	@ unaligned
 20466 1168 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20467 116a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20468 116c 0EE0     		b	.L763
 20469              	.L762:
2658:..\src/command_processing.c **** 			else
2659:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20470              		.loc 1 2659 0
 20471 116e 07F11C03 		add	r3, r7, #28
 20472 1172 1846     		mov	r0, r3
 20473 1174 FFF7FEFF 		bl	strlen
 20474 1178 0346     		mov	r3, r0
 20475 117a 1A46     		mov	r2, r3
 20476 117c 07F11C03 		add	r3, r7, #28
 20477 1180 1344     		add	r3, r3, r2
 20478 1182 374A     		ldr	r2, .L779
 20479 1184 1068     		ldr	r0, [r2]	@ unaligned
 20480 1186 1860     		str	r0, [r3]	@ unaligned
 20481 1188 1279     		ldrb	r2, [r2, #4]
 20482 118a 1A71     		strb	r2, [r3, #4]
 20483              	.L763:
2660:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20484              		.loc 1 2660 0
 20485 118c 07F11C03 		add	r3, r7, #28
 20486 1190 1846     		mov	r0, r3
 20487 1192 FFF7FEFF 		bl	strlen
 20488 1196 0346     		mov	r3, r0
 20489 1198 1A46     		mov	r2, r3
 20490 119a 07F11C03 		add	r3, r7, #28
 20491 119e 1344     		add	r3, r3, r2
 20492 11a0 334A     		ldr	r2, .L779+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 449


 20493 11a2 1C46     		mov	r4, r3
 20494 11a4 1346     		mov	r3, r2
 20495 11a6 07CB     		ldmia	r3!, {r0, r1, r2}
 20496 11a8 2060     		str	r0, [r4]	@ unaligned
 20497 11aa 6160     		str	r1, [r4, #4]	@ unaligned
 20498 11ac A260     		str	r2, [r4, #8]	@ unaligned
 20499 11ae 1A88     		ldrh	r2, [r3]	@ unaligned
 20500 11b0 9B78     		ldrb	r3, [r3, #2]
 20501 11b2 A281     		strh	r2, [r4, #12]	@ unaligned
 20502 11b4 A373     		strb	r3, [r4, #14]
2661:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20503              		.loc 1 2661 0
 20504 11b6 2C4A     		ldr	r2, .L779+8
 20505 11b8 D7F89430 		ldr	r3, [r7, #148]
 20506 11bc 1344     		add	r3, r3, r2
 20507 11be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20508 11c0 1946     		mov	r1, r3
 20509 11c2 D7F88C20 		ldr	r2, [r7, #140]
 20510 11c6 0B46     		mov	r3, r1
 20511 11c8 9B00     		lsls	r3, r3, #2
 20512 11ca 0B44     		add	r3, r3, r1
 20513 11cc 1344     		add	r3, r3, r2
 20514 11ce 03F20623 		addw	r3, r3, #518
 20515 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20516 11d4 002B     		cmp	r3, #0
 20517 11d6 0FD0     		beq	.L764
2662:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20518              		.loc 1 2662 0
 20519 11d8 07F11C03 		add	r3, r7, #28
 20520 11dc 1846     		mov	r0, r3
 20521 11de FFF7FEFF 		bl	strlen
 20522 11e2 0346     		mov	r3, r0
 20523 11e4 1A46     		mov	r2, r3
 20524 11e6 07F11C03 		add	r3, r7, #28
 20525 11ea 1344     		add	r3, r3, r2
 20526 11ec 1F4A     		ldr	r2, .L779+12
 20527 11ee 1068     		ldr	r0, [r2]	@ unaligned
 20528 11f0 1860     		str	r0, [r3]	@ unaligned
 20529 11f2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20530 11f4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20531 11f6 0EE0     		b	.L765
 20532              	.L764:
2663:..\src/command_processing.c **** 			else
2664:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20533              		.loc 1 2664 0
 20534 11f8 07F11C03 		add	r3, r7, #28
 20535 11fc 1846     		mov	r0, r3
 20536 11fe FFF7FEFF 		bl	strlen
 20537 1202 0346     		mov	r3, r0
 20538 1204 1A46     		mov	r2, r3
 20539 1206 07F11C03 		add	r3, r7, #28
 20540 120a 1344     		add	r3, r3, r2
 20541 120c 144A     		ldr	r2, .L779
 20542 120e 1068     		ldr	r0, [r2]	@ unaligned
 20543 1210 1860     		str	r0, [r3]	@ unaligned
 20544 1212 1279     		ldrb	r2, [r2, #4]
 20545 1214 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 450


 20546              	.L765:
2665:..\src/command_processing.c **** 				 
2666:..\src/command_processing.c **** 			strcat(info_string, str);
 20547              		.loc 1 2666 0 discriminator 2
 20548 1216 07F11C03 		add	r3, r7, #28
 20549 121a 1946     		mov	r1, r3
 20550 121c 7869     		ldr	r0, [r7, #20]
 20551 121e FFF7FEFF 		bl	strcat
2636:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20552              		.loc 1 2636 0 discriminator 2
 20553 1222 D7F89430 		ldr	r3, [r7, #148]
 20554 1226 0133     		adds	r3, r3, #1
 20555 1228 C7F89430 		str	r3, [r7, #148]
 20556              	.L755:
2636:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20557              		.loc 1 2636 0 is_stmt 0 discriminator 1
 20558 122c 114B     		ldr	r3, .L779+20
 20559 122e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20560 1230 1A46     		mov	r2, r3
 20561 1232 D7F89430 		ldr	r3, [r7, #148]
 20562 1236 9A42     		cmp	r2, r3
 20563 1238 3FF773AE 		bgt	.L766
2667:..\src/command_processing.c **** 		}       
2668:..\src/command_processing.c **** 		
2669:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20564              		.loc 1 2669 0 is_stmt 1
 20565 123c 7869     		ldr	r0, [r7, #20]
 20566 123e FFF7FEFF 		bl	strlen
 20567 1242 0346     		mov	r3, r0
 20568 1244 1A46     		mov	r2, r3
 20569 1246 7B69     		ldr	r3, [r7, #20]
 20570 1248 1344     		add	r3, r3, r2
 20571 124a 0B4A     		ldr	r2, .L779+24
 20572 124c 1188     		ldrh	r1, [r2]	@ unaligned
 20573 124e 9278     		ldrb	r2, [r2, #2]
 20574 1250 1980     		strh	r1, [r3]	@ unaligned
 20575 1252 9A70     		strb	r2, [r3, #2]
 20576              	.L768:
2670:..\src/command_processing.c **** 	}
2671:..\src/command_processing.c **** }
 20577              		.loc 1 2671 0
 20578 1254 00BF     		nop
 20579 1256 9C37     		adds	r7, r7, #156
 20580              		.cfi_def_cfa_offset 36
 20581 1258 BD46     		mov	sp, r7
 20582              		.cfi_def_cfa_register 13
 20583              		@ sp needed
 20584 125a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20585              	.L780:
 20586 125e 00BF     		.align	2
 20587              	.L779:
 20588 1260 D8120000 		.word	.LC174
 20589 1264 E01A0000 		.word	.LC256
 20590 1268 00000000 		.word	IMU_connected
 20591 126c D0120000 		.word	.LC173
 20592 1270 F01A0000 		.word	.LC257
 20593 1274 00000000 		.word	N_IMU_Connected
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 451


 20594 1278 10110000 		.word	.LC150
 20595              		.cfi_endproc
 20596              	.LFE74:
 20597              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20598              		.section	.rodata
 20599 1e6e 0000     		.align	2
 20600              	.LC291:
 20601 1e70 486F7572 		.ascii	"Hour,Min,Sec,\000"
 20601      2C4D696E 
 20601      2C536563 
 20601      2C00
 20602 1e7e 0000     		.align	2
 20603              	.LC292:
 20604 1e80 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20604      25645F50 
 20604      6F732C00 
 20605              		.align	2
 20606              	.LC293:
 20607 1e8c 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20607      25645F43 
 20607      7572722C 
 20607      00
 20608 1e99 000000   		.align	2
 20609              	.LC294:
 20610 1e9c 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 20610      315F6163 
 20610      742C454D 
 20610      475F325F 
 20610      6163742C 
 20611 1ecf 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 20611      5F74696D 
 20611      652C546F 
 20611      74616C5F 
 20611      72657374 
 20612              		.section	.text.prepare_SD_legend,"ax",%progbits
 20613              		.align	2
 20614              		.global	prepare_SD_legend
 20615              		.thumb
 20616              		.thumb_func
 20617              		.type	prepare_SD_legend, %function
 20618              	prepare_SD_legend:
 20619              	.LFB75:
2672:..\src/command_processing.c **** 
2673:..\src/command_processing.c **** 
2674:..\src/command_processing.c **** //==============================================================================
2675:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2676:..\src/command_processing.c **** //==============================================================================
2677:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2678:..\src/command_processing.c **** {
 20620              		.loc 1 2678 0
 20621              		.cfi_startproc
 20622              		@ args = 0, pretend = 0, frame = 112
 20623              		@ frame_needed = 1, uses_anonymous_args = 0
 20624 0000 90B5     		push	{r4, r7, lr}
 20625              		.cfi_def_cfa_offset 12
 20626              		.cfi_offset 4, -12
 20627              		.cfi_offset 7, -8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 452


 20628              		.cfi_offset 14, -4
 20629 0002 9DB0     		sub	sp, sp, #116
 20630              		.cfi_def_cfa_offset 128
 20631 0004 00AF     		add	r7, sp, #0
 20632              		.cfi_def_cfa_register 7
 20633 0006 7860     		str	r0, [r7, #4]
2679:..\src/command_processing.c ****     char str[100];  
2680:..\src/command_processing.c ****     int i;
2681:..\src/command_processing.c ****         
2682:..\src/command_processing.c ****     // Legend
2683:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20634              		.loc 1 2683 0
 20635 0008 7B68     		ldr	r3, [r7, #4]
 20636 000a 2A4A     		ldr	r2, .L786
 20637 000c 1C46     		mov	r4, r3
 20638 000e 1346     		mov	r3, r2
 20639 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20640 0012 2060     		str	r0, [r4]	@ unaligned
 20641 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20642 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20643 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 20644 001a A381     		strh	r3, [r4, #12]	@ unaligned
2684:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20645              		.loc 1 2684 0
 20646 001c 0123     		movs	r3, #1
 20647 001e FB66     		str	r3, [r7, #108]
 20648 0020 0FE0     		b	.L782
 20649              	.L783:
2685:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20650              		.loc 1 2685 0 discriminator 3
 20651 0022 07F10803 		add	r3, r7, #8
 20652 0026 FA6E     		ldr	r2, [r7, #108]
 20653 0028 2349     		ldr	r1, .L786+4
 20654 002a 1846     		mov	r0, r3
 20655 002c FFF7FEFF 		bl	sprintf
2686:..\src/command_processing.c ****         strcat(info_string, str);
 20656              		.loc 1 2686 0 discriminator 3
 20657 0030 07F10803 		add	r3, r7, #8
 20658 0034 1946     		mov	r1, r3
 20659 0036 7868     		ldr	r0, [r7, #4]
 20660 0038 FFF7FEFF 		bl	strcat
2684:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20661              		.loc 1 2684 0 discriminator 3
 20662 003c FB6E     		ldr	r3, [r7, #108]
 20663 003e 0133     		adds	r3, r3, #1
 20664 0040 FB66     		str	r3, [r7, #108]
 20665              	.L782:
2684:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20666              		.loc 1 2684 0 is_stmt 0 discriminator 1
 20667 0042 FB6E     		ldr	r3, [r7, #108]
 20668 0044 0A2B     		cmp	r3, #10
 20669 0046 ECDD     		ble	.L783
2687:..\src/command_processing.c ****     }
2688:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20670              		.loc 1 2688 0 is_stmt 1
 20671 0048 0123     		movs	r3, #1
 20672 004a FB66     		str	r3, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 453


 20673 004c 0FE0     		b	.L784
 20674              	.L785:
2689:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20675              		.loc 1 2689 0 discriminator 3
 20676 004e 07F10803 		add	r3, r7, #8
 20677 0052 FA6E     		ldr	r2, [r7, #108]
 20678 0054 1949     		ldr	r1, .L786+8
 20679 0056 1846     		mov	r0, r3
 20680 0058 FFF7FEFF 		bl	sprintf
2690:..\src/command_processing.c ****         strcat(info_string, str);
 20681              		.loc 1 2690 0 discriminator 3
 20682 005c 07F10803 		add	r3, r7, #8
 20683 0060 1946     		mov	r1, r3
 20684 0062 7868     		ldr	r0, [r7, #4]
 20685 0064 FFF7FEFF 		bl	strcat
2688:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20686              		.loc 1 2688 0 discriminator 3
 20687 0068 FB6E     		ldr	r3, [r7, #108]
 20688 006a 0133     		adds	r3, r3, #1
 20689 006c FB66     		str	r3, [r7, #108]
 20690              	.L784:
2688:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20691              		.loc 1 2688 0 is_stmt 0 discriminator 1
 20692 006e FB6E     		ldr	r3, [r7, #108]
 20693 0070 042B     		cmp	r3, #4
 20694 0072 ECDD     		ble	.L785
2691:..\src/command_processing.c ****     }
2692:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 20695              		.loc 1 2692 0 is_stmt 1
 20696 0074 07F10803 		add	r3, r7, #8
 20697 0078 114A     		ldr	r2, .L786+12
 20698 007a 1846     		mov	r0, r3
 20699 007c 1146     		mov	r1, r2
 20700 007e 4D23     		movs	r3, #77
 20701 0080 1A46     		mov	r2, r3
 20702 0082 FFF7FEFF 		bl	memcpy
2693:..\src/command_processing.c ****     strcat(info_string, str);
 20703              		.loc 1 2693 0
 20704 0086 07F10803 		add	r3, r7, #8
 20705 008a 1946     		mov	r1, r3
 20706 008c 7868     		ldr	r0, [r7, #4]
 20707 008e FFF7FEFF 		bl	strcat
2694:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20708              		.loc 1 2694 0
 20709 0092 7868     		ldr	r0, [r7, #4]
 20710 0094 FFF7FEFF 		bl	strlen
 20711 0098 0346     		mov	r3, r0
 20712 009a 1A46     		mov	r2, r3
 20713 009c 7B68     		ldr	r3, [r7, #4]
 20714 009e 1344     		add	r3, r3, r2
 20715 00a0 084A     		ldr	r2, .L786+16
 20716 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 20717 00a4 9278     		ldrb	r2, [r2, #2]
 20718 00a6 1980     		strh	r1, [r3]	@ unaligned
 20719 00a8 9A70     		strb	r2, [r3, #2]
2695:..\src/command_processing.c **** }
 20720              		.loc 1 2695 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 454


 20721 00aa 00BF     		nop
 20722 00ac 7437     		adds	r7, r7, #116
 20723              		.cfi_def_cfa_offset 12
 20724 00ae BD46     		mov	sp, r7
 20725              		.cfi_def_cfa_register 13
 20726              		@ sp needed
 20727 00b0 90BD     		pop	{r4, r7, pc}
 20728              	.L787:
 20729 00b2 00BF     		.align	2
 20730              	.L786:
 20731 00b4 701E0000 		.word	.LC291
 20732 00b8 801E0000 		.word	.LC292
 20733 00bc 8C1E0000 		.word	.LC293
 20734 00c0 9C1E0000 		.word	.LC294
 20735 00c4 10110000 		.word	.LC150
 20736              		.cfi_endproc
 20737              	.LFE75:
 20738              		.size	prepare_SD_legend, .-prepare_SD_legend
 20739              		.section	.rodata
 20740 1ee9 000000   		.align	2
 20741              	.LC295:
 20742 1eec 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20742      2C253032 
 20742      642C2530 
 20742      32642C00 
 20743              		.align	2
 20744              	.LC296:
 20745 1efc 256C752C 		.ascii	"%lu,\000"
 20745      00
 20746 1f01 000000   		.align	2
 20747              	.LC297:
 20748 1f04 256C752C 		.ascii	"%lu,%lu,\000"
 20748      256C752C 
 20748      00
 20749 1f0d 000000   		.align	2
 20750              	.LC298:
 20751 1f10 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 20751      256C752C 
 20751      256C752C 
 20751      256C7500 
 20752              		.section	.text.prepare_SD_info,"ax",%progbits
 20753              		.align	2
 20754              		.global	prepare_SD_info
 20755              		.thumb
 20756              		.thumb_func
 20757              		.type	prepare_SD_info, %function
 20758              	prepare_SD_info:
 20759              	.LFB76:
2696:..\src/command_processing.c **** 
2697:..\src/command_processing.c **** //==============================================================================
2698:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2699:..\src/command_processing.c **** //==============================================================================
2700:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2701:..\src/command_processing.c **** {
 20760              		.loc 1 2701 0
 20761              		.cfi_startproc
 20762              		@ args = 0, pretend = 0, frame = 112
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 455


 20763              		@ frame_needed = 1, uses_anonymous_args = 0
 20764 0000 90B5     		push	{r4, r7, lr}
 20765              		.cfi_def_cfa_offset 12
 20766              		.cfi_offset 4, -12
 20767              		.cfi_offset 7, -8
 20768              		.cfi_offset 14, -4
 20769 0002 9FB0     		sub	sp, sp, #124
 20770              		.cfi_def_cfa_offset 136
 20771 0004 02AF     		add	r7, sp, #8
 20772              		.cfi_def_cfa 7, 128
 20773 0006 7860     		str	r0, [r7, #4]
2702:..\src/command_processing.c ****     char str[100];  
2703:..\src/command_processing.c ****     int i;
2704:..\src/command_processing.c ****             
2705:..\src/command_processing.c ****     strcpy(info_string, "");
 20774              		.loc 1 2705 0
 20775 0008 7B68     		ldr	r3, [r7, #4]
 20776 000a 0022     		movs	r2, #0
 20777 000c 1A70     		strb	r2, [r3]
2706:..\src/command_processing.c ****     
2707:..\src/command_processing.c ****     // Time
2708:..\src/command_processing.c ****     strcat(info_string, "");
2709:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 20778              		.loc 1 2709 0
 20779 000e 424B     		ldr	r3, .L793
 20780 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 20781 0014 1A46     		mov	r2, r3
 20782 0016 404B     		ldr	r3, .L793
 20783 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 20784 001c 1946     		mov	r1, r3
 20785 001e 3E4B     		ldr	r3, .L793
 20786 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 20787 0024 07F10800 		add	r0, r7, #8
 20788 0028 0093     		str	r3, [sp]
 20789 002a 0B46     		mov	r3, r1
 20790 002c 3B49     		ldr	r1, .L793+4
 20791 002e FFF7FEFF 		bl	sprintf
2710:..\src/command_processing.c ****     strcat(info_string, str);
 20792              		.loc 1 2710 0
 20793 0032 07F10803 		add	r3, r7, #8
 20794 0036 1946     		mov	r1, r3
 20795 0038 7868     		ldr	r0, [r7, #4]
 20796 003a FFF7FEFF 		bl	strcat
2711:..\src/command_processing.c **** 
2712:..\src/command_processing.c ****     // Pos_Bin
2713:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 20797              		.loc 1 2713 0
 20798 003e 0123     		movs	r3, #1
 20799 0040 FB66     		str	r3, [r7, #108]
 20800 0042 14E0     		b	.L789
 20801              	.L790:
2714:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20802              		.loc 1 2714 0 discriminator 3
 20803 0044 FB6E     		ldr	r3, [r7, #108]
 20804 0046 013B     		subs	r3, r3, #1
 20805 0048 334A     		ldr	r2, .L793
 20806 004a 0633     		adds	r3, r3, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 456


 20807 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20808 0050 07F10803 		add	r3, r7, #8
 20809 0054 3249     		ldr	r1, .L793+8
 20810 0056 1846     		mov	r0, r3
 20811 0058 FFF7FEFF 		bl	sprintf
2715:..\src/command_processing.c ****         strcat(info_string, str);
 20812              		.loc 1 2715 0 discriminator 3
 20813 005c 07F10803 		add	r3, r7, #8
 20814 0060 1946     		mov	r1, r3
 20815 0062 7868     		ldr	r0, [r7, #4]
 20816 0064 FFF7FEFF 		bl	strcat
2713:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20817              		.loc 1 2713 0 discriminator 3
 20818 0068 FB6E     		ldr	r3, [r7, #108]
 20819 006a 0133     		adds	r3, r3, #1
 20820 006c FB66     		str	r3, [r7, #108]
 20821              	.L789:
2713:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20822              		.loc 1 2713 0 is_stmt 0 discriminator 1
 20823 006e FB6E     		ldr	r3, [r7, #108]
 20824 0070 0A2B     		cmp	r3, #10
 20825 0072 E7DD     		ble	.L790
2716:..\src/command_processing.c ****     }
2717:..\src/command_processing.c ****     
2718:..\src/command_processing.c ****     // Curr_Bin
2719:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 20826              		.loc 1 2719 0 is_stmt 1
 20827 0074 0123     		movs	r3, #1
 20828 0076 FB66     		str	r3, [r7, #108]
 20829 0078 14E0     		b	.L791
 20830              	.L792:
2720:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20831              		.loc 1 2720 0 discriminator 3
 20832 007a FB6E     		ldr	r3, [r7, #108]
 20833 007c 013B     		subs	r3, r3, #1
 20834 007e 264A     		ldr	r2, .L793
 20835 0080 1033     		adds	r3, r3, #16
 20836 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20837 0086 07F10803 		add	r3, r7, #8
 20838 008a 2549     		ldr	r1, .L793+8
 20839 008c 1846     		mov	r0, r3
 20840 008e FFF7FEFF 		bl	sprintf
2721:..\src/command_processing.c ****         strcat(info_string, str);
 20841              		.loc 1 2721 0 discriminator 3
 20842 0092 07F10803 		add	r3, r7, #8
 20843 0096 1946     		mov	r1, r3
 20844 0098 7868     		ldr	r0, [r7, #4]
 20845 009a FFF7FEFF 		bl	strcat
2719:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20846              		.loc 1 2719 0 discriminator 3
 20847 009e FB6E     		ldr	r3, [r7, #108]
 20848 00a0 0133     		adds	r3, r3, #1
 20849 00a2 FB66     		str	r3, [r7, #108]
 20850              	.L791:
2719:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20851              		.loc 1 2719 0 is_stmt 0 discriminator 1
 20852 00a4 FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 457


 20853 00a6 042B     		cmp	r3, #4
 20854 00a8 E7DD     		ble	.L792
2722:..\src/command_processing.c ****     }
2723:..\src/command_processing.c ****        
2724:..\src/command_processing.c ****     // EMG_1, EMG_2
2725:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 20855              		.loc 1 2725 0 is_stmt 1
 20856 00aa 1B4B     		ldr	r3, .L793
 20857 00ac 1A69     		ldr	r2, [r3, #16]
 20858 00ae 1A4B     		ldr	r3, .L793
 20859 00b0 5B69     		ldr	r3, [r3, #20]
 20860 00b2 07F10800 		add	r0, r7, #8
 20861 00b6 1B49     		ldr	r1, .L793+12
 20862 00b8 FFF7FEFF 		bl	sprintf
2726:..\src/command_processing.c ****     strcat(info_string, str);
 20863              		.loc 1 2726 0
 20864 00bc 07F10803 		add	r3, r7, #8
 20865 00c0 1946     		mov	r1, r3
 20866 00c2 7868     		ldr	r0, [r7, #4]
 20867 00c4 FFF7FEFF 		bl	strcat
2727:..\src/command_processing.c ****     
2728:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2729:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 20868              		.loc 1 2729 0
 20869 00c8 134B     		ldr	r3, .L793
 20870 00ca 196D     		ldr	r1, [r3, #80]
 20871 00cc 124B     		ldr	r3, .L793
 20872 00ce 5C6D     		ldr	r4, [r3, #84]
 20873 00d0 114B     		ldr	r3, .L793
 20874 00d2 9B6D     		ldr	r3, [r3, #88]
 20875 00d4 104A     		ldr	r2, .L793
 20876 00d6 D26D     		ldr	r2, [r2, #92]
 20877 00d8 07F10800 		add	r0, r7, #8
 20878 00dc 0192     		str	r2, [sp, #4]
 20879 00de 0093     		str	r3, [sp]
 20880 00e0 2346     		mov	r3, r4
 20881 00e2 0A46     		mov	r2, r1
 20882 00e4 1049     		ldr	r1, .L793+16
 20883 00e6 FFF7FEFF 		bl	sprintf
2730:..\src/command_processing.c ****     strcat(info_string, str);
 20884              		.loc 1 2730 0
 20885 00ea 07F10803 		add	r3, r7, #8
 20886 00ee 1946     		mov	r1, r3
 20887 00f0 7868     		ldr	r0, [r7, #4]
 20888 00f2 FFF7FEFF 		bl	strcat
2731:..\src/command_processing.c ****     
2732:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20889              		.loc 1 2732 0
 20890 00f6 7868     		ldr	r0, [r7, #4]
 20891 00f8 FFF7FEFF 		bl	strlen
 20892 00fc 0346     		mov	r3, r0
 20893 00fe 1A46     		mov	r2, r3
 20894 0100 7B68     		ldr	r3, [r7, #4]
 20895 0102 1344     		add	r3, r3, r2
 20896 0104 094A     		ldr	r2, .L793+20
 20897 0106 1188     		ldrh	r1, [r2]	@ unaligned
 20898 0108 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 458


 20899 010a 1980     		strh	r1, [r3]	@ unaligned
 20900 010c 9A70     		strb	r2, [r3, #2]
2733:..\src/command_processing.c **** }
 20901              		.loc 1 2733 0
 20902 010e 00BF     		nop
 20903 0110 7437     		adds	r7, r7, #116
 20904              		.cfi_def_cfa_offset 12
 20905 0112 BD46     		mov	sp, r7
 20906              		.cfi_def_cfa_register 13
 20907              		@ sp needed
 20908 0114 90BD     		pop	{r4, r7, pc}
 20909              	.L794:
 20910 0116 00BF     		.align	2
 20911              	.L793:
 20912 0118 00000000 		.word	g_mem
 20913 011c EC1E0000 		.word	.LC295
 20914 0120 FC1E0000 		.word	.LC296
 20915 0124 041F0000 		.word	.LC297
 20916 0128 101F0000 		.word	.LC298
 20917 012c 10110000 		.word	.LC150
 20918              		.cfi_endproc
 20919              	.LFE76:
 20920              		.size	prepare_SD_info, .-prepare_SD_info
 20921              		.section	.rodata
 20922              		.align	2
 20923              	.LC299:
 20924 1f20 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 20924      4F525320 
 20924      494E464F 
 20924      0D0A00
 20925 1f2f 00       		.align	2
 20926              	.LC300:
 20927 1f30 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 20927      3A202564 
 20927      09256409 
 20927      25640D0A 
 20927      00
 20928 1f41 000000   		.align	2
 20929              	.LC301:
 20930 1f44 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 20930      6F3A2025 
 20930      64092564 
 20930      0925640D 
 20930      0A00
 20931 1f56 0000     		.align	2
 20932              	.LC302:
 20933 1f58 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 20933      3A202564 
 20933      09256409 
 20933      25640D0A 
 20933      00
 20934 1f69 000000   		.align	2
 20935              	.LC303:
 20936 1f6c 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 20936      743A2025 
 20936      2E336609 
 20936      252E3366 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 459


 20936      09252E33 
 20937 1f89 000000   		.align	2
 20938              	.LC304:
 20939 1f8c 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 20939      70657261 
 20939      74757265 
 20939      3A202564 
 20939      0D0A00
 20940              		.section	.text.IMU_reading_info,"ax",%progbits
 20941              		.align	2
 20942              		.global	IMU_reading_info
 20943              		.thumb
 20944              		.thumb_func
 20945              		.type	IMU_reading_info, %function
 20946              	IMU_reading_info:
 20947              	.LFB77:
2734:..\src/command_processing.c **** 
2735:..\src/command_processing.c **** //==============================================================================
2736:..\src/command_processing.c **** //                                                              IMU READING INFO
2737:..\src/command_processing.c **** //==============================================================================
2738:..\src/command_processing.c **** 
2739:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2740:..\src/command_processing.c **** {
 20948              		.loc 1 2740 0
 20949              		.cfi_startproc
 20950              		@ args = 0, pretend = 0, frame = 312
 20951              		@ frame_needed = 1, uses_anonymous_args = 0
 20952 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 20953              		.cfi_def_cfa_offset 32
 20954              		.cfi_offset 4, -32
 20955              		.cfi_offset 5, -28
 20956              		.cfi_offset 7, -24
 20957              		.cfi_offset 8, -20
 20958              		.cfi_offset 9, -16
 20959              		.cfi_offset 10, -12
 20960              		.cfi_offset 11, -8
 20961              		.cfi_offset 14, -4
 20962 0004 D4B0     		sub	sp, sp, #336
 20963              		.cfi_def_cfa_offset 368
 20964 0006 06AF     		add	r7, sp, #24
 20965              		.cfi_def_cfa 7, 344
 20966 0008 3B1D     		adds	r3, r7, #4
 20967 000a 1860     		str	r0, [r3]
2741:..\src/command_processing.c ****     char str[300];  
2742:..\src/command_processing.c ****     int i;
2743:..\src/command_processing.c ****                  
2744:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 20968              		.loc 1 2744 0
 20969 000c 3B1D     		adds	r3, r7, #4
 20970 000e 1868     		ldr	r0, [r3]
 20971 0010 FFF7FEFF 		bl	strlen
 20972 0014 0346     		mov	r3, r0
 20973 0016 1A46     		mov	r2, r3
 20974 0018 3B1D     		adds	r3, r7, #4
 20975 001a 1B68     		ldr	r3, [r3]
 20976 001c 1344     		add	r3, r3, r2
 20977 001e C94A     		ldr	r2, .L803
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 460


 20978 0020 1C46     		mov	r4, r3
 20979 0022 1346     		mov	r3, r2
 20980 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 20981 0026 2060     		str	r0, [r4]	@ unaligned
 20982 0028 6160     		str	r1, [r4, #4]	@ unaligned
 20983 002a A260     		str	r2, [r4, #8]	@ unaligned
 20984 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 20985 002e 9B78     		ldrb	r3, [r3, #2]
 20986 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 20987 0032 A373     		strb	r3, [r4, #14]
2745:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 20988              		.loc 1 2745 0
 20989 0034 0023     		movs	r3, #0
 20990 0036 C7F83431 		str	r3, [r7, #308]
 20991 003a 66E1     		b	.L796
 20992              	.L802:
2746:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20993              		.loc 1 2746 0
 20994 003c C24A     		ldr	r2, .L803+4
 20995 003e D7F83431 		ldr	r3, [r7, #308]
 20996 0042 1344     		add	r3, r3, r2
 20997 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20998 0046 07F10800 		add	r0, r7, #8
 20999 004a D7F83421 		ldr	r2, [r7, #308]
 21000 004e BF49     		ldr	r1, .L803+8
 21001 0050 FFF7FEFF 		bl	sprintf
2747:..\src/command_processing.c ****         strcat(info_string, str);
 21002              		.loc 1 2747 0
 21003 0054 07F10802 		add	r2, r7, #8
 21004 0058 3B1D     		adds	r3, r7, #4
 21005 005a 1146     		mov	r1, r2
 21006 005c 1868     		ldr	r0, [r3]
 21007 005e FFF7FEFF 		bl	strcat
2748:..\src/command_processing.c ****         
2749:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21008              		.loc 1 2749 0
 21009 0062 B94A     		ldr	r2, .L803+4
 21010 0064 D7F83431 		ldr	r3, [r7, #308]
 21011 0068 1344     		add	r3, r3, r2
 21012 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21013 006c 1946     		mov	r1, r3
 21014 006e B84A     		ldr	r2, .L803+12
 21015 0070 0B46     		mov	r3, r1
 21016 0072 9B00     		lsls	r3, r3, #2
 21017 0074 0B44     		add	r3, r3, r1
 21018 0076 1344     		add	r3, r3, r2
 21019 0078 03F20223 		addw	r3, r3, #514
 21020 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21021 007e 002B     		cmp	r3, #0
 21022 0080 31D0     		beq	.L797
2750:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21023              		.loc 1 2750 0
 21024 0082 B449     		ldr	r1, .L803+16
 21025 0084 D7F83421 		ldr	r2, [r7, #308]
 21026 0088 1346     		mov	r3, r2
 21027 008a 9B00     		lsls	r3, r3, #2
 21028 008c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 461


 21029 008e DB00     		lsls	r3, r3, #3
 21030 0090 0B44     		add	r3, r3, r1
 21031 0092 0233     		adds	r3, r3, #2
 21032 0094 B3F90030 		ldrsh	r3, [r3]
 21033 0098 1C46     		mov	r4, r3
 21034 009a AE49     		ldr	r1, .L803+16
 21035 009c D7F83421 		ldr	r2, [r7, #308]
 21036 00a0 1346     		mov	r3, r2
 21037 00a2 9B00     		lsls	r3, r3, #2
 21038 00a4 1344     		add	r3, r3, r2
 21039 00a6 DB00     		lsls	r3, r3, #3
 21040 00a8 0B44     		add	r3, r3, r1
 21041 00aa 0433     		adds	r3, r3, #4
 21042 00ac B3F90030 		ldrsh	r3, [r3]
 21043 00b0 1D46     		mov	r5, r3
 21044 00b2 A849     		ldr	r1, .L803+16
 21045 00b4 D7F83421 		ldr	r2, [r7, #308]
 21046 00b8 1346     		mov	r3, r2
 21047 00ba 9B00     		lsls	r3, r3, #2
 21048 00bc 1344     		add	r3, r3, r2
 21049 00be DB00     		lsls	r3, r3, #3
 21050 00c0 0B44     		add	r3, r3, r1
 21051 00c2 0633     		adds	r3, r3, #6
 21052 00c4 B3F90030 		ldrsh	r3, [r3]
 21053 00c8 07F10800 		add	r0, r7, #8
 21054 00cc 0093     		str	r3, [sp]
 21055 00ce 2B46     		mov	r3, r5
 21056 00d0 2246     		mov	r2, r4
 21057 00d2 A149     		ldr	r1, .L803+20
 21058 00d4 FFF7FEFF 		bl	sprintf
2751:..\src/command_processing.c ****             strcat(info_string, str);
 21059              		.loc 1 2751 0
 21060 00d8 07F10802 		add	r2, r7, #8
 21061 00dc 3B1D     		adds	r3, r7, #4
 21062 00de 1146     		mov	r1, r2
 21063 00e0 1868     		ldr	r0, [r3]
 21064 00e2 FFF7FEFF 		bl	strcat
 21065              	.L797:
2752:..\src/command_processing.c ****         }
2753:..\src/command_processing.c **** 
2754:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21066              		.loc 1 2754 0
 21067 00e6 984A     		ldr	r2, .L803+4
 21068 00e8 D7F83431 		ldr	r3, [r7, #308]
 21069 00ec 1344     		add	r3, r3, r2
 21070 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21071 00f0 1946     		mov	r1, r3
 21072 00f2 974A     		ldr	r2, .L803+12
 21073 00f4 0B46     		mov	r3, r1
 21074 00f6 9B00     		lsls	r3, r3, #2
 21075 00f8 0B44     		add	r3, r3, r1
 21076 00fa 1344     		add	r3, r3, r2
 21077 00fc 03F20323 		addw	r3, r3, #515
 21078 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21079 0102 002B     		cmp	r3, #0
 21080 0104 31D0     		beq	.L798
2755:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 462


 21081              		.loc 1 2755 0
 21082 0106 9349     		ldr	r1, .L803+16
 21083 0108 D7F83421 		ldr	r2, [r7, #308]
 21084 010c 1346     		mov	r3, r2
 21085 010e 9B00     		lsls	r3, r3, #2
 21086 0110 1344     		add	r3, r3, r2
 21087 0112 DB00     		lsls	r3, r3, #3
 21088 0114 0B44     		add	r3, r3, r1
 21089 0116 0833     		adds	r3, r3, #8
 21090 0118 B3F90030 		ldrsh	r3, [r3]
 21091 011c 1C46     		mov	r4, r3
 21092 011e 8D49     		ldr	r1, .L803+16
 21093 0120 D7F83421 		ldr	r2, [r7, #308]
 21094 0124 1346     		mov	r3, r2
 21095 0126 9B00     		lsls	r3, r3, #2
 21096 0128 1344     		add	r3, r3, r2
 21097 012a DB00     		lsls	r3, r3, #3
 21098 012c 0B44     		add	r3, r3, r1
 21099 012e 0A33     		adds	r3, r3, #10
 21100 0130 B3F90030 		ldrsh	r3, [r3]
 21101 0134 1D46     		mov	r5, r3
 21102 0136 8749     		ldr	r1, .L803+16
 21103 0138 D7F83421 		ldr	r2, [r7, #308]
 21104 013c 1346     		mov	r3, r2
 21105 013e 9B00     		lsls	r3, r3, #2
 21106 0140 1344     		add	r3, r3, r2
 21107 0142 DB00     		lsls	r3, r3, #3
 21108 0144 0B44     		add	r3, r3, r1
 21109 0146 0C33     		adds	r3, r3, #12
 21110 0148 B3F90030 		ldrsh	r3, [r3]
 21111 014c 07F10800 		add	r0, r7, #8
 21112 0150 0093     		str	r3, [sp]
 21113 0152 2B46     		mov	r3, r5
 21114 0154 2246     		mov	r2, r4
 21115 0156 8149     		ldr	r1, .L803+24
 21116 0158 FFF7FEFF 		bl	sprintf
2756:..\src/command_processing.c ****             strcat(info_string, str);
 21117              		.loc 1 2756 0
 21118 015c 07F10802 		add	r2, r7, #8
 21119 0160 3B1D     		adds	r3, r7, #4
 21120 0162 1146     		mov	r1, r2
 21121 0164 1868     		ldr	r0, [r3]
 21122 0166 FFF7FEFF 		bl	strcat
 21123              	.L798:
2757:..\src/command_processing.c ****         }
2758:..\src/command_processing.c **** 
2759:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 21124              		.loc 1 2759 0
 21125 016a 774A     		ldr	r2, .L803+4
 21126 016c D7F83431 		ldr	r3, [r7, #308]
 21127 0170 1344     		add	r3, r3, r2
 21128 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21129 0174 1946     		mov	r1, r3
 21130 0176 764A     		ldr	r2, .L803+12
 21131 0178 0B46     		mov	r3, r1
 21132 017a 9B00     		lsls	r3, r3, #2
 21133 017c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 463


 21134 017e 1344     		add	r3, r3, r2
 21135 0180 03F50173 		add	r3, r3, #516
 21136 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21137 0186 002B     		cmp	r3, #0
 21138 0188 31D0     		beq	.L799
2760:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 21139              		.loc 1 2760 0
 21140 018a 7249     		ldr	r1, .L803+16
 21141 018c D7F83421 		ldr	r2, [r7, #308]
 21142 0190 1346     		mov	r3, r2
 21143 0192 9B00     		lsls	r3, r3, #2
 21144 0194 1344     		add	r3, r3, r2
 21145 0196 DB00     		lsls	r3, r3, #3
 21146 0198 0B44     		add	r3, r3, r1
 21147 019a 0E33     		adds	r3, r3, #14
 21148 019c B3F90030 		ldrsh	r3, [r3]
 21149 01a0 1C46     		mov	r4, r3
 21150 01a2 6C49     		ldr	r1, .L803+16
 21151 01a4 D7F83421 		ldr	r2, [r7, #308]
 21152 01a8 1346     		mov	r3, r2
 21153 01aa 9B00     		lsls	r3, r3, #2
 21154 01ac 1344     		add	r3, r3, r2
 21155 01ae DB00     		lsls	r3, r3, #3
 21156 01b0 0B44     		add	r3, r3, r1
 21157 01b2 1033     		adds	r3, r3, #16
 21158 01b4 B3F90030 		ldrsh	r3, [r3]
 21159 01b8 1D46     		mov	r5, r3
 21160 01ba 6649     		ldr	r1, .L803+16
 21161 01bc D7F83421 		ldr	r2, [r7, #308]
 21162 01c0 1346     		mov	r3, r2
 21163 01c2 9B00     		lsls	r3, r3, #2
 21164 01c4 1344     		add	r3, r3, r2
 21165 01c6 DB00     		lsls	r3, r3, #3
 21166 01c8 0B44     		add	r3, r3, r1
 21167 01ca 1233     		adds	r3, r3, #18
 21168 01cc B3F90030 		ldrsh	r3, [r3]
 21169 01d0 07F10800 		add	r0, r7, #8
 21170 01d4 0093     		str	r3, [sp]
 21171 01d6 2B46     		mov	r3, r5
 21172 01d8 2246     		mov	r2, r4
 21173 01da 6149     		ldr	r1, .L803+28
 21174 01dc FFF7FEFF 		bl	sprintf
2761:..\src/command_processing.c ****             strcat(info_string, str);
 21175              		.loc 1 2761 0
 21176 01e0 07F10802 		add	r2, r7, #8
 21177 01e4 3B1D     		adds	r3, r7, #4
 21178 01e6 1146     		mov	r1, r2
 21179 01e8 1868     		ldr	r0, [r3]
 21180 01ea FFF7FEFF 		bl	strcat
 21181              	.L799:
2762:..\src/command_processing.c ****         }
2763:..\src/command_processing.c ****         
2764:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21182              		.loc 1 2764 0
 21183 01ee 564A     		ldr	r2, .L803+4
 21184 01f0 D7F83431 		ldr	r3, [r7, #308]
 21185 01f4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 464


 21186 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21187 01f8 1946     		mov	r1, r3
 21188 01fa 554A     		ldr	r2, .L803+12
 21189 01fc 0B46     		mov	r3, r1
 21190 01fe 9B00     		lsls	r3, r3, #2
 21191 0200 0B44     		add	r3, r3, r1
 21192 0202 1344     		add	r3, r3, r2
 21193 0204 03F20523 		addw	r3, r3, #517
 21194 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21195 020a 002B     		cmp	r3, #0
 21196 020c 4FD0     		beq	.L800
2765:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21197              		.loc 1 2765 0
 21198 020e 5149     		ldr	r1, .L803+16
 21199 0210 D7F83421 		ldr	r2, [r7, #308]
 21200 0214 1346     		mov	r3, r2
 21201 0216 9B00     		lsls	r3, r3, #2
 21202 0218 1344     		add	r3, r3, r2
 21203 021a DB00     		lsls	r3, r3, #3
 21204 021c 0B44     		add	r3, r3, r1
 21205 021e 1433     		adds	r3, r3, #20
 21206 0220 1B68     		ldr	r3, [r3]	@ float
 21207 0222 1846     		mov	r0, r3
 21208 0224 FFF7FEFF 		bl	__aeabi_f2d
 21209 0228 8246     		mov	r10, r0
 21210 022a 8B46     		mov	fp, r1
 21211 022c 4949     		ldr	r1, .L803+16
 21212 022e D7F83421 		ldr	r2, [r7, #308]
 21213 0232 1346     		mov	r3, r2
 21214 0234 9B00     		lsls	r3, r3, #2
 21215 0236 1344     		add	r3, r3, r2
 21216 0238 DB00     		lsls	r3, r3, #3
 21217 023a 0B44     		add	r3, r3, r1
 21218 023c 1833     		adds	r3, r3, #24
 21219 023e 1B68     		ldr	r3, [r3]	@ float
 21220 0240 1846     		mov	r0, r3
 21221 0242 FFF7FEFF 		bl	__aeabi_f2d
 21222 0246 0446     		mov	r4, r0
 21223 0248 0D46     		mov	r5, r1
 21224 024a 4249     		ldr	r1, .L803+16
 21225 024c D7F83421 		ldr	r2, [r7, #308]
 21226 0250 1346     		mov	r3, r2
 21227 0252 9B00     		lsls	r3, r3, #2
 21228 0254 1344     		add	r3, r3, r2
 21229 0256 DB00     		lsls	r3, r3, #3
 21230 0258 0B44     		add	r3, r3, r1
 21231 025a 1C33     		adds	r3, r3, #28
 21232 025c 1B68     		ldr	r3, [r3]	@ float
 21233 025e 1846     		mov	r0, r3
 21234 0260 FFF7FEFF 		bl	__aeabi_f2d
 21235 0264 8046     		mov	r8, r0
 21236 0266 8946     		mov	r9, r1
 21237 0268 3A49     		ldr	r1, .L803+16
 21238 026a D7F83421 		ldr	r2, [r7, #308]
 21239 026e 1346     		mov	r3, r2
 21240 0270 9B00     		lsls	r3, r3, #2
 21241 0272 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 465


 21242 0274 DB00     		lsls	r3, r3, #3
 21243 0276 0B44     		add	r3, r3, r1
 21244 0278 2033     		adds	r3, r3, #32
 21245 027a 1B68     		ldr	r3, [r3]	@ float
 21246 027c 1846     		mov	r0, r3
 21247 027e FFF7FEFF 		bl	__aeabi_f2d
 21248 0282 0246     		mov	r2, r0
 21249 0284 0B46     		mov	r3, r1
 21250 0286 07F10800 		add	r0, r7, #8
 21251 028a CDE90423 		strd	r2, [sp, #16]
 21252 028e CDE90289 		strd	r8, [sp, #8]
 21253 0292 CDE90045 		strd	r4, [sp]
 21254 0296 5246     		mov	r2, r10
 21255 0298 5B46     		mov	r3, fp
 21256 029a 3249     		ldr	r1, .L803+32
 21257 029c FFF7FEFF 		bl	sprintf
2766:..\src/command_processing.c ****             strcat(info_string, str);
 21258              		.loc 1 2766 0
 21259 02a0 07F10802 		add	r2, r7, #8
 21260 02a4 3B1D     		adds	r3, r7, #4
 21261 02a6 1146     		mov	r1, r2
 21262 02a8 1868     		ldr	r0, [r3]
 21263 02aa FFF7FEFF 		bl	strcat
 21264              	.L800:
2767:..\src/command_processing.c ****         }
2768:..\src/command_processing.c ****         
2769:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21265              		.loc 1 2769 0
 21266 02ae 264A     		ldr	r2, .L803+4
 21267 02b0 D7F83431 		ldr	r3, [r7, #308]
 21268 02b4 1344     		add	r3, r3, r2
 21269 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21270 02b8 1946     		mov	r1, r3
 21271 02ba 254A     		ldr	r2, .L803+12
 21272 02bc 0B46     		mov	r3, r1
 21273 02be 9B00     		lsls	r3, r3, #2
 21274 02c0 0B44     		add	r3, r3, r1
 21275 02c2 1344     		add	r3, r3, r2
 21276 02c4 03F20623 		addw	r3, r3, #518
 21277 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21278 02ca 002B     		cmp	r3, #0
 21279 02cc 18D0     		beq	.L801
2770:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 21280              		.loc 1 2770 0
 21281 02ce 2149     		ldr	r1, .L803+16
 21282 02d0 D7F83421 		ldr	r2, [r7, #308]
 21283 02d4 1346     		mov	r3, r2
 21284 02d6 9B00     		lsls	r3, r3, #2
 21285 02d8 1344     		add	r3, r3, r2
 21286 02da DB00     		lsls	r3, r3, #3
 21287 02dc 0B44     		add	r3, r3, r1
 21288 02de 2433     		adds	r3, r3, #36
 21289 02e0 B3F90030 		ldrsh	r3, [r3]
 21290 02e4 1A46     		mov	r2, r3
 21291 02e6 07F10803 		add	r3, r7, #8
 21292 02ea 1F49     		ldr	r1, .L803+36
 21293 02ec 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 466


 21294 02ee FFF7FEFF 		bl	sprintf
2771:..\src/command_processing.c ****             strcat(info_string, str);
 21295              		.loc 1 2771 0
 21296 02f2 07F10802 		add	r2, r7, #8
 21297 02f6 3B1D     		adds	r3, r7, #4
 21298 02f8 1146     		mov	r1, r2
 21299 02fa 1868     		ldr	r0, [r3]
 21300 02fc FFF7FEFF 		bl	strcat
 21301              	.L801:
2745:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21302              		.loc 1 2745 0 discriminator 2
 21303 0300 D7F83431 		ldr	r3, [r7, #308]
 21304 0304 0133     		adds	r3, r3, #1
 21305 0306 C7F83431 		str	r3, [r7, #308]
 21306              	.L796:
2745:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21307              		.loc 1 2745 0 is_stmt 0 discriminator 1
 21308 030a 184B     		ldr	r3, .L803+40
 21309 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21310 030e 1A46     		mov	r2, r3
 21311 0310 D7F83431 		ldr	r3, [r7, #308]
 21312 0314 9A42     		cmp	r2, r3
 21313 0316 3FF791AE 		bgt	.L802
2772:..\src/command_processing.c ****         }
2773:..\src/command_processing.c ****         
2774:..\src/command_processing.c ****     }
2775:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21314              		.loc 1 2775 0 is_stmt 1
 21315 031a 3B1D     		adds	r3, r7, #4
 21316 031c 1868     		ldr	r0, [r3]
 21317 031e FFF7FEFF 		bl	strlen
 21318 0322 0346     		mov	r3, r0
 21319 0324 1A46     		mov	r2, r3
 21320 0326 3B1D     		adds	r3, r7, #4
 21321 0328 1B68     		ldr	r3, [r3]
 21322 032a 1344     		add	r3, r3, r2
 21323 032c 104A     		ldr	r2, .L803+44
 21324 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21325 0330 9278     		ldrb	r2, [r2, #2]
 21326 0332 1980     		strh	r1, [r3]	@ unaligned
 21327 0334 9A70     		strb	r2, [r3, #2]
2776:..\src/command_processing.c **** }
 21328              		.loc 1 2776 0
 21329 0336 00BF     		nop
 21330 0338 07F59C77 		add	r7, r7, #312
 21331              		.cfi_def_cfa_offset 32
 21332 033c BD46     		mov	sp, r7
 21333              		.cfi_def_cfa_register 13
 21334              		@ sp needed
 21335 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21336              	.L804:
 21337 0342 00BF     		.align	2
 21338              	.L803:
 21339 0344 201F0000 		.word	.LC299
 21340 0348 00000000 		.word	IMU_connected
 21341 034c 941A0000 		.word	.LC252
 21342 0350 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 467


 21343 0354 00000000 		.word	g_imu
 21344 0358 301F0000 		.word	.LC300
 21345 035c 441F0000 		.word	.LC301
 21346 0360 581F0000 		.word	.LC302
 21347 0364 6C1F0000 		.word	.LC303
 21348 0368 8C1F0000 		.word	.LC304
 21349 036c 00000000 		.word	N_IMU_Connected
 21350 0370 10110000 		.word	.LC150
 21351              		.cfi_endproc
 21352              	.LFE77:
 21353              		.size	IMU_reading_info, .-IMU_reading_info
 21354              		.section	.text.commWrite_old_id,"ax",%progbits
 21355              		.align	2
 21356              		.global	commWrite_old_id
 21357              		.thumb
 21358              		.thumb_func
 21359              		.type	commWrite_old_id, %function
 21360              	commWrite_old_id:
 21361              	.LFB78:
2777:..\src/command_processing.c **** 
2778:..\src/command_processing.c **** //==============================================================================
2779:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2780:..\src/command_processing.c **** //==============================================================================
2781:..\src/command_processing.c **** 
2782:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2783:..\src/command_processing.c **** {
 21362              		.loc 1 2783 0
 21363              		.cfi_startproc
 21364              		@ args = 0, pretend = 0, frame = 16
 21365              		@ frame_needed = 1, uses_anonymous_args = 0
 21366 0000 80B5     		push	{r7, lr}
 21367              		.cfi_def_cfa_offset 8
 21368              		.cfi_offset 7, -8
 21369              		.cfi_offset 14, -4
 21370 0002 84B0     		sub	sp, sp, #16
 21371              		.cfi_def_cfa_offset 24
 21372 0004 00AF     		add	r7, sp, #0
 21373              		.cfi_def_cfa_register 7
 21374 0006 7860     		str	r0, [r7, #4]
 21375 0008 0B46     		mov	r3, r1
 21376 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21377 000c 1346     		mov	r3, r2
 21378 000e 7B70     		strb	r3, [r7, #1]
2784:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2785:..\src/command_processing.c **** 
2786:..\src/command_processing.c ****     // frame - start
2787:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21379              		.loc 1 2787 0
 21380 0010 3A20     		movs	r0, #58
 21381 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2788:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21382              		.loc 1 2788 0
 21383 0016 3A20     		movs	r0, #58
 21384 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2789:..\src/command_processing.c ****     // frame - ID
2790:..\src/command_processing.c ****     //if(old_id)
2791:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 468


 21385              		.loc 1 2791 0
 21386 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21387 001e 1846     		mov	r0, r3
 21388 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2792:..\src/command_processing.c ****     //else
2793:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2794:..\src/command_processing.c ****         
2795:..\src/command_processing.c ****     // frame - length
2796:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21389              		.loc 1 2796 0
 21390 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21391 0026 DBB2     		uxtb	r3, r3
 21392 0028 1846     		mov	r0, r3
 21393 002a FFF7FEFF 		bl	UART_RS485_PutChar
2797:..\src/command_processing.c ****     // frame - packet data
2798:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21394              		.loc 1 2798 0
 21395 002e 0023     		movs	r3, #0
 21396 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21397 0032 09E0     		b	.L806
 21398              	.L807:
2799:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21399              		.loc 1 2799 0 discriminator 3
 21400 0034 FB89     		ldrh	r3, [r7, #14]
 21401 0036 7A68     		ldr	r2, [r7, #4]
 21402 0038 1344     		add	r3, r3, r2
 21403 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21404 003c 1846     		mov	r0, r3
 21405 003e FFF7FEFF 		bl	UART_RS485_PutChar
2798:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21406              		.loc 1 2798 0 discriminator 3
 21407 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21408 0044 0133     		adds	r3, r3, #1
 21409 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21410              	.L806:
2798:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21411              		.loc 1 2798 0 is_stmt 0 discriminator 1
 21412 0048 FA89     		ldrh	r2, [r7, #14]
 21413 004a 7B88     		ldrh	r3, [r7, #2]
 21414 004c 9A42     		cmp	r2, r3
 21415 004e F1D3     		bcc	.L807
2800:..\src/command_processing.c ****     }
2801:..\src/command_processing.c **** 
2802:..\src/command_processing.c ****     index = 0;
 21416              		.loc 1 2802 0 is_stmt 1
 21417 0050 0023     		movs	r3, #0
 21418 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2803:..\src/command_processing.c **** 
2804:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21419              		.loc 1 2804 0
 21420 0054 00BF     		nop
 21421              	.L809:
 21422              		.loc 1 2804 0 is_stmt 0 discriminator 2
 21423 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21424 005a 0346     		mov	r3, r0
 21425 005c 03F00103 		and	r3, r3, #1
 21426 0060 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 469


 21427 0062 05D1     		bne	.L808
 21428              		.loc 1 2804 0 discriminator 1
 21429 0064 FB89     		ldrh	r3, [r7, #14]
 21430 0066 5A1C     		adds	r2, r3, #1
 21431 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21432 006a B3F57A7F 		cmp	r3, #1000
 21433 006e F2D9     		bls	.L809
 21434              	.L808:
2805:..\src/command_processing.c **** 
2806:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21435              		.loc 1 2806 0 is_stmt 1
 21436 0070 0120     		movs	r0, #1
 21437 0072 FFF7FEFF 		bl	RS485_CTS_Write
2807:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21438              		.loc 1 2807 0
 21439 0076 0020     		movs	r0, #0
 21440 0078 FFF7FEFF 		bl	RS485_CTS_Write
2808:..\src/command_processing.c **** }
 21441              		.loc 1 2808 0
 21442 007c 00BF     		nop
 21443 007e 1037     		adds	r7, r7, #16
 21444              		.cfi_def_cfa_offset 8
 21445 0080 BD46     		mov	sp, r7
 21446              		.cfi_def_cfa_register 13
 21447              		@ sp needed
 21448 0082 80BD     		pop	{r7, pc}
 21449              		.cfi_endproc
 21450              	.LFE78:
 21451              		.size	commWrite_old_id, .-commWrite_old_id
 21452              		.section	.text.commWrite,"ax",%progbits
 21453              		.align	2
 21454              		.global	commWrite
 21455              		.thumb
 21456              		.thumb_func
 21457              		.type	commWrite, %function
 21458              	commWrite:
 21459              	.LFB79:
2809:..\src/command_processing.c **** 
2810:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2811:..\src/command_processing.c **** {
 21460              		.loc 1 2811 0
 21461              		.cfi_startproc
 21462              		@ args = 0, pretend = 0, frame = 16
 21463              		@ frame_needed = 1, uses_anonymous_args = 0
 21464 0000 80B5     		push	{r7, lr}
 21465              		.cfi_def_cfa_offset 8
 21466              		.cfi_offset 7, -8
 21467              		.cfi_offset 14, -4
 21468 0002 84B0     		sub	sp, sp, #16
 21469              		.cfi_def_cfa_offset 24
 21470 0004 00AF     		add	r7, sp, #0
 21471              		.cfi_def_cfa_register 7
 21472 0006 7860     		str	r0, [r7, #4]
 21473 0008 0B46     		mov	r3, r1
 21474 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2812:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2813:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 470


2814:..\src/command_processing.c ****     // frame - start
2815:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21475              		.loc 1 2815 0
 21476 000c 3A20     		movs	r0, #58
 21477 000e FFF7FEFF 		bl	UART_RS485_PutChar
2816:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21478              		.loc 1 2816 0
 21479 0012 3A20     		movs	r0, #58
 21480 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2817:..\src/command_processing.c ****     // frame - ID
2818:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21481              		.loc 1 2818 0
 21482 0018 1A4B     		ldr	r3, .L815
 21483 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21484 001e 1846     		mov	r0, r3
 21485 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2819:..\src/command_processing.c ****     // frame - length
2820:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21486              		.loc 1 2820 0
 21487 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21488 0026 DBB2     		uxtb	r3, r3
 21489 0028 1846     		mov	r0, r3
 21490 002a FFF7FEFF 		bl	UART_RS485_PutChar
2821:..\src/command_processing.c ****     // frame - packet data
2822:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21491              		.loc 1 2822 0
 21492 002e 0023     		movs	r3, #0
 21493 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21494 0032 09E0     		b	.L811
 21495              	.L812:
2823:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21496              		.loc 1 2823 0 discriminator 3
 21497 0034 FB89     		ldrh	r3, [r7, #14]
 21498 0036 7A68     		ldr	r2, [r7, #4]
 21499 0038 1344     		add	r3, r3, r2
 21500 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21501 003c 1846     		mov	r0, r3
 21502 003e FFF7FEFF 		bl	UART_RS485_PutChar
2822:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21503              		.loc 1 2822 0 discriminator 3
 21504 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21505 0044 0133     		adds	r3, r3, #1
 21506 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21507              	.L811:
2822:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21508              		.loc 1 2822 0 is_stmt 0 discriminator 1
 21509 0048 FA89     		ldrh	r2, [r7, #14]
 21510 004a 7B88     		ldrh	r3, [r7, #2]
 21511 004c 9A42     		cmp	r2, r3
 21512 004e F1D3     		bcc	.L812
2824:..\src/command_processing.c ****     }
2825:..\src/command_processing.c **** 
2826:..\src/command_processing.c ****     index = 0;
 21513              		.loc 1 2826 0 is_stmt 1
 21514 0050 0023     		movs	r3, #0
 21515 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2827:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 471


2828:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21516              		.loc 1 2828 0
 21517 0054 00BF     		nop
 21518              	.L814:
 21519              		.loc 1 2828 0 is_stmt 0 discriminator 2
 21520 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21521 005a 0346     		mov	r3, r0
 21522 005c 03F00103 		and	r3, r3, #1
 21523 0060 002B     		cmp	r3, #0
 21524 0062 05D1     		bne	.L813
 21525              		.loc 1 2828 0 discriminator 1
 21526 0064 FB89     		ldrh	r3, [r7, #14]
 21527 0066 5A1C     		adds	r2, r3, #1
 21528 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21529 006a B3F57A7F 		cmp	r3, #1000
 21530 006e F2D9     		bls	.L814
 21531              	.L813:
2829:..\src/command_processing.c **** 
2830:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21532              		.loc 1 2830 0 is_stmt 1
 21533 0070 0120     		movs	r0, #1
 21534 0072 FFF7FEFF 		bl	RS485_CTS_Write
2831:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21535              		.loc 1 2831 0
 21536 0076 0020     		movs	r0, #0
 21537 0078 FFF7FEFF 		bl	RS485_CTS_Write
2832:..\src/command_processing.c **** }
 21538              		.loc 1 2832 0
 21539 007c 00BF     		nop
 21540 007e 1037     		adds	r7, r7, #16
 21541              		.cfi_def_cfa_offset 8
 21542 0080 BD46     		mov	sp, r7
 21543              		.cfi_def_cfa_register 13
 21544              		@ sp needed
 21545 0082 80BD     		pop	{r7, pc}
 21546              	.L816:
 21547              		.align	2
 21548              	.L815:
 21549 0084 00000000 		.word	g_mem
 21550              		.cfi_endproc
 21551              	.LFE79:
 21552              		.size	commWrite, .-commWrite
 21553              		.section	.text.commWriteID,"ax",%progbits
 21554              		.align	2
 21555              		.global	commWriteID
 21556              		.thumb
 21557              		.thumb_func
 21558              		.type	commWriteID, %function
 21559              	commWriteID:
 21560              	.LFB80:
2833:..\src/command_processing.c **** 
2834:..\src/command_processing.c **** //==============================================================================
2835:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2836:..\src/command_processing.c **** //==============================================================================
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2839:..\src/command_processing.c **** {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 472


 21561              		.loc 1 2839 0
 21562              		.cfi_startproc
 21563              		@ args = 0, pretend = 0, frame = 8
 21564              		@ frame_needed = 1, uses_anonymous_args = 0
 21565 0000 80B5     		push	{r7, lr}
 21566              		.cfi_def_cfa_offset 8
 21567              		.cfi_offset 7, -8
 21568              		.cfi_offset 14, -4
 21569 0002 82B0     		sub	sp, sp, #8
 21570              		.cfi_def_cfa_offset 16
 21571 0004 00AF     		add	r7, sp, #0
 21572              		.cfi_def_cfa_register 7
 21573 0006 7860     		str	r0, [r7, #4]
 21574 0008 0B46     		mov	r3, r1
 21575 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21576 000c 1346     		mov	r3, r2
 21577 000e 7B70     		strb	r3, [r7, #1]
2840:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2841:..\src/command_processing.c **** 
2842:..\src/command_processing.c ****     // frame - start
2843:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21578              		.loc 1 2843 0
 21579 0010 3A20     		movs	r0, #58
 21580 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2844:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21581              		.loc 1 2844 0
 21582 0016 3A20     		movs	r0, #58
 21583 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2845:..\src/command_processing.c ****     // frame - ID
2846:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 21584              		.loc 1 2846 0
 21585 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21586 001e 1846     		mov	r0, r3
 21587 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2847:..\src/command_processing.c ****     // frame - length
2848:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21588              		.loc 1 2848 0
 21589 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21590 0026 DBB2     		uxtb	r3, r3
 21591 0028 1846     		mov	r0, r3
 21592 002a FFF7FEFF 		bl	UART_RS485_PutChar
2849:..\src/command_processing.c ****     // frame - packet data
2850:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 21593              		.loc 1 2850 0
 21594 002e 1B4B     		ldr	r3, .L822
 21595 0030 0022     		movs	r2, #0
 21596 0032 1A80     		strh	r2, [r3]	@ movhi
 21597 0034 0EE0     		b	.L818
 21598              	.L819:
2851:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21599              		.loc 1 2851 0 discriminator 3
 21600 0036 194B     		ldr	r3, .L822
 21601 0038 1B88     		ldrh	r3, [r3]
 21602 003a 1A46     		mov	r2, r3
 21603 003c 7B68     		ldr	r3, [r7, #4]
 21604 003e 1344     		add	r3, r3, r2
 21605 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 473


 21606 0042 1846     		mov	r0, r3
 21607 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2850:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21608              		.loc 1 2850 0 discriminator 3
 21609 0048 144B     		ldr	r3, .L822
 21610 004a 1B88     		ldrh	r3, [r3]
 21611 004c 0133     		adds	r3, r3, #1
 21612 004e 9AB2     		uxth	r2, r3
 21613 0050 124B     		ldr	r3, .L822
 21614 0052 1A80     		strh	r2, [r3]	@ movhi
 21615              	.L818:
2850:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21616              		.loc 1 2850 0 is_stmt 0 discriminator 1
 21617 0054 114B     		ldr	r3, .L822
 21618 0056 1B88     		ldrh	r3, [r3]
 21619 0058 7A88     		ldrh	r2, [r7, #2]
 21620 005a 9A42     		cmp	r2, r3
 21621 005c EBD8     		bhi	.L819
2852:..\src/command_processing.c ****     }
2853:..\src/command_processing.c **** 
2854:..\src/command_processing.c ****     i = 0;
 21622              		.loc 1 2854 0 is_stmt 1
 21623 005e 0F4B     		ldr	r3, .L822
 21624 0060 0022     		movs	r2, #0
 21625 0062 1A80     		strh	r2, [r3]	@ movhi
2855:..\src/command_processing.c **** 
2856:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 21626              		.loc 1 2856 0
 21627 0064 00BF     		nop
 21628              	.L821:
 21629              		.loc 1 2856 0 is_stmt 0 discriminator 2
 21630 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21631 006a 0346     		mov	r3, r0
 21632 006c 03F00103 		and	r3, r3, #1
 21633 0070 002B     		cmp	r3, #0
 21634 0072 08D1     		bne	.L820
 21635              		.loc 1 2856 0 discriminator 1
 21636 0074 094B     		ldr	r3, .L822
 21637 0076 1B88     		ldrh	r3, [r3]
 21638 0078 5A1C     		adds	r2, r3, #1
 21639 007a 91B2     		uxth	r1, r2
 21640 007c 074A     		ldr	r2, .L822
 21641 007e 1180     		strh	r1, [r2]	@ movhi
 21642 0080 B3F57A7F 		cmp	r3, #1000
 21643 0084 EFD9     		bls	.L821
 21644              	.L820:
2857:..\src/command_processing.c ****     
2858:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21645              		.loc 1 2858 0 is_stmt 1
 21646 0086 0120     		movs	r0, #1
 21647 0088 FFF7FEFF 		bl	RS485_CTS_Write
2859:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21648              		.loc 1 2859 0
 21649 008c 0020     		movs	r0, #0
 21650 008e FFF7FEFF 		bl	RS485_CTS_Write
2860:..\src/command_processing.c **** }
 21651              		.loc 1 2860 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 474


 21652 0092 00BF     		nop
 21653 0094 0837     		adds	r7, r7, #8
 21654              		.cfi_def_cfa_offset 8
 21655 0096 BD46     		mov	sp, r7
 21656              		.cfi_def_cfa_register 13
 21657              		@ sp needed
 21658 0098 80BD     		pop	{r7, pc}
 21659              	.L823:
 21660 009a 00BF     		.align	2
 21661              	.L822:
 21662 009c 00000000 		.word	i.11211
 21663              		.cfi_endproc
 21664              	.LFE80:
 21665              		.size	commWriteID, .-commWriteID
 21666              		.section	.text.LCRChecksum,"ax",%progbits
 21667              		.align	2
 21668              		.global	LCRChecksum
 21669              		.thumb
 21670              		.thumb_func
 21671              		.type	LCRChecksum, %function
 21672              	LCRChecksum:
 21673              	.LFB81:
2861:..\src/command_processing.c **** 
2862:..\src/command_processing.c **** //==============================================================================
2863:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2864:..\src/command_processing.c **** //==============================================================================
2865:..\src/command_processing.c **** 
2866:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2867:..\src/command_processing.c **** 
2868:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 21674              		.loc 1 2868 0
 21675              		.cfi_startproc
 21676              		@ args = 0, pretend = 0, frame = 16
 21677              		@ frame_needed = 1, uses_anonymous_args = 0
 21678              		@ link register save eliminated.
 21679 0000 80B4     		push	{r7}
 21680              		.cfi_def_cfa_offset 4
 21681              		.cfi_offset 7, -4
 21682 0002 85B0     		sub	sp, sp, #20
 21683              		.cfi_def_cfa_offset 24
 21684 0004 00AF     		add	r7, sp, #0
 21685              		.cfi_def_cfa_register 7
 21686 0006 7860     		str	r0, [r7, #4]
 21687 0008 0B46     		mov	r3, r1
 21688 000a FB70     		strb	r3, [r7, #3]
2869:..\src/command_processing.c ****     
2870:..\src/command_processing.c ****     uint8 CYDATA i;
2871:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 21689              		.loc 1 2871 0
 21690 000c 0023     		movs	r3, #0
 21691 000e BB73     		strb	r3, [r7, #14]
2872:..\src/command_processing.c ****     
2873:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 21692              		.loc 1 2873 0
 21693 0010 0023     		movs	r3, #0
 21694 0012 FB73     		strb	r3, [r7, #15]
 21695 0014 09E0     		b	.L825
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 475


 21696              	.L826:
2874:..\src/command_processing.c ****        checksum ^= data_array[i];
 21697              		.loc 1 2874 0 discriminator 3
 21698 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21699 0018 7A68     		ldr	r2, [r7, #4]
 21700 001a 1344     		add	r3, r3, r2
 21701 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 21702 001e BB7B     		ldrb	r3, [r7, #14]
 21703 0020 5340     		eors	r3, r3, r2
 21704 0022 BB73     		strb	r3, [r7, #14]
2873:..\src/command_processing.c ****        checksum ^= data_array[i];
 21705              		.loc 1 2873 0 discriminator 3
 21706 0024 FB7B     		ldrb	r3, [r7, #15]
 21707 0026 0133     		adds	r3, r3, #1
 21708 0028 FB73     		strb	r3, [r7, #15]
 21709              	.L825:
2873:..\src/command_processing.c ****        checksum ^= data_array[i];
 21710              		.loc 1 2873 0 is_stmt 0 discriminator 1
 21711 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 21712 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21713 002e 9A42     		cmp	r2, r3
 21714 0030 F1D3     		bcc	.L826
2875:..\src/command_processing.c ****   
2876:..\src/command_processing.c ****     return checksum;
 21715              		.loc 1 2876 0 is_stmt 1
 21716 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2877:..\src/command_processing.c **** }
 21717              		.loc 1 2877 0
 21718 0034 1846     		mov	r0, r3
 21719 0036 1437     		adds	r7, r7, #20
 21720              		.cfi_def_cfa_offset 4
 21721 0038 BD46     		mov	sp, r7
 21722              		.cfi_def_cfa_register 13
 21723              		@ sp needed
 21724 003a 80BC     		pop	{r7}
 21725              		.cfi_restore 7
 21726              		.cfi_def_cfa_offset 0
 21727 003c 7047     		bx	lr
 21728              		.cfi_endproc
 21729              	.LFE81:
 21730              		.size	LCRChecksum, .-LCRChecksum
 21731 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 21732              		.align	2
 21733              		.global	sendAcknowledgment
 21734              		.thumb
 21735              		.thumb_func
 21736              		.type	sendAcknowledgment, %function
 21737              	sendAcknowledgment:
 21738              	.LFB82:
2878:..\src/command_processing.c **** 
2879:..\src/command_processing.c **** 
2880:..\src/command_processing.c **** //==============================================================================
2881:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2882:..\src/command_processing.c **** //==============================================================================
2883:..\src/command_processing.c **** 
2884:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 21739              		.loc 1 2884 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 476


 21740              		.cfi_startproc
 21741              		@ args = 0, pretend = 0, frame = 16
 21742              		@ frame_needed = 1, uses_anonymous_args = 0
 21743 0000 80B5     		push	{r7, lr}
 21744              		.cfi_def_cfa_offset 8
 21745              		.cfi_offset 7, -8
 21746              		.cfi_offset 14, -4
 21747 0002 84B0     		sub	sp, sp, #16
 21748              		.cfi_def_cfa_offset 24
 21749 0004 00AF     		add	r7, sp, #0
 21750              		.cfi_def_cfa_register 7
 21751 0006 0346     		mov	r3, r0
 21752 0008 FB71     		strb	r3, [r7, #7]
2885:..\src/command_processing.c ****     int packet_lenght = 2;
 21753              		.loc 1 2885 0
 21754 000a 0223     		movs	r3, #2
 21755 000c FB60     		str	r3, [r7, #12]
2886:..\src/command_processing.c ****     uint8 packet_data[2];
2887:..\src/command_processing.c **** 
2888:..\src/command_processing.c ****     packet_data[0] = value;
 21756              		.loc 1 2888 0
 21757 000e FB79     		ldrb	r3, [r7, #7]
 21758 0010 3B72     		strb	r3, [r7, #8]
2889:..\src/command_processing.c ****     packet_data[1] = value;
 21759              		.loc 1 2889 0
 21760 0012 FB79     		ldrb	r3, [r7, #7]
 21761 0014 7B72     		strb	r3, [r7, #9]
2890:..\src/command_processing.c **** 
2891:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 21762              		.loc 1 2891 0
 21763 0016 FB68     		ldr	r3, [r7, #12]
 21764 0018 9AB2     		uxth	r2, r3
 21765 001a 07F10803 		add	r3, r7, #8
 21766 001e 1146     		mov	r1, r2
 21767 0020 1846     		mov	r0, r3
 21768 0022 FFF7FEFF 		bl	commWrite
2892:..\src/command_processing.c **** }
 21769              		.loc 1 2892 0
 21770 0026 00BF     		nop
 21771 0028 1037     		adds	r7, r7, #16
 21772              		.cfi_def_cfa_offset 8
 21773 002a BD46     		mov	sp, r7
 21774              		.cfi_def_cfa_register 13
 21775              		@ sp needed
 21776 002c 80BD     		pop	{r7, pc}
 21777              		.cfi_endproc
 21778              	.LFE82:
 21779              		.size	sendAcknowledgment, .-sendAcknowledgment
 21780 002e 00BF     		.section	.text.memStore,"ax",%progbits
 21781              		.align	2
 21782              		.global	memStore
 21783              		.thumb
 21784              		.thumb_func
 21785              		.type	memStore, %function
 21786              	memStore:
 21787              	.LFB83:
2893:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 477


2894:..\src/command_processing.c **** //==============================================================================
2895:..\src/command_processing.c **** //                                                                  STORE MEMORY
2896:..\src/command_processing.c **** //==============================================================================
2897:..\src/command_processing.c **** 
2898:..\src/command_processing.c **** 
2899:..\src/command_processing.c **** uint8 memStore(int displacement)
2900:..\src/command_processing.c **** {
 21788              		.loc 1 2900 0
 21789              		.cfi_startproc
 21790              		@ args = 0, pretend = 0, frame = 24
 21791              		@ frame_needed = 1, uses_anonymous_args = 0
 21792 0000 80B5     		push	{r7, lr}
 21793              		.cfi_def_cfa_offset 8
 21794              		.cfi_offset 7, -8
 21795              		.cfi_offset 14, -4
 21796 0002 86B0     		sub	sp, sp, #24
 21797              		.cfi_def_cfa_offset 32
 21798 0004 00AF     		add	r7, sp, #0
 21799              		.cfi_def_cfa_register 7
 21800 0006 7860     		str	r0, [r7, #4]
2901:..\src/command_processing.c ****     int i;  // iterator
2902:..\src/command_processing.c ****     uint8 writeStatus;
2903:..\src/command_processing.c ****     int pages;
2904:..\src/command_processing.c ****     uint8 ret_val = 1;
 21801              		.loc 1 2904 0
 21802 0008 0123     		movs	r3, #1
 21803 000a FB74     		strb	r3, [r7, #19]
2905:..\src/command_processing.c **** 
2906:..\src/command_processing.c ****     // Disable Interrupt
2907:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 21804              		.loc 1 2907 0
 21805 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2908:..\src/command_processing.c **** 
2909:..\src/command_processing.c ****     // Stop motor
2910:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 21806              		.loc 1 2910 0
 21807 0010 0020     		movs	r0, #0
 21808 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2911:..\src/command_processing.c **** 
2912:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2913:..\src/command_processing.c ****     CySetTemp();
 21809              		.loc 1 2913 0
 21810 0016 FFF7FEFF 		bl	CySetTemp
2914:..\src/command_processing.c **** 
2915:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 21811              		.loc 1 2915 0
 21812 001a 1D4A     		ldr	r2, .L835
 21813 001c 1D4B     		ldr	r3, .L835+4
 21814 001e 1046     		mov	r0, r2
 21815 0020 1946     		mov	r1, r3
 21816 0022 4FF43D73 		mov	r3, #756
 21817 0026 1A46     		mov	r2, r3
 21818 0028 FFF7FEFF 		bl	memcpy
2916:..\src/command_processing.c **** 
2917:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 21819              		.loc 1 2917 0
 21820 002c 3023     		movs	r3, #48
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 478


 21821 002e FB60     		str	r3, [r7, #12]
2918:..\src/command_processing.c **** 
2919:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 21822              		.loc 1 2919 0
 21823 0030 0023     		movs	r3, #0
 21824 0032 7B61     		str	r3, [r7, #20]
 21825 0034 18E0     		b	.L830
 21826              	.L833:
2920:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 21827              		.loc 1 2920 0
 21828 0036 7B69     		ldr	r3, [r7, #20]
 21829 0038 1B01     		lsls	r3, r3, #4
 21830 003a 1A46     		mov	r2, r3
 21831 003c 154B     		ldr	r3, .L835+4
 21832 003e D018     		adds	r0, r2, r3
 21833 0040 7B69     		ldr	r3, [r7, #20]
 21834 0042 DAB2     		uxtb	r2, r3
 21835 0044 7B68     		ldr	r3, [r7, #4]
 21836 0046 DBB2     		uxtb	r3, r3
 21837 0048 1344     		add	r3, r3, r2
 21838 004a DBB2     		uxtb	r3, r3
 21839 004c 1946     		mov	r1, r3
 21840 004e FFF7FEFF 		bl	EEPROM_Write
 21841 0052 0346     		mov	r3, r0
 21842 0054 FB72     		strb	r3, [r7, #11]
2921:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 21843              		.loc 1 2921 0
 21844 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 21845 0058 002B     		cmp	r3, #0
 21846 005a 02D0     		beq	.L831
2922:..\src/command_processing.c ****             ret_val = 0;
 21847              		.loc 1 2922 0
 21848 005c 0023     		movs	r3, #0
 21849 005e FB74     		strb	r3, [r7, #19]
2923:..\src/command_processing.c ****             break;
 21850              		.loc 1 2923 0
 21851 0060 06E0     		b	.L832
 21852              	.L831:
2919:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 21853              		.loc 1 2919 0 discriminator 2
 21854 0062 7B69     		ldr	r3, [r7, #20]
 21855 0064 0133     		adds	r3, r3, #1
 21856 0066 7B61     		str	r3, [r7, #20]
 21857              	.L830:
2919:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 21858              		.loc 1 2919 0 is_stmt 0 discriminator 1
 21859 0068 7A69     		ldr	r2, [r7, #20]
 21860 006a FB68     		ldr	r3, [r7, #12]
 21861 006c 9A42     		cmp	r2, r3
 21862 006e E2DB     		blt	.L833
 21863              	.L832:
2924:..\src/command_processing.c ****         }
2925:..\src/command_processing.c ****     }
2926:..\src/command_processing.c **** 
2927:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 21864              		.loc 1 2927 0 is_stmt 1
 21865 0070 084A     		ldr	r2, .L835+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 479


 21866 0072 074B     		ldr	r3, .L835
 21867 0074 1046     		mov	r0, r2
 21868 0076 1946     		mov	r1, r3
 21869 0078 4FF43D73 		mov	r3, #756
 21870 007c 1A46     		mov	r2, r3
 21871 007e FFF7FEFF 		bl	memcpy
2928:..\src/command_processing.c **** 
2929:..\src/command_processing.c ****     // Re-Enable Interrupt
2930:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 21872              		.loc 1 2930 0
 21873 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2931:..\src/command_processing.c **** 
2932:..\src/command_processing.c ****     return ret_val;
 21874              		.loc 1 2932 0
 21875 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2933:..\src/command_processing.c **** }
 21876              		.loc 1 2933 0
 21877 0088 1846     		mov	r0, r3
 21878 008a 1837     		adds	r7, r7, #24
 21879              		.cfi_def_cfa_offset 8
 21880 008c BD46     		mov	sp, r7
 21881              		.cfi_def_cfa_register 13
 21882              		@ sp needed
 21883 008e 80BD     		pop	{r7, pc}
 21884              	.L836:
 21885              		.align	2
 21886              	.L835:
 21887 0090 00000000 		.word	c_mem
 21888 0094 00000000 		.word	g_mem
 21889              		.cfi_endproc
 21890              	.LFE83:
 21891              		.size	memStore, .-memStore
 21892              		.section	.text.memRecall,"ax",%progbits
 21893              		.align	2
 21894              		.global	memRecall
 21895              		.thumb
 21896              		.thumb_func
 21897              		.type	memRecall, %function
 21898              	memRecall:
 21899              	.LFB84:
2934:..\src/command_processing.c **** 
2935:..\src/command_processing.c **** 
2936:..\src/command_processing.c **** //==============================================================================
2937:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2938:..\src/command_processing.c **** //==============================================================================
2939:..\src/command_processing.c **** 
2940:..\src/command_processing.c **** 
2941:..\src/command_processing.c **** void memRecall(void)
2942:..\src/command_processing.c **** {
 21900              		.loc 1 2942 0
 21901              		.cfi_startproc
 21902              		@ args = 0, pretend = 0, frame = 8
 21903              		@ frame_needed = 1, uses_anonymous_args = 0
 21904 0000 80B5     		push	{r7, lr}
 21905              		.cfi_def_cfa_offset 8
 21906              		.cfi_offset 7, -8
 21907              		.cfi_offset 14, -4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 480


 21908 0002 82B0     		sub	sp, sp, #8
 21909              		.cfi_def_cfa_offset 16
 21910 0004 00AF     		add	r7, sp, #0
 21911              		.cfi_def_cfa_register 7
2943:..\src/command_processing.c ****     uint16 i;
2944:..\src/command_processing.c **** 
2945:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 21912              		.loc 1 2945 0
 21913 0006 0023     		movs	r3, #0
 21914 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 21915 000a 0CE0     		b	.L838
 21916              	.L839:
2946:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21917              		.loc 1 2946 0 discriminator 3
 21918 000c FB88     		ldrh	r3, [r7, #6]
 21919 000e 184A     		ldr	r2, .L843
 21920 0010 1344     		add	r3, r3, r2
 21921 0012 184A     		ldr	r2, .L843+4
 21922 0014 1168     		ldr	r1, [r2]
 21923 0016 FA88     		ldrh	r2, [r7, #6]
 21924 0018 0A44     		add	r2, r2, r1
 21925 001a 1278     		ldrb	r2, [r2]
 21926 001c D2B2     		uxtb	r2, r2
 21927 001e 1A70     		strb	r2, [r3]
2945:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21928              		.loc 1 2945 0 discriminator 3
 21929 0020 FB88     		ldrh	r3, [r7, #6]
 21930 0022 0133     		adds	r3, r3, #1
 21931 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 21932              	.L838:
2945:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21933              		.loc 1 2945 0 is_stmt 0 discriminator 1
 21934 0026 FB88     		ldrh	r3, [r7, #6]
 21935 0028 B3F53D7F 		cmp	r3, #756
 21936 002c EED3     		bcc	.L839
2947:..\src/command_processing.c ****     }
2948:..\src/command_processing.c ****     
2949:..\src/command_processing.c ****     // Recall saved user_emg structure
2950:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 21937              		.loc 1 2950 0 is_stmt 1
 21938 002e 104B     		ldr	r3, .L843
 21939 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21940 0034 5B01     		lsls	r3, r3, #5
 21941 0036 03F51273 		add	r3, r3, #584
 21942 003a 0D4A     		ldr	r2, .L843
 21943 003c 1344     		add	r3, r3, r2
 21944 003e 1022     		movs	r2, #16
 21945 0040 1946     		mov	r1, r3
 21946 0042 0D48     		ldr	r0, .L843+8
 21947 0044 FFF7FEFF 		bl	memcpy
2951:..\src/command_processing.c **** 
2952:..\src/command_processing.c ****     //check for initialization
2953:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 21948              		.loc 1 2953 0
 21949 0048 094B     		ldr	r3, .L843
 21950 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21951 004c 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 481


 21952 004e 02D1     		bne	.L840
2954:..\src/command_processing.c ****         memRestore();
 21953              		.loc 1 2954 0
 21954 0050 FFF7FEFF 		bl	memRestore
2955:..\src/command_processing.c ****     } else {
2956:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2957:..\src/command_processing.c ****     }        
2958:..\src/command_processing.c **** }
 21955              		.loc 1 2958 0
 21956 0054 08E0     		b	.L842
 21957              	.L840:
2956:..\src/command_processing.c ****     }        
 21958              		.loc 1 2956 0
 21959 0056 094A     		ldr	r2, .L843+12
 21960 0058 054B     		ldr	r3, .L843
 21961 005a 1046     		mov	r0, r2
 21962 005c 1946     		mov	r1, r3
 21963 005e 4FF43D73 		mov	r3, #756
 21964 0062 1A46     		mov	r2, r3
 21965 0064 FFF7FEFF 		bl	memcpy
 21966              	.L842:
 21967              		.loc 1 2958 0
 21968 0068 00BF     		nop
 21969 006a 0837     		adds	r7, r7, #8
 21970              		.cfi_def_cfa_offset 8
 21971 006c BD46     		mov	sp, r7
 21972              		.cfi_def_cfa_register 13
 21973              		@ sp needed
 21974 006e 80BD     		pop	{r7, pc}
 21975              	.L844:
 21976              		.align	2
 21977              	.L843:
 21978 0070 00000000 		.word	g_mem
 21979 0074 00000000 		.word	EEPROM_ADDR
 21980 0078 F0010000 		.word	g_mem+496
 21981 007c 00000000 		.word	c_mem
 21982              		.cfi_endproc
 21983              	.LFE84:
 21984              		.size	memRecall, .-memRecall
 21985              		.section	.text.memRestore,"ax",%progbits
 21986              		.align	2
 21987              		.global	memRestore
 21988              		.thumb
 21989              		.thumb_func
 21990              		.type	memRestore, %function
 21991              	memRestore:
 21992              	.LFB85:
2959:..\src/command_processing.c **** 
2960:..\src/command_processing.c **** 
2961:..\src/command_processing.c **** //==============================================================================
2962:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2963:..\src/command_processing.c **** //==============================================================================
2964:..\src/command_processing.c **** 
2965:..\src/command_processing.c **** 
2966:..\src/command_processing.c **** uint8 memRestore(void) {
 21993              		.loc 1 2966 0
 21994              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 482


 21995              		@ args = 0, pretend = 0, frame = 8
 21996              		@ frame_needed = 1, uses_anonymous_args = 0
 21997 0000 80B5     		push	{r7, lr}
 21998              		.cfi_def_cfa_offset 8
 21999              		.cfi_offset 7, -8
 22000              		.cfi_offset 14, -4
 22001 0002 82B0     		sub	sp, sp, #8
 22002              		.cfi_def_cfa_offset 16
 22003 0004 00AF     		add	r7, sp, #0
 22004              		.cfi_def_cfa_register 7
2967:..\src/command_processing.c ****     uint16 i;
2968:..\src/command_processing.c **** 
2969:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22005              		.loc 1 2969 0
 22006 0006 0023     		movs	r3, #0
 22007 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22008 000a 0EE0     		b	.L846
 22009              	.L847:
2970:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22010              		.loc 1 2970 0 discriminator 3
 22011 000c FB88     		ldrh	r3, [r7, #6]
 22012 000e 114A     		ldr	r2, .L850
 22013 0010 1344     		add	r3, r3, r2
 22014 0012 114A     		ldr	r2, .L850+4
 22015 0014 1168     		ldr	r1, [r2]
 22016 0016 FA88     		ldrh	r2, [r7, #6]
 22017 0018 02F54872 		add	r2, r2, #800
 22018 001c 0A44     		add	r2, r2, r1
 22019 001e 1278     		ldrb	r2, [r2]
 22020 0020 D2B2     		uxtb	r2, r2
 22021 0022 1A70     		strb	r2, [r3]
2969:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22022              		.loc 1 2969 0 discriminator 3
 22023 0024 FB88     		ldrh	r3, [r7, #6]
 22024 0026 0133     		adds	r3, r3, #1
 22025 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22026              	.L846:
2969:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22027              		.loc 1 2969 0 is_stmt 0 discriminator 1
 22028 002a FB88     		ldrh	r3, [r7, #6]
 22029 002c B3F53D7F 		cmp	r3, #756
 22030 0030 ECD3     		bcc	.L847
2971:..\src/command_processing.c ****     }
2972:..\src/command_processing.c **** 
2973:..\src/command_processing.c ****     //check for initialization
2974:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22031              		.loc 1 2974 0 is_stmt 1
 22032 0032 084B     		ldr	r3, .L850
 22033 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22034 0036 002B     		cmp	r3, #0
 22035 0038 03D1     		bne	.L848
2975:..\src/command_processing.c ****         return memInit();
 22036              		.loc 1 2975 0
 22037 003a FFF7FEFF 		bl	memInit
 22038 003e 0346     		mov	r3, r0
 22039 0040 03E0     		b	.L849
 22040              	.L848:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 483


2976:..\src/command_processing.c ****     } else {
2977:..\src/command_processing.c ****         return memStore(0);
 22041              		.loc 1 2977 0
 22042 0042 0020     		movs	r0, #0
 22043 0044 FFF7FEFF 		bl	memStore
 22044 0048 0346     		mov	r3, r0
 22045              	.L849:
2978:..\src/command_processing.c ****     }  
2979:..\src/command_processing.c **** }
 22046              		.loc 1 2979 0
 22047 004a 1846     		mov	r0, r3
 22048 004c 0837     		adds	r7, r7, #8
 22049              		.cfi_def_cfa_offset 8
 22050 004e BD46     		mov	sp, r7
 22051              		.cfi_def_cfa_register 13
 22052              		@ sp needed
 22053 0050 80BD     		pop	{r7, pc}
 22054              	.L851:
 22055 0052 00BF     		.align	2
 22056              	.L850:
 22057 0054 00000000 		.word	g_mem
 22058 0058 00000000 		.word	EEPROM_ADDR
 22059              		.cfi_endproc
 22060              	.LFE85:
 22061              		.size	memRestore, .-memRestore
 22062              		.section	.rodata
 22063 1f9f 00       		.align	2
 22064              	.LC305:
 22065 1fa0 47454E30 		.ascii	"GEN001\000"
 22065      303100
 22066              		.section	.text.memInit,"ax",%progbits
 22067              		.align	2
 22068              		.global	memInit
 22069              		.thumb
 22070              		.thumb_func
 22071              		.type	memInit, %function
 22072              	memInit:
 22073              	.LFB86:
2980:..\src/command_processing.c **** 
2981:..\src/command_processing.c **** //==============================================================================
2982:..\src/command_processing.c **** //                                                                   MEMORY INIT
2983:..\src/command_processing.c **** //==============================================================================
2984:..\src/command_processing.c **** 
2985:..\src/command_processing.c **** uint8 memInit(void)
2986:..\src/command_processing.c **** {
 22074              		.loc 1 2986 0
 22075              		.cfi_startproc
 22076              		@ args = 0, pretend = 0, frame = 8
 22077              		@ frame_needed = 1, uses_anonymous_args = 0
 22078 0000 80B5     		push	{r7, lr}
 22079              		.cfi_def_cfa_offset 8
 22080              		.cfi_offset 7, -8
 22081              		.cfi_offset 14, -4
 22082 0002 82B0     		sub	sp, sp, #8
 22083              		.cfi_def_cfa_offset 16
 22084 0004 00AF     		add	r7, sp, #0
 22085              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 484


2987:..\src/command_processing.c ****     uint8 i, j;
2988:..\src/command_processing.c **** 
2989:..\src/command_processing.c ****     //initialize memory settings
2990:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22086              		.loc 1 2990 0
 22087 0006 0023     		movs	r3, #0
 22088 0008 FB71     		strb	r3, [r7, #7]
 22089 000a 07E0     		b	.L853
 22090              	.L854:
2991:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22091              		.loc 1 2991 0 discriminator 3
 22092 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22093 000e B44A     		ldr	r2, .L879
 22094 0010 1344     		add	r3, r3, r2
 22095 0012 0022     		movs	r2, #0
 22096 0014 5A70     		strb	r2, [r3, #1]
2990:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22097              		.loc 1 2990 0 discriminator 3
 22098 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22099 0018 0133     		adds	r3, r3, #1
 22100 001a FB71     		strb	r3, [r7, #7]
 22101              	.L853:
2990:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22102              		.loc 1 2990 0 is_stmt 0 discriminator 1
 22103 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22104 001e 0E2B     		cmp	r3, #14
 22105 0020 F4D9     		bls	.L854
2992:..\src/command_processing.c ****     }
2993:..\src/command_processing.c ****         
2994:..\src/command_processing.c ****     // DEV STRUCT
2995:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 22106              		.loc 1 2995 0 is_stmt 1
 22107 0022 AF4B     		ldr	r3, .L879
 22108 0024 0122     		movs	r2, #1
 22109 0026 83F8A020 		strb	r2, [r3, #160]
2996:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22110              		.loc 1 2996 0
 22111 002a AD4B     		ldr	r3, .L879
 22112 002c 0022     		movs	r2, #0
 22113 002e 83F8A720 		strb	r2, [r3, #167]
2997:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22114              		.loc 1 2997 0
 22115 0032 AB4B     		ldr	r3, .L879
 22116 0034 0122     		movs	r2, #1
 22117 0036 83F8AC20 		strb	r2, [r3, #172]
2998:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22118              		.loc 1 2998 0
 22119 003a A94B     		ldr	r3, .L879
 22120 003c 0022     		movs	r2, #0
 22121 003e 83F8A820 		strb	r2, [r3, #168]
2999:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22122              		.loc 1 2999 0
 22123 0042 FFF7FEFF 		bl	reset_counters
3000:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22124              		.loc 1 3000 0
 22125 0046 0023     		movs	r3, #0
 22126 0048 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 485


 22127 004a 08E0     		b	.L855
 22128              	.L856:
3001:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22129              		.loc 1 3001 0 discriminator 3
 22130 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22131 004e A44A     		ldr	r2, .L879
 22132 0050 1344     		add	r3, r3, r2
 22133 0052 0022     		movs	r2, #0
 22134 0054 83F86020 		strb	r2, [r3, #96]
3000:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22135              		.loc 1 3000 0 discriminator 3
 22136 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22137 005a 0133     		adds	r3, r3, #1
 22138 005c FB71     		strb	r3, [r7, #7]
 22139              	.L855:
3000:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22140              		.loc 1 3000 0 is_stmt 0 discriminator 1
 22141 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22142 0060 3F2B     		cmp	r3, #63
 22143 0062 F3D9     		bls	.L856
3002:..\src/command_processing.c ****     }
3003:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 22144              		.loc 1 3003 0 is_stmt 1
 22145 0064 9E4B     		ldr	r3, .L879
 22146 0066 0022     		movs	r2, #0
 22147 0068 83F8A920 		strb	r2, [r3, #169]
3004:..\src/command_processing.c **** 
3005:..\src/command_processing.c ****     // MOTOR STRUCT
3006:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22148              		.loc 1 3006 0
 22149 006c 0023     		movs	r3, #0
 22150 006e FB71     		strb	r3, [r7, #7]
 22151 0070 15E1     		b	.L857
 22152              	.L860:
3007:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22153              		.loc 1 3007 0
 22154 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22155 0074 9A49     		ldr	r1, .L879
 22156 0076 1346     		mov	r3, r2
 22157 0078 DB00     		lsls	r3, r3, #3
 22158 007a 9B1A     		subs	r3, r3, r2
 22159 007c 1B01     		lsls	r3, r3, #4
 22160 007e 0B44     		add	r3, r3, r1
 22161 0080 B033     		adds	r3, r3, #176
 22162 0082 40F23942 		movw	r2, #1081
 22163 0086 1A60     		str	r2, [r3]
3008:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 22164              		.loc 1 3008 0
 22165 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22166 008a 9549     		ldr	r1, .L879
 22167 008c 1346     		mov	r3, r2
 22168 008e DB00     		lsls	r3, r3, #3
 22169 0090 9B1A     		subs	r3, r3, r2
 22170 0092 1B01     		lsls	r3, r3, #4
 22171 0094 0B44     		add	r3, r3, r1
 22172 0096 B433     		adds	r3, r3, #180
 22173 0098 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 486


 22174 009a 1A60     		str	r2, [r3]
3009:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 22175              		.loc 1 3009 0
 22176 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22177 009e 9049     		ldr	r1, .L879
 22178 00a0 1346     		mov	r3, r2
 22179 00a2 DB00     		lsls	r3, r3, #3
 22180 00a4 9B1A     		subs	r3, r3, r2
 22181 00a6 1B01     		lsls	r3, r3, #4
 22182 00a8 0B44     		add	r3, r3, r1
 22183 00aa B833     		adds	r3, r3, #184
 22184 00ac 4FF4E572 		mov	r2, #458
 22185 00b0 1A60     		str	r2, [r3]
3010:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 22186              		.loc 1 3010 0
 22187 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22188 00b4 8A49     		ldr	r1, .L879
 22189 00b6 1346     		mov	r3, r2
 22190 00b8 DB00     		lsls	r3, r3, #3
 22191 00ba 9B1A     		subs	r3, r3, r2
 22192 00bc 1B01     		lsls	r3, r3, #4
 22193 00be 0B44     		add	r3, r3, r1
 22194 00c0 BC33     		adds	r3, r3, #188
 22195 00c2 4FF48032 		mov	r2, #65536
 22196 00c6 1A60     		str	r2, [r3]
3011:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 22197              		.loc 1 3011 0
 22198 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22199 00ca 8549     		ldr	r1, .L879
 22200 00cc 1346     		mov	r3, r2
 22201 00ce DB00     		lsls	r3, r3, #3
 22202 00d0 9B1A     		subs	r3, r3, r2
 22203 00d2 1B01     		lsls	r3, r3, #4
 22204 00d4 0B44     		add	r3, r3, r1
 22205 00d6 C033     		adds	r3, r3, #192
 22206 00d8 4122     		movs	r2, #65
 22207 00da 1A60     		str	r2, [r3]
3012:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22208              		.loc 1 3012 0
 22209 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22210 00de 8049     		ldr	r1, .L879
 22211 00e0 1346     		mov	r3, r2
 22212 00e2 DB00     		lsls	r3, r3, #3
 22213 00e4 9B1A     		subs	r3, r3, r2
 22214 00e6 1B01     		lsls	r3, r3, #4
 22215 00e8 0B44     		add	r3, r3, r1
 22216 00ea C433     		adds	r3, r3, #196
 22217 00ec 0022     		movs	r2, #0
 22218 00ee 1A60     		str	r2, [r3]
3013:..\src/command_processing.c **** 
3014:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 22219              		.loc 1 3014 0
 22220 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22221 00f2 7B49     		ldr	r1, .L879
 22222 00f4 1346     		mov	r3, r2
 22223 00f6 DB00     		lsls	r3, r3, #3
 22224 00f8 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 487


 22225 00fa 1B01     		lsls	r3, r3, #4
 22226 00fc 0B44     		add	r3, r3, r1
 22227 00fe C833     		adds	r3, r3, #200
 22228 0100 41F69912 		movw	r2, #6553
 22229 0104 1A60     		str	r2, [r3]
3015:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 22230              		.loc 1 3015 0
 22231 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22232 0108 7549     		ldr	r1, .L879
 22233 010a 1346     		mov	r3, r2
 22234 010c DB00     		lsls	r3, r3, #3
 22235 010e 9B1A     		subs	r3, r3, r2
 22236 0110 1B01     		lsls	r3, r3, #4
 22237 0112 0B44     		add	r3, r3, r1
 22238 0114 CC33     		adds	r3, r3, #204
 22239 0116 0022     		movs	r2, #0
 22240 0118 1A60     		str	r2, [r3]
3016:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22241              		.loc 1 3016 0
 22242 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22243 011c 7049     		ldr	r1, .L879
 22244 011e 1346     		mov	r3, r2
 22245 0120 DB00     		lsls	r3, r3, #3
 22246 0122 9B1A     		subs	r3, r3, r2
 22247 0124 1B01     		lsls	r3, r3, #4
 22248 0126 0B44     		add	r3, r3, r1
 22249 0128 D033     		adds	r3, r3, #208
 22250 012a 0022     		movs	r2, #0
 22251 012c 1A60     		str	r2, [r3]
3017:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 22252              		.loc 1 3017 0
 22253 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22254 0130 6B49     		ldr	r1, .L879
 22255 0132 1346     		mov	r3, r2
 22256 0134 DB00     		lsls	r3, r3, #3
 22257 0136 9B1A     		subs	r3, r3, r2
 22258 0138 1B01     		lsls	r3, r3, #4
 22259 013a 0B44     		add	r3, r3, r1
 22260 013c D433     		adds	r3, r3, #212
 22261 013e 44F6CC42 		movw	r2, #19660
 22262 0142 1A60     		str	r2, [r3]
3018:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 22263              		.loc 1 3018 0
 22264 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22265 0146 6649     		ldr	r1, .L879
 22266 0148 1346     		mov	r3, r2
 22267 014a DB00     		lsls	r3, r3, #3
 22268 014c 9B1A     		subs	r3, r3, r2
 22269 014e 1B01     		lsls	r3, r3, #4
 22270 0150 0B44     		add	r3, r3, r1
 22271 0152 D833     		adds	r3, r3, #216
 22272 0154 0D22     		movs	r2, #13
 22273 0156 1A60     		str	r2, [r3]
3019:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22274              		.loc 1 3019 0
 22275 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22276 015a 6149     		ldr	r1, .L879
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 488


 22277 015c 1346     		mov	r3, r2
 22278 015e DB00     		lsls	r3, r3, #3
 22279 0160 9B1A     		subs	r3, r3, r2
 22280 0162 1B01     		lsls	r3, r3, #4
 22281 0164 0B44     		add	r3, r3, r1
 22282 0166 DC33     		adds	r3, r3, #220
 22283 0168 0022     		movs	r2, #0
 22284 016a 1A60     		str	r2, [r3]
3020:..\src/command_processing.c **** 
3021:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 22285              		.loc 1 3021 0
 22286 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22287 016e 5C49     		ldr	r1, .L879
 22288 0170 1346     		mov	r3, r2
 22289 0172 DB00     		lsls	r3, r3, #3
 22290 0174 9B1A     		subs	r3, r3, r2
 22291 0176 1B01     		lsls	r3, r3, #4
 22292 0178 0B44     		add	r3, r3, r1
 22293 017a E033     		adds	r3, r3, #224
 22294 017c 0122     		movs	r2, #1
 22295 017e 1A70     		strb	r2, [r3]
3022:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22296              		.loc 1 3022 0
 22297 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22298 0182 5749     		ldr	r1, .L879
 22299 0184 1346     		mov	r3, r2
 22300 0186 DB00     		lsls	r3, r3, #3
 22301 0188 9B1A     		subs	r3, r3, r2
 22302 018a 1B01     		lsls	r3, r3, #4
 22303 018c 0B44     		add	r3, r3, r1
 22304 018e E133     		adds	r3, r3, #225
 22305 0190 0022     		movs	r2, #0
 22306 0192 1A70     		strb	r2, [r3]
3023:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 22307              		.loc 1 3023 0
 22308 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22309 0196 5249     		ldr	r1, .L879
 22310 0198 1346     		mov	r3, r2
 22311 019a DB00     		lsls	r3, r3, #3
 22312 019c 9B1A     		subs	r3, r3, r2
 22313 019e 1B01     		lsls	r3, r3, #4
 22314 01a0 0B44     		add	r3, r3, r1
 22315 01a2 E233     		adds	r3, r3, #226
 22316 01a4 0022     		movs	r2, #0
 22317 01a6 1A70     		strb	r2, [r3]
3024:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22318              		.loc 1 3024 0
 22319 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22320 01aa 4D49     		ldr	r1, .L879
 22321 01ac 1346     		mov	r3, r2
 22322 01ae DB00     		lsls	r3, r3, #3
 22323 01b0 9B1A     		subs	r3, r3, r2
 22324 01b2 1B01     		lsls	r3, r3, #4
 22325 01b4 0B44     		add	r3, r3, r1
 22326 01b6 03F58773 		add	r3, r3, #270
 22327 01ba 0022     		movs	r2, #0
 22328 01bc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 489


3025:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 22329              		.loc 1 3025 0
 22330 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22331 01c0 4749     		ldr	r1, .L879
 22332 01c2 1346     		mov	r3, r2
 22333 01c4 DB00     		lsls	r3, r3, #3
 22334 01c6 9B1A     		subs	r3, r3, r2
 22335 01c8 1B01     		lsls	r3, r3, #4
 22336 01ca 0B44     		add	r3, r3, r1
 22337 01cc 03F20F13 		addw	r3, r3, #271
 22338 01d0 0022     		movs	r2, #0
 22339 01d2 1A70     		strb	r2, [r3]
3026:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22340              		.loc 1 3026 0
 22341 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22342 01d6 4249     		ldr	r1, .L879
 22343 01d8 1346     		mov	r3, r2
 22344 01da DB00     		lsls	r3, r3, #3
 22345 01dc 9B1A     		subs	r3, r3, r2
 22346 01de 1B01     		lsls	r3, r3, #4
 22347 01e0 0B44     		add	r3, r3, r1
 22348 01e2 F033     		adds	r3, r3, #240
 22349 01e4 0022     		movs	r2, #0
 22350 01e6 1A60     		str	r2, [r3]
3027:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22351              		.loc 1 3027 0
 22352 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22353 01ea 3D49     		ldr	r1, .L879
 22354 01ec 1346     		mov	r3, r2
 22355 01ee DB00     		lsls	r3, r3, #3
 22356 01f0 9B1A     		subs	r3, r3, r2
 22357 01f2 1B01     		lsls	r3, r3, #4
 22358 01f4 0B44     		add	r3, r3, r1
 22359 01f6 EC33     		adds	r3, r3, #236
 22360 01f8 0022     		movs	r2, #0
 22361 01fa 1A60     		str	r2, [r3]
3028:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22362              		.loc 1 3028 0
 22363 01fc 0023     		movs	r3, #0
 22364 01fe BB71     		strb	r3, [r7, #6]
 22365 0200 10E0     		b	.L858
 22366              	.L859:
3029:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 22367              		.loc 1 3029 0 discriminator 3
 22368 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22369 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22370 0206 3648     		ldr	r0, .L879
 22371 0208 1346     		mov	r3, r2
 22372 020a DB00     		lsls	r3, r3, #3
 22373 020c 9B1A     		subs	r3, r3, r2
 22374 020e 9B00     		lsls	r3, r3, #2
 22375 0210 0B44     		add	r3, r3, r1
 22376 0212 3C33     		adds	r3, r3, #60
 22377 0214 9B00     		lsls	r3, r3, #2
 22378 0216 0344     		add	r3, r3, r0
 22379 0218 4FF00002 		mov	r2, #0
 22380 021c 5A60     		str	r2, [r3, #4]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 490


3028:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22381              		.loc 1 3028 0 discriminator 3
 22382 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22383 0220 0133     		adds	r3, r3, #1
 22384 0222 BB71     		strb	r3, [r7, #6]
 22385              	.L858:
3028:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22386              		.loc 1 3028 0 is_stmt 0 discriminator 1
 22387 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22388 0226 052B     		cmp	r3, #5
 22389 0228 EBD9     		bls	.L859
3030:..\src/command_processing.c ****         }
3031:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22390              		.loc 1 3031 0 is_stmt 1 discriminator 2
 22391 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22392 022c 2C49     		ldr	r1, .L879
 22393 022e 1346     		mov	r3, r2
 22394 0230 DB00     		lsls	r3, r3, #3
 22395 0232 9B1A     		subs	r3, r3, r2
 22396 0234 1B01     		lsls	r3, r3, #4
 22397 0236 0B44     		add	r3, r3, r1
 22398 0238 03F58673 		add	r3, r3, #268
 22399 023c 40F2DC52 		movw	r2, #1500
 22400 0240 1A80     		strh	r2, [r3]	@ movhi
3032:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22401              		.loc 1 3032 0 discriminator 2
 22402 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22403 0244 2649     		ldr	r1, .L879
 22404 0246 1346     		mov	r3, r2
 22405 0248 DB00     		lsls	r3, r3, #3
 22406 024a 9B1A     		subs	r3, r3, r2
 22407 024c 1B01     		lsls	r3, r3, #4
 22408 024e 0B44     		add	r3, r3, r1
 22409 0250 03F58873 		add	r3, r3, #272
 22410 0254 FA79     		ldrb	r2, [r7, #7]
 22411 0256 1A70     		strb	r2, [r3]
3033:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 22412              		.loc 1 3033 0 discriminator 2
 22413 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22414 025a 2149     		ldr	r1, .L879
 22415 025c 1346     		mov	r3, r2
 22416 025e DB00     		lsls	r3, r3, #3
 22417 0260 9B1A     		subs	r3, r3, r2
 22418 0262 1B01     		lsls	r3, r3, #4
 22419 0264 0B44     		add	r3, r3, r1
 22420 0266 E333     		adds	r3, r3, #227
 22421 0268 0122     		movs	r2, #1
 22422 026a 1A70     		strb	r2, [r3]
3034:..\src/command_processing.c ****         
3035:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22423              		.loc 1 3035 0 discriminator 2
 22424 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22425 026e 1C49     		ldr	r1, .L879
 22426 0270 1346     		mov	r3, r2
 22427 0272 DB00     		lsls	r3, r3, #3
 22428 0274 9B1A     		subs	r3, r3, r2
 22429 0276 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 491


 22430 0278 0B44     		add	r3, r3, r1
 22431 027a 03F21113 		addw	r3, r3, #273
 22432 027e 0122     		movs	r2, #1
 22433 0280 1A70     		strb	r2, [r3]
3036:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22434              		.loc 1 3036 0 discriminator 2
 22435 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22436 0284 1649     		ldr	r1, .L879
 22437 0286 1346     		mov	r3, r2
 22438 0288 DB00     		lsls	r3, r3, #3
 22439 028a 9B1A     		subs	r3, r3, r2
 22440 028c 1B01     		lsls	r3, r3, #4
 22441 028e 0B44     		add	r3, r3, r1
 22442 0290 03F58973 		add	r3, r3, #274
 22443 0294 0022     		movs	r2, #0
 22444 0296 1A70     		strb	r2, [r3]
3006:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22445              		.loc 1 3006 0 discriminator 2
 22446 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22447 029a 0133     		adds	r3, r3, #1
 22448 029c FB71     		strb	r3, [r7, #7]
 22449              	.L857:
3006:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22450              		.loc 1 3006 0 is_stmt 0 discriminator 1
 22451 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22452 02a0 012B     		cmp	r3, #1
 22453 02a2 7FF6E6AE 		bls	.L860
3037:..\src/command_processing.c ****     }
3038:..\src/command_processing.c ****     
3039:..\src/command_processing.c ****     // ENC STRUCT
3040:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22454              		.loc 1 3040 0 is_stmt 1
 22455 02a6 0023     		movs	r3, #0
 22456 02a8 FB71     		strb	r3, [r7, #7]
 22457 02aa 98E0     		b	.L861
 22458              	.L868:
3041:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22459              		.loc 1 3041 0
 22460 02ac 0023     		movs	r3, #0
 22461 02ae BB71     		strb	r3, [r7, #6]
 22462 02b0 0FE0     		b	.L862
 22463              	.L863:
3042:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 22464              		.loc 1 3042 0 discriminator 3
 22465 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22466 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22467 02b6 0A48     		ldr	r0, .L879
 22468 02b8 1346     		mov	r3, r2
 22469 02ba 5B00     		lsls	r3, r3, #1
 22470 02bc 1344     		add	r3, r3, r2
 22471 02be 1B01     		lsls	r3, r3, #4
 22472 02c0 0344     		add	r3, r3, r0
 22473 02c2 0B44     		add	r3, r3, r1
 22474 02c4 03F5C873 		add	r3, r3, #400
 22475 02c8 0022     		movs	r2, #0
 22476 02ca 1A70     		strb	r2, [r3]
3041:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 492


 22477              		.loc 1 3041 0 discriminator 3
 22478 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22479 02ce 0133     		adds	r3, r3, #1
 22480 02d0 BB71     		strb	r3, [r7, #6]
 22481              	.L862:
3041:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22482              		.loc 1 3041 0 is_stmt 0 discriminator 1
 22483 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22484 02d4 042B     		cmp	r3, #4
 22485 02d6 ECD9     		bls	.L863
3043:..\src/command_processing.c ****         }
3044:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22486              		.loc 1 3044 0 is_stmt 1
 22487 02d8 0023     		movs	r3, #0
 22488 02da BB71     		strb	r3, [r7, #6]
 22489 02dc 2CE0     		b	.L864
 22490              	.L880:
 22491 02de 00BF     		.align	2
 22492              	.L879:
 22493 02e0 00000000 		.word	g_mem
 22494              	.L865:
3045:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22495              		.loc 1 3045 0 discriminator 3
 22496 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22497 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22498 02e8 C548     		ldr	r0, .L881
 22499 02ea 1346     		mov	r3, r2
 22500 02ec 5B00     		lsls	r3, r3, #1
 22501 02ee 1344     		add	r3, r3, r2
 22502 02f0 1B01     		lsls	r3, r3, #4
 22503 02f2 0344     		add	r3, r3, r0
 22504 02f4 0B44     		add	r3, r3, r1
 22505 02f6 03F29513 		addw	r3, r3, #405
 22506 02fa 0322     		movs	r2, #3
 22507 02fc 1A70     		strb	r2, [r3]
3046:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22508              		.loc 1 3046 0 discriminator 3
 22509 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22510 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22511 0302 BF48     		ldr	r0, .L881
 22512 0304 1346     		mov	r3, r2
 22513 0306 5B00     		lsls	r3, r3, #1
 22514 0308 1344     		add	r3, r3, r2
 22515 030a 9B00     		lsls	r3, r3, #2
 22516 030c 0B44     		add	r3, r3, r1
 22517 030e 6833     		adds	r3, r3, #104
 22518 0310 9B00     		lsls	r3, r3, #2
 22519 0312 0344     		add	r3, r3, r0
 22520 0314 4FF07E52 		mov	r2, #1065353216
 22521 0318 5A60     		str	r2, [r3, #4]	@ float
3047:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22522              		.loc 1 3047 0 discriminator 3
 22523 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22524 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22525 031e B848     		ldr	r0, .L881
 22526 0320 1346     		mov	r3, r2
 22527 0322 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 493


 22528 0324 1344     		add	r3, r3, r2
 22529 0326 9B00     		lsls	r3, r3, #2
 22530 0328 0B44     		add	r3, r3, r1
 22531 032a 6633     		adds	r3, r3, #102
 22532 032c 0022     		movs	r2, #0
 22533 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3044:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22534              		.loc 1 3044 0 discriminator 3
 22535 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22536 0334 0133     		adds	r3, r3, #1
 22537 0336 BB71     		strb	r3, [r7, #6]
 22538              	.L864:
3044:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22539              		.loc 1 3044 0 is_stmt 0 discriminator 1
 22540 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22541 033a 022B     		cmp	r3, #2
 22542 033c D2D9     		bls	.L865
3048:..\src/command_processing.c ****         }
3049:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22543              		.loc 1 3049 0 is_stmt 1
 22544 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22545 0340 AF49     		ldr	r1, .L881
 22546 0342 1346     		mov	r3, r2
 22547 0344 5B00     		lsls	r3, r3, #1
 22548 0346 1344     		add	r3, r3, r2
 22549 0348 1B01     		lsls	r3, r3, #4
 22550 034a 0B44     		add	r3, r3, r1
 22551 034c 03F5D873 		add	r3, r3, #432
 22552 0350 0022     		movs	r2, #0
 22553 0352 1A70     		strb	r2, [r3]
3050:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22554              		.loc 1 3050 0
 22555 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22556 0356 AA49     		ldr	r1, .L881
 22557 0358 1346     		mov	r3, r2
 22558 035a 5B00     		lsls	r3, r3, #1
 22559 035c 1344     		add	r3, r3, r2
 22560 035e 1B01     		lsls	r3, r3, #4
 22561 0360 0B44     		add	r3, r3, r1
 22562 0362 03F5DA73 		add	r3, r3, #436
 22563 0366 1622     		movs	r2, #22
 22564 0368 1A70     		strb	r2, [r3]
3051:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22565              		.loc 1 3051 0
 22566 036a 0023     		movs	r3, #0
 22567 036c BB71     		strb	r3, [r7, #6]
 22568 036e 0FE0     		b	.L866
 22569              	.L867:
3052:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 22570              		.loc 1 3052 0 discriminator 3
 22571 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22572 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22573 0374 A248     		ldr	r0, .L881
 22574 0376 1346     		mov	r3, r2
 22575 0378 5B00     		lsls	r3, r3, #1
 22576 037a 1344     		add	r3, r3, r2
 22577 037c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 494


 22578 037e 0344     		add	r3, r3, r0
 22579 0380 0B44     		add	r3, r3, r1
 22580 0382 03F2B113 		addw	r3, r3, #433
 22581 0386 BA79     		ldrb	r2, [r7, #6]
 22582 0388 1A70     		strb	r2, [r3]
3051:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22583              		.loc 1 3051 0 discriminator 3
 22584 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22585 038c 0133     		adds	r3, r3, #1
 22586 038e BB71     		strb	r3, [r7, #6]
 22587              	.L866:
3051:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22588              		.loc 1 3051 0 is_stmt 0 discriminator 1
 22589 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22590 0392 022B     		cmp	r3, #2
 22591 0394 ECD9     		bls	.L867
3053:..\src/command_processing.c ****         }
3054:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 22592              		.loc 1 3054 0 is_stmt 1 discriminator 2
 22593 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22594 0398 9949     		ldr	r1, .L881
 22595 039a 1346     		mov	r3, r2
 22596 039c 5B00     		lsls	r3, r3, #1
 22597 039e 1344     		add	r3, r3, r2
 22598 03a0 1B01     		lsls	r3, r3, #4
 22599 03a2 0B44     		add	r3, r3, r1
 22600 03a4 03F2B513 		addw	r3, r3, #437
 22601 03a8 0F22     		movs	r2, #15
 22602 03aa 1A70     		strb	r2, [r3]
3055:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 22603              		.loc 1 3055 0 discriminator 2
 22604 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22605 03ae 9449     		ldr	r1, .L881
 22606 03b0 1346     		mov	r3, r2
 22607 03b2 5B00     		lsls	r3, r3, #1
 22608 03b4 1344     		add	r3, r3, r2
 22609 03b6 1B01     		lsls	r3, r3, #4
 22610 03b8 0B44     		add	r3, r3, r1
 22611 03ba 03F5DB73 		add	r3, r3, #438
 22612 03be 0E22     		movs	r2, #14
 22613 03c0 1A70     		strb	r2, [r3]
3056:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 22614              		.loc 1 3056 0 discriminator 2
 22615 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22616 03c4 8E49     		ldr	r1, .L881
 22617 03c6 1346     		mov	r3, r2
 22618 03c8 5B00     		lsls	r3, r3, #1
 22619 03ca 1344     		add	r3, r3, r2
 22620 03cc 1B01     		lsls	r3, r3, #4
 22621 03ce 0B44     		add	r3, r3, r1
 22622 03d0 03F2B713 		addw	r3, r3, #439
 22623 03d4 0122     		movs	r2, #1
 22624 03d6 1A70     		strb	r2, [r3]
3040:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22625              		.loc 1 3040 0 discriminator 2
 22626 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22627 03da 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 495


 22628 03dc FB71     		strb	r3, [r7, #7]
 22629              	.L861:
3040:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22630              		.loc 1 3040 0 is_stmt 0 discriminator 1
 22631 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22632 03e0 012B     		cmp	r3, #1
 22633 03e2 7FF663AF 		bls	.L868
3057:..\src/command_processing.c ****     }
3058:..\src/command_processing.c ****     
3059:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22634              		.loc 1 3059 0 is_stmt 1
 22635 03e6 0023     		movs	r3, #0
 22636 03e8 FB71     		strb	r3, [r7, #7]
 22637 03ea 2EE0     		b	.L869
 22638              	.L870:
3060:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22639              		.loc 1 3060 0 discriminator 3
 22640 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22641 03ee 8449     		ldr	r1, .L881
 22642 03f0 1346     		mov	r3, r2
 22643 03f2 DB00     		lsls	r3, r3, #3
 22644 03f4 9B1A     		subs	r3, r3, r2
 22645 03f6 1B01     		lsls	r3, r3, #4
 22646 03f8 0B44     		add	r3, r3, r1
 22647 03fa E433     		adds	r3, r3, #228
 22648 03fc 0022     		movs	r2, #0
 22649 03fe 1A60     		str	r2, [r3]
3061:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 22650              		.loc 1 3061 0 discriminator 3
 22651 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22652 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 22653 0404 7E48     		ldr	r0, .L881
 22654 0406 0B46     		mov	r3, r1
 22655 0408 DB00     		lsls	r3, r3, #3
 22656 040a 5B1A     		subs	r3, r3, r1
 22657 040c 1B01     		lsls	r3, r3, #4
 22658 040e 0344     		add	r3, r3, r0
 22659 0410 03F58873 		add	r3, r3, #272
 22660 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22661 0416 1846     		mov	r0, r3
 22662 0418 7949     		ldr	r1, .L881
 22663 041a 0346     		mov	r3, r0
 22664 041c 5B00     		lsls	r3, r3, #1
 22665 041e 0344     		add	r3, r3, r0
 22666 0420 1B01     		lsls	r3, r3, #4
 22667 0422 0B44     		add	r3, r3, r1
 22668 0424 03F29513 		addw	r3, r3, #405
 22669 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22670 042a 1946     		mov	r1, r3
 22671 042c 44F63823 		movw	r3, #19000
 22672 0430 03FA01F1 		lsl	r1, r3, r1
 22673 0434 7248     		ldr	r0, .L881
 22674 0436 1346     		mov	r3, r2
 22675 0438 DB00     		lsls	r3, r3, #3
 22676 043a 9B1A     		subs	r3, r3, r2
 22677 043c 1B01     		lsls	r3, r3, #4
 22678 043e 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 496


 22679 0440 E833     		adds	r3, r3, #232
 22680 0442 1960     		str	r1, [r3]
3059:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22681              		.loc 1 3059 0 discriminator 3
 22682 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22683 0446 0133     		adds	r3, r3, #1
 22684 0448 FB71     		strb	r3, [r7, #7]
 22685              	.L869:
3059:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22686              		.loc 1 3059 0 is_stmt 0 discriminator 1
 22687 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22688 044c 012B     		cmp	r3, #1
 22689 044e CDD9     		bls	.L870
3062:..\src/command_processing.c ****     }
3063:..\src/command_processing.c ****     
3064:..\src/command_processing.c ****     // EMG STRUCT     
3065:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 22690              		.loc 1 3065 0 is_stmt 1
 22691 0450 6B4B     		ldr	r3, .L881
 22692 0452 C822     		movs	r2, #200
 22693 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3066:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 22694              		.loc 1 3066 0
 22695 0458 694B     		ldr	r3, .L881
 22696 045a C822     		movs	r2, #200
 22697 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3067:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 22698              		.loc 1 3067 0
 22699 0460 674B     		ldr	r3, .L881
 22700 0462 4FF48062 		mov	r2, #1024
 22701 0466 C3F8F421 		str	r2, [r3, #500]
3068:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 22702              		.loc 1 3068 0
 22703 046a 654B     		ldr	r3, .L881
 22704 046c 4FF48062 		mov	r2, #1024
 22705 0470 C3F8F821 		str	r2, [r3, #504]
3069:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 22706              		.loc 1 3069 0
 22707 0474 624B     		ldr	r3, .L881
 22708 0476 6422     		movs	r2, #100
 22709 0478 83F8FC21 		strb	r2, [r3, #508]
3070:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 22710              		.loc 1 3070 0
 22711 047c 604B     		ldr	r3, .L881
 22712 047e 6422     		movs	r2, #100
 22713 0480 83F8FD21 		strb	r2, [r3, #509]
3071:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 22714              		.loc 1 3071 0
 22715 0484 5E4B     		ldr	r3, .L881
 22716 0486 0022     		movs	r2, #0
 22717 0488 83F8FE21 		strb	r2, [r3, #510]
3072:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 22718              		.loc 1 3072 0
 22719 048c 5C4B     		ldr	r3, .L881
 22720 048e 0022     		movs	r2, #0
 22721 0490 83F8FF21 		strb	r2, [r3, #511]
3073:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 497


3074:..\src/command_processing.c ****     // IMU STRUCT
3075:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 22722              		.loc 1 3075 0
 22723 0494 5A4B     		ldr	r3, .L881
 22724 0496 0022     		movs	r2, #0
 22725 0498 83F80022 		strb	r2, [r3, #512]
3076:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 22726              		.loc 1 3076 0
 22727 049c 584B     		ldr	r3, .L881
 22728 049e 0022     		movs	r2, #0
 22729 04a0 83F80122 		strb	r2, [r3, #513]
3077:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 22730              		.loc 1 3077 0
 22731 04a4 0023     		movs	r3, #0
 22732 04a6 FB71     		strb	r3, [r7, #7]
 22733 04a8 34E0     		b	.L871
 22734              	.L872:
3078:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 22735              		.loc 1 3078 0 discriminator 3
 22736 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22737 04ac 5449     		ldr	r1, .L881
 22738 04ae 1346     		mov	r3, r2
 22739 04b0 9B00     		lsls	r3, r3, #2
 22740 04b2 1344     		add	r3, r3, r2
 22741 04b4 0B44     		add	r3, r3, r1
 22742 04b6 03F20223 		addw	r3, r3, #514
 22743 04ba 0122     		movs	r2, #1
 22744 04bc 1A70     		strb	r2, [r3]
3079:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 22745              		.loc 1 3079 0 discriminator 3
 22746 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22747 04c0 4F49     		ldr	r1, .L881
 22748 04c2 1346     		mov	r3, r2
 22749 04c4 9B00     		lsls	r3, r3, #2
 22750 04c6 1344     		add	r3, r3, r2
 22751 04c8 0B44     		add	r3, r3, r1
 22752 04ca 03F20323 		addw	r3, r3, #515
 22753 04ce 0122     		movs	r2, #1
 22754 04d0 1A70     		strb	r2, [r3]
3080:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 22755              		.loc 1 3080 0 discriminator 3
 22756 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22757 04d4 4A49     		ldr	r1, .L881
 22758 04d6 1346     		mov	r3, r2
 22759 04d8 9B00     		lsls	r3, r3, #2
 22760 04da 1344     		add	r3, r3, r2
 22761 04dc 0B44     		add	r3, r3, r1
 22762 04de 03F50173 		add	r3, r3, #516
 22763 04e2 0022     		movs	r2, #0
 22764 04e4 1A70     		strb	r2, [r3]
3081:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 22765              		.loc 1 3081 0 discriminator 3
 22766 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22767 04e8 4549     		ldr	r1, .L881
 22768 04ea 1346     		mov	r3, r2
 22769 04ec 9B00     		lsls	r3, r3, #2
 22770 04ee 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 498


 22771 04f0 0B44     		add	r3, r3, r1
 22772 04f2 03F20523 		addw	r3, r3, #517
 22773 04f6 0022     		movs	r2, #0
 22774 04f8 1A70     		strb	r2, [r3]
3082:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 22775              		.loc 1 3082 0 discriminator 3
 22776 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22777 04fc 4049     		ldr	r1, .L881
 22778 04fe 1346     		mov	r3, r2
 22779 0500 9B00     		lsls	r3, r3, #2
 22780 0502 1344     		add	r3, r3, r2
 22781 0504 0B44     		add	r3, r3, r1
 22782 0506 03F20623 		addw	r3, r3, #518
 22783 050a 0022     		movs	r2, #0
 22784 050c 1A70     		strb	r2, [r3]
3077:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 22785              		.loc 1 3077 0 discriminator 3
 22786 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22787 0510 0133     		adds	r3, r3, #1
 22788 0512 FB71     		strb	r3, [r7, #7]
 22789              	.L871:
3077:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 22790              		.loc 1 3077 0 is_stmt 0 discriminator 1
 22791 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22792 0516 042B     		cmp	r3, #4
 22793 0518 C7D9     		bls	.L872
3083:..\src/command_processing.c ****     }
3084:..\src/command_processing.c ****      
3085:..\src/command_processing.c ****     // EXP STRUCT
3086:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 22794              		.loc 1 3086 0 is_stmt 1
 22795 051a 394B     		ldr	r3, .L881
 22796 051c 0022     		movs	r2, #0
 22797 051e 83F82622 		strb	r2, [r3, #550]
3087:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 22798              		.loc 1 3087 0
 22799 0522 374B     		ldr	r3, .L881
 22800 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22801 0528 1233     		adds	r3, r3, #18
 22802 052a 5B01     		lsls	r3, r3, #5
 22803 052c 344A     		ldr	r2, .L881
 22804 052e 1344     		add	r3, r3, r2
 22805 0530 344A     		ldr	r2, .L881+4
 22806 0532 1068     		ldr	r0, [r2]	@ unaligned
 22807 0534 1860     		str	r0, [r3]	@ unaligned
 22808 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 22809 0538 9279     		ldrb	r2, [r2, #6]
 22810 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 22811 053c 9A71     		strb	r2, [r3, #6]
3088:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 22812              		.loc 1 3088 0
 22813 053e 304B     		ldr	r3, .L881
 22814 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 22815 0544 012B     		cmp	r3, #1
 22816 0546 13D1     		bne	.L873
3089:..\src/command_processing.c ****         // Set date of maintenance from RTC
3090:..\src/command_processing.c ****         store_RTC_current_time();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 499


 22817              		.loc 1 3090 0
 22818 0548 FFF7FEFF 		bl	store_RTC_current_time
3091:..\src/command_processing.c ****         
3092:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 22819              		.loc 1 3092 0
 22820 054c 2C4B     		ldr	r3, .L881
 22821 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 22822 0552 2B4B     		ldr	r3, .L881
 22823 0554 83F8A420 		strb	r2, [r3, #164]
3093:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 22824              		.loc 1 3093 0
 22825 0558 294B     		ldr	r3, .L881
 22826 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 22827 055e 284B     		ldr	r3, .L881
 22828 0560 83F8A520 		strb	r2, [r3, #165]
3094:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 22829              		.loc 1 3094 0
 22830 0564 264B     		ldr	r3, .L881
 22831 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 22832 056a 254B     		ldr	r3, .L881
 22833 056c 83F8A620 		strb	r2, [r3, #166]
 22834              	.L873:
3095:..\src/command_processing.c ****     }
3096:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 22835              		.loc 1 3096 0
 22836 0570 234B     		ldr	r3, .L881
 22837 0572 0022     		movs	r2, #0
 22838 0574 83F82722 		strb	r2, [r3, #551]
3097:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 22839              		.loc 1 3097 0
 22840 0578 0023     		movs	r3, #0
 22841 057a FB71     		strb	r3, [r7, #7]
 22842 057c 08E0     		b	.L874
 22843              	.L875:
3098:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 22844              		.loc 1 3098 0 discriminator 3
 22845 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22846 0580 1F4A     		ldr	r2, .L881
 22847 0582 1344     		add	r3, r3, r2
 22848 0584 0022     		movs	r2, #0
 22849 0586 83F82822 		strb	r2, [r3, #552]
3097:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 22850              		.loc 1 3097 0 discriminator 3
 22851 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22852 058c 0133     		adds	r3, r3, #1
 22853 058e FB71     		strb	r3, [r7, #7]
 22854              	.L874:
3097:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 22855              		.loc 1 3097 0 is_stmt 0 discriminator 1
 22856 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22857 0592 0B2B     		cmp	r3, #11
 22858 0594 F3D9     		bls	.L875
3099:..\src/command_processing.c ****     }
3100:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3101:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 22859              		.loc 1 3101 0 is_stmt 1
 22860 0596 1A4B     		ldr	r3, .L881
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 500


 22861 0598 0122     		movs	r2, #1
 22862 059a 83F82A22 		strb	r2, [r3, #554]
3102:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 22863              		.loc 1 3102 0
 22864 059e 184B     		ldr	r3, .L881
 22865 05a0 0122     		movs	r2, #1
 22866 05a2 83F82B22 		strb	r2, [r3, #555]
3103:..\src/command_processing.c **** 
3104:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3105:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3106:..\src/command_processing.c ****     memInit_SoftHandPro();
3107:..\src/command_processing.c **** #endif 
3108:..\src/command_processing.c **** 
3109:..\src/command_processing.c **** #ifdef MASTER_FW
3110:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3111:..\src/command_processing.c ****     memInit_Master();
3112:..\src/command_processing.c **** #endif 
3113:..\src/command_processing.c **** 
3114:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3115:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3116:..\src/command_processing.c ****     memInit_AirChambersFb();
3117:..\src/command_processing.c **** #endif 
3118:..\src/command_processing.c **** 
3119:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3120:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3121:..\src/command_processing.c ****     memInit_OtbkActWristMs();
3122:..\src/command_processing.c **** #endif
3123:..\src/command_processing.c **** 
3124:..\src/command_processing.c ****     // JOYSTICK STRUCT
3125:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 22867              		.loc 1 3125 0
 22868 05a6 164B     		ldr	r3, .L881
 22869 05a8 9622     		movs	r2, #150
 22870 05aa A3F8B022 		strh	r2, [r3, #688]	@ movhi
3126:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 22871              		.loc 1 3126 0
 22872 05ae 144B     		ldr	r3, .L881
 22873 05b0 6422     		movs	r2, #100
 22874 05b2 A3F8B222 		strh	r2, [r3, #690]	@ movhi
3127:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 22875              		.loc 1 3127 0
 22876 05b6 124B     		ldr	r3, .L881
 22877 05b8 4FF48062 		mov	r2, #1024
 22878 05bc A3F8B422 		strh	r2, [r3, #692]	@ movhi
3128:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 22879              		.loc 1 3128 0
 22880 05c0 0F4B     		ldr	r3, .L881
 22881 05c2 4FF48062 		mov	r2, #1024
 22882 05c6 A3F8B622 		strh	r2, [r3, #694]	@ movhi
3129:..\src/command_processing.c **** 
3130:..\src/command_processing.c ****     // Default generic user_id
3131:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 22883              		.loc 1 3131 0
 22884 05ca 0D4B     		ldr	r3, .L881
 22885 05cc 0022     		movs	r2, #0
 22886 05ce 83F8AB20 		strb	r2, [r3, #171]
3132:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 501


3133:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3134:..\src/command_processing.c ****     g_mem.flag = TRUE;
 22887              		.loc 1 3134 0
 22888 05d2 0B4B     		ldr	r3, .L881
 22889 05d4 0122     		movs	r2, #1
 22890 05d6 1A70     		strb	r2, [r3]
3135:..\src/command_processing.c ****     
3136:..\src/command_processing.c ****     //write that configuration to EEPROM
3137:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 22891              		.loc 1 3137 0
 22892 05d8 0020     		movs	r0, #0
 22893 05da FFF7FEFF 		bl	memStore
 22894 05de 0346     		mov	r3, r0
 22895 05e0 002B     		cmp	r3, #0
 22896 05e2 07D0     		beq	.L876
 22897              		.loc 1 3137 0 is_stmt 0 discriminator 1
 22898 05e4 3220     		movs	r0, #50
 22899 05e6 FFF7FEFF 		bl	memStore
 22900 05ea 0346     		mov	r3, r0
 22901 05ec 002B     		cmp	r3, #0
 22902 05ee 01D0     		beq	.L876
 22903              		.loc 1 3137 0 discriminator 3
 22904 05f0 0123     		movs	r3, #1
 22905 05f2 00E0     		b	.L877
 22906              	.L876:
 22907              		.loc 1 3137 0 discriminator 4
 22908 05f4 0023     		movs	r3, #0
 22909              	.L877:
 22910              		.loc 1 3137 0 discriminator 6
 22911 05f6 DBB2     		uxtb	r3, r3
3138:..\src/command_processing.c **** }
 22912              		.loc 1 3138 0 is_stmt 1 discriminator 6
 22913 05f8 1846     		mov	r0, r3
 22914 05fa 0837     		adds	r7, r7, #8
 22915              		.cfi_def_cfa_offset 8
 22916 05fc BD46     		mov	sp, r7
 22917              		.cfi_def_cfa_register 13
 22918              		@ sp needed
 22919 05fe 80BD     		pop	{r7, pc}
 22920              	.L882:
 22921              		.align	2
 22922              	.L881:
 22923 0600 00000000 		.word	g_mem
 22924 0604 A01F0000 		.word	.LC305
 22925              		.cfi_endproc
 22926              	.LFE86:
 22927              		.size	memInit, .-memInit
 22928              		.section	.rodata
 22929 1fa7 00       		.align	2
 22930              	.LC306:
 22931 1fa8 55535230 		.ascii	"USR001\000"
 22931      303100
 22932              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 22933              		.align	2
 22934              		.global	memInit_SoftHandPro
 22935              		.thumb
 22936              		.thumb_func
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 502


 22937              		.type	memInit_SoftHandPro, %function
 22938              	memInit_SoftHandPro:
 22939              	.LFB87:
3139:..\src/command_processing.c **** 
3140:..\src/command_processing.c **** //==============================================================================
3141:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3142:..\src/command_processing.c **** //==============================================================================
3143:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3144:..\src/command_processing.c **** {
 22940              		.loc 1 3144 0
 22941              		.cfi_startproc
 22942              		@ args = 0, pretend = 0, frame = 8
 22943              		@ frame_needed = 1, uses_anonymous_args = 0
 22944              		@ link register save eliminated.
 22945 0000 80B4     		push	{r7}
 22946              		.cfi_def_cfa_offset 4
 22947              		.cfi_offset 7, -4
 22948 0002 83B0     		sub	sp, sp, #12
 22949              		.cfi_def_cfa_offset 16
 22950 0004 00AF     		add	r7, sp, #0
 22951              		.cfi_def_cfa_register 7
3145:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 22952              		.loc 1 3145 0
 22953 0006 0023     		movs	r3, #0
 22954 0008 FB70     		strb	r3, [r7, #3]
3146:..\src/command_processing.c ****     
3147:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3148:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 22955              		.loc 1 3148 0
 22956 000a 894B     		ldr	r3, .L886
 22957 000c 0122     		movs	r2, #1
 22958 000e 83F8A720 		strb	r2, [r3, #167]
3149:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 22959              		.loc 1 3149 0
 22960 0012 874B     		ldr	r3, .L886
 22961 0014 0022     		movs	r2, #0
 22962 0016 83F8AC20 		strb	r2, [r3, #172]
3150:..\src/command_processing.c ****     
3151:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 22963              		.loc 1 3151 0
 22964 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22965 001c 8449     		ldr	r1, .L886
 22966 001e 1346     		mov	r3, r2
 22967 0020 DB00     		lsls	r3, r3, #3
 22968 0022 9B1A     		subs	r3, r3, r2
 22969 0024 1B01     		lsls	r3, r3, #4
 22970 0026 0B44     		add	r3, r3, r1
 22971 0028 E033     		adds	r3, r3, #224
 22972 002a 0122     		movs	r2, #1
 22973 002c 1A70     		strb	r2, [r3]
3152:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 22974              		.loc 1 3152 0
 22975 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22976 0030 7F49     		ldr	r1, .L886
 22977 0032 1346     		mov	r3, r2
 22978 0034 DB00     		lsls	r3, r3, #3
 22979 0036 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 503


 22980 0038 1B01     		lsls	r3, r3, #4
 22981 003a 0B44     		add	r3, r3, r1
 22982 003c 03F58773 		add	r3, r3, #270
 22983 0040 0022     		movs	r2, #0
 22984 0042 1A70     		strb	r2, [r3]
3153:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 22985              		.loc 1 3153 0
 22986 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22987 0046 7A49     		ldr	r1, .L886
 22988 0048 1346     		mov	r3, r2
 22989 004a DB00     		lsls	r3, r3, #3
 22990 004c 9B1A     		subs	r3, r3, r2
 22991 004e 1B01     		lsls	r3, r3, #4
 22992 0050 0B44     		add	r3, r3, r1
 22993 0052 03F20F13 		addw	r3, r3, #271
 22994 0056 0022     		movs	r2, #0
 22995 0058 1A70     		strb	r2, [r3]
3154:..\src/command_processing.c ****     
3155:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3156:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 22996              		.loc 1 3156 0
 22997 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22998 005c 744B     		ldr	r3, .L886
 22999 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23000 0062 7349     		ldr	r1, .L886
 23001 0064 1346     		mov	r3, r2
 23002 0066 DB00     		lsls	r3, r3, #3
 23003 0068 9B1A     		subs	r3, r3, r2
 23004 006a 1B01     		lsls	r3, r3, #4
 23005 006c 0B44     		add	r3, r3, r1
 23006 006e 03F58873 		add	r3, r3, #272
 23007 0072 0246     		mov	r2, r0
 23008 0074 1A70     		strb	r2, [r3]
3157:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23009              		.loc 1 3157 0
 23010 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23011 0078 6D49     		ldr	r1, .L886
 23012 007a 1346     		mov	r3, r2
 23013 007c DB00     		lsls	r3, r3, #3
 23014 007e 9B1A     		subs	r3, r3, r2
 23015 0080 1B01     		lsls	r3, r3, #4
 23016 0082 0B44     		add	r3, r3, r1
 23017 0084 03F21113 		addw	r3, r3, #273
 23018 0088 0122     		movs	r2, #1
 23019 008a 1A70     		strb	r2, [r3]
3158:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23020              		.loc 1 3158 0
 23021 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23022 008e 6849     		ldr	r1, .L886
 23023 0090 1346     		mov	r3, r2
 23024 0092 DB00     		lsls	r3, r3, #3
 23025 0094 9B1A     		subs	r3, r3, r2
 23026 0096 1B01     		lsls	r3, r3, #4
 23027 0098 0B44     		add	r3, r3, r1
 23028 009a 03F58973 		add	r3, r3, #274
 23029 009e 0122     		movs	r2, #1
 23030 00a0 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 504


3159:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23031              		.loc 1 3159 0
 23032 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23033 00a4 6249     		ldr	r1, .L886
 23034 00a6 1346     		mov	r3, r2
 23035 00a8 DB00     		lsls	r3, r3, #3
 23036 00aa 9B1A     		subs	r3, r3, r2
 23037 00ac 1B01     		lsls	r3, r3, #4
 23038 00ae 0B44     		add	r3, r3, r1
 23039 00b0 E433     		adds	r3, r3, #228
 23040 00b2 0022     		movs	r2, #0
 23041 00b4 1A60     		str	r2, [r3]
3160:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23042              		.loc 1 3160 0
 23043 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23044 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23045 00ba 5D48     		ldr	r0, .L886
 23046 00bc 0B46     		mov	r3, r1
 23047 00be DB00     		lsls	r3, r3, #3
 23048 00c0 5B1A     		subs	r3, r3, r1
 23049 00c2 1B01     		lsls	r3, r3, #4
 23050 00c4 0344     		add	r3, r3, r0
 23051 00c6 03F58873 		add	r3, r3, #272
 23052 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23053 00cc 1846     		mov	r0, r3
 23054 00ce 5849     		ldr	r1, .L886
 23055 00d0 0346     		mov	r3, r0
 23056 00d2 5B00     		lsls	r3, r3, #1
 23057 00d4 0344     		add	r3, r3, r0
 23058 00d6 1B01     		lsls	r3, r3, #4
 23059 00d8 0B44     		add	r3, r3, r1
 23060 00da 03F29513 		addw	r3, r3, #405
 23061 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23062 00e0 1946     		mov	r1, r3
 23063 00e2 4FF47A53 		mov	r3, #16000
 23064 00e6 03FA01F1 		lsl	r1, r3, r1
 23065 00ea 5148     		ldr	r0, .L886
 23066 00ec 1346     		mov	r3, r2
 23067 00ee DB00     		lsls	r3, r3, #3
 23068 00f0 9B1A     		subs	r3, r3, r2
 23069 00f2 1B01     		lsls	r3, r3, #4
 23070 00f4 0344     		add	r3, r3, r0
 23071 00f6 E833     		adds	r3, r3, #232
 23072 00f8 1960     		str	r1, [r3]
 23073              	.LBB21:
3161:..\src/command_processing.c ****     
3162:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23074              		.loc 1 3162 0
 23075 00fa 0023     		movs	r3, #0
 23076 00fc 7B60     		str	r3, [r7, #4]
 23077 00fe 2EE0     		b	.L884
 23078              	.L885:
3163:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3164:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23079              		.loc 1 3164 0 discriminator 3
 23080 0100 4B49     		ldr	r1, .L886
 23081 0102 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 505


 23082 0104 1346     		mov	r3, r2
 23083 0106 5B00     		lsls	r3, r3, #1
 23084 0108 1344     		add	r3, r3, r2
 23085 010a 1B01     		lsls	r3, r3, #4
 23086 010c 0B44     		add	r3, r3, r1
 23087 010e 03F5D873 		add	r3, r3, #432
 23088 0112 0122     		movs	r2, #1
 23089 0114 1A70     		strb	r2, [r3]
3165:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23090              		.loc 1 3165 0 discriminator 3
 23091 0116 4649     		ldr	r1, .L886
 23092 0118 7A68     		ldr	r2, [r7, #4]
 23093 011a 1346     		mov	r3, r2
 23094 011c 5B00     		lsls	r3, r3, #1
 23095 011e 1344     		add	r3, r3, r2
 23096 0120 1B01     		lsls	r3, r3, #4
 23097 0122 0B44     		add	r3, r3, r1
 23098 0124 03F2B513 		addw	r3, r3, #437
 23099 0128 2322     		movs	r2, #35
 23100 012a 1A70     		strb	r2, [r3]
3166:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23101              		.loc 1 3166 0 discriminator 3
 23102 012c 4049     		ldr	r1, .L886
 23103 012e 7A68     		ldr	r2, [r7, #4]
 23104 0130 1346     		mov	r3, r2
 23105 0132 5B00     		lsls	r3, r3, #1
 23106 0134 1344     		add	r3, r3, r2
 23107 0136 1B01     		lsls	r3, r3, #4
 23108 0138 0B44     		add	r3, r3, r1
 23109 013a 03F5DB73 		add	r3, r3, #438
 23110 013e 0322     		movs	r2, #3
 23111 0140 1A70     		strb	r2, [r3]
3167:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23112              		.loc 1 3167 0 discriminator 3
 23113 0142 3B49     		ldr	r1, .L886
 23114 0144 7A68     		ldr	r2, [r7, #4]
 23115 0146 1346     		mov	r3, r2
 23116 0148 5B00     		lsls	r3, r3, #1
 23117 014a 1344     		add	r3, r3, r2
 23118 014c 1B01     		lsls	r3, r3, #4
 23119 014e 0B44     		add	r3, r3, r1
 23120 0150 03F2B713 		addw	r3, r3, #439
 23121 0154 FF22     		movs	r2, #255
 23122 0156 1A70     		strb	r2, [r3]
3162:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23123              		.loc 1 3162 0 discriminator 3
 23124 0158 7B68     		ldr	r3, [r7, #4]
 23125 015a 0133     		adds	r3, r3, #1
 23126 015c 7B60     		str	r3, [r7, #4]
 23127              	.L884:
3162:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23128              		.loc 1 3162 0 is_stmt 0 discriminator 1
 23129 015e 7B68     		ldr	r3, [r7, #4]
 23130 0160 012B     		cmp	r3, #1
 23131 0162 CDDD     		ble	.L885
 23132              	.LBE21:
3168:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 506


3169:..\src/command_processing.c ****     
3170:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23133              		.loc 1 3170 0 is_stmt 1
 23134 0164 324B     		ldr	r3, .L886
 23135 0166 4FF48062 		mov	r2, #1024
 23136 016a C3F8F421 		str	r2, [r3, #500]
3171:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23137              		.loc 1 3171 0
 23138 016e 304B     		ldr	r3, .L886
 23139 0170 4FF48062 		mov	r2, #1024
 23140 0174 C3F8F821 		str	r2, [r3, #504]
3172:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23141              		.loc 1 3172 0
 23142 0178 2D4B     		ldr	r3, .L886
 23143 017a C822     		movs	r2, #200
 23144 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3173:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23145              		.loc 1 3173 0
 23146 0180 2B4B     		ldr	r3, .L886
 23147 0182 C822     		movs	r2, #200
 23148 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3174:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23149              		.loc 1 3174 0
 23150 0188 294B     		ldr	r3, .L886
 23151 018a 6422     		movs	r2, #100
 23152 018c 83F8FC21 		strb	r2, [r3, #508]
3175:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23153              		.loc 1 3175 0
 23154 0190 274B     		ldr	r3, .L886
 23155 0192 6422     		movs	r2, #100
 23156 0194 83F8FD21 		strb	r2, [r3, #509]
3176:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23157              		.loc 1 3176 0
 23158 0198 254B     		ldr	r3, .L886
 23159 019a 0022     		movs	r2, #0
 23160 019c 83F8FE21 		strb	r2, [r3, #510]
3177:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23161              		.loc 1 3177 0
 23162 01a0 234B     		ldr	r3, .L886
 23163 01a2 0022     		movs	r2, #0
 23164 01a4 83F8FF21 		strb	r2, [r3, #511]
3178:..\src/command_processing.c ****     
3179:..\src/command_processing.c ****     //Initialize rest position parameters  
3180:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23165              		.loc 1 3180 0
 23166 01a8 214B     		ldr	r3, .L886
 23167 01aa 0022     		movs	r2, #0
 23168 01ac 83F8AC22 		strb	r2, [r3, #684]
3181:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23169              		.loc 1 3181 0
 23170 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23171 01b2 1F49     		ldr	r1, .L886
 23172 01b4 1346     		mov	r3, r2
 23173 01b6 DB00     		lsls	r3, r3, #3
 23174 01b8 9B1A     		subs	r3, r3, r2
 23175 01ba 1B01     		lsls	r3, r3, #4
 23176 01bc 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 507


 23177 01be 03F58873 		add	r3, r3, #272
 23178 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23179 01c4 1946     		mov	r1, r3
 23180 01c6 1A4A     		ldr	r2, .L886
 23181 01c8 0B46     		mov	r3, r1
 23182 01ca 5B00     		lsls	r3, r3, #1
 23183 01cc 0B44     		add	r3, r3, r1
 23184 01ce 1B01     		lsls	r3, r3, #4
 23185 01d0 1344     		add	r3, r3, r2
 23186 01d2 03F29513 		addw	r3, r3, #405
 23187 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23188 01d8 1A46     		mov	r2, r3
 23189 01da 41F65833 		movw	r3, #7000
 23190 01de 9340     		lsls	r3, r3, r2
 23191 01e0 134A     		ldr	r2, .L886
 23192 01e2 C2F8A032 		str	r3, [r2, #672]
3182:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23193              		.loc 1 3182 0
 23194 01e6 124B     		ldr	r3, .L886
 23195 01e8 0A22     		movs	r2, #10
 23196 01ea C3F8A422 		str	r2, [r3, #676]
3183:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23197              		.loc 1 3183 0
 23198 01ee 104B     		ldr	r3, .L886
 23199 01f0 42F21072 		movw	r2, #10000
 23200 01f4 C3F8A822 		str	r2, [r3, #680]
3184:..\src/command_processing.c **** 	
3185:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23201              		.loc 1 3185 0
 23202 01f8 0D4B     		ldr	r3, .L886
 23203 01fa 0022     		movs	r2, #0
 23204 01fc 83F80022 		strb	r2, [r3, #512]
3186:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23205              		.loc 1 3186 0
 23206 0200 0B4B     		ldr	r3, .L886
 23207 0202 0022     		movs	r2, #0
 23208 0204 83F82622 		strb	r2, [r3, #550]
3187:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23209              		.loc 1 3187 0
 23210 0208 094B     		ldr	r3, .L886
 23211 020a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23212 020e 1233     		adds	r3, r3, #18
 23213 0210 5B01     		lsls	r3, r3, #5
 23214 0212 074A     		ldr	r2, .L886
 23215 0214 1344     		add	r3, r3, r2
 23216 0216 074A     		ldr	r2, .L886+4
 23217 0218 1068     		ldr	r0, [r2]	@ unaligned
 23218 021a 1860     		str	r0, [r3]	@ unaligned
 23219 021c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23220 021e 9279     		ldrb	r2, [r2, #6]
 23221 0220 9980     		strh	r1, [r3, #4]	@ unaligned
 23222 0222 9A71     		strb	r2, [r3, #6]
3188:..\src/command_processing.c **** }
 23223              		.loc 1 3188 0
 23224 0224 00BF     		nop
 23225 0226 0C37     		adds	r7, r7, #12
 23226              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 508


 23227 0228 BD46     		mov	sp, r7
 23228              		.cfi_def_cfa_register 13
 23229              		@ sp needed
 23230 022a 80BC     		pop	{r7}
 23231              		.cfi_restore 7
 23232              		.cfi_def_cfa_offset 0
 23233 022c 7047     		bx	lr
 23234              	.L887:
 23235 022e 00BF     		.align	2
 23236              	.L886:
 23237 0230 00000000 		.word	g_mem
 23238 0234 A81F0000 		.word	.LC306
 23239              		.cfi_endproc
 23240              	.LFE87:
 23241              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 23242              		.section	.text.memInit_Master,"ax",%progbits
 23243              		.align	2
 23244              		.global	memInit_Master
 23245              		.thumb
 23246              		.thumb_func
 23247              		.type	memInit_Master, %function
 23248              	memInit_Master:
 23249              	.LFB88:
3189:..\src/command_processing.c **** 
3190:..\src/command_processing.c **** //==============================================================================
3191:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3192:..\src/command_processing.c **** //==============================================================================
3193:..\src/command_processing.c **** void memInit_Master(void)
3194:..\src/command_processing.c **** {
 23250              		.loc 1 3194 0
 23251              		.cfi_startproc
 23252              		@ args = 0, pretend = 0, frame = 0
 23253              		@ frame_needed = 1, uses_anonymous_args = 0
 23254              		@ link register save eliminated.
 23255 0000 80B4     		push	{r7}
 23256              		.cfi_def_cfa_offset 4
 23257              		.cfi_offset 7, -4
 23258 0002 00AF     		add	r7, sp, #0
 23259              		.cfi_def_cfa_register 7
3195:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 23260              		.loc 1 3195 0
 23261 0004 074B     		ldr	r3, .L889
 23262 0006 0222     		movs	r2, #2
 23263 0008 83F8A020 		strb	r2, [r3, #160]
3196:..\src/command_processing.c ****     
3197:..\src/command_processing.c ****     // MS STRUCT
3198:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 23264              		.loc 1 3198 0
 23265 000c 054B     		ldr	r3, .L889
 23266 000e 0122     		movs	r2, #1
 23267 0010 83F8C122 		strb	r2, [r3, #705]
3199:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 23268              		.loc 1 3199 0
 23269 0014 034B     		ldr	r3, .L889
 23270 0016 0022     		movs	r2, #0
 23271 0018 83F8C022 		strb	r2, [r3, #704]
3200:..\src/command_processing.c **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 509


 23272              		.loc 1 3200 0
 23273 001c 00BF     		nop
 23274 001e BD46     		mov	sp, r7
 23275              		.cfi_def_cfa_register 13
 23276              		@ sp needed
 23277 0020 80BC     		pop	{r7}
 23278              		.cfi_restore 7
 23279              		.cfi_def_cfa_offset 0
 23280 0022 7047     		bx	lr
 23281              	.L890:
 23282              		.align	2
 23283              	.L889:
 23284 0024 00000000 		.word	g_mem
 23285              		.cfi_endproc
 23286              	.LFE88:
 23287              		.size	memInit_Master, .-memInit_Master
 23288              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 23289              		.align	2
 23290              		.global	memInit_AirChambersFb
 23291              		.thumb
 23292              		.thumb_func
 23293              		.type	memInit_AirChambersFb, %function
 23294              	memInit_AirChambersFb:
 23295              	.LFB89:
3201:..\src/command_processing.c **** 
3202:..\src/command_processing.c **** //==============================================================================
3203:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3204:..\src/command_processing.c **** //==============================================================================
3205:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3206:..\src/command_processing.c **** {
 23296              		.loc 1 3206 0
 23297              		.cfi_startproc
 23298              		@ args = 0, pretend = 0, frame = 0
 23299              		@ frame_needed = 1, uses_anonymous_args = 0
 23300              		@ link register save eliminated.
 23301 0000 80B4     		push	{r7}
 23302              		.cfi_def_cfa_offset 4
 23303              		.cfi_offset 7, -4
 23304 0002 00AF     		add	r7, sp, #0
 23305              		.cfi_def_cfa_register 7
3207:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3208:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 23306              		.loc 1 3208 0
 23307 0004 1A4B     		ldr	r3, .L892
 23308 0006 0222     		movs	r2, #2
 23309 0008 83F8AC20 		strb	r2, [r3, #172]
3209:..\src/command_processing.c ****     
3210:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 23310              		.loc 1 3210 0
 23311 000c 184B     		ldr	r3, .L892
 23312 000e 0122     		movs	r2, #1
 23313 0010 83F80F21 		strb	r2, [r3, #271]
3211:..\src/command_processing.c ****     
3212:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3213:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3214:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23314              		.loc 1 3214 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 510


 23315 0014 164B     		ldr	r3, .L892
 23316 0016 0422     		movs	r2, #4
 23317 0018 83F87E21 		strb	r2, [r3, #382]
3215:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23318              		.loc 1 3215 0
 23319 001c 144B     		ldr	r3, .L892
 23320 001e 0022     		movs	r2, #0
 23321 0020 C3F85421 		str	r2, [r3, #340]
3216:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23322              		.loc 1 3216 0
 23323 0024 124B     		ldr	r3, .L892
 23324 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23325 002a 1946     		mov	r1, r3
 23326 002c 104A     		ldr	r2, .L892
 23327 002e 0B46     		mov	r3, r1
 23328 0030 5B00     		lsls	r3, r3, #1
 23329 0032 0B44     		add	r3, r3, r1
 23330 0034 1B01     		lsls	r3, r3, #4
 23331 0036 1344     		add	r3, r3, r2
 23332 0038 03F29513 		addw	r3, r3, #405
 23333 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23334 003e 1A46     		mov	r2, r3
 23335 0040 45F2F053 		movw	r3, #22000
 23336 0044 9340     		lsls	r3, r3, r2
 23337 0046 0A4A     		ldr	r2, .L892
 23338 0048 C2F85831 		str	r3, [r2, #344]
3217:..\src/command_processing.c ****     
3218:..\src/command_processing.c ****     // FB STRUCT
3219:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 23339              		.loc 1 3219 0
 23340 004c 084B     		ldr	r3, .L892
 23341 004e 4FF4E172 		mov	r2, #450
 23342 0052 C3F8D022 		str	r2, [r3, #720]
3220:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 23343              		.loc 1 3220 0
 23344 0056 064B     		ldr	r3, .L892
 23345 0058 064A     		ldr	r2, .L892+4
 23346 005a C3F8D422 		str	r2, [r3, #724]	@ float
3221:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 23347              		.loc 1 3221 0
 23348 005e 044B     		ldr	r3, .L892
 23349 0060 4FF07E52 		mov	r2, #1065353216
 23350 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3222:..\src/command_processing.c **** }
 23351              		.loc 1 3222 0
 23352 0068 00BF     		nop
 23353 006a BD46     		mov	sp, r7
 23354              		.cfi_def_cfa_register 13
 23355              		@ sp needed
 23356 006c 80BC     		pop	{r7}
 23357              		.cfi_restore 7
 23358              		.cfi_def_cfa_offset 0
 23359 006e 7047     		bx	lr
 23360              	.L893:
 23361              		.align	2
 23362              	.L892:
 23363 0070 00000000 		.word	g_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 511


 23364 0074 0000C841 		.word	1103626240
 23365              		.cfi_endproc
 23366              	.LFE89:
 23367              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 23368              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 23369              		.align	2
 23370              		.global	memInit_OtbkActWristMs
 23371              		.thumb
 23372              		.thumb_func
 23373              		.type	memInit_OtbkActWristMs, %function
 23374              	memInit_OtbkActWristMs:
 23375              	.LFB90:
3223:..\src/command_processing.c **** 
3224:..\src/command_processing.c **** //==============================================================================
3225:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3226:..\src/command_processing.c **** //==============================================================================
3227:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3228:..\src/command_processing.c **** {
 23376              		.loc 1 3228 0
 23377              		.cfi_startproc
 23378              		@ args = 0, pretend = 0, frame = 0
 23379              		@ frame_needed = 1, uses_anonymous_args = 0
 23380              		@ link register save eliminated.
 23381 0000 80B4     		push	{r7}
 23382              		.cfi_def_cfa_offset 4
 23383              		.cfi_offset 7, -4
 23384 0002 00AF     		add	r7, sp, #0
 23385              		.cfi_def_cfa_register 7
3229:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3230:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 23386              		.loc 1 3230 0
 23387 0004 294B     		ldr	r3, .L895
 23388 0006 0322     		movs	r2, #3
 23389 0008 83F8AC20 		strb	r2, [r3, #172]
3231:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23390              		.loc 1 3231 0
 23391 000c 274B     		ldr	r3, .L895
 23392 000e 0122     		movs	r2, #1
 23393 0010 83F8A720 		strb	r2, [r3, #167]
3232:..\src/command_processing.c ****     
3233:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 23394              		.loc 1 3233 0
 23395 0014 254B     		ldr	r3, .L895
 23396 0016 0122     		movs	r2, #1
 23397 0018 83F80F21 		strb	r2, [r3, #271]
3234:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 23398              		.loc 1 3234 0
 23399 001c 234B     		ldr	r3, .L895
 23400 001e 6422     		movs	r2, #100
 23401 0020 83F81121 		strb	r2, [r3, #273]
3235:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 23402              		.loc 1 3235 0
 23403 0024 214B     		ldr	r3, .L895
 23404 0026 0022     		movs	r2, #0
 23405 0028 83F81221 		strb	r2, [r3, #274]
3236:..\src/command_processing.c ****     
3237:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 512


3238:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3239:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23406              		.loc 1 3239 0
 23407 002c 1F4B     		ldr	r3, .L895
 23408 002e 0422     		movs	r2, #4
 23409 0030 83F87E21 		strb	r2, [r3, #382]
3240:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 23410              		.loc 1 3240 0
 23411 0034 1D4B     		ldr	r3, .L895
 23412 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 23413 003a 1C4B     		ldr	r3, .L895
 23414 003c 83F88021 		strb	r2, [r3, #384]
3241:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23415              		.loc 1 3241 0
 23416 0040 1A4B     		ldr	r3, .L895
 23417 0042 0122     		movs	r2, #1
 23418 0044 83F88121 		strb	r2, [r3, #385]
3242:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 23419              		.loc 1 3242 0
 23420 0048 184B     		ldr	r3, .L895
 23421 004a 0022     		movs	r2, #0
 23422 004c 83F88221 		strb	r2, [r3, #386]
3243:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23423              		.loc 1 3243 0
 23424 0050 164B     		ldr	r3, .L895
 23425 0052 0022     		movs	r2, #0
 23426 0054 C3F85421 		str	r2, [r3, #340]
3244:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23427              		.loc 1 3244 0
 23428 0058 144B     		ldr	r3, .L895
 23429 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23430 005e 1946     		mov	r1, r3
 23431 0060 124A     		ldr	r2, .L895
 23432 0062 0B46     		mov	r3, r1
 23433 0064 5B00     		lsls	r3, r3, #1
 23434 0066 0B44     		add	r3, r3, r1
 23435 0068 1B01     		lsls	r3, r3, #4
 23436 006a 1344     		add	r3, r3, r2
 23437 006c 03F29513 		addw	r3, r3, #405
 23438 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23439 0072 1A46     		mov	r2, r3
 23440 0074 4FF47A53 		mov	r3, #16000
 23441 0078 9340     		lsls	r3, r3, r2
 23442 007a 0C4A     		ldr	r2, .L895
 23443 007c C2F85831 		str	r3, [r2, #344]
3245:..\src/command_processing.c ****     
3246:..\src/command_processing.c ****     // WR STRUCT
3247:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23444              		.loc 1 3247 0
 23445 0080 0A4B     		ldr	r3, .L895
 23446 0082 0022     		movs	r2, #0
 23447 0084 83F8E022 		strb	r2, [r3, #736]
3248:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23448              		.loc 1 3248 0
 23449 0088 084B     		ldr	r3, .L895
 23450 008a 4FF44872 		mov	r2, #800
 23451 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 513


3249:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 23452              		.loc 1 3249 0
 23453 0092 064B     		ldr	r3, .L895
 23454 0094 4FF44872 		mov	r2, #800
 23455 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3250:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 23456              		.loc 1 3250 0
 23457 009c 034B     		ldr	r3, .L895
 23458 009e 0022     		movs	r2, #0
 23459 00a0 83F8E622 		strb	r2, [r3, #742]
3251:..\src/command_processing.c **** }
 23460              		.loc 1 3251 0
 23461 00a4 00BF     		nop
 23462 00a6 BD46     		mov	sp, r7
 23463              		.cfi_def_cfa_register 13
 23464              		@ sp needed
 23465 00a8 80BC     		pop	{r7}
 23466              		.cfi_restore 7
 23467              		.cfi_def_cfa_offset 0
 23468 00aa 7047     		bx	lr
 23469              	.L896:
 23470              		.align	2
 23471              	.L895:
 23472 00ac 00000000 		.word	g_mem
 23473              		.cfi_endproc
 23474              	.LFE90:
 23475              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 23476              		.section	.text.cmd_get_measurements,"ax",%progbits
 23477              		.align	2
 23478              		.global	cmd_get_measurements
 23479              		.thumb
 23480              		.thumb_func
 23481              		.type	cmd_get_measurements, %function
 23482              	cmd_get_measurements:
 23483              	.LFB91:
3252:..\src/command_processing.c **** 
3253:..\src/command_processing.c **** //==============================================================================
3254:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3255:..\src/command_processing.c **** //==============================================================================
3256:..\src/command_processing.c **** /**
3257:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3258:..\src/command_processing.c **** **/
3259:..\src/command_processing.c **** 
3260:..\src/command_processing.c **** void cmd_get_measurements(){
 23484              		.loc 1 3260 0
 23485              		.cfi_startproc
 23486              		@ args = 0, pretend = 0, frame = 16
 23487              		@ frame_needed = 1, uses_anonymous_args = 0
 23488 0000 90B5     		push	{r4, r7, lr}
 23489              		.cfi_def_cfa_offset 12
 23490              		.cfi_offset 4, -12
 23491              		.cfi_offset 7, -8
 23492              		.cfi_offset 14, -4
 23493 0002 85B0     		sub	sp, sp, #20
 23494              		.cfi_def_cfa_offset 32
 23495 0004 00AF     		add	r7, sp, #0
 23496              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 514


3261:..\src/command_processing.c ****  
3262:..\src/command_processing.c ****     uint8 CYDATA index;
3263:..\src/command_processing.c ****     int16 aux_int16;
3264:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3265:..\src/command_processing.c ****     
3266:..\src/command_processing.c ****     uint8 packet_data[8]; 
3267:..\src/command_processing.c ****     
3268:..\src/command_processing.c ****     //Header package
3269:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23497              		.loc 1 3269 0
 23498 0006 8423     		movs	r3, #132
 23499 0008 3B71     		strb	r3, [r7, #4]
3270:..\src/command_processing.c ****     
3271:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23500              		.loc 1 3271 0
 23501 000a 0323     		movs	r3, #3
 23502 000c FB73     		strb	r3, [r7, #15]
 23503 000e 38E0     		b	.L898
 23504              	.L899:
3272:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23505              		.loc 1 3272 0
 23506 0010 264B     		ldr	r3, .L900
 23507 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23508 0016 1A46     		mov	r2, r3
 23509 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23510 001a 2548     		ldr	r0, .L900+4
 23511 001c 1346     		mov	r3, r2
 23512 001e 5B00     		lsls	r3, r3, #1
 23513 0020 1344     		add	r3, r3, r2
 23514 0022 9B00     		lsls	r3, r3, #2
 23515 0024 1344     		add	r3, r3, r2
 23516 0026 0B44     		add	r3, r3, r1
 23517 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23518 002c 1F4B     		ldr	r3, .L900
 23519 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23520 0032 1C46     		mov	r4, r3
 23521 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23522 0036 1D48     		ldr	r0, .L900
 23523 0038 2346     		mov	r3, r4
 23524 003a 5B00     		lsls	r3, r3, #1
 23525 003c 2344     		add	r3, r3, r4
 23526 003e 1B01     		lsls	r3, r3, #4
 23527 0040 0344     		add	r3, r3, r0
 23528 0042 0B44     		add	r3, r3, r1
 23529 0044 03F29513 		addw	r3, r3, #405
 23530 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23531 004a 42FA03F3 		asr	r3, r2, r3
 23532 004e 1BB2     		sxth	r3, r3
 23533 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3273:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23534              		.loc 1 3273 0
 23535 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23536 0054 5B00     		lsls	r3, r3, #1
 23537 0056 0233     		adds	r3, r3, #2
 23538 0058 07F10C02 		add	r2, r7, #12
 23539 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23540 005e 07F11001 		add	r1, r7, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 515


 23541 0062 0B44     		add	r3, r3, r1
 23542 0064 03F80C2C 		strb	r2, [r3, #-12]
3274:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23543              		.loc 1 3274 0
 23544 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23545 006a 5B00     		lsls	r3, r3, #1
 23546 006c 5A1C     		adds	r2, r3, #1
 23547 006e 07F10C03 		add	r3, r7, #12
 23548 0072 0133     		adds	r3, r3, #1
 23549 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23550 0076 07F11003 		add	r3, r7, #16
 23551 007a 1344     		add	r3, r3, r2
 23552 007c 0A46     		mov	r2, r1
 23553 007e 03F80C2C 		strb	r2, [r3, #-12]
 23554              	.L898:
3271:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23555              		.loc 1 3271 0 discriminator 1
 23556 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23557 0084 5A1E     		subs	r2, r3, #1
 23558 0086 FA73     		strb	r2, [r7, #15]
 23559 0088 002B     		cmp	r3, #0
 23560 008a C1D1     		bne	.L899
3275:..\src/command_processing.c ****     }
3276:..\src/command_processing.c **** 
3277:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3278:..\src/command_processing.c **** 
3279:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23561              		.loc 1 3279 0
 23562 008c 3B1D     		adds	r3, r7, #4
 23563 008e 0721     		movs	r1, #7
 23564 0090 1846     		mov	r0, r3
 23565 0092 FFF7FEFF 		bl	LCRChecksum
 23566 0096 0346     		mov	r3, r0
 23567 0098 FB72     		strb	r3, [r7, #11]
3280:..\src/command_processing.c **** 
3281:..\src/command_processing.c ****     commWrite(packet_data, 8);
 23568              		.loc 1 3281 0
 23569 009a 3B1D     		adds	r3, r7, #4
 23570 009c 0821     		movs	r1, #8
 23571 009e 1846     		mov	r0, r3
 23572 00a0 FFF7FEFF 		bl	commWrite
3282:..\src/command_processing.c ****    
3283:..\src/command_processing.c **** }
 23573              		.loc 1 3283 0
 23574 00a4 00BF     		nop
 23575 00a6 1437     		adds	r7, r7, #20
 23576              		.cfi_def_cfa_offset 12
 23577 00a8 BD46     		mov	sp, r7
 23578              		.cfi_def_cfa_register 13
 23579              		@ sp needed
 23580 00aa 90BD     		pop	{r4, r7, pc}
 23581              	.L901:
 23582              		.align	2
 23583              	.L900:
 23584 00ac 00000000 		.word	g_mem
 23585 00b0 00000000 		.word	g_measOld
 23586              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 516


 23587              	.LFE91:
 23588              		.size	cmd_get_measurements, .-cmd_get_measurements
 23589              		.section	.text.cmd_get_velocities,"ax",%progbits
 23590              		.align	2
 23591              		.global	cmd_get_velocities
 23592              		.thumb
 23593              		.thumb_func
 23594              		.type	cmd_get_velocities, %function
 23595              	cmd_get_velocities:
 23596              	.LFB92:
3284:..\src/command_processing.c **** 
3285:..\src/command_processing.c **** void cmd_get_velocities(){
 23597              		.loc 1 3285 0
 23598              		.cfi_startproc
 23599              		@ args = 0, pretend = 0, frame = 16
 23600              		@ frame_needed = 1, uses_anonymous_args = 0
 23601 0000 90B5     		push	{r4, r7, lr}
 23602              		.cfi_def_cfa_offset 12
 23603              		.cfi_offset 4, -12
 23604              		.cfi_offset 7, -8
 23605              		.cfi_offset 14, -4
 23606 0002 85B0     		sub	sp, sp, #20
 23607              		.cfi_def_cfa_offset 32
 23608 0004 00AF     		add	r7, sp, #0
 23609              		.cfi_def_cfa_register 7
3286:..\src/command_processing.c ****  
3287:..\src/command_processing.c ****     uint8 CYDATA index;
3288:..\src/command_processing.c ****     int16 aux_int16;
3289:..\src/command_processing.c ****    
3290:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3291:..\src/command_processing.c ****     
3292:..\src/command_processing.c ****     uint8 packet_data[8]; 
3293:..\src/command_processing.c ****     
3294:..\src/command_processing.c ****     //Header package
3295:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 23610              		.loc 1 3295 0
 23611 0006 8923     		movs	r3, #137
 23612 0008 3B71     		strb	r3, [r7, #4]
3296:..\src/command_processing.c ****     
3297:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23613              		.loc 1 3297 0
 23614 000a 0323     		movs	r3, #3
 23615 000c FB73     		strb	r3, [r7, #15]
 23616 000e 3AE0     		b	.L903
 23617              	.L904:
3298:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 23618              		.loc 1 3298 0
 23619 0010 274B     		ldr	r3, .L905
 23620 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23621 0016 1A46     		mov	r2, r3
 23622 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23623 001a 2648     		ldr	r0, .L905+4
 23624 001c 1346     		mov	r3, r2
 23625 001e 5B00     		lsls	r3, r3, #1
 23626 0020 1344     		add	r3, r3, r2
 23627 0022 9B00     		lsls	r3, r3, #2
 23628 0024 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 517


 23629 0026 0B44     		add	r3, r3, r1
 23630 0028 0633     		adds	r3, r3, #6
 23631 002a 9B00     		lsls	r3, r3, #2
 23632 002c 0344     		add	r3, r3, r0
 23633 002e 5A68     		ldr	r2, [r3, #4]
 23634 0030 1F4B     		ldr	r3, .L905
 23635 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23636 0036 1C46     		mov	r4, r3
 23637 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23638 003a 1D48     		ldr	r0, .L905
 23639 003c 2346     		mov	r3, r4
 23640 003e 5B00     		lsls	r3, r3, #1
 23641 0040 2344     		add	r3, r3, r4
 23642 0042 1B01     		lsls	r3, r3, #4
 23643 0044 0344     		add	r3, r3, r0
 23644 0046 0B44     		add	r3, r3, r1
 23645 0048 03F29513 		addw	r3, r3, #405
 23646 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23647 004e 42FA03F3 		asr	r3, r2, r3
 23648 0052 1BB2     		sxth	r3, r3
 23649 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3299:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23650              		.loc 1 3299 0
 23651 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23652 0058 5B00     		lsls	r3, r3, #1
 23653 005a 0233     		adds	r3, r3, #2
 23654 005c 07F10C02 		add	r2, r7, #12
 23655 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23656 0062 07F11001 		add	r1, r7, #16
 23657 0066 0B44     		add	r3, r3, r1
 23658 0068 03F80C2C 		strb	r2, [r3, #-12]
3300:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23659              		.loc 1 3300 0
 23660 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23661 006e 5B00     		lsls	r3, r3, #1
 23662 0070 5A1C     		adds	r2, r3, #1
 23663 0072 07F10C03 		add	r3, r7, #12
 23664 0076 0133     		adds	r3, r3, #1
 23665 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23666 007a 07F11003 		add	r3, r7, #16
 23667 007e 1344     		add	r3, r3, r2
 23668 0080 0A46     		mov	r2, r1
 23669 0082 03F80C2C 		strb	r2, [r3, #-12]
 23670              	.L903:
3297:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 23671              		.loc 1 3297 0 discriminator 1
 23672 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23673 0088 5A1E     		subs	r2, r3, #1
 23674 008a FA73     		strb	r2, [r7, #15]
 23675 008c 002B     		cmp	r3, #0
 23676 008e BFD1     		bne	.L904
3301:..\src/command_processing.c ****     }
3302:..\src/command_processing.c ****             
3303:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3304:..\src/command_processing.c **** 
3305:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23677              		.loc 1 3305 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 518


 23678 0090 3B1D     		adds	r3, r7, #4
 23679 0092 0721     		movs	r1, #7
 23680 0094 1846     		mov	r0, r3
 23681 0096 FFF7FEFF 		bl	LCRChecksum
 23682 009a 0346     		mov	r3, r0
 23683 009c FB72     		strb	r3, [r7, #11]
3306:..\src/command_processing.c **** 
3307:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 23684              		.loc 1 3307 0
 23685 009e 3B1D     		adds	r3, r7, #4
 23686 00a0 0821     		movs	r1, #8
 23687 00a2 1846     		mov	r0, r3
 23688 00a4 FFF7FEFF 		bl	commWrite
3308:..\src/command_processing.c **** }
 23689              		.loc 1 3308 0
 23690 00a8 00BF     		nop
 23691 00aa 1437     		adds	r7, r7, #20
 23692              		.cfi_def_cfa_offset 12
 23693 00ac BD46     		mov	sp, r7
 23694              		.cfi_def_cfa_register 13
 23695              		@ sp needed
 23696 00ae 90BD     		pop	{r4, r7, pc}
 23697              	.L906:
 23698              		.align	2
 23699              	.L905:
 23700 00b0 00000000 		.word	g_mem
 23701 00b4 00000000 		.word	g_measOld
 23702              		.cfi_endproc
 23703              	.LFE92:
 23704              		.size	cmd_get_velocities, .-cmd_get_velocities
 23705              		.section	.text.cmd_get_accelerations,"ax",%progbits
 23706              		.align	2
 23707              		.global	cmd_get_accelerations
 23708              		.thumb
 23709              		.thumb_func
 23710              		.type	cmd_get_accelerations, %function
 23711              	cmd_get_accelerations:
 23712              	.LFB93:
3309:..\src/command_processing.c **** 
3310:..\src/command_processing.c **** void cmd_get_accelerations(){
 23713              		.loc 1 3310 0
 23714              		.cfi_startproc
 23715              		@ args = 0, pretend = 0, frame = 16
 23716              		@ frame_needed = 1, uses_anonymous_args = 0
 23717 0000 90B5     		push	{r4, r7, lr}
 23718              		.cfi_def_cfa_offset 12
 23719              		.cfi_offset 4, -12
 23720              		.cfi_offset 7, -8
 23721              		.cfi_offset 14, -4
 23722 0002 85B0     		sub	sp, sp, #20
 23723              		.cfi_def_cfa_offset 32
 23724 0004 00AF     		add	r7, sp, #0
 23725              		.cfi_def_cfa_register 7
3311:..\src/command_processing.c ****  
3312:..\src/command_processing.c ****     uint8 CYDATA index;
3313:..\src/command_processing.c ****     int16 aux_int16;
3314:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 519


3315:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     uint8 packet_data[8]; 
3318:..\src/command_processing.c ****     
3319:..\src/command_processing.c ****     //Header package
3320:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 23726              		.loc 1 3320 0
 23727 0006 8B23     		movs	r3, #139
 23728 0008 3B71     		strb	r3, [r7, #4]
3321:..\src/command_processing.c ****     
3322:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23729              		.loc 1 3322 0
 23730 000a 0323     		movs	r3, #3
 23731 000c FB73     		strb	r3, [r7, #15]
 23732 000e 39E0     		b	.L908
 23733              	.L909:
3323:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 23734              		.loc 1 3323 0
 23735 0010 274B     		ldr	r3, .L910
 23736 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23737 0016 1A46     		mov	r2, r3
 23738 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23739 001a 2648     		ldr	r0, .L910+4
 23740 001c 1346     		mov	r3, r2
 23741 001e 5B00     		lsls	r3, r3, #1
 23742 0020 1344     		add	r3, r3, r2
 23743 0022 9B00     		lsls	r3, r3, #2
 23744 0024 1344     		add	r3, r3, r2
 23745 0026 0B44     		add	r3, r3, r1
 23746 0028 0A33     		adds	r3, r3, #10
 23747 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23748 002e 204B     		ldr	r3, .L910
 23749 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23750 0034 1C46     		mov	r4, r3
 23751 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23752 0038 1D48     		ldr	r0, .L910
 23753 003a 2346     		mov	r3, r4
 23754 003c 5B00     		lsls	r3, r3, #1
 23755 003e 2344     		add	r3, r3, r4
 23756 0040 1B01     		lsls	r3, r3, #4
 23757 0042 0344     		add	r3, r3, r0
 23758 0044 0B44     		add	r3, r3, r1
 23759 0046 03F29513 		addw	r3, r3, #405
 23760 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23761 004c 42FA03F3 		asr	r3, r2, r3
 23762 0050 1BB2     		sxth	r3, r3
 23763 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3324:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23764              		.loc 1 3324 0
 23765 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23766 0056 5B00     		lsls	r3, r3, #1
 23767 0058 0233     		adds	r3, r3, #2
 23768 005a 07F10C02 		add	r2, r7, #12
 23769 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23770 0060 07F11001 		add	r1, r7, #16
 23771 0064 0B44     		add	r3, r3, r1
 23772 0066 03F80C2C 		strb	r2, [r3, #-12]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 520


3325:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23773              		.loc 1 3325 0
 23774 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23775 006c 5B00     		lsls	r3, r3, #1
 23776 006e 5A1C     		adds	r2, r3, #1
 23777 0070 07F10C03 		add	r3, r7, #12
 23778 0074 0133     		adds	r3, r3, #1
 23779 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23780 0078 07F11003 		add	r3, r7, #16
 23781 007c 1344     		add	r3, r3, r2
 23782 007e 0A46     		mov	r2, r1
 23783 0080 03F80C2C 		strb	r2, [r3, #-12]
 23784              	.L908:
3322:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 23785              		.loc 1 3322 0 discriminator 1
 23786 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23787 0086 5A1E     		subs	r2, r3, #1
 23788 0088 FA73     		strb	r2, [r7, #15]
 23789 008a 002B     		cmp	r3, #0
 23790 008c C0D1     		bne	.L909
3326:..\src/command_processing.c ****     }
3327:..\src/command_processing.c ****     
3328:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3329:..\src/command_processing.c **** 
3330:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23791              		.loc 1 3330 0
 23792 008e 3B1D     		adds	r3, r7, #4
 23793 0090 0721     		movs	r1, #7
 23794 0092 1846     		mov	r0, r3
 23795 0094 FFF7FEFF 		bl	LCRChecksum
 23796 0098 0346     		mov	r3, r0
 23797 009a FB72     		strb	r3, [r7, #11]
3331:..\src/command_processing.c **** 
3332:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 23798              		.loc 1 3332 0
 23799 009c 3B1D     		adds	r3, r7, #4
 23800 009e 0821     		movs	r1, #8
 23801 00a0 1846     		mov	r0, r3
 23802 00a2 FFF7FEFF 		bl	commWrite
3333:..\src/command_processing.c **** }
 23803              		.loc 1 3333 0
 23804 00a6 00BF     		nop
 23805 00a8 1437     		adds	r7, r7, #20
 23806              		.cfi_def_cfa_offset 12
 23807 00aa BD46     		mov	sp, r7
 23808              		.cfi_def_cfa_register 13
 23809              		@ sp needed
 23810 00ac 90BD     		pop	{r4, r7, pc}
 23811              	.L911:
 23812 00ae 00BF     		.align	2
 23813              	.L910:
 23814 00b0 00000000 		.word	g_mem
 23815 00b4 00000000 		.word	g_measOld
 23816              		.cfi_endproc
 23817              	.LFE93:
 23818              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 23819              		.section	.text.cmd_get_joystick,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 521


 23820              		.align	2
 23821              		.global	cmd_get_joystick
 23822              		.thumb
 23823              		.thumb_func
 23824              		.type	cmd_get_joystick, %function
 23825              	cmd_get_joystick:
 23826              	.LFB94:
3334:..\src/command_processing.c **** 
3335:..\src/command_processing.c **** void cmd_get_joystick() {
 23827              		.loc 1 3335 0
 23828              		.cfi_startproc
 23829              		@ args = 0, pretend = 0, frame = 8
 23830              		@ frame_needed = 1, uses_anonymous_args = 0
 23831 0000 80B5     		push	{r7, lr}
 23832              		.cfi_def_cfa_offset 8
 23833              		.cfi_offset 7, -8
 23834              		.cfi_offset 14, -4
 23835 0002 82B0     		sub	sp, sp, #8
 23836              		.cfi_def_cfa_offset 16
 23837 0004 00AF     		add	r7, sp, #0
 23838              		.cfi_def_cfa_register 7
3336:..\src/command_processing.c ****  
3337:..\src/command_processing.c ****     int16 aux_int16;
3338:..\src/command_processing.c ****     
3339:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3340:..\src/command_processing.c ****     
3341:..\src/command_processing.c ****     uint8 packet_data[6];
3342:..\src/command_processing.c ****     
3343:..\src/command_processing.c ****     // Header        
3344:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 23839              		.loc 1 3344 0
 23840 0006 9223     		movs	r3, #146
 23841 0008 3B70     		strb	r3, [r7]
3345:..\src/command_processing.c ****     
3346:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 23842              		.loc 1 3346 0
 23843 000a 134B     		ldr	r3, .L913
 23844 000c 1B6A     		ldr	r3, [r3, #32]
 23845 000e 1BB2     		sxth	r3, r3
 23846 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3347:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23847              		.loc 1 3347 0
 23848 0012 BB1D     		adds	r3, r7, #6
 23849 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23850 0016 BB70     		strb	r3, [r7, #2]
3348:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23851              		.loc 1 3348 0
 23852 0018 BB1D     		adds	r3, r7, #6
 23853 001a 0133     		adds	r3, r3, #1
 23854 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23855 001e 7B70     		strb	r3, [r7, #1]
3349:..\src/command_processing.c ****     
3350:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 23856              		.loc 1 3350 0
 23857 0020 0D4B     		ldr	r3, .L913
 23858 0022 5B6A     		ldr	r3, [r3, #36]
 23859 0024 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 522


 23860 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3351:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23861              		.loc 1 3351 0
 23862 0028 BB1D     		adds	r3, r7, #6
 23863 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23864 002c 3B71     		strb	r3, [r7, #4]
3352:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23865              		.loc 1 3352 0
 23866 002e BB1D     		adds	r3, r7, #6
 23867 0030 0133     		adds	r3, r3, #1
 23868 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23869 0034 FB70     		strb	r3, [r7, #3]
3353:..\src/command_processing.c **** 
3354:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23870              		.loc 1 3354 0
 23871 0036 3B46     		mov	r3, r7
 23872 0038 0521     		movs	r1, #5
 23873 003a 1846     		mov	r0, r3
 23874 003c FFF7FEFF 		bl	LCRChecksum
 23875 0040 0346     		mov	r3, r0
 23876 0042 7B71     		strb	r3, [r7, #5]
3355:..\src/command_processing.c **** 
3356:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23877              		.loc 1 3356 0
 23878 0044 3B46     		mov	r3, r7
 23879 0046 0621     		movs	r1, #6
 23880 0048 1846     		mov	r0, r3
 23881 004a FFF7FEFF 		bl	commWrite
3357:..\src/command_processing.c **** }
 23882              		.loc 1 3357 0
 23883 004e 00BF     		nop
 23884 0050 0837     		adds	r7, r7, #8
 23885              		.cfi_def_cfa_offset 8
 23886 0052 BD46     		mov	sp, r7
 23887              		.cfi_def_cfa_register 13
 23888              		@ sp needed
 23889 0054 80BD     		pop	{r7, pc}
 23890              	.L914:
 23891 0056 00BF     		.align	2
 23892              	.L913:
 23893 0058 00000000 		.word	g_adc_measOld
 23894              		.cfi_endproc
 23895              	.LFE94:
 23896              		.size	cmd_get_joystick, .-cmd_get_joystick
 23897              		.section	.text.cmd_set_inputs,"ax",%progbits
 23898              		.align	2
 23899              		.global	cmd_set_inputs
 23900              		.thumb
 23901              		.thumb_func
 23902              		.type	cmd_set_inputs, %function
 23903              	cmd_set_inputs:
 23904              	.LFB95:
3358:..\src/command_processing.c **** 
3359:..\src/command_processing.c **** void cmd_set_inputs(){
 23905              		.loc 1 3359 0
 23906              		.cfi_startproc
 23907              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 523


 23908              		@ frame_needed = 1, uses_anonymous_args = 0
 23909              		@ link register save eliminated.
 23910 0000 90B4     		push	{r4, r7}
 23911              		.cfi_def_cfa_offset 8
 23912              		.cfi_offset 4, -8
 23913              		.cfi_offset 7, -4
 23914 0002 82B0     		sub	sp, sp, #8
 23915              		.cfi_def_cfa_offset 16
 23916 0004 00AF     		add	r7, sp, #0
 23917              		.cfi_def_cfa_register 7
3360:..\src/command_processing.c ****     
3361:..\src/command_processing.c ****     // Store position setted in right variables
3362:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3363:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3364:..\src/command_processing.c ****     
3365:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 23918              		.loc 1 3365 0
 23919 0006 894B     		ldr	r3, .L929
 23920 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23921 000a 1B02     		lsls	r3, r3, #8
 23922 000c 1AB2     		sxth	r2, r3
 23923 000e 874B     		ldr	r3, .L929
 23924 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 23925 0012 1BB2     		sxth	r3, r3
 23926 0014 1343     		orrs	r3, r3, r2
 23927 0016 1BB2     		sxth	r3, r3
 23928 0018 3B80     		strh	r3, [r7]	@ movhi
3366:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 23929              		.loc 1 3366 0
 23930 001a 844B     		ldr	r3, .L929
 23931 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 23932 001e 1B02     		lsls	r3, r3, #8
 23933 0020 1AB2     		sxth	r2, r3
 23934 0022 824B     		ldr	r3, .L929
 23935 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23936 0026 1BB2     		sxth	r3, r3
 23937 0028 1343     		orrs	r3, r3, r2
 23938 002a 1BB2     		sxth	r3, r3
 23939 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 23940              	.LBB22:
3367:..\src/command_processing.c ****     
3368:..\src/command_processing.c ****     // Check if last command received was the same as this 
3369:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3370:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 23941              		.loc 1 3370 0
 23942 002e 0023     		movs	r3, #0
 23943 0030 FB71     		strb	r3, [r7, #7]
 23944 0032 1DE0     		b	.L916
 23945              	.L918:
3371:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 23946              		.loc 1 3371 0
 23947 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23948 0036 7E4A     		ldr	r2, .L929+4
 23949 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 23950 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23951 003e 5B00     		lsls	r3, r3, #1
 23952 0040 07F10801 		add	r1, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 524


 23953 0044 0B44     		add	r3, r3, r1
 23954 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 23955 004a 9A42     		cmp	r2, r3
 23956 004c 02D0     		beq	.L917
3372:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 23957              		.loc 1 3372 0
 23958 004e 794B     		ldr	r3, .L929+8
 23959 0050 0122     		movs	r2, #1
 23960 0052 1A70     		strb	r2, [r3]
 23961              	.L917:
3373:..\src/command_processing.c ****        }
3374:..\src/command_processing.c ****         // Update last command
3375:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 23962              		.loc 1 3375 0 discriminator 2
 23963 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23964 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23965 0058 5B00     		lsls	r3, r3, #1
 23966 005a 07F10801 		add	r1, r7, #8
 23967 005e 0B44     		add	r3, r3, r1
 23968 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 23969 0064 724B     		ldr	r3, .L929+4
 23970 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3370:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 23971              		.loc 1 3370 0 discriminator 2
 23972 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23973 006c 0133     		adds	r3, r3, #1
 23974 006e FB71     		strb	r3, [r7, #7]
 23975              	.L916:
3370:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 23976              		.loc 1 3370 0 is_stmt 0 discriminator 1
 23977 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23978 0072 714B     		ldr	r3, .L929+12
 23979 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23980 0078 0133     		adds	r3, r3, #1
 23981 007a 9A42     		cmp	r2, r3
 23982 007c DADB     		blt	.L918
 23983              	.LBE22:
3376:..\src/command_processing.c ****     }
3377:..\src/command_processing.c ****     
3378:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3379:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 23984              		.loc 1 3379 0 is_stmt 1
 23985 007e 6D4B     		ldr	r3, .L929+8
 23986 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23987 0082 002B     		cmp	r3, #0
 23988 0084 00F0CC80 		beq	.L928
 23989              	.LBB23:
3380:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 23990              		.loc 1 3380 0
 23991 0088 0023     		movs	r3, #0
 23992 008a BB71     		strb	r3, [r7, #6]
 23993 008c C4E0     		b	.L920
 23994              	.L927:
3381:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 23995              		.loc 1 3381 0
 23996 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23997 0090 6A49     		ldr	r1, .L929+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 525


 23998 0092 1346     		mov	r3, r2
 23999 0094 DB00     		lsls	r3, r3, #3
 24000 0096 9B1A     		subs	r3, r3, r2
 24001 0098 1B01     		lsls	r3, r3, #4
 24002 009a 0B44     		add	r3, r3, r1
 24003 009c 03F20F13 		addw	r3, r3, #271
 24004 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24005 00a2 022B     		cmp	r3, #2
 24006 00a4 0ED1     		bne	.L921
3382:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 24007              		.loc 1 3382 0
 24008 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24009 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24010 00aa 5B00     		lsls	r3, r3, #1
 24011 00ac 07F10801 		add	r1, r7, #8
 24012 00b0 0B44     		add	r3, r3, r1
 24013 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 24014 00b6 1846     		mov	r0, r3
 24015 00b8 6149     		ldr	r1, .L929+20
 24016 00ba 1301     		lsls	r3, r2, #4
 24017 00bc 0B44     		add	r3, r3, r1
 24018 00be 0433     		adds	r3, r3, #4
 24019 00c0 1860     		str	r0, [r3]
 24020 00c2 47E0     		b	.L922
 24021              	.L921:
3383:..\src/command_processing.c ****             }
3384:..\src/command_processing.c ****             else {
3385:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24022              		.loc 1 3385 0
 24023 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24024 00c6 5D49     		ldr	r1, .L929+16
 24025 00c8 1346     		mov	r3, r2
 24026 00ca DB00     		lsls	r3, r3, #3
 24027 00cc 9B1A     		subs	r3, r3, r2
 24028 00ce 1B01     		lsls	r3, r3, #4
 24029 00d0 0B44     		add	r3, r3, r1
 24030 00d2 03F20F13 		addw	r3, r3, #271
 24031 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24032 00d8 012B     		cmp	r3, #1
 24033 00da 0ED1     		bne	.L923
3386:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 24034              		.loc 1 3386 0
 24035 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24036 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24037 00e0 5B00     		lsls	r3, r3, #1
 24038 00e2 07F10801 		add	r1, r7, #8
 24039 00e6 0B44     		add	r3, r3, r1
 24040 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 24041 00ec 1846     		mov	r0, r3
 24042 00ee 5449     		ldr	r1, .L929+20
 24043 00f0 1301     		lsls	r3, r2, #4
 24044 00f2 0B44     		add	r3, r3, r1
 24045 00f4 0833     		adds	r3, r3, #8
 24046 00f6 1860     		str	r0, [r3]
 24047 00f8 2CE0     		b	.L922
 24048              	.L923:
3387:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 526


3388:..\src/command_processing.c ****                 else {
3389:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 24049              		.loc 1 3389 0
 24050 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24051 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24052 00fe 5B00     		lsls	r3, r3, #1
 24053 0100 07F10801 		add	r1, r7, #8
 24054 0104 0B44     		add	r3, r3, r1
 24055 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 24056 010a 1846     		mov	r0, r3
 24057 010c 4C49     		ldr	r1, .L929+20
 24058 010e 1301     		lsls	r3, r2, #4
 24059 0110 0B44     		add	r3, r3, r1
 24060 0112 1860     		str	r0, [r3]
3390:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 24061              		.loc 1 3390 0
 24062 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24063 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24064 0118 494A     		ldr	r2, .L929+20
 24065 011a 1B01     		lsls	r3, r3, #4
 24066 011c 1344     		add	r3, r3, r2
 24067 011e 1868     		ldr	r0, [r3]
 24068 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24069 0122 454C     		ldr	r4, .L929+12
 24070 0124 1346     		mov	r3, r2
 24071 0126 DB00     		lsls	r3, r3, #3
 24072 0128 9B1A     		subs	r3, r3, r2
 24073 012a 1B01     		lsls	r3, r3, #4
 24074 012c 2344     		add	r3, r3, r4
 24075 012e 03F58873 		add	r3, r3, #272
 24076 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24077 0134 1C46     		mov	r4, r3
 24078 0136 414A     		ldr	r2, .L929+16
 24079 0138 2346     		mov	r3, r4
 24080 013a 5B00     		lsls	r3, r3, #1
 24081 013c 2344     		add	r3, r3, r4
 24082 013e 1B01     		lsls	r3, r3, #4
 24083 0140 1344     		add	r3, r3, r2
 24084 0142 03F29513 		addw	r3, r3, #405
 24085 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24086 0148 00FA03F2 		lsl	r2, r0, r3
 24087 014c 3C48     		ldr	r0, .L929+20
 24088 014e 0B01     		lsls	r3, r1, #4
 24089 0150 0344     		add	r3, r3, r0
 24090 0152 1A60     		str	r2, [r3]
 24091              	.L922:
3391:..\src/command_processing.c ****                 }
3392:..\src/command_processing.c ****             }  
3393:..\src/command_processing.c ****                
3394:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3395:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 24092              		.loc 1 3395 0
 24093 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24094 0156 3849     		ldr	r1, .L929+12
 24095 0158 1346     		mov	r3, r2
 24096 015a DB00     		lsls	r3, r3, #3
 24097 015c 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 527


 24098 015e 1B01     		lsls	r3, r3, #4
 24099 0160 0B44     		add	r3, r3, r1
 24100 0162 E333     		adds	r3, r3, #227
 24101 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24102 0166 002B     		cmp	r3, #0
 24103 0168 53D0     		beq	.L924
 24104              		.loc 1 3395 0 is_stmt 0 discriminator 1
 24105 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24106 016c 3349     		ldr	r1, .L929+16
 24107 016e 1346     		mov	r3, r2
 24108 0170 DB00     		lsls	r3, r3, #3
 24109 0172 9B1A     		subs	r3, r3, r2
 24110 0174 1B01     		lsls	r3, r3, #4
 24111 0176 0B44     		add	r3, r3, r1
 24112 0178 03F20F13 		addw	r3, r3, #271
 24113 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24114 017e 032B     		cmp	r3, #3
 24115 0180 0BD0     		beq	.L925
 24116              		.loc 1 3395 0 discriminator 2
 24117 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24118 0184 2D49     		ldr	r1, .L929+16
 24119 0186 1346     		mov	r3, r2
 24120 0188 DB00     		lsls	r3, r3, #3
 24121 018a 9B1A     		subs	r3, r3, r2
 24122 018c 1B01     		lsls	r3, r3, #4
 24123 018e 0B44     		add	r3, r3, r1
 24124 0190 03F20F13 		addw	r3, r3, #271
 24125 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24126 0196 002B     		cmp	r3, #0
 24127 0198 3BD1     		bne	.L924
 24128              	.L925:
3396:..\src/command_processing.c ****                 
3397:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24129              		.loc 1 3397 0 is_stmt 1
 24130 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24131 019c 284A     		ldr	r2, .L929+20
 24132 019e 1B01     		lsls	r3, r3, #4
 24133 01a0 1344     		add	r3, r3, r2
 24134 01a2 1968     		ldr	r1, [r3]
 24135 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24136 01a6 2448     		ldr	r0, .L929+12
 24137 01a8 1346     		mov	r3, r2
 24138 01aa DB00     		lsls	r3, r3, #3
 24139 01ac 9B1A     		subs	r3, r3, r2
 24140 01ae 1B01     		lsls	r3, r3, #4
 24141 01b0 0344     		add	r3, r3, r0
 24142 01b2 E433     		adds	r3, r3, #228
 24143 01b4 1B68     		ldr	r3, [r3]
 24144 01b6 9942     		cmp	r1, r3
 24145 01b8 0DDA     		bge	.L926
3398:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24146              		.loc 1 3398 0
 24147 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24148 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24149 01be 1E48     		ldr	r0, .L929+12
 24150 01c0 1346     		mov	r3, r2
 24151 01c2 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 528


 24152 01c4 9B1A     		subs	r3, r3, r2
 24153 01c6 1B01     		lsls	r3, r3, #4
 24154 01c8 0344     		add	r3, r3, r0
 24155 01ca E433     		adds	r3, r3, #228
 24156 01cc 1A68     		ldr	r2, [r3]
 24157 01ce 1C48     		ldr	r0, .L929+20
 24158 01d0 0B01     		lsls	r3, r1, #4
 24159 01d2 0344     		add	r3, r3, r0
 24160 01d4 1A60     		str	r2, [r3]
 24161              	.L926:
3399:..\src/command_processing.c **** 
3400:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 24162              		.loc 1 3400 0
 24163 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24164 01d8 194A     		ldr	r2, .L929+20
 24165 01da 1B01     		lsls	r3, r3, #4
 24166 01dc 1344     		add	r3, r3, r2
 24167 01de 1968     		ldr	r1, [r3]
 24168 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24169 01e2 1548     		ldr	r0, .L929+12
 24170 01e4 1346     		mov	r3, r2
 24171 01e6 DB00     		lsls	r3, r3, #3
 24172 01e8 9B1A     		subs	r3, r3, r2
 24173 01ea 1B01     		lsls	r3, r3, #4
 24174 01ec 0344     		add	r3, r3, r0
 24175 01ee E833     		adds	r3, r3, #232
 24176 01f0 1B68     		ldr	r3, [r3]
 24177 01f2 9942     		cmp	r1, r3
 24178 01f4 0DDD     		ble	.L924
3401:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 24179              		.loc 1 3401 0
 24180 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24181 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24182 01fa 0F48     		ldr	r0, .L929+12
 24183 01fc 1346     		mov	r3, r2
 24184 01fe DB00     		lsls	r3, r3, #3
 24185 0200 9B1A     		subs	r3, r3, r2
 24186 0202 1B01     		lsls	r3, r3, #4
 24187 0204 0344     		add	r3, r3, r0
 24188 0206 E833     		adds	r3, r3, #232
 24189 0208 1A68     		ldr	r2, [r3]
 24190 020a 0D48     		ldr	r0, .L929+20
 24191 020c 0B01     		lsls	r3, r1, #4
 24192 020e 0344     		add	r3, r3, r0
 24193 0210 1A60     		str	r2, [r3]
 24194              	.L924:
3380:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24195              		.loc 1 3380 0 discriminator 2
 24196 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24197 0214 0133     		adds	r3, r3, #1
 24198 0216 BB71     		strb	r3, [r7, #6]
 24199              	.L920:
3380:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24200              		.loc 1 3380 0 is_stmt 0 discriminator 1
 24201 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24202 021a 012B     		cmp	r3, #1
 24203 021c 7FF637AF 		bls	.L927
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 529


 24204              	.L928:
 24205              	.LBE23:
3402:..\src/command_processing.c ****             }
3403:..\src/command_processing.c ****         }  
3404:..\src/command_processing.c ****     }
3405:..\src/command_processing.c **** }
 24206              		.loc 1 3405 0 is_stmt 1
 24207 0220 00BF     		nop
 24208 0222 0837     		adds	r7, r7, #8
 24209              		.cfi_def_cfa_offset 8
 24210 0224 BD46     		mov	sp, r7
 24211              		.cfi_def_cfa_register 13
 24212              		@ sp needed
 24213 0226 90BC     		pop	{r4, r7}
 24214              		.cfi_restore 7
 24215              		.cfi_restore 4
 24216              		.cfi_def_cfa_offset 0
 24217 0228 7047     		bx	lr
 24218              	.L930:
 24219 022a 00BF     		.align	2
 24220              	.L929:
 24221 022c 00000000 		.word	g_rx
 24222 0230 04000000 		.word	last_aux_int16.11342
 24223 0234 00000000 		.word	change_ext_ref_flag
 24224 0238 00000000 		.word	c_mem
 24225 023c 00000000 		.word	g_mem
 24226 0240 00000000 		.word	g_refNew
 24227              		.cfi_endproc
 24228              	.LFE95:
 24229              		.size	cmd_set_inputs, .-cmd_set_inputs
 24230              		.section	.text.cmd_activate,"ax",%progbits
 24231              		.align	2
 24232              		.global	cmd_activate
 24233              		.thumb
 24234              		.thumb_func
 24235              		.type	cmd_activate, %function
 24236              	cmd_activate:
 24237              	.LFB96:
3406:..\src/command_processing.c **** 
3407:..\src/command_processing.c **** void cmd_activate(){
 24238              		.loc 1 3407 0
 24239              		.cfi_startproc
 24240              		@ args = 0, pretend = 0, frame = 8
 24241              		@ frame_needed = 1, uses_anonymous_args = 0
 24242 0000 80B5     		push	{r7, lr}
 24243              		.cfi_def_cfa_offset 8
 24244              		.cfi_offset 7, -8
 24245              		.cfi_offset 14, -4
 24246 0002 82B0     		sub	sp, sp, #8
 24247              		.cfi_def_cfa_offset 16
 24248 0004 00AF     		add	r7, sp, #0
 24249              		.cfi_def_cfa_register 7
3408:..\src/command_processing.c ****     
3409:..\src/command_processing.c ****     // Store new value reads
3410:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24250              		.loc 1 3410 0
 24251 0006 294B     		ldr	r3, .L938
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 530


 24252 0008 5B78     		ldrb	r3, [r3, #1]
 24253 000a FB71     		strb	r3, [r7, #7]
3411:..\src/command_processing.c ****     
3412:..\src/command_processing.c ****     // Check type of control mode enabled
3413:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24254              		.loc 1 3413 0
 24255 000c 284B     		ldr	r3, .L938+4
 24256 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24257 0012 002B     		cmp	r3, #0
 24258 0014 04D0     		beq	.L932
 24259              		.loc 1 3413 0 is_stmt 0 discriminator 1
 24260 0016 264B     		ldr	r3, .L938+4
 24261 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24262 001c 032B     		cmp	r3, #3
 24263 001e 0BD1     		bne	.L933
 24264              	.L932:
3414:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24265              		.loc 1 3414 0 is_stmt 1
 24266 0020 234B     		ldr	r3, .L938+4
 24267 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24268 0026 1946     		mov	r1, r3
 24269 0028 224A     		ldr	r2, .L938+8
 24270 002a 3423     		movs	r3, #52
 24271 002c 03FB01F3 		mul	r3, r3, r1
 24272 0030 1344     		add	r3, r3, r2
 24273 0032 1B68     		ldr	r3, [r3]
 24274 0034 204A     		ldr	r2, .L938+12
 24275 0036 1360     		str	r3, [r2]
 24276              	.L933:
3415:..\src/command_processing.c ****     }
3416:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24277              		.loc 1 3416 0
 24278 0038 FB79     		ldrb	r3, [r7, #7]
 24279 003a 03F00103 		and	r3, r3, #1
 24280 003e DAB2     		uxtb	r2, r3
 24281 0040 1D4B     		ldr	r3, .L938+12
 24282 0042 1A73     		strb	r2, [r3, #12]
3417:..\src/command_processing.c ****     
3418:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3419:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3420:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3421:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3422:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3423:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3424:..\src/command_processing.c ****         }
3425:..\src/command_processing.c ****         
3426:..\src/command_processing.c ****         // Activate or deactivate the valve
3427:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3428:..\src/command_processing.c ****     }
3429:..\src/command_processing.c **** #endif
3430:..\src/command_processing.c ****     
3431:..\src/command_processing.c ****     // Activate/Deactivate motor
3432:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24283              		.loc 1 3432 0
 24284 0044 1C4B     		ldr	r3, .L938+12
 24285 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24286 0048 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 531


 24287 004a 0020     		movs	r0, #0
 24288 004c FFF7FEFF 		bl	enable_motor
3433:..\src/command_processing.c ****     
3434:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24289              		.loc 1 3434 0
 24290 0050 174B     		ldr	r3, .L938+4
 24291 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24292 0056 012B     		cmp	r3, #1
 24293 0058 23D1     		bne	.L937
3435:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 24294              		.loc 1 3435 0
 24295 005a 154B     		ldr	r3, .L938+4
 24296 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24297 0060 002B     		cmp	r3, #0
 24298 0062 04D0     		beq	.L935
 24299              		.loc 1 3435 0 is_stmt 0 discriminator 1
 24300 0064 124B     		ldr	r3, .L938+4
 24301 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24302 006a 032B     		cmp	r3, #3
 24303 006c 0BD1     		bne	.L936
 24304              	.L935:
3436:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24305              		.loc 1 3436 0 is_stmt 1
 24306 006e 104B     		ldr	r3, .L938+4
 24307 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24308 0074 1946     		mov	r1, r3
 24309 0076 0F4A     		ldr	r2, .L938+8
 24310 0078 3423     		movs	r3, #52
 24311 007a 03FB01F3 		mul	r3, r3, r1
 24312 007e 1344     		add	r3, r3, r2
 24313 0080 1B68     		ldr	r3, [r3]
 24314 0082 0D4A     		ldr	r2, .L938+12
 24315 0084 1361     		str	r3, [r2, #16]
 24316              	.L936:
3437:..\src/command_processing.c ****         }
3438:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24317              		.loc 1 3438 0
 24318 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24319 0088 5B08     		lsrs	r3, r3, #1
 24320 008a DBB2     		uxtb	r3, r3
 24321 008c 03F00103 		and	r3, r3, #1
 24322 0090 DAB2     		uxtb	r2, r3
 24323 0092 094B     		ldr	r3, .L938+12
 24324 0094 1A77     		strb	r2, [r3, #28]
3439:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 24325              		.loc 1 3439 0
 24326 0096 084B     		ldr	r3, .L938+12
 24327 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24328 009a 1946     		mov	r1, r3
 24329 009c 0120     		movs	r0, #1
 24330 009e FFF7FEFF 		bl	enable_motor
 24331              	.L937:
3440:..\src/command_processing.c ****     }
3441:..\src/command_processing.c ****     
3442:..\src/command_processing.c **** }
 24332              		.loc 1 3442 0
 24333 00a2 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 532


 24334 00a4 0837     		adds	r7, r7, #8
 24335              		.cfi_def_cfa_offset 8
 24336 00a6 BD46     		mov	sp, r7
 24337              		.cfi_def_cfa_register 13
 24338              		@ sp needed
 24339 00a8 80BD     		pop	{r7, pc}
 24340              	.L939:
 24341 00aa 00BF     		.align	2
 24342              	.L938:
 24343 00ac 00000000 		.word	g_rx
 24344 00b0 00000000 		.word	g_mem
 24345 00b4 00000000 		.word	g_meas
 24346 00b8 00000000 		.word	g_refNew
 24347              		.cfi_endproc
 24348              	.LFE96:
 24349              		.size	cmd_activate, .-cmd_activate
 24350              		.section	.text.cmd_get_activate,"ax",%progbits
 24351              		.align	2
 24352              		.global	cmd_get_activate
 24353              		.thumb
 24354              		.thumb_func
 24355              		.type	cmd_get_activate, %function
 24356              	cmd_get_activate:
 24357              	.LFB97:
3443:..\src/command_processing.c **** 
3444:..\src/command_processing.c **** void cmd_get_activate(){
 24358              		.loc 1 3444 0
 24359              		.cfi_startproc
 24360              		@ args = 0, pretend = 0, frame = 8
 24361              		@ frame_needed = 1, uses_anonymous_args = 0
 24362 0000 80B5     		push	{r7, lr}
 24363              		.cfi_def_cfa_offset 8
 24364              		.cfi_offset 7, -8
 24365              		.cfi_offset 14, -4
 24366 0002 82B0     		sub	sp, sp, #8
 24367              		.cfi_def_cfa_offset 16
 24368 0004 00AF     		add	r7, sp, #0
 24369              		.cfi_def_cfa_register 7
3445:..\src/command_processing.c ****     
3446:..\src/command_processing.c ****     uint8 packet_data[3];
3447:..\src/command_processing.c **** 
3448:..\src/command_processing.c ****     // Header        
3449:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24370              		.loc 1 3449 0
 24371 0006 8123     		movs	r3, #129
 24372 0008 3B71     		strb	r3, [r7, #4]
3450:..\src/command_processing.c ****     
3451:..\src/command_processing.c ****     // Fill payload
3452:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24373              		.loc 1 3452 0
 24374 000a 124B     		ldr	r3, .L943
 24375 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24376 0010 012B     		cmp	r3, #1
 24377 0012 0BD1     		bne	.L941
3453:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24378              		.loc 1 3453 0
 24379 0014 104B     		ldr	r3, .L943+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 533


 24380 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24381 0018 5B00     		lsls	r3, r3, #1
 24382 001a 5AB2     		sxtb	r2, r3
 24383 001c 0E4B     		ldr	r3, .L943+4
 24384 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24385 0020 5BB2     		sxtb	r3, r3
 24386 0022 1343     		orrs	r3, r3, r2
 24387 0024 5BB2     		sxtb	r3, r3
 24388 0026 DBB2     		uxtb	r3, r3
 24389 0028 7B71     		strb	r3, [r7, #5]
 24390 002a 02E0     		b	.L942
 24391              	.L941:
3454:..\src/command_processing.c ****     } 
3455:..\src/command_processing.c ****     else {
3456:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24392              		.loc 1 3456 0
 24393 002c 0A4B     		ldr	r3, .L943+4
 24394 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24395 0030 7B71     		strb	r3, [r7, #5]
 24396              	.L942:
3457:..\src/command_processing.c ****     }
3458:..\src/command_processing.c ****     
3459:..\src/command_processing.c ****     // Calculate checksum
3460:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24397              		.loc 1 3460 0
 24398 0032 3B1D     		adds	r3, r7, #4
 24399 0034 0221     		movs	r1, #2
 24400 0036 1846     		mov	r0, r3
 24401 0038 FFF7FEFF 		bl	LCRChecksum
 24402 003c 0346     		mov	r3, r0
 24403 003e BB71     		strb	r3, [r7, #6]
3461:..\src/command_processing.c ****     
3462:..\src/command_processing.c ****     // Send package to UART
3463:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24404              		.loc 1 3463 0
 24405 0040 3B1D     		adds	r3, r7, #4
 24406 0042 0321     		movs	r1, #3
 24407 0044 1846     		mov	r0, r3
 24408 0046 FFF7FEFF 		bl	commWrite
3464:..\src/command_processing.c **** 
3465:..\src/command_processing.c **** }
 24409              		.loc 1 3465 0
 24410 004a 00BF     		nop
 24411 004c 0837     		adds	r7, r7, #8
 24412              		.cfi_def_cfa_offset 8
 24413 004e BD46     		mov	sp, r7
 24414              		.cfi_def_cfa_register 13
 24415              		@ sp needed
 24416 0050 80BD     		pop	{r7, pc}
 24417              	.L944:
 24418 0052 00BF     		.align	2
 24419              	.L943:
 24420 0054 00000000 		.word	g_mem
 24421 0058 00000000 		.word	g_ref
 24422              		.cfi_endproc
 24423              	.LFE97:
 24424              		.size	cmd_get_activate, .-cmd_get_activate
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 534


 24425              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24426              		.align	2
 24427              		.global	cmd_get_curr_and_meas
 24428              		.thumb
 24429              		.thumb_func
 24430              		.type	cmd_get_curr_and_meas, %function
 24431              	cmd_get_curr_and_meas:
 24432              	.LFB98:
3466:..\src/command_processing.c **** 
3467:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 24433              		.loc 1 3467 0
 24434              		.cfi_startproc
 24435              		@ args = 0, pretend = 0, frame = 16
 24436              		@ frame_needed = 1, uses_anonymous_args = 0
 24437 0000 90B5     		push	{r4, r7, lr}
 24438              		.cfi_def_cfa_offset 12
 24439              		.cfi_offset 4, -12
 24440              		.cfi_offset 7, -8
 24441              		.cfi_offset 14, -4
 24442 0002 85B0     		sub	sp, sp, #20
 24443              		.cfi_def_cfa_offset 32
 24444 0004 00AF     		add	r7, sp, #0
 24445              		.cfi_def_cfa_register 7
3468:..\src/command_processing.c ****     
3469:..\src/command_processing.c ****     uint8 CYDATA index;
3470:..\src/command_processing.c ****     int16 aux_int16;
3471:..\src/command_processing.c ****    
3472:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3473:..\src/command_processing.c ****     
3474:..\src/command_processing.c ****     uint8 packet_data[12]; 
3475:..\src/command_processing.c **** 
3476:..\src/command_processing.c ****     //Header package
3477:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24446              		.loc 1 3477 0
 24447 0006 8623     		movs	r3, #134
 24448 0008 3B70     		strb	r3, [r7]
3478:..\src/command_processing.c **** 
3479:..\src/command_processing.c ****     // Currents
3480:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 24449              		.loc 1 3480 0
 24450 000a 484B     		ldr	r3, .L950
 24451 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24452 0010 1946     		mov	r1, r3
 24453 0012 474A     		ldr	r2, .L950+4
 24454 0014 3423     		movs	r3, #52
 24455 0016 03FB01F3 		mul	r3, r3, r1
 24456 001a 1344     		add	r3, r3, r2
 24457 001c 0C33     		adds	r3, r3, #12
 24458 001e 1B68     		ldr	r3, [r3]
 24459 0020 1BB2     		sxth	r3, r3
 24460 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3481:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24461              		.loc 1 3481 0
 24462 0024 07F10C03 		add	r3, r7, #12
 24463 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24464 002a BB70     		strb	r3, [r7, #2]
3482:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 535


 24465              		.loc 1 3482 0
 24466 002c 07F10C03 		add	r3, r7, #12
 24467 0030 0133     		adds	r3, r3, #1
 24468 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24469 0034 7B70     		strb	r3, [r7, #1]
3483:..\src/command_processing.c ****     
3484:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24470              		.loc 1 3484 0
 24471 0036 3F4B     		ldr	r3, .L950+8
 24472 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24473 003c 012B     		cmp	r3, #1
 24474 003e 0DD1     		bne	.L946
3485:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24475              		.loc 1 3485 0
 24476 0040 3A4B     		ldr	r3, .L950
 24477 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24478 0046 1946     		mov	r1, r3
 24479 0048 394A     		ldr	r2, .L950+4
 24480 004a 3423     		movs	r3, #52
 24481 004c 03FB01F3 		mul	r3, r3, r1
 24482 0050 1344     		add	r3, r3, r2
 24483 0052 0C33     		adds	r3, r3, #12
 24484 0054 1B68     		ldr	r3, [r3]
 24485 0056 1BB2     		sxth	r3, r3
 24486 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 24487 005a 0CE0     		b	.L947
 24488              	.L946:
3486:..\src/command_processing.c ****     }
3487:..\src/command_processing.c ****     else {
3488:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24489              		.loc 1 3488 0
 24490 005c 334B     		ldr	r3, .L950
 24491 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24492 0062 1946     		mov	r1, r3
 24493 0064 324A     		ldr	r2, .L950+4
 24494 0066 3423     		movs	r3, #52
 24495 0068 03FB01F3 		mul	r3, r3, r1
 24496 006c 1344     		add	r3, r3, r2
 24497 006e 1033     		adds	r3, r3, #16
 24498 0070 1B68     		ldr	r3, [r3]
 24499 0072 1BB2     		sxth	r3, r3
 24500 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 24501              	.L947:
3489:..\src/command_processing.c ****     }
3490:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24502              		.loc 1 3490 0
 24503 0076 07F10C03 		add	r3, r7, #12
 24504 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24505 007c 3B71     		strb	r3, [r7, #4]
3491:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24506              		.loc 1 3491 0
 24507 007e 07F10C03 		add	r3, r7, #12
 24508 0082 0133     		adds	r3, r3, #1
 24509 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24510 0086 FB70     		strb	r3, [r7, #3]
3492:..\src/command_processing.c **** 
3493:..\src/command_processing.c ****     // Positions
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 536


3494:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24511              		.loc 1 3494 0
 24512 0088 0323     		movs	r3, #3
 24513 008a FB73     		strb	r3, [r7, #15]
 24514 008c 38E0     		b	.L948
 24515              	.L949:
3495:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24516              		.loc 1 3495 0
 24517 008e 274B     		ldr	r3, .L950
 24518 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24519 0094 1A46     		mov	r2, r3
 24520 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24521 0098 2548     		ldr	r0, .L950+4
 24522 009a 1346     		mov	r3, r2
 24523 009c 5B00     		lsls	r3, r3, #1
 24524 009e 1344     		add	r3, r3, r2
 24525 00a0 9B00     		lsls	r3, r3, #2
 24526 00a2 1344     		add	r3, r3, r2
 24527 00a4 0B44     		add	r3, r3, r1
 24528 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24529 00aa 204B     		ldr	r3, .L950
 24530 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24531 00b0 1C46     		mov	r4, r3
 24532 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24533 00b4 1D48     		ldr	r0, .L950
 24534 00b6 2346     		mov	r3, r4
 24535 00b8 5B00     		lsls	r3, r3, #1
 24536 00ba 2344     		add	r3, r3, r4
 24537 00bc 1B01     		lsls	r3, r3, #4
 24538 00be 0344     		add	r3, r3, r0
 24539 00c0 0B44     		add	r3, r3, r1
 24540 00c2 03F29513 		addw	r3, r3, #405
 24541 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24542 00c8 42FA03F3 		asr	r3, r2, r3
 24543 00cc 1BB2     		sxth	r3, r3
 24544 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3496:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 24545              		.loc 1 3496 0
 24546 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24547 00d2 5B00     		lsls	r3, r3, #1
 24548 00d4 0633     		adds	r3, r3, #6
 24549 00d6 07F10C02 		add	r2, r7, #12
 24550 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24551 00dc 07F11001 		add	r1, r7, #16
 24552 00e0 0B44     		add	r3, r3, r1
 24553 00e2 03F8102C 		strb	r2, [r3, #-16]
3497:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 24554              		.loc 1 3497 0
 24555 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24556 00e8 5B00     		lsls	r3, r3, #1
 24557 00ea 5A1D     		adds	r2, r3, #5
 24558 00ec 07F10C03 		add	r3, r7, #12
 24559 00f0 0133     		adds	r3, r3, #1
 24560 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24561 00f4 07F11003 		add	r3, r7, #16
 24562 00f8 1344     		add	r3, r3, r2
 24563 00fa 0A46     		mov	r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 537


 24564 00fc 03F8102C 		strb	r2, [r3, #-16]
 24565              	.L948:
3494:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24566              		.loc 1 3494 0 discriminator 1
 24567 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24568 0102 5A1E     		subs	r2, r3, #1
 24569 0104 FA73     		strb	r2, [r7, #15]
 24570 0106 002B     		cmp	r3, #0
 24571 0108 C1D1     		bne	.L949
3498:..\src/command_processing.c ****     }
3499:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3500:..\src/command_processing.c ****         
3501:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 24572              		.loc 1 3501 0
 24573 010a 3B46     		mov	r3, r7
 24574 010c 0B21     		movs	r1, #11
 24575 010e 1846     		mov	r0, r3
 24576 0110 FFF7FEFF 		bl	LCRChecksum
 24577 0114 0346     		mov	r3, r0
 24578 0116 FB72     		strb	r3, [r7, #11]
3502:..\src/command_processing.c ****     commWrite(packet_data, 12);
 24579              		.loc 1 3502 0
 24580 0118 3B46     		mov	r3, r7
 24581 011a 0C21     		movs	r1, #12
 24582 011c 1846     		mov	r0, r3
 24583 011e FFF7FEFF 		bl	commWrite
3503:..\src/command_processing.c ****    
3504:..\src/command_processing.c **** }
 24584              		.loc 1 3504 0
 24585 0122 00BF     		nop
 24586 0124 1437     		adds	r7, r7, #20
 24587              		.cfi_def_cfa_offset 12
 24588 0126 BD46     		mov	sp, r7
 24589              		.cfi_def_cfa_register 13
 24590              		@ sp needed
 24591 0128 90BD     		pop	{r4, r7, pc}
 24592              	.L951:
 24593 012a 00BF     		.align	2
 24594              	.L950:
 24595 012c 00000000 		.word	g_mem
 24596 0130 00000000 		.word	g_measOld
 24597 0134 00000000 		.word	c_mem
 24598              		.cfi_endproc
 24599              	.LFE98:
 24600              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 24601              		.global	__aeabi_dmul
 24602              		.global	__aeabi_d2iz
 24603              		.section	.text.cmd_get_currents,"ax",%progbits
 24604              		.align	2
 24605              		.global	cmd_get_currents
 24606              		.thumb
 24607              		.thumb_func
 24608              		.type	cmd_get_currents, %function
 24609              	cmd_get_currents:
 24610              	.LFB99:
3505:..\src/command_processing.c **** 
3506:..\src/command_processing.c **** void cmd_get_currents(){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 538


 24611              		.loc 1 3506 0
 24612              		.cfi_startproc
 24613              		@ args = 0, pretend = 0, frame = 16
 24614              		@ frame_needed = 1, uses_anonymous_args = 0
 24615 0000 90B5     		push	{r4, r7, lr}
 24616              		.cfi_def_cfa_offset 12
 24617              		.cfi_offset 4, -12
 24618              		.cfi_offset 7, -8
 24619              		.cfi_offset 14, -4
 24620 0002 85B0     		sub	sp, sp, #20
 24621              		.cfi_def_cfa_offset 32
 24622 0004 00AF     		add	r7, sp, #0
 24623              		.cfi_def_cfa_register 7
3507:..\src/command_processing.c ****     
3508:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3509:..\src/command_processing.c ****     
3510:..\src/command_processing.c ****     uint8 packet_data[6]; 
3511:..\src/command_processing.c ****     int16 aux_int16;
3512:..\src/command_processing.c ****     
3513:..\src/command_processing.c ****     //Header package
3514:..\src/command_processing.c **** 
3515:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 24624              		.loc 1 3515 0
 24625 0006 8523     		movs	r3, #133
 24626 0008 3B72     		strb	r3, [r7, #8]
3516:..\src/command_processing.c **** 
3517:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 24627              		.loc 1 3517 0
 24628 000a 334B     		ldr	r3, .L957
 24629 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 24630 0010 022B     		cmp	r3, #2
 24631 0012 0DD0     		beq	.L953
3518:..\src/command_processing.c ****         // Currents
3519:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 24632              		.loc 1 3519 0
 24633 0014 314B     		ldr	r3, .L957+4
 24634 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24635 001a 1946     		mov	r1, r3
 24636 001c 304A     		ldr	r2, .L957+8
 24637 001e 3423     		movs	r3, #52
 24638 0020 03FB01F3 		mul	r3, r3, r1
 24639 0024 1344     		add	r3, r3, r2
 24640 0026 0C33     		adds	r3, r3, #12
 24641 0028 1B68     		ldr	r3, [r3]
 24642 002a 1BB2     		sxth	r3, r3
 24643 002c FB80     		strh	r3, [r7, #6]	@ movhi
 24644 002e 12E0     		b	.L954
 24645              	.L953:
3520:..\src/command_processing.c ****     }
3521:..\src/command_processing.c ****     else {
3522:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3523:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 24646              		.loc 1 3523 0
 24647 0030 2C4B     		ldr	r3, .L957+12
 24648 0032 1B68     		ldr	r3, [r3]	@ float
 24649 0034 1846     		mov	r0, r3
 24650 0036 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 539


 24651 003a 4FF00002 		mov	r2, #0
 24652 003e 2A4B     		ldr	r3, .L957+16
 24653 0040 FFF7FEFF 		bl	__aeabi_dmul
 24654 0044 0346     		mov	r3, r0
 24655 0046 0C46     		mov	r4, r1
 24656 0048 1846     		mov	r0, r3
 24657 004a 2146     		mov	r1, r4
 24658 004c FFF7FEFF 		bl	__aeabi_d2iz
 24659 0050 0346     		mov	r3, r0
 24660 0052 1BB2     		sxth	r3, r3
 24661 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 24662              	.L954:
3524:..\src/command_processing.c ****     }
3525:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24663              		.loc 1 3525 0
 24664 0056 BB1D     		adds	r3, r7, #6
 24665 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24666 005a BB72     		strb	r3, [r7, #10]
3526:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24667              		.loc 1 3526 0
 24668 005c BB1D     		adds	r3, r7, #6
 24669 005e 0133     		adds	r3, r3, #1
 24670 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24671 0062 7B72     		strb	r3, [r7, #9]
3527:..\src/command_processing.c ****     
3528:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24672              		.loc 1 3528 0
 24673 0064 1C4B     		ldr	r3, .L957
 24674 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24675 006a 012B     		cmp	r3, #1
 24676 006c 0DD1     		bne	.L955
3529:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24677              		.loc 1 3529 0
 24678 006e 1B4B     		ldr	r3, .L957+4
 24679 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24680 0074 1946     		mov	r1, r3
 24681 0076 1A4A     		ldr	r2, .L957+8
 24682 0078 3423     		movs	r3, #52
 24683 007a 03FB01F3 		mul	r3, r3, r1
 24684 007e 1344     		add	r3, r3, r2
 24685 0080 0C33     		adds	r3, r3, #12
 24686 0082 1B68     		ldr	r3, [r3]
 24687 0084 1BB2     		sxth	r3, r3
 24688 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 24689 0088 0CE0     		b	.L956
 24690              	.L955:
3530:..\src/command_processing.c ****     }
3531:..\src/command_processing.c ****     else {
3532:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24691              		.loc 1 3532 0
 24692 008a 144B     		ldr	r3, .L957+4
 24693 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24694 0090 1946     		mov	r1, r3
 24695 0092 134A     		ldr	r2, .L957+8
 24696 0094 3423     		movs	r3, #52
 24697 0096 03FB01F3 		mul	r3, r3, r1
 24698 009a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 540


 24699 009c 1033     		adds	r3, r3, #16
 24700 009e 1B68     		ldr	r3, [r3]
 24701 00a0 1BB2     		sxth	r3, r3
 24702 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 24703              	.L956:
3533:..\src/command_processing.c ****     }
3534:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24704              		.loc 1 3534 0
 24705 00a4 BB1D     		adds	r3, r7, #6
 24706 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24707 00a8 3B73     		strb	r3, [r7, #12]
3535:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24708              		.loc 1 3535 0
 24709 00aa BB1D     		adds	r3, r7, #6
 24710 00ac 0133     		adds	r3, r3, #1
 24711 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24712 00b0 FB72     		strb	r3, [r7, #11]
3536:..\src/command_processing.c **** 
3537:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3538:..\src/command_processing.c **** 
3539:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24713              		.loc 1 3539 0
 24714 00b2 07F10803 		add	r3, r7, #8
 24715 00b6 0521     		movs	r1, #5
 24716 00b8 1846     		mov	r0, r3
 24717 00ba FFF7FEFF 		bl	LCRChecksum
 24718 00be 0346     		mov	r3, r0
 24719 00c0 7B73     		strb	r3, [r7, #13]
3540:..\src/command_processing.c ****     
3541:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24720              		.loc 1 3541 0
 24721 00c2 07F10803 		add	r3, r7, #8
 24722 00c6 0621     		movs	r1, #6
 24723 00c8 1846     		mov	r0, r3
 24724 00ca FFF7FEFF 		bl	commWrite
3542:..\src/command_processing.c **** }
 24725              		.loc 1 3542 0
 24726 00ce 00BF     		nop
 24727 00d0 1437     		adds	r7, r7, #20
 24728              		.cfi_def_cfa_offset 12
 24729 00d2 BD46     		mov	sp, r7
 24730              		.cfi_def_cfa_register 13
 24731              		@ sp needed
 24732 00d4 90BD     		pop	{r4, r7, pc}
 24733              	.L958:
 24734 00d6 00BF     		.align	2
 24735              	.L957:
 24736 00d8 00000000 		.word	c_mem
 24737 00dc 00000000 		.word	g_mem
 24738 00e0 00000000 		.word	g_measOld
 24739 00e4 00000000 		.word	g_fb_meas
 24740 00e8 00005940 		.word	1079574528
 24741              		.cfi_endproc
 24742              	.LFE99:
 24743              		.size	cmd_get_currents, .-cmd_get_currents
 24744              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 24745              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 541


 24746              		.global	cmd_get_currents_for_cuff
 24747              		.thumb
 24748              		.thumb_func
 24749              		.type	cmd_get_currents_for_cuff, %function
 24750              	cmd_get_currents_for_cuff:
 24751              	.LFB100:
3543:..\src/command_processing.c **** 
3544:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 24752              		.loc 1 3544 0
 24753              		.cfi_startproc
 24754              		@ args = 0, pretend = 0, frame = 8
 24755              		@ frame_needed = 1, uses_anonymous_args = 0
 24756 0000 80B5     		push	{r7, lr}
 24757              		.cfi_def_cfa_offset 8
 24758              		.cfi_offset 7, -8
 24759              		.cfi_offset 14, -4
 24760 0002 82B0     		sub	sp, sp, #8
 24761              		.cfi_def_cfa_offset 16
 24762 0004 00AF     		add	r7, sp, #0
 24763              		.cfi_def_cfa_register 7
3545:..\src/command_processing.c ****     
3546:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3547:..\src/command_processing.c ****     
3548:..\src/command_processing.c ****     uint8 packet_data[4]; 
3549:..\src/command_processing.c ****     int16 aux_int16;
3550:..\src/command_processing.c ****     
3551:..\src/command_processing.c ****     //Header package
3552:..\src/command_processing.c **** 
3553:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 24764              		.loc 1 3553 0
 24765 0006 8E23     		movs	r3, #142
 24766 0008 3B71     		strb	r3, [r7, #4]
3554:..\src/command_processing.c **** 
3555:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 24767              		.loc 1 3555 0
 24768 000a 144B     		ldr	r3, .L960
 24769 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24770 0010 1946     		mov	r1, r3
 24771 0012 134A     		ldr	r2, .L960+4
 24772 0014 3423     		movs	r3, #52
 24773 0016 03FB01F3 		mul	r3, r3, r1
 24774 001a 1344     		add	r3, r3, r2
 24775 001c 1033     		adds	r3, r3, #16
 24776 001e 1B68     		ldr	r3, [r3]
 24777 0020 1BB2     		sxth	r3, r3
 24778 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3556:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24779              		.loc 1 3556 0
 24780 0024 BB1C     		adds	r3, r7, #2
 24781 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24782 0028 BB71     		strb	r3, [r7, #6]
3557:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24783              		.loc 1 3557 0
 24784 002a BB1C     		adds	r3, r7, #2
 24785 002c 0133     		adds	r3, r3, #1
 24786 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24787 0030 7B71     		strb	r3, [r7, #5]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 542


3558:..\src/command_processing.c **** 
3559:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3560:..\src/command_processing.c **** 
3561:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 24788              		.loc 1 3561 0
 24789 0032 3B1D     		adds	r3, r7, #4
 24790 0034 0321     		movs	r1, #3
 24791 0036 1846     		mov	r0, r3
 24792 0038 FFF7FEFF 		bl	LCRChecksum
 24793 003c 0346     		mov	r3, r0
 24794 003e FB71     		strb	r3, [r7, #7]
3562:..\src/command_processing.c ****     
3563:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 24795              		.loc 1 3563 0
 24796 0040 064B     		ldr	r3, .L960
 24797 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 24798 0046 013B     		subs	r3, r3, #1
 24799 0048 DAB2     		uxtb	r2, r3
 24800 004a 3B1D     		adds	r3, r7, #4
 24801 004c 0421     		movs	r1, #4
 24802 004e 1846     		mov	r0, r3
 24803 0050 FFF7FEFF 		bl	commWriteID
3564:..\src/command_processing.c **** }
 24804              		.loc 1 3564 0
 24805 0054 00BF     		nop
 24806 0056 0837     		adds	r7, r7, #8
 24807              		.cfi_def_cfa_offset 8
 24808 0058 BD46     		mov	sp, r7
 24809              		.cfi_def_cfa_register 13
 24810              		@ sp needed
 24811 005a 80BD     		pop	{r7, pc}
 24812              	.L961:
 24813              		.align	2
 24814              	.L960:
 24815 005c 00000000 		.word	g_mem
 24816 0060 00000000 		.word	g_measOld
 24817              		.cfi_endproc
 24818              	.LFE100:
 24819              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 24820              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 24821              		.align	2
 24822              		.global	commReadResCurrFromSH
 24823              		.thumb
 24824              		.thumb_func
 24825              		.type	commReadResCurrFromSH, %function
 24826              	commReadResCurrFromSH:
 24827              	.LFB101:
3565:..\src/command_processing.c **** 
3566:..\src/command_processing.c **** //==============================================================================
3567:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3568:..\src/command_processing.c **** //==============================================================================
3569:..\src/command_processing.c **** 
3570:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3571:..\src/command_processing.c **** {
 24828              		.loc 1 3571 0
 24829              		.cfi_startproc
 24830              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 543


 24831              		@ frame_needed = 1, uses_anonymous_args = 0
 24832 0000 80B5     		push	{r7, lr}
 24833              		.cfi_def_cfa_offset 8
 24834              		.cfi_offset 7, -8
 24835              		.cfi_offset 14, -4
 24836 0002 88B0     		sub	sp, sp, #32
 24837              		.cfi_def_cfa_offset 40
 24838 0004 00AF     		add	r7, sp, #0
 24839              		.cfi_def_cfa_register 7
3572:..\src/command_processing.c ****     uint8 packet_data[16];
3573:..\src/command_processing.c ****     uint8 packet_lenght;
3574:..\src/command_processing.c ****     int16 curr_diff = 0;
 24840              		.loc 1 3574 0
 24841 0006 0023     		movs	r3, #0
 24842 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3575:..\src/command_processing.c ****     uint32 t_start, t_end;
3576:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 24843              		.loc 1 3576 0
 24844 000a 0123     		movs	r3, #1
 24845 000c 7B77     		strb	r3, [r7, #29]
3577:..\src/command_processing.c **** 
3578:..\src/command_processing.c ****     packet_lenght = 2;
 24846              		.loc 1 3578 0
 24847 000e 0223     		movs	r3, #2
 24848 0010 3B77     		strb	r3, [r7, #28]
3579:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 24849              		.loc 1 3579 0
 24850 0012 8C23     		movs	r3, #140
 24851 0014 3B71     		strb	r3, [r7, #4]
3580:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 24852              		.loc 1 3580 0
 24853 0016 8C23     		movs	r3, #140
 24854 0018 7B71     		strb	r3, [r7, #5]
3581:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 24855              		.loc 1 3581 0
 24856 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 24857 001c 99B2     		uxth	r1, r3
 24858 001e 1D4B     		ldr	r3, .L969
 24859 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 24860 0024 3B1D     		adds	r3, r7, #4
 24861 0026 1846     		mov	r0, r3
 24862 0028 FFF7FEFF 		bl	commWriteID
3582:..\src/command_processing.c **** 
3583:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 24863              		.loc 1 3583 0
 24864 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 24865 0030 0346     		mov	r3, r0
 24866 0032 BB61     		str	r3, [r7, #24]
3584:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 24867              		.loc 1 3584 0
 24868 0034 18E0     		b	.L963
 24869              	.L966:
3585:..\src/command_processing.c ****         if (interrupt_flag){
 24870              		.loc 1 3585 0
 24871 0036 184B     		ldr	r3, .L969+4
 24872 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24873 003a 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 544


 24874 003c 04D0     		beq	.L964
3586:..\src/command_processing.c ****             interrupt_flag = FALSE;
 24875              		.loc 1 3586 0
 24876 003e 164B     		ldr	r3, .L969+4
 24877 0040 0022     		movs	r2, #0
 24878 0042 1A70     		strb	r2, [r3]
3587:..\src/command_processing.c ****             interrupt_manager();
 24879              		.loc 1 3587 0
 24880 0044 FFF7FEFF 		bl	interrupt_manager
 24881              	.L964:
3588:..\src/command_processing.c ****         }
3589:..\src/command_processing.c **** 
3590:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 24882              		.loc 1 3590 0
 24883 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 24884 004c 0346     		mov	r3, r0
 24885 004e 7B61     		str	r3, [r7, #20]
3591:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 24886              		.loc 1 3591 0
 24887 0050 BA69     		ldr	r2, [r7, #24]
 24888 0052 7B69     		ldr	r3, [r7, #20]
 24889 0054 D31A     		subs	r3, r2, r3
 24890 0056 114A     		ldr	r2, .L969+8
 24891 0058 9342     		cmp	r3, r2
 24892 005a 05D9     		bls	.L963
3592:..\src/command_processing.c ****             read_flag = FALSE;
 24893              		.loc 1 3592 0
 24894 005c 0023     		movs	r3, #0
 24895 005e 7B77     		strb	r3, [r7, #29]
3593:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 24896              		.loc 1 3593 0
 24897 0060 0F4B     		ldr	r3, .L969+12
 24898 0062 0022     		movs	r2, #0
 24899 0064 1A70     		strb	r2, [r3]
3594:..\src/command_processing.c ****             break;
 24900              		.loc 1 3594 0
 24901 0066 03E0     		b	.L965
 24902              	.L963:
3584:..\src/command_processing.c ****         if (interrupt_flag){
 24903              		.loc 1 3584 0
 24904 0068 0E4B     		ldr	r3, .L969+16
 24905 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24906 006c 8E2B     		cmp	r3, #142
 24907 006e E2D1     		bne	.L966
 24908              	.L965:
3595:..\src/command_processing.c ****         }
3596:..\src/command_processing.c ****     }
3597:..\src/command_processing.c **** 
3598:..\src/command_processing.c ****     if (read_flag) {
 24909              		.loc 1 3598 0
 24910 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24911 0072 002B     		cmp	r3, #0
 24912 0074 08D0     		beq	.L967
3599:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 24913              		.loc 1 3599 0
 24914 0076 0B4B     		ldr	r3, .L969+16
 24915 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 545


 24916 007a 1B02     		lsls	r3, r3, #8
 24917 007c 1AB2     		sxth	r2, r3
 24918 007e 094B     		ldr	r3, .L969+16
 24919 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24920 0082 1BB2     		sxth	r3, r3
 24921 0084 1343     		orrs	r3, r3, r2
 24922 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 24923              	.L967:
3600:..\src/command_processing.c ****     }
3601:..\src/command_processing.c ****     
3602:..\src/command_processing.c ****     return curr_diff;
 24924              		.loc 1 3602 0
 24925 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3603:..\src/command_processing.c **** }
 24926              		.loc 1 3603 0
 24927 008c 1846     		mov	r0, r3
 24928 008e 2037     		adds	r7, r7, #32
 24929              		.cfi_def_cfa_offset 8
 24930 0090 BD46     		mov	sp, r7
 24931              		.cfi_def_cfa_register 13
 24932              		@ sp needed
 24933 0092 80BD     		pop	{r7, pc}
 24934              	.L970:
 24935              		.align	2
 24936              	.L969:
 24937 0094 00000000 		.word	c_mem
 24938 0098 00000000 		.word	interrupt_flag
 24939 009c 20AA4400 		.word	4500000
 24940 00a0 00000000 		.word	master_mode
 24941 00a4 00000000 		.word	g_rx
 24942              		.cfi_endproc
 24943              	.LFE101:
 24944              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 24945              		.section	.text.cmd_set_baudrate,"ax",%progbits
 24946              		.align	2
 24947              		.global	cmd_set_baudrate
 24948              		.thumb
 24949              		.thumb_func
 24950              		.type	cmd_set_baudrate, %function
 24951              	cmd_set_baudrate:
 24952              	.LFB102:
3604:..\src/command_processing.c **** 
3605:..\src/command_processing.c **** void cmd_set_baudrate(){
 24953              		.loc 1 3605 0
 24954              		.cfi_startproc
 24955              		@ args = 0, pretend = 0, frame = 0
 24956              		@ frame_needed = 1, uses_anonymous_args = 0
 24957 0000 80B5     		push	{r7, lr}
 24958              		.cfi_def_cfa_offset 8
 24959              		.cfi_offset 7, -8
 24960              		.cfi_offset 14, -4
 24961 0002 00AF     		add	r7, sp, #0
 24962              		.cfi_def_cfa_register 7
3606:..\src/command_processing.c ****     
3607:..\src/command_processing.c ****     // Set BaudRate
3608:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 24963              		.loc 1 3608 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 546


 24964 0004 094B     		ldr	r3, .L976
 24965 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 24966 0008 094B     		ldr	r3, .L976+4
 24967 000a 83F8AA20 		strb	r2, [r3, #170]
3609:..\src/command_processing.c ****     
3610:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 24968              		.loc 1 3610 0
 24969 000e 074B     		ldr	r3, .L976
 24970 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24971 0012 0D2B     		cmp	r3, #13
 24972 0014 04D1     		bne	.L975
3611:..\src/command_processing.c ****         case 13:
3612:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 24973              		.loc 1 3612 0
 24974 0016 0121     		movs	r1, #1
 24975 0018 0C20     		movs	r0, #12
 24976 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3613:..\src/command_processing.c ****             break;
 24977              		.loc 1 3613 0
 24978 001e 03E0     		b	.L974
 24979              	.L975:
3614:..\src/command_processing.c ****         default:
3615:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 24980              		.loc 1 3615 0
 24981 0020 0121     		movs	r1, #1
 24982 0022 0220     		movs	r0, #2
 24983 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 24984              	.L974:
3616:..\src/command_processing.c ****     }
3617:..\src/command_processing.c **** }
 24985              		.loc 1 3617 0
 24986 0028 00BF     		nop
 24987 002a 80BD     		pop	{r7, pc}
 24988              	.L977:
 24989              		.align	2
 24990              	.L976:
 24991 002c 00000000 		.word	g_rx
 24992 0030 00000000 		.word	c_mem
 24993              		.cfi_endproc
 24994              	.LFE102:
 24995              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 24996              		.section	.text.cmd_ping,"ax",%progbits
 24997              		.align	2
 24998              		.global	cmd_ping
 24999              		.thumb
 25000              		.thumb_func
 25001              		.type	cmd_ping, %function
 25002              	cmd_ping:
 25003              	.LFB103:
3618:..\src/command_processing.c **** 
3619:..\src/command_processing.c **** void cmd_ping(){
 25004              		.loc 1 3619 0
 25005              		.cfi_startproc
 25006              		@ args = 0, pretend = 0, frame = 8
 25007              		@ frame_needed = 1, uses_anonymous_args = 0
 25008 0000 80B5     		push	{r7, lr}
 25009              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 547


 25010              		.cfi_offset 7, -8
 25011              		.cfi_offset 14, -4
 25012 0002 82B0     		sub	sp, sp, #8
 25013              		.cfi_def_cfa_offset 16
 25014 0004 00AF     		add	r7, sp, #0
 25015              		.cfi_def_cfa_register 7
3620:..\src/command_processing.c **** 
3621:..\src/command_processing.c ****     uint8 packet_data[2];
3622:..\src/command_processing.c **** 
3623:..\src/command_processing.c ****     // Header
3624:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25016              		.loc 1 3624 0
 25017 0006 0023     		movs	r3, #0
 25018 0008 3B71     		strb	r3, [r7, #4]
3625:..\src/command_processing.c ****     
3626:..\src/command_processing.c ****     // Load Payload
3627:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25019              		.loc 1 3627 0
 25020 000a 0023     		movs	r3, #0
 25021 000c 7B71     		strb	r3, [r7, #5]
3628:..\src/command_processing.c **** 
3629:..\src/command_processing.c ****     // Send Package to uart
3630:..\src/command_processing.c ****     commWrite(packet_data, 2);
 25022              		.loc 1 3630 0
 25023 000e 3B1D     		adds	r3, r7, #4
 25024 0010 0221     		movs	r1, #2
 25025 0012 1846     		mov	r0, r3
 25026 0014 FFF7FEFF 		bl	commWrite
3631:..\src/command_processing.c **** }
 25027              		.loc 1 3631 0
 25028 0018 00BF     		nop
 25029 001a 0837     		adds	r7, r7, #8
 25030              		.cfi_def_cfa_offset 8
 25031 001c BD46     		mov	sp, r7
 25032              		.cfi_def_cfa_register 13
 25033              		@ sp needed
 25034 001e 80BD     		pop	{r7, pc}
 25035              		.cfi_endproc
 25036              	.LFE103:
 25037              		.size	cmd_ping, .-cmd_ping
 25038              		.section	.text.cmd_get_inputs,"ax",%progbits
 25039              		.align	2
 25040              		.global	cmd_get_inputs
 25041              		.thumb
 25042              		.thumb_func
 25043              		.type	cmd_get_inputs, %function
 25044              	cmd_get_inputs:
 25045              	.LFB104:
3632:..\src/command_processing.c **** 
3633:..\src/command_processing.c **** void cmd_get_inputs(){
 25046              		.loc 1 3633 0
 25047              		.cfi_startproc
 25048              		@ args = 0, pretend = 0, frame = 16
 25049              		@ frame_needed = 1, uses_anonymous_args = 0
 25050 0000 80B5     		push	{r7, lr}
 25051              		.cfi_def_cfa_offset 8
 25052              		.cfi_offset 7, -8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 548


 25053              		.cfi_offset 14, -4
 25054 0002 84B0     		sub	sp, sp, #16
 25055              		.cfi_def_cfa_offset 24
 25056 0004 00AF     		add	r7, sp, #0
 25057              		.cfi_def_cfa_register 7
3634:..\src/command_processing.c **** 
3635:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3636:..\src/command_processing.c **** 
3637:..\src/command_processing.c ****     uint8 packet_data[6]; 
3638:..\src/command_processing.c ****     int16 aux_int16;
3639:..\src/command_processing.c ****     
3640:..\src/command_processing.c ****     //Header package
3641:..\src/command_processing.c **** 
3642:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25058              		.loc 1 3642 0
 25059 0006 8323     		movs	r3, #131
 25060 0008 3B72     		strb	r3, [r7, #8]
3643:..\src/command_processing.c ****         
3644:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25061              		.loc 1 3644 0
 25062 000a 234B     		ldr	r3, .L980
 25063 000c 1A68     		ldr	r2, [r3]
 25064 000e 234B     		ldr	r3, .L980+4
 25065 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25066 0014 1846     		mov	r0, r3
 25067 0016 2149     		ldr	r1, .L980+4
 25068 0018 0346     		mov	r3, r0
 25069 001a 5B00     		lsls	r3, r3, #1
 25070 001c 0344     		add	r3, r3, r0
 25071 001e 1B01     		lsls	r3, r3, #4
 25072 0020 0B44     		add	r3, r3, r1
 25073 0022 03F29513 		addw	r3, r3, #405
 25074 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25075 0028 42FA03F3 		asr	r3, r2, r3
 25076 002c 1BB2     		sxth	r3, r3
 25077 002e FB80     		strh	r3, [r7, #6]	@ movhi
3645:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25078              		.loc 1 3645 0
 25079 0030 BB1D     		adds	r3, r7, #6
 25080 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25081 0034 BB72     		strb	r3, [r7, #10]
3646:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25082              		.loc 1 3646 0
 25083 0036 BB1D     		adds	r3, r7, #6
 25084 0038 0133     		adds	r3, r3, #1
 25085 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25086 003c 7B72     		strb	r3, [r7, #9]
3647:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25087              		.loc 1 3647 0
 25088 003e 164B     		ldr	r3, .L980
 25089 0040 1A69     		ldr	r2, [r3, #16]
 25090 0042 164B     		ldr	r3, .L980+4
 25091 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25092 0048 1846     		mov	r0, r3
 25093 004a 1449     		ldr	r1, .L980+4
 25094 004c 0346     		mov	r3, r0
 25095 004e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 549


 25096 0050 0344     		add	r3, r3, r0
 25097 0052 1B01     		lsls	r3, r3, #4
 25098 0054 0B44     		add	r3, r3, r1
 25099 0056 03F29513 		addw	r3, r3, #405
 25100 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25101 005c 42FA03F3 		asr	r3, r2, r3
 25102 0060 1BB2     		sxth	r3, r3
 25103 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3648:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25104              		.loc 1 3648 0
 25105 0064 BB1D     		adds	r3, r7, #6
 25106 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25107 0068 3B73     		strb	r3, [r7, #12]
3649:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25108              		.loc 1 3649 0
 25109 006a BB1D     		adds	r3, r7, #6
 25110 006c 0133     		adds	r3, r3, #1
 25111 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25112 0070 FB72     		strb	r3, [r7, #11]
3650:..\src/command_processing.c ****     
3651:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3652:..\src/command_processing.c **** 
3653:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 25113              		.loc 1 3653 0
 25114 0072 07F10803 		add	r3, r7, #8
 25115 0076 0521     		movs	r1, #5
 25116 0078 1846     		mov	r0, r3
 25117 007a FFF7FEFF 		bl	LCRChecksum
 25118 007e 0346     		mov	r3, r0
 25119 0080 7B73     		strb	r3, [r7, #13]
3654:..\src/command_processing.c **** 
3655:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25120              		.loc 1 3655 0
 25121 0082 07F10803 		add	r3, r7, #8
 25122 0086 0621     		movs	r1, #6
 25123 0088 1846     		mov	r0, r3
 25124 008a FFF7FEFF 		bl	commWrite
3656:..\src/command_processing.c **** }
 25125              		.loc 1 3656 0
 25126 008e 00BF     		nop
 25127 0090 1037     		adds	r7, r7, #16
 25128              		.cfi_def_cfa_offset 8
 25129 0092 BD46     		mov	sp, r7
 25130              		.cfi_def_cfa_register 13
 25131              		@ sp needed
 25132 0094 80BD     		pop	{r7, pc}
 25133              	.L981:
 25134 0096 00BF     		.align	2
 25135              	.L980:
 25136 0098 00000000 		.word	g_refOld
 25137 009c 00000000 		.word	g_mem
 25138              		.cfi_endproc
 25139              	.LFE104:
 25140              		.size	cmd_get_inputs, .-cmd_get_inputs
 25141              		.section	.text.cmd_store_params,"ax",%progbits
 25142              		.align	2
 25143              		.global	cmd_store_params
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 550


 25144              		.thumb
 25145              		.thumb_func
 25146              		.type	cmd_store_params, %function
 25147              	cmd_store_params:
 25148              	.LFB105:
3657:..\src/command_processing.c **** 
3658:..\src/command_processing.c **** void cmd_store_params(){
 25149              		.loc 1 3658 0
 25150              		.cfi_startproc
 25151              		@ args = 0, pretend = 0, frame = 16
 25152              		@ frame_needed = 1, uses_anonymous_args = 0
 25153 0000 80B5     		push	{r7, lr}
 25154              		.cfi_def_cfa_offset 8
 25155              		.cfi_offset 7, -8
 25156              		.cfi_offset 14, -4
 25157 0002 84B0     		sub	sp, sp, #16
 25158              		.cfi_def_cfa_offset 24
 25159 0004 00AF     		add	r7, sp, #0
 25160              		.cfi_def_cfa_register 7
3659:..\src/command_processing.c ****     
3660:..\src/command_processing.c ****     // Check input mode enabled
3661:..\src/command_processing.c ****     uint32 off_1;
3662:..\src/command_processing.c ****     float mult_1;
3663:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 25161              		.loc 1 3663 0
 25162 0006 0223     		movs	r3, #2
 25163 0008 FB73     		strb	r3, [r7, #15]
3664:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3665:..\src/command_processing.c ****     uint8 CYDATA old_id;
3666:..\src/command_processing.c ****     
3667:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25164              		.loc 1 3667 0
 25165 000a 674B     		ldr	r3, .L993
 25166 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25167 0010 002B     		cmp	r3, #0
 25168 0012 7CD1     		bne	.L983
3668:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25169              		.loc 1 3668 0
 25170 0014 644B     		ldr	r3, .L993
 25171 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25172 001a 1946     		mov	r1, r3
 25173 001c 624A     		ldr	r2, .L993
 25174 001e 0B46     		mov	r3, r1
 25175 0020 5B00     		lsls	r3, r3, #1
 25176 0022 0B44     		add	r3, r3, r1
 25177 0024 1B01     		lsls	r3, r3, #4
 25178 0026 1344     		add	r3, r3, r2
 25179 0028 03F5CC73 		add	r3, r3, #408
 25180 002c 1B68     		ldr	r3, [r3]
 25181 002e BB60     		str	r3, [r7, #8]
3669:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25182              		.loc 1 3669 0
 25183 0030 5D4B     		ldr	r3, .L993
 25184 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25185 0036 1946     		mov	r1, r3
 25186 0038 5B4A     		ldr	r2, .L993
 25187 003a 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 551


 25188 003c 5B00     		lsls	r3, r3, #1
 25189 003e 0B44     		add	r3, r3, r1
 25190 0040 1B01     		lsls	r3, r3, #4
 25191 0042 1344     		add	r3, r3, r2
 25192 0044 03F5D273 		add	r3, r3, #420
 25193 0048 1B68     		ldr	r3, [r3]	@ float
 25194 004a 7B60     		str	r3, [r7, #4]	@ float
3670:..\src/command_processing.c **** 
3671:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25195              		.loc 1 3671 0
 25196 004c 574B     		ldr	r3, .L993+4
 25197 004e 1B68     		ldr	r3, [r3]
 25198 0050 1846     		mov	r0, r3
 25199 0052 FFF7FEFF 		bl	__aeabi_i2f
 25200 0056 0346     		mov	r3, r0
 25201 0058 7968     		ldr	r1, [r7, #4]	@ float
 25202 005a 1846     		mov	r0, r3
 25203 005c FFF7FEFF 		bl	__aeabi_fdiv
 25204 0060 0346     		mov	r3, r0
 25205 0062 1846     		mov	r0, r3
 25206 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25207 0068 0246     		mov	r2, r0
 25208 006a 504B     		ldr	r3, .L993+4
 25209 006c 1A60     		str	r2, [r3]
3672:..\src/command_processing.c **** 
3673:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25210              		.loc 1 3673 0
 25211 006e 4F4B     		ldr	r3, .L993+4
 25212 0070 1B68     		ldr	r3, [r3]
 25213 0072 1846     		mov	r0, r3
 25214 0074 FFF7FEFF 		bl	__aeabi_i2f
 25215 0078 4B4B     		ldr	r3, .L993
 25216 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25217 007e 1946     		mov	r1, r3
 25218 0080 4B4A     		ldr	r2, .L993+8
 25219 0082 0B46     		mov	r3, r1
 25220 0084 5B00     		lsls	r3, r3, #1
 25221 0086 0B44     		add	r3, r3, r1
 25222 0088 1B01     		lsls	r3, r3, #4
 25223 008a 1344     		add	r3, r3, r2
 25224 008c 03F5D273 		add	r3, r3, #420
 25225 0090 1B68     		ldr	r3, [r3]	@ float
 25226 0092 1946     		mov	r1, r3
 25227 0094 FFF7FEFF 		bl	__aeabi_fmul
 25228 0098 0346     		mov	r3, r0
 25229 009a 1846     		mov	r0, r3
 25230 009c FFF7FEFF 		bl	__aeabi_f2iz
 25231 00a0 0246     		mov	r2, r0
 25232 00a2 424B     		ldr	r3, .L993+4
 25233 00a4 1A60     		str	r2, [r3]
3674:..\src/command_processing.c **** 
3675:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25234              		.loc 1 3675 0
 25235 00a6 414B     		ldr	r3, .L993+4
 25236 00a8 1B68     		ldr	r3, [r3]
 25237 00aa 1846     		mov	r0, r3
 25238 00ac 3E4B     		ldr	r3, .L993
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 552


 25239 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25240 00b2 1946     		mov	r1, r3
 25241 00b4 3E4A     		ldr	r2, .L993+8
 25242 00b6 0B46     		mov	r3, r1
 25243 00b8 5B00     		lsls	r3, r3, #1
 25244 00ba 0B44     		add	r3, r3, r1
 25245 00bc 1B01     		lsls	r3, r3, #4
 25246 00be 1344     		add	r3, r3, r2
 25247 00c0 03F5CC73 		add	r3, r3, #408
 25248 00c4 1B68     		ldr	r3, [r3]
 25249 00c6 1A46     		mov	r2, r3
 25250 00c8 BB68     		ldr	r3, [r7, #8]
 25251 00ca D31A     		subs	r3, r2, r3
 25252 00cc 0344     		add	r3, r3, r0
 25253 00ce 1A46     		mov	r2, r3
 25254 00d0 364B     		ldr	r3, .L993+4
 25255 00d2 1A60     		str	r2, [r3]
3676:..\src/command_processing.c ****         
3677:..\src/command_processing.c ****         // Check position Limits
3678:..\src/command_processing.c **** 
3679:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25256              		.loc 1 3679 0
 25257 00d4 344B     		ldr	r3, .L993
 25258 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25259 00da 002B     		cmp	r3, #0
 25260 00dc 17D0     		beq	.L983
3680:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25261              		.loc 1 3680 0
 25262 00de 334B     		ldr	r3, .L993+4
 25263 00e0 1A68     		ldr	r2, [r3]
 25264 00e2 314B     		ldr	r3, .L993
 25265 00e4 D3F8E430 		ldr	r3, [r3, #228]
 25266 00e8 9A42     		cmp	r2, r3
 25267 00ea 04DA     		bge	.L984
3681:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 25268              		.loc 1 3681 0
 25269 00ec 2E4B     		ldr	r3, .L993
 25270 00ee D3F8E430 		ldr	r3, [r3, #228]
 25271 00f2 2E4A     		ldr	r2, .L993+4
 25272 00f4 1360     		str	r3, [r2]
 25273              	.L984:
3682:..\src/command_processing.c **** 
3683:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25274              		.loc 1 3683 0
 25275 00f6 2D4B     		ldr	r3, .L993+4
 25276 00f8 1A68     		ldr	r2, [r3]
 25277 00fa 2B4B     		ldr	r3, .L993
 25278 00fc D3F8E830 		ldr	r3, [r3, #232]
 25279 0100 9A42     		cmp	r2, r3
 25280 0102 04DD     		ble	.L983
3684:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25281              		.loc 1 3684 0
 25282 0104 284B     		ldr	r3, .L993
 25283 0106 D3F8E830 		ldr	r3, [r3, #232]
 25284 010a 284A     		ldr	r2, .L993+4
 25285 010c 1360     		str	r3, [r2]
 25286              	.L983:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 553


3685:..\src/command_processing.c ****         }
3686:..\src/command_processing.c ****     }
3687:..\src/command_processing.c ****     
3688:..\src/command_processing.c ****     // If SD is used, create new param and data file
3689:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25287              		.loc 1 3689 0
 25288 010e 264B     		ldr	r3, .L993
 25289 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 25290 0114 012B     		cmp	r3, #1
 25291 0116 06D1     		bne	.L985
3690:..\src/command_processing.c ****         FS_FClose(pFile);
 25292              		.loc 1 3690 0
 25293 0118 264B     		ldr	r3, .L993+12
 25294 011a 1B68     		ldr	r3, [r3]
 25295 011c 1846     		mov	r0, r3
 25296 011e FFF7FEFF 		bl	FS_FClose
3691:..\src/command_processing.c ****         
3692:..\src/command_processing.c ****         InitSD_FS();
 25297              		.loc 1 3692 0
 25298 0122 FFF7FEFF 		bl	InitSD_FS
 25299              	.L985:
3693:..\src/command_processing.c ****     }
3694:..\src/command_processing.c ****    
3695:..\src/command_processing.c ****     // Store params 
3696:..\src/command_processing.c **** 
3697:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25300              		.loc 1 3697 0
 25301 0126 204B     		ldr	r3, .L993
 25302 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25303 012c 204B     		ldr	r3, .L993+8
 25304 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25305 0132 9A42     		cmp	r2, r3
 25306 0134 21D0     		beq	.L986
3698:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25307              		.loc 1 3698 0
 25308 0136 1C4B     		ldr	r3, .L993
 25309 0138 93F8A030 		ldrb	r3, [r3, #160]
 25310 013c FB70     		strb	r3, [r7, #3]
3699:..\src/command_processing.c ****         if(memStore(0)) {
 25311              		.loc 1 3699 0
 25312 013e 0020     		movs	r0, #0
 25313 0140 FFF7FEFF 		bl	memStore
 25314 0144 0346     		mov	r3, r0
 25315 0146 002B     		cmp	r3, #0
 25316 0148 0BD0     		beq	.L987
3700:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25317              		.loc 1 3700 0
 25318 014a 0123     		movs	r3, #1
 25319 014c 3B70     		strb	r3, [r7]
3701:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25320              		.loc 1 3701 0
 25321 014e 0123     		movs	r3, #1
 25322 0150 7B70     		strb	r3, [r7, #1]
3702:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25323              		.loc 1 3702 0
 25324 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25325 0154 99B2     		uxth	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 554


 25326 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25327 0158 3B46     		mov	r3, r7
 25328 015a 1846     		mov	r0, r3
 25329 015c FFF7FEFF 		bl	commWrite_old_id
 25330 0160 18E0     		b	.L989
 25331              	.L987:
3703:..\src/command_processing.c ****         }    
3704:..\src/command_processing.c ****         else{
3705:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25332              		.loc 1 3705 0
 25333 0162 0023     		movs	r3, #0
 25334 0164 3B70     		strb	r3, [r7]
3706:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25335              		.loc 1 3706 0
 25336 0166 0023     		movs	r3, #0
 25337 0168 7B70     		strb	r3, [r7, #1]
3707:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25338              		.loc 1 3707 0
 25339 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25340 016c 99B2     		uxth	r1, r3
 25341 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25342 0170 3B46     		mov	r3, r7
 25343 0172 1846     		mov	r0, r3
 25344 0174 FFF7FEFF 		bl	commWrite_old_id
 25345 0178 0CE0     		b	.L989
 25346              	.L986:
3708:..\src/command_processing.c ****         }
3709:..\src/command_processing.c ****     }    
3710:..\src/command_processing.c ****     else {
3711:..\src/command_processing.c ****         if(memStore(0))
 25347              		.loc 1 3711 0
 25348 017a 0020     		movs	r0, #0
 25349 017c FFF7FEFF 		bl	memStore
 25350 0180 0346     		mov	r3, r0
 25351 0182 002B     		cmp	r3, #0
 25352 0184 03D0     		beq	.L990
3712:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25353              		.loc 1 3712 0
 25354 0186 0120     		movs	r0, #1
 25355 0188 FFF7FEFF 		bl	sendAcknowledgment
 25356 018c 02E0     		b	.L989
 25357              	.L990:
3713:..\src/command_processing.c ****         else
3714:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25358              		.loc 1 3714 0
 25359 018e 0020     		movs	r0, #0
 25360 0190 FFF7FEFF 		bl	sendAcknowledgment
 25361              	.L989:
3715:..\src/command_processing.c ****     }
3716:..\src/command_processing.c ****     
3717:..\src/command_processing.c ****     // FW reset (if necessary)
3718:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25362              		.loc 1 3718 0
 25363 0194 084B     		ldr	r3, .L993+16
 25364 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25365 0198 012B     		cmp	r3, #1
 25366 019a 01D1     		bne	.L992
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 555


3719:..\src/command_processing.c ****         CySoftwareReset();
 25367              		.loc 1 3719 0
 25368 019c FFF7FEFF 		bl	CySoftwareReset
 25369              	.L992:
3720:..\src/command_processing.c ****     }
3721:..\src/command_processing.c **** }
 25370              		.loc 1 3721 0
 25371 01a0 00BF     		nop
 25372 01a2 1037     		adds	r7, r7, #16
 25373              		.cfi_def_cfa_offset 8
 25374 01a4 BD46     		mov	sp, r7
 25375              		.cfi_def_cfa_register 13
 25376              		@ sp needed
 25377 01a6 80BD     		pop	{r7, pc}
 25378              	.L994:
 25379              		.align	2
 25380              	.L993:
 25381 01a8 00000000 		.word	c_mem
 25382 01ac 00000000 		.word	g_refNew
 25383 01b0 00000000 		.word	g_mem
 25384 01b4 00000000 		.word	pFile
 25385 01b8 00000000 		.word	reset_PSoC_flag
 25386              		.cfi_endproc
 25387              	.LFE105:
 25388              		.size	cmd_store_params, .-cmd_store_params
 25389              		.section	.text.cmd_get_emg,"ax",%progbits
 25390              		.align	2
 25391              		.global	cmd_get_emg
 25392              		.thumb
 25393              		.thumb_func
 25394              		.type	cmd_get_emg, %function
 25395              	cmd_get_emg:
 25396              	.LFB106:
3722:..\src/command_processing.c **** 
3723:..\src/command_processing.c **** void cmd_get_emg(){
 25397              		.loc 1 3723 0
 25398              		.cfi_startproc
 25399              		@ args = 0, pretend = 0, frame = 16
 25400              		@ frame_needed = 1, uses_anonymous_args = 0
 25401 0000 80B5     		push	{r7, lr}
 25402              		.cfi_def_cfa_offset 8
 25403              		.cfi_offset 7, -8
 25404              		.cfi_offset 14, -4
 25405 0002 84B0     		sub	sp, sp, #16
 25406              		.cfi_def_cfa_offset 24
 25407 0004 00AF     		add	r7, sp, #0
 25408              		.cfi_def_cfa_register 7
3724:..\src/command_processing.c ****     
3725:..\src/command_processing.c ****     uint8 packet_data[6];
3726:..\src/command_processing.c ****     int16 aux_int16;
3727:..\src/command_processing.c ****     
3728:..\src/command_processing.c ****     // Header        
3729:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25409              		.loc 1 3729 0
 25410 0006 8823     		movs	r3, #136
 25411 0008 3B72     		strb	r3, [r7, #8]
3730:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 556


3731:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25412              		.loc 1 3731 0
 25413 000a 144B     		ldr	r3, .L996
 25414 000c 1B68     		ldr	r3, [r3]
 25415 000e 1BB2     		sxth	r3, r3
 25416 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3732:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25417              		.loc 1 3732 0
 25418 0012 BB1D     		adds	r3, r7, #6
 25419 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25420 0016 BB72     		strb	r3, [r7, #10]
3733:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25421              		.loc 1 3733 0
 25422 0018 BB1D     		adds	r3, r7, #6
 25423 001a 0133     		adds	r3, r3, #1
 25424 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25425 001e 7B72     		strb	r3, [r7, #9]
3734:..\src/command_processing.c ****     
3735:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 25426              		.loc 1 3735 0
 25427 0020 0E4B     		ldr	r3, .L996
 25428 0022 5B68     		ldr	r3, [r3, #4]
 25429 0024 1BB2     		sxth	r3, r3
 25430 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3736:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25431              		.loc 1 3736 0
 25432 0028 BB1D     		adds	r3, r7, #6
 25433 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25434 002c 3B73     		strb	r3, [r7, #12]
3737:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25435              		.loc 1 3737 0
 25436 002e BB1D     		adds	r3, r7, #6
 25437 0030 0133     		adds	r3, r3, #1
 25438 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25439 0034 FB72     		strb	r3, [r7, #11]
3738:..\src/command_processing.c **** 
3739:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25440              		.loc 1 3739 0
 25441 0036 07F10803 		add	r3, r7, #8
 25442 003a 0521     		movs	r1, #5
 25443 003c 1846     		mov	r0, r3
 25444 003e FFF7FEFF 		bl	LCRChecksum
 25445 0042 0346     		mov	r3, r0
 25446 0044 7B73     		strb	r3, [r7, #13]
3740:..\src/command_processing.c **** 
3741:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25447              		.loc 1 3741 0
 25448 0046 07F10803 		add	r3, r7, #8
 25449 004a 0621     		movs	r1, #6
 25450 004c 1846     		mov	r0, r3
 25451 004e FFF7FEFF 		bl	commWrite
3742:..\src/command_processing.c **** 
3743:..\src/command_processing.c **** }
 25452              		.loc 1 3743 0
 25453 0052 00BF     		nop
 25454 0054 1037     		adds	r7, r7, #16
 25455              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 557


 25456 0056 BD46     		mov	sp, r7
 25457              		.cfi_def_cfa_register 13
 25458              		@ sp needed
 25459 0058 80BD     		pop	{r7, pc}
 25460              	.L997:
 25461 005a 00BF     		.align	2
 25462              	.L996:
 25463 005c 00000000 		.word	g_adc_measOld
 25464              		.cfi_endproc
 25465              	.LFE106:
 25466              		.size	cmd_get_emg, .-cmd_get_emg
 25467              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 25468              		.align	2
 25469              		.global	cmd_get_imu_readings
 25470              		.thumb
 25471              		.thumb_func
 25472              		.type	cmd_get_imu_readings, %function
 25473              	cmd_get_imu_readings:
 25474              	.LFB107:
3744:..\src/command_processing.c **** 
3745:..\src/command_processing.c **** void cmd_get_imu_readings(){
 25475              		.loc 1 3745 0
 25476              		.cfi_startproc
 25477              		@ args = 0, pretend = 0, frame = 400
 25478              		@ frame_needed = 1, uses_anonymous_args = 0
 25479 0000 90B5     		push	{r4, r7, lr}
 25480              		.cfi_def_cfa_offset 12
 25481              		.cfi_offset 4, -12
 25482              		.cfi_offset 7, -8
 25483              		.cfi_offset 14, -4
 25484 0002 E5B0     		sub	sp, sp, #404
 25485              		.cfi_def_cfa_offset 416
 25486 0004 00AF     		add	r7, sp, #0
 25487              		.cfi_def_cfa_register 7
3746:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3747:..\src/command_processing.c ****     
3748:..\src/command_processing.c ****     uint8 k_imu;
3749:..\src/command_processing.c ****     uint16 c = 1;
 25488              		.loc 1 3749 0
 25489 0006 0123     		movs	r3, #1
 25490 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3750:..\src/command_processing.c ****     uint8 k = 0;
 25491              		.loc 1 3750 0
 25492 000c 0023     		movs	r3, #0
 25493 000e 87F88B31 		strb	r3, [r7, #395]
3751:..\src/command_processing.c ****     uint16 gl_c = 1;
 25494              		.loc 1 3751 0
 25495 0012 0123     		movs	r3, #1
 25496 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3752:..\src/command_processing.c ****     int16 aux_int16;
3753:..\src/command_processing.c ****     float aux_float;
3754:..\src/command_processing.c ****     
3755:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3756:..\src/command_processing.c ****     uint8 packet_data[350];
3757:..\src/command_processing.c ****     uint8 single_packet[32];
3758:..\src/command_processing.c ****     
3759:..\src/command_processing.c ****     //Header package 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 558


3760:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 25497              		.loc 1 3760 0
 25498 0018 07F12003 		add	r3, r7, #32
 25499 001c A122     		movs	r2, #161
 25500 001e 1A70     		strb	r2, [r3]
3761:..\src/command_processing.c ****  
3762:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 25501              		.loc 1 3762 0
 25502 0020 0023     		movs	r3, #0
 25503 0022 87F88F31 		strb	r3, [r7, #399]
 25504 0026 82E2     		b	.L999
 25505              	.L1015:
3763:..\src/command_processing.c ****     {	
3764:..\src/command_processing.c ****             
3765:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 25506              		.loc 1 3765 0
 25507 0028 3B46     		mov	r3, r7
 25508 002a 3A22     		movs	r2, #58
 25509 002c 1A70     		strb	r2, [r3]
3766:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 25510              		.loc 1 3766 0
 25511 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25512 0032 DB4A     		ldr	r2, .L1016
 25513 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25514 0036 1946     		mov	r1, r3
 25515 0038 DA4A     		ldr	r2, .L1016+4
 25516 003a 0B46     		mov	r3, r1
 25517 003c 9B00     		lsls	r3, r3, #2
 25518 003e 0B44     		add	r3, r3, r1
 25519 0040 1344     		add	r3, r3, r2
 25520 0042 03F20223 		addw	r3, r3, #514
 25521 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25522 0048 002B     		cmp	r3, #0
 25523 004a 5DD0     		beq	.L1000
3767:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 25524              		.loc 1 3767 0
 25525 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25526 0050 D549     		ldr	r1, .L1016+8
 25527 0052 1346     		mov	r3, r2
 25528 0054 9B00     		lsls	r3, r3, #2
 25529 0056 1344     		add	r3, r3, r2
 25530 0058 DB00     		lsls	r3, r3, #3
 25531 005a 0B44     		add	r3, r3, r1
 25532 005c 0233     		adds	r3, r3, #2
 25533 005e B3F90030 		ldrsh	r3, [r3]
 25534 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3768:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25535              		.loc 1 3768 0
 25536 0066 B7F88C31 		ldrh	r3, [r7, #396]
 25537 006a 0133     		adds	r3, r3, #1
 25538 006c 07F5C372 		add	r2, r7, #390
 25539 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25540 0072 3A46     		mov	r2, r7
 25541 0074 D154     		strb	r1, [r2, r3]
3769:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25542              		.loc 1 3769 0
 25543 0076 B7F88C21 		ldrh	r2, [r7, #396]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 559


 25544 007a 07F5C373 		add	r3, r7, #390
 25545 007e 0133     		adds	r3, r3, #1
 25546 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25547 0082 3B46     		mov	r3, r7
 25548 0084 9954     		strb	r1, [r3, r2]
3770:..\src/command_processing.c **** 
3771:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 25549              		.loc 1 3771 0
 25550 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25551 008a C749     		ldr	r1, .L1016+8
 25552 008c 1346     		mov	r3, r2
 25553 008e 9B00     		lsls	r3, r3, #2
 25554 0090 1344     		add	r3, r3, r2
 25555 0092 DB00     		lsls	r3, r3, #3
 25556 0094 0B44     		add	r3, r3, r1
 25557 0096 0433     		adds	r3, r3, #4
 25558 0098 B3F90030 		ldrsh	r3, [r3]
 25559 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3772:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25560              		.loc 1 3772 0
 25561 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 25562 00a4 0333     		adds	r3, r3, #3
 25563 00a6 07F5C372 		add	r2, r7, #390
 25564 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25565 00ac 3A46     		mov	r2, r7
 25566 00ae D154     		strb	r1, [r2, r3]
3773:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25567              		.loc 1 3773 0
 25568 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 25569 00b4 9A1C     		adds	r2, r3, #2
 25570 00b6 07F5C373 		add	r3, r7, #390
 25571 00ba 0133     		adds	r3, r3, #1
 25572 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25573 00be 3B46     		mov	r3, r7
 25574 00c0 9954     		strb	r1, [r3, r2]
3774:..\src/command_processing.c **** 
3775:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 25575              		.loc 1 3775 0
 25576 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25577 00c6 B849     		ldr	r1, .L1016+8
 25578 00c8 1346     		mov	r3, r2
 25579 00ca 9B00     		lsls	r3, r3, #2
 25580 00cc 1344     		add	r3, r3, r2
 25581 00ce DB00     		lsls	r3, r3, #3
 25582 00d0 0B44     		add	r3, r3, r1
 25583 00d2 0633     		adds	r3, r3, #6
 25584 00d4 B3F90030 		ldrsh	r3, [r3]
 25585 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3776:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25586              		.loc 1 3776 0
 25587 00dc B7F88C31 		ldrh	r3, [r7, #396]
 25588 00e0 0533     		adds	r3, r3, #5
 25589 00e2 07F5C372 		add	r2, r7, #390
 25590 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25591 00e8 3A46     		mov	r2, r7
 25592 00ea D154     		strb	r1, [r2, r3]
3777:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 560


 25593              		.loc 1 3777 0
 25594 00ec B7F88C31 		ldrh	r3, [r7, #396]
 25595 00f0 1A1D     		adds	r2, r3, #4
 25596 00f2 07F5C373 		add	r3, r7, #390
 25597 00f6 0133     		adds	r3, r3, #1
 25598 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25599 00fa 3B46     		mov	r3, r7
 25600 00fc 9954     		strb	r1, [r3, r2]
3778:..\src/command_processing.c **** 
3779:..\src/command_processing.c ****             c = c + 6;
 25601              		.loc 1 3779 0
 25602 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25603 0102 0633     		adds	r3, r3, #6
 25604 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25605              	.L1000:
3780:..\src/command_processing.c ****         }
3781:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 25606              		.loc 1 3781 0
 25607 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25608 010c A44A     		ldr	r2, .L1016
 25609 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25610 0110 1946     		mov	r1, r3
 25611 0112 A44A     		ldr	r2, .L1016+4
 25612 0114 0B46     		mov	r3, r1
 25613 0116 9B00     		lsls	r3, r3, #2
 25614 0118 0B44     		add	r3, r3, r1
 25615 011a 1344     		add	r3, r3, r2
 25616 011c 03F20323 		addw	r3, r3, #515
 25617 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25618 0122 002B     		cmp	r3, #0
 25619 0124 5DD0     		beq	.L1001
3782:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 25620              		.loc 1 3782 0
 25621 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25622 012a 9F49     		ldr	r1, .L1016+8
 25623 012c 1346     		mov	r3, r2
 25624 012e 9B00     		lsls	r3, r3, #2
 25625 0130 1344     		add	r3, r3, r2
 25626 0132 DB00     		lsls	r3, r3, #3
 25627 0134 0B44     		add	r3, r3, r1
 25628 0136 0833     		adds	r3, r3, #8
 25629 0138 B3F90030 		ldrsh	r3, [r3]
 25630 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3783:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25631              		.loc 1 3783 0
 25632 0140 B7F88C31 		ldrh	r3, [r7, #396]
 25633 0144 0133     		adds	r3, r3, #1
 25634 0146 07F5C372 		add	r2, r7, #390
 25635 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25636 014c 3A46     		mov	r2, r7
 25637 014e D154     		strb	r1, [r2, r3]
3784:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25638              		.loc 1 3784 0
 25639 0150 B7F88C21 		ldrh	r2, [r7, #396]
 25640 0154 07F5C373 		add	r3, r7, #390
 25641 0158 0133     		adds	r3, r3, #1
 25642 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 561


 25643 015c 3B46     		mov	r3, r7
 25644 015e 9954     		strb	r1, [r3, r2]
3785:..\src/command_processing.c **** 
3786:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 25645              		.loc 1 3786 0
 25646 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25647 0164 9049     		ldr	r1, .L1016+8
 25648 0166 1346     		mov	r3, r2
 25649 0168 9B00     		lsls	r3, r3, #2
 25650 016a 1344     		add	r3, r3, r2
 25651 016c DB00     		lsls	r3, r3, #3
 25652 016e 0B44     		add	r3, r3, r1
 25653 0170 0A33     		adds	r3, r3, #10
 25654 0172 B3F90030 		ldrsh	r3, [r3]
 25655 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3787:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25656              		.loc 1 3787 0
 25657 017a B7F88C31 		ldrh	r3, [r7, #396]
 25658 017e 0333     		adds	r3, r3, #3
 25659 0180 07F5C372 		add	r2, r7, #390
 25660 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25661 0186 3A46     		mov	r2, r7
 25662 0188 D154     		strb	r1, [r2, r3]
3788:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25663              		.loc 1 3788 0
 25664 018a B7F88C31 		ldrh	r3, [r7, #396]
 25665 018e 9A1C     		adds	r2, r3, #2
 25666 0190 07F5C373 		add	r3, r7, #390
 25667 0194 0133     		adds	r3, r3, #1
 25668 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25669 0198 3B46     		mov	r3, r7
 25670 019a 9954     		strb	r1, [r3, r2]
3789:..\src/command_processing.c **** 
3790:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 25671              		.loc 1 3790 0
 25672 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25673 01a0 8149     		ldr	r1, .L1016+8
 25674 01a2 1346     		mov	r3, r2
 25675 01a4 9B00     		lsls	r3, r3, #2
 25676 01a6 1344     		add	r3, r3, r2
 25677 01a8 DB00     		lsls	r3, r3, #3
 25678 01aa 0B44     		add	r3, r3, r1
 25679 01ac 0C33     		adds	r3, r3, #12
 25680 01ae B3F90030 		ldrsh	r3, [r3]
 25681 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3791:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25682              		.loc 1 3791 0
 25683 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 25684 01ba 0533     		adds	r3, r3, #5
 25685 01bc 07F5C372 		add	r2, r7, #390
 25686 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25687 01c2 3A46     		mov	r2, r7
 25688 01c4 D154     		strb	r1, [r2, r3]
3792:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25689              		.loc 1 3792 0
 25690 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 25691 01ca 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 562


 25692 01cc 07F5C373 		add	r3, r7, #390
 25693 01d0 0133     		adds	r3, r3, #1
 25694 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25695 01d4 3B46     		mov	r3, r7
 25696 01d6 9954     		strb	r1, [r3, r2]
3793:..\src/command_processing.c **** 
3794:..\src/command_processing.c ****             c = c + 6;
 25697              		.loc 1 3794 0
 25698 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25699 01dc 0633     		adds	r3, r3, #6
 25700 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25701              	.L1001:
3795:..\src/command_processing.c ****         }
3796:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 25702              		.loc 1 3796 0
 25703 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25704 01e6 6E4A     		ldr	r2, .L1016
 25705 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25706 01ea 1946     		mov	r1, r3
 25707 01ec 6D4A     		ldr	r2, .L1016+4
 25708 01ee 0B46     		mov	r3, r1
 25709 01f0 9B00     		lsls	r3, r3, #2
 25710 01f2 0B44     		add	r3, r3, r1
 25711 01f4 1344     		add	r3, r3, r2
 25712 01f6 03F50173 		add	r3, r3, #516
 25713 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25714 01fc 002B     		cmp	r3, #0
 25715 01fe 5DD0     		beq	.L1002
3797:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 25716              		.loc 1 3797 0
 25717 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25718 0204 6849     		ldr	r1, .L1016+8
 25719 0206 1346     		mov	r3, r2
 25720 0208 9B00     		lsls	r3, r3, #2
 25721 020a 1344     		add	r3, r3, r2
 25722 020c DB00     		lsls	r3, r3, #3
 25723 020e 0B44     		add	r3, r3, r1
 25724 0210 0E33     		adds	r3, r3, #14
 25725 0212 B3F90030 		ldrsh	r3, [r3]
 25726 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3798:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25727              		.loc 1 3798 0
 25728 021a B7F88C31 		ldrh	r3, [r7, #396]
 25729 021e 0133     		adds	r3, r3, #1
 25730 0220 07F5C372 		add	r2, r7, #390
 25731 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25732 0226 3A46     		mov	r2, r7
 25733 0228 D154     		strb	r1, [r2, r3]
3799:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25734              		.loc 1 3799 0
 25735 022a B7F88C21 		ldrh	r2, [r7, #396]
 25736 022e 07F5C373 		add	r3, r7, #390
 25737 0232 0133     		adds	r3, r3, #1
 25738 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25739 0236 3B46     		mov	r3, r7
 25740 0238 9954     		strb	r1, [r3, r2]
3800:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 563


3801:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 25741              		.loc 1 3801 0
 25742 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25743 023e 5A49     		ldr	r1, .L1016+8
 25744 0240 1346     		mov	r3, r2
 25745 0242 9B00     		lsls	r3, r3, #2
 25746 0244 1344     		add	r3, r3, r2
 25747 0246 DB00     		lsls	r3, r3, #3
 25748 0248 0B44     		add	r3, r3, r1
 25749 024a 1033     		adds	r3, r3, #16
 25750 024c B3F90030 		ldrsh	r3, [r3]
 25751 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3802:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25752              		.loc 1 3802 0
 25753 0254 B7F88C31 		ldrh	r3, [r7, #396]
 25754 0258 0333     		adds	r3, r3, #3
 25755 025a 07F5C372 		add	r2, r7, #390
 25756 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25757 0260 3A46     		mov	r2, r7
 25758 0262 D154     		strb	r1, [r2, r3]
3803:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25759              		.loc 1 3803 0
 25760 0264 B7F88C31 		ldrh	r3, [r7, #396]
 25761 0268 9A1C     		adds	r2, r3, #2
 25762 026a 07F5C373 		add	r3, r7, #390
 25763 026e 0133     		adds	r3, r3, #1
 25764 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25765 0272 3B46     		mov	r3, r7
 25766 0274 9954     		strb	r1, [r3, r2]
3804:..\src/command_processing.c **** 
3805:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 25767              		.loc 1 3805 0
 25768 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25769 027a 4B49     		ldr	r1, .L1016+8
 25770 027c 1346     		mov	r3, r2
 25771 027e 9B00     		lsls	r3, r3, #2
 25772 0280 1344     		add	r3, r3, r2
 25773 0282 DB00     		lsls	r3, r3, #3
 25774 0284 0B44     		add	r3, r3, r1
 25775 0286 1233     		adds	r3, r3, #18
 25776 0288 B3F90030 		ldrsh	r3, [r3]
 25777 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3806:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25778              		.loc 1 3806 0
 25779 0290 B7F88C31 		ldrh	r3, [r7, #396]
 25780 0294 0533     		adds	r3, r3, #5
 25781 0296 07F5C372 		add	r2, r7, #390
 25782 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25783 029c 3A46     		mov	r2, r7
 25784 029e D154     		strb	r1, [r2, r3]
3807:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25785              		.loc 1 3807 0
 25786 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 25787 02a4 1A1D     		adds	r2, r3, #4
 25788 02a6 07F5C373 		add	r3, r7, #390
 25789 02aa 0133     		adds	r3, r3, #1
 25790 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 564


 25791 02ae 3B46     		mov	r3, r7
 25792 02b0 9954     		strb	r1, [r3, r2]
3808:..\src/command_processing.c **** 
3809:..\src/command_processing.c ****             c = c + 6;
 25793              		.loc 1 3809 0
 25794 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25795 02b6 0633     		adds	r3, r3, #6
 25796 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25797              	.L1002:
3810:..\src/command_processing.c ****         }
3811:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 25798              		.loc 1 3811 0
 25799 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25800 02c0 374A     		ldr	r2, .L1016
 25801 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25802 02c4 1946     		mov	r1, r3
 25803 02c6 374A     		ldr	r2, .L1016+4
 25804 02c8 0B46     		mov	r3, r1
 25805 02ca 9B00     		lsls	r3, r3, #2
 25806 02cc 0B44     		add	r3, r3, r1
 25807 02ce 1344     		add	r3, r3, r2
 25808 02d0 03F20523 		addw	r3, r3, #517
 25809 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25810 02d6 002B     		cmp	r3, #0
 25811 02d8 00F0AF80 		beq	.L1003
3812:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 25812              		.loc 1 3812 0
 25813 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25814 02e0 3149     		ldr	r1, .L1016+8
 25815 02e2 1346     		mov	r3, r2
 25816 02e4 9B00     		lsls	r3, r3, #2
 25817 02e6 1344     		add	r3, r3, r2
 25818 02e8 DB00     		lsls	r3, r3, #3
 25819 02ea 0B44     		add	r3, r3, r1
 25820 02ec 1433     		adds	r3, r3, #20
 25821 02ee 1B68     		ldr	r3, [r3]	@ float
 25822 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3813:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25823              		.loc 1 3813 0
 25824 02f4 0023     		movs	r3, #0
 25825 02f6 87F88B31 		strb	r3, [r7, #395]
 25826 02fa 13E0     		b	.L1004
 25827              	.L1005:
3814:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 25828              		.loc 1 3814 0 discriminator 3
 25829 02fc B7F88C31 		ldrh	r3, [r7, #396]
 25830 0300 1A1D     		adds	r2, r3, #4
 25831 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25832 0306 D31A     		subs	r3, r2, r3
 25833 0308 013B     		subs	r3, r3, #1
 25834 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25835 030e 07F5C071 		add	r1, r7, #384
 25836 0312 0A44     		add	r2, r2, r1
 25837 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25838 0316 3A46     		mov	r2, r7
 25839 0318 D154     		strb	r1, [r2, r3]
3813:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 565


 25840              		.loc 1 3813 0 discriminator 3
 25841 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25842 031e 0133     		adds	r3, r3, #1
 25843 0320 87F88B31 		strb	r3, [r7, #395]
 25844              	.L1004:
3813:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25845              		.loc 1 3813 0 is_stmt 0 discriminator 1
 25846 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25847 0328 032B     		cmp	r3, #3
 25848 032a E7D9     		bls	.L1005
3815:..\src/command_processing.c ****             }
3816:..\src/command_processing.c **** 
3817:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 25849              		.loc 1 3817 0 is_stmt 1
 25850 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25851 0330 1D49     		ldr	r1, .L1016+8
 25852 0332 1346     		mov	r3, r2
 25853 0334 9B00     		lsls	r3, r3, #2
 25854 0336 1344     		add	r3, r3, r2
 25855 0338 DB00     		lsls	r3, r3, #3
 25856 033a 0B44     		add	r3, r3, r1
 25857 033c 1833     		adds	r3, r3, #24
 25858 033e 1B68     		ldr	r3, [r3]	@ float
 25859 0340 C7F88031 		str	r3, [r7, #384]	@ float
3818:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25860              		.loc 1 3818 0
 25861 0344 0023     		movs	r3, #0
 25862 0346 87F88B31 		strb	r3, [r7, #395]
 25863 034a 14E0     		b	.L1006
 25864              	.L1007:
3819:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 25865              		.loc 1 3819 0 discriminator 3
 25866 034c B7F88C31 		ldrh	r3, [r7, #396]
 25867 0350 03F10802 		add	r2, r3, #8
 25868 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25869 0358 D31A     		subs	r3, r2, r3
 25870 035a 013B     		subs	r3, r3, #1
 25871 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25872 0360 07F5C071 		add	r1, r7, #384
 25873 0364 0A44     		add	r2, r2, r1
 25874 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25875 0368 3A46     		mov	r2, r7
 25876 036a D154     		strb	r1, [r2, r3]
3818:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25877              		.loc 1 3818 0 discriminator 3
 25878 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25879 0370 0133     		adds	r3, r3, #1
 25880 0372 87F88B31 		strb	r3, [r7, #395]
 25881              	.L1006:
3818:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25882              		.loc 1 3818 0 is_stmt 0 discriminator 1
 25883 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25884 037a 032B     		cmp	r3, #3
 25885 037c E6D9     		bls	.L1007
3820:..\src/command_processing.c ****             }
3821:..\src/command_processing.c **** 
3822:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 566


 25886              		.loc 1 3822 0 is_stmt 1
 25887 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25888 0382 0949     		ldr	r1, .L1016+8
 25889 0384 1346     		mov	r3, r2
 25890 0386 9B00     		lsls	r3, r3, #2
 25891 0388 1344     		add	r3, r3, r2
 25892 038a DB00     		lsls	r3, r3, #3
 25893 038c 0B44     		add	r3, r3, r1
 25894 038e 1C33     		adds	r3, r3, #28
 25895 0390 1B68     		ldr	r3, [r3]	@ float
 25896 0392 C7F88031 		str	r3, [r7, #384]	@ float
3823:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25897              		.loc 1 3823 0
 25898 0396 0023     		movs	r3, #0
 25899 0398 87F88B31 		strb	r3, [r7, #395]
 25900 039c 1BE0     		b	.L1008
 25901              	.L1017:
 25902 039e 00BF     		.align	2
 25903              	.L1016:
 25904 03a0 00000000 		.word	IMU_connected
 25905 03a4 00000000 		.word	c_mem
 25906 03a8 00000000 		.word	g_imu
 25907              	.L1009:
3824:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 25908              		.loc 1 3824 0 discriminator 3
 25909 03ac B7F88C31 		ldrh	r3, [r7, #396]
 25910 03b0 03F10C02 		add	r2, r3, #12
 25911 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25912 03b8 D31A     		subs	r3, r2, r3
 25913 03ba 013B     		subs	r3, r3, #1
 25914 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25915 03c0 07F5C071 		add	r1, r7, #384
 25916 03c4 0A44     		add	r2, r2, r1
 25917 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25918 03c8 3A46     		mov	r2, r7
 25919 03ca D154     		strb	r1, [r2, r3]
3823:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25920              		.loc 1 3823 0 discriminator 3
 25921 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25922 03d0 0133     		adds	r3, r3, #1
 25923 03d2 87F88B31 		strb	r3, [r7, #395]
 25924              	.L1008:
3823:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25925              		.loc 1 3823 0 is_stmt 0 discriminator 1
 25926 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25927 03da 032B     		cmp	r3, #3
 25928 03dc E6D9     		bls	.L1009
3825:..\src/command_processing.c ****             }
3826:..\src/command_processing.c **** 
3827:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 25929              		.loc 1 3827 0 is_stmt 1
 25930 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25931 03e2 6749     		ldr	r1, .L1018
 25932 03e4 1346     		mov	r3, r2
 25933 03e6 9B00     		lsls	r3, r3, #2
 25934 03e8 1344     		add	r3, r3, r2
 25935 03ea DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 567


 25936 03ec 0B44     		add	r3, r3, r1
 25937 03ee 2033     		adds	r3, r3, #32
 25938 03f0 1B68     		ldr	r3, [r3]	@ float
 25939 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3828:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25940              		.loc 1 3828 0
 25941 03f6 0023     		movs	r3, #0
 25942 03f8 87F88B31 		strb	r3, [r7, #395]
 25943 03fc 14E0     		b	.L1010
 25944              	.L1011:
3829:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 25945              		.loc 1 3829 0 discriminator 3
 25946 03fe B7F88C31 		ldrh	r3, [r7, #396]
 25947 0402 03F11002 		add	r2, r3, #16
 25948 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25949 040a D31A     		subs	r3, r2, r3
 25950 040c 013B     		subs	r3, r3, #1
 25951 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25952 0412 07F5C071 		add	r1, r7, #384
 25953 0416 0A44     		add	r2, r2, r1
 25954 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25955 041a 3A46     		mov	r2, r7
 25956 041c D154     		strb	r1, [r2, r3]
3828:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25957              		.loc 1 3828 0 discriminator 3
 25958 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25959 0422 0133     		adds	r3, r3, #1
 25960 0424 87F88B31 		strb	r3, [r7, #395]
 25961              	.L1010:
3828:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25962              		.loc 1 3828 0 is_stmt 0 discriminator 1
 25963 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25964 042c 032B     		cmp	r3, #3
 25965 042e E6D9     		bls	.L1011
3830:..\src/command_processing.c ****             }
3831:..\src/command_processing.c ****             c = c + 16;
 25966              		.loc 1 3831 0 is_stmt 1
 25967 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25968 0434 1033     		adds	r3, r3, #16
 25969 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25970              	.L1003:
3832:..\src/command_processing.c ****         }
3833:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 25971              		.loc 1 3833 0
 25972 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25973 043e 514A     		ldr	r2, .L1018+4
 25974 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25975 0442 1946     		mov	r1, r3
 25976 0444 504A     		ldr	r2, .L1018+8
 25977 0446 0B46     		mov	r3, r1
 25978 0448 9B00     		lsls	r3, r3, #2
 25979 044a 0B44     		add	r3, r3, r1
 25980 044c 1344     		add	r3, r3, r2
 25981 044e 03F20623 		addw	r3, r3, #518
 25982 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25983 0454 002B     		cmp	r3, #0
 25984 0456 21D0     		beq	.L1012
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 568


3834:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 25985              		.loc 1 3834 0
 25986 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25987 045c 4849     		ldr	r1, .L1018
 25988 045e 1346     		mov	r3, r2
 25989 0460 9B00     		lsls	r3, r3, #2
 25990 0462 1344     		add	r3, r3, r2
 25991 0464 DB00     		lsls	r3, r3, #3
 25992 0466 0B44     		add	r3, r3, r1
 25993 0468 2433     		adds	r3, r3, #36
 25994 046a B3F90030 		ldrsh	r3, [r3]
 25995 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3835:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25996              		.loc 1 3835 0
 25997 0472 B7F88C31 		ldrh	r3, [r7, #396]
 25998 0476 0133     		adds	r3, r3, #1
 25999 0478 07F5C372 		add	r2, r7, #390
 26000 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26001 047e 3A46     		mov	r2, r7
 26002 0480 D154     		strb	r1, [r2, r3]
3836:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26003              		.loc 1 3836 0
 26004 0482 B7F88C21 		ldrh	r2, [r7, #396]
 26005 0486 07F5C373 		add	r3, r7, #390
 26006 048a 0133     		adds	r3, r3, #1
 26007 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26008 048e 3B46     		mov	r3, r7
 26009 0490 9954     		strb	r1, [r3, r2]
3837:..\src/command_processing.c ****             c = c + 2;
 26010              		.loc 1 3837 0
 26011 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26012 0496 0233     		adds	r3, r3, #2
 26013 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26014              	.L1012:
3838:..\src/command_processing.c ****         }
3839:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26015              		.loc 1 3839 0
 26016 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26017 04a0 384A     		ldr	r2, .L1018+4
 26018 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26019 04a4 1A46     		mov	r2, r3
 26020 04a6 394B     		ldr	r3, .L1018+12
 26021 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26022 04ac 013B     		subs	r3, r3, #1
 26023 04ae 3A46     		mov	r2, r7
 26024 04b0 3A21     		movs	r1, #58
 26025 04b2 D154     		strb	r1, [r2, r3]
3840:..\src/command_processing.c ****         c = 1;
 26026              		.loc 1 3840 0
 26027 04b4 0123     		movs	r3, #1
 26028 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3841:..\src/command_processing.c ****                
3842:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26029              		.loc 1 3842 0
 26030 04ba 0023     		movs	r3, #0
 26031 04bc 87F88B31 		strb	r3, [r7, #395]
 26032 04c0 10E0     		b	.L1013
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 569


 26033              	.L1014:
3843:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26034              		.loc 1 3843 0 discriminator 3
 26035 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26036 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26037 04ca 1344     		add	r3, r3, r2
 26038 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26039 04d0 3946     		mov	r1, r7
 26040 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26041 04d4 07F12002 		add	r2, r7, #32
 26042 04d8 D154     		strb	r1, [r2, r3]
3842:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26043              		.loc 1 3842 0 discriminator 3
 26044 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26045 04de 0133     		adds	r3, r3, #1
 26046 04e0 87F88B31 		strb	r3, [r7, #395]
 26047              	.L1013:
3842:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26048              		.loc 1 3842 0 is_stmt 0 discriminator 1
 26049 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26050 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26051 04ec 2549     		ldr	r1, .L1018+4
 26052 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 26053 04f0 1946     		mov	r1, r3
 26054 04f2 264B     		ldr	r3, .L1018+12
 26055 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26056 04f8 9A42     		cmp	r2, r3
 26057 04fa E2DB     		blt	.L1014
3844:..\src/command_processing.c ****         }
3845:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26058              		.loc 1 3845 0 is_stmt 1 discriminator 2
 26059 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26060 0500 204A     		ldr	r2, .L1018+4
 26061 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26062 0504 1A46     		mov	r2, r3
 26063 0506 214B     		ldr	r3, .L1018+12
 26064 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26065 050c 9AB2     		uxth	r2, r3
 26066 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 26067 0512 1344     		add	r3, r3, r2
 26068 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3846:..\src/command_processing.c ****         
3847:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26069              		.loc 1 3847 0 discriminator 2
 26070 0518 3B46     		mov	r3, r7
 26071 051a 2022     		movs	r2, #32
 26072 051c 0021     		movs	r1, #0
 26073 051e 1846     		mov	r0, r3
 26074 0520 FFF7FEFF 		bl	memset
3762:..\src/command_processing.c ****     {	
 26075              		.loc 1 3762 0 discriminator 2
 26076 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26077 0528 0133     		adds	r3, r3, #1
 26078 052a 87F88F31 		strb	r3, [r7, #399]
 26079              	.L999:
3762:..\src/command_processing.c ****     {	
 26080              		.loc 1 3762 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 570


 26081 052e 184B     		ldr	r3, .L1018+16
 26082 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26083 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26084 0536 9A42     		cmp	r2, r3
 26085 0538 FFF476AD 		bcc	.L1015
3848:..\src/command_processing.c ****         
3849:..\src/command_processing.c ****     }
3850:..\src/command_processing.c **** 
3851:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3852:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 26086              		.loc 1 3852 0 is_stmt 1
 26087 053c 154B     		ldr	r3, .L1018+20
 26088 053e 1B68     		ldr	r3, [r3]
 26089 0540 5C1E     		subs	r4, r3, #1
 26090 0542 144B     		ldr	r3, .L1018+20
 26091 0544 1B68     		ldr	r3, [r3]
 26092 0546 DBB2     		uxtb	r3, r3
 26093 0548 013B     		subs	r3, r3, #1
 26094 054a DAB2     		uxtb	r2, r3
 26095 054c 07F12003 		add	r3, r7, #32
 26096 0550 1146     		mov	r1, r2
 26097 0552 1846     		mov	r0, r3
 26098 0554 FFF7FEFF 		bl	LCRChecksum
 26099 0558 0346     		mov	r3, r0
 26100 055a 1A46     		mov	r2, r3
 26101 055c 07F12003 		add	r3, r7, #32
 26102 0560 1A55     		strb	r2, [r3, r4]
3853:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 26103              		.loc 1 3853 0
 26104 0562 0C4B     		ldr	r3, .L1018+20
 26105 0564 1B68     		ldr	r3, [r3]
 26106 0566 9AB2     		uxth	r2, r3
 26107 0568 07F12003 		add	r3, r7, #32
 26108 056c 1146     		mov	r1, r2
 26109 056e 1846     		mov	r0, r3
 26110 0570 FFF7FEFF 		bl	commWrite
3854:..\src/command_processing.c **** }
 26111              		.loc 1 3854 0
 26112 0574 00BF     		nop
 26113 0576 07F5CA77 		add	r7, r7, #404
 26114              		.cfi_def_cfa_offset 12
 26115 057a BD46     		mov	sp, r7
 26116              		.cfi_def_cfa_register 13
 26117              		@ sp needed
 26118 057c 90BD     		pop	{r4, r7, pc}
 26119              	.L1019:
 26120 057e 00BF     		.align	2
 26121              	.L1018:
 26122 0580 00000000 		.word	g_imu
 26123 0584 00000000 		.word	IMU_connected
 26124 0588 00000000 		.word	c_mem
 26125 058c 00000000 		.word	single_imu_size
 26126 0590 00000000 		.word	N_IMU_Connected
 26127 0594 00000000 		.word	imus_data_size
 26128              		.cfi_endproc
 26129              	.LFE107:
 26130              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 571


 26131              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26132              		.align	2
 26133              		.global	cmd_get_encoder_map
 26134              		.thumb
 26135              		.thumb_func
 26136              		.type	cmd_get_encoder_map, %function
 26137              	cmd_get_encoder_map:
 26138              	.LFB108:
3855:..\src/command_processing.c **** 
3856:..\src/command_processing.c **** void cmd_get_encoder_map(){
 26139              		.loc 1 3856 0
 26140              		.cfi_startproc
 26141              		@ args = 0, pretend = 0, frame = 16
 26142              		@ frame_needed = 1, uses_anonymous_args = 0
 26143 0000 90B5     		push	{r4, r7, lr}
 26144              		.cfi_def_cfa_offset 12
 26145              		.cfi_offset 4, -12
 26146              		.cfi_offset 7, -8
 26147              		.cfi_offset 14, -4
 26148 0002 85B0     		sub	sp, sp, #20
 26149              		.cfi_def_cfa_offset 32
 26150 0004 00AF     		add	r7, sp, #0
 26151              		.cfi_def_cfa_register 7
3857:..\src/command_processing.c ****     //Retrieve Encoder map
3858:..\src/command_processing.c ****     
3859:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3860:..\src/command_processing.c ****     uint8 CYDATA i, j;
3861:..\src/command_processing.c ****     
3862:..\src/command_processing.c ****     // Header        
3863:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26152              		.loc 1 3863 0
 26153 0006 A323     		movs	r3, #163
 26154 0008 3B70     		strb	r3, [r7]
3864:..\src/command_processing.c ****     
3865:..\src/command_processing.c ****     // Fill payload
3866:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26155              		.loc 1 3866 0
 26156 000a 0223     		movs	r3, #2
 26157 000c 7B70     		strb	r3, [r7, #1]
3867:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26158              		.loc 1 3867 0
 26159 000e 0523     		movs	r3, #5
 26160 0010 BB70     		strb	r3, [r7, #2]
3868:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26161              		.loc 1 3868 0
 26162 0012 0023     		movs	r3, #0
 26163 0014 FB73     		strb	r3, [r7, #15]
 26164 0016 23E0     		b	.L1021
 26165              	.L1024:
3869:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26166              		.loc 1 3869 0
 26167 0018 0023     		movs	r3, #0
 26168 001a BB73     		strb	r3, [r7, #14]
 26169 001c 1AE0     		b	.L1022
 26170              	.L1023:
3870:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26171              		.loc 1 3870 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 572


 26172 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26173 0020 1346     		mov	r3, r2
 26174 0022 9B00     		lsls	r3, r3, #2
 26175 0024 1344     		add	r3, r3, r2
 26176 0026 DA1C     		adds	r2, r3, #3
 26177 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26178 002a D118     		adds	r1, r2, r3
 26179 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26180 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26181 0030 154C     		ldr	r4, .L1025
 26182 0032 1346     		mov	r3, r2
 26183 0034 5B00     		lsls	r3, r3, #1
 26184 0036 1344     		add	r3, r3, r2
 26185 0038 1B01     		lsls	r3, r3, #4
 26186 003a 2344     		add	r3, r3, r4
 26187 003c 0344     		add	r3, r3, r0
 26188 003e 03F5C873 		add	r3, r3, #400
 26189 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26190 0044 07F11003 		add	r3, r7, #16
 26191 0048 0B44     		add	r3, r3, r1
 26192 004a 03F8102C 		strb	r2, [r3, #-16]
3869:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26193              		.loc 1 3869 0 discriminator 3
 26194 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26195 0050 0133     		adds	r3, r3, #1
 26196 0052 BB73     		strb	r3, [r7, #14]
 26197              	.L1022:
3869:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26198              		.loc 1 3869 0 is_stmt 0 discriminator 1
 26199 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26200 0056 042B     		cmp	r3, #4
 26201 0058 E1D9     		bls	.L1023
3868:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26202              		.loc 1 3868 0 is_stmt 1 discriminator 2
 26203 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26204 005c 0133     		adds	r3, r3, #1
 26205 005e FB73     		strb	r3, [r7, #15]
 26206              	.L1021:
3868:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26207              		.loc 1 3868 0 is_stmt 0 discriminator 1
 26208 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26209 0062 012B     		cmp	r3, #1
 26210 0064 D8D9     		bls	.L1024
3871:..\src/command_processing.c ****         }
3872:..\src/command_processing.c ****     }
3873:..\src/command_processing.c ****     
3874:..\src/command_processing.c ****     // Calculate checksum
3875:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26211              		.loc 1 3875 0 is_stmt 1
 26212 0066 3B46     		mov	r3, r7
 26213 0068 0D21     		movs	r1, #13
 26214 006a 1846     		mov	r0, r3
 26215 006c FFF7FEFF 		bl	LCRChecksum
 26216 0070 0346     		mov	r3, r0
 26217 0072 7B73     		strb	r3, [r7, #13]
3876:..\src/command_processing.c ****     
3877:..\src/command_processing.c ****     // Send package to UART
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 573


3878:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26218              		.loc 1 3878 0
 26219 0074 3B46     		mov	r3, r7
 26220 0076 0E21     		movs	r1, #14
 26221 0078 1846     		mov	r0, r3
 26222 007a FFF7FEFF 		bl	commWrite
3879:..\src/command_processing.c **** }
 26223              		.loc 1 3879 0
 26224 007e 00BF     		nop
 26225 0080 1437     		adds	r7, r7, #20
 26226              		.cfi_def_cfa_offset 12
 26227 0082 BD46     		mov	sp, r7
 26228              		.cfi_def_cfa_register 13
 26229              		@ sp needed
 26230 0084 90BD     		pop	{r4, r7, pc}
 26231              	.L1026:
 26232 0086 00BF     		.align	2
 26233              	.L1025:
 26234 0088 00000000 		.word	c_mem
 26235              		.cfi_endproc
 26236              	.LFE108:
 26237              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 26238              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 26239              		.align	2
 26240              		.global	cmd_get_encoder_raw
 26241              		.thumb
 26242              		.thumb_func
 26243              		.type	cmd_get_encoder_raw, %function
 26244              	cmd_get_encoder_raw:
 26245              	.LFB109:
3880:..\src/command_processing.c **** 
3881:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 26246              		.loc 1 3881 0
 26247              		.cfi_startproc
 26248              		@ args = 0, pretend = 0, frame = 32
 26249              		@ frame_needed = 1, uses_anonymous_args = 0
 26250 0000 90B5     		push	{r4, r7, lr}
 26251              		.cfi_def_cfa_offset 12
 26252              		.cfi_offset 4, -12
 26253              		.cfi_offset 7, -8
 26254              		.cfi_offset 14, -4
 26255 0002 89B0     		sub	sp, sp, #36
 26256              		.cfi_def_cfa_offset 48
 26257 0004 00AF     		add	r7, sp, #0
 26258              		.cfi_def_cfa_register 7
3882:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3883:..\src/command_processing.c ****     
3884:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3885:..\src/command_processing.c ****     uint8 i, j, idx;
3886:..\src/command_processing.c ****     uint16 aux_uint16;
3887:..\src/command_processing.c ****     
3888:..\src/command_processing.c ****     //Header package 
3889:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26259              		.loc 1 3889 0
 26260 0006 A423     		movs	r3, #164
 26261 0008 3B71     		strb	r3, [r7, #4]
3890:..\src/command_processing.c ****  
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 574


3891:..\src/command_processing.c ****     // Fill payload
3892:..\src/command_processing.c ****     idx = 0;
 26262              		.loc 1 3892 0
 26263 000a 0023     		movs	r3, #0
 26264 000c 7B77     		strb	r3, [r7, #29]
3893:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26265              		.loc 1 3893 0
 26266 000e 0023     		movs	r3, #0
 26267 0010 FB77     		strb	r3, [r7, #31]
 26268 0012 3FE0     		b	.L1028
 26269              	.L1032:
3894:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26270              		.loc 1 3894 0
 26271 0014 0023     		movs	r3, #0
 26272 0016 BB77     		strb	r3, [r7, #30]
 26273 0018 33E0     		b	.L1029
 26274              	.L1031:
3895:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26275              		.loc 1 3895 0
 26276 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26277 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26278 001e 3048     		ldr	r0, .L1033
 26279 0020 1346     		mov	r3, r2
 26280 0022 5B00     		lsls	r3, r3, #1
 26281 0024 1344     		add	r3, r3, r2
 26282 0026 1B01     		lsls	r3, r3, #4
 26283 0028 0344     		add	r3, r3, r0
 26284 002a 0B44     		add	r3, r3, r1
 26285 002c 03F5C873 		add	r3, r3, #400
 26286 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26287 0032 012B     		cmp	r3, #1
 26288 0034 22D1     		bne	.L1030
3896:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26289              		.loc 1 3896 0
 26290 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26291 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26292 003a 2A48     		ldr	r0, .L1033+4
 26293 003c 1346     		mov	r3, r2
 26294 003e 9B00     		lsls	r3, r3, #2
 26295 0040 1344     		add	r3, r3, r2
 26296 0042 0B44     		add	r3, r3, r1
 26297 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26298 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3897:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26299              		.loc 1 3897 0
 26300 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26301 004c 5B00     		lsls	r3, r3, #1
 26302 004e 0233     		adds	r3, r3, #2
 26303 0050 BA1C     		adds	r2, r7, #2
 26304 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26305 0054 07F12001 		add	r1, r7, #32
 26306 0058 0B44     		add	r3, r3, r1
 26307 005a 03F81C2C 		strb	r2, [r3, #-28]
3898:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26308              		.loc 1 3898 0
 26309 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26310 0060 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 575


 26311 0062 5A1C     		adds	r2, r3, #1
 26312 0064 BB1C     		adds	r3, r7, #2
 26313 0066 0133     		adds	r3, r3, #1
 26314 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26315 006a 07F12003 		add	r3, r7, #32
 26316 006e 1344     		add	r3, r3, r2
 26317 0070 0A46     		mov	r2, r1
 26318 0072 03F81C2C 		strb	r2, [r3, #-28]
3899:..\src/command_processing.c ****                 idx++;
 26319              		.loc 1 3899 0
 26320 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26321 0078 0133     		adds	r3, r3, #1
 26322 007a 7B77     		strb	r3, [r7, #29]
 26323              	.L1030:
3894:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26324              		.loc 1 3894 0 discriminator 2
 26325 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26326 007e 0133     		adds	r3, r3, #1
 26327 0080 BB77     		strb	r3, [r7, #30]
 26328              	.L1029:
3894:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26329              		.loc 1 3894 0 is_stmt 0 discriminator 1
 26330 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26331 0084 184A     		ldr	r2, .L1033+8
 26332 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26333 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26334 008a 9A42     		cmp	r2, r3
 26335 008c C5D3     		bcc	.L1031
3893:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26336              		.loc 1 3893 0 is_stmt 1 discriminator 2
 26337 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26338 0090 0133     		adds	r3, r3, #1
 26339 0092 FB77     		strb	r3, [r7, #31]
 26340              	.L1028:
3893:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26341              		.loc 1 3893 0 is_stmt 0 discriminator 1
 26342 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26343 0096 012B     		cmp	r3, #1
 26344 0098 BCD9     		bls	.L1032
3900:..\src/command_processing.c ****             }
3901:..\src/command_processing.c ****         }
3902:..\src/command_processing.c ****     }
3903:..\src/command_processing.c **** 
3904:..\src/command_processing.c ****     // Calculate checksum
3905:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26345              		.loc 1 3905 0 is_stmt 1
 26346 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26347 009c 5B00     		lsls	r3, r3, #1
 26348 009e 5C1C     		adds	r4, r3, #1
 26349 00a0 7B7F     		ldrb	r3, [r7, #29]
 26350 00a2 5B00     		lsls	r3, r3, #1
 26351 00a4 DBB2     		uxtb	r3, r3
 26352 00a6 0133     		adds	r3, r3, #1
 26353 00a8 DAB2     		uxtb	r2, r3
 26354 00aa 3B1D     		adds	r3, r7, #4
 26355 00ac 1146     		mov	r1, r2
 26356 00ae 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 576


 26357 00b0 FFF7FEFF 		bl	LCRChecksum
 26358 00b4 0346     		mov	r3, r0
 26359 00b6 1A46     		mov	r2, r3
 26360 00b8 07F12003 		add	r3, r7, #32
 26361 00bc 2344     		add	r3, r3, r4
 26362 00be 03F81C2C 		strb	r2, [r3, #-28]
3906:..\src/command_processing.c ****     
3907:..\src/command_processing.c ****     // Send package to UART
3908:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26363              		.loc 1 3908 0
 26364 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26365 00c4 0133     		adds	r3, r3, #1
 26366 00c6 9BB2     		uxth	r3, r3
 26367 00c8 5B00     		lsls	r3, r3, #1
 26368 00ca 9AB2     		uxth	r2, r3
 26369 00cc 3B1D     		adds	r3, r7, #4
 26370 00ce 1146     		mov	r1, r2
 26371 00d0 1846     		mov	r0, r3
 26372 00d2 FFF7FEFF 		bl	commWrite
3909:..\src/command_processing.c **** }
 26373              		.loc 1 3909 0
 26374 00d6 00BF     		nop
 26375 00d8 2437     		adds	r7, r7, #36
 26376              		.cfi_def_cfa_offset 12
 26377 00da BD46     		mov	sp, r7
 26378              		.cfi_def_cfa_register 13
 26379              		@ sp needed
 26380 00dc 90BD     		pop	{r4, r7, pc}
 26381              	.L1034:
 26382 00de 00BF     		.align	2
 26383              	.L1033:
 26384 00e0 00000000 		.word	c_mem
 26385 00e4 00000000 		.word	Encoder_Value
 26386 00e8 00000000 		.word	N_Encoder_Line_Connected
 26387              		.cfi_endproc
 26388              	.LFE109:
 26389              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26390              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26391              		.align	2
 26392              		.global	cmd_get_ADC_map
 26393              		.thumb
 26394              		.thumb_func
 26395              		.type	cmd_get_ADC_map, %function
 26396              	cmd_get_ADC_map:
 26397              	.LFB110:
3910:..\src/command_processing.c **** 
3911:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26398              		.loc 1 3911 0
 26399              		.cfi_startproc
 26400              		@ args = 0, pretend = 0, frame = 16
 26401              		@ frame_needed = 1, uses_anonymous_args = 0
 26402 0000 80B5     		push	{r7, lr}
 26403              		.cfi_def_cfa_offset 8
 26404              		.cfi_offset 7, -8
 26405              		.cfi_offset 14, -4
 26406 0002 84B0     		sub	sp, sp, #16
 26407              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 577


 26408 0004 00AF     		add	r7, sp, #0
 26409              		.cfi_def_cfa_register 7
3912:..\src/command_processing.c ****     //Retrieve Encoder map
3913:..\src/command_processing.c ****     
3914:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3915:..\src/command_processing.c ****     uint8 CYDATA i;
3916:..\src/command_processing.c ****     
3917:..\src/command_processing.c ****     // Header        
3918:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26410              		.loc 1 3918 0
 26411 0006 A523     		movs	r3, #165
 26412 0008 3B70     		strb	r3, [r7]
3919:..\src/command_processing.c ****     
3920:..\src/command_processing.c ****     // Fill payload
3921:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26413              		.loc 1 3921 0
 26414 000a 0C23     		movs	r3, #12
 26415 000c 7B70     		strb	r3, [r7, #1]
3922:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26416              		.loc 1 3922 0
 26417 000e 0023     		movs	r3, #0
 26418 0010 FB73     		strb	r3, [r7, #15]
 26419 0012 0EE0     		b	.L1036
 26420              	.L1037:
3923:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 26421              		.loc 1 3923 0 discriminator 3
 26422 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26423 0016 0233     		adds	r3, r3, #2
 26424 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26425 001a 0F49     		ldr	r1, .L1038
 26426 001c 0A44     		add	r2, r2, r1
 26427 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 26428 0022 07F11001 		add	r1, r7, #16
 26429 0026 0B44     		add	r3, r3, r1
 26430 0028 03F8102C 		strb	r2, [r3, #-16]
3922:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26431              		.loc 1 3922 0 discriminator 3
 26432 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26433 002e 0133     		adds	r3, r3, #1
 26434 0030 FB73     		strb	r3, [r7, #15]
 26435              	.L1036:
3922:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26436              		.loc 1 3922 0 is_stmt 0 discriminator 1
 26437 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26438 0034 0B2B     		cmp	r3, #11
 26439 0036 EDD9     		bls	.L1037
3924:..\src/command_processing.c ****     }
3925:..\src/command_processing.c ****     
3926:..\src/command_processing.c ****     // Calculate checksum
3927:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 26440              		.loc 1 3927 0 is_stmt 1
 26441 0038 3B46     		mov	r3, r7
 26442 003a 0E21     		movs	r1, #14
 26443 003c 1846     		mov	r0, r3
 26444 003e FFF7FEFF 		bl	LCRChecksum
 26445 0042 0346     		mov	r3, r0
 26446 0044 BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 578


3928:..\src/command_processing.c ****     
3929:..\src/command_processing.c ****     // Send package to UART
3930:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 26447              		.loc 1 3930 0
 26448 0046 3B46     		mov	r3, r7
 26449 0048 0F21     		movs	r1, #15
 26450 004a 1846     		mov	r0, r3
 26451 004c FFF7FEFF 		bl	commWrite
3931:..\src/command_processing.c ****     
3932:..\src/command_processing.c **** }
 26452              		.loc 1 3932 0
 26453 0050 00BF     		nop
 26454 0052 1037     		adds	r7, r7, #16
 26455              		.cfi_def_cfa_offset 8
 26456 0054 BD46     		mov	sp, r7
 26457              		.cfi_def_cfa_register 13
 26458              		@ sp needed
 26459 0056 80BD     		pop	{r7, pc}
 26460              	.L1039:
 26461              		.align	2
 26462              	.L1038:
 26463 0058 00000000 		.word	c_mem
 26464              		.cfi_endproc
 26465              	.LFE110:
 26466              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 26467              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 26468              		.align	2
 26469              		.global	cmd_get_ADC_raw
 26470              		.thumb
 26471              		.thumb_func
 26472              		.type	cmd_get_ADC_raw, %function
 26473              	cmd_get_ADC_raw:
 26474              	.LFB111:
3933:..\src/command_processing.c **** 
3934:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 26475              		.loc 1 3934 0
 26476              		.cfi_startproc
 26477              		@ args = 0, pretend = 0, frame = 32
 26478              		@ frame_needed = 1, uses_anonymous_args = 0
 26479 0000 90B5     		push	{r4, r7, lr}
 26480              		.cfi_def_cfa_offset 12
 26481              		.cfi_offset 4, -12
 26482              		.cfi_offset 7, -8
 26483              		.cfi_offset 14, -4
 26484 0002 89B0     		sub	sp, sp, #36
 26485              		.cfi_def_cfa_offset 48
 26486 0004 00AF     		add	r7, sp, #0
 26487              		.cfi_def_cfa_register 7
3935:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3936:..\src/command_processing.c ****     
3937:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3938:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 26488              		.loc 1 3938 0
 26489 0006 0023     		movs	r3, #0
 26490 0008 BB77     		strb	r3, [r7, #30]
3939:..\src/command_processing.c ****     int16 aux_int16;
3940:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 579


3941:..\src/command_processing.c ****     // Header        
3942:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 26491              		.loc 1 3942 0
 26492 000a A623     		movs	r3, #166
 26493 000c 3B71     		strb	r3, [r7, #4]
3943:..\src/command_processing.c ****     
3944:..\src/command_processing.c ****     // Fill payload
3945:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 26494              		.loc 1 3945 0
 26495 000e 0023     		movs	r3, #0
 26496 0010 FB77     		strb	r3, [r7, #31]
 26497 0012 27E0     		b	.L1041
 26498              	.L1043:
3946:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26499              		.loc 1 3946 0
 26500 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26501 0016 274A     		ldr	r2, .L1044
 26502 0018 1344     		add	r3, r3, r2
 26503 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 26504 001e 012B     		cmp	r3, #1
 26505 0020 1DD1     		bne	.L1042
3947:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 26506              		.loc 1 3947 0
 26507 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26508 0024 244A     		ldr	r2, .L1044+4
 26509 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 26510 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3948:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 26511              		.loc 1 3948 0
 26512 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26513 002e 5B00     		lsls	r3, r3, #1
 26514 0030 0233     		adds	r3, r3, #2
 26515 0032 BA1C     		adds	r2, r7, #2
 26516 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26517 0036 07F12001 		add	r1, r7, #32
 26518 003a 0B44     		add	r3, r3, r1
 26519 003c 03F81C2C 		strb	r2, [r3, #-28]
3949:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 26520              		.loc 1 3949 0
 26521 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26522 0042 5B00     		lsls	r3, r3, #1
 26523 0044 5A1C     		adds	r2, r3, #1
 26524 0046 BB1C     		adds	r3, r7, #2
 26525 0048 0133     		adds	r3, r3, #1
 26526 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26527 004c 07F12003 		add	r3, r7, #32
 26528 0050 1344     		add	r3, r3, r2
 26529 0052 0A46     		mov	r2, r1
 26530 0054 03F81C2C 		strb	r2, [r3, #-28]
3950:..\src/command_processing.c ****             idx++;
 26531              		.loc 1 3950 0
 26532 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26533 005a 0133     		adds	r3, r3, #1
 26534 005c BB77     		strb	r3, [r7, #30]
 26535              	.L1042:
3945:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26536              		.loc 1 3945 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 580


 26537 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26538 0060 0133     		adds	r3, r3, #1
 26539 0062 FB77     		strb	r3, [r7, #31]
 26540              	.L1041:
3945:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26541              		.loc 1 3945 0 is_stmt 0 discriminator 1
 26542 0064 154B     		ldr	r3, .L1044+8
 26543 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26544 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26545 006a 9A42     		cmp	r2, r3
 26546 006c D2D3     		bcc	.L1043
3951:..\src/command_processing.c ****         }
3952:..\src/command_processing.c ****     }
3953:..\src/command_processing.c **** 
3954:..\src/command_processing.c ****     // Calculate checksum
3955:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26547              		.loc 1 3955 0 is_stmt 1
 26548 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26549 0070 5B00     		lsls	r3, r3, #1
 26550 0072 5C1C     		adds	r4, r3, #1
 26551 0074 BB7F     		ldrb	r3, [r7, #30]
 26552 0076 5B00     		lsls	r3, r3, #1
 26553 0078 DBB2     		uxtb	r3, r3
 26554 007a 0133     		adds	r3, r3, #1
 26555 007c DAB2     		uxtb	r2, r3
 26556 007e 3B1D     		adds	r3, r7, #4
 26557 0080 1146     		mov	r1, r2
 26558 0082 1846     		mov	r0, r3
 26559 0084 FFF7FEFF 		bl	LCRChecksum
 26560 0088 0346     		mov	r3, r0
 26561 008a 1A46     		mov	r2, r3
 26562 008c 07F12003 		add	r3, r7, #32
 26563 0090 2344     		add	r3, r3, r4
 26564 0092 03F81C2C 		strb	r2, [r3, #-28]
3956:..\src/command_processing.c ****     
3957:..\src/command_processing.c ****     // Send package to UART
3958:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26565              		.loc 1 3958 0
 26566 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26567 0098 0133     		adds	r3, r3, #1
 26568 009a 9BB2     		uxth	r3, r3
 26569 009c 5B00     		lsls	r3, r3, #1
 26570 009e 9AB2     		uxth	r2, r3
 26571 00a0 3B1D     		adds	r3, r7, #4
 26572 00a2 1146     		mov	r1, r2
 26573 00a4 1846     		mov	r0, r3
 26574 00a6 FFF7FEFF 		bl	commWrite
3959:..\src/command_processing.c **** }
 26575              		.loc 1 3959 0
 26576 00aa 00BF     		nop
 26577 00ac 2437     		adds	r7, r7, #36
 26578              		.cfi_def_cfa_offset 12
 26579 00ae BD46     		mov	sp, r7
 26580              		.cfi_def_cfa_register 13
 26581              		@ sp needed
 26582 00b0 90BD     		pop	{r4, r7, pc}
 26583              	.L1045:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 581


 26584 00b2 00BF     		.align	2
 26585              	.L1044:
 26586 00b4 00000000 		.word	c_mem
 26587 00b8 00000000 		.word	ADC_buf
 26588 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 26589              		.cfi_endproc
 26590              	.LFE111:
 26591              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 26592              		.section	.text.cmd_get_SD_file,"ax",%progbits
 26593              		.align	2
 26594              		.global	cmd_get_SD_file
 26595              		.thumb
 26596              		.thumb_func
 26597              		.type	cmd_get_SD_file, %function
 26598              	cmd_get_SD_file:
 26599              	.LFB112:
3960:..\src/command_processing.c **** 
3961:..\src/command_processing.c **** void cmd_get_SD_file(){
 26600              		.loc 1 3961 0
 26601              		.cfi_startproc
 26602              		@ args = 0, pretend = 0, frame = 0
 26603              		@ frame_needed = 1, uses_anonymous_args = 0
 26604              		@ link register save eliminated.
 26605 0000 80B4     		push	{r7}
 26606              		.cfi_def_cfa_offset 4
 26607              		.cfi_offset 7, -4
 26608 0002 00AF     		add	r7, sp, #0
 26609              		.cfi_def_cfa_register 7
3962:..\src/command_processing.c ****     
3963:..\src/command_processing.c ****     // With PING command
3964:..\src/command_processing.c ****     // Get all the folders with path and contained files number in the CSV-like format
3965:..\src/command_processing.c ****     // USER\YYYY\MM\DD, number_of_files
3966:..\src/command_processing.c ****     
3967:..\src/command_processing.c ****     
3968:..\src/command_processing.c ****     
3969:..\src/command_processing.c ****     // Get the total number of files by sum of number_of_files fields
3970:..\src/command_processing.c ****     
3971:..\src/command_processing.c ****     // Read each file and send it to API
3972:..\src/command_processing.c ****     
3973:..\src/command_processing.c ****  /*   //Retrieve Additional EMG port raw values
3974:..\src/command_processing.c ****     
3975:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3976:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
3977:..\src/command_processing.c ****     int16 aux_int16;
3978:..\src/command_processing.c ****     
3979:..\src/command_processing.c ****     // Header        
3980:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
3981:..\src/command_processing.c ****     
3982:..\src/command_processing.c ****     // Fill payload
3983:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
3984:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
3985:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
3986:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
3987:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
3988:..\src/command_processing.c ****             idx++;
3989:..\src/command_processing.c ****         }
3990:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 582


3991:..\src/command_processing.c **** 
3992:..\src/command_processing.c ****     // Calculate checksum
3993:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
3994:..\src/command_processing.c ****     
3995:..\src/command_processing.c ****     // Send package to UART
3996:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);*/
3997:..\src/command_processing.c **** }
 26610              		.loc 1 3997 0
 26611 0004 00BF     		nop
 26612 0006 BD46     		mov	sp, r7
 26613              		.cfi_def_cfa_register 13
 26614              		@ sp needed
 26615 0008 80BC     		pop	{r7}
 26616              		.cfi_restore 7
 26617              		.cfi_def_cfa_offset 0
 26618 000a 7047     		bx	lr
 26619              		.cfi_endproc
 26620              	.LFE112:
 26621              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 26622              		.section	.text.air_chambers_control,"ax",%progbits
 26623              		.align	2
 26624              		.global	air_chambers_control
 26625              		.thumb
 26626              		.thumb_func
 26627              		.type	air_chambers_control, %function
 26628              	air_chambers_control:
 26629              	.LFB113:
3998:..\src/command_processing.c **** 
3999:..\src/command_processing.c **** //==============================================================================
4000:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4001:..\src/command_processing.c **** //==============================================================================
4002:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4003:..\src/command_processing.c **** 
4004:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 26630              		.loc 1 4004 0
 26631              		.cfi_startproc
 26632              		@ args = 0, pretend = 0, frame = 8
 26633              		@ frame_needed = 1, uses_anonymous_args = 0
 26634              		@ link register save eliminated.
 26635 0000 80B4     		push	{r7}
 26636              		.cfi_def_cfa_offset 4
 26637              		.cfi_offset 7, -4
 26638 0002 83B0     		sub	sp, sp, #12
 26639              		.cfi_def_cfa_offset 16
 26640 0004 00AF     		add	r7, sp, #0
 26641              		.cfi_def_cfa_register 7
 26642 0006 7860     		str	r0, [r7, #4]
4005:..\src/command_processing.c ****     
4006:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4007:..\src/command_processing.c ****     
4008:..\src/command_processing.c ****     int16 curr_diff;
4009:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
4010:..\src/command_processing.c ****     int32 valve_command;
4011:..\src/command_processing.c ****     int16 x_value;
4012:..\src/command_processing.c **** 
4013:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4014:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 583


4015:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
4016:..\src/command_processing.c ****     
4017:..\src/command_processing.c ****     // Current difference saturation old mapping
4018:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4019:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4020:..\src/command_processing.c **** //    }
4021:..\src/command_processing.c **** //    if(curr_diff < 0) {
4022:..\src/command_processing.c **** //        curr_diff = 0;
4023:..\src/command_processing.c **** //    }
4024:..\src/command_processing.c **** 
4025:..\src/command_processing.c ****     // Compute pressure reference
4026:..\src/command_processing.c **** 
4027:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
4028:..\src/command_processing.c ****     if (x_value < 0)
4029:..\src/command_processing.c ****         x_value = 0;
4030:..\src/command_processing.c ****     
4031:..\src/command_processing.c ****     // old mapping --- linear mapping
4032:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4033:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
4034:..\src/command_processing.c ****     if (pressure_reference < 0)
4035:..\src/command_processing.c ****         pressure_reference = 0;
4036:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
4037:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
4038:..\src/command_processing.c ****     
4039:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
4040:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
4041:..\src/command_processing.c **** //    if (err_pressure < 0){
4042:..\src/command_processing.c **** //        err_pressure = 0;
4043:..\src/command_processing.c **** //    }
4044:..\src/command_processing.c ****     
4045:..\src/command_processing.c ****     if (x_value <= 0){
4046:..\src/command_processing.c ****         //i.e the hand is opening
4047:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
4048:..\src/command_processing.c ****     }
4049:..\src/command_processing.c ****     else {
4050:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4051:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4052:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4053:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
4054:..\src/command_processing.c ****     }
4055:..\src/command_processing.c ****     
4056:..\src/command_processing.c ****     // Pump control
4057:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
4058:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4059:..\src/command_processing.c ****     
4060:..\src/command_processing.c ****     // Limit output voltage
4061:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
4062:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
4063:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
4064:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4065:..\src/command_processing.c ****         
4066:..\src/command_processing.c ****     VALVE_Write(valve_command);
4067:..\src/command_processing.c ****     
4068:..\src/command_processing.c ****     
4069:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4070:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4071:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 584


4072:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4073:..\src/command_processing.c **** #endif
4074:..\src/command_processing.c **** }
 26643              		.loc 1 4074 0
 26644 0008 00BF     		nop
 26645 000a 0C37     		adds	r7, r7, #12
 26646              		.cfi_def_cfa_offset 4
 26647 000c BD46     		mov	sp, r7
 26648              		.cfi_def_cfa_register 13
 26649              		@ sp needed
 26650 000e 80BC     		pop	{r7}
 26651              		.cfi_restore 7
 26652              		.cfi_def_cfa_offset 0
 26653 0010 7047     		bx	lr
 26654              		.cfi_endproc
 26655              	.LFE113:
 26656              		.size	air_chambers_control, .-air_chambers_control
 26657 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 26658              		.align	2
 26659              		.global	emg_activation_velocity_fsm
 26660              		.thumb
 26661              		.thumb_func
 26662              		.type	emg_activation_velocity_fsm, %function
 26663              	emg_activation_velocity_fsm:
 26664              	.LFB114:
4075:..\src/command_processing.c **** 
4076:..\src/command_processing.c **** 
4077:..\src/command_processing.c **** //==============================================================================
4078:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4079:..\src/command_processing.c **** //==============================================================================
4080:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4081:..\src/command_processing.c **** 
4082:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 26665              		.loc 1 4082 0
 26666              		.cfi_startproc
 26667              		@ args = 0, pretend = 0, frame = 16
 26668              		@ frame_needed = 1, uses_anonymous_args = 0
 26669              		@ link register save eliminated.
 26670 0000 80B4     		push	{r7}
 26671              		.cfi_def_cfa_offset 4
 26672              		.cfi_offset 7, -4
 26673 0002 85B0     		sub	sp, sp, #20
 26674              		.cfi_def_cfa_offset 24
 26675 0004 00AF     		add	r7, sp, #0
 26676              		.cfi_def_cfa_register 7
4083:..\src/command_processing.c ****       
4084:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4085:..\src/command_processing.c ****     static int32 cnt = 0;
4086:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4087:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4088:..\src/command_processing.c ****     
4089:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 26677              		.loc 1 4089 0
 26678 0006 534B     		ldr	r3, .L1077
 26679 0008 1B68     		ldr	r3, [r3]
 26680 000a 534A     		ldr	r2, .L1077+4
 26681 000c B2F8F021 		ldrh	r2, [r2, #496]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 585


 26682 0010 9B1A     		subs	r3, r3, r2
 26683 0012 FB60     		str	r3, [r7, #12]
4090:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 26684              		.loc 1 4090 0
 26685 0014 4F4B     		ldr	r3, .L1077
 26686 0016 5B68     		ldr	r3, [r3, #4]
 26687 0018 4F4A     		ldr	r2, .L1077+4
 26688 001a B2F8F221 		ldrh	r2, [r2, #498]
 26689 001e 9B1A     		subs	r3, r3, r2
 26690 0020 BB60     		str	r3, [r7, #8]
4091:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 26691              		.loc 1 4091 0
 26692 0022 4C4B     		ldr	r3, .L1077
 26693 0024 1B68     		ldr	r3, [r3]
 26694 0026 4C4A     		ldr	r2, .L1077+4
 26695 0028 B2F8E222 		ldrh	r2, [r2, #738]
 26696 002c 9B1A     		subs	r3, r3, r2
 26697 002e 7B60     		str	r3, [r7, #4]
4092:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 26698              		.loc 1 4092 0
 26699 0030 484B     		ldr	r3, .L1077
 26700 0032 5B68     		ldr	r3, [r3, #4]
 26701 0034 484A     		ldr	r2, .L1077+4
 26702 0036 B2F8E422 		ldrh	r2, [r2, #740]
 26703 003a 9B1A     		subs	r3, r3, r2
 26704 003c 3B60     		str	r3, [r7]
4093:..\src/command_processing.c ****     
4094:..\src/command_processing.c **** 
4095:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4096:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4097:..\src/command_processing.c ****     switch (fsm_state){
 26705              		.loc 1 4097 0
 26706 003e 474B     		ldr	r3, .L1077+8
 26707 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26708 0042 032B     		cmp	r3, #3
 26709 0044 7FD8     		bhi	.L1049
 26710 0046 01A2     		adr	r2, .L1051
 26711 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 26712              		.p2align 2
 26713              	.L1051:
 26714 004c 5D000000 		.word	.L1050+1
 26715 0050 71000000 		.word	.L1052+1
 26716 0054 11010000 		.word	.L1053+1
 26717 0058 25010000 		.word	.L1054+1
 26718              		.p2align 1
 26719              	.L1050:
4098:..\src/command_processing.c ****         case RELAX_STATE:
4099:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 26720              		.loc 1 4099 0
 26721 005c FB68     		ldr	r3, [r7, #12]
 26722 005e 002B     		cmp	r3, #0
 26723 0060 02DC     		bgt	.L1055
 26724              		.loc 1 4099 0 is_stmt 0 discriminator 1
 26725 0062 BB68     		ldr	r3, [r7, #8]
 26726 0064 002B     		cmp	r3, #0
 26727 0066 67DD     		ble	.L1073
 26728              	.L1055:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 586


4100:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 26729              		.loc 1 4100 0 is_stmt 1
 26730 0068 3C4B     		ldr	r3, .L1077+8
 26731 006a 0122     		movs	r2, #1
 26732 006c 1A70     		strb	r2, [r3]
4101:..\src/command_processing.c ****             }
4102:..\src/command_processing.c ****             
4103:..\src/command_processing.c ****             break;
 26733              		.loc 1 4103 0
 26734 006e 63E0     		b	.L1073
 26735              	.L1052:
4104:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4105:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 26736              		.loc 1 4105 0
 26737 0070 FB68     		ldr	r3, [r7, #12]
 26738 0072 002B     		cmp	r3, #0
 26739 0074 02DC     		bgt	.L1057
 26740              		.loc 1 4105 0 is_stmt 0 discriminator 1
 26741 0076 BB68     		ldr	r3, [r7, #8]
 26742 0078 002B     		cmp	r3, #0
 26743 007a 05DD     		ble	.L1058
 26744              	.L1057:
4106:..\src/command_processing.c ****                 cnt = cnt +1;
 26745              		.loc 1 4106 0 is_stmt 1
 26746 007c 384B     		ldr	r3, .L1077+12
 26747 007e 1B68     		ldr	r3, [r3]
 26748 0080 0133     		adds	r3, r3, #1
 26749 0082 374A     		ldr	r2, .L1077+12
 26750 0084 1360     		str	r3, [r2]
 26751 0086 02E0     		b	.L1059
 26752              	.L1058:
4107:..\src/command_processing.c ****             }
4108:..\src/command_processing.c ****             else {
4109:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 26753              		.loc 1 4109 0
 26754 0088 344B     		ldr	r3, .L1077+8
 26755 008a 0022     		movs	r2, #0
 26756 008c 1A70     		strb	r2, [r3]
 26757              	.L1059:
4110:..\src/command_processing.c ****             }
4111:..\src/command_processing.c ****             
4112:..\src/command_processing.c ****             if (cnt > 100){
 26758              		.loc 1 4112 0
 26759 008e 344B     		ldr	r3, .L1077+12
 26760 0090 1B68     		ldr	r3, [r3]
 26761 0092 642B     		cmp	r3, #100
 26762 0094 52DD     		ble	.L1074
4113:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 26763              		.loc 1 4113 0
 26764 0096 FB68     		ldr	r3, [r7, #12]
 26765 0098 002B     		cmp	r3, #0
 26766 009a 02DD     		ble	.L1061
 26767              		.loc 1 4113 0 is_stmt 0 discriminator 1
 26768 009c 7B68     		ldr	r3, [r7, #4]
 26769 009e 002B     		cmp	r3, #0
 26770 00a0 05DC     		bgt	.L1062
 26771              	.L1061:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 587


 26772              		.loc 1 4113 0 discriminator 3
 26773 00a2 BB68     		ldr	r3, [r7, #8]
 26774 00a4 002B     		cmp	r3, #0
 26775 00a6 0EDD     		ble	.L1063
 26776              		.loc 1 4113 0 discriminator 4
 26777 00a8 3B68     		ldr	r3, [r7]
 26778 00aa 002B     		cmp	r3, #0
 26779 00ac 0BDD     		ble	.L1063
 26780              	.L1062:
4114:..\src/command_processing.c ****                     // Fast activation
4115:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 26781              		.loc 1 4115 0 is_stmt 1
 26782 00ae 2A4B     		ldr	r3, .L1077+4
 26783 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 26784 00b4 002B     		cmp	r3, #0
 26785 00b6 03D1     		bne	.L1064
4116:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 26786              		.loc 1 4116 0
 26787 00b8 284B     		ldr	r3, .L1077+8
 26788 00ba 0222     		movs	r2, #2
 26789 00bc 1A70     		strb	r2, [r3]
 26790 00be 02E0     		b	.L1063
 26791              	.L1064:
4117:..\src/command_processing.c ****                     }
4118:..\src/command_processing.c ****                     else{
4119:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 26792              		.loc 1 4119 0
 26793 00c0 264B     		ldr	r3, .L1077+8
 26794 00c2 0322     		movs	r2, #3
 26795 00c4 1A70     		strb	r2, [r3]
 26796              	.L1063:
4120:..\src/command_processing.c ****                     }
4121:..\src/command_processing.c ****                 }
4122:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 26797              		.loc 1 4122 0
 26798 00c6 FB68     		ldr	r3, [r7, #12]
 26799 00c8 002B     		cmp	r3, #0
 26800 00ca 02DD     		ble	.L1065
 26801              		.loc 1 4122 0 is_stmt 0 discriminator 1
 26802 00cc 7B68     		ldr	r3, [r7, #4]
 26803 00ce 002B     		cmp	r3, #0
 26804 00d0 05DB     		blt	.L1066
 26805              	.L1065:
 26806              		.loc 1 4122 0 discriminator 3
 26807 00d2 BB68     		ldr	r3, [r7, #8]
 26808 00d4 002B     		cmp	r3, #0
 26809 00d6 0EDD     		ble	.L1067
 26810              		.loc 1 4122 0 discriminator 4
 26811 00d8 3B68     		ldr	r3, [r7]
 26812 00da 002B     		cmp	r3, #0
 26813 00dc 0BDA     		bge	.L1067
 26814              	.L1066:
4123:..\src/command_processing.c ****                     // Slow activation
4124:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 26815              		.loc 1 4124 0 is_stmt 1
 26816 00de 1E4B     		ldr	r3, .L1077+4
 26817 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 588


 26818 00e4 002B     		cmp	r3, #0
 26819 00e6 03D1     		bne	.L1068
4125:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 26820              		.loc 1 4125 0
 26821 00e8 1C4B     		ldr	r3, .L1077+8
 26822 00ea 0322     		movs	r2, #3
 26823 00ec 1A70     		strb	r2, [r3]
 26824 00ee 02E0     		b	.L1067
 26825              	.L1068:
4126:..\src/command_processing.c ****                     }
4127:..\src/command_processing.c ****                     else{
4128:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 26826              		.loc 1 4128 0
 26827 00f0 1A4B     		ldr	r3, .L1077+8
 26828 00f2 0222     		movs	r2, #2
 26829 00f4 1A70     		strb	r2, [r3]
 26830              	.L1067:
4129:..\src/command_processing.c ****                     }
4130:..\src/command_processing.c ****                 }
4131:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 26831              		.loc 1 4131 0
 26832 00f6 FB68     		ldr	r3, [r7, #12]
 26833 00f8 002B     		cmp	r3, #0
 26834 00fa 05DA     		bge	.L1069
 26835              		.loc 1 4131 0 is_stmt 0 discriminator 1
 26836 00fc BB68     		ldr	r3, [r7, #8]
 26837 00fe 002B     		cmp	r3, #0
 26838 0100 02DA     		bge	.L1069
4132:..\src/command_processing.c ****                     // Involuntary activation
4133:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 26839              		.loc 1 4133 0 is_stmt 1
 26840 0102 164B     		ldr	r3, .L1077+8
 26841 0104 0022     		movs	r2, #0
 26842 0106 1A70     		strb	r2, [r3]
 26843              	.L1069:
4134:..\src/command_processing.c ****                 }
4135:..\src/command_processing.c ****                 cnt = 0;
 26844              		.loc 1 4135 0
 26845 0108 154B     		ldr	r3, .L1077+12
 26846 010a 0022     		movs	r2, #0
 26847 010c 1A60     		str	r2, [r3]
4136:..\src/command_processing.c ****             }
4137:..\src/command_processing.c ****     
4138:..\src/command_processing.c ****             break;
 26848              		.loc 1 4138 0
 26849 010e 15E0     		b	.L1074
 26850              	.L1053:
4139:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4140:..\src/command_processing.c ****             
4141:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 26851              		.loc 1 4141 0
 26852 0110 FB68     		ldr	r3, [r7, #12]
 26853 0112 002B     		cmp	r3, #0
 26854 0114 14DA     		bge	.L1075
 26855              		.loc 1 4141 0 is_stmt 0 discriminator 1
 26856 0116 BB68     		ldr	r3, [r7, #8]
 26857 0118 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 589


 26858 011a 11DA     		bge	.L1075
4142:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 26859              		.loc 1 4142 0 is_stmt 1
 26860 011c 0F4B     		ldr	r3, .L1077+8
 26861 011e 0022     		movs	r2, #0
 26862 0120 1A70     		strb	r2, [r3]
4143:..\src/command_processing.c ****             }
4144:..\src/command_processing.c ****         
4145:..\src/command_processing.c ****             break;
 26863              		.loc 1 4145 0
 26864 0122 0DE0     		b	.L1075
 26865              	.L1054:
4146:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4147:..\src/command_processing.c ****           
4148:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 26866              		.loc 1 4148 0
 26867 0124 FB68     		ldr	r3, [r7, #12]
 26868 0126 002B     		cmp	r3, #0
 26869 0128 0CDA     		bge	.L1076
 26870              		.loc 1 4148 0 is_stmt 0 discriminator 1
 26871 012a BB68     		ldr	r3, [r7, #8]
 26872 012c 002B     		cmp	r3, #0
 26873 012e 09DA     		bge	.L1076
4149:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 26874              		.loc 1 4149 0 is_stmt 1
 26875 0130 0A4B     		ldr	r3, .L1077+8
 26876 0132 0022     		movs	r2, #0
 26877 0134 1A70     		strb	r2, [r3]
4150:..\src/command_processing.c ****             }
4151:..\src/command_processing.c ****             
4152:..\src/command_processing.c ****             break;
 26878              		.loc 1 4152 0
 26879 0136 05E0     		b	.L1076
 26880              	.L1073:
4103:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 26881              		.loc 1 4103 0
 26882 0138 00BF     		nop
 26883 013a 04E0     		b	.L1049
 26884              	.L1074:
4138:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 26885              		.loc 1 4138 0
 26886 013c 00BF     		nop
 26887 013e 02E0     		b	.L1049
 26888              	.L1075:
4145:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 26889              		.loc 1 4145 0
 26890 0140 00BF     		nop
 26891 0142 00E0     		b	.L1049
 26892              	.L1076:
 26893              		.loc 1 4152 0
 26894 0144 00BF     		nop
 26895              	.L1049:
4153:..\src/command_processing.c ****     }
4154:..\src/command_processing.c ****     
4155:..\src/command_processing.c ****     return fsm_state;
 26896              		.loc 1 4155 0
 26897 0146 054B     		ldr	r3, .L1077+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 590


 26898 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4156:..\src/command_processing.c **** 
4157:..\src/command_processing.c **** }
 26899              		.loc 1 4157 0
 26900 014a 1846     		mov	r0, r3
 26901 014c 1437     		adds	r7, r7, #20
 26902              		.cfi_def_cfa_offset 4
 26903 014e BD46     		mov	sp, r7
 26904              		.cfi_def_cfa_register 13
 26905              		@ sp needed
 26906 0150 80BC     		pop	{r7}
 26907              		.cfi_restore 7
 26908              		.cfi_def_cfa_offset 0
 26909 0152 7047     		bx	lr
 26910              	.L1078:
 26911              		.align	2
 26912              	.L1077:
 26913 0154 00000000 		.word	g_adc_meas
 26914 0158 00000000 		.word	c_mem
 26915 015c 08000000 		.word	fsm_state.11482
 26916 0160 0C000000 		.word	cnt.11483
 26917              		.cfi_endproc
 26918              	.LFE114:
 26919              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 26920              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 26921              		.align	2
 26922              		.global	otbk_act_wrist_control
 26923              		.thumb
 26924              		.thumb_func
 26925              		.type	otbk_act_wrist_control, %function
 26926              	otbk_act_wrist_control:
 26927              	.LFB115:
4158:..\src/command_processing.c **** 
4159:..\src/command_processing.c **** //==============================================================================
4160:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4161:..\src/command_processing.c **** //==============================================================================
4162:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4163:..\src/command_processing.c **** 
4164:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 26928              		.loc 1 4164 0
 26929              		.cfi_startproc
 26930              		@ args = 0, pretend = 0, frame = 8
 26931              		@ frame_needed = 1, uses_anonymous_args = 0
 26932              		@ link register save eliminated.
 26933 0000 80B4     		push	{r7}
 26934              		.cfi_def_cfa_offset 4
 26935              		.cfi_offset 7, -4
 26936 0002 83B0     		sub	sp, sp, #12
 26937              		.cfi_def_cfa_offset 16
 26938 0004 00AF     		add	r7, sp, #0
 26939              		.cfi_def_cfa_register 7
 26940 0006 7860     		str	r0, [r7, #4]
4165:..\src/command_processing.c ****     
4166:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4167:..\src/command_processing.c ****     
4168:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4169:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 591


4170:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4171:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4172:..\src/command_processing.c ****     switch (fsm_state){
4173:..\src/command_processing.c ****         case RELAX_STATE:
4174:..\src/command_processing.c ****             
4175:..\src/command_processing.c ****             // Wrist stop
4176:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4177:..\src/command_processing.c ****             
4178:..\src/command_processing.c ****             // Softhand stop
4179:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4180:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4181:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4182:..\src/command_processing.c ****             
4183:..\src/command_processing.c ****             break;
4184:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4185:..\src/command_processing.c ****                 
4186:..\src/command_processing.c ****             break;
4187:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4188:..\src/command_processing.c ****             
4189:..\src/command_processing.c ****             // Wrist movement
4190:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4191:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4192:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4193:..\src/command_processing.c ****                 }
4194:..\src/command_processing.c ****                 else {
4195:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4196:..\src/command_processing.c ****                 }
4197:..\src/command_processing.c ****             }
4198:..\src/command_processing.c ****             else {
4199:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4200:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4201:..\src/command_processing.c ****                 }
4202:..\src/command_processing.c ****                 else {
4203:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4204:..\src/command_processing.c ****                 }
4205:..\src/command_processing.c ****             }
4206:..\src/command_processing.c ****             
4207:..\src/command_processing.c ****             // Softhand stop
4208:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4209:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4210:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4211:..\src/command_processing.c ****             
4212:..\src/command_processing.c ****             break;
4213:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4214:..\src/command_processing.c ****             
4215:..\src/command_processing.c ****             // Wrist stop
4216:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4217:..\src/command_processing.c ****             
4218:..\src/command_processing.c ****             // SoftHand movement
4219:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4220:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4221:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4222:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4223:..\src/command_processing.c ****             
4224:..\src/command_processing.c ****             break;
4225:..\src/command_processing.c ****     }
4226:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 592


4227:..\src/command_processing.c ****     // Limit output voltage
4228:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4229:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4230:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4231:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4232:..\src/command_processing.c ****     
4233:..\src/command_processing.c **** #endif
4234:..\src/command_processing.c **** }
 26941              		.loc 1 4234 0
 26942 0008 00BF     		nop
 26943 000a 0C37     		adds	r7, r7, #12
 26944              		.cfi_def_cfa_offset 4
 26945 000c BD46     		mov	sp, r7
 26946              		.cfi_def_cfa_register 13
 26947              		@ sp needed
 26948 000e 80BC     		pop	{r7}
 26949              		.cfi_restore 7
 26950              		.cfi_def_cfa_offset 0
 26951 0010 7047     		bx	lr
 26952              		.cfi_endproc
 26953              	.LFE115:
 26954              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 26955 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 26956              		.align	2
 26957              		.global	drive_slave
 26958              		.thumb
 26959              		.thumb_func
 26960              		.type	drive_slave, %function
 26961              	drive_slave:
 26962              	.LFB116:
4235:..\src/command_processing.c **** 
4236:..\src/command_processing.c **** //==============================================================================
4237:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4238:..\src/command_processing.c **** //==============================================================================
4239:..\src/command_processing.c ****  
4240:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 26963              		.loc 1 4240 0
 26964              		.cfi_startproc
 26965              		@ args = 0, pretend = 0, frame = 8
 26966              		@ frame_needed = 1, uses_anonymous_args = 0
 26967              		@ link register save eliminated.
 26968 0000 80B4     		push	{r7}
 26969              		.cfi_def_cfa_offset 4
 26970              		.cfi_offset 7, -4
 26971 0002 83B0     		sub	sp, sp, #12
 26972              		.cfi_def_cfa_offset 16
 26973 0004 00AF     		add	r7, sp, #0
 26974              		.cfi_def_cfa_register 7
 26975 0006 0346     		mov	r3, r0
 26976 0008 0A46     		mov	r2, r1
 26977 000a FB71     		strb	r3, [r7, #7]
 26978 000c 1346     		mov	r3, r2
 26979 000e BB71     		strb	r3, [r7, #6]
4241:..\src/command_processing.c **** 
4242:..\src/command_processing.c **** #ifdef MASTER_FW
4243:..\src/command_processing.c ****     uint8 packet_data[6];
4244:..\src/command_processing.c ****     uint8 packet_lenght;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 593


4245:..\src/command_processing.c ****     int16 aux_int16;
4246:..\src/command_processing.c **** 
4247:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4248:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4249:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4250:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4251:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
4252:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4253:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4254:..\src/command_processing.c ****         master_mode = 0;
4255:..\src/command_processing.c ****         return;
4256:..\src/command_processing.c ****     }
4257:..\src/command_processing.c ****         
4258:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4259:..\src/command_processing.c ****         master_mode = 0;
4260:..\src/command_processing.c ****         return;
4261:..\src/command_processing.c ****     }
4262:..\src/command_processing.c ****     
4263:..\src/command_processing.c ****        
4264:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4265:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4266:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4267:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
4268:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4269:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4270:..\src/command_processing.c ****     
4271:..\src/command_processing.c ****     packet_lenght = 6;
4272:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4273:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
4274:..\src/command_processing.c **** 
4275:..\src/command_processing.c **** #endif
4276:..\src/command_processing.c **** }
 26980              		.loc 1 4276 0
 26981 0010 00BF     		nop
 26982 0012 0C37     		adds	r7, r7, #12
 26983              		.cfi_def_cfa_offset 4
 26984 0014 BD46     		mov	sp, r7
 26985              		.cfi_def_cfa_register 13
 26986              		@ sp needed
 26987 0016 80BC     		pop	{r7}
 26988              		.cfi_restore 7
 26989              		.cfi_def_cfa_offset 0
 26990 0018 7047     		bx	lr
 26991              		.cfi_endproc
 26992              	.LFE116:
 26993              		.size	drive_slave, .-drive_slave
 26994 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 26995              		.align	2
 26996              		.global	stop_master_device
 26997              		.thumb
 26998              		.thumb_func
 26999              		.type	stop_master_device, %function
 27000              	stop_master_device:
 27001              	.LFB117:
4277:..\src/command_processing.c **** 
4278:..\src/command_processing.c **** //==============================================================================
4279:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 594


4280:..\src/command_processing.c **** //==============================================================================
4281:..\src/command_processing.c ****  
4282:..\src/command_processing.c **** void stop_master_device() {
 27002              		.loc 1 4282 0
 27003              		.cfi_startproc
 27004              		@ args = 0, pretend = 0, frame = 0
 27005              		@ frame_needed = 1, uses_anonymous_args = 0
 27006              		@ link register save eliminated.
 27007 0000 80B4     		push	{r7}
 27008              		.cfi_def_cfa_offset 4
 27009              		.cfi_offset 7, -4
 27010 0002 00AF     		add	r7, sp, #0
 27011              		.cfi_def_cfa_register 7
4283:..\src/command_processing.c ****     
4284:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4285:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4286:..\src/command_processing.c ****         // Stop pump and open valve
4287:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4288:..\src/command_processing.c ****         VALVE_Write(0);
4289:..\src/command_processing.c ****     }
4290:..\src/command_processing.c **** #endif
4291:..\src/command_processing.c **** 
4292:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4293:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4294:..\src/command_processing.c ****         //Stop wrist motor
4295:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4296:..\src/command_processing.c ****     }
4297:..\src/command_processing.c **** #endif    
4298:..\src/command_processing.c **** }
 27012              		.loc 1 4298 0
 27013 0004 00BF     		nop
 27014 0006 BD46     		mov	sp, r7
 27015              		.cfi_def_cfa_register 13
 27016              		@ sp needed
 27017 0008 80BC     		pop	{r7}
 27018              		.cfi_restore 7
 27019              		.cfi_def_cfa_offset 0
 27020 000a 7047     		bx	lr
 27021              		.cfi_endproc
 27022              	.LFE117:
 27023              		.size	stop_master_device, .-stop_master_device
 27024              		.section	.text.deactivate_slaves,"ax",%progbits
 27025              		.align	2
 27026              		.global	deactivate_slaves
 27027              		.thumb
 27028              		.thumb_func
 27029              		.type	deactivate_slaves, %function
 27030              	deactivate_slaves:
 27031              	.LFB118:
4299:..\src/command_processing.c **** 
4300:..\src/command_processing.c **** //==============================================================================
4301:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4302:..\src/command_processing.c **** //==============================================================================
4303:..\src/command_processing.c ****  
4304:..\src/command_processing.c **** void deactivate_slaves() {
 27032              		.loc 1 4304 0
 27033              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 595


 27034              		@ args = 0, pretend = 0, frame = 0
 27035              		@ frame_needed = 1, uses_anonymous_args = 0
 27036              		@ link register save eliminated.
 27037 0000 80B4     		push	{r7}
 27038              		.cfi_def_cfa_offset 4
 27039              		.cfi_offset 7, -4
 27040 0002 00AF     		add	r7, sp, #0
 27041              		.cfi_def_cfa_register 7
4305:..\src/command_processing.c ****     
4306:..\src/command_processing.c **** #ifdef MASTER_FW
4307:..\src/command_processing.c ****     
4308:..\src/command_processing.c ****     uint8 packet_data[10];
4309:..\src/command_processing.c ****     uint8 packet_lenght;
4310:..\src/command_processing.c ****     
4311:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4312:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4313:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4314:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4315:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4316:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4317:..\src/command_processing.c ****         master_mode = 0;
4318:..\src/command_processing.c ****         return;
4319:..\src/command_processing.c ****     }
4320:..\src/command_processing.c ****    
4321:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4322:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4323:..\src/command_processing.c **** 
4324:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4325:..\src/command_processing.c ****     packet_lenght = 3;
4326:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4327:..\src/command_processing.c ****     
4328:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
4329:..\src/command_processing.c ****     
4330:..\src/command_processing.c **** #endif    
4331:..\src/command_processing.c **** }
 27042              		.loc 1 4331 0
 27043 0004 00BF     		nop
 27044 0006 BD46     		mov	sp, r7
 27045              		.cfi_def_cfa_register 13
 27046              		@ sp needed
 27047 0008 80BC     		pop	{r7}
 27048              		.cfi_restore 7
 27049              		.cfi_def_cfa_offset 0
 27050 000a 7047     		bx	lr
 27051              		.cfi_endproc
 27052              	.LFE118:
 27053              		.size	deactivate_slaves, .-deactivate_slaves
 27054              		.bss
 27055              		.align	1
 27056              	i.11211:
 27057 0000 0000     		.space	2
 27058 0002 0000     		.align	2
 27059              	last_aux_int16.11342:
 27060 0004 00000000 		.space	4
 27061              	fsm_state.11482:
 27062 0008 00       		.space	1
 27063 0009 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 596


 27064              	cnt.11483:
 27065 000c 00000000 		.space	4
 27066              		.text
 27067              	.Letext0:
 27068              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 27069              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 27070              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 27071              		.file 6 "..\\src\\commands.h"
 27072              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 27073              		.file 8 "..\\src\\globals.h"
 27074              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 27075              		.section	.debug_info,"",%progbits
 27076              	.Ldebug_info0:
 27077 0000 A2240000 		.4byte	0x24a2
 27078 0004 0400     		.2byte	0x4
 27079 0006 00000000 		.4byte	.Ldebug_abbrev0
 27080 000a 04       		.byte	0x4
 27081 000b 01       		.uleb128 0x1
 27082 000c 77090000 		.4byte	.LASF389
 27083 0010 0C       		.byte	0xc
 27084 0011 7B140000 		.4byte	.LASF390
 27085 0015 D3040000 		.4byte	.LASF391
 27086 0019 00000000 		.4byte	.Ldebug_ranges0+0
 27087 001d 00000000 		.4byte	0
 27088 0021 00000000 		.4byte	.Ldebug_line0
 27089 0025 02       		.uleb128 0x2
 27090 0026 01       		.byte	0x1
 27091 0027 06       		.byte	0x6
 27092 0028 F4030000 		.4byte	.LASF0
 27093 002c 02       		.uleb128 0x2
 27094 002d 01       		.byte	0x1
 27095 002e 08       		.byte	0x8
 27096 002f 75040000 		.4byte	.LASF1
 27097 0033 02       		.uleb128 0x2
 27098 0034 02       		.byte	0x2
 27099 0035 05       		.byte	0x5
 27100 0036 FA100000 		.4byte	.LASF2
 27101 003a 02       		.uleb128 0x2
 27102 003b 02       		.byte	0x2
 27103 003c 07       		.byte	0x7
 27104 003d 6D130000 		.4byte	.LASF3
 27105 0041 03       		.uleb128 0x3
 27106 0042 39140000 		.4byte	.LASF5
 27107 0046 03       		.byte	0x3
 27108 0047 3F       		.byte	0x3f
 27109 0048 4C000000 		.4byte	0x4c
 27110 004c 02       		.uleb128 0x2
 27111 004d 04       		.byte	0x4
 27112 004e 05       		.byte	0x5
 27113 004f D9020000 		.4byte	.LASF4
 27114 0053 03       		.uleb128 0x3
 27115 0054 420A0000 		.4byte	.LASF6
 27116 0058 03       		.byte	0x3
 27117 0059 41       		.byte	0x41
 27118 005a 5E000000 		.4byte	0x5e
 27119 005e 02       		.uleb128 0x2
 27120 005f 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 597


 27121 0060 07       		.byte	0x7
 27122 0061 23080000 		.4byte	.LASF7
 27123 0065 02       		.uleb128 0x2
 27124 0066 08       		.byte	0x8
 27125 0067 05       		.byte	0x5
 27126 0068 4D0A0000 		.4byte	.LASF8
 27127 006c 02       		.uleb128 0x2
 27128 006d 08       		.byte	0x8
 27129 006e 07       		.byte	0x7
 27130 006f 190E0000 		.4byte	.LASF9
 27131 0073 04       		.uleb128 0x4
 27132 0074 04       		.byte	0x4
 27133 0075 05       		.byte	0x5
 27134 0076 696E7400 		.ascii	"int\000"
 27135 007a 02       		.uleb128 0x2
 27136 007b 04       		.byte	0x4
 27137 007c 07       		.byte	0x7
 27138 007d 5B0B0000 		.4byte	.LASF10
 27139 0081 03       		.uleb128 0x3
 27140 0082 B5000000 		.4byte	.LASF11
 27141 0086 04       		.byte	0x4
 27142 0087 2C       		.byte	0x2c
 27143 0088 41000000 		.4byte	0x41
 27144 008c 03       		.uleb128 0x3
 27145 008d E5120000 		.4byte	.LASF12
 27146 0091 04       		.byte	0x4
 27147 0092 30       		.byte	0x30
 27148 0093 53000000 		.4byte	0x53
 27149 0097 05       		.uleb128 0x5
 27150 0098 DC100000 		.4byte	.LASF13
 27151 009c 05       		.byte	0x5
 27152 009d E401     		.2byte	0x1e4
 27153 009f 2C000000 		.4byte	0x2c
 27154 00a3 05       		.uleb128 0x5
 27155 00a4 DE140000 		.4byte	.LASF14
 27156 00a8 05       		.byte	0x5
 27157 00a9 E501     		.2byte	0x1e5
 27158 00ab 3A000000 		.4byte	0x3a
 27159 00af 05       		.uleb128 0x5
 27160 00b0 D6000000 		.4byte	.LASF15
 27161 00b4 05       		.byte	0x5
 27162 00b5 E601     		.2byte	0x1e6
 27163 00b7 5E000000 		.4byte	0x5e
 27164 00bb 05       		.uleb128 0x5
 27165 00bc DE010000 		.4byte	.LASF16
 27166 00c0 05       		.byte	0x5
 27167 00c1 E701     		.2byte	0x1e7
 27168 00c3 25000000 		.4byte	0x25
 27169 00c7 05       		.uleb128 0x5
 27170 00c8 45120000 		.4byte	.LASF17
 27171 00cc 05       		.byte	0x5
 27172 00cd E801     		.2byte	0x1e8
 27173 00cf 33000000 		.4byte	0x33
 27174 00d3 05       		.uleb128 0x5
 27175 00d4 C7130000 		.4byte	.LASF18
 27176 00d8 05       		.byte	0x5
 27177 00d9 E901     		.2byte	0x1e9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 598


 27178 00db 4C000000 		.4byte	0x4c
 27179 00df 05       		.uleb128 0x5
 27180 00e0 60030000 		.4byte	.LASF19
 27181 00e4 05       		.byte	0x5
 27182 00e5 EA01     		.2byte	0x1ea
 27183 00e7 EB000000 		.4byte	0xeb
 27184 00eb 02       		.uleb128 0x2
 27185 00ec 04       		.byte	0x4
 27186 00ed 04       		.byte	0x4
 27187 00ee 1E0B0000 		.4byte	.LASF20
 27188 00f2 02       		.uleb128 0x2
 27189 00f3 08       		.byte	0x8
 27190 00f4 04       		.byte	0x4
 27191 00f5 A50A0000 		.4byte	.LASF21
 27192 00f9 02       		.uleb128 0x2
 27193 00fa 01       		.byte	0x1
 27194 00fb 08       		.byte	0x8
 27195 00fc 69050000 		.4byte	.LASF22
 27196 0100 05       		.uleb128 0x5
 27197 0101 0E0F0000 		.4byte	.LASF23
 27198 0105 05       		.byte	0x5
 27199 0106 8E02     		.2byte	0x28e
 27200 0108 0C010000 		.4byte	0x10c
 27201 010c 06       		.uleb128 0x6
 27202 010d 97000000 		.4byte	0x97
 27203 0111 02       		.uleb128 0x2
 27204 0112 08       		.byte	0x8
 27205 0113 04       		.byte	0x4
 27206 0114 010D0000 		.4byte	.LASF24
 27207 0118 02       		.uleb128 0x2
 27208 0119 04       		.byte	0x4
 27209 011a 07       		.byte	0x7
 27210 011b 29000000 		.4byte	.LASF25
 27211 011f 07       		.uleb128 0x7
 27212 0120 04       		.byte	0x4
 27213 0121 F9000000 		.4byte	0xf9
 27214 0125 07       		.uleb128 0x7
 27215 0126 04       		.byte	0x4
 27216 0127 2B010000 		.4byte	0x12b
 27217 012b 08       		.uleb128 0x8
 27218 012c F9000000 		.4byte	0xf9
 27219 0130 09       		.uleb128 0x9
 27220 0131 F9000000 		.4byte	0xf9
 27221 0135 40010000 		.4byte	0x140
 27222 0139 0A       		.uleb128 0xa
 27223 013a 18010000 		.4byte	0x118
 27224 013e 19       		.byte	0x19
 27225 013f 00       		.byte	0
 27226 0140 09       		.uleb128 0x9
 27227 0141 F9000000 		.4byte	0xf9
 27228 0145 50010000 		.4byte	0x150
 27229 0149 0A       		.uleb128 0xa
 27230 014a 18010000 		.4byte	0x118
 27231 014e 07       		.byte	0x7
 27232 014f 00       		.byte	0
 27233 0150 0B       		.uleb128 0xb
 27234 0151 BB0B0000 		.4byte	.LASF57
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 599


 27235 0155 01       		.byte	0x1
 27236 0156 2C000000 		.4byte	0x2c
 27237 015a 06       		.byte	0x6
 27238 015b 42       		.byte	0x42
 27239 015c 1B020000 		.4byte	0x21b
 27240 0160 0C       		.uleb128 0xc
 27241 0161 F8140000 		.4byte	.LASF26
 27242 0165 00       		.byte	0
 27243 0166 0C       		.uleb128 0xc
 27244 0167 8B110000 		.4byte	.LASF27
 27245 016b 01       		.byte	0x1
 27246 016c 0C       		.uleb128 0xc
 27247 016d FF070000 		.4byte	.LASF28
 27248 0171 03       		.byte	0x3
 27249 0172 0C       		.uleb128 0xc
 27250 0173 AD040000 		.4byte	.LASF29
 27251 0177 04       		.byte	0x4
 27252 0178 0C       		.uleb128 0xc
 27253 0179 470F0000 		.4byte	.LASF30
 27254 017d 05       		.byte	0x5
 27255 017e 0C       		.uleb128 0xc
 27256 017f 1F090000 		.4byte	.LASF31
 27257 0183 06       		.byte	0x6
 27258 0184 0C       		.uleb128 0xc
 27259 0185 43080000 		.4byte	.LASF32
 27260 0189 09       		.byte	0x9
 27261 018a 0C       		.uleb128 0xc
 27262 018b 32000000 		.4byte	.LASF33
 27263 018f 0A       		.byte	0xa
 27264 0190 0C       		.uleb128 0xc
 27265 0191 27120000 		.4byte	.LASF34
 27266 0195 0C       		.byte	0xc
 27267 0196 0C       		.uleb128 0xc
 27268 0197 650D0000 		.4byte	.LASF35
 27269 019b 0D       		.byte	0xd
 27270 019c 0C       		.uleb128 0xc
 27271 019d 78000000 		.4byte	.LASF36
 27272 01a1 80       		.byte	0x80
 27273 01a2 0C       		.uleb128 0xc
 27274 01a3 58050000 		.4byte	.LASF37
 27275 01a7 81       		.byte	0x81
 27276 01a8 0C       		.uleb128 0xc
 27277 01a9 7B060000 		.4byte	.LASF38
 27278 01ad 82       		.byte	0x82
 27279 01ae 0C       		.uleb128 0xc
 27280 01af 55110000 		.4byte	.LASF39
 27281 01b3 83       		.byte	0x83
 27282 01b4 0C       		.uleb128 0xc
 27283 01b5 A5100000 		.4byte	.LASF40
 27284 01b9 84       		.byte	0x84
 27285 01ba 0C       		.uleb128 0xc
 27286 01bb 78030000 		.4byte	.LASF41
 27287 01bf 85       		.byte	0x85
 27288 01c0 0C       		.uleb128 0xc
 27289 01c1 61090000 		.4byte	.LASF42
 27290 01c5 86       		.byte	0x86
 27291 01c6 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 600


 27292 01c7 FF080000 		.4byte	.LASF43
 27293 01cb 88       		.byte	0x88
 27294 01cc 0C       		.uleb128 0xc
 27295 01cd 08120000 		.4byte	.LASF44
 27296 01d1 89       		.byte	0x89
 27297 01d2 0C       		.uleb128 0xc
 27298 01d3 770E0000 		.4byte	.LASF45
 27299 01d7 8B       		.byte	0x8b
 27300 01d8 0C       		.uleb128 0xc
 27301 01d9 D20C0000 		.4byte	.LASF46
 27302 01dd 8C       		.byte	0x8c
 27303 01de 0C       		.uleb128 0xc
 27304 01df 1D0A0000 		.4byte	.LASF47
 27305 01e3 8E       		.byte	0x8e
 27306 01e4 0C       		.uleb128 0xc
 27307 01e5 AF0E0000 		.4byte	.LASF48
 27308 01e9 90       		.byte	0x90
 27309 01ea 0C       		.uleb128 0xc
 27310 01eb 77020000 		.4byte	.LASF49
 27311 01ef 92       		.byte	0x92
 27312 01f0 0C       		.uleb128 0xc
 27313 01f1 46130000 		.4byte	.LASF50
 27314 01f5 A1       		.byte	0xa1
 27315 01f6 0C       		.uleb128 0xc
 27316 01f7 5E100000 		.4byte	.LASF51
 27317 01fb A2       		.byte	0xa2
 27318 01fc 0C       		.uleb128 0xc
 27319 01fd 190C0000 		.4byte	.LASF52
 27320 0201 A3       		.byte	0xa3
 27321 0202 0C       		.uleb128 0xc
 27322 0203 7A100000 		.4byte	.LASF53
 27323 0207 A4       		.byte	0xa4
 27324 0208 0C       		.uleb128 0xc
 27325 0209 7A110000 		.4byte	.LASF54
 27326 020d A5       		.byte	0xa5
 27327 020e 0C       		.uleb128 0xc
 27328 020f 12100000 		.4byte	.LASF55
 27329 0213 A6       		.byte	0xa6
 27330 0214 0C       		.uleb128 0xc
 27331 0215 AC0A0000 		.4byte	.LASF56
 27332 0219 A7       		.byte	0xa7
 27333 021a 00       		.byte	0
 27334 021b 0B       		.uleb128 0xb
 27335 021c A5140000 		.4byte	.LASF58
 27336 0220 01       		.byte	0x1
 27337 0221 2C000000 		.4byte	0x2c
 27338 0225 06       		.byte	0x6
 27339 0226 8E       		.byte	0x8e
 27340 0227 5C020000 		.4byte	0x25c
 27341 022b 0C       		.uleb128 0xc
 27342 022c 17070000 		.4byte	.LASF59
 27343 0230 00       		.byte	0
 27344 0231 0C       		.uleb128 0xc
 27345 0232 F90B0000 		.4byte	.LASF60
 27346 0236 01       		.byte	0x1
 27347 0237 0C       		.uleb128 0xc
 27348 0238 88020000 		.4byte	.LASF61
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 601


 27349 023c 02       		.byte	0x2
 27350 023d 0C       		.uleb128 0xc
 27351 023e C0010000 		.4byte	.LASF62
 27352 0242 03       		.byte	0x3
 27353 0243 0C       		.uleb128 0xc
 27354 0244 64010000 		.4byte	.LASF63
 27355 0248 04       		.byte	0x4
 27356 0249 0C       		.uleb128 0xc
 27357 024a 60000000 		.4byte	.LASF64
 27358 024e 05       		.byte	0x5
 27359 024f 0C       		.uleb128 0xc
 27360 0250 6B080000 		.4byte	.LASF65
 27361 0254 06       		.byte	0x6
 27362 0255 0C       		.uleb128 0xc
 27363 0256 3F100000 		.4byte	.LASF66
 27364 025a 07       		.byte	0x7
 27365 025b 00       		.byte	0
 27366 025c 0B       		.uleb128 0xb
 27367 025d 5B0A0000 		.4byte	.LASF67
 27368 0261 01       		.byte	0x1
 27369 0262 2C000000 		.4byte	0x2c
 27370 0266 06       		.byte	0x6
 27371 0267 A2       		.byte	0xa2
 27372 0268 85020000 		.4byte	0x285
 27373 026c 0C       		.uleb128 0xc
 27374 026d 1E140000 		.4byte	.LASF68
 27375 0271 00       		.byte	0
 27376 0272 0C       		.uleb128 0xc
 27377 0273 F3080000 		.4byte	.LASF69
 27378 0277 01       		.byte	0x1
 27379 0278 0C       		.uleb128 0xc
 27380 0279 F10C0000 		.4byte	.LASF70
 27381 027d 02       		.byte	0x2
 27382 027e 0C       		.uleb128 0xc
 27383 027f EA070000 		.4byte	.LASF71
 27384 0283 03       		.byte	0x3
 27385 0284 00       		.byte	0
 27386 0285 0B       		.uleb128 0xb
 27387 0286 3D040000 		.4byte	.LASF72
 27388 028a 01       		.byte	0x1
 27389 028b 2C000000 		.4byte	0x2c
 27390 028f 06       		.byte	0x6
 27391 0290 AC       		.byte	0xac
 27392 0291 A2020000 		.4byte	0x2a2
 27393 0295 0C       		.uleb128 0xc
 27394 0296 35100000 		.4byte	.LASF73
 27395 029a 00       		.byte	0
 27396 029b 0C       		.uleb128 0xc
 27397 029c 870A0000 		.4byte	.LASF74
 27398 02a0 01       		.byte	0x1
 27399 02a1 00       		.byte	0
 27400 02a2 0B       		.uleb128 0xb
 27401 02a3 BE0D0000 		.4byte	.LASF75
 27402 02a7 01       		.byte	0x1
 27403 02a8 2C000000 		.4byte	0x2c
 27404 02ac 06       		.byte	0x6
 27405 02ad B1       		.byte	0xb1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 602


 27406 02ae BF020000 		.4byte	0x2bf
 27407 02b2 0C       		.uleb128 0xc
 27408 02b3 FC060000 		.4byte	.LASF76
 27409 02b7 00       		.byte	0
 27410 02b8 0C       		.uleb128 0xc
 27411 02b9 B0080000 		.4byte	.LASF77
 27412 02bd 01       		.byte	0x1
 27413 02be 00       		.byte	0
 27414 02bf 0B       		.uleb128 0xb
 27415 02c0 3A120000 		.4byte	.LASF78
 27416 02c4 01       		.byte	0x1
 27417 02c5 2C000000 		.4byte	0x2c
 27418 02c9 06       		.byte	0x6
 27419 02ca B9       		.byte	0xb9
 27420 02cb 0C030000 		.4byte	0x30c
 27421 02cf 0C       		.uleb128 0xc
 27422 02d0 B7080000 		.4byte	.LASF79
 27423 02d4 00       		.byte	0
 27424 02d5 0C       		.uleb128 0xc
 27425 02d6 B3140000 		.4byte	.LASF80
 27426 02da 01       		.byte	0x1
 27427 02db 0C       		.uleb128 0xc
 27428 02dc 6B0A0000 		.4byte	.LASF81
 27429 02e0 02       		.byte	0x2
 27430 02e1 0C       		.uleb128 0xc
 27431 02e2 AE0C0000 		.4byte	.LASF82
 27432 02e6 03       		.byte	0x3
 27433 02e7 0C       		.uleb128 0xc
 27434 02e8 C60B0000 		.4byte	.LASF83
 27435 02ec 04       		.byte	0x4
 27436 02ed 0C       		.uleb128 0xc
 27437 02ee 300E0000 		.4byte	.LASF84
 27438 02f2 05       		.byte	0x5
 27439 02f3 0C       		.uleb128 0xc
 27440 02f4 0D0D0000 		.4byte	.LASF85
 27441 02f8 06       		.byte	0x6
 27442 02f9 0C       		.uleb128 0xc
 27443 02fa 700C0000 		.4byte	.LASF86
 27444 02fe 07       		.byte	0x7
 27445 02ff 0C       		.uleb128 0xc
 27446 0300 BC060000 		.4byte	.LASF87
 27447 0304 08       		.byte	0x8
 27448 0305 0C       		.uleb128 0xc
 27449 0306 DE070000 		.4byte	.LASF88
 27450 030a 09       		.byte	0x9
 27451 030b 00       		.byte	0
 27452 030c 03       		.uleb128 0x3
 27453 030d FF130000 		.4byte	.LASF89
 27454 0311 07       		.byte	0x7
 27455 0312 7E       		.byte	0x7e
 27456 0313 17030000 		.4byte	0x317
 27457 0317 0D       		.uleb128 0xd
 27458 0318 FF130000 		.4byte	.LASF89
 27459 031c 07       		.uleb128 0x7
 27460 031d 04       		.byte	0x4
 27461 031e 0C030000 		.4byte	0x30c
 27462 0322 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 603


 27463 0323 050A0000 		.4byte	.LASF92
 27464 0327 10       		.byte	0x10
 27465 0328 08       		.byte	0x8
 27466 0329 E2       		.byte	0xe2
 27467 032a 5F030000 		.4byte	0x35f
 27468 032e 0F       		.uleb128 0xf
 27469 032f 706F7300 		.ascii	"pos\000"
 27470 0333 08       		.byte	0x8
 27471 0334 E3       		.byte	0xe3
 27472 0335 D3000000 		.4byte	0xd3
 27473 0339 00       		.byte	0
 27474 033a 10       		.uleb128 0x10
 27475 033b E3080000 		.4byte	.LASF90
 27476 033f 08       		.byte	0x8
 27477 0340 E4       		.byte	0xe4
 27478 0341 D3000000 		.4byte	0xd3
 27479 0345 04       		.byte	0x4
 27480 0346 0F       		.uleb128 0xf
 27481 0347 70776D00 		.ascii	"pwm\000"
 27482 034b 08       		.byte	0x8
 27483 034c E5       		.byte	0xe5
 27484 034d D3000000 		.4byte	0xd3
 27485 0351 08       		.byte	0x8
 27486 0352 10       		.uleb128 0x10
 27487 0353 710E0000 		.4byte	.LASF91
 27488 0357 08       		.byte	0x8
 27489 0358 E6       		.byte	0xe6
 27490 0359 97000000 		.4byte	0x97
 27491 035d 0C       		.byte	0xc
 27492 035e 00       		.byte	0
 27493 035f 0E       		.uleb128 0xe
 27494 0360 0A100000 		.4byte	.LASF93
 27495 0364 34       		.byte	0x34
 27496 0365 08       		.byte	0x8
 27497 0366 ED       		.byte	0xed
 27498 0367 C0030000 		.4byte	0x3c0
 27499 036b 0F       		.uleb128 0xf
 27500 036c 706F7300 		.ascii	"pos\000"
 27501 0370 08       		.byte	0x8
 27502 0371 EE       		.byte	0xee
 27503 0372 C0030000 		.4byte	0x3c0
 27504 0376 00       		.byte	0
 27505 0377 10       		.uleb128 0x10
 27506 0378 E3080000 		.4byte	.LASF90
 27507 037c 08       		.byte	0x8
 27508 037d EF       		.byte	0xef
 27509 037e D3000000 		.4byte	0xd3
 27510 0382 0C       		.byte	0xc
 27511 0383 10       		.uleb128 0x10
 27512 0384 87120000 		.4byte	.LASF94
 27513 0388 08       		.byte	0x8
 27514 0389 F0       		.byte	0xf0
 27515 038a D3000000 		.4byte	0xd3
 27516 038e 10       		.byte	0x10
 27517 038f 10       		.uleb128 0x10
 27518 0390 61080000 		.4byte	.LASF95
 27519 0394 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 604


 27520 0395 F1       		.byte	0xf1
 27521 0396 D3000000 		.4byte	0xd3
 27522 039a 14       		.byte	0x14
 27523 039b 0F       		.uleb128 0xf
 27524 039c 726F7400 		.ascii	"rot\000"
 27525 03a0 08       		.byte	0x8
 27526 03a1 F2       		.byte	0xf2
 27527 03a2 D0030000 		.4byte	0x3d0
 27528 03a6 18       		.byte	0x18
 27529 03a7 0F       		.uleb128 0xf
 27530 03a8 76656C00 		.ascii	"vel\000"
 27531 03ac 08       		.byte	0x8
 27532 03ad F3       		.byte	0xf3
 27533 03ae C0030000 		.4byte	0x3c0
 27534 03b2 1C       		.byte	0x1c
 27535 03b3 0F       		.uleb128 0xf
 27536 03b4 61636300 		.ascii	"acc\000"
 27537 03b8 08       		.byte	0x8
 27538 03b9 F4       		.byte	0xf4
 27539 03ba C0030000 		.4byte	0x3c0
 27540 03be 28       		.byte	0x28
 27541 03bf 00       		.byte	0
 27542 03c0 09       		.uleb128 0x9
 27543 03c1 D3000000 		.4byte	0xd3
 27544 03c5 D0030000 		.4byte	0x3d0
 27545 03c9 0A       		.uleb128 0xa
 27546 03ca 18010000 		.4byte	0x118
 27547 03ce 02       		.byte	0x2
 27548 03cf 00       		.byte	0
 27549 03d0 09       		.uleb128 0x9
 27550 03d1 BB000000 		.4byte	0xbb
 27551 03d5 E0030000 		.4byte	0x3e0
 27552 03d9 0A       		.uleb128 0xa
 27553 03da 18010000 		.4byte	0x118
 27554 03de 02       		.byte	0x2
 27555 03df 00       		.byte	0
 27556 03e0 0E       		.uleb128 0xe
 27557 03e1 370B0000 		.4byte	.LASF96
 27558 03e5 28       		.byte	0x28
 27559 03e6 08       		.byte	0x8
 27560 03e7 F7       		.byte	0xf7
 27561 03e8 11040000 		.4byte	0x411
 27562 03ec 0F       		.uleb128 0xf
 27563 03ed 656D6700 		.ascii	"emg\000"
 27564 03f1 08       		.byte	0x8
 27565 03f2 F8       		.byte	0xf8
 27566 03f3 11040000 		.4byte	0x411
 27567 03f7 00       		.byte	0
 27568 03f8 10       		.uleb128 0x10
 27569 03f9 A60C0000 		.4byte	.LASF97
 27570 03fd 08       		.byte	0x8
 27571 03fe F9       		.byte	0xf9
 27572 03ff 21040000 		.4byte	0x421
 27573 0403 08       		.byte	0x8
 27574 0404 10       		.uleb128 0x10
 27575 0405 36110000 		.4byte	.LASF98
 27576 0409 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 605


 27577 040a FA       		.byte	0xfa
 27578 040b 11040000 		.4byte	0x411
 27579 040f 20       		.byte	0x20
 27580 0410 00       		.byte	0
 27581 0411 09       		.uleb128 0x9
 27582 0412 D3000000 		.4byte	0xd3
 27583 0416 21040000 		.4byte	0x421
 27584 041a 0A       		.uleb128 0xa
 27585 041b 18010000 		.4byte	0x118
 27586 041f 01       		.byte	0x1
 27587 0420 00       		.byte	0
 27588 0421 09       		.uleb128 0x9
 27589 0422 D3000000 		.4byte	0xd3
 27590 0426 31040000 		.4byte	0x431
 27591 042a 0A       		.uleb128 0xa
 27592 042b 18010000 		.4byte	0x118
 27593 042f 05       		.byte	0x5
 27594 0430 00       		.byte	0
 27595 0431 0E       		.uleb128 0xe
 27596 0432 C7050000 		.4byte	.LASF99
 27597 0436 04       		.byte	0x4
 27598 0437 08       		.byte	0x8
 27599 0438 FD       		.byte	0xfd
 27600 0439 4A040000 		.4byte	0x44a
 27601 043d 10       		.uleb128 0x10
 27602 043e 4F050000 		.4byte	.LASF100
 27603 0442 08       		.byte	0x8
 27604 0443 FE       		.byte	0xfe
 27605 0444 EB000000 		.4byte	0xeb
 27606 0448 00       		.byte	0
 27607 0449 00       		.byte	0
 27608 044a 11       		.uleb128 0x11
 27609 044b C2000000 		.4byte	.LASF101
 27610 044f 86       		.byte	0x86
 27611 0450 08       		.byte	0x8
 27612 0451 0501     		.2byte	0x105
 27613 0453 8C040000 		.4byte	0x48c
 27614 0457 12       		.uleb128 0x12
 27615 0458 8A060000 		.4byte	.LASF102
 27616 045c 08       		.byte	0x8
 27617 045d 0601     		.2byte	0x106
 27618 045f 8C040000 		.4byte	0x48c
 27619 0463 00       		.byte	0
 27620 0464 12       		.uleb128 0x12
 27621 0465 460E0000 		.4byte	.LASF103
 27622 0469 08       		.byte	0x8
 27623 046a 0701     		.2byte	0x107
 27624 046c C7000000 		.4byte	0xc7
 27625 0470 80       		.byte	0x80
 27626 0471 13       		.uleb128 0x13
 27627 0472 696E6400 		.ascii	"ind\000"
 27628 0476 08       		.byte	0x8
 27629 0477 0801     		.2byte	0x108
 27630 0479 C7000000 		.4byte	0xc7
 27631 047d 82       		.byte	0x82
 27632 047e 12       		.uleb128 0x12
 27633 047f 59020000 		.4byte	.LASF104
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 606


 27634 0483 08       		.byte	0x8
 27635 0484 0901     		.2byte	0x109
 27636 0486 97000000 		.4byte	0x97
 27637 048a 84       		.byte	0x84
 27638 048b 00       		.byte	0
 27639 048c 09       		.uleb128 0x9
 27640 048d 97000000 		.4byte	0x97
 27641 0491 9C040000 		.4byte	0x49c
 27642 0495 0A       		.uleb128 0xa
 27643 0496 18010000 		.4byte	0x118
 27644 049a 7F       		.byte	0x7f
 27645 049b 00       		.byte	0
 27646 049c 11       		.uleb128 0x11
 27647 049d 4E030000 		.4byte	.LASF105
 27648 04a1 50       		.byte	0x50
 27649 04a2 08       		.byte	0x8
 27650 04a3 1201     		.2byte	0x112
 27651 04a5 05050000 		.4byte	0x505
 27652 04a9 12       		.uleb128 0x12
 27653 04aa 89030000 		.4byte	.LASF106
 27654 04ae 08       		.byte	0x8
 27655 04af 1301     		.2byte	0x113
 27656 04b1 05050000 		.4byte	0x505
 27657 04b5 00       		.byte	0
 27658 04b6 12       		.uleb128 0x12
 27659 04b7 1B020000 		.4byte	.LASF107
 27660 04bb 08       		.byte	0x8
 27661 04bc 1401     		.2byte	0x114
 27662 04be 15050000 		.4byte	0x515
 27663 04c2 08       		.byte	0x8
 27664 04c3 12       		.uleb128 0x12
 27665 04c4 E40C0000 		.4byte	.LASF108
 27666 04c8 08       		.byte	0x8
 27667 04c9 1501     		.2byte	0x115
 27668 04cb 25050000 		.4byte	0x525
 27669 04cf 30       		.byte	0x30
 27670 04d0 12       		.uleb128 0x12
 27671 04d1 84010000 		.4byte	.LASF109
 27672 04d5 08       		.byte	0x8
 27673 04d6 1601     		.2byte	0x116
 27674 04d8 AF000000 		.4byte	0xaf
 27675 04dc 40       		.byte	0x40
 27676 04dd 12       		.uleb128 0x12
 27677 04de 52140000 		.4byte	.LASF110
 27678 04e2 08       		.byte	0x8
 27679 04e3 1701     		.2byte	0x117
 27680 04e5 AF000000 		.4byte	0xaf
 27681 04e9 44       		.byte	0x44
 27682 04ea 12       		.uleb128 0x12
 27683 04eb 35080000 		.4byte	.LASF111
 27684 04ef 08       		.byte	0x8
 27685 04f0 1801     		.2byte	0x118
 27686 04f2 AF000000 		.4byte	0xaf
 27687 04f6 48       		.byte	0x48
 27688 04f7 12       		.uleb128 0x12
 27689 04f8 7F080000 		.4byte	.LASF112
 27690 04fc 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 607


 27691 04fd 1901     		.2byte	0x119
 27692 04ff AF000000 		.4byte	0xaf
 27693 0503 4C       		.byte	0x4c
 27694 0504 00       		.byte	0
 27695 0505 09       		.uleb128 0x9
 27696 0506 AF000000 		.4byte	0xaf
 27697 050a 15050000 		.4byte	0x515
 27698 050e 0A       		.uleb128 0xa
 27699 050f 18010000 		.4byte	0x118
 27700 0513 01       		.byte	0x1
 27701 0514 00       		.byte	0
 27702 0515 09       		.uleb128 0x9
 27703 0516 AF000000 		.4byte	0xaf
 27704 051a 25050000 		.4byte	0x525
 27705 051e 0A       		.uleb128 0xa
 27706 051f 18010000 		.4byte	0x118
 27707 0523 09       		.byte	0x9
 27708 0524 00       		.byte	0
 27709 0525 09       		.uleb128 0x9
 27710 0526 AF000000 		.4byte	0xaf
 27711 052a 35050000 		.4byte	0x535
 27712 052e 0A       		.uleb128 0xa
 27713 052f 18010000 		.4byte	0x118
 27714 0533 03       		.byte	0x3
 27715 0534 00       		.byte	0
 27716 0535 11       		.uleb128 0x11
 27717 0536 31060000 		.4byte	.LASF113
 27718 053a 10       		.byte	0x10
 27719 053b 08       		.byte	0x8
 27720 053c 2001     		.2byte	0x120
 27721 053e C4050000 		.4byte	0x5c4
 27722 0542 13       		.uleb128 0x13
 27723 0543 696400   		.ascii	"id\000"
 27724 0546 08       		.byte	0x8
 27725 0547 2101     		.2byte	0x121
 27726 0549 97000000 		.4byte	0x97
 27727 054d 00       		.byte	0
 27728 054e 12       		.uleb128 0x12
 27729 054f 64110000 		.4byte	.LASF114
 27730 0553 08       		.byte	0x8
 27731 0554 2201     		.2byte	0x122
 27732 0556 C4050000 		.4byte	0x5c4
 27733 055a 01       		.byte	0x1
 27734 055b 12       		.uleb128 0x12
 27735 055c D4110000 		.4byte	.LASF115
 27736 0560 08       		.byte	0x8
 27737 0561 2301     		.2byte	0x123
 27738 0563 C4050000 		.4byte	0x5c4
 27739 0567 04       		.byte	0x4
 27740 0568 12       		.uleb128 0x12
 27741 0569 A2040000 		.4byte	.LASF116
 27742 056d 08       		.byte	0x8
 27743 056e 2401     		.2byte	0x124
 27744 0570 97000000 		.4byte	0x97
 27745 0574 07       		.byte	0x7
 27746 0575 12       		.uleb128 0x12
 27747 0576 FA020000 		.4byte	.LASF117
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 608


 27748 057a 08       		.byte	0x8
 27749 057b 2501     		.2byte	0x125
 27750 057d 97000000 		.4byte	0x97
 27751 0581 08       		.byte	0x8
 27752 0582 12       		.uleb128 0x12
 27753 0583 A4020000 		.4byte	.LASF118
 27754 0587 08       		.byte	0x8
 27755 0588 2601     		.2byte	0x126
 27756 058a 97000000 		.4byte	0x97
 27757 058e 09       		.byte	0x9
 27758 058f 12       		.uleb128 0x12
 27759 0590 19130000 		.4byte	.LASF119
 27760 0594 08       		.byte	0x8
 27761 0595 2701     		.2byte	0x127
 27762 0597 97000000 		.4byte	0x97
 27763 059b 0A       		.byte	0xa
 27764 059c 12       		.uleb128 0x12
 27765 059d DD120000 		.4byte	.LASF120
 27766 05a1 08       		.byte	0x8
 27767 05a2 2801     		.2byte	0x128
 27768 05a4 97000000 		.4byte	0x97
 27769 05a8 0B       		.byte	0xb
 27770 05a9 12       		.uleb128 0x12
 27771 05aa B40F0000 		.4byte	.LASF121
 27772 05ae 08       		.byte	0x8
 27773 05af 2901     		.2byte	0x129
 27774 05b1 97000000 		.4byte	0x97
 27775 05b5 0C       		.byte	0xc
 27776 05b6 12       		.uleb128 0x12
 27777 05b7 2B030000 		.4byte	.LASF122
 27778 05bb 08       		.byte	0x8
 27779 05bc 2A01     		.2byte	0x12a
 27780 05be C4050000 		.4byte	0x5c4
 27781 05c2 0D       		.byte	0xd
 27782 05c3 00       		.byte	0
 27783 05c4 09       		.uleb128 0x9
 27784 05c5 97000000 		.4byte	0x97
 27785 05c9 D4050000 		.4byte	0x5d4
 27786 05cd 0A       		.uleb128 0xa
 27787 05ce 18010000 		.4byte	0x118
 27788 05d2 02       		.byte	0x2
 27789 05d3 00       		.byte	0
 27790 05d4 11       		.uleb128 0x11
 27791 05d5 EA130000 		.4byte	.LASF123
 27792 05d9 70       		.byte	0x70
 27793 05da 08       		.byte	0x8
 27794 05db 3101     		.2byte	0x131
 27795 05dd 4E070000 		.4byte	0x74e
 27796 05e1 13       		.uleb128 0x13
 27797 05e2 6B5F7000 		.ascii	"k_p\000"
 27798 05e6 08       		.byte	0x8
 27799 05e7 3201     		.2byte	0x132
 27800 05e9 D3000000 		.4byte	0xd3
 27801 05ed 00       		.byte	0
 27802 05ee 13       		.uleb128 0x13
 27803 05ef 6B5F6900 		.ascii	"k_i\000"
 27804 05f3 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 609


 27805 05f4 3301     		.2byte	0x133
 27806 05f6 D3000000 		.4byte	0xd3
 27807 05fa 04       		.byte	0x4
 27808 05fb 13       		.uleb128 0x13
 27809 05fc 6B5F6400 		.ascii	"k_d\000"
 27810 0600 08       		.byte	0x8
 27811 0601 3401     		.2byte	0x134
 27812 0603 D3000000 		.4byte	0xd3
 27813 0607 08       		.byte	0x8
 27814 0608 12       		.uleb128 0x12
 27815 0609 C00E0000 		.4byte	.LASF124
 27816 060d 08       		.byte	0x8
 27817 060e 3501     		.2byte	0x135
 27818 0610 D3000000 		.4byte	0xd3
 27819 0614 0C       		.byte	0xc
 27820 0615 12       		.uleb128 0x12
 27821 0616 E7050000 		.4byte	.LASF125
 27822 061a 08       		.byte	0x8
 27823 061b 3601     		.2byte	0x136
 27824 061d D3000000 		.4byte	0xd3
 27825 0621 10       		.byte	0x10
 27826 0622 12       		.uleb128 0x12
 27827 0623 C1050000 		.4byte	.LASF126
 27828 0627 08       		.byte	0x8
 27829 0628 3701     		.2byte	0x137
 27830 062a D3000000 		.4byte	0xd3
 27831 062e 14       		.byte	0x14
 27832 062f 12       		.uleb128 0x12
 27833 0630 80120000 		.4byte	.LASF127
 27834 0634 08       		.byte	0x8
 27835 0635 3801     		.2byte	0x138
 27836 0637 D3000000 		.4byte	0xd3
 27837 063b 18       		.byte	0x18
 27838 063c 12       		.uleb128 0x12
 27839 063d 74060000 		.4byte	.LASF128
 27840 0641 08       		.byte	0x8
 27841 0642 3901     		.2byte	0x139
 27842 0644 D3000000 		.4byte	0xd3
 27843 0648 1C       		.byte	0x1c
 27844 0649 12       		.uleb128 0x12
 27845 064a 26110000 		.4byte	.LASF129
 27846 064e 08       		.byte	0x8
 27847 064f 3A01     		.2byte	0x13a
 27848 0651 D3000000 		.4byte	0xd3
 27849 0655 20       		.byte	0x20
 27850 0656 12       		.uleb128 0x12
 27851 0657 91060000 		.4byte	.LASF130
 27852 065b 08       		.byte	0x8
 27853 065c 3B01     		.2byte	0x13b
 27854 065e D3000000 		.4byte	0xd3
 27855 0662 24       		.byte	0x24
 27856 0663 12       		.uleb128 0x12
 27857 0664 70070000 		.4byte	.LASF131
 27858 0668 08       		.byte	0x8
 27859 0669 3C01     		.2byte	0x13c
 27860 066b D3000000 		.4byte	0xd3
 27861 066f 28       		.byte	0x28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 610


 27862 0670 12       		.uleb128 0x12
 27863 0671 01150000 		.4byte	.LASF132
 27864 0675 08       		.byte	0x8
 27865 0676 3D01     		.2byte	0x13d
 27866 0678 D3000000 		.4byte	0xd3
 27867 067c 2C       		.byte	0x2c
 27868 067d 12       		.uleb128 0x12
 27869 067e 9B080000 		.4byte	.LASF133
 27870 0682 08       		.byte	0x8
 27871 0683 3E01     		.2byte	0x13e
 27872 0685 97000000 		.4byte	0x97
 27873 0689 30       		.byte	0x30
 27874 068a 12       		.uleb128 0x12
 27875 068b 69120000 		.4byte	.LASF134
 27876 068f 08       		.byte	0x8
 27877 0690 3F01     		.2byte	0x13f
 27878 0692 97000000 		.4byte	0x97
 27879 0696 31       		.byte	0x31
 27880 0697 12       		.uleb128 0x12
 27881 0698 E00E0000 		.4byte	.LASF135
 27882 069c 08       		.byte	0x8
 27883 069d 4001     		.2byte	0x140
 27884 069f 97000000 		.4byte	0x97
 27885 06a3 32       		.byte	0x32
 27886 06a4 12       		.uleb128 0x12
 27887 06a5 07140000 		.4byte	.LASF136
 27888 06a9 08       		.byte	0x8
 27889 06aa 4101     		.2byte	0x141
 27890 06ac 97000000 		.4byte	0x97
 27891 06b0 33       		.byte	0x33
 27892 06b1 12       		.uleb128 0x12
 27893 06b2 38010000 		.4byte	.LASF137
 27894 06b6 08       		.byte	0x8
 27895 06b7 4201     		.2byte	0x142
 27896 06b9 D3000000 		.4byte	0xd3
 27897 06bd 34       		.byte	0x34
 27898 06be 12       		.uleb128 0x12
 27899 06bf 06060000 		.4byte	.LASF138
 27900 06c3 08       		.byte	0x8
 27901 06c4 4301     		.2byte	0x143
 27902 06c6 D3000000 		.4byte	0xd3
 27903 06ca 38       		.byte	0x38
 27904 06cb 12       		.uleb128 0x12
 27905 06cc E10A0000 		.4byte	.LASF139
 27906 06d0 08       		.byte	0x8
 27907 06d1 4401     		.2byte	0x144
 27908 06d3 D3000000 		.4byte	0xd3
 27909 06d7 3C       		.byte	0x3c
 27910 06d8 12       		.uleb128 0x12
 27911 06d9 6E050000 		.4byte	.LASF140
 27912 06dd 08       		.byte	0x8
 27913 06de 4501     		.2byte	0x145
 27914 06e0 D3000000 		.4byte	0xd3
 27915 06e4 40       		.byte	0x40
 27916 06e5 12       		.uleb128 0x12
 27917 06e6 78010000 		.4byte	.LASF141
 27918 06ea 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 611


 27919 06eb 4601     		.2byte	0x146
 27920 06ed 4E070000 		.4byte	0x74e
 27921 06f1 44       		.byte	0x44
 27922 06f2 12       		.uleb128 0x12
 27923 06f3 97140000 		.4byte	.LASF142
 27924 06f7 08       		.byte	0x8
 27925 06f8 4701     		.2byte	0x147
 27926 06fa C7000000 		.4byte	0xc7
 27927 06fe 5C       		.byte	0x5c
 27928 06ff 12       		.uleb128 0x12
 27929 0700 E8080000 		.4byte	.LASF143
 27930 0704 08       		.byte	0x8
 27931 0705 4801     		.2byte	0x148
 27932 0707 97000000 		.4byte	0x97
 27933 070b 5E       		.byte	0x5e
 27934 070c 12       		.uleb128 0x12
 27935 070d E60B0000 		.4byte	.LASF144
 27936 0711 08       		.byte	0x8
 27937 0712 4901     		.2byte	0x149
 27938 0714 97000000 		.4byte	0x97
 27939 0718 5F       		.byte	0x5f
 27940 0719 12       		.uleb128 0x12
 27941 071a C6040000 		.4byte	.LASF145
 27942 071e 08       		.byte	0x8
 27943 071f 4A01     		.2byte	0x14a
 27944 0721 97000000 		.4byte	0x97
 27945 0725 60       		.byte	0x60
 27946 0726 12       		.uleb128 0x12
 27947 0727 B0050000 		.4byte	.LASF146
 27948 072b 08       		.byte	0x8
 27949 072c 4B01     		.2byte	0x14b
 27950 072e 97000000 		.4byte	0x97
 27951 0732 61       		.byte	0x61
 27952 0733 12       		.uleb128 0x12
 27953 0734 83040000 		.4byte	.LASF147
 27954 0738 08       		.byte	0x8
 27955 0739 4C01     		.2byte	0x14c
 27956 073b 97000000 		.4byte	0x97
 27957 073f 62       		.byte	0x62
 27958 0740 12       		.uleb128 0x12
 27959 0741 2B030000 		.4byte	.LASF122
 27960 0745 08       		.byte	0x8
 27961 0746 4D01     		.2byte	0x14d
 27962 0748 5E070000 		.4byte	0x75e
 27963 074c 63       		.byte	0x63
 27964 074d 00       		.byte	0
 27965 074e 09       		.uleb128 0x9
 27966 074f EB000000 		.4byte	0xeb
 27967 0753 5E070000 		.4byte	0x75e
 27968 0757 0A       		.uleb128 0xa
 27969 0758 18010000 		.4byte	0x118
 27970 075c 05       		.byte	0x5
 27971 075d 00       		.byte	0
 27972 075e 09       		.uleb128 0x9
 27973 075f 97000000 		.4byte	0x97
 27974 0763 6E070000 		.4byte	0x76e
 27975 0767 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 612


 27976 0768 18010000 		.4byte	0x118
 27977 076c 0C       		.byte	0xc
 27978 076d 00       		.byte	0
 27979 076e 11       		.uleb128 0x11
 27980 076f 80130000 		.4byte	.LASF148
 27981 0773 30       		.byte	0x30
 27982 0774 08       		.byte	0x8
 27983 0775 5401     		.2byte	0x154
 27984 0777 F1070000 		.4byte	0x7f1
 27985 077b 12       		.uleb128 0x12
 27986 077c C30A0000 		.4byte	.LASF149
 27987 0780 08       		.byte	0x8
 27988 0781 5501     		.2byte	0x155
 27989 0783 F1070000 		.4byte	0x7f1
 27990 0787 00       		.byte	0
 27991 0788 13       		.uleb128 0x13
 27992 0789 72657300 		.ascii	"res\000"
 27993 078d 08       		.byte	0x8
 27994 078e 5601     		.2byte	0x156
 27995 0790 C4050000 		.4byte	0x5c4
 27996 0794 05       		.byte	0x5
 27997 0795 12       		.uleb128 0x12
 27998 0796 AA080000 		.4byte	.LASF150
 27999 079a 08       		.byte	0x8
 28000 079b 5701     		.2byte	0x157
 28001 079d C0030000 		.4byte	0x3c0
 28002 07a1 08       		.byte	0x8
 28003 07a2 12       		.uleb128 0x12
 28004 07a3 E0050000 		.4byte	.LASF151
 28005 07a7 08       		.byte	0x8
 28006 07a8 5801     		.2byte	0x158
 28007 07aa 01080000 		.4byte	0x801
 28008 07ae 14       		.byte	0x14
 28009 07af 12       		.uleb128 0x12
 28010 07b0 8D0D0000 		.4byte	.LASF152
 28011 07b4 08       		.byte	0x8
 28012 07b5 5901     		.2byte	0x159
 28013 07b7 97000000 		.4byte	0x97
 28014 07bb 20       		.byte	0x20
 28015 07bc 12       		.uleb128 0x12
 28016 07bd 5F020000 		.4byte	.LASF153
 28017 07c1 08       		.byte	0x8
 28018 07c2 5A01     		.2byte	0x15a
 28019 07c4 C4050000 		.4byte	0x5c4
 28020 07c8 21       		.byte	0x21
 28021 07c9 12       		.uleb128 0x12
 28022 07ca 400D0000 		.4byte	.LASF154
 28023 07ce 08       		.byte	0x8
 28024 07cf 5B01     		.2byte	0x15b
 28025 07d1 BB000000 		.4byte	0xbb
 28026 07d5 24       		.byte	0x24
 28027 07d6 12       		.uleb128 0x12
 28028 07d7 DB0F0000 		.4byte	.LASF155
 28029 07db 08       		.byte	0x8
 28030 07dc 5C01     		.2byte	0x15c
 28031 07de D0030000 		.4byte	0x3d0
 28032 07e2 25       		.byte	0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 613


 28033 07e3 12       		.uleb128 0x12
 28034 07e4 2B030000 		.4byte	.LASF122
 28035 07e8 08       		.byte	0x8
 28036 07e9 5D01     		.2byte	0x15d
 28037 07eb 11080000 		.4byte	0x811
 28038 07ef 28       		.byte	0x28
 28039 07f0 00       		.byte	0
 28040 07f1 09       		.uleb128 0x9
 28041 07f2 97000000 		.4byte	0x97
 28042 07f6 01080000 		.4byte	0x801
 28043 07fa 0A       		.uleb128 0xa
 28044 07fb 18010000 		.4byte	0x118
 28045 07ff 04       		.byte	0x4
 28046 0800 00       		.byte	0
 28047 0801 09       		.uleb128 0x9
 28048 0802 DF000000 		.4byte	0xdf
 28049 0806 11080000 		.4byte	0x811
 28050 080a 0A       		.uleb128 0xa
 28051 080b 18010000 		.4byte	0x118
 28052 080f 02       		.byte	0x2
 28053 0810 00       		.byte	0
 28054 0811 09       		.uleb128 0x9
 28055 0812 97000000 		.4byte	0x97
 28056 0816 21080000 		.4byte	0x821
 28057 081a 0A       		.uleb128 0xa
 28058 081b 18010000 		.4byte	0x118
 28059 081f 07       		.byte	0x7
 28060 0820 00       		.byte	0
 28061 0821 11       		.uleb128 0x11
 28062 0822 14020000 		.4byte	.LASF156
 28063 0826 10       		.byte	0x10
 28064 0827 08       		.byte	0x8
 28065 0828 6401     		.2byte	0x164
 28066 082a 70080000 		.4byte	0x870
 28067 082e 12       		.uleb128 0x12
 28068 082f C40C0000 		.4byte	.LASF157
 28069 0833 08       		.byte	0x8
 28070 0834 6501     		.2byte	0x165
 28071 0836 70080000 		.4byte	0x870
 28072 083a 00       		.byte	0
 28073 083b 12       		.uleb128 0x12
 28074 083c 5C140000 		.4byte	.LASF158
 28075 0840 08       		.byte	0x8
 28076 0841 6601     		.2byte	0x166
 28077 0843 05050000 		.4byte	0x505
 28078 0847 04       		.byte	0x4
 28079 0848 12       		.uleb128 0x12
 28080 0849 12060000 		.4byte	.LASF159
 28081 084d 08       		.byte	0x8
 28082 084e 6701     		.2byte	0x167
 28083 0850 80080000 		.4byte	0x880
 28084 0854 0C       		.byte	0xc
 28085 0855 12       		.uleb128 0x12
 28086 0856 F50F0000 		.4byte	.LASF160
 28087 085a 08       		.byte	0x8
 28088 085b 6801     		.2byte	0x168
 28089 085d 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 614


 28090 0861 0E       		.byte	0xe
 28091 0862 12       		.uleb128 0x12
 28092 0863 5E120000 		.4byte	.LASF161
 28093 0867 08       		.byte	0x8
 28094 0868 6901     		.2byte	0x169
 28095 086a 97000000 		.4byte	0x97
 28096 086e 0F       		.byte	0xf
 28097 086f 00       		.byte	0
 28098 0870 09       		.uleb128 0x9
 28099 0871 A3000000 		.4byte	0xa3
 28100 0875 80080000 		.4byte	0x880
 28101 0879 0A       		.uleb128 0xa
 28102 087a 18010000 		.4byte	0x118
 28103 087e 01       		.byte	0x1
 28104 087f 00       		.byte	0
 28105 0880 09       		.uleb128 0x9
 28106 0881 97000000 		.4byte	0x97
 28107 0885 90080000 		.4byte	0x890
 28108 0889 0A       		.uleb128 0xa
 28109 088a 18010000 		.4byte	0x118
 28110 088e 01       		.byte	0x1
 28111 088f 00       		.byte	0
 28112 0890 11       		.uleb128 0x11
 28113 0891 2E0C0000 		.4byte	.LASF162
 28114 0895 20       		.byte	0x20
 28115 0896 08       		.byte	0x8
 28116 0897 7001     		.2byte	0x170
 28117 0899 D2080000 		.4byte	0x8d2
 28118 089d 12       		.uleb128 0x12
 28119 089e BF020000 		.4byte	.LASF163
 28120 08a2 08       		.byte	0x8
 28121 08a3 7101     		.2byte	0x171
 28122 08a5 97000000 		.4byte	0x97
 28123 08a9 00       		.byte	0
 28124 08aa 12       		.uleb128 0x12
 28125 08ab AF0D0000 		.4byte	.LASF164
 28126 08af 08       		.byte	0x8
 28127 08b0 7201     		.2byte	0x172
 28128 08b2 97000000 		.4byte	0x97
 28129 08b6 01       		.byte	0x1
 28130 08b7 12       		.uleb128 0x12
 28131 08b8 240B0000 		.4byte	.LASF165
 28132 08bc 08       		.byte	0x8
 28133 08bd 7301     		.2byte	0x173
 28134 08bf D2080000 		.4byte	0x8d2
 28135 08c3 02       		.byte	0x2
 28136 08c4 12       		.uleb128 0x12
 28137 08c5 2B030000 		.4byte	.LASF122
 28138 08c9 08       		.byte	0x8
 28139 08ca 7401     		.2byte	0x174
 28140 08cc F1070000 		.4byte	0x7f1
 28141 08d0 1B       		.byte	0x1b
 28142 08d1 00       		.byte	0
 28143 08d2 09       		.uleb128 0x9
 28144 08d3 97000000 		.4byte	0x97
 28145 08d7 E8080000 		.4byte	0x8e8
 28146 08db 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 615


 28147 08dc 18010000 		.4byte	0x118
 28148 08e0 04       		.byte	0x4
 28149 08e1 0A       		.uleb128 0xa
 28150 08e2 18010000 		.4byte	0x118
 28151 08e6 04       		.byte	0x4
 28152 08e7 00       		.byte	0
 28153 08e8 11       		.uleb128 0x11
 28154 08e9 E80F0000 		.4byte	.LASF166
 28155 08ed 20       		.byte	0x20
 28156 08ee 08       		.byte	0x8
 28157 08ef 7B01     		.2byte	0x17b
 28158 08f1 37090000 		.4byte	0x937
 28159 08f5 12       		.uleb128 0x12
 28160 08f6 830D0000 		.4byte	.LASF167
 28161 08fa 08       		.byte	0x8
 28162 08fb 7C01     		.2byte	0x17c
 28163 08fd 37090000 		.4byte	0x937
 28164 0901 00       		.byte	0
 28165 0902 12       		.uleb128 0x12
 28166 0903 4B120000 		.4byte	.LASF168
 28167 0907 08       		.byte	0x8
 28168 0908 7D01     		.2byte	0x17d
 28169 090a 97000000 		.4byte	0x97
 28170 090e 06       		.byte	0x6
 28171 090f 12       		.uleb128 0x12
 28172 0910 A0120000 		.4byte	.LASF169
 28173 0914 08       		.byte	0x8
 28174 0915 7E01     		.2byte	0x17e
 28175 0917 97000000 		.4byte	0x97
 28176 091b 07       		.byte	0x7
 28177 091c 12       		.uleb128 0x12
 28178 091d 41060000 		.4byte	.LASF170
 28179 0921 08       		.byte	0x8
 28180 0922 7F01     		.2byte	0x17f
 28181 0924 47090000 		.4byte	0x947
 28182 0928 08       		.byte	0x8
 28183 0929 12       		.uleb128 0x12
 28184 092a 2B030000 		.4byte	.LASF122
 28185 092e 08       		.byte	0x8
 28186 092f 8001     		.2byte	0x180
 28187 0931 47090000 		.4byte	0x947
 28188 0935 14       		.byte	0x14
 28189 0936 00       		.byte	0
 28190 0937 09       		.uleb128 0x9
 28191 0938 97000000 		.4byte	0x97
 28192 093c 47090000 		.4byte	0x947
 28193 0940 0A       		.uleb128 0xa
 28194 0941 18010000 		.4byte	0x118
 28195 0945 05       		.byte	0x5
 28196 0946 00       		.byte	0
 28197 0947 09       		.uleb128 0x9
 28198 0948 97000000 		.4byte	0x97
 28199 094c 57090000 		.4byte	0x957
 28200 0950 0A       		.uleb128 0xa
 28201 0951 18010000 		.4byte	0x118
 28202 0955 0B       		.byte	0xb
 28203 0956 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 616


 28204 0957 11       		.uleb128 0x11
 28205 0958 BD0F0000 		.4byte	.LASF171
 28206 095c 20       		.byte	0x20
 28207 095d 08       		.byte	0x8
 28208 095e 8701     		.2byte	0x187
 28209 0960 8C090000 		.4byte	0x98c
 28210 0964 12       		.uleb128 0x12
 28211 0965 00040000 		.4byte	.LASF172
 28212 0969 08       		.byte	0x8
 28213 096a 8801     		.2byte	0x188
 28214 096c 40010000 		.4byte	0x140
 28215 0970 00       		.byte	0
 28216 0971 12       		.uleb128 0x12
 28217 0972 09030000 		.4byte	.LASF173
 28218 0976 08       		.byte	0x8
 28219 0977 8901     		.2byte	0x189
 28220 0979 21080000 		.4byte	0x821
 28221 097d 08       		.byte	0x8
 28222 097e 12       		.uleb128 0x12
 28223 097f 2B030000 		.4byte	.LASF122
 28224 0983 08       		.byte	0x8
 28225 0984 8A01     		.2byte	0x18a
 28226 0986 11080000 		.4byte	0x811
 28227 098a 18       		.byte	0x18
 28228 098b 00       		.byte	0
 28229 098c 11       		.uleb128 0x11
 28230 098d 310A0000 		.4byte	.LASF174
 28231 0991 10       		.byte	0x10
 28232 0992 08       		.byte	0x8
 28233 0993 9101     		.2byte	0x191
 28234 0995 DB090000 		.4byte	0x9db
 28235 0999 12       		.uleb128 0x12
 28236 099a DA080000 		.4byte	.LASF175
 28237 099e 08       		.byte	0x8
 28238 099f 9201     		.2byte	0x192
 28239 09a1 D3000000 		.4byte	0xd3
 28240 09a5 00       		.byte	0
 28241 09a6 12       		.uleb128 0x12
 28242 09a7 E5140000 		.4byte	.LASF176
 28243 09ab 08       		.byte	0x8
 28244 09ac 9301     		.2byte	0x193
 28245 09ae D3000000 		.4byte	0xd3
 28246 09b2 04       		.byte	0x4
 28247 09b3 12       		.uleb128 0x12
 28248 09b4 1C060000 		.4byte	.LASF177
 28249 09b8 08       		.byte	0x8
 28250 09b9 9401     		.2byte	0x194
 28251 09bb D3000000 		.4byte	0xd3
 28252 09bf 08       		.byte	0x8
 28253 09c0 12       		.uleb128 0x12
 28254 09c1 46070000 		.4byte	.LASF178
 28255 09c5 08       		.byte	0x8
 28256 09c6 9501     		.2byte	0x195
 28257 09c8 97000000 		.4byte	0x97
 28258 09cc 0C       		.byte	0xc
 28259 09cd 12       		.uleb128 0x12
 28260 09ce 2B030000 		.4byte	.LASF122
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 617


 28261 09d2 08       		.byte	0x8
 28262 09d3 9601     		.2byte	0x196
 28263 09d5 C4050000 		.4byte	0x5c4
 28264 09d9 0D       		.byte	0xd
 28265 09da 00       		.byte	0
 28266 09db 11       		.uleb128 0x11
 28267 09dc EE100000 		.4byte	.LASF179
 28268 09e0 10       		.byte	0x10
 28269 09e1 08       		.byte	0x8
 28270 09e2 9D01     		.2byte	0x19d
 28271 09e4 1D0A0000 		.4byte	0xa1d
 28272 09e8 12       		.uleb128 0x12
 28273 09e9 59070000 		.4byte	.LASF180
 28274 09ed 08       		.byte	0x8
 28275 09ee 9E01     		.2byte	0x19e
 28276 09f0 A3000000 		.4byte	0xa3
 28277 09f4 00       		.byte	0
 28278 09f5 12       		.uleb128 0x12
 28279 09f6 22100000 		.4byte	.LASF181
 28280 09fa 08       		.byte	0x8
 28281 09fb 9F01     		.2byte	0x19f
 28282 09fd C7000000 		.4byte	0xc7
 28283 0a01 02       		.byte	0x2
 28284 0a02 12       		.uleb128 0x12
 28285 0a03 52080000 		.4byte	.LASF182
 28286 0a07 08       		.byte	0x8
 28287 0a08 A001     		.2byte	0x1a0
 28288 0a0a 70080000 		.4byte	0x870
 28289 0a0e 04       		.byte	0x4
 28290 0a0f 12       		.uleb128 0x12
 28291 0a10 2B030000 		.4byte	.LASF122
 28292 0a14 08       		.byte	0x8
 28293 0a15 A101     		.2byte	0x1a1
 28294 0a17 11080000 		.4byte	0x811
 28295 0a1b 08       		.byte	0x8
 28296 0a1c 00       		.byte	0
 28297 0a1d 11       		.uleb128 0x11
 28298 0a1e A6010000 		.4byte	.LASF183
 28299 0a22 10       		.byte	0x10
 28300 0a23 08       		.byte	0x8
 28301 0a24 A801     		.2byte	0x1a8
 28302 0a26 520A0000 		.4byte	0xa52
 28303 0a2a 12       		.uleb128 0x12
 28304 0a2b 7A0F0000 		.4byte	.LASF184
 28305 0a2f 08       		.byte	0x8
 28306 0a30 A901     		.2byte	0x1a9
 28307 0a32 97000000 		.4byte	0x97
 28308 0a36 00       		.byte	0
 28309 0a37 12       		.uleb128 0x12
 28310 0a38 EE0A0000 		.4byte	.LASF185
 28311 0a3c 08       		.byte	0x8
 28312 0a3d AA01     		.2byte	0x1aa
 28313 0a3f 97000000 		.4byte	0x97
 28314 0a43 01       		.byte	0x1
 28315 0a44 12       		.uleb128 0x12
 28316 0a45 2B030000 		.4byte	.LASF122
 28317 0a49 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 618


 28318 0a4a AB01     		.2byte	0x1ab
 28319 0a4c 520A0000 		.4byte	0xa52
 28320 0a50 02       		.byte	0x2
 28321 0a51 00       		.byte	0
 28322 0a52 09       		.uleb128 0x9
 28323 0a53 97000000 		.4byte	0x97
 28324 0a57 620A0000 		.4byte	0xa62
 28325 0a5b 0A       		.uleb128 0xa
 28326 0a5c 18010000 		.4byte	0x118
 28327 0a60 0D       		.byte	0xd
 28328 0a61 00       		.byte	0
 28329 0a62 11       		.uleb128 0x11
 28330 0a63 190D0000 		.4byte	.LASF186
 28331 0a67 10       		.byte	0x10
 28332 0a68 08       		.byte	0x8
 28333 0a69 B201     		.2byte	0x1b2
 28334 0a6b A40A0000 		.4byte	0xaa4
 28335 0a6f 12       		.uleb128 0x12
 28336 0a70 96130000 		.4byte	.LASF187
 28337 0a74 08       		.byte	0x8
 28338 0a75 B301     		.2byte	0x1b3
 28339 0a77 D3000000 		.4byte	0xd3
 28340 0a7b 00       		.byte	0
 28341 0a7c 12       		.uleb128 0x12
 28342 0a7d 31070000 		.4byte	.LASF188
 28343 0a81 08       		.byte	0x8
 28344 0a82 B401     		.2byte	0x1b4
 28345 0a84 EB000000 		.4byte	0xeb
 28346 0a88 04       		.byte	0x4
 28347 0a89 12       		.uleb128 0x12
 28348 0a8a 130F0000 		.4byte	.LASF189
 28349 0a8e 08       		.byte	0x8
 28350 0a8f B501     		.2byte	0x1b5
 28351 0a91 EB000000 		.4byte	0xeb
 28352 0a95 08       		.byte	0x8
 28353 0a96 12       		.uleb128 0x12
 28354 0a97 2B030000 		.4byte	.LASF122
 28355 0a9b 08       		.byte	0x8
 28356 0a9c B601     		.2byte	0x1b6
 28357 0a9e A40A0000 		.4byte	0xaa4
 28358 0aa2 0C       		.byte	0xc
 28359 0aa3 00       		.byte	0
 28360 0aa4 09       		.uleb128 0x9
 28361 0aa5 97000000 		.4byte	0x97
 28362 0aa9 B40A0000 		.4byte	0xab4
 28363 0aad 0A       		.uleb128 0xa
 28364 0aae 18010000 		.4byte	0x118
 28365 0ab2 03       		.byte	0x3
 28366 0ab3 00       		.byte	0
 28367 0ab4 11       		.uleb128 0x11
 28368 0ab5 4E020000 		.4byte	.LASF190
 28369 0ab9 12       		.byte	0x12
 28370 0aba 08       		.byte	0x8
 28371 0abb BD01     		.2byte	0x1bd
 28372 0abd F60A0000 		.4byte	0xaf6
 28373 0ac1 12       		.uleb128 0x12
 28374 0ac2 BD140000 		.4byte	.LASF191
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 619


 28375 0ac6 08       		.byte	0x8
 28376 0ac7 BE01     		.2byte	0x1be
 28377 0ac9 97000000 		.4byte	0x97
 28378 0acd 00       		.byte	0
 28379 0ace 12       		.uleb128 0x12
 28380 0acf 29130000 		.4byte	.LASF192
 28381 0ad3 08       		.byte	0x8
 28382 0ad4 BF01     		.2byte	0x1bf
 28383 0ad6 70080000 		.4byte	0x870
 28384 0ada 02       		.byte	0x2
 28385 0adb 12       		.uleb128 0x12
 28386 0adc 44000000 		.4byte	.LASF193
 28387 0ae0 08       		.byte	0x8
 28388 0ae1 C001     		.2byte	0x1c0
 28389 0ae3 97000000 		.4byte	0x97
 28390 0ae7 06       		.byte	0x6
 28391 0ae8 12       		.uleb128 0x12
 28392 0ae9 2B030000 		.4byte	.LASF122
 28393 0aed 08       		.byte	0x8
 28394 0aee C101     		.2byte	0x1c1
 28395 0af0 F60A0000 		.4byte	0xaf6
 28396 0af4 07       		.byte	0x7
 28397 0af5 00       		.byte	0
 28398 0af6 09       		.uleb128 0x9
 28399 0af7 97000000 		.4byte	0x97
 28400 0afb 060B0000 		.4byte	0xb06
 28401 0aff 0A       		.uleb128 0xa
 28402 0b00 18010000 		.4byte	0x118
 28403 0b04 09       		.byte	0x9
 28404 0b05 00       		.byte	0
 28405 0b06 14       		.uleb128 0x14
 28406 0b07 B1130000 		.4byte	.LASF194
 28407 0b0b F402     		.2byte	0x2f4
 28408 0b0d 08       		.byte	0x8
 28409 0b0e CA01     		.2byte	0x1ca
 28410 0b10 EB0B0000 		.4byte	0xbeb
 28411 0b14 12       		.uleb128 0x12
 28412 0b15 D20B0000 		.4byte	.LASF195
 28413 0b19 08       		.byte	0x8
 28414 0b1a CC01     		.2byte	0x1cc
 28415 0b1c 97000000 		.4byte	0x97
 28416 0b20 00       		.byte	0
 28417 0b21 12       		.uleb128 0x12
 28418 0b22 2B030000 		.4byte	.LASF122
 28419 0b26 08       		.byte	0x8
 28420 0b27 CD01     		.2byte	0x1cd
 28421 0b29 EB0B0000 		.4byte	0xbeb
 28422 0b2d 01       		.byte	0x1
 28423 0b2e 13       		.uleb128 0x13
 28424 0b2f 636E7400 		.ascii	"cnt\000"
 28425 0b33 08       		.byte	0x8
 28426 0b34 CE01     		.2byte	0x1ce
 28427 0b36 9C040000 		.4byte	0x49c
 28428 0b3a 10       		.byte	0x10
 28429 0b3b 12       		.uleb128 0x12
 28430 0b3c E2020000 		.4byte	.LASF196
 28431 0b40 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 620


 28432 0b41 CF01     		.2byte	0x1cf
 28433 0b43 FB0B0000 		.4byte	0xbfb
 28434 0b47 60       		.byte	0x60
 28435 0b48 13       		.uleb128 0x13
 28436 0b49 64657600 		.ascii	"dev\000"
 28437 0b4d 08       		.byte	0x8
 28438 0b4e D001     		.2byte	0x1d0
 28439 0b50 35050000 		.4byte	0x535
 28440 0b54 A0       		.byte	0xa0
 28441 0b55 12       		.uleb128 0x12
 28442 0b56 3F110000 		.4byte	.LASF197
 28443 0b5a 08       		.byte	0x8
 28444 0b5b D101     		.2byte	0x1d1
 28445 0b5d 0B0C0000 		.4byte	0xc0b
 28446 0b61 B0       		.byte	0xb0
 28447 0b62 15       		.uleb128 0x15
 28448 0b63 656E6300 		.ascii	"enc\000"
 28449 0b67 08       		.byte	0x8
 28450 0b68 D201     		.2byte	0x1d2
 28451 0b6a 1B0C0000 		.4byte	0xc1b
 28452 0b6e 9001     		.2byte	0x190
 28453 0b70 15       		.uleb128 0x15
 28454 0b71 656D6700 		.ascii	"emg\000"
 28455 0b75 08       		.byte	0x8
 28456 0b76 D301     		.2byte	0x1d3
 28457 0b78 21080000 		.4byte	0x821
 28458 0b7c F001     		.2byte	0x1f0
 28459 0b7e 15       		.uleb128 0x15
 28460 0b7f 696D7500 		.ascii	"imu\000"
 28461 0b83 08       		.byte	0x8
 28462 0b84 D401     		.2byte	0x1d4
 28463 0b86 90080000 		.4byte	0x890
 28464 0b8a 0002     		.2byte	0x200
 28465 0b8c 15       		.uleb128 0x15
 28466 0b8d 65787000 		.ascii	"exp\000"
 28467 0b91 08       		.byte	0x8
 28468 0b92 D501     		.2byte	0x1d5
 28469 0b94 E8080000 		.4byte	0x8e8
 28470 0b98 2002     		.2byte	0x220
 28471 0b9a 16       		.uleb128 0x16
 28472 0b9b 85000000 		.4byte	.LASF198
 28473 0b9f 08       		.byte	0x8
 28474 0ba0 D601     		.2byte	0x1d6
 28475 0ba2 2B0C0000 		.4byte	0xc2b
 28476 0ba6 4002     		.2byte	0x240
 28477 0ba8 15       		.uleb128 0x15
 28478 0ba9 534800   		.ascii	"SH\000"
 28479 0bac 08       		.byte	0x8
 28480 0bad D801     		.2byte	0x1d8
 28481 0baf 8C090000 		.4byte	0x98c
 28482 0bb3 A002     		.2byte	0x2a0
 28483 0bb5 16       		.uleb128 0x16
 28484 0bb6 1A010000 		.4byte	.LASF199
 28485 0bba 08       		.byte	0x8
 28486 0bbb D901     		.2byte	0x1d9
 28487 0bbd DB090000 		.4byte	0x9db
 28488 0bc1 B002     		.2byte	0x2b0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 621


 28489 0bc3 15       		.uleb128 0x15
 28490 0bc4 4D5300   		.ascii	"MS\000"
 28491 0bc7 08       		.byte	0x8
 28492 0bc8 DA01     		.2byte	0x1da
 28493 0bca 1D0A0000 		.4byte	0xa1d
 28494 0bce C002     		.2byte	0x2c0
 28495 0bd0 15       		.uleb128 0x15
 28496 0bd1 464200   		.ascii	"FB\000"
 28497 0bd4 08       		.byte	0x8
 28498 0bd5 DB01     		.2byte	0x1db
 28499 0bd7 620A0000 		.4byte	0xa62
 28500 0bdb D002     		.2byte	0x2d0
 28501 0bdd 15       		.uleb128 0x15
 28502 0bde 575200   		.ascii	"WR\000"
 28503 0be1 08       		.byte	0x8
 28504 0be2 DC01     		.2byte	0x1dc
 28505 0be4 B40A0000 		.4byte	0xab4
 28506 0be8 E002     		.2byte	0x2e0
 28507 0bea 00       		.byte	0
 28508 0beb 09       		.uleb128 0x9
 28509 0bec 97000000 		.4byte	0x97
 28510 0bf0 FB0B0000 		.4byte	0xbfb
 28511 0bf4 0A       		.uleb128 0xa
 28512 0bf5 18010000 		.4byte	0x118
 28513 0bf9 0E       		.byte	0xe
 28514 0bfa 00       		.byte	0
 28515 0bfb 09       		.uleb128 0x9
 28516 0bfc 97000000 		.4byte	0x97
 28517 0c00 0B0C0000 		.4byte	0xc0b
 28518 0c04 0A       		.uleb128 0xa
 28519 0c05 18010000 		.4byte	0x118
 28520 0c09 3F       		.byte	0x3f
 28521 0c0a 00       		.byte	0
 28522 0c0b 09       		.uleb128 0x9
 28523 0c0c D4050000 		.4byte	0x5d4
 28524 0c10 1B0C0000 		.4byte	0xc1b
 28525 0c14 0A       		.uleb128 0xa
 28526 0c15 18010000 		.4byte	0x118
 28527 0c19 01       		.byte	0x1
 28528 0c1a 00       		.byte	0
 28529 0c1b 09       		.uleb128 0x9
 28530 0c1c 6E070000 		.4byte	0x76e
 28531 0c20 2B0C0000 		.4byte	0xc2b
 28532 0c24 0A       		.uleb128 0xa
 28533 0c25 18010000 		.4byte	0x118
 28534 0c29 01       		.byte	0x1
 28535 0c2a 00       		.byte	0
 28536 0c2b 09       		.uleb128 0x9
 28537 0c2c 57090000 		.4byte	0x957
 28538 0c30 3B0C0000 		.4byte	0xc3b
 28539 0c34 0A       		.uleb128 0xa
 28540 0c35 18010000 		.4byte	0x118
 28541 0c39 02       		.byte	0x2
 28542 0c3a 00       		.byte	0
 28543 0c3b 11       		.uleb128 0x11
 28544 0c3c 5B0E0000 		.4byte	.LASF200
 28545 0c40 28       		.byte	0x28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 622


 28546 0c41 08       		.byte	0x8
 28547 0c42 E701     		.2byte	0x1e7
 28548 0c44 970C0000 		.4byte	0xc97
 28549 0c48 12       		.uleb128 0x12
 28550 0c49 49050000 		.4byte	.LASF201
 28551 0c4d 08       		.byte	0x8
 28552 0c4e E801     		.2byte	0x1e8
 28553 0c50 97000000 		.4byte	0x97
 28554 0c54 00       		.byte	0
 28555 0c55 12       		.uleb128 0x12
 28556 0c56 38030000 		.4byte	.LASF202
 28557 0c5a 08       		.byte	0x8
 28558 0c5b E901     		.2byte	0x1e9
 28559 0c5d 970C0000 		.4byte	0xc97
 28560 0c61 02       		.byte	0x2
 28561 0c62 12       		.uleb128 0x12
 28562 0c63 780D0000 		.4byte	.LASF203
 28563 0c67 08       		.byte	0x8
 28564 0c68 EA01     		.2byte	0x1ea
 28565 0c6a 970C0000 		.4byte	0xc97
 28566 0c6e 08       		.byte	0x8
 28567 0c6f 12       		.uleb128 0x12
 28568 0c70 670E0000 		.4byte	.LASF204
 28569 0c74 08       		.byte	0x8
 28570 0c75 EB01     		.2byte	0x1eb
 28571 0c77 970C0000 		.4byte	0xc97
 28572 0c7b 0E       		.byte	0xe
 28573 0c7c 12       		.uleb128 0x12
 28574 0c7d C1080000 		.4byte	.LASF205
 28575 0c81 08       		.byte	0x8
 28576 0c82 EC01     		.2byte	0x1ec
 28577 0c84 A70C0000 		.4byte	0xca7
 28578 0c88 14       		.byte	0x14
 28579 0c89 12       		.uleb128 0x12
 28580 0c8a 29020000 		.4byte	.LASF206
 28581 0c8e 08       		.byte	0x8
 28582 0c8f ED01     		.2byte	0x1ed
 28583 0c91 C7000000 		.4byte	0xc7
 28584 0c95 24       		.byte	0x24
 28585 0c96 00       		.byte	0
 28586 0c97 09       		.uleb128 0x9
 28587 0c98 C7000000 		.4byte	0xc7
 28588 0c9c A70C0000 		.4byte	0xca7
 28589 0ca0 0A       		.uleb128 0xa
 28590 0ca1 18010000 		.4byte	0x118
 28591 0ca5 02       		.byte	0x2
 28592 0ca6 00       		.byte	0
 28593 0ca7 09       		.uleb128 0x9
 28594 0ca8 EB000000 		.4byte	0xeb
 28595 0cac B70C0000 		.4byte	0xcb7
 28596 0cb0 0A       		.uleb128 0xa
 28597 0cb1 18010000 		.4byte	0x118
 28598 0cb5 03       		.byte	0x3
 28599 0cb6 00       		.byte	0
 28600 0cb7 11       		.uleb128 0x11
 28601 0cb8 11040000 		.4byte	.LASF207
 28602 0cbc 06       		.byte	0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 623


 28603 0cbd 08       		.byte	0x8
 28604 0cbe FD01     		.2byte	0x1fd
 28605 0cc0 F90C0000 		.4byte	0xcf9
 28606 0cc4 12       		.uleb128 0x12
 28607 0cc5 1B080000 		.4byte	.LASF208
 28608 0cc9 08       		.byte	0x8
 28609 0cca FE01     		.2byte	0x1fe
 28610 0ccc 97000000 		.4byte	0x97
 28611 0cd0 00       		.byte	0
 28612 0cd1 12       		.uleb128 0x12
 28613 0cd2 0A150000 		.4byte	.LASF209
 28614 0cd6 08       		.byte	0x8
 28615 0cd7 FF01     		.2byte	0x1ff
 28616 0cd9 97000000 		.4byte	0x97
 28617 0cdd 01       		.byte	0x1
 28618 0cde 12       		.uleb128 0x12
 28619 0cdf AF060000 		.4byte	.LASF210
 28620 0ce3 08       		.byte	0x8
 28621 0ce4 0002     		.2byte	0x200
 28622 0ce6 C7000000 		.4byte	0xc7
 28623 0cea 02       		.byte	0x2
 28624 0ceb 12       		.uleb128 0x12
 28625 0cec D50A0000 		.4byte	.LASF211
 28626 0cf0 08       		.byte	0x8
 28627 0cf1 0102     		.2byte	0x201
 28628 0cf3 C7000000 		.4byte	0xc7
 28629 0cf7 04       		.byte	0x4
 28630 0cf8 00       		.byte	0
 28631 0cf9 17       		.uleb128 0x17
 28632 0cfa 930F0000 		.4byte	.LASF392
 28633 0cfe 02       		.byte	0x2
 28634 0cff 1403     		.2byte	0x314
 28635 0d01 8C000000 		.4byte	0x8c
 28636 0d05 03       		.byte	0x3
 28637 0d06 230D0000 		.4byte	0xd23
 28638 0d0a 18       		.uleb128 0x18
 28639 0d0b 43050000 		.4byte	.LASF292
 28640 0d0f 02       		.byte	0x2
 28641 0d10 1403     		.2byte	0x314
 28642 0d12 8C000000 		.4byte	0x8c
 28643 0d16 19       		.uleb128 0x19
 28644 0d17 34020000 		.4byte	.LASF393
 28645 0d1b 02       		.byte	0x2
 28646 0d1c 1603     		.2byte	0x316
 28647 0d1e 8C000000 		.4byte	0x8c
 28648 0d22 00       		.byte	0
 28649 0d23 1A       		.uleb128 0x1a
 28650 0d24 E2100000 		.4byte	.LASF212
 28651 0d28 01       		.byte	0x1
 28652 0d29 3D       		.byte	0x3d
 28653 0d2a 00000000 		.4byte	.LFB64
 28654 0d2e E8040000 		.4byte	.LFE64-.LFB64
 28655 0d32 01       		.uleb128 0x1
 28656 0d33 9C       		.byte	0x9c
 28657 0d34 CE0D0000 		.4byte	0xdce
 28658 0d38 1B       		.uleb128 0x1b
 28659 0d39 B5060000 		.4byte	.LASF214
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 624


 28660 0d3d 01       		.byte	0x1
 28661 0d3e 3F       		.byte	0x3f
 28662 0d3f 97000000 		.4byte	0x97
 28663 0d43 02       		.uleb128 0x2
 28664 0d44 91       		.byte	0x91
 28665 0d45 77       		.sleb128 -9
 28666 0d46 1C       		.uleb128 0x1c
 28667 0d47 F90C0000 		.4byte	0xcf9
 28668 0d4b 40030000 		.4byte	.LBB8
 28669 0d4f 08000000 		.4byte	.LBE8-.LBB8
 28670 0d53 01       		.byte	0x1
 28671 0d54 9C       		.byte	0x9c
 28672 0d55 740D0000 		.4byte	0xd74
 28673 0d59 1D       		.uleb128 0x1d
 28674 0d5a 0A0D0000 		.4byte	0xd0a
 28675 0d5e 02       		.uleb128 0x2
 28676 0d5f 91       		.byte	0x91
 28677 0d60 68       		.sleb128 -24
 28678 0d61 1E       		.uleb128 0x1e
 28679 0d62 40030000 		.4byte	.LBB9
 28680 0d66 08000000 		.4byte	.LBE9-.LBB9
 28681 0d6a 1F       		.uleb128 0x1f
 28682 0d6b 160D0000 		.4byte	0xd16
 28683 0d6f 02       		.uleb128 0x2
 28684 0d70 91       		.byte	0x91
 28685 0d71 64       		.sleb128 -28
 28686 0d72 00       		.byte	0
 28687 0d73 00       		.byte	0
 28688 0d74 1C       		.uleb128 0x1c
 28689 0d75 F90C0000 		.4byte	0xcf9
 28690 0d79 5E030000 		.4byte	.LBB10
 28691 0d7d 08000000 		.4byte	.LBE10-.LBB10
 28692 0d81 01       		.byte	0x1
 28693 0d82 A8       		.byte	0xa8
 28694 0d83 A20D0000 		.4byte	0xda2
 28695 0d87 1D       		.uleb128 0x1d
 28696 0d88 0A0D0000 		.4byte	0xd0a
 28697 0d8c 02       		.uleb128 0x2
 28698 0d8d 91       		.byte	0x91
 28699 0d8e 70       		.sleb128 -16
 28700 0d8f 1E       		.uleb128 0x1e
 28701 0d90 5E030000 		.4byte	.LBB11
 28702 0d94 08000000 		.4byte	.LBE11-.LBB11
 28703 0d98 1F       		.uleb128 0x1f
 28704 0d99 160D0000 		.4byte	0xd16
 28705 0d9d 02       		.uleb128 0x2
 28706 0d9e 91       		.byte	0x91
 28707 0d9f 60       		.sleb128 -32
 28708 0da0 00       		.byte	0
 28709 0da1 00       		.byte	0
 28710 0da2 20       		.uleb128 0x20
 28711 0da3 F90C0000 		.4byte	0xcf9
 28712 0da7 A0040000 		.4byte	.LBB12
 28713 0dab 08000000 		.4byte	.LBE12-.LBB12
 28714 0daf 01       		.byte	0x1
 28715 0db0 0401     		.2byte	0x104
 28716 0db2 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 625


 28717 0db3 0A0D0000 		.4byte	0xd0a
 28718 0db7 02       		.uleb128 0x2
 28719 0db8 91       		.byte	0x91
 28720 0db9 6C       		.sleb128 -20
 28721 0dba 1E       		.uleb128 0x1e
 28722 0dbb A0040000 		.4byte	.LBB13
 28723 0dbf 08000000 		.4byte	.LBE13-.LBB13
 28724 0dc3 1F       		.uleb128 0x1f
 28725 0dc4 160D0000 		.4byte	0xd16
 28726 0dc8 02       		.uleb128 0x2
 28727 0dc9 91       		.byte	0x91
 28728 0dca 5C       		.sleb128 -36
 28729 0dcb 00       		.byte	0
 28730 0dcc 00       		.byte	0
 28731 0dcd 00       		.byte	0
 28732 0dce 21       		.uleb128 0x21
 28733 0dcf 00000000 		.4byte	.LASF213
 28734 0dd3 01       		.byte	0x1
 28735 0dd4 3101     		.2byte	0x131
 28736 0dd6 00000000 		.4byte	.LFB65
 28737 0dda 22000000 		.4byte	.LFE65-.LFB65
 28738 0dde 01       		.uleb128 0x1
 28739 0ddf 9C       		.byte	0x9c
 28740 0de0 F50D0000 		.4byte	0xdf5
 28741 0de4 22       		.uleb128 0x22
 28742 0de5 D2050000 		.4byte	.LASF215
 28743 0de9 01       		.byte	0x1
 28744 0dea 3201     		.2byte	0x132
 28745 0dec F50D0000 		.4byte	0xdf5
 28746 0df0 03       		.uleb128 0x3
 28747 0df1 91       		.byte	0x91
 28748 0df2 9C74     		.sleb128 -1508
 28749 0df4 00       		.byte	0
 28750 0df5 09       		.uleb128 0x9
 28751 0df6 F9000000 		.4byte	0xf9
 28752 0dfa 060E0000 		.4byte	0xe06
 28753 0dfe 23       		.uleb128 0x23
 28754 0dff 18010000 		.4byte	0x118
 28755 0e03 DB05     		.2byte	0x5db
 28756 0e05 00       		.byte	0
 28757 0e06 21       		.uleb128 0x21
 28758 0e07 E2130000 		.4byte	.LASF216
 28759 0e0b 01       		.byte	0x1
 28760 0e0c 3D01     		.2byte	0x13d
 28761 0e0e 00000000 		.4byte	.LFB66
 28762 0e12 02010000 		.4byte	.LFE66-.LFB66
 28763 0e16 01       		.uleb128 0x1
 28764 0e17 9C       		.byte	0x9c
 28765 0e18 4F0E0000 		.4byte	0xe4f
 28766 0e1c 24       		.uleb128 0x24
 28767 0e1d 3C130000 		.4byte	.LASF219
 28768 0e21 01       		.byte	0x1
 28769 0e22 3D01     		.2byte	0x13d
 28770 0e24 A3000000 		.4byte	0xa3
 28771 0e28 04       		.uleb128 0x4
 28772 0e29 91       		.byte	0x91
 28773 0e2a B6C47E   		.sleb128 -24010
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 626


 28774 0e2d 22       		.uleb128 0x22
 28775 0e2e D2050000 		.4byte	.LASF215
 28776 0e32 01       		.byte	0x1
 28777 0e33 3E01     		.2byte	0x13e
 28778 0e35 4F0E0000 		.4byte	0xe4f
 28779 0e39 03       		.uleb128 0x3
 28780 0e3a 91       		.byte	0x91
 28781 0e3b D860     		.sleb128 -4008
 28782 0e3d 22       		.uleb128 0x22
 28783 0e3e 8F080000 		.4byte	.LASF217
 28784 0e42 01       		.byte	0x1
 28785 0e43 3F01     		.2byte	0x13f
 28786 0e45 600E0000 		.4byte	0xe60
 28787 0e49 04       		.uleb128 0x4
 28788 0e4a 91       		.byte	0x91
 28789 0e4b B8C47E   		.sleb128 -24008
 28790 0e4e 00       		.byte	0
 28791 0e4f 09       		.uleb128 0x9
 28792 0e50 F9000000 		.4byte	0xf9
 28793 0e54 600E0000 		.4byte	0xe60
 28794 0e58 23       		.uleb128 0x23
 28795 0e59 18010000 		.4byte	0x118
 28796 0e5d 9F0F     		.2byte	0xf9f
 28797 0e5f 00       		.byte	0
 28798 0e60 09       		.uleb128 0x9
 28799 0e61 F9000000 		.4byte	0xf9
 28800 0e65 710E0000 		.4byte	0xe71
 28801 0e69 23       		.uleb128 0x23
 28802 0e6a 18010000 		.4byte	0x118
 28803 0e6e 1F4E     		.2byte	0x4e1f
 28804 0e70 00       		.byte	0
 28805 0e71 21       		.uleb128 0x21
 28806 0e72 E3010000 		.4byte	.LASF218
 28807 0e76 01       		.byte	0x1
 28808 0e77 6201     		.2byte	0x162
 28809 0e79 00000000 		.4byte	.LFB67
 28810 0e7d 0C320000 		.4byte	.LFE67-.LFB67
 28811 0e81 01       		.uleb128 0x1
 28812 0e82 9C       		.byte	0x9c
 28813 0e83 15100000 		.4byte	0x1015
 28814 0e87 24       		.uleb128 0x24
 28815 0e88 240D0000 		.4byte	.LASF220
 28816 0e8c 01       		.byte	0x1
 28817 0e8d 6201     		.2byte	0x162
 28818 0e8f 15100000 		.4byte	0x1015
 28819 0e93 03       		.uleb128 0x3
 28820 0e94 91       		.byte	0x91
 28821 0e95 8C54     		.sleb128 -5620
 28822 0e97 24       		.uleb128 0x24
 28823 0e98 BB130000 		.4byte	.LASF221
 28824 0e9c 01       		.byte	0x1
 28825 0e9d 6201     		.2byte	0x162
 28826 0e9f 1B100000 		.4byte	0x101b
 28827 0ea3 03       		.uleb128 0x3
 28828 0ea4 91       		.byte	0x91
 28829 0ea5 8854     		.sleb128 -5624
 28830 0ea7 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 627


 28831 0ea8 44030000 		.4byte	.LASF222
 28832 0eac 01       		.byte	0x1
 28833 0ead 6301     		.2byte	0x163
 28834 0eaf 1B100000 		.4byte	0x101b
 28835 0eb3 03       		.uleb128 0x3
 28836 0eb4 91       		.byte	0x91
 28837 0eb5 8454     		.sleb128 -5628
 28838 0eb7 24       		.uleb128 0x24
 28839 0eb8 910C0000 		.4byte	.LASF223
 28840 0ebc 01       		.byte	0x1
 28841 0ebd 6301     		.2byte	0x163
 28842 0ebf 1B100000 		.4byte	0x101b
 28843 0ec3 03       		.uleb128 0x3
 28844 0ec4 91       		.byte	0x91
 28845 0ec5 8054     		.sleb128 -5632
 28846 0ec7 24       		.uleb128 0x24
 28847 0ec8 06130000 		.4byte	.LASF224
 28848 0ecc 01       		.byte	0x1
 28849 0ecd 6401     		.2byte	0x164
 28850 0ecf 1B100000 		.4byte	0x101b
 28851 0ed3 02       		.uleb128 0x2
 28852 0ed4 91       		.byte	0x91
 28853 0ed5 00       		.sleb128 0
 28854 0ed6 24       		.uleb128 0x24
 28855 0ed7 10080000 		.4byte	.LASF225
 28856 0edb 01       		.byte	0x1
 28857 0edc 6401     		.2byte	0x164
 28858 0ede 21100000 		.4byte	0x1021
 28859 0ee2 02       		.uleb128 0x2
 28860 0ee3 91       		.byte	0x91
 28861 0ee4 04       		.sleb128 4
 28862 0ee5 24       		.uleb128 0x24
 28863 0ee6 0D0B0000 		.4byte	.LASF226
 28864 0eea 01       		.byte	0x1
 28865 0eeb 6501     		.2byte	0x165
 28866 0eed 1B100000 		.4byte	0x101b
 28867 0ef1 02       		.uleb128 0x2
 28868 0ef2 91       		.byte	0x91
 28869 0ef3 08       		.sleb128 8
 28870 0ef4 24       		.uleb128 0x24
 28871 0ef5 A1080000 		.4byte	.LASF227
 28872 0ef9 01       		.byte	0x1
 28873 0efa 6501     		.2byte	0x165
 28874 0efc 21100000 		.4byte	0x1021
 28875 0f00 02       		.uleb128 0x2
 28876 0f01 91       		.byte	0x91
 28877 0f02 0C       		.sleb128 12
 28878 0f03 22       		.uleb128 0x22
 28879 0f04 25060000 		.4byte	.LASF228
 28880 0f08 01       		.byte	0x1
 28881 0f09 6801     		.2byte	0x168
 28882 0f0b 27100000 		.4byte	0x1027
 28883 0f0f 03       		.uleb128 0x3
 28884 0f10 91       		.byte	0x91
 28885 0f11 D854     		.sleb128 -5544
 28886 0f13 22       		.uleb128 0x22
 28887 0f14 810B0000 		.4byte	.LASF229
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 628


 28888 0f18 01       		.byte	0x1
 28889 0f19 6901     		.2byte	0x169
 28890 0f1b A3000000 		.4byte	0xa3
 28891 0f1f 02       		.uleb128 0x2
 28892 0f20 91       		.byte	0x91
 28893 0f21 60       		.sleb128 -32
 28894 0f22 25       		.uleb128 0x25
 28895 0f23 6900     		.ascii	"i\000"
 28896 0f25 01       		.byte	0x1
 28897 0f26 6C01     		.2byte	0x16c
 28898 0f28 97000000 		.4byte	0x97
 28899 0f2c 02       		.uleb128 0x2
 28900 0f2d 91       		.byte	0x91
 28901 0f2e 67       		.sleb128 -25
 28902 0f2f 25       		.uleb128 0x25
 28903 0f30 6A00     		.ascii	"j\000"
 28904 0f32 01       		.byte	0x1
 28905 0f33 6C01     		.2byte	0x16c
 28906 0f35 97000000 		.4byte	0x97
 28907 0f39 02       		.uleb128 0x2
 28908 0f3a 91       		.byte	0x91
 28909 0f3b 66       		.sleb128 -26
 28910 0f3c 25       		.uleb128 0x25
 28911 0f3d 69647800 		.ascii	"idx\000"
 28912 0f41 01       		.byte	0x1
 28913 0f42 6D01     		.2byte	0x16d
 28914 0f44 97000000 		.4byte	0x97
 28915 0f48 02       		.uleb128 0x2
 28916 0f49 91       		.byte	0x91
 28917 0f4a 65       		.sleb128 -27
 28918 0f4b 22       		.uleb128 0x22
 28919 0f4c 2D110000 		.4byte	.LASF230
 28920 0f50 01       		.byte	0x1
 28921 0f51 6E01     		.2byte	0x16e
 28922 0f53 97000000 		.4byte	0x97
 28923 0f57 02       		.uleb128 0x2
 28924 0f58 91       		.byte	0x91
 28925 0f59 64       		.sleb128 -28
 28926 0f5a 25       		.uleb128 0x25
 28927 0f5b 736F6400 		.ascii	"sod\000"
 28928 0f5f 01       		.byte	0x1
 28929 0f60 6F01     		.2byte	0x16f
 28930 0f62 97000000 		.4byte	0x97
 28931 0f66 02       		.uleb128 0x2
 28932 0f67 91       		.byte	0x91
 28933 0f68 63       		.sleb128 -29
 28934 0f69 22       		.uleb128 0x22
 28935 0f6a 620C0000 		.4byte	.LASF231
 28936 0f6e 01       		.byte	0x1
 28937 0f6f 7001     		.2byte	0x170
 28938 0f71 97000000 		.4byte	0x97
 28939 0f75 02       		.uleb128 0x2
 28940 0f76 91       		.byte	0x91
 28941 0f77 62       		.sleb128 -30
 28942 0f78 22       		.uleb128 0x22
 28943 0f79 F0140000 		.4byte	.LASF232
 28944 0f7d 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 629


 28945 0f7e 7101     		.2byte	0x171
 28946 0f80 38100000 		.4byte	0x1038
 28947 0f84 03       		.uleb128 0x3
 28948 0f85 91       		.byte	0x91
 28949 0f86 A454     		.sleb128 -5596
 28950 0f88 22       		.uleb128 0x22
 28951 0f89 EE120000 		.4byte	.LASF233
 28952 0f8d 01       		.byte	0x1
 28953 0f8e 7201     		.2byte	0x172
 28954 0f90 EB000000 		.4byte	0xeb
 28955 0f94 03       		.uleb128 0x3
 28956 0f95 91       		.byte	0x91
 28957 0f96 A054     		.sleb128 -5600
 28958 0f98 22       		.uleb128 0x22
 28959 0f99 BE110000 		.4byte	.LASF234
 28960 0f9d 01       		.byte	0x1
 28961 0f9e 7301     		.2byte	0x173
 28962 0fa0 C7000000 		.4byte	0xc7
 28963 0fa4 03       		.uleb128 0x3
 28964 0fa5 91       		.byte	0x91
 28965 0fa6 9E54     		.sleb128 -5602
 28966 0fa8 22       		.uleb128 0x22
 28967 0fa9 B90C0000 		.4byte	.LASF235
 28968 0fad 01       		.byte	0x1
 28969 0fae 7401     		.2byte	0x174
 28970 0fb0 A3000000 		.4byte	0xa3
 28971 0fb4 03       		.uleb128 0x3
 28972 0fb5 91       		.byte	0x91
 28973 0fb6 9C54     		.sleb128 -5604
 28974 0fb8 22       		.uleb128 0x22
 28975 0fb9 0F130000 		.4byte	.LASF236
 28976 0fbd 01       		.byte	0x1
 28977 0fbe 7501     		.2byte	0x175
 28978 0fc0 D3000000 		.4byte	0xd3
 28979 0fc4 03       		.uleb128 0x3
 28980 0fc5 91       		.byte	0x91
 28981 0fc6 9854     		.sleb128 -5608
 28982 0fc8 22       		.uleb128 0x22
 28983 0fc9 3B0E0000 		.4byte	.LASF237
 28984 0fcd 01       		.byte	0x1
 28985 0fce 7601     		.2byte	0x176
 28986 0fd0 AF000000 		.4byte	0xaf
 28987 0fd4 03       		.uleb128 0x3
 28988 0fd5 91       		.byte	0x91
 28989 0fd6 9454     		.sleb128 -5612
 28990 0fd8 22       		.uleb128 0x22
 28991 0fd9 D40D0000 		.4byte	.LASF238
 28992 0fdd 01       		.byte	0x1
 28993 0fde 7801     		.2byte	0x178
 28994 0fe0 97000000 		.4byte	0x97
 28995 0fe4 02       		.uleb128 0x2
 28996 0fe5 91       		.byte	0x91
 28997 0fe6 5F       		.sleb128 -33
 28998 0fe7 22       		.uleb128 0x22
 28999 0fe8 44010000 		.4byte	.LASF239
 29000 0fec 01       		.byte	0x1
 29001 0fed 7901     		.2byte	0x179
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 630


 29002 0fef 97000000 		.4byte	0x97
 29003 0ff3 02       		.uleb128 0x2
 29004 0ff4 91       		.byte	0x91
 29005 0ff5 5E       		.sleb128 -34
 29006 0ff6 22       		.uleb128 0x22
 29007 0ff7 430B0000 		.4byte	.LASF240
 29008 0ffb 01       		.byte	0x1
 29009 0ffc 7B01     		.2byte	0x17b
 29010 0ffe 1B100000 		.4byte	0x101b
 29011 1002 02       		.uleb128 0x2
 29012 1003 91       		.byte	0x91
 29013 1004 58       		.sleb128 -40
 29014 1005 22       		.uleb128 0x22
 29015 1006 D8010000 		.4byte	.LASF241
 29016 100a 01       		.byte	0x1
 29017 100b 7C01     		.2byte	0x17c
 29018 100d 1B100000 		.4byte	0x101b
 29019 1011 02       		.uleb128 0x2
 29020 1012 91       		.byte	0x91
 29021 1013 54       		.sleb128 -44
 29022 1014 00       		.byte	0
 29023 1015 07       		.uleb128 0x7
 29024 1016 04       		.byte	0x4
 29025 1017 1B100000 		.4byte	0x101b
 29026 101b 07       		.uleb128 0x7
 29027 101c 04       		.byte	0x4
 29028 101d 97000000 		.4byte	0x97
 29029 1021 07       		.uleb128 0x7
 29030 1022 04       		.byte	0x4
 29031 1023 25010000 		.4byte	0x125
 29032 1027 09       		.uleb128 0x9
 29033 1028 97000000 		.4byte	0x97
 29034 102c 38100000 		.4byte	0x1038
 29035 1030 23       		.uleb128 0x23
 29036 1031 18010000 		.4byte	0x118
 29037 1035 7B15     		.2byte	0x157b
 29038 1037 00       		.byte	0
 29039 1038 09       		.uleb128 0x9
 29040 1039 F9000000 		.4byte	0xf9
 29041 103d 48100000 		.4byte	0x1048
 29042 1041 0A       		.uleb128 0xa
 29043 1042 18010000 		.4byte	0x118
 29044 1046 31       		.byte	0x31
 29045 1047 00       		.byte	0
 29046 1048 21       		.uleb128 0x21
 29047 1049 350F0000 		.4byte	.LASF242
 29048 104d 01       		.byte	0x1
 29049 104e 6503     		.2byte	0x365
 29050 1050 00000000 		.4byte	.LFB68
 29051 1054 24190000 		.4byte	.LFE68-.LFB68
 29052 1058 01       		.uleb128 0x1
 29053 1059 9C       		.byte	0x9c
 29054 105a 26120000 		.4byte	0x1226
 29055 105e 24       		.uleb128 0x24
 29056 105f 2B070000 		.4byte	.LASF243
 29057 1063 01       		.byte	0x1
 29058 1064 6503     		.2byte	0x365
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 631


 29059 1066 A3000000 		.4byte	0xa3
 29060 106a 03       		.uleb128 0x3
 29061 106b 91       		.byte	0x91
 29062 106c F674     		.sleb128 -1418
 29063 106e 25       		.uleb128 0x25
 29064 106f 6900     		.ascii	"i\000"
 29065 1071 01       		.byte	0x1
 29066 1072 6603     		.2byte	0x366
 29067 1074 97000000 		.4byte	0x97
 29068 1078 02       		.uleb128 0x2
 29069 1079 91       		.byte	0x91
 29070 107a 6F       		.sleb128 -17
 29071 107b 25       		.uleb128 0x25
 29072 107c 6A00     		.ascii	"j\000"
 29073 107e 01       		.byte	0x1
 29074 107f 6603     		.2byte	0x366
 29075 1081 97000000 		.4byte	0x97
 29076 1085 02       		.uleb128 0x2
 29077 1086 91       		.byte	0x91
 29078 1087 6E       		.sleb128 -18
 29079 1088 25       		.uleb128 0x25
 29080 1089 736F6400 		.ascii	"sod\000"
 29081 108d 01       		.byte	0x1
 29082 108e 6703     		.2byte	0x367
 29083 1090 97000000 		.4byte	0x97
 29084 1094 02       		.uleb128 0x2
 29085 1095 91       		.byte	0x91
 29086 1096 6D       		.sleb128 -19
 29087 1097 22       		.uleb128 0x22
 29088 1098 2D0B0000 		.4byte	.LASF244
 29089 109c 01       		.byte	0x1
 29090 109d 6803     		.2byte	0x368
 29091 109f 97000000 		.4byte	0x97
 29092 10a3 02       		.uleb128 0x2
 29093 10a4 91       		.byte	0x91
 29094 10a5 62       		.sleb128 -30
 29095 10a6 22       		.uleb128 0x22
 29096 10a7 BE110000 		.4byte	.LASF234
 29097 10ab 01       		.byte	0x1
 29098 10ac 6903     		.2byte	0x369
 29099 10ae C7000000 		.4byte	0xc7
 29100 10b2 02       		.uleb128 0x2
 29101 10b3 91       		.byte	0x91
 29102 10b4 60       		.sleb128 -32
 29103 10b5 22       		.uleb128 0x22
 29104 10b6 B90C0000 		.4byte	.LASF235
 29105 10ba 01       		.byte	0x1
 29106 10bb 6A03     		.2byte	0x36a
 29107 10bd A3000000 		.4byte	0xa3
 29108 10c1 02       		.uleb128 0x2
 29109 10c2 91       		.byte	0x91
 29110 10c3 5E       		.sleb128 -34
 29111 10c4 22       		.uleb128 0x22
 29112 10c5 0F130000 		.4byte	.LASF236
 29113 10c9 01       		.byte	0x1
 29114 10ca 6B03     		.2byte	0x36b
 29115 10cc D3000000 		.4byte	0xd3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 632


 29116 10d0 02       		.uleb128 0x2
 29117 10d1 91       		.byte	0x91
 29118 10d2 58       		.sleb128 -40
 29119 10d3 22       		.uleb128 0x22
 29120 10d4 3B0E0000 		.4byte	.LASF237
 29121 10d8 01       		.byte	0x1
 29122 10d9 6C03     		.2byte	0x36c
 29123 10db AF000000 		.4byte	0xaf
 29124 10df 02       		.uleb128 0x2
 29125 10e0 91       		.byte	0x91
 29126 10e1 54       		.sleb128 -44
 29127 10e2 22       		.uleb128 0x22
 29128 10e3 EE120000 		.4byte	.LASF233
 29129 10e7 01       		.byte	0x1
 29130 10e8 6D03     		.2byte	0x36d
 29131 10ea EB000000 		.4byte	0xeb
 29132 10ee 02       		.uleb128 0x2
 29133 10ef 91       		.byte	0x91
 29134 10f0 50       		.sleb128 -48
 29135 10f1 22       		.uleb128 0x22
 29136 10f2 D40D0000 		.4byte	.LASF238
 29137 10f6 01       		.byte	0x1
 29138 10f7 6F03     		.2byte	0x36f
 29139 10f9 97000000 		.4byte	0x97
 29140 10fd 02       		.uleb128 0x2
 29141 10fe 91       		.byte	0x91
 29142 10ff 65       		.sleb128 -27
 29143 1100 22       		.uleb128 0x22
 29144 1101 44010000 		.4byte	.LASF239
 29145 1105 01       		.byte	0x1
 29146 1106 7003     		.2byte	0x370
 29147 1108 97000000 		.4byte	0x97
 29148 110c 02       		.uleb128 0x2
 29149 110d 91       		.byte	0x91
 29150 110e 64       		.sleb128 -28
 29151 110f 22       		.uleb128 0x22
 29152 1110 5A030000 		.4byte	.LASF245
 29153 1114 01       		.byte	0x1
 29154 1115 7303     		.2byte	0x373
 29155 1117 26120000 		.4byte	0x1226
 29156 111b 02       		.uleb128 0x2
 29157 111c 91       		.byte	0x91
 29158 111d 68       		.sleb128 -24
 29159 111e 22       		.uleb128 0x22
 29160 111f 240D0000 		.4byte	.LASF220
 29161 1123 01       		.byte	0x1
 29162 1124 7B03     		.2byte	0x37b
 29163 1126 2C120000 		.4byte	0x122c
 29164 112a 03       		.uleb128 0x3
 29165 112b 91       		.byte	0x91
 29166 112c 887D     		.sleb128 -376
 29167 112e 22       		.uleb128 0x22
 29168 112f BB130000 		.4byte	.LASF221
 29169 1133 01       		.byte	0x1
 29170 1134 D803     		.2byte	0x3d8
 29171 1136 3C120000 		.4byte	0x123c
 29172 113a 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 633


 29173 113b 91       		.byte	0x91
 29174 113c B47C     		.sleb128 -460
 29175 113e 22       		.uleb128 0x22
 29176 113f 44030000 		.4byte	.LASF222
 29177 1143 01       		.byte	0x1
 29178 1144 F303     		.2byte	0x3f3
 29179 1146 3C120000 		.4byte	0x123c
 29180 114a 03       		.uleb128 0x3
 29181 114b 91       		.byte	0x91
 29182 114c E07B     		.sleb128 -544
 29183 114e 22       		.uleb128 0x22
 29184 114f 910C0000 		.4byte	.LASF223
 29185 1153 01       		.byte	0x1
 29186 1154 0E04     		.2byte	0x40e
 29187 1156 3C120000 		.4byte	0x123c
 29188 115a 03       		.uleb128 0x3
 29189 115b 91       		.byte	0x91
 29190 115c 8C7B     		.sleb128 -628
 29191 115e 22       		.uleb128 0x22
 29192 115f 10080000 		.4byte	.LASF225
 29193 1163 01       		.byte	0x1
 29194 1164 2A04     		.2byte	0x42a
 29195 1166 4C120000 		.4byte	0x124c
 29196 116a 03       		.uleb128 0x3
 29197 116b 91       		.byte	0x91
 29198 116c C478     		.sleb128 -956
 29199 116e 22       		.uleb128 0x22
 29200 116f 43140000 		.4byte	.LASF246
 29201 1173 01       		.byte	0x1
 29202 1174 4604     		.2byte	0x446
 29203 1176 5C120000 		.4byte	0x125c
 29204 117a 03       		.uleb128 0x3
 29205 117b 91       		.byte	0x91
 29206 117c CC77     		.sleb128 -1076
 29207 117e 22       		.uleb128 0x22
 29208 117f 10000000 		.4byte	.LASF247
 29209 1183 01       		.byte	0x1
 29210 1184 4904     		.2byte	0x449
 29211 1186 6C120000 		.4byte	0x126c
 29212 118a 03       		.uleb128 0x3
 29213 118b 91       		.byte	0x91
 29214 118c 9477     		.sleb128 -1132
 29215 118e 22       		.uleb128 0x22
 29216 118f A1080000 		.4byte	.LASF227
 29217 1193 01       		.byte	0x1
 29218 1194 5104     		.2byte	0x451
 29219 1196 7C120000 		.4byte	0x127c
 29220 119a 03       		.uleb128 0x3
 29221 119b 91       		.byte	0x91
 29222 119c E476     		.sleb128 -1180
 29223 119e 22       		.uleb128 0x22
 29224 119f 06130000 		.4byte	.LASF224
 29225 11a3 01       		.byte	0x1
 29226 11a4 6004     		.2byte	0x460
 29227 11a6 8C120000 		.4byte	0x128c
 29228 11aa 03       		.uleb128 0x3
 29229 11ab 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 634


 29230 11ac C476     		.sleb128 -1212
 29231 11ae 22       		.uleb128 0x22
 29232 11af 2A0D0000 		.4byte	.LASF248
 29233 11b3 01       		.byte	0x1
 29234 11b4 6104     		.2byte	0x461
 29235 11b6 9C120000 		.4byte	0x129c
 29236 11ba 03       		.uleb128 0x3
 29237 11bb 91       		.byte	0x91
 29238 11bc B876     		.sleb128 -1224
 29239 11be 22       		.uleb128 0x22
 29240 11bf 7B0C0000 		.4byte	.LASF249
 29241 11c3 01       		.byte	0x1
 29242 11c4 6204     		.2byte	0x462
 29243 11c6 AC120000 		.4byte	0x12ac
 29244 11ca 03       		.uleb128 0x3
 29245 11cb 91       		.byte	0x91
 29246 11cc A476     		.sleb128 -1244
 29247 11ce 22       		.uleb128 0x22
 29248 11cf 4D0E0000 		.4byte	.LASF250
 29249 11d3 01       		.byte	0x1
 29250 11d4 6304     		.2byte	0x463
 29251 11d6 97000000 		.4byte	0x97
 29252 11da 02       		.uleb128 0x2
 29253 11db 91       		.byte	0x91
 29254 11dc 63       		.sleb128 -29
 29255 11dd 22       		.uleb128 0x22
 29256 11de 0D0B0000 		.4byte	.LASF226
 29257 11e2 01       		.byte	0x1
 29258 11e3 6C04     		.2byte	0x46c
 29259 11e5 3C120000 		.4byte	0x123c
 29260 11e9 03       		.uleb128 0x3
 29261 11ea 91       		.byte	0x91
 29262 11eb D075     		.sleb128 -1328
 29263 11ed 22       		.uleb128 0x22
 29264 11ee 6A140000 		.4byte	.LASF251
 29265 11f2 01       		.byte	0x1
 29266 11f3 7704     		.2byte	0x477
 29267 11f5 3C120000 		.4byte	0x123c
 29268 11f9 03       		.uleb128 0x3
 29269 11fa 91       		.byte	0x91
 29270 11fb FC74     		.sleb128 -1412
 29271 11fd 1E       		.uleb128 0x1e
 29272 11fe 8E180000 		.4byte	.LBB14
 29273 1202 86000000 		.4byte	.LBE14-.LBB14
 29274 1206 25       		.uleb128 0x25
 29275 1207 69647800 		.ascii	"idx\000"
 29276 120b 01       		.byte	0x1
 29277 120c E004     		.2byte	0x4e0
 29278 120e 97000000 		.4byte	0x97
 29279 1212 02       		.uleb128 0x2
 29280 1213 91       		.byte	0x91
 29281 1214 67       		.sleb128 -25
 29282 1215 22       		.uleb128 0x22
 29283 1216 89050000 		.4byte	.LASF252
 29284 121a 01       		.byte	0x1
 29285 121b E004     		.2byte	0x4e0
 29286 121d 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 635


 29287 1221 02       		.uleb128 0x2
 29288 1222 91       		.byte	0x91
 29289 1223 66       		.sleb128 -26
 29290 1224 00       		.byte	0
 29291 1225 00       		.byte	0
 29292 1226 07       		.uleb128 0x7
 29293 1227 04       		.byte	0x4
 29294 1228 060B0000 		.4byte	0xb06
 29295 122c 09       		.uleb128 0x9
 29296 122d 1B100000 		.4byte	0x101b
 29297 1231 3C120000 		.4byte	0x123c
 29298 1235 0A       		.uleb128 0xa
 29299 1236 18010000 		.4byte	0x118
 29300 123a 51       		.byte	0x51
 29301 123b 00       		.byte	0
 29302 123c 09       		.uleb128 0x9
 29303 123d 97000000 		.4byte	0x97
 29304 1241 4C120000 		.4byte	0x124c
 29305 1245 0A       		.uleb128 0xa
 29306 1246 18010000 		.4byte	0x118
 29307 124a 51       		.byte	0x51
 29308 124b 00       		.byte	0
 29309 124c 09       		.uleb128 0x9
 29310 124d 25010000 		.4byte	0x125
 29311 1251 5C120000 		.4byte	0x125c
 29312 1255 0A       		.uleb128 0xa
 29313 1256 18010000 		.4byte	0x118
 29314 125a 51       		.byte	0x51
 29315 125b 00       		.byte	0
 29316 125c 09       		.uleb128 0x9
 29317 125d F9000000 		.4byte	0xf9
 29318 1261 6C120000 		.4byte	0x126c
 29319 1265 0A       		.uleb128 0xa
 29320 1266 18010000 		.4byte	0x118
 29321 126a 75       		.byte	0x75
 29322 126b 00       		.byte	0
 29323 126c 09       		.uleb128 0x9
 29324 126d F9000000 		.4byte	0xf9
 29325 1271 7C120000 		.4byte	0x127c
 29326 1275 0A       		.uleb128 0xa
 29327 1276 18010000 		.4byte	0x118
 29328 127a 37       		.byte	0x37
 29329 127b 00       		.byte	0
 29330 127c 09       		.uleb128 0x9
 29331 127d 25010000 		.4byte	0x125
 29332 1281 8C120000 		.4byte	0x128c
 29333 1285 0A       		.uleb128 0xa
 29334 1286 18010000 		.4byte	0x118
 29335 128a 0B       		.byte	0xb
 29336 128b 00       		.byte	0
 29337 128c 09       		.uleb128 0x9
 29338 128d 97000000 		.4byte	0x97
 29339 1291 9C120000 		.4byte	0x129c
 29340 1295 0A       		.uleb128 0xa
 29341 1296 18010000 		.4byte	0x118
 29342 129a 1E       		.byte	0x1e
 29343 129b 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 636


 29344 129c 09       		.uleb128 0x9
 29345 129d 97000000 		.4byte	0x97
 29346 12a1 AC120000 		.4byte	0x12ac
 29347 12a5 0A       		.uleb128 0xa
 29348 12a6 18010000 		.4byte	0x118
 29349 12aa 08       		.byte	0x8
 29350 12ab 00       		.byte	0
 29351 12ac 09       		.uleb128 0x9
 29352 12ad 97000000 		.4byte	0x97
 29353 12b1 BC120000 		.4byte	0x12bc
 29354 12b5 0A       		.uleb128 0xa
 29355 12b6 18010000 		.4byte	0x118
 29356 12ba 11       		.byte	0x11
 29357 12bb 00       		.byte	0
 29358 12bc 21       		.uleb128 0x21
 29359 12bd CC030000 		.4byte	.LASF253
 29360 12c1 01       		.byte	0x1
 29361 12c2 F104     		.2byte	0x4f1
 29362 12c4 00000000 		.4byte	.LFB69
 29363 12c8 8C140000 		.4byte	.LFE69-.LFB69
 29364 12cc 01       		.uleb128 0x1
 29365 12cd 9C       		.byte	0x9c
 29366 12ce 5E130000 		.4byte	0x135e
 29367 12d2 24       		.uleb128 0x24
 29368 12d3 2B070000 		.4byte	.LASF243
 29369 12d7 01       		.byte	0x1
 29370 12d8 F104     		.2byte	0x4f1
 29371 12da A3000000 		.4byte	0xa3
 29372 12de 02       		.uleb128 0x2
 29373 12df 91       		.byte	0x91
 29374 12e0 56       		.sleb128 -42
 29375 12e1 25       		.uleb128 0x25
 29376 12e2 6900     		.ascii	"i\000"
 29377 12e4 01       		.byte	0x1
 29378 12e5 F304     		.2byte	0x4f3
 29379 12e7 97000000 		.4byte	0x97
 29380 12eb 02       		.uleb128 0x2
 29381 12ec 91       		.byte	0x91
 29382 12ed 67       		.sleb128 -25
 29383 12ee 25       		.uleb128 0x25
 29384 12ef 6A00     		.ascii	"j\000"
 29385 12f1 01       		.byte	0x1
 29386 12f2 F304     		.2byte	0x4f3
 29387 12f4 97000000 		.4byte	0x97
 29388 12f8 02       		.uleb128 0x2
 29389 12f9 91       		.byte	0x91
 29390 12fa 66       		.sleb128 -26
 29391 12fb 22       		.uleb128 0x22
 29392 12fc 9C0C0000 		.4byte	.LASF254
 29393 1300 01       		.byte	0x1
 29394 1301 F404     		.2byte	0x4f4
 29395 1303 97000000 		.4byte	0x97
 29396 1307 02       		.uleb128 0x2
 29397 1308 91       		.byte	0x91
 29398 1309 62       		.sleb128 -30
 29399 130a 22       		.uleb128 0x22
 29400 130b EE120000 		.4byte	.LASF233
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 637


 29401 130f 01       		.byte	0x1
 29402 1310 F504     		.2byte	0x4f5
 29403 1312 EB000000 		.4byte	0xeb
 29404 1316 02       		.uleb128 0x2
 29405 1317 91       		.byte	0x91
 29406 1318 5C       		.sleb128 -36
 29407 1319 22       		.uleb128 0x22
 29408 131a A5030000 		.4byte	.LASF255
 29409 131e 01       		.byte	0x1
 29410 131f F504     		.2byte	0x4f5
 29411 1321 EB000000 		.4byte	0xeb
 29412 1325 02       		.uleb128 0x2
 29413 1326 91       		.byte	0x91
 29414 1327 58       		.sleb128 -40
 29415 1328 22       		.uleb128 0x22
 29416 1329 D40D0000 		.4byte	.LASF238
 29417 132d 01       		.byte	0x1
 29418 132e F704     		.2byte	0x4f7
 29419 1330 97000000 		.4byte	0x97
 29420 1334 02       		.uleb128 0x2
 29421 1335 91       		.byte	0x91
 29422 1336 64       		.sleb128 -28
 29423 1337 22       		.uleb128 0x22
 29424 1338 44010000 		.4byte	.LASF239
 29425 133c 01       		.byte	0x1
 29426 133d F804     		.2byte	0x4f8
 29427 133f 97000000 		.4byte	0x97
 29428 1343 02       		.uleb128 0x2
 29429 1344 91       		.byte	0x91
 29430 1345 63       		.sleb128 -29
 29431 1346 1E       		.uleb128 0x1e
 29432 1347 000B0000 		.4byte	.LBB15
 29433 134b 26000000 		.4byte	.LBE15-.LBB15
 29434 134f 25       		.uleb128 0x25
 29435 1350 6900     		.ascii	"i\000"
 29436 1352 01       		.byte	0x1
 29437 1353 9F05     		.2byte	0x59f
 29438 1355 97000000 		.4byte	0x97
 29439 1359 02       		.uleb128 0x2
 29440 135a 91       		.byte	0x91
 29441 135b 65       		.sleb128 -27
 29442 135c 00       		.byte	0
 29443 135d 00       		.byte	0
 29444 135e 21       		.uleb128 0x21
 29445 135f 2C090000 		.4byte	.LASF256
 29446 1363 01       		.byte	0x1
 29447 1364 3F06     		.2byte	0x63f
 29448 1366 00000000 		.4byte	.LFB70
 29449 136a F40D0000 		.4byte	.LFE70-.LFB70
 29450 136e 01       		.uleb128 0x1
 29451 136f 9C       		.byte	0x9c
 29452 1370 ED140000 		.4byte	0x14ed
 29453 1374 24       		.uleb128 0x24
 29454 1375 2B070000 		.4byte	.LASF243
 29455 1379 01       		.byte	0x1
 29456 137a 3F06     		.2byte	0x63f
 29457 137c A3000000 		.4byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 638


 29458 1380 03       		.uleb128 0x3
 29459 1381 91       		.byte	0x91
 29460 1382 CE72     		.sleb128 -1714
 29461 1384 22       		.uleb128 0x22
 29462 1385 25060000 		.4byte	.LASF228
 29463 1389 01       		.byte	0x1
 29464 138a 4206     		.2byte	0x642
 29465 138c ED140000 		.4byte	0x14ed
 29466 1390 03       		.uleb128 0x3
 29467 1391 91       		.byte	0x91
 29468 1392 DC74     		.sleb128 -1444
 29469 1394 22       		.uleb128 0x22
 29470 1395 AB110000 		.4byte	.LASF257
 29471 1399 01       		.byte	0x1
 29472 139a 4906     		.2byte	0x649
 29473 139c A3000000 		.4byte	0xa3
 29474 13a0 02       		.uleb128 0x2
 29475 13a1 91       		.byte	0x91
 29476 13a2 62       		.sleb128 -30
 29477 13a3 22       		.uleb128 0x22
 29478 13a4 9D050000 		.4byte	.LASF258
 29479 13a8 01       		.byte	0x1
 29480 13a9 4A06     		.2byte	0x64a
 29481 13ab A3000000 		.4byte	0xa3
 29482 13af 02       		.uleb128 0x2
 29483 13b0 91       		.byte	0x91
 29484 13b1 6E       		.sleb128 -18
 29485 13b2 22       		.uleb128 0x22
 29486 13b3 4D090000 		.4byte	.LASF259
 29487 13b7 01       		.byte	0x1
 29488 13b8 4B06     		.2byte	0x64b
 29489 13ba A3000000 		.4byte	0xa3
 29490 13be 02       		.uleb128 0x2
 29491 13bf 91       		.byte	0x91
 29492 13c0 60       		.sleb128 -32
 29493 13c1 22       		.uleb128 0x22
 29494 13c2 CC080000 		.4byte	.LASF260
 29495 13c6 01       		.byte	0x1
 29496 13c7 4C06     		.2byte	0x64c
 29497 13c9 A3000000 		.4byte	0xa3
 29498 13cd 02       		.uleb128 0x2
 29499 13ce 91       		.byte	0x91
 29500 13cf 5E       		.sleb128 -34
 29501 13d0 25       		.uleb128 0x25
 29502 13d1 6900     		.ascii	"i\000"
 29503 13d3 01       		.byte	0x1
 29504 13d4 5406     		.2byte	0x654
 29505 13d6 A3000000 		.4byte	0xa3
 29506 13da 02       		.uleb128 0x2
 29507 13db 91       		.byte	0x91
 29508 13dc 6C       		.sleb128 -20
 29509 13dd 25       		.uleb128 0x25
 29510 13de 6A00     		.ascii	"j\000"
 29511 13e0 01       		.byte	0x1
 29512 13e1 5406     		.2byte	0x654
 29513 13e3 A3000000 		.4byte	0xa3
 29514 13e7 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 639


 29515 13e8 91       		.byte	0x91
 29516 13e9 6A       		.sleb128 -22
 29517 13ea 25       		.uleb128 0x25
 29518 13eb 6B00     		.ascii	"k\000"
 29519 13ed 01       		.byte	0x1
 29520 13ee 5406     		.2byte	0x654
 29521 13f0 A3000000 		.4byte	0xa3
 29522 13f4 02       		.uleb128 0x2
 29523 13f5 91       		.byte	0x91
 29524 13f6 68       		.sleb128 -24
 29525 13f7 25       		.uleb128 0x25
 29526 13f8 6800     		.ascii	"h\000"
 29527 13fa 01       		.byte	0x1
 29528 13fb 5406     		.2byte	0x654
 29529 13fd A3000000 		.4byte	0xa3
 29530 1401 02       		.uleb128 0x2
 29531 1402 91       		.byte	0x91
 29532 1403 66       		.sleb128 -26
 29533 1404 22       		.uleb128 0x22
 29534 1405 92050000 		.4byte	.LASF261
 29535 1409 01       		.byte	0x1
 29536 140a 5506     		.2byte	0x655
 29537 140c A3000000 		.4byte	0xa3
 29538 1410 02       		.uleb128 0x2
 29539 1411 91       		.byte	0x91
 29540 1412 5C       		.sleb128 -36
 29541 1413 22       		.uleb128 0x22
 29542 1414 E90D0000 		.4byte	.LASF262
 29543 1418 01       		.byte	0x1
 29544 1419 5806     		.2byte	0x658
 29545 141b 30010000 		.4byte	0x130
 29546 141f 03       		.uleb128 0x3
 29547 1420 91       		.byte	0x91
 29548 1421 C074     		.sleb128 -1472
 29549 1423 22       		.uleb128 0x22
 29550 1424 72110000 		.4byte	.LASF263
 29551 1428 01       		.byte	0x1
 29552 1429 5906     		.2byte	0x659
 29553 142b FE140000 		.4byte	0x14fe
 29554 142f 03       		.uleb128 0x3
 29555 1430 91       		.byte	0x91
 29556 1431 B474     		.sleb128 -1484
 29557 1433 22       		.uleb128 0x22
 29558 1434 A9070000 		.4byte	.LASF264
 29559 1438 01       		.byte	0x1
 29560 1439 5A06     		.2byte	0x65a
 29561 143b 0E150000 		.4byte	0x150e
 29562 143f 03       		.uleb128 0x3
 29563 1440 91       		.byte	0x91
 29564 1441 A074     		.sleb128 -1504
 29565 1443 22       		.uleb128 0x22
 29566 1444 09000000 		.4byte	.LASF265
 29567 1448 01       		.byte	0x1
 29568 1449 5B06     		.2byte	0x65b
 29569 144b 1E150000 		.4byte	0x151e
 29570 144f 03       		.uleb128 0x3
 29571 1450 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 640


 29572 1451 9074     		.sleb128 -1520
 29573 1453 22       		.uleb128 0x22
 29574 1454 C60E0000 		.4byte	.LASF266
 29575 1458 01       		.byte	0x1
 29576 1459 5C06     		.2byte	0x65c
 29577 145b 2E150000 		.4byte	0x152e
 29578 145f 03       		.uleb128 0x3
 29579 1460 91       		.byte	0x91
 29580 1461 E473     		.sleb128 -1564
 29581 1463 22       		.uleb128 0x22
 29582 1464 3B020000 		.4byte	.LASF267
 29583 1468 01       		.byte	0x1
 29584 1469 5D06     		.2byte	0x65d
 29585 146b 30010000 		.4byte	0x130
 29586 146f 03       		.uleb128 0x3
 29587 1470 91       		.byte	0x91
 29588 1471 C873     		.sleb128 -1592
 29589 1473 22       		.uleb128 0x22
 29590 1474 B5010000 		.4byte	.LASF268
 29591 1478 01       		.byte	0x1
 29592 1479 6006     		.2byte	0x660
 29593 147b 97000000 		.4byte	0x97
 29594 147f 02       		.uleb128 0x2
 29595 1480 91       		.byte	0x91
 29596 1481 5B       		.sleb128 -37
 29597 1482 22       		.uleb128 0x22
 29598 1483 23050000 		.4byte	.LASF269
 29599 1487 01       		.byte	0x1
 29600 1488 6106     		.2byte	0x661
 29601 148a 97000000 		.4byte	0x97
 29602 148e 02       		.uleb128 0x2
 29603 148f 91       		.byte	0x91
 29604 1490 5A       		.sleb128 -38
 29605 1491 22       		.uleb128 0x22
 29606 1492 1A110000 		.4byte	.LASF270
 29607 1496 01       		.byte	0x1
 29608 1497 6206     		.2byte	0x662
 29609 1499 97000000 		.4byte	0x97
 29610 149d 02       		.uleb128 0x2
 29611 149e 91       		.byte	0x91
 29612 149f 59       		.sleb128 -39
 29613 14a0 22       		.uleb128 0x22
 29614 14a1 99110000 		.4byte	.LASF271
 29615 14a5 01       		.byte	0x1
 29616 14a6 6306     		.2byte	0x663
 29617 14a8 97000000 		.4byte	0x97
 29618 14ac 02       		.uleb128 0x2
 29619 14ad 91       		.byte	0x91
 29620 14ae 58       		.sleb128 -40
 29621 14af 22       		.uleb128 0x22
 29622 14b0 31050000 		.4byte	.LASF272
 29623 14b4 01       		.byte	0x1
 29624 14b5 6406     		.2byte	0x664
 29625 14b7 97000000 		.4byte	0x97
 29626 14bb 02       		.uleb128 0x2
 29627 14bc 91       		.byte	0x91
 29628 14bd 57       		.sleb128 -41
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 641


 29629 14be 22       		.uleb128 0x22
 29630 14bf 03010000 		.4byte	.LASF273
 29631 14c3 01       		.byte	0x1
 29632 14c4 6506     		.2byte	0x665
 29633 14c6 97000000 		.4byte	0x97
 29634 14ca 02       		.uleb128 0x2
 29635 14cb 91       		.byte	0x91
 29636 14cc 65       		.sleb128 -27
 29637 14cd 22       		.uleb128 0x22
 29638 14ce 43140000 		.4byte	.LASF246
 29639 14d2 01       		.byte	0x1
 29640 14d3 6706     		.2byte	0x667
 29641 14d5 5C120000 		.4byte	0x125c
 29642 14d9 03       		.uleb128 0x3
 29643 14da 91       		.byte	0x91
 29644 14db D072     		.sleb128 -1712
 29645 14dd 22       		.uleb128 0x22
 29646 14de B9030000 		.4byte	.LASF274
 29647 14e2 01       		.byte	0x1
 29648 14e3 6806     		.2byte	0x668
 29649 14e5 97000000 		.4byte	0x97
 29650 14e9 02       		.uleb128 0x2
 29651 14ea 91       		.byte	0x91
 29652 14eb 56       		.sleb128 -42
 29653 14ec 00       		.byte	0
 29654 14ed 09       		.uleb128 0x9
 29655 14ee 97000000 		.4byte	0x97
 29656 14f2 FE140000 		.4byte	0x14fe
 29657 14f6 23       		.uleb128 0x23
 29658 14f7 18010000 		.4byte	0x118
 29659 14fb 7805     		.2byte	0x578
 29660 14fd 00       		.byte	0
 29661 14fe 09       		.uleb128 0x9
 29662 14ff F9000000 		.4byte	0xf9
 29663 1503 0E150000 		.4byte	0x150e
 29664 1507 0A       		.uleb128 0xa
 29665 1508 18010000 		.4byte	0x118
 29666 150c 0A       		.byte	0xa
 29667 150d 00       		.byte	0
 29668 150e 09       		.uleb128 0x9
 29669 150f F9000000 		.4byte	0xf9
 29670 1513 1E150000 		.4byte	0x151e
 29671 1517 0A       		.uleb128 0xa
 29672 1518 18010000 		.4byte	0x118
 29673 151c 13       		.byte	0x13
 29674 151d 00       		.byte	0
 29675 151e 09       		.uleb128 0x9
 29676 151f F9000000 		.4byte	0xf9
 29677 1523 2E150000 		.4byte	0x152e
 29678 1527 0A       		.uleb128 0xa
 29679 1528 18010000 		.4byte	0x118
 29680 152c 0F       		.byte	0xf
 29681 152d 00       		.byte	0
 29682 152e 09       		.uleb128 0x9
 29683 152f F9000000 		.4byte	0xf9
 29684 1533 3E150000 		.4byte	0x153e
 29685 1537 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 642


 29686 1538 18010000 		.4byte	0x118
 29687 153c 29       		.byte	0x29
 29688 153d 00       		.byte	0
 29689 153e 26       		.uleb128 0x26
 29690 153f 22030000 		.4byte	.LASF306
 29691 1543 01       		.byte	0x1
 29692 1544 2E07     		.2byte	0x72e
 29693 1546 00000000 		.4byte	.LFB71
 29694 154a 84000000 		.4byte	.LFE71-.LFB71
 29695 154e 01       		.uleb128 0x1
 29696 154f 9C       		.byte	0x9c
 29697 1550 6F150000 		.4byte	0x156f
 29698 1554 25       		.uleb128 0x25
 29699 1555 6900     		.ascii	"i\000"
 29700 1557 01       		.byte	0x1
 29701 1558 3007     		.2byte	0x730
 29702 155a 97000000 		.4byte	0x97
 29703 155e 02       		.uleb128 0x2
 29704 155f 91       		.byte	0x91
 29705 1560 6F       		.sleb128 -17
 29706 1561 25       		.uleb128 0x25
 29707 1562 6A00     		.ascii	"j\000"
 29708 1564 01       		.byte	0x1
 29709 1565 3007     		.2byte	0x730
 29710 1567 97000000 		.4byte	0x97
 29711 156b 02       		.uleb128 0x2
 29712 156c 91       		.byte	0x91
 29713 156d 6E       		.sleb128 -18
 29714 156e 00       		.byte	0
 29715 156f 21       		.uleb128 0x21
 29716 1570 23010000 		.4byte	.LASF275
 29717 1574 01       		.byte	0x1
 29718 1575 4107     		.2byte	0x741
 29719 1577 00000000 		.4byte	.LFB72
 29720 157b 50210000 		.4byte	.LFE72-.LFB72
 29721 157f 01       		.uleb128 0x1
 29722 1580 9C       		.byte	0x9c
 29723 1581 28160000 		.4byte	0x1628
 29724 1585 24       		.uleb128 0x24
 29725 1586 F30D0000 		.4byte	.LASF276
 29726 158a 01       		.byte	0x1
 29727 158b 4107     		.2byte	0x741
 29728 158d 1F010000 		.4byte	0x11f
 29729 1591 03       		.uleb128 0x3
 29730 1592 91       		.byte	0x91
 29731 1593 D47E     		.sleb128 -172
 29732 1595 25       		.uleb128 0x25
 29733 1596 6900     		.ascii	"i\000"
 29734 1598 01       		.byte	0x1
 29735 1599 4307     		.2byte	0x743
 29736 159b 73000000 		.4byte	0x73
 29737 159f 02       		.uleb128 0x2
 29738 15a0 91       		.byte	0x91
 29739 15a1 54       		.sleb128 -44
 29740 15a2 22       		.uleb128 0x22
 29741 15a3 5A030000 		.4byte	.LASF245
 29742 15a7 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 643


 29743 15a8 4507     		.2byte	0x745
 29744 15aa 26120000 		.4byte	0x1226
 29745 15ae 02       		.uleb128 0x2
 29746 15af 91       		.byte	0x91
 29747 15b0 48       		.sleb128 -56
 29748 15b1 1E       		.uleb128 0x1e
 29749 15b2 1C000000 		.4byte	.LBB16
 29750 15b6 F0200000 		.4byte	.LBE16-.LBB16
 29751 15ba 25       		.uleb128 0x25
 29752 15bb 73747200 		.ascii	"str\000"
 29753 15bf 01       		.byte	0x1
 29754 15c0 4807     		.2byte	0x748
 29755 15c2 28160000 		.4byte	0x1628
 29756 15c6 03       		.uleb128 0x3
 29757 15c7 91       		.byte	0x91
 29758 15c8 D87E     		.sleb128 -168
 29759 15ca 25       		.uleb128 0x25
 29760 15cb 6A00     		.ascii	"j\000"
 29761 15cd 01       		.byte	0x1
 29762 15ce 0109     		.2byte	0x901
 29763 15d0 73000000 		.4byte	0x73
 29764 15d4 02       		.uleb128 0x2
 29765 15d5 91       		.byte	0x91
 29766 15d6 4C       		.sleb128 -52
 29767 15d7 1E       		.uleb128 0x1e
 29768 15d8 0C030000 		.4byte	.LBB17
 29769 15dc CE130000 		.4byte	.LBE17-.LBB17
 29770 15e0 25       		.uleb128 0x25
 29771 15e1 6B00     		.ascii	"k\000"
 29772 15e3 01       		.byte	0x1
 29773 15e4 7C07     		.2byte	0x77c
 29774 15e6 97000000 		.4byte	0x97
 29775 15ea 02       		.uleb128 0x2
 29776 15eb 91       		.byte	0x91
 29777 15ec 53       		.sleb128 -45
 29778 15ed 1E       		.uleb128 0x1e
 29779 15ee 5C030000 		.4byte	.LBB18
 29780 15f2 62130000 		.4byte	.LBE18-.LBB18
 29781 15f6 22       		.uleb128 0x22
 29782 15f7 D40D0000 		.4byte	.LASF238
 29783 15fb 01       		.byte	0x1
 29784 15fc 7E07     		.2byte	0x77e
 29785 15fe 97000000 		.4byte	0x97
 29786 1602 02       		.uleb128 0x2
 29787 1603 91       		.byte	0x91
 29788 1604 47       		.sleb128 -57
 29789 1605 25       		.uleb128 0x25
 29790 1606 4D4F5400 		.ascii	"MOT\000"
 29791 160a 01       		.byte	0x1
 29792 160b 7F07     		.2byte	0x77f
 29793 160d 38160000 		.4byte	0x1638
 29794 1611 02       		.uleb128 0x2
 29795 1612 91       		.byte	0x91
 29796 1613 40       		.sleb128 -64
 29797 1614 22       		.uleb128 0x22
 29798 1615 AB130000 		.4byte	.LASF277
 29799 1619 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 644


 29800 161a 8007     		.2byte	0x780
 29801 161c 97000000 		.4byte	0x97
 29802 1620 03       		.uleb128 0x3
 29803 1621 91       		.byte	0x91
 29804 1622 BF7F     		.sleb128 -65
 29805 1624 00       		.byte	0
 29806 1625 00       		.byte	0
 29807 1626 00       		.byte	0
 29808 1627 00       		.byte	0
 29809 1628 09       		.uleb128 0x9
 29810 1629 F9000000 		.4byte	0xf9
 29811 162d 38160000 		.4byte	0x1638
 29812 1631 0A       		.uleb128 0xa
 29813 1632 18010000 		.4byte	0x118
 29814 1636 63       		.byte	0x63
 29815 1637 00       		.byte	0
 29816 1638 07       		.uleb128 0x7
 29817 1639 04       		.byte	0x4
 29818 163a D4050000 		.4byte	0x5d4
 29819 163e 21       		.uleb128 0x21
 29820 163f F90E0000 		.4byte	.LASF278
 29821 1643 01       		.byte	0x1
 29822 1644 2B09     		.2byte	0x92b
 29823 1646 00000000 		.4byte	.LFB73
 29824 164a B4030000 		.4byte	.LFE73-.LFB73
 29825 164e 01       		.uleb128 0x1
 29826 164f 9C       		.byte	0x9c
 29827 1650 BE160000 		.4byte	0x16be
 29828 1654 24       		.uleb128 0x24
 29829 1655 F30D0000 		.4byte	.LASF276
 29830 1659 01       		.byte	0x1
 29831 165a 2B09     		.2byte	0x92b
 29832 165c 1F010000 		.4byte	0x11f
 29833 1660 03       		.uleb128 0x3
 29834 1661 91       		.byte	0x91
 29835 1662 EC7E     		.sleb128 -148
 29836 1664 25       		.uleb128 0x25
 29837 1665 73747200 		.ascii	"str\000"
 29838 1669 01       		.byte	0x1
 29839 166a 2D09     		.2byte	0x92d
 29840 166c 28160000 		.4byte	0x1628
 29841 1670 03       		.uleb128 0x3
 29842 1671 91       		.byte	0x91
 29843 1672 F07E     		.sleb128 -144
 29844 1674 25       		.uleb128 0x25
 29845 1675 6900     		.ascii	"i\000"
 29846 1677 01       		.byte	0x1
 29847 1678 2E09     		.2byte	0x92e
 29848 167a 73000000 		.4byte	0x73
 29849 167e 02       		.uleb128 0x2
 29850 167f 91       		.byte	0x91
 29851 1680 64       		.sleb128 -28
 29852 1681 22       		.uleb128 0x22
 29853 1682 70040000 		.4byte	.LASF279
 29854 1686 01       		.byte	0x1
 29855 1687 2F09     		.2byte	0x92f
 29856 1689 73000000 		.4byte	0x73
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 645


 29857 168d 02       		.uleb128 0x2
 29858 168e 91       		.byte	0x91
 29859 168f 54       		.sleb128 -44
 29860 1690 22       		.uleb128 0x22
 29861 1691 5A030000 		.4byte	.LASF245
 29862 1695 01       		.byte	0x1
 29863 1696 3109     		.2byte	0x931
 29864 1698 26120000 		.4byte	0x1226
 29865 169c 02       		.uleb128 0x2
 29866 169d 91       		.byte	0x91
 29867 169e 60       		.sleb128 -32
 29868 169f 25       		.uleb128 0x25
 29869 16a0 4D4F5400 		.ascii	"MOT\000"
 29870 16a4 01       		.byte	0x1
 29871 16a5 3209     		.2byte	0x932
 29872 16a7 38160000 		.4byte	0x1638
 29873 16ab 02       		.uleb128 0x2
 29874 16ac 91       		.byte	0x91
 29875 16ad 5C       		.sleb128 -36
 29876 16ae 22       		.uleb128 0x22
 29877 16af AB130000 		.4byte	.LASF277
 29878 16b3 01       		.byte	0x1
 29879 16b4 3309     		.2byte	0x933
 29880 16b6 97000000 		.4byte	0x97
 29881 16ba 02       		.uleb128 0x2
 29882 16bb 91       		.byte	0x91
 29883 16bc 5B       		.sleb128 -37
 29884 16bd 00       		.byte	0
 29885 16be 21       		.uleb128 0x21
 29886 16bf 5A0F0000 		.4byte	.LASF280
 29887 16c3 01       		.byte	0x1
 29888 16c4 6D09     		.2byte	0x96d
 29889 16c6 00000000 		.4byte	.LFB74
 29890 16ca 7C120000 		.4byte	.LFE74-.LFB74
 29891 16ce 01       		.uleb128 0x1
 29892 16cf 9C       		.byte	0x9c
 29893 16d0 5F170000 		.4byte	0x175f
 29894 16d4 24       		.uleb128 0x24
 29895 16d5 F30D0000 		.4byte	.LASF276
 29896 16d9 01       		.byte	0x1
 29897 16da 6D09     		.2byte	0x96d
 29898 16dc 1F010000 		.4byte	0x11f
 29899 16e0 03       		.uleb128 0x3
 29900 16e1 91       		.byte	0x91
 29901 16e2 D47E     		.sleb128 -172
 29902 16e4 25       		.uleb128 0x25
 29903 16e5 73747200 		.ascii	"str\000"
 29904 16e9 01       		.byte	0x1
 29905 16ea 6F09     		.2byte	0x96f
 29906 16ec 28160000 		.4byte	0x1628
 29907 16f0 03       		.uleb128 0x3
 29908 16f1 91       		.byte	0x91
 29909 16f2 DC7E     		.sleb128 -164
 29910 16f4 25       		.uleb128 0x25
 29911 16f5 6900     		.ascii	"i\000"
 29912 16f7 01       		.byte	0x1
 29913 16f8 7009     		.2byte	0x970
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 646


 29914 16fa 73000000 		.4byte	0x73
 29915 16fe 02       		.uleb128 0x2
 29916 16ff 91       		.byte	0x91
 29917 1700 54       		.sleb128 -44
 29918 1701 22       		.uleb128 0x22
 29919 1702 5A030000 		.4byte	.LASF245
 29920 1706 01       		.byte	0x1
 29921 1707 7409     		.2byte	0x974
 29922 1709 26120000 		.4byte	0x1226
 29923 170d 02       		.uleb128 0x2
 29924 170e 91       		.byte	0x91
 29925 170f 4C       		.sleb128 -52
 29926 1710 1E       		.uleb128 0x1e
 29927 1711 08010000 		.4byte	.LBB19
 29928 1715 D40C0000 		.4byte	.LBE19-.LBB19
 29929 1719 25       		.uleb128 0x25
 29930 171a 6B00     		.ascii	"k\000"
 29931 171c 01       		.byte	0x1
 29932 171d 8909     		.2byte	0x989
 29933 171f 97000000 		.4byte	0x97
 29934 1723 02       		.uleb128 0x2
 29935 1724 91       		.byte	0x91
 29936 1725 53       		.sleb128 -45
 29937 1726 1E       		.uleb128 0x1e
 29938 1727 12010000 		.4byte	.LBB20
 29939 172b AE0C0000 		.4byte	.LBE20-.LBB20
 29940 172f 22       		.uleb128 0x22
 29941 1730 D40D0000 		.4byte	.LASF238
 29942 1734 01       		.byte	0x1
 29943 1735 8B09     		.2byte	0x98b
 29944 1737 97000000 		.4byte	0x97
 29945 173b 02       		.uleb128 0x2
 29946 173c 91       		.byte	0x91
 29947 173d 4B       		.sleb128 -53
 29948 173e 25       		.uleb128 0x25
 29949 173f 4D4F5400 		.ascii	"MOT\000"
 29950 1743 01       		.byte	0x1
 29951 1744 8C09     		.2byte	0x98c
 29952 1746 38160000 		.4byte	0x1638
 29953 174a 02       		.uleb128 0x2
 29954 174b 91       		.byte	0x91
 29955 174c 44       		.sleb128 -60
 29956 174d 22       		.uleb128 0x22
 29957 174e AB130000 		.4byte	.LASF277
 29958 1752 01       		.byte	0x1
 29959 1753 8D09     		.2byte	0x98d
 29960 1755 97000000 		.4byte	0x97
 29961 1759 02       		.uleb128 0x2
 29962 175a 91       		.byte	0x91
 29963 175b 43       		.sleb128 -61
 29964 175c 00       		.byte	0
 29965 175d 00       		.byte	0
 29966 175e 00       		.byte	0
 29967 175f 21       		.uleb128 0x21
 29968 1760 A20B0000 		.4byte	.LASF281
 29969 1764 01       		.byte	0x1
 29970 1765 750A     		.2byte	0xa75
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 647


 29971 1767 00000000 		.4byte	.LFB75
 29972 176b C8000000 		.4byte	.LFE75-.LFB75
 29973 176f 01       		.uleb128 0x1
 29974 1770 9C       		.byte	0x9c
 29975 1771 A3170000 		.4byte	0x17a3
 29976 1775 24       		.uleb128 0x24
 29977 1776 F30D0000 		.4byte	.LASF276
 29978 177a 01       		.byte	0x1
 29979 177b 750A     		.2byte	0xa75
 29980 177d 1F010000 		.4byte	0x11f
 29981 1781 03       		.uleb128 0x3
 29982 1782 91       		.byte	0x91
 29983 1783 847F     		.sleb128 -124
 29984 1785 25       		.uleb128 0x25
 29985 1786 73747200 		.ascii	"str\000"
 29986 178a 01       		.byte	0x1
 29987 178b 770A     		.2byte	0xa77
 29988 178d 28160000 		.4byte	0x1628
 29989 1791 03       		.uleb128 0x3
 29990 1792 91       		.byte	0x91
 29991 1793 887F     		.sleb128 -120
 29992 1795 25       		.uleb128 0x25
 29993 1796 6900     		.ascii	"i\000"
 29994 1798 01       		.byte	0x1
 29995 1799 780A     		.2byte	0xa78
 29996 179b 73000000 		.4byte	0x73
 29997 179f 02       		.uleb128 0x2
 29998 17a0 91       		.byte	0x91
 29999 17a1 6C       		.sleb128 -20
 30000 17a2 00       		.byte	0
 30001 17a3 21       		.uleb128 0x21
 30002 17a4 FF0D0000 		.4byte	.LASF282
 30003 17a8 01       		.byte	0x1
 30004 17a9 8C0A     		.2byte	0xa8c
 30005 17ab 00000000 		.4byte	.LFB76
 30006 17af 30010000 		.4byte	.LFE76-.LFB76
 30007 17b3 01       		.uleb128 0x1
 30008 17b4 9C       		.byte	0x9c
 30009 17b5 E7170000 		.4byte	0x17e7
 30010 17b9 24       		.uleb128 0x24
 30011 17ba F30D0000 		.4byte	.LASF276
 30012 17be 01       		.byte	0x1
 30013 17bf 8C0A     		.2byte	0xa8c
 30014 17c1 1F010000 		.4byte	0x11f
 30015 17c5 03       		.uleb128 0x3
 30016 17c6 91       		.byte	0x91
 30017 17c7 847F     		.sleb128 -124
 30018 17c9 25       		.uleb128 0x25
 30019 17ca 73747200 		.ascii	"str\000"
 30020 17ce 01       		.byte	0x1
 30021 17cf 8E0A     		.2byte	0xa8e
 30022 17d1 28160000 		.4byte	0x1628
 30023 17d5 03       		.uleb128 0x3
 30024 17d6 91       		.byte	0x91
 30025 17d7 887F     		.sleb128 -120
 30026 17d9 25       		.uleb128 0x25
 30027 17da 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 648


 30028 17dc 01       		.byte	0x1
 30029 17dd 8F0A     		.2byte	0xa8f
 30030 17df 73000000 		.4byte	0x73
 30031 17e3 02       		.uleb128 0x2
 30032 17e4 91       		.byte	0x91
 30033 17e5 6C       		.sleb128 -20
 30034 17e6 00       		.byte	0
 30035 17e7 21       		.uleb128 0x21
 30036 17e8 CD140000 		.4byte	.LASF283
 30037 17ec 01       		.byte	0x1
 30038 17ed B30A     		.2byte	0xab3
 30039 17ef 00000000 		.4byte	.LFB77
 30040 17f3 74030000 		.4byte	.LFE77-.LFB77
 30041 17f7 01       		.uleb128 0x1
 30042 17f8 9C       		.byte	0x9c
 30043 17f9 2B180000 		.4byte	0x182b
 30044 17fd 24       		.uleb128 0x24
 30045 17fe F30D0000 		.4byte	.LASF276
 30046 1802 01       		.byte	0x1
 30047 1803 B30A     		.2byte	0xab3
 30048 1805 1F010000 		.4byte	0x11f
 30049 1809 03       		.uleb128 0x3
 30050 180a 91       		.byte	0x91
 30051 180b AC7D     		.sleb128 -340
 30052 180d 25       		.uleb128 0x25
 30053 180e 73747200 		.ascii	"str\000"
 30054 1812 01       		.byte	0x1
 30055 1813 B50A     		.2byte	0xab5
 30056 1815 2B180000 		.4byte	0x182b
 30057 1819 03       		.uleb128 0x3
 30058 181a 91       		.byte	0x91
 30059 181b B07D     		.sleb128 -336
 30060 181d 25       		.uleb128 0x25
 30061 181e 6900     		.ascii	"i\000"
 30062 1820 01       		.byte	0x1
 30063 1821 B60A     		.2byte	0xab6
 30064 1823 73000000 		.4byte	0x73
 30065 1827 02       		.uleb128 0x2
 30066 1828 91       		.byte	0x91
 30067 1829 5C       		.sleb128 -36
 30068 182a 00       		.byte	0
 30069 182b 09       		.uleb128 0x9
 30070 182c F9000000 		.4byte	0xf9
 30071 1830 3C180000 		.4byte	0x183c
 30072 1834 23       		.uleb128 0x23
 30073 1835 18010000 		.4byte	0x118
 30074 1839 2B01     		.2byte	0x12b
 30075 183b 00       		.byte	0
 30076 183c 21       		.uleb128 0x21
 30077 183d 240F0000 		.4byte	.LASF284
 30078 1841 01       		.byte	0x1
 30079 1842 DE0A     		.2byte	0xade
 30080 1844 00000000 		.4byte	.LFB78
 30081 1848 84000000 		.4byte	.LFE78-.LFB78
 30082 184c 01       		.uleb128 0x1
 30083 184d 9C       		.byte	0x9c
 30084 184e 8F180000 		.4byte	0x188f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 649


 30085 1852 24       		.uleb128 0x24
 30086 1853 25060000 		.4byte	.LASF228
 30087 1857 01       		.byte	0x1
 30088 1858 DE0A     		.2byte	0xade
 30089 185a 1B100000 		.4byte	0x101b
 30090 185e 02       		.uleb128 0x2
 30091 185f 91       		.byte	0x91
 30092 1860 6C       		.sleb128 -20
 30093 1861 24       		.uleb128 0x24
 30094 1862 810B0000 		.4byte	.LASF229
 30095 1866 01       		.byte	0x1
 30096 1867 DE0A     		.2byte	0xade
 30097 1869 A3000000 		.4byte	0xa3
 30098 186d 02       		.uleb128 0x2
 30099 186e 91       		.byte	0x91
 30100 186f 6A       		.sleb128 -22
 30101 1870 24       		.uleb128 0x24
 30102 1871 8C0F0000 		.4byte	.LASF285
 30103 1875 01       		.byte	0x1
 30104 1876 DE0A     		.2byte	0xade
 30105 1878 97000000 		.4byte	0x97
 30106 187c 02       		.uleb128 0x2
 30107 187d 91       		.byte	0x91
 30108 187e 69       		.sleb128 -23
 30109 187f 22       		.uleb128 0x22
 30110 1880 2B070000 		.4byte	.LASF243
 30111 1884 01       		.byte	0x1
 30112 1885 E00A     		.2byte	0xae0
 30113 1887 A3000000 		.4byte	0xa3
 30114 188b 02       		.uleb128 0x2
 30115 188c 91       		.byte	0x91
 30116 188d 76       		.sleb128 -10
 30117 188e 00       		.byte	0
 30118 188f 21       		.uleb128 0x21
 30119 1890 4A060000 		.4byte	.LASF286
 30120 1894 01       		.byte	0x1
 30121 1895 FA0A     		.2byte	0xafa
 30122 1897 00000000 		.4byte	.LFB79
 30123 189b 88000000 		.4byte	.LFE79-.LFB79
 30124 189f 01       		.uleb128 0x1
 30125 18a0 9C       		.byte	0x9c
 30126 18a1 D3180000 		.4byte	0x18d3
 30127 18a5 24       		.uleb128 0x24
 30128 18a6 25060000 		.4byte	.LASF228
 30129 18aa 01       		.byte	0x1
 30130 18ab FA0A     		.2byte	0xafa
 30131 18ad 1B100000 		.4byte	0x101b
 30132 18b1 02       		.uleb128 0x2
 30133 18b2 91       		.byte	0x91
 30134 18b3 6C       		.sleb128 -20
 30135 18b4 24       		.uleb128 0x24
 30136 18b5 810B0000 		.4byte	.LASF229
 30137 18b9 01       		.byte	0x1
 30138 18ba FA0A     		.2byte	0xafa
 30139 18bc A3000000 		.4byte	0xa3
 30140 18c0 02       		.uleb128 0x2
 30141 18c1 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 650


 30142 18c2 6A       		.sleb128 -22
 30143 18c3 22       		.uleb128 0x22
 30144 18c4 2B070000 		.4byte	.LASF243
 30145 18c8 01       		.byte	0x1
 30146 18c9 FC0A     		.2byte	0xafc
 30147 18cb A3000000 		.4byte	0xa3
 30148 18cf 02       		.uleb128 0x2
 30149 18d0 91       		.byte	0x91
 30150 18d1 76       		.sleb128 -10
 30151 18d2 00       		.byte	0
 30152 18d3 21       		.uleb128 0x21
 30153 18d4 0D0C0000 		.4byte	.LASF287
 30154 18d8 01       		.byte	0x1
 30155 18d9 160B     		.2byte	0xb16
 30156 18db 00000000 		.4byte	.LFB80
 30157 18df A0000000 		.4byte	.LFE80-.LFB80
 30158 18e3 01       		.uleb128 0x1
 30159 18e4 9C       		.byte	0x9c
 30160 18e5 26190000 		.4byte	0x1926
 30161 18e9 24       		.uleb128 0x24
 30162 18ea 25060000 		.4byte	.LASF228
 30163 18ee 01       		.byte	0x1
 30164 18ef 160B     		.2byte	0xb16
 30165 18f1 1B100000 		.4byte	0x101b
 30166 18f5 02       		.uleb128 0x2
 30167 18f6 91       		.byte	0x91
 30168 18f7 74       		.sleb128 -12
 30169 18f8 24       		.uleb128 0x24
 30170 18f9 810B0000 		.4byte	.LASF229
 30171 18fd 01       		.byte	0x1
 30172 18fe 160B     		.2byte	0xb16
 30173 1900 A3000000 		.4byte	0xa3
 30174 1904 02       		.uleb128 0x2
 30175 1905 91       		.byte	0x91
 30176 1906 72       		.sleb128 -14
 30177 1907 27       		.uleb128 0x27
 30178 1908 696400   		.ascii	"id\000"
 30179 190b 01       		.byte	0x1
 30180 190c 160B     		.2byte	0xb16
 30181 190e 97000000 		.4byte	0x97
 30182 1912 02       		.uleb128 0x2
 30183 1913 91       		.byte	0x91
 30184 1914 71       		.sleb128 -15
 30185 1915 25       		.uleb128 0x25
 30186 1916 6900     		.ascii	"i\000"
 30187 1918 01       		.byte	0x1
 30188 1919 180B     		.2byte	0xb18
 30189 191b A3000000 		.4byte	0xa3
 30190 191f 05       		.uleb128 0x5
 30191 1920 03       		.byte	0x3
 30192 1921 00000000 		.4byte	i.11211
 30193 1925 00       		.byte	0
 30194 1926 28       		.uleb128 0x28
 30195 1927 5B130000 		.4byte	.LASF293
 30196 192b 01       		.byte	0x1
 30197 192c 340B     		.2byte	0xb34
 30198 192e 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 651


 30199 1932 00000000 		.4byte	.LFB81
 30200 1936 3E000000 		.4byte	.LFE81-.LFB81
 30201 193a 01       		.uleb128 0x1
 30202 193b 9C       		.byte	0x9c
 30203 193c 7B190000 		.4byte	0x197b
 30204 1940 24       		.uleb128 0x24
 30205 1941 500B0000 		.4byte	.LASF288
 30206 1945 01       		.byte	0x1
 30207 1946 340B     		.2byte	0xb34
 30208 1948 1B100000 		.4byte	0x101b
 30209 194c 02       		.uleb128 0x2
 30210 194d 91       		.byte	0x91
 30211 194e 6C       		.sleb128 -20
 30212 194f 24       		.uleb128 0x24
 30213 1950 FA050000 		.4byte	.LASF289
 30214 1954 01       		.byte	0x1
 30215 1955 340B     		.2byte	0xb34
 30216 1957 97000000 		.4byte	0x97
 30217 195b 02       		.uleb128 0x2
 30218 195c 91       		.byte	0x91
 30219 195d 6B       		.sleb128 -21
 30220 195e 25       		.uleb128 0x25
 30221 195f 6900     		.ascii	"i\000"
 30222 1961 01       		.byte	0x1
 30223 1962 360B     		.2byte	0xb36
 30224 1964 97000000 		.4byte	0x97
 30225 1968 02       		.uleb128 0x2
 30226 1969 91       		.byte	0x91
 30227 196a 77       		.sleb128 -9
 30228 196b 22       		.uleb128 0x22
 30229 196c 530D0000 		.4byte	.LASF290
 30230 1970 01       		.byte	0x1
 30231 1971 370B     		.2byte	0xb37
 30232 1973 97000000 		.4byte	0x97
 30233 1977 02       		.uleb128 0x2
 30234 1978 91       		.byte	0x91
 30235 1979 76       		.sleb128 -10
 30236 197a 00       		.byte	0
 30237 197b 21       		.uleb128 0x21
 30238 197c 8F0B0000 		.4byte	.LASF291
 30239 1980 01       		.byte	0x1
 30240 1981 440B     		.2byte	0xb44
 30241 1983 00000000 		.4byte	.LFB82
 30242 1987 2E000000 		.4byte	.LFE82-.LFB82
 30243 198b 01       		.uleb128 0x1
 30244 198c 9C       		.byte	0x9c
 30245 198d BF190000 		.4byte	0x19bf
 30246 1991 24       		.uleb128 0x24
 30247 1992 43050000 		.4byte	.LASF292
 30248 1996 01       		.byte	0x1
 30249 1997 440B     		.2byte	0xb44
 30250 1999 97000000 		.4byte	0x97
 30251 199d 02       		.uleb128 0x2
 30252 199e 91       		.byte	0x91
 30253 199f 6F       		.sleb128 -17
 30254 19a0 22       		.uleb128 0x22
 30255 19a1 810B0000 		.4byte	.LASF229
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 652


 30256 19a5 01       		.byte	0x1
 30257 19a6 450B     		.2byte	0xb45
 30258 19a8 73000000 		.4byte	0x73
 30259 19ac 02       		.uleb128 0x2
 30260 19ad 91       		.byte	0x91
 30261 19ae 74       		.sleb128 -12
 30262 19af 22       		.uleb128 0x22
 30263 19b0 25060000 		.4byte	.LASF228
 30264 19b4 01       		.byte	0x1
 30265 19b5 460B     		.2byte	0xb46
 30266 19b7 80080000 		.4byte	0x880
 30267 19bb 02       		.uleb128 0x2
 30268 19bc 91       		.byte	0x91
 30269 19bd 70       		.sleb128 -16
 30270 19be 00       		.byte	0
 30271 19bf 29       		.uleb128 0x29
 30272 19c0 24040000 		.4byte	.LASF294
 30273 19c4 01       		.byte	0x1
 30274 19c5 530B     		.2byte	0xb53
 30275 19c7 97000000 		.4byte	0x97
 30276 19cb 00000000 		.4byte	.LFB83
 30277 19cf 98000000 		.4byte	.LFE83-.LFB83
 30278 19d3 01       		.uleb128 0x1
 30279 19d4 9C       		.byte	0x9c
 30280 19d5 231A0000 		.4byte	0x1a23
 30281 19d9 24       		.uleb128 0x24
 30282 19da ED050000 		.4byte	.LASF295
 30283 19de 01       		.byte	0x1
 30284 19df 530B     		.2byte	0xb53
 30285 19e1 73000000 		.4byte	0x73
 30286 19e5 02       		.uleb128 0x2
 30287 19e6 91       		.byte	0x91
 30288 19e7 64       		.sleb128 -28
 30289 19e8 25       		.uleb128 0x25
 30290 19e9 6900     		.ascii	"i\000"
 30291 19eb 01       		.byte	0x1
 30292 19ec 550B     		.2byte	0xb55
 30293 19ee 73000000 		.4byte	0x73
 30294 19f2 02       		.uleb128 0x2
 30295 19f3 91       		.byte	0x91
 30296 19f4 74       		.sleb128 -12
 30297 19f5 22       		.uleb128 0x22
 30298 19f6 CA000000 		.4byte	.LASF296
 30299 19fa 01       		.byte	0x1
 30300 19fb 560B     		.2byte	0xb56
 30301 19fd 97000000 		.4byte	0x97
 30302 1a01 02       		.uleb128 0x2
 30303 1a02 91       		.byte	0x91
 30304 1a03 6B       		.sleb128 -21
 30305 1a04 22       		.uleb128 0x22
 30306 1a05 66060000 		.4byte	.LASF297
 30307 1a09 01       		.byte	0x1
 30308 1a0a 570B     		.2byte	0xb57
 30309 1a0c 73000000 		.4byte	0x73
 30310 1a10 02       		.uleb128 0x2
 30311 1a11 91       		.byte	0x91
 30312 1a12 6C       		.sleb128 -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 653


 30313 1a13 22       		.uleb128 0x22
 30314 1a14 81050000 		.4byte	.LASF298
 30315 1a18 01       		.byte	0x1
 30316 1a19 580B     		.2byte	0xb58
 30317 1a1b 97000000 		.4byte	0x97
 30318 1a1f 02       		.uleb128 0x2
 30319 1a20 91       		.byte	0x91
 30320 1a21 73       		.sleb128 -13
 30321 1a22 00       		.byte	0
 30322 1a23 21       		.uleb128 0x21
 30323 1a24 980E0000 		.4byte	.LASF299
 30324 1a28 01       		.byte	0x1
 30325 1a29 7D0B     		.2byte	0xb7d
 30326 1a2b 00000000 		.4byte	.LFB84
 30327 1a2f 80000000 		.4byte	.LFE84-.LFB84
 30328 1a33 01       		.uleb128 0x1
 30329 1a34 9C       		.byte	0x9c
 30330 1a35 471A0000 		.4byte	0x1a47
 30331 1a39 25       		.uleb128 0x25
 30332 1a3a 6900     		.ascii	"i\000"
 30333 1a3c 01       		.byte	0x1
 30334 1a3d 7F0B     		.2byte	0xb7f
 30335 1a3f A3000000 		.4byte	0xa3
 30336 1a43 02       		.uleb128 0x2
 30337 1a44 91       		.byte	0x91
 30338 1a45 76       		.sleb128 -10
 30339 1a46 00       		.byte	0
 30340 1a47 29       		.uleb128 0x29
 30341 1a48 DE0D0000 		.4byte	.LASF300
 30342 1a4c 01       		.byte	0x1
 30343 1a4d 960B     		.2byte	0xb96
 30344 1a4f 97000000 		.4byte	0x97
 30345 1a53 00000000 		.4byte	.LFB85
 30346 1a57 5C000000 		.4byte	.LFE85-.LFB85
 30347 1a5b 01       		.uleb128 0x1
 30348 1a5c 9C       		.byte	0x9c
 30349 1a5d 6F1A0000 		.4byte	0x1a6f
 30350 1a61 25       		.uleb128 0x25
 30351 1a62 6900     		.ascii	"i\000"
 30352 1a64 01       		.byte	0x1
 30353 1a65 970B     		.2byte	0xb97
 30354 1a67 A3000000 		.4byte	0xa3
 30355 1a6b 02       		.uleb128 0x2
 30356 1a6c 91       		.byte	0x91
 30357 1a6d 76       		.sleb128 -10
 30358 1a6e 00       		.byte	0
 30359 1a6f 29       		.uleb128 0x29
 30360 1a70 6C060000 		.4byte	.LASF301
 30361 1a74 01       		.byte	0x1
 30362 1a75 A90B     		.2byte	0xba9
 30363 1a77 97000000 		.4byte	0x97
 30364 1a7b 00000000 		.4byte	.LFB86
 30365 1a7f 08060000 		.4byte	.LFE86-.LFB86
 30366 1a83 01       		.uleb128 0x1
 30367 1a84 9C       		.byte	0x9c
 30368 1a85 A41A0000 		.4byte	0x1aa4
 30369 1a89 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 654


 30370 1a8a 6900     		.ascii	"i\000"
 30371 1a8c 01       		.byte	0x1
 30372 1a8d AB0B     		.2byte	0xbab
 30373 1a8f 97000000 		.4byte	0x97
 30374 1a93 02       		.uleb128 0x2
 30375 1a94 91       		.byte	0x91
 30376 1a95 77       		.sleb128 -9
 30377 1a96 25       		.uleb128 0x25
 30378 1a97 6A00     		.ascii	"j\000"
 30379 1a99 01       		.byte	0x1
 30380 1a9a AB0B     		.2byte	0xbab
 30381 1a9c 97000000 		.4byte	0x97
 30382 1aa0 02       		.uleb128 0x2
 30383 1aa1 91       		.byte	0x91
 30384 1aa2 76       		.sleb128 -10
 30385 1aa3 00       		.byte	0
 30386 1aa4 2A       		.uleb128 0x2a
 30387 1aa5 0B090000 		.4byte	.LASF302
 30388 1aa9 01       		.byte	0x1
 30389 1aaa 470C     		.2byte	0xc47
 30390 1aac 00000000 		.4byte	.LFB87
 30391 1ab0 38020000 		.4byte	.LFE87-.LFB87
 30392 1ab4 01       		.uleb128 0x1
 30393 1ab5 9C       		.byte	0x9c
 30394 1ab6 E11A0000 		.4byte	0x1ae1
 30395 1aba 22       		.uleb128 0x22
 30396 1abb D40D0000 		.4byte	.LASF238
 30397 1abf 01       		.byte	0x1
 30398 1ac0 490C     		.2byte	0xc49
 30399 1ac2 97000000 		.4byte	0x97
 30400 1ac6 02       		.uleb128 0x2
 30401 1ac7 91       		.byte	0x91
 30402 1ac8 73       		.sleb128 -13
 30403 1ac9 1E       		.uleb128 0x1e
 30404 1aca FA000000 		.4byte	.LBB21
 30405 1ace 6A000000 		.4byte	.LBE21-.LBB21
 30406 1ad2 25       		.uleb128 0x25
 30407 1ad3 6900     		.ascii	"i\000"
 30408 1ad5 01       		.byte	0x1
 30409 1ad6 5A0C     		.2byte	0xc5a
 30410 1ad8 73000000 		.4byte	0x73
 30411 1adc 02       		.uleb128 0x2
 30412 1add 91       		.byte	0x91
 30413 1ade 74       		.sleb128 -12
 30414 1adf 00       		.byte	0
 30415 1ae0 00       		.byte	0
 30416 1ae1 2B       		.uleb128 0x2b
 30417 1ae2 720B0000 		.4byte	.LASF303
 30418 1ae6 01       		.byte	0x1
 30419 1ae7 790C     		.2byte	0xc79
 30420 1ae9 00000000 		.4byte	.LFB88
 30421 1aed 28000000 		.4byte	.LFE88-.LFB88
 30422 1af1 01       		.uleb128 0x1
 30423 1af2 9C       		.byte	0x9c
 30424 1af3 2B       		.uleb128 0x2b
 30425 1af4 04110000 		.4byte	.LASF304
 30426 1af8 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 655


 30427 1af9 850C     		.2byte	0xc85
 30428 1afb 00000000 		.4byte	.LFB89
 30429 1aff 78000000 		.4byte	.LFE89-.LFB89
 30430 1b03 01       		.uleb128 0x1
 30431 1b04 9C       		.byte	0x9c
 30432 1b05 2B       		.uleb128 0x2b
 30433 1b06 DD030000 		.4byte	.LASF305
 30434 1b0a 01       		.byte	0x1
 30435 1b0b 9B0C     		.2byte	0xc9b
 30436 1b0d 00000000 		.4byte	.LFB90
 30437 1b11 B0000000 		.4byte	.LFE90-.LFB90
 30438 1b15 01       		.uleb128 0x1
 30439 1b16 9C       		.byte	0x9c
 30440 1b17 26       		.uleb128 0x26
 30441 1b18 9A060000 		.4byte	.LASF307
 30442 1b1c 01       		.byte	0x1
 30443 1b1d BC0C     		.2byte	0xcbc
 30444 1b1f 00000000 		.4byte	.LFB91
 30445 1b23 B4000000 		.4byte	.LFE91-.LFB91
 30446 1b27 01       		.uleb128 0x1
 30447 1b28 9C       		.byte	0x9c
 30448 1b29 5B1B0000 		.4byte	0x1b5b
 30449 1b2d 22       		.uleb128 0x22
 30450 1b2e 2B070000 		.4byte	.LASF243
 30451 1b32 01       		.byte	0x1
 30452 1b33 BE0C     		.2byte	0xcbe
 30453 1b35 97000000 		.4byte	0x97
 30454 1b39 02       		.uleb128 0x2
 30455 1b3a 91       		.byte	0x91
 30456 1b3b 6F       		.sleb128 -17
 30457 1b3c 22       		.uleb128 0x22
 30458 1b3d BE110000 		.4byte	.LASF234
 30459 1b41 01       		.byte	0x1
 30460 1b42 BF0C     		.2byte	0xcbf
 30461 1b44 C7000000 		.4byte	0xc7
 30462 1b48 02       		.uleb128 0x2
 30463 1b49 91       		.byte	0x91
 30464 1b4a 6C       		.sleb128 -20
 30465 1b4b 22       		.uleb128 0x22
 30466 1b4c 25060000 		.4byte	.LASF228
 30467 1b50 01       		.byte	0x1
 30468 1b51 C20C     		.2byte	0xcc2
 30469 1b53 11080000 		.4byte	0x811
 30470 1b57 02       		.uleb128 0x2
 30471 1b58 91       		.byte	0x91
 30472 1b59 64       		.sleb128 -28
 30473 1b5a 00       		.byte	0
 30474 1b5b 26       		.uleb128 0x26
 30475 1b5c 850E0000 		.4byte	.LASF308
 30476 1b60 01       		.byte	0x1
 30477 1b61 D50C     		.2byte	0xcd5
 30478 1b63 00000000 		.4byte	.LFB92
 30479 1b67 B8000000 		.4byte	.LFE92-.LFB92
 30480 1b6b 01       		.uleb128 0x1
 30481 1b6c 9C       		.byte	0x9c
 30482 1b6d 9F1B0000 		.4byte	0x1b9f
 30483 1b71 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 656


 30484 1b72 2B070000 		.4byte	.LASF243
 30485 1b76 01       		.byte	0x1
 30486 1b77 D70C     		.2byte	0xcd7
 30487 1b79 97000000 		.4byte	0x97
 30488 1b7d 02       		.uleb128 0x2
 30489 1b7e 91       		.byte	0x91
 30490 1b7f 6F       		.sleb128 -17
 30491 1b80 22       		.uleb128 0x22
 30492 1b81 BE110000 		.4byte	.LASF234
 30493 1b85 01       		.byte	0x1
 30494 1b86 D80C     		.2byte	0xcd8
 30495 1b88 C7000000 		.4byte	0xc7
 30496 1b8c 02       		.uleb128 0x2
 30497 1b8d 91       		.byte	0x91
 30498 1b8e 6C       		.sleb128 -20
 30499 1b8f 22       		.uleb128 0x22
 30500 1b90 25060000 		.4byte	.LASF228
 30501 1b94 01       		.byte	0x1
 30502 1b95 DC0C     		.2byte	0xcdc
 30503 1b97 11080000 		.4byte	0x811
 30504 1b9b 02       		.uleb128 0x2
 30505 1b9c 91       		.byte	0x91
 30506 1b9d 64       		.sleb128 -28
 30507 1b9e 00       		.byte	0
 30508 1b9f 26       		.uleb128 0x26
 30509 1ba0 F2010000 		.4byte	.LASF309
 30510 1ba4 01       		.byte	0x1
 30511 1ba5 EE0C     		.2byte	0xcee
 30512 1ba7 00000000 		.4byte	.LFB93
 30513 1bab B8000000 		.4byte	.LFE93-.LFB93
 30514 1baf 01       		.uleb128 0x1
 30515 1bb0 9C       		.byte	0x9c
 30516 1bb1 E31B0000 		.4byte	0x1be3
 30517 1bb5 22       		.uleb128 0x22
 30518 1bb6 2B070000 		.4byte	.LASF243
 30519 1bba 01       		.byte	0x1
 30520 1bbb F00C     		.2byte	0xcf0
 30521 1bbd 97000000 		.4byte	0x97
 30522 1bc1 02       		.uleb128 0x2
 30523 1bc2 91       		.byte	0x91
 30524 1bc3 6F       		.sleb128 -17
 30525 1bc4 22       		.uleb128 0x22
 30526 1bc5 BE110000 		.4byte	.LASF234
 30527 1bc9 01       		.byte	0x1
 30528 1bca F10C     		.2byte	0xcf1
 30529 1bcc C7000000 		.4byte	0xc7
 30530 1bd0 02       		.uleb128 0x2
 30531 1bd1 91       		.byte	0x91
 30532 1bd2 6C       		.sleb128 -20
 30533 1bd3 22       		.uleb128 0x22
 30534 1bd4 25060000 		.4byte	.LASF228
 30535 1bd8 01       		.byte	0x1
 30536 1bd9 F50C     		.2byte	0xcf5
 30537 1bdb 11080000 		.4byte	0x811
 30538 1bdf 02       		.uleb128 0x2
 30539 1be0 91       		.byte	0x91
 30540 1be1 64       		.sleb128 -28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 657


 30541 1be2 00       		.byte	0
 30542 1be3 26       		.uleb128 0x26
 30543 1be4 0C0A0000 		.4byte	.LASF310
 30544 1be8 01       		.byte	0x1
 30545 1be9 070D     		.2byte	0xd07
 30546 1beb 00000000 		.4byte	.LFB94
 30547 1bef 5C000000 		.4byte	.LFE94-.LFB94
 30548 1bf3 01       		.uleb128 0x1
 30549 1bf4 9C       		.byte	0x9c
 30550 1bf5 181C0000 		.4byte	0x1c18
 30551 1bf9 22       		.uleb128 0x22
 30552 1bfa BE110000 		.4byte	.LASF234
 30553 1bfe 01       		.byte	0x1
 30554 1bff 090D     		.2byte	0xd09
 30555 1c01 C7000000 		.4byte	0xc7
 30556 1c05 02       		.uleb128 0x2
 30557 1c06 91       		.byte	0x91
 30558 1c07 76       		.sleb128 -10
 30559 1c08 22       		.uleb128 0x22
 30560 1c09 25060000 		.4byte	.LASF228
 30561 1c0d 01       		.byte	0x1
 30562 1c0e 0D0D     		.2byte	0xd0d
 30563 1c10 37090000 		.4byte	0x937
 30564 1c14 02       		.uleb128 0x2
 30565 1c15 91       		.byte	0x91
 30566 1c16 70       		.sleb128 -16
 30567 1c17 00       		.byte	0
 30568 1c18 2C       		.uleb128 0x2c
 30569 1c19 D70B0000 		.4byte	.LASF311
 30570 1c1d 01       		.byte	0x1
 30571 1c1e 1F0D     		.2byte	0xd1f
 30572 1c20 00000000 		.4byte	.LFB95
 30573 1c24 44020000 		.4byte	.LFE95-.LFB95
 30574 1c28 01       		.uleb128 0x1
 30575 1c29 9C       		.byte	0x9c
 30576 1c2a 821C0000 		.4byte	0x1c82
 30577 1c2e 22       		.uleb128 0x22
 30578 1c2f BE110000 		.4byte	.LASF234
 30579 1c33 01       		.byte	0x1
 30580 1c34 220D     		.2byte	0xd22
 30581 1c36 821C0000 		.4byte	0x1c82
 30582 1c3a 02       		.uleb128 0x2
 30583 1c3b 91       		.byte	0x91
 30584 1c3c 70       		.sleb128 -16
 30585 1c3d 22       		.uleb128 0x22
 30586 1c3e ED060000 		.4byte	.LASF312
 30587 1c42 01       		.byte	0x1
 30588 1c43 230D     		.2byte	0xd23
 30589 1c45 821C0000 		.4byte	0x1c82
 30590 1c49 05       		.uleb128 0x5
 30591 1c4a 03       		.byte	0x3
 30592 1c4b 04000000 		.4byte	last_aux_int16.11342
 30593 1c4f 2D       		.uleb128 0x2d
 30594 1c50 2E000000 		.4byte	.LBB22
 30595 1c54 50000000 		.4byte	.LBE22-.LBB22
 30596 1c58 6A1C0000 		.4byte	0x1c6a
 30597 1c5c 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 658


 30598 1c5d 6900     		.ascii	"i\000"
 30599 1c5f 01       		.byte	0x1
 30600 1c60 2A0D     		.2byte	0xd2a
 30601 1c62 97000000 		.4byte	0x97
 30602 1c66 02       		.uleb128 0x2
 30603 1c67 91       		.byte	0x91
 30604 1c68 77       		.sleb128 -9
 30605 1c69 00       		.byte	0
 30606 1c6a 1E       		.uleb128 0x1e
 30607 1c6b 88000000 		.4byte	.LBB23
 30608 1c6f 98010000 		.4byte	.LBE23-.LBB23
 30609 1c73 25       		.uleb128 0x25
 30610 1c74 6900     		.ascii	"i\000"
 30611 1c76 01       		.byte	0x1
 30612 1c77 340D     		.2byte	0xd34
 30613 1c79 97000000 		.4byte	0x97
 30614 1c7d 02       		.uleb128 0x2
 30615 1c7e 91       		.byte	0x91
 30616 1c7f 76       		.sleb128 -10
 30617 1c80 00       		.byte	0
 30618 1c81 00       		.byte	0
 30619 1c82 09       		.uleb128 0x9
 30620 1c83 C7000000 		.4byte	0xc7
 30621 1c87 921C0000 		.4byte	0x1c92
 30622 1c8b 0A       		.uleb128 0xa
 30623 1c8c 18010000 		.4byte	0x118
 30624 1c90 01       		.byte	0x1
 30625 1c91 00       		.byte	0
 30626 1c92 26       		.uleb128 0x26
 30627 1c93 2C140000 		.4byte	.LASF313
 30628 1c97 01       		.byte	0x1
 30629 1c98 4F0D     		.2byte	0xd4f
 30630 1c9a 00000000 		.4byte	.LFB96
 30631 1c9e BC000000 		.4byte	.LFE96-.LFB96
 30632 1ca2 01       		.uleb128 0x1
 30633 1ca3 9C       		.byte	0x9c
 30634 1ca4 B81C0000 		.4byte	0x1cb8
 30635 1ca8 25       		.uleb128 0x25
 30636 1ca9 61757800 		.ascii	"aux\000"
 30637 1cad 01       		.byte	0x1
 30638 1cae 520D     		.2byte	0xd52
 30639 1cb0 97000000 		.4byte	0x97
 30640 1cb4 02       		.uleb128 0x2
 30641 1cb5 91       		.byte	0x91
 30642 1cb6 77       		.sleb128 -9
 30643 1cb7 00       		.byte	0
 30644 1cb8 26       		.uleb128 0x26
 30645 1cb9 350C0000 		.4byte	.LASF314
 30646 1cbd 01       		.byte	0x1
 30647 1cbe 740D     		.2byte	0xd74
 30648 1cc0 00000000 		.4byte	.LFB97
 30649 1cc4 5C000000 		.4byte	.LFE97-.LFB97
 30650 1cc8 01       		.uleb128 0x1
 30651 1cc9 9C       		.byte	0x9c
 30652 1cca DE1C0000 		.4byte	0x1cde
 30653 1cce 22       		.uleb128 0x22
 30654 1ccf 25060000 		.4byte	.LASF228
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 659


 30655 1cd3 01       		.byte	0x1
 30656 1cd4 760D     		.2byte	0xd76
 30657 1cd6 C4050000 		.4byte	0x5c4
 30658 1cda 02       		.uleb128 0x2
 30659 1cdb 91       		.byte	0x91
 30660 1cdc 74       		.sleb128 -12
 30661 1cdd 00       		.byte	0
 30662 1cde 26       		.uleb128 0x26
 30663 1cdf C50F0000 		.4byte	.LASF315
 30664 1ce3 01       		.byte	0x1
 30665 1ce4 8B0D     		.2byte	0xd8b
 30666 1ce6 00000000 		.4byte	.LFB98
 30667 1cea 38010000 		.4byte	.LFE98-.LFB98
 30668 1cee 01       		.uleb128 0x1
 30669 1cef 9C       		.byte	0x9c
 30670 1cf0 221D0000 		.4byte	0x1d22
 30671 1cf4 22       		.uleb128 0x22
 30672 1cf5 2B070000 		.4byte	.LASF243
 30673 1cf9 01       		.byte	0x1
 30674 1cfa 8D0D     		.2byte	0xd8d
 30675 1cfc 97000000 		.4byte	0x97
 30676 1d00 02       		.uleb128 0x2
 30677 1d01 91       		.byte	0x91
 30678 1d02 6F       		.sleb128 -17
 30679 1d03 22       		.uleb128 0x22
 30680 1d04 BE110000 		.4byte	.LASF234
 30681 1d08 01       		.byte	0x1
 30682 1d09 8E0D     		.2byte	0xd8e
 30683 1d0b C7000000 		.4byte	0xc7
 30684 1d0f 02       		.uleb128 0x2
 30685 1d10 91       		.byte	0x91
 30686 1d11 6C       		.sleb128 -20
 30687 1d12 22       		.uleb128 0x22
 30688 1d13 25060000 		.4byte	.LASF228
 30689 1d17 01       		.byte	0x1
 30690 1d18 920D     		.2byte	0xd92
 30691 1d1a 47090000 		.4byte	0x947
 30692 1d1e 02       		.uleb128 0x2
 30693 1d1f 91       		.byte	0x91
 30694 1d20 60       		.sleb128 -32
 30695 1d21 00       		.byte	0
 30696 1d22 26       		.uleb128 0x26
 30697 1d23 760A0000 		.4byte	.LASF316
 30698 1d27 01       		.byte	0x1
 30699 1d28 B20D     		.2byte	0xdb2
 30700 1d2a 00000000 		.4byte	.LFB99
 30701 1d2e EC000000 		.4byte	.LFE99-.LFB99
 30702 1d32 01       		.uleb128 0x1
 30703 1d33 9C       		.byte	0x9c
 30704 1d34 571D0000 		.4byte	0x1d57
 30705 1d38 22       		.uleb128 0x22
 30706 1d39 25060000 		.4byte	.LASF228
 30707 1d3d 01       		.byte	0x1
 30708 1d3e B60D     		.2byte	0xdb6
 30709 1d40 37090000 		.4byte	0x937
 30710 1d44 02       		.uleb128 0x2
 30711 1d45 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 660


 30712 1d46 68       		.sleb128 -24
 30713 1d47 22       		.uleb128 0x22
 30714 1d48 BE110000 		.4byte	.LASF234
 30715 1d4c 01       		.byte	0x1
 30716 1d4d B70D     		.2byte	0xdb7
 30717 1d4f C7000000 		.4byte	0xc7
 30718 1d53 02       		.uleb128 0x2
 30719 1d54 91       		.byte	0x91
 30720 1d55 66       		.sleb128 -26
 30721 1d56 00       		.byte	0
 30722 1d57 26       		.uleb128 0x26
 30723 1d58 8F070000 		.4byte	.LASF317
 30724 1d5c 01       		.byte	0x1
 30725 1d5d D80D     		.2byte	0xdd8
 30726 1d5f 00000000 		.4byte	.LFB100
 30727 1d63 64000000 		.4byte	.LFE100-.LFB100
 30728 1d67 01       		.uleb128 0x1
 30729 1d68 9C       		.byte	0x9c
 30730 1d69 8C1D0000 		.4byte	0x1d8c
 30731 1d6d 22       		.uleb128 0x22
 30732 1d6e 25060000 		.4byte	.LASF228
 30733 1d72 01       		.byte	0x1
 30734 1d73 DC0D     		.2byte	0xddc
 30735 1d75 A40A0000 		.4byte	0xaa4
 30736 1d79 02       		.uleb128 0x2
 30737 1d7a 91       		.byte	0x91
 30738 1d7b 74       		.sleb128 -12
 30739 1d7c 22       		.uleb128 0x22
 30740 1d7d BE110000 		.4byte	.LASF234
 30741 1d81 01       		.byte	0x1
 30742 1d82 DD0D     		.2byte	0xddd
 30743 1d84 C7000000 		.4byte	0xc7
 30744 1d88 02       		.uleb128 0x2
 30745 1d89 91       		.byte	0x91
 30746 1d8a 72       		.sleb128 -14
 30747 1d8b 00       		.byte	0
 30748 1d8c 2E       		.uleb128 0x2e
 30749 1d8d 79070000 		.4byte	.LASF318
 30750 1d91 01       		.byte	0x1
 30751 1d92 F20D     		.2byte	0xdf2
 30752 1d94 C7000000 		.4byte	0xc7
 30753 1d98 00000000 		.4byte	.LFB101
 30754 1d9c A8000000 		.4byte	.LFE101-.LFB101
 30755 1da0 01       		.uleb128 0x1
 30756 1da1 9C       		.byte	0x9c
 30757 1da2 011E0000 		.4byte	0x1e01
 30758 1da6 22       		.uleb128 0x22
 30759 1da7 25060000 		.4byte	.LASF228
 30760 1dab 01       		.byte	0x1
 30761 1dac F40D     		.2byte	0xdf4
 30762 1dae 011E0000 		.4byte	0x1e01
 30763 1db2 02       		.uleb128 0x2
 30764 1db3 91       		.byte	0x91
 30765 1db4 5C       		.sleb128 -36
 30766 1db5 22       		.uleb128 0x22
 30767 1db6 810B0000 		.4byte	.LASF229
 30768 1dba 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 661


 30769 1dbb F50D     		.2byte	0xdf5
 30770 1dbd 97000000 		.4byte	0x97
 30771 1dc1 02       		.uleb128 0x2
 30772 1dc2 91       		.byte	0x91
 30773 1dc3 74       		.sleb128 -12
 30774 1dc4 22       		.uleb128 0x22
 30775 1dc5 700F0000 		.4byte	.LASF319
 30776 1dc9 01       		.byte	0x1
 30777 1dca F60D     		.2byte	0xdf6
 30778 1dcc C7000000 		.4byte	0xc7
 30779 1dd0 02       		.uleb128 0x2
 30780 1dd1 91       		.byte	0x91
 30781 1dd2 76       		.sleb128 -10
 30782 1dd3 22       		.uleb128 0x22
 30783 1dd4 B7020000 		.4byte	.LASF320
 30784 1dd8 01       		.byte	0x1
 30785 1dd9 F70D     		.2byte	0xdf7
 30786 1ddb AF000000 		.4byte	0xaf
 30787 1ddf 02       		.uleb128 0x2
 30788 1de0 91       		.byte	0x91
 30789 1de1 70       		.sleb128 -16
 30790 1de2 22       		.uleb128 0x22
 30791 1de3 23130000 		.4byte	.LASF321
 30792 1de7 01       		.byte	0x1
 30793 1de8 F70D     		.2byte	0xdf7
 30794 1dea AF000000 		.4byte	0xaf
 30795 1dee 02       		.uleb128 0x2
 30796 1def 91       		.byte	0x91
 30797 1df0 6C       		.sleb128 -20
 30798 1df1 22       		.uleb128 0x22
 30799 1df2 4F040000 		.4byte	.LASF322
 30800 1df6 01       		.byte	0x1
 30801 1df7 F80D     		.2byte	0xdf8
 30802 1df9 97000000 		.4byte	0x97
 30803 1dfd 02       		.uleb128 0x2
 30804 1dfe 91       		.byte	0x91
 30805 1dff 75       		.sleb128 -11
 30806 1e00 00       		.byte	0
 30807 1e01 09       		.uleb128 0x9
 30808 1e02 97000000 		.4byte	0x97
 30809 1e06 111E0000 		.4byte	0x1e11
 30810 1e0a 0A       		.uleb128 0xa
 30811 1e0b 18010000 		.4byte	0x118
 30812 1e0f 0F       		.byte	0xf
 30813 1e10 00       		.byte	0
 30814 1e11 2F       		.uleb128 0x2f
 30815 1e12 DD000000 		.4byte	.LASF337
 30816 1e16 01       		.byte	0x1
 30817 1e17 150E     		.2byte	0xe15
 30818 1e19 00000000 		.4byte	.LFB102
 30819 1e1d 34000000 		.4byte	.LFE102-.LFB102
 30820 1e21 01       		.uleb128 0x1
 30821 1e22 9C       		.byte	0x9c
 30822 1e23 26       		.uleb128 0x26
 30823 1e24 B0030000 		.4byte	.LASF323
 30824 1e28 01       		.byte	0x1
 30825 1e29 230E     		.2byte	0xe23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 662


 30826 1e2b 00000000 		.4byte	.LFB103
 30827 1e2f 20000000 		.4byte	.LFE103-.LFB103
 30828 1e33 01       		.uleb128 0x1
 30829 1e34 9C       		.byte	0x9c
 30830 1e35 491E0000 		.4byte	0x1e49
 30831 1e39 22       		.uleb128 0x22
 30832 1e3a 25060000 		.4byte	.LASF228
 30833 1e3e 01       		.byte	0x1
 30834 1e3f 250E     		.2byte	0xe25
 30835 1e41 80080000 		.4byte	0x880
 30836 1e45 02       		.uleb128 0x2
 30837 1e46 91       		.byte	0x91
 30838 1e47 74       		.sleb128 -12
 30839 1e48 00       		.byte	0
 30840 1e49 26       		.uleb128 0x26
 30841 1e4a 55010000 		.4byte	.LASF324
 30842 1e4e 01       		.byte	0x1
 30843 1e4f 310E     		.2byte	0xe31
 30844 1e51 00000000 		.4byte	.LFB104
 30845 1e55 A0000000 		.4byte	.LFE104-.LFB104
 30846 1e59 01       		.uleb128 0x1
 30847 1e5a 9C       		.byte	0x9c
 30848 1e5b 7E1E0000 		.4byte	0x1e7e
 30849 1e5f 22       		.uleb128 0x22
 30850 1e60 25060000 		.4byte	.LASF228
 30851 1e64 01       		.byte	0x1
 30852 1e65 350E     		.2byte	0xe35
 30853 1e67 37090000 		.4byte	0x937
 30854 1e6b 02       		.uleb128 0x2
 30855 1e6c 91       		.byte	0x91
 30856 1e6d 70       		.sleb128 -16
 30857 1e6e 22       		.uleb128 0x22
 30858 1e6f BE110000 		.4byte	.LASF234
 30859 1e73 01       		.byte	0x1
 30860 1e74 360E     		.2byte	0xe36
 30861 1e76 C7000000 		.4byte	0xc7
 30862 1e7a 02       		.uleb128 0x2
 30863 1e7b 91       		.byte	0x91
 30864 1e7c 6E       		.sleb128 -18
 30865 1e7d 00       		.byte	0
 30866 1e7e 26       		.uleb128 0x26
 30867 1e7f 8E100000 		.4byte	.LASF325
 30868 1e83 01       		.byte	0x1
 30869 1e84 4A0E     		.2byte	0xe4a
 30870 1e86 00000000 		.4byte	.LFB105
 30871 1e8a BC010000 		.4byte	.LFE105-.LFB105
 30872 1e8e 01       		.uleb128 0x1
 30873 1e8f 9C       		.byte	0x9c
 30874 1e90 E01E0000 		.4byte	0x1ee0
 30875 1e94 22       		.uleb128 0x22
 30876 1e95 F30B0000 		.4byte	.LASF326
 30877 1e99 01       		.byte	0x1
 30878 1e9a 4D0E     		.2byte	0xe4d
 30879 1e9c AF000000 		.4byte	0xaf
 30880 1ea0 02       		.uleb128 0x2
 30881 1ea1 91       		.byte	0x91
 30882 1ea2 70       		.sleb128 -16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 663


 30883 1ea3 22       		.uleb128 0x22
 30884 1ea4 F20E0000 		.4byte	.LASF327
 30885 1ea8 01       		.byte	0x1
 30886 1ea9 4E0E     		.2byte	0xe4e
 30887 1eab EB000000 		.4byte	0xeb
 30888 1eaf 02       		.uleb128 0x2
 30889 1eb0 91       		.byte	0x91
 30890 1eb1 6C       		.sleb128 -20
 30891 1eb2 22       		.uleb128 0x22
 30892 1eb3 810B0000 		.4byte	.LASF229
 30893 1eb7 01       		.byte	0x1
 30894 1eb8 4F0E     		.2byte	0xe4f
 30895 1eba 97000000 		.4byte	0x97
 30896 1ebe 02       		.uleb128 0x2
 30897 1ebf 91       		.byte	0x91
 30898 1ec0 77       		.sleb128 -9
 30899 1ec1 22       		.uleb128 0x22
 30900 1ec2 25060000 		.4byte	.LASF228
 30901 1ec6 01       		.byte	0x1
 30902 1ec7 500E     		.2byte	0xe50
 30903 1ec9 80080000 		.4byte	0x880
 30904 1ecd 02       		.uleb128 0x2
 30905 1ece 91       		.byte	0x91
 30906 1ecf 68       		.sleb128 -24
 30907 1ed0 22       		.uleb128 0x22
 30908 1ed1 8C0F0000 		.4byte	.LASF285
 30909 1ed5 01       		.byte	0x1
 30910 1ed6 510E     		.2byte	0xe51
 30911 1ed8 97000000 		.4byte	0x97
 30912 1edc 02       		.uleb128 0x2
 30913 1edd 91       		.byte	0x91
 30914 1ede 6B       		.sleb128 -21
 30915 1edf 00       		.byte	0
 30916 1ee0 26       		.uleb128 0x26
 30917 1ee1 08020000 		.4byte	.LASF328
 30918 1ee5 01       		.byte	0x1
 30919 1ee6 8B0E     		.2byte	0xe8b
 30920 1ee8 00000000 		.4byte	.LFB106
 30921 1eec 60000000 		.4byte	.LFE106-.LFB106
 30922 1ef0 01       		.uleb128 0x1
 30923 1ef1 9C       		.byte	0x9c
 30924 1ef2 151F0000 		.4byte	0x1f15
 30925 1ef6 22       		.uleb128 0x22
 30926 1ef7 25060000 		.4byte	.LASF228
 30927 1efb 01       		.byte	0x1
 30928 1efc 8D0E     		.2byte	0xe8d
 30929 1efe 37090000 		.4byte	0x937
 30930 1f02 02       		.uleb128 0x2
 30931 1f03 91       		.byte	0x91
 30932 1f04 70       		.sleb128 -16
 30933 1f05 22       		.uleb128 0x22
 30934 1f06 BE110000 		.4byte	.LASF234
 30935 1f0a 01       		.byte	0x1
 30936 1f0b 8E0E     		.2byte	0xe8e
 30937 1f0d C7000000 		.4byte	0xc7
 30938 1f11 02       		.uleb128 0x2
 30939 1f12 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 664


 30940 1f13 6E       		.sleb128 -18
 30941 1f14 00       		.byte	0
 30942 1f15 26       		.uleb128 0x26
 30943 1f16 91010000 		.4byte	.LASF329
 30944 1f1a 01       		.byte	0x1
 30945 1f1b A10E     		.2byte	0xea1
 30946 1f1d 00000000 		.4byte	.LFB107
 30947 1f21 98050000 		.4byte	.LFE107-.LFB107
 30948 1f25 01       		.uleb128 0x1
 30949 1f26 9C       		.byte	0x9c
 30950 1f27 A21F0000 		.4byte	0x1fa2
 30951 1f2b 22       		.uleb128 0x22
 30952 1f2c 67130000 		.4byte	.LASF330
 30953 1f30 01       		.byte	0x1
 30954 1f31 A40E     		.2byte	0xea4
 30955 1f33 97000000 		.4byte	0x97
 30956 1f37 02       		.uleb128 0x2
 30957 1f38 91       		.byte	0x91
 30958 1f39 6F       		.sleb128 -17
 30959 1f3a 25       		.uleb128 0x25
 30960 1f3b 6300     		.ascii	"c\000"
 30961 1f3d 01       		.byte	0x1
 30962 1f3e A50E     		.2byte	0xea5
 30963 1f40 A3000000 		.4byte	0xa3
 30964 1f44 02       		.uleb128 0x2
 30965 1f45 91       		.byte	0x91
 30966 1f46 6C       		.sleb128 -20
 30967 1f47 25       		.uleb128 0x25
 30968 1f48 6B00     		.ascii	"k\000"
 30969 1f4a 01       		.byte	0x1
 30970 1f4b A60E     		.2byte	0xea6
 30971 1f4d 97000000 		.4byte	0x97
 30972 1f51 02       		.uleb128 0x2
 30973 1f52 91       		.byte	0x91
 30974 1f53 6B       		.sleb128 -21
 30975 1f54 22       		.uleb128 0x22
 30976 1f55 3F000000 		.4byte	.LASF331
 30977 1f59 01       		.byte	0x1
 30978 1f5a A70E     		.2byte	0xea7
 30979 1f5c A3000000 		.4byte	0xa3
 30980 1f60 02       		.uleb128 0x2
 30981 1f61 91       		.byte	0x91
 30982 1f62 68       		.sleb128 -24
 30983 1f63 22       		.uleb128 0x22
 30984 1f64 BE110000 		.4byte	.LASF234
 30985 1f68 01       		.byte	0x1
 30986 1f69 A80E     		.2byte	0xea8
 30987 1f6b C7000000 		.4byte	0xc7
 30988 1f6f 02       		.uleb128 0x2
 30989 1f70 91       		.byte	0x91
 30990 1f71 66       		.sleb128 -26
 30991 1f72 22       		.uleb128 0x22
 30992 1f73 EE120000 		.4byte	.LASF233
 30993 1f77 01       		.byte	0x1
 30994 1f78 A90E     		.2byte	0xea9
 30995 1f7a EB000000 		.4byte	0xeb
 30996 1f7e 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 665


 30997 1f7f 91       		.byte	0x91
 30998 1f80 60       		.sleb128 -32
 30999 1f81 22       		.uleb128 0x22
 31000 1f82 25060000 		.4byte	.LASF228
 31001 1f86 01       		.byte	0x1
 31002 1f87 AC0E     		.2byte	0xeac
 31003 1f89 A21F0000 		.4byte	0x1fa2
 31004 1f8d 03       		.uleb128 0x3
 31005 1f8e 91       		.byte	0x91
 31006 1f8f 807D     		.sleb128 -384
 31007 1f91 22       		.uleb128 0x22
 31008 1f92 3F090000 		.4byte	.LASF332
 31009 1f96 01       		.byte	0x1
 31010 1f97 AD0E     		.2byte	0xead
 31011 1f99 B31F0000 		.4byte	0x1fb3
 31012 1f9d 03       		.uleb128 0x3
 31013 1f9e 91       		.byte	0x91
 31014 1f9f E07C     		.sleb128 -416
 31015 1fa1 00       		.byte	0
 31016 1fa2 09       		.uleb128 0x9
 31017 1fa3 97000000 		.4byte	0x97
 31018 1fa7 B31F0000 		.4byte	0x1fb3
 31019 1fab 23       		.uleb128 0x23
 31020 1fac 18010000 		.4byte	0x118
 31021 1fb0 5D01     		.2byte	0x15d
 31022 1fb2 00       		.byte	0
 31023 1fb3 09       		.uleb128 0x9
 31024 1fb4 97000000 		.4byte	0x97
 31025 1fb8 C31F0000 		.4byte	0x1fc3
 31026 1fbc 0A       		.uleb128 0xa
 31027 1fbd 18010000 		.4byte	0x118
 31028 1fc1 1F       		.byte	0x1f
 31029 1fc2 00       		.byte	0
 31030 1fc3 26       		.uleb128 0x26
 31031 1fc4 C9120000 		.4byte	.LASF333
 31032 1fc8 01       		.byte	0x1
 31033 1fc9 100F     		.2byte	0xf10
 31034 1fcb 00000000 		.4byte	.LFB108
 31035 1fcf 8C000000 		.4byte	.LFE108-.LFB108
 31036 1fd3 01       		.uleb128 0x1
 31037 1fd4 9C       		.byte	0x9c
 31038 1fd5 03200000 		.4byte	0x2003
 31039 1fd9 22       		.uleb128 0x22
 31040 1fda 25060000 		.4byte	.LASF228
 31041 1fde 01       		.byte	0x1
 31042 1fdf 130F     		.2byte	0xf13
 31043 1fe1 520A0000 		.4byte	0xa52
 31044 1fe5 02       		.uleb128 0x2
 31045 1fe6 91       		.byte	0x91
 31046 1fe7 60       		.sleb128 -32
 31047 1fe8 25       		.uleb128 0x25
 31048 1fe9 6900     		.ascii	"i\000"
 31049 1feb 01       		.byte	0x1
 31050 1fec 140F     		.2byte	0xf14
 31051 1fee 97000000 		.4byte	0x97
 31052 1ff2 02       		.uleb128 0x2
 31053 1ff3 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 666


 31054 1ff4 6F       		.sleb128 -17
 31055 1ff5 25       		.uleb128 0x25
 31056 1ff6 6A00     		.ascii	"j\000"
 31057 1ff8 01       		.byte	0x1
 31058 1ff9 140F     		.2byte	0xf14
 31059 1ffb 97000000 		.4byte	0x97
 31060 1fff 02       		.uleb128 0x2
 31061 2000 91       		.byte	0x91
 31062 2001 6E       		.sleb128 -18
 31063 2002 00       		.byte	0
 31064 2003 26       		.uleb128 0x26
 31065 2004 C8100000 		.4byte	.LASF334
 31066 2008 01       		.byte	0x1
 31067 2009 290F     		.2byte	0xf29
 31068 200b 00000000 		.4byte	.LFB109
 31069 200f EC000000 		.4byte	.LFE109-.LFB109
 31070 2013 01       		.uleb128 0x1
 31071 2014 9C       		.byte	0x9c
 31072 2015 61200000 		.4byte	0x2061
 31073 2019 22       		.uleb128 0x22
 31074 201a 25060000 		.4byte	.LASF228
 31075 201e 01       		.byte	0x1
 31076 201f 2C0F     		.2byte	0xf2c
 31077 2021 61200000 		.4byte	0x2061
 31078 2025 02       		.uleb128 0x2
 31079 2026 91       		.byte	0x91
 31080 2027 54       		.sleb128 -44
 31081 2028 25       		.uleb128 0x25
 31082 2029 6900     		.ascii	"i\000"
 31083 202b 01       		.byte	0x1
 31084 202c 2D0F     		.2byte	0xf2d
 31085 202e 97000000 		.4byte	0x97
 31086 2032 02       		.uleb128 0x2
 31087 2033 91       		.byte	0x91
 31088 2034 6F       		.sleb128 -17
 31089 2035 25       		.uleb128 0x25
 31090 2036 6A00     		.ascii	"j\000"
 31091 2038 01       		.byte	0x1
 31092 2039 2D0F     		.2byte	0xf2d
 31093 203b 97000000 		.4byte	0x97
 31094 203f 02       		.uleb128 0x2
 31095 2040 91       		.byte	0x91
 31096 2041 6E       		.sleb128 -18
 31097 2042 25       		.uleb128 0x25
 31098 2043 69647800 		.ascii	"idx\000"
 31099 2047 01       		.byte	0x1
 31100 2048 2D0F     		.2byte	0xf2d
 31101 204a 97000000 		.4byte	0x97
 31102 204e 02       		.uleb128 0x2
 31103 204f 91       		.byte	0x91
 31104 2050 6D       		.sleb128 -19
 31105 2051 22       		.uleb128 0x22
 31106 2052 B90C0000 		.4byte	.LASF235
 31107 2056 01       		.byte	0x1
 31108 2057 2E0F     		.2byte	0xf2e
 31109 2059 A3000000 		.4byte	0xa3
 31110 205d 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 667


 31111 205e 91       		.byte	0x91
 31112 205f 52       		.sleb128 -46
 31113 2060 00       		.byte	0
 31114 2061 09       		.uleb128 0x9
 31115 2062 97000000 		.4byte	0x97
 31116 2066 71200000 		.4byte	0x2071
 31117 206a 0A       		.uleb128 0xa
 31118 206b 18010000 		.4byte	0x118
 31119 206f 15       		.byte	0x15
 31120 2070 00       		.byte	0
 31121 2071 26       		.uleb128 0x26
 31122 2072 68030000 		.4byte	.LASF335
 31123 2076 01       		.byte	0x1
 31124 2077 470F     		.2byte	0xf47
 31125 2079 00000000 		.4byte	.LFB110
 31126 207d 5C000000 		.4byte	.LFE110-.LFB110
 31127 2081 01       		.uleb128 0x1
 31128 2082 9C       		.byte	0x9c
 31129 2083 A4200000 		.4byte	0x20a4
 31130 2087 22       		.uleb128 0x22
 31131 2088 25060000 		.4byte	.LASF228
 31132 208c 01       		.byte	0x1
 31133 208d 4A0F     		.2byte	0xf4a
 31134 208f EB0B0000 		.4byte	0xbeb
 31135 2093 02       		.uleb128 0x2
 31136 2094 91       		.byte	0x91
 31137 2095 68       		.sleb128 -24
 31138 2096 25       		.uleb128 0x25
 31139 2097 6900     		.ascii	"i\000"
 31140 2099 01       		.byte	0x1
 31141 209a 4B0F     		.2byte	0xf4b
 31142 209c 97000000 		.4byte	0x97
 31143 20a0 02       		.uleb128 0x2
 31144 20a1 91       		.byte	0x91
 31145 20a2 77       		.sleb128 -9
 31146 20a3 00       		.byte	0
 31147 20a4 26       		.uleb128 0x26
 31148 20a5 95030000 		.4byte	.LASF336
 31149 20a9 01       		.byte	0x1
 31150 20aa 5E0F     		.2byte	0xf5e
 31151 20ac 00000000 		.4byte	.LFB111
 31152 20b0 C0000000 		.4byte	.LFE111-.LFB111
 31153 20b4 01       		.uleb128 0x1
 31154 20b5 9C       		.byte	0x9c
 31155 20b6 F5200000 		.4byte	0x20f5
 31156 20ba 22       		.uleb128 0x22
 31157 20bb 25060000 		.4byte	.LASF228
 31158 20bf 01       		.byte	0x1
 31159 20c0 610F     		.2byte	0xf61
 31160 20c2 F5200000 		.4byte	0x20f5
 31161 20c6 02       		.uleb128 0x2
 31162 20c7 91       		.byte	0x91
 31163 20c8 54       		.sleb128 -44
 31164 20c9 25       		.uleb128 0x25
 31165 20ca 6900     		.ascii	"i\000"
 31166 20cc 01       		.byte	0x1
 31167 20cd 620F     		.2byte	0xf62
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 668


 31168 20cf 97000000 		.4byte	0x97
 31169 20d3 02       		.uleb128 0x2
 31170 20d4 91       		.byte	0x91
 31171 20d5 6F       		.sleb128 -17
 31172 20d6 25       		.uleb128 0x25
 31173 20d7 69647800 		.ascii	"idx\000"
 31174 20db 01       		.byte	0x1
 31175 20dc 620F     		.2byte	0xf62
 31176 20de 97000000 		.4byte	0x97
 31177 20e2 02       		.uleb128 0x2
 31178 20e3 91       		.byte	0x91
 31179 20e4 6E       		.sleb128 -18
 31180 20e5 22       		.uleb128 0x22
 31181 20e6 BE110000 		.4byte	.LASF234
 31182 20ea 01       		.byte	0x1
 31183 20eb 630F     		.2byte	0xf63
 31184 20ed C7000000 		.4byte	0xc7
 31185 20f1 02       		.uleb128 0x2
 31186 20f2 91       		.byte	0x91
 31187 20f3 52       		.sleb128 -46
 31188 20f4 00       		.byte	0
 31189 20f5 09       		.uleb128 0x9
 31190 20f6 97000000 		.4byte	0x97
 31191 20fa 05210000 		.4byte	0x2105
 31192 20fe 0A       		.uleb128 0xa
 31193 20ff 18010000 		.4byte	0x118
 31194 2103 19       		.byte	0x19
 31195 2104 00       		.byte	0
 31196 2105 30       		.uleb128 0x30
 31197 2106 12030000 		.4byte	.LASF338
 31198 210a 01       		.byte	0x1
 31199 210b 790F     		.2byte	0xf79
 31200 210d 00000000 		.4byte	.LFB112
 31201 2111 0C000000 		.4byte	.LFE112-.LFB112
 31202 2115 01       		.uleb128 0x1
 31203 2116 9C       		.byte	0x9c
 31204 2117 2A       		.uleb128 0x2a
 31205 2118 EE000000 		.4byte	.LASF339
 31206 211c 01       		.byte	0x1
 31207 211d A40F     		.2byte	0xfa4
 31208 211f 00000000 		.4byte	.LFB113
 31209 2123 12000000 		.4byte	.LFE113-.LFB113
 31210 2127 01       		.uleb128 0x1
 31211 2128 9C       		.byte	0x9c
 31212 2129 3D210000 		.4byte	0x213d
 31213 212d 24       		.uleb128 0x24
 31214 212e C8060000 		.4byte	.LASF340
 31215 2132 01       		.byte	0x1
 31216 2133 A40F     		.2byte	0xfa4
 31217 2135 73000000 		.4byte	0x73
 31218 2139 02       		.uleb128 0x2
 31219 213a 91       		.byte	0x91
 31220 213b 74       		.sleb128 -12
 31221 213c 00       		.byte	0
 31222 213d 31       		.uleb128 0x31
 31223 213e 460C0000 		.4byte	.LASF341
 31224 2142 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 669


 31225 2143 F20F     		.2byte	0xff2
 31226 2145 97000000 		.4byte	0x97
 31227 2149 00000000 		.4byte	.LFB114
 31228 214d 64010000 		.4byte	.LFE114-.LFB114
 31229 2151 01       		.uleb128 0x1
 31230 2152 9C       		.byte	0x9c
 31231 2153 B8210000 		.4byte	0x21b8
 31232 2157 22       		.uleb128 0x22
 31233 2158 0F0E0000 		.4byte	.LASF342
 31234 215c 01       		.byte	0x1
 31235 215d F40F     		.2byte	0xff4
 31236 215f 97000000 		.4byte	0x97
 31237 2163 05       		.uleb128 0x5
 31238 2164 03       		.byte	0x3
 31239 2165 08000000 		.4byte	fsm_state.11482
 31240 2169 25       		.uleb128 0x25
 31241 216a 636E7400 		.ascii	"cnt\000"
 31242 216e 01       		.byte	0x1
 31243 216f F50F     		.2byte	0xff5
 31244 2171 D3000000 		.4byte	0xd3
 31245 2175 05       		.uleb128 0x5
 31246 2176 03       		.byte	0x3
 31247 2177 0C000000 		.4byte	cnt.11483
 31248 217b 22       		.uleb128 0x22
 31249 217c 1A040000 		.4byte	.LASF343
 31250 2180 01       		.byte	0x1
 31251 2181 F60F     		.2byte	0xff6
 31252 2183 D3000000 		.4byte	0xd3
 31253 2187 02       		.uleb128 0x2
 31254 2188 91       		.byte	0x91
 31255 2189 74       		.sleb128 -12
 31256 218a 22       		.uleb128 0x22
 31257 218b 680B0000 		.4byte	.LASF344
 31258 218f 01       		.byte	0x1
 31259 2190 F60F     		.2byte	0xff6
 31260 2192 D3000000 		.4byte	0xd3
 31261 2196 02       		.uleb128 0x2
 31262 2197 91       		.byte	0x91
 31263 2198 70       		.sleb128 -16
 31264 2199 22       		.uleb128 0x22
 31265 219a 8A000000 		.4byte	.LASF345
 31266 219e 01       		.byte	0x1
 31267 219f F70F     		.2byte	0xff7
 31268 21a1 D3000000 		.4byte	0xd3
 31269 21a5 02       		.uleb128 0x2
 31270 21a6 91       		.byte	0x91
 31271 21a7 6C       		.sleb128 -20
 31272 21a8 22       		.uleb128 0x22
 31273 21a9 96000000 		.4byte	.LASF346
 31274 21ad 01       		.byte	0x1
 31275 21ae F70F     		.2byte	0xff7
 31276 21b0 D3000000 		.4byte	0xd3
 31277 21b4 02       		.uleb128 0x2
 31278 21b5 91       		.byte	0x91
 31279 21b6 68       		.sleb128 -24
 31280 21b7 00       		.byte	0
 31281 21b8 2A       		.uleb128 0x2a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 670


 31282 21b9 C7070000 		.4byte	.LASF347
 31283 21bd 01       		.byte	0x1
 31284 21be 4410     		.2byte	0x1044
 31285 21c0 00000000 		.4byte	.LFB115
 31286 21c4 12000000 		.4byte	.LFE115-.LFB115
 31287 21c8 01       		.uleb128 0x1
 31288 21c9 9C       		.byte	0x9c
 31289 21ca DE210000 		.4byte	0x21de
 31290 21ce 24       		.uleb128 0x24
 31291 21cf C8060000 		.4byte	.LASF340
 31292 21d3 01       		.byte	0x1
 31293 21d4 4410     		.2byte	0x1044
 31294 21d6 73000000 		.4byte	0x73
 31295 21da 02       		.uleb128 0x2
 31296 21db 91       		.byte	0x91
 31297 21dc 74       		.sleb128 -12
 31298 21dd 00       		.byte	0
 31299 21de 2A       		.uleb128 0x2a
 31300 21df A30D0000 		.4byte	.LASF348
 31301 21e3 01       		.byte	0x1
 31302 21e4 9010     		.2byte	0x1090
 31303 21e6 00000000 		.4byte	.LFB116
 31304 21ea 1A000000 		.4byte	.LFE116-.LFB116
 31305 21ee 01       		.uleb128 0x1
 31306 21ef 9C       		.byte	0x9c
 31307 21f0 13220000 		.4byte	0x2213
 31308 21f4 24       		.uleb128 0x24
 31309 21f5 F0020000 		.4byte	.LASF349
 31310 21f9 01       		.byte	0x1
 31311 21fa 9010     		.2byte	0x1090
 31312 21fc 97000000 		.4byte	0x97
 31313 2200 02       		.uleb128 0x2
 31314 2201 91       		.byte	0x91
 31315 2202 77       		.sleb128 -9
 31316 2203 24       		.uleb128 0x24
 31317 2204 EE0A0000 		.4byte	.LASF185
 31318 2208 01       		.byte	0x1
 31319 2209 9010     		.2byte	0x1090
 31320 220b 97000000 		.4byte	0x97
 31321 220f 02       		.uleb128 0x2
 31322 2210 91       		.byte	0x91
 31323 2211 76       		.sleb128 -10
 31324 2212 00       		.byte	0
 31325 2213 30       		.uleb128 0x30
 31326 2214 A2000000 		.4byte	.LASF350
 31327 2218 01       		.byte	0x1
 31328 2219 BA10     		.2byte	0x10ba
 31329 221b 00000000 		.4byte	.LFB117
 31330 221f 0C000000 		.4byte	.LFE117-.LFB117
 31331 2223 01       		.uleb128 0x1
 31332 2224 9C       		.byte	0x9c
 31333 2225 30       		.uleb128 0x30
 31334 2226 54060000 		.4byte	.LASF351
 31335 222a 01       		.byte	0x1
 31336 222b D010     		.2byte	0x10d0
 31337 222d 00000000 		.4byte	.LFB118
 31338 2231 0C000000 		.4byte	.LFE118-.LFB118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 671


 31339 2235 01       		.uleb128 0x1
 31340 2236 9C       		.byte	0x9c
 31341 2237 32       		.uleb128 0x32
 31342 2238 FB110000 		.4byte	.LASF352
 31343 223c 09       		.byte	0x9
 31344 223d 1207     		.2byte	0x712
 31345 223f 43220000 		.4byte	0x2243
 31346 2243 06       		.uleb128 0x6
 31347 2244 81000000 		.4byte	0x81
 31348 2248 09       		.uleb128 0x9
 31349 2249 22030000 		.4byte	0x322
 31350 224d 58220000 		.4byte	0x2258
 31351 2251 0A       		.uleb128 0xa
 31352 2252 18010000 		.4byte	0x118
 31353 2256 01       		.byte	0x1
 31354 2257 00       		.byte	0
 31355 2258 32       		.uleb128 0x32
 31356 2259 C1130000 		.4byte	.LASF353
 31357 225d 08       		.byte	0x8
 31358 225e 1A02     		.2byte	0x21a
 31359 2260 48220000 		.4byte	0x2248
 31360 2264 32       		.uleb128 0x32
 31361 2265 99040000 		.4byte	.LASF354
 31362 2269 08       		.byte	0x8
 31363 226a 1A02     		.2byte	0x21a
 31364 226c 48220000 		.4byte	0x2248
 31365 2270 32       		.uleb128 0x32
 31366 2271 5C0D0000 		.4byte	.LASF355
 31367 2275 08       		.byte	0x8
 31368 2276 1A02     		.2byte	0x21a
 31369 2278 48220000 		.4byte	0x2248
 31370 227c 09       		.uleb128 0x9
 31371 227d 5F030000 		.4byte	0x35f
 31372 2281 8C220000 		.4byte	0x228c
 31373 2285 0A       		.uleb128 0xa
 31374 2286 18010000 		.4byte	0x118
 31375 228a 01       		.byte	0x1
 31376 228b 00       		.byte	0
 31377 228c 32       		.uleb128 0x32
 31378 228d D8060000 		.4byte	.LASF356
 31379 2291 08       		.byte	0x8
 31380 2292 1B02     		.2byte	0x21b
 31381 2294 7C220000 		.4byte	0x227c
 31382 2298 32       		.uleb128 0x32
 31383 2299 14140000 		.4byte	.LASF357
 31384 229d 08       		.byte	0x8
 31385 229e 1B02     		.2byte	0x21b
 31386 22a0 7C220000 		.4byte	0x227c
 31387 22a4 32       		.uleb128 0x32
 31388 22a5 8B130000 		.4byte	.LASF358
 31389 22a9 08       		.byte	0x8
 31390 22aa 1C02     		.2byte	0x21c
 31391 22ac E0030000 		.4byte	0x3e0
 31392 22b0 32       		.uleb128 0x32
 31393 22b1 BA100000 		.4byte	.LASF359
 31394 22b5 08       		.byte	0x8
 31395 22b6 1C02     		.2byte	0x21c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 672


 31396 22b8 E0030000 		.4byte	0x3e0
 31397 22bc 32       		.uleb128 0x32
 31398 22bd 70100000 		.4byte	.LASF360
 31399 22c1 08       		.byte	0x8
 31400 22c2 1D02     		.2byte	0x21d
 31401 22c4 31040000 		.4byte	0x431
 31402 22c8 32       		.uleb128 0x32
 31403 22c9 BD000000 		.4byte	.LASF361
 31404 22cd 08       		.byte	0x8
 31405 22ce 1E02     		.2byte	0x21e
 31406 22d0 4A040000 		.4byte	0x44a
 31407 22d4 32       		.uleb128 0x32
 31408 22d5 9F100000 		.4byte	.LASF362
 31409 22d9 08       		.byte	0x8
 31410 22da 1F02     		.2byte	0x21f
 31411 22dc 060B0000 		.4byte	0xb06
 31412 22e0 32       		.uleb128 0x32
 31413 22e1 4A0B0000 		.4byte	.LASF363
 31414 22e5 08       		.byte	0x8
 31415 22e6 1F02     		.2byte	0x21f
 31416 22e8 060B0000 		.4byte	0xb06
 31417 22ec 32       		.uleb128 0x32
 31418 22ed 3C0A0000 		.4byte	.LASF364
 31419 22f1 08       		.byte	0x8
 31420 22f2 2002     		.2byte	0x220
 31421 22f4 B70C0000 		.4byte	0xcb7
 31422 22f8 32       		.uleb128 0x32
 31423 22f9 CD020000 		.4byte	.LASF365
 31424 22fd 08       		.byte	0x8
 31425 22fe 2502     		.2byte	0x225
 31426 2300 A3000000 		.4byte	0xa3
 31427 2304 32       		.uleb128 0x32
 31428 2305 A20E0000 		.4byte	.LASF366
 31429 2309 08       		.byte	0x8
 31430 230a 2602     		.2byte	0x226
 31431 230c A3000000 		.4byte	0xa3
 31432 2310 32       		.uleb128 0x32
 31433 2311 D40E0000 		.4byte	.LASF367
 31434 2315 08       		.byte	0x8
 31435 2316 2902     		.2byte	0x229
 31436 2318 11040000 		.4byte	0x411
 31437 231c 32       		.uleb128 0x32
 31438 231d 92120000 		.4byte	.LASF368
 31439 2321 08       		.byte	0x8
 31440 2322 2A02     		.2byte	0x22a
 31441 2324 80080000 		.4byte	0x880
 31442 2328 32       		.uleb128 0x32
 31443 2329 1B120000 		.4byte	.LASF369
 31444 232d 08       		.byte	0x8
 31445 232e 2D02     		.2byte	0x22d
 31446 2330 11040000 		.4byte	0x411
 31447 2334 32       		.uleb128 0x32
 31448 2335 F70A0000 		.4byte	.LASF370
 31449 2339 08       		.byte	0x8
 31450 233a 3602     		.2byte	0x236
 31451 233c 97000000 		.4byte	0x97
 31452 2340 32       		.uleb128 0x32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 673


 31453 2341 61040000 		.4byte	.LASF371
 31454 2345 08       		.byte	0x8
 31455 2346 3802     		.2byte	0x238
 31456 2348 97000000 		.4byte	0x97
 31457 234c 32       		.uleb128 0x32
 31458 234d 910A0000 		.4byte	.LASF372
 31459 2351 08       		.byte	0x8
 31460 2352 3F02     		.2byte	0x23f
 31461 2354 97000000 		.4byte	0x97
 31462 2358 32       		.uleb128 0x32
 31463 2359 B7070000 		.4byte	.LASF373
 31464 235d 08       		.byte	0x8
 31465 235e 4002     		.2byte	0x240
 31466 2360 97000000 		.4byte	0x97
 31467 2364 09       		.uleb128 0x9
 31468 2365 C7000000 		.4byte	0xc7
 31469 2369 74230000 		.4byte	0x2374
 31470 236d 0A       		.uleb128 0xa
 31471 236e 18010000 		.4byte	0x118
 31472 2372 0B       		.byte	0xb
 31473 2373 00       		.byte	0
 31474 2374 32       		.uleb128 0x32
 31475 2375 59040000 		.4byte	.LASF374
 31476 2379 08       		.byte	0x8
 31477 237a 4302     		.2byte	0x243
 31478 237c 64230000 		.4byte	0x2364
 31479 2380 32       		.uleb128 0x32
 31480 2381 CD130000 		.4byte	.LASF375
 31481 2385 08       		.byte	0x8
 31482 2386 4402     		.2byte	0x244
 31483 2388 97000000 		.4byte	0x97
 31484 238c 09       		.uleb128 0x9
 31485 238d AF000000 		.4byte	0xaf
 31486 2391 9C230000 		.4byte	0x239c
 31487 2395 0A       		.uleb128 0xa
 31488 2396 18010000 		.4byte	0x118
 31489 239a 04       		.byte	0x4
 31490 239b 00       		.byte	0
 31491 239c 32       		.uleb128 0x32
 31492 239d 06070000 		.4byte	.LASF376
 31493 23a1 08       		.byte	0x8
 31494 23a2 4A02     		.2byte	0x24a
 31495 23a4 8C230000 		.4byte	0x238c
 31496 23a8 32       		.uleb128 0x32
 31497 23a9 9B0F0000 		.4byte	.LASF377
 31498 23ad 08       		.byte	0x8
 31499 23ae 4B02     		.2byte	0x24b
 31500 23b0 80080000 		.4byte	0x880
 31501 23b4 09       		.uleb128 0x9
 31502 23b5 A3000000 		.4byte	0xa3
 31503 23b9 CA230000 		.4byte	0x23ca
 31504 23bd 0A       		.uleb128 0xa
 31505 23be 18010000 		.4byte	0x118
 31506 23c2 01       		.byte	0x1
 31507 23c3 0A       		.uleb128 0xa
 31508 23c4 18010000 		.4byte	0x118
 31509 23c8 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 674


 31510 23c9 00       		.byte	0
 31511 23ca 32       		.uleb128 0x32
 31512 23cb BB120000 		.4byte	.LASF378
 31513 23cf 08       		.byte	0x8
 31514 23d0 4C02     		.2byte	0x24c
 31515 23d2 B4230000 		.4byte	0x23b4
 31516 23d6 09       		.uleb128 0x9
 31517 23d7 97000000 		.4byte	0x97
 31518 23db EC230000 		.4byte	0x23ec
 31519 23df 0A       		.uleb128 0xa
 31520 23e0 18010000 		.4byte	0x118
 31521 23e4 01       		.byte	0x1
 31522 23e5 0A       		.uleb128 0xa
 31523 23e6 18010000 		.4byte	0x118
 31524 23ea 04       		.byte	0x4
 31525 23eb 00       		.byte	0
 31526 23ec 32       		.uleb128 0x32
 31527 23ed DF060000 		.4byte	.LASF379
 31528 23f1 08       		.byte	0x8
 31529 23f2 4D02     		.2byte	0x24d
 31530 23f4 D6230000 		.4byte	0x23d6
 31531 23f8 32       		.uleb128 0x32
 31532 23f9 3B060000 		.4byte	.LASF380
 31533 23fd 08       		.byte	0x8
 31534 23fe 5302     		.2byte	0x253
 31535 2400 1C030000 		.4byte	0x31c
 31536 2404 32       		.uleb128 0x32
 31537 2405 45110000 		.4byte	.LASF381
 31538 2409 08       		.byte	0x8
 31539 240a 5802     		.2byte	0x258
 31540 240c 97000000 		.4byte	0x97
 31541 2410 32       		.uleb128 0x32
 31542 2411 F8120000 		.4byte	.LASF382
 31543 2415 08       		.byte	0x8
 31544 2416 5902     		.2byte	0x259
 31545 2418 F1070000 		.4byte	0x7f1
 31546 241c 32       		.uleb128 0x32
 31547 241d EC110000 		.4byte	.LASF383
 31548 2421 08       		.byte	0x8
 31549 2422 5A02     		.2byte	0x25a
 31550 2424 73000000 		.4byte	0x73
 31551 2428 09       		.uleb128 0x9
 31552 2429 73000000 		.4byte	0x73
 31553 242d 38240000 		.4byte	0x2438
 31554 2431 0A       		.uleb128 0xa
 31555 2432 18010000 		.4byte	0x118
 31556 2436 04       		.byte	0x4
 31557 2437 00       		.byte	0
 31558 2438 32       		.uleb128 0x32
 31559 2439 2D040000 		.4byte	.LASF384
 31560 243d 08       		.byte	0x8
 31561 243e 5B02     		.2byte	0x25b
 31562 2440 28240000 		.4byte	0x2428
 31563 2444 09       		.uleb128 0x9
 31564 2445 3B0C0000 		.4byte	0xc3b
 31565 2449 54240000 		.4byte	0x2454
 31566 244d 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 675


 31567 244e 18010000 		.4byte	0x118
 31568 2452 04       		.byte	0x4
 31569 2453 00       		.byte	0
 31570 2454 32       		.uleb128 0x32
 31571 2455 7B050000 		.4byte	.LASF385
 31572 2459 08       		.byte	0x8
 31573 245a 5C02     		.2byte	0x25c
 31574 245c 44240000 		.4byte	0x2444
 31575 2460 09       		.uleb128 0x9
 31576 2461 97000000 		.4byte	0x97
 31577 2465 76240000 		.4byte	0x2476
 31578 2469 0A       		.uleb128 0xa
 31579 246a 18010000 		.4byte	0x118
 31580 246e 04       		.byte	0x4
 31581 246f 0A       		.uleb128 0xa
 31582 2470 18010000 		.4byte	0x118
 31583 2474 02       		.byte	0x2
 31584 2475 00       		.byte	0
 31585 2476 32       		.uleb128 0x32
 31586 2477 B40B0000 		.4byte	.LASF386
 31587 247b 08       		.byte	0x8
 31588 247c 6002     		.2byte	0x260
 31589 247e 60240000 		.4byte	0x2460
 31590 2482 32       		.uleb128 0x32
 31591 2483 F3130000 		.4byte	.LASF387
 31592 2487 08       		.byte	0x8
 31593 2488 6502     		.2byte	0x265
 31594 248a 97000000 		.4byte	0x97
 31595 248e 33       		.uleb128 0x33
 31596 248f C8110000 		.4byte	.LASF388
 31597 2493 01       		.byte	0x1
 31598 2494 33       		.byte	0x33
 31599 2495 9F240000 		.4byte	0x249f
 31600 2499 05       		.uleb128 0x5
 31601 249a 03       		.byte	0x3
 31602 249b 00000000 		.4byte	EEPROM_ADDR
 31603 249f 07       		.uleb128 0x7
 31604 24a0 04       		.byte	0x4
 31605 24a1 00010000 		.4byte	0x100
 31606 24a5 00       		.byte	0
 31607              		.section	.debug_abbrev,"",%progbits
 31608              	.Ldebug_abbrev0:
 31609 0000 01       		.uleb128 0x1
 31610 0001 11       		.uleb128 0x11
 31611 0002 01       		.byte	0x1
 31612 0003 25       		.uleb128 0x25
 31613 0004 0E       		.uleb128 0xe
 31614 0005 13       		.uleb128 0x13
 31615 0006 0B       		.uleb128 0xb
 31616 0007 03       		.uleb128 0x3
 31617 0008 0E       		.uleb128 0xe
 31618 0009 1B       		.uleb128 0x1b
 31619 000a 0E       		.uleb128 0xe
 31620 000b 55       		.uleb128 0x55
 31621 000c 17       		.uleb128 0x17
 31622 000d 11       		.uleb128 0x11
 31623 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 676


 31624 000f 10       		.uleb128 0x10
 31625 0010 17       		.uleb128 0x17
 31626 0011 00       		.byte	0
 31627 0012 00       		.byte	0
 31628 0013 02       		.uleb128 0x2
 31629 0014 24       		.uleb128 0x24
 31630 0015 00       		.byte	0
 31631 0016 0B       		.uleb128 0xb
 31632 0017 0B       		.uleb128 0xb
 31633 0018 3E       		.uleb128 0x3e
 31634 0019 0B       		.uleb128 0xb
 31635 001a 03       		.uleb128 0x3
 31636 001b 0E       		.uleb128 0xe
 31637 001c 00       		.byte	0
 31638 001d 00       		.byte	0
 31639 001e 03       		.uleb128 0x3
 31640 001f 16       		.uleb128 0x16
 31641 0020 00       		.byte	0
 31642 0021 03       		.uleb128 0x3
 31643 0022 0E       		.uleb128 0xe
 31644 0023 3A       		.uleb128 0x3a
 31645 0024 0B       		.uleb128 0xb
 31646 0025 3B       		.uleb128 0x3b
 31647 0026 0B       		.uleb128 0xb
 31648 0027 49       		.uleb128 0x49
 31649 0028 13       		.uleb128 0x13
 31650 0029 00       		.byte	0
 31651 002a 00       		.byte	0
 31652 002b 04       		.uleb128 0x4
 31653 002c 24       		.uleb128 0x24
 31654 002d 00       		.byte	0
 31655 002e 0B       		.uleb128 0xb
 31656 002f 0B       		.uleb128 0xb
 31657 0030 3E       		.uleb128 0x3e
 31658 0031 0B       		.uleb128 0xb
 31659 0032 03       		.uleb128 0x3
 31660 0033 08       		.uleb128 0x8
 31661 0034 00       		.byte	0
 31662 0035 00       		.byte	0
 31663 0036 05       		.uleb128 0x5
 31664 0037 16       		.uleb128 0x16
 31665 0038 00       		.byte	0
 31666 0039 03       		.uleb128 0x3
 31667 003a 0E       		.uleb128 0xe
 31668 003b 3A       		.uleb128 0x3a
 31669 003c 0B       		.uleb128 0xb
 31670 003d 3B       		.uleb128 0x3b
 31671 003e 05       		.uleb128 0x5
 31672 003f 49       		.uleb128 0x49
 31673 0040 13       		.uleb128 0x13
 31674 0041 00       		.byte	0
 31675 0042 00       		.byte	0
 31676 0043 06       		.uleb128 0x6
 31677 0044 35       		.uleb128 0x35
 31678 0045 00       		.byte	0
 31679 0046 49       		.uleb128 0x49
 31680 0047 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 677


 31681 0048 00       		.byte	0
 31682 0049 00       		.byte	0
 31683 004a 07       		.uleb128 0x7
 31684 004b 0F       		.uleb128 0xf
 31685 004c 00       		.byte	0
 31686 004d 0B       		.uleb128 0xb
 31687 004e 0B       		.uleb128 0xb
 31688 004f 49       		.uleb128 0x49
 31689 0050 13       		.uleb128 0x13
 31690 0051 00       		.byte	0
 31691 0052 00       		.byte	0
 31692 0053 08       		.uleb128 0x8
 31693 0054 26       		.uleb128 0x26
 31694 0055 00       		.byte	0
 31695 0056 49       		.uleb128 0x49
 31696 0057 13       		.uleb128 0x13
 31697 0058 00       		.byte	0
 31698 0059 00       		.byte	0
 31699 005a 09       		.uleb128 0x9
 31700 005b 01       		.uleb128 0x1
 31701 005c 01       		.byte	0x1
 31702 005d 49       		.uleb128 0x49
 31703 005e 13       		.uleb128 0x13
 31704 005f 01       		.uleb128 0x1
 31705 0060 13       		.uleb128 0x13
 31706 0061 00       		.byte	0
 31707 0062 00       		.byte	0
 31708 0063 0A       		.uleb128 0xa
 31709 0064 21       		.uleb128 0x21
 31710 0065 00       		.byte	0
 31711 0066 49       		.uleb128 0x49
 31712 0067 13       		.uleb128 0x13
 31713 0068 2F       		.uleb128 0x2f
 31714 0069 0B       		.uleb128 0xb
 31715 006a 00       		.byte	0
 31716 006b 00       		.byte	0
 31717 006c 0B       		.uleb128 0xb
 31718 006d 04       		.uleb128 0x4
 31719 006e 01       		.byte	0x1
 31720 006f 03       		.uleb128 0x3
 31721 0070 0E       		.uleb128 0xe
 31722 0071 0B       		.uleb128 0xb
 31723 0072 0B       		.uleb128 0xb
 31724 0073 49       		.uleb128 0x49
 31725 0074 13       		.uleb128 0x13
 31726 0075 3A       		.uleb128 0x3a
 31727 0076 0B       		.uleb128 0xb
 31728 0077 3B       		.uleb128 0x3b
 31729 0078 0B       		.uleb128 0xb
 31730 0079 01       		.uleb128 0x1
 31731 007a 13       		.uleb128 0x13
 31732 007b 00       		.byte	0
 31733 007c 00       		.byte	0
 31734 007d 0C       		.uleb128 0xc
 31735 007e 28       		.uleb128 0x28
 31736 007f 00       		.byte	0
 31737 0080 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 678


 31738 0081 0E       		.uleb128 0xe
 31739 0082 1C       		.uleb128 0x1c
 31740 0083 0B       		.uleb128 0xb
 31741 0084 00       		.byte	0
 31742 0085 00       		.byte	0
 31743 0086 0D       		.uleb128 0xd
 31744 0087 13       		.uleb128 0x13
 31745 0088 00       		.byte	0
 31746 0089 03       		.uleb128 0x3
 31747 008a 0E       		.uleb128 0xe
 31748 008b 3C       		.uleb128 0x3c
 31749 008c 19       		.uleb128 0x19
 31750 008d 00       		.byte	0
 31751 008e 00       		.byte	0
 31752 008f 0E       		.uleb128 0xe
 31753 0090 13       		.uleb128 0x13
 31754 0091 01       		.byte	0x1
 31755 0092 03       		.uleb128 0x3
 31756 0093 0E       		.uleb128 0xe
 31757 0094 0B       		.uleb128 0xb
 31758 0095 0B       		.uleb128 0xb
 31759 0096 3A       		.uleb128 0x3a
 31760 0097 0B       		.uleb128 0xb
 31761 0098 3B       		.uleb128 0x3b
 31762 0099 0B       		.uleb128 0xb
 31763 009a 01       		.uleb128 0x1
 31764 009b 13       		.uleb128 0x13
 31765 009c 00       		.byte	0
 31766 009d 00       		.byte	0
 31767 009e 0F       		.uleb128 0xf
 31768 009f 0D       		.uleb128 0xd
 31769 00a0 00       		.byte	0
 31770 00a1 03       		.uleb128 0x3
 31771 00a2 08       		.uleb128 0x8
 31772 00a3 3A       		.uleb128 0x3a
 31773 00a4 0B       		.uleb128 0xb
 31774 00a5 3B       		.uleb128 0x3b
 31775 00a6 0B       		.uleb128 0xb
 31776 00a7 49       		.uleb128 0x49
 31777 00a8 13       		.uleb128 0x13
 31778 00a9 38       		.uleb128 0x38
 31779 00aa 0B       		.uleb128 0xb
 31780 00ab 00       		.byte	0
 31781 00ac 00       		.byte	0
 31782 00ad 10       		.uleb128 0x10
 31783 00ae 0D       		.uleb128 0xd
 31784 00af 00       		.byte	0
 31785 00b0 03       		.uleb128 0x3
 31786 00b1 0E       		.uleb128 0xe
 31787 00b2 3A       		.uleb128 0x3a
 31788 00b3 0B       		.uleb128 0xb
 31789 00b4 3B       		.uleb128 0x3b
 31790 00b5 0B       		.uleb128 0xb
 31791 00b6 49       		.uleb128 0x49
 31792 00b7 13       		.uleb128 0x13
 31793 00b8 38       		.uleb128 0x38
 31794 00b9 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 679


 31795 00ba 00       		.byte	0
 31796 00bb 00       		.byte	0
 31797 00bc 11       		.uleb128 0x11
 31798 00bd 13       		.uleb128 0x13
 31799 00be 01       		.byte	0x1
 31800 00bf 03       		.uleb128 0x3
 31801 00c0 0E       		.uleb128 0xe
 31802 00c1 0B       		.uleb128 0xb
 31803 00c2 0B       		.uleb128 0xb
 31804 00c3 3A       		.uleb128 0x3a
 31805 00c4 0B       		.uleb128 0xb
 31806 00c5 3B       		.uleb128 0x3b
 31807 00c6 05       		.uleb128 0x5
 31808 00c7 01       		.uleb128 0x1
 31809 00c8 13       		.uleb128 0x13
 31810 00c9 00       		.byte	0
 31811 00ca 00       		.byte	0
 31812 00cb 12       		.uleb128 0x12
 31813 00cc 0D       		.uleb128 0xd
 31814 00cd 00       		.byte	0
 31815 00ce 03       		.uleb128 0x3
 31816 00cf 0E       		.uleb128 0xe
 31817 00d0 3A       		.uleb128 0x3a
 31818 00d1 0B       		.uleb128 0xb
 31819 00d2 3B       		.uleb128 0x3b
 31820 00d3 05       		.uleb128 0x5
 31821 00d4 49       		.uleb128 0x49
 31822 00d5 13       		.uleb128 0x13
 31823 00d6 38       		.uleb128 0x38
 31824 00d7 0B       		.uleb128 0xb
 31825 00d8 00       		.byte	0
 31826 00d9 00       		.byte	0
 31827 00da 13       		.uleb128 0x13
 31828 00db 0D       		.uleb128 0xd
 31829 00dc 00       		.byte	0
 31830 00dd 03       		.uleb128 0x3
 31831 00de 08       		.uleb128 0x8
 31832 00df 3A       		.uleb128 0x3a
 31833 00e0 0B       		.uleb128 0xb
 31834 00e1 3B       		.uleb128 0x3b
 31835 00e2 05       		.uleb128 0x5
 31836 00e3 49       		.uleb128 0x49
 31837 00e4 13       		.uleb128 0x13
 31838 00e5 38       		.uleb128 0x38
 31839 00e6 0B       		.uleb128 0xb
 31840 00e7 00       		.byte	0
 31841 00e8 00       		.byte	0
 31842 00e9 14       		.uleb128 0x14
 31843 00ea 13       		.uleb128 0x13
 31844 00eb 01       		.byte	0x1
 31845 00ec 03       		.uleb128 0x3
 31846 00ed 0E       		.uleb128 0xe
 31847 00ee 0B       		.uleb128 0xb
 31848 00ef 05       		.uleb128 0x5
 31849 00f0 3A       		.uleb128 0x3a
 31850 00f1 0B       		.uleb128 0xb
 31851 00f2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 680


 31852 00f3 05       		.uleb128 0x5
 31853 00f4 01       		.uleb128 0x1
 31854 00f5 13       		.uleb128 0x13
 31855 00f6 00       		.byte	0
 31856 00f7 00       		.byte	0
 31857 00f8 15       		.uleb128 0x15
 31858 00f9 0D       		.uleb128 0xd
 31859 00fa 00       		.byte	0
 31860 00fb 03       		.uleb128 0x3
 31861 00fc 08       		.uleb128 0x8
 31862 00fd 3A       		.uleb128 0x3a
 31863 00fe 0B       		.uleb128 0xb
 31864 00ff 3B       		.uleb128 0x3b
 31865 0100 05       		.uleb128 0x5
 31866 0101 49       		.uleb128 0x49
 31867 0102 13       		.uleb128 0x13
 31868 0103 38       		.uleb128 0x38
 31869 0104 05       		.uleb128 0x5
 31870 0105 00       		.byte	0
 31871 0106 00       		.byte	0
 31872 0107 16       		.uleb128 0x16
 31873 0108 0D       		.uleb128 0xd
 31874 0109 00       		.byte	0
 31875 010a 03       		.uleb128 0x3
 31876 010b 0E       		.uleb128 0xe
 31877 010c 3A       		.uleb128 0x3a
 31878 010d 0B       		.uleb128 0xb
 31879 010e 3B       		.uleb128 0x3b
 31880 010f 05       		.uleb128 0x5
 31881 0110 49       		.uleb128 0x49
 31882 0111 13       		.uleb128 0x13
 31883 0112 38       		.uleb128 0x38
 31884 0113 05       		.uleb128 0x5
 31885 0114 00       		.byte	0
 31886 0115 00       		.byte	0
 31887 0116 17       		.uleb128 0x17
 31888 0117 2E       		.uleb128 0x2e
 31889 0118 01       		.byte	0x1
 31890 0119 03       		.uleb128 0x3
 31891 011a 0E       		.uleb128 0xe
 31892 011b 3A       		.uleb128 0x3a
 31893 011c 0B       		.uleb128 0xb
 31894 011d 3B       		.uleb128 0x3b
 31895 011e 05       		.uleb128 0x5
 31896 011f 27       		.uleb128 0x27
 31897 0120 19       		.uleb128 0x19
 31898 0121 49       		.uleb128 0x49
 31899 0122 13       		.uleb128 0x13
 31900 0123 20       		.uleb128 0x20
 31901 0124 0B       		.uleb128 0xb
 31902 0125 01       		.uleb128 0x1
 31903 0126 13       		.uleb128 0x13
 31904 0127 00       		.byte	0
 31905 0128 00       		.byte	0
 31906 0129 18       		.uleb128 0x18
 31907 012a 05       		.uleb128 0x5
 31908 012b 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 681


 31909 012c 03       		.uleb128 0x3
 31910 012d 0E       		.uleb128 0xe
 31911 012e 3A       		.uleb128 0x3a
 31912 012f 0B       		.uleb128 0xb
 31913 0130 3B       		.uleb128 0x3b
 31914 0131 05       		.uleb128 0x5
 31915 0132 49       		.uleb128 0x49
 31916 0133 13       		.uleb128 0x13
 31917 0134 00       		.byte	0
 31918 0135 00       		.byte	0
 31919 0136 19       		.uleb128 0x19
 31920 0137 34       		.uleb128 0x34
 31921 0138 00       		.byte	0
 31922 0139 03       		.uleb128 0x3
 31923 013a 0E       		.uleb128 0xe
 31924 013b 3A       		.uleb128 0x3a
 31925 013c 0B       		.uleb128 0xb
 31926 013d 3B       		.uleb128 0x3b
 31927 013e 05       		.uleb128 0x5
 31928 013f 49       		.uleb128 0x49
 31929 0140 13       		.uleb128 0x13
 31930 0141 00       		.byte	0
 31931 0142 00       		.byte	0
 31932 0143 1A       		.uleb128 0x1a
 31933 0144 2E       		.uleb128 0x2e
 31934 0145 01       		.byte	0x1
 31935 0146 3F       		.uleb128 0x3f
 31936 0147 19       		.uleb128 0x19
 31937 0148 03       		.uleb128 0x3
 31938 0149 0E       		.uleb128 0xe
 31939 014a 3A       		.uleb128 0x3a
 31940 014b 0B       		.uleb128 0xb
 31941 014c 3B       		.uleb128 0x3b
 31942 014d 0B       		.uleb128 0xb
 31943 014e 27       		.uleb128 0x27
 31944 014f 19       		.uleb128 0x19
 31945 0150 11       		.uleb128 0x11
 31946 0151 01       		.uleb128 0x1
 31947 0152 12       		.uleb128 0x12
 31948 0153 06       		.uleb128 0x6
 31949 0154 40       		.uleb128 0x40
 31950 0155 18       		.uleb128 0x18
 31951 0156 9642     		.uleb128 0x2116
 31952 0158 19       		.uleb128 0x19
 31953 0159 01       		.uleb128 0x1
 31954 015a 13       		.uleb128 0x13
 31955 015b 00       		.byte	0
 31956 015c 00       		.byte	0
 31957 015d 1B       		.uleb128 0x1b
 31958 015e 34       		.uleb128 0x34
 31959 015f 00       		.byte	0
 31960 0160 03       		.uleb128 0x3
 31961 0161 0E       		.uleb128 0xe
 31962 0162 3A       		.uleb128 0x3a
 31963 0163 0B       		.uleb128 0xb
 31964 0164 3B       		.uleb128 0x3b
 31965 0165 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 682


 31966 0166 49       		.uleb128 0x49
 31967 0167 13       		.uleb128 0x13
 31968 0168 02       		.uleb128 0x2
 31969 0169 18       		.uleb128 0x18
 31970 016a 00       		.byte	0
 31971 016b 00       		.byte	0
 31972 016c 1C       		.uleb128 0x1c
 31973 016d 1D       		.uleb128 0x1d
 31974 016e 01       		.byte	0x1
 31975 016f 31       		.uleb128 0x31
 31976 0170 13       		.uleb128 0x13
 31977 0171 11       		.uleb128 0x11
 31978 0172 01       		.uleb128 0x1
 31979 0173 12       		.uleb128 0x12
 31980 0174 06       		.uleb128 0x6
 31981 0175 58       		.uleb128 0x58
 31982 0176 0B       		.uleb128 0xb
 31983 0177 59       		.uleb128 0x59
 31984 0178 0B       		.uleb128 0xb
 31985 0179 01       		.uleb128 0x1
 31986 017a 13       		.uleb128 0x13
 31987 017b 00       		.byte	0
 31988 017c 00       		.byte	0
 31989 017d 1D       		.uleb128 0x1d
 31990 017e 05       		.uleb128 0x5
 31991 017f 00       		.byte	0
 31992 0180 31       		.uleb128 0x31
 31993 0181 13       		.uleb128 0x13
 31994 0182 02       		.uleb128 0x2
 31995 0183 18       		.uleb128 0x18
 31996 0184 00       		.byte	0
 31997 0185 00       		.byte	0
 31998 0186 1E       		.uleb128 0x1e
 31999 0187 0B       		.uleb128 0xb
 32000 0188 01       		.byte	0x1
 32001 0189 11       		.uleb128 0x11
 32002 018a 01       		.uleb128 0x1
 32003 018b 12       		.uleb128 0x12
 32004 018c 06       		.uleb128 0x6
 32005 018d 00       		.byte	0
 32006 018e 00       		.byte	0
 32007 018f 1F       		.uleb128 0x1f
 32008 0190 34       		.uleb128 0x34
 32009 0191 00       		.byte	0
 32010 0192 31       		.uleb128 0x31
 32011 0193 13       		.uleb128 0x13
 32012 0194 02       		.uleb128 0x2
 32013 0195 18       		.uleb128 0x18
 32014 0196 00       		.byte	0
 32015 0197 00       		.byte	0
 32016 0198 20       		.uleb128 0x20
 32017 0199 1D       		.uleb128 0x1d
 32018 019a 01       		.byte	0x1
 32019 019b 31       		.uleb128 0x31
 32020 019c 13       		.uleb128 0x13
 32021 019d 11       		.uleb128 0x11
 32022 019e 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 683


 32023 019f 12       		.uleb128 0x12
 32024 01a0 06       		.uleb128 0x6
 32025 01a1 58       		.uleb128 0x58
 32026 01a2 0B       		.uleb128 0xb
 32027 01a3 59       		.uleb128 0x59
 32028 01a4 05       		.uleb128 0x5
 32029 01a5 00       		.byte	0
 32030 01a6 00       		.byte	0
 32031 01a7 21       		.uleb128 0x21
 32032 01a8 2E       		.uleb128 0x2e
 32033 01a9 01       		.byte	0x1
 32034 01aa 3F       		.uleb128 0x3f
 32035 01ab 19       		.uleb128 0x19
 32036 01ac 03       		.uleb128 0x3
 32037 01ad 0E       		.uleb128 0xe
 32038 01ae 3A       		.uleb128 0x3a
 32039 01af 0B       		.uleb128 0xb
 32040 01b0 3B       		.uleb128 0x3b
 32041 01b1 05       		.uleb128 0x5
 32042 01b2 27       		.uleb128 0x27
 32043 01b3 19       		.uleb128 0x19
 32044 01b4 11       		.uleb128 0x11
 32045 01b5 01       		.uleb128 0x1
 32046 01b6 12       		.uleb128 0x12
 32047 01b7 06       		.uleb128 0x6
 32048 01b8 40       		.uleb128 0x40
 32049 01b9 18       		.uleb128 0x18
 32050 01ba 9642     		.uleb128 0x2116
 32051 01bc 19       		.uleb128 0x19
 32052 01bd 01       		.uleb128 0x1
 32053 01be 13       		.uleb128 0x13
 32054 01bf 00       		.byte	0
 32055 01c0 00       		.byte	0
 32056 01c1 22       		.uleb128 0x22
 32057 01c2 34       		.uleb128 0x34
 32058 01c3 00       		.byte	0
 32059 01c4 03       		.uleb128 0x3
 32060 01c5 0E       		.uleb128 0xe
 32061 01c6 3A       		.uleb128 0x3a
 32062 01c7 0B       		.uleb128 0xb
 32063 01c8 3B       		.uleb128 0x3b
 32064 01c9 05       		.uleb128 0x5
 32065 01ca 49       		.uleb128 0x49
 32066 01cb 13       		.uleb128 0x13
 32067 01cc 02       		.uleb128 0x2
 32068 01cd 18       		.uleb128 0x18
 32069 01ce 00       		.byte	0
 32070 01cf 00       		.byte	0
 32071 01d0 23       		.uleb128 0x23
 32072 01d1 21       		.uleb128 0x21
 32073 01d2 00       		.byte	0
 32074 01d3 49       		.uleb128 0x49
 32075 01d4 13       		.uleb128 0x13
 32076 01d5 2F       		.uleb128 0x2f
 32077 01d6 05       		.uleb128 0x5
 32078 01d7 00       		.byte	0
 32079 01d8 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 684


 32080 01d9 24       		.uleb128 0x24
 32081 01da 05       		.uleb128 0x5
 32082 01db 00       		.byte	0
 32083 01dc 03       		.uleb128 0x3
 32084 01dd 0E       		.uleb128 0xe
 32085 01de 3A       		.uleb128 0x3a
 32086 01df 0B       		.uleb128 0xb
 32087 01e0 3B       		.uleb128 0x3b
 32088 01e1 05       		.uleb128 0x5
 32089 01e2 49       		.uleb128 0x49
 32090 01e3 13       		.uleb128 0x13
 32091 01e4 02       		.uleb128 0x2
 32092 01e5 18       		.uleb128 0x18
 32093 01e6 00       		.byte	0
 32094 01e7 00       		.byte	0
 32095 01e8 25       		.uleb128 0x25
 32096 01e9 34       		.uleb128 0x34
 32097 01ea 00       		.byte	0
 32098 01eb 03       		.uleb128 0x3
 32099 01ec 08       		.uleb128 0x8
 32100 01ed 3A       		.uleb128 0x3a
 32101 01ee 0B       		.uleb128 0xb
 32102 01ef 3B       		.uleb128 0x3b
 32103 01f0 05       		.uleb128 0x5
 32104 01f1 49       		.uleb128 0x49
 32105 01f2 13       		.uleb128 0x13
 32106 01f3 02       		.uleb128 0x2
 32107 01f4 18       		.uleb128 0x18
 32108 01f5 00       		.byte	0
 32109 01f6 00       		.byte	0
 32110 01f7 26       		.uleb128 0x26
 32111 01f8 2E       		.uleb128 0x2e
 32112 01f9 01       		.byte	0x1
 32113 01fa 3F       		.uleb128 0x3f
 32114 01fb 19       		.uleb128 0x19
 32115 01fc 03       		.uleb128 0x3
 32116 01fd 0E       		.uleb128 0xe
 32117 01fe 3A       		.uleb128 0x3a
 32118 01ff 0B       		.uleb128 0xb
 32119 0200 3B       		.uleb128 0x3b
 32120 0201 05       		.uleb128 0x5
 32121 0202 11       		.uleb128 0x11
 32122 0203 01       		.uleb128 0x1
 32123 0204 12       		.uleb128 0x12
 32124 0205 06       		.uleb128 0x6
 32125 0206 40       		.uleb128 0x40
 32126 0207 18       		.uleb128 0x18
 32127 0208 9642     		.uleb128 0x2116
 32128 020a 19       		.uleb128 0x19
 32129 020b 01       		.uleb128 0x1
 32130 020c 13       		.uleb128 0x13
 32131 020d 00       		.byte	0
 32132 020e 00       		.byte	0
 32133 020f 27       		.uleb128 0x27
 32134 0210 05       		.uleb128 0x5
 32135 0211 00       		.byte	0
 32136 0212 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 685


 32137 0213 08       		.uleb128 0x8
 32138 0214 3A       		.uleb128 0x3a
 32139 0215 0B       		.uleb128 0xb
 32140 0216 3B       		.uleb128 0x3b
 32141 0217 05       		.uleb128 0x5
 32142 0218 49       		.uleb128 0x49
 32143 0219 13       		.uleb128 0x13
 32144 021a 02       		.uleb128 0x2
 32145 021b 18       		.uleb128 0x18
 32146 021c 00       		.byte	0
 32147 021d 00       		.byte	0
 32148 021e 28       		.uleb128 0x28
 32149 021f 2E       		.uleb128 0x2e
 32150 0220 01       		.byte	0x1
 32151 0221 3F       		.uleb128 0x3f
 32152 0222 19       		.uleb128 0x19
 32153 0223 03       		.uleb128 0x3
 32154 0224 0E       		.uleb128 0xe
 32155 0225 3A       		.uleb128 0x3a
 32156 0226 0B       		.uleb128 0xb
 32157 0227 3B       		.uleb128 0x3b
 32158 0228 05       		.uleb128 0x5
 32159 0229 27       		.uleb128 0x27
 32160 022a 19       		.uleb128 0x19
 32161 022b 49       		.uleb128 0x49
 32162 022c 13       		.uleb128 0x13
 32163 022d 11       		.uleb128 0x11
 32164 022e 01       		.uleb128 0x1
 32165 022f 12       		.uleb128 0x12
 32166 0230 06       		.uleb128 0x6
 32167 0231 40       		.uleb128 0x40
 32168 0232 18       		.uleb128 0x18
 32169 0233 9742     		.uleb128 0x2117
 32170 0235 19       		.uleb128 0x19
 32171 0236 01       		.uleb128 0x1
 32172 0237 13       		.uleb128 0x13
 32173 0238 00       		.byte	0
 32174 0239 00       		.byte	0
 32175 023a 29       		.uleb128 0x29
 32176 023b 2E       		.uleb128 0x2e
 32177 023c 01       		.byte	0x1
 32178 023d 3F       		.uleb128 0x3f
 32179 023e 19       		.uleb128 0x19
 32180 023f 03       		.uleb128 0x3
 32181 0240 0E       		.uleb128 0xe
 32182 0241 3A       		.uleb128 0x3a
 32183 0242 0B       		.uleb128 0xb
 32184 0243 3B       		.uleb128 0x3b
 32185 0244 05       		.uleb128 0x5
 32186 0245 27       		.uleb128 0x27
 32187 0246 19       		.uleb128 0x19
 32188 0247 49       		.uleb128 0x49
 32189 0248 13       		.uleb128 0x13
 32190 0249 11       		.uleb128 0x11
 32191 024a 01       		.uleb128 0x1
 32192 024b 12       		.uleb128 0x12
 32193 024c 06       		.uleb128 0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 686


 32194 024d 40       		.uleb128 0x40
 32195 024e 18       		.uleb128 0x18
 32196 024f 9642     		.uleb128 0x2116
 32197 0251 19       		.uleb128 0x19
 32198 0252 01       		.uleb128 0x1
 32199 0253 13       		.uleb128 0x13
 32200 0254 00       		.byte	0
 32201 0255 00       		.byte	0
 32202 0256 2A       		.uleb128 0x2a
 32203 0257 2E       		.uleb128 0x2e
 32204 0258 01       		.byte	0x1
 32205 0259 3F       		.uleb128 0x3f
 32206 025a 19       		.uleb128 0x19
 32207 025b 03       		.uleb128 0x3
 32208 025c 0E       		.uleb128 0xe
 32209 025d 3A       		.uleb128 0x3a
 32210 025e 0B       		.uleb128 0xb
 32211 025f 3B       		.uleb128 0x3b
 32212 0260 05       		.uleb128 0x5
 32213 0261 27       		.uleb128 0x27
 32214 0262 19       		.uleb128 0x19
 32215 0263 11       		.uleb128 0x11
 32216 0264 01       		.uleb128 0x1
 32217 0265 12       		.uleb128 0x12
 32218 0266 06       		.uleb128 0x6
 32219 0267 40       		.uleb128 0x40
 32220 0268 18       		.uleb128 0x18
 32221 0269 9742     		.uleb128 0x2117
 32222 026b 19       		.uleb128 0x19
 32223 026c 01       		.uleb128 0x1
 32224 026d 13       		.uleb128 0x13
 32225 026e 00       		.byte	0
 32226 026f 00       		.byte	0
 32227 0270 2B       		.uleb128 0x2b
 32228 0271 2E       		.uleb128 0x2e
 32229 0272 00       		.byte	0
 32230 0273 3F       		.uleb128 0x3f
 32231 0274 19       		.uleb128 0x19
 32232 0275 03       		.uleb128 0x3
 32233 0276 0E       		.uleb128 0xe
 32234 0277 3A       		.uleb128 0x3a
 32235 0278 0B       		.uleb128 0xb
 32236 0279 3B       		.uleb128 0x3b
 32237 027a 05       		.uleb128 0x5
 32238 027b 27       		.uleb128 0x27
 32239 027c 19       		.uleb128 0x19
 32240 027d 11       		.uleb128 0x11
 32241 027e 01       		.uleb128 0x1
 32242 027f 12       		.uleb128 0x12
 32243 0280 06       		.uleb128 0x6
 32244 0281 40       		.uleb128 0x40
 32245 0282 18       		.uleb128 0x18
 32246 0283 9742     		.uleb128 0x2117
 32247 0285 19       		.uleb128 0x19
 32248 0286 00       		.byte	0
 32249 0287 00       		.byte	0
 32250 0288 2C       		.uleb128 0x2c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 687


 32251 0289 2E       		.uleb128 0x2e
 32252 028a 01       		.byte	0x1
 32253 028b 3F       		.uleb128 0x3f
 32254 028c 19       		.uleb128 0x19
 32255 028d 03       		.uleb128 0x3
 32256 028e 0E       		.uleb128 0xe
 32257 028f 3A       		.uleb128 0x3a
 32258 0290 0B       		.uleb128 0xb
 32259 0291 3B       		.uleb128 0x3b
 32260 0292 05       		.uleb128 0x5
 32261 0293 11       		.uleb128 0x11
 32262 0294 01       		.uleb128 0x1
 32263 0295 12       		.uleb128 0x12
 32264 0296 06       		.uleb128 0x6
 32265 0297 40       		.uleb128 0x40
 32266 0298 18       		.uleb128 0x18
 32267 0299 9742     		.uleb128 0x2117
 32268 029b 19       		.uleb128 0x19
 32269 029c 01       		.uleb128 0x1
 32270 029d 13       		.uleb128 0x13
 32271 029e 00       		.byte	0
 32272 029f 00       		.byte	0
 32273 02a0 2D       		.uleb128 0x2d
 32274 02a1 0B       		.uleb128 0xb
 32275 02a2 01       		.byte	0x1
 32276 02a3 11       		.uleb128 0x11
 32277 02a4 01       		.uleb128 0x1
 32278 02a5 12       		.uleb128 0x12
 32279 02a6 06       		.uleb128 0x6
 32280 02a7 01       		.uleb128 0x1
 32281 02a8 13       		.uleb128 0x13
 32282 02a9 00       		.byte	0
 32283 02aa 00       		.byte	0
 32284 02ab 2E       		.uleb128 0x2e
 32285 02ac 2E       		.uleb128 0x2e
 32286 02ad 01       		.byte	0x1
 32287 02ae 3F       		.uleb128 0x3f
 32288 02af 19       		.uleb128 0x19
 32289 02b0 03       		.uleb128 0x3
 32290 02b1 0E       		.uleb128 0xe
 32291 02b2 3A       		.uleb128 0x3a
 32292 02b3 0B       		.uleb128 0xb
 32293 02b4 3B       		.uleb128 0x3b
 32294 02b5 05       		.uleb128 0x5
 32295 02b6 49       		.uleb128 0x49
 32296 02b7 13       		.uleb128 0x13
 32297 02b8 11       		.uleb128 0x11
 32298 02b9 01       		.uleb128 0x1
 32299 02ba 12       		.uleb128 0x12
 32300 02bb 06       		.uleb128 0x6
 32301 02bc 40       		.uleb128 0x40
 32302 02bd 18       		.uleb128 0x18
 32303 02be 9642     		.uleb128 0x2116
 32304 02c0 19       		.uleb128 0x19
 32305 02c1 01       		.uleb128 0x1
 32306 02c2 13       		.uleb128 0x13
 32307 02c3 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 688


 32308 02c4 00       		.byte	0
 32309 02c5 2F       		.uleb128 0x2f
 32310 02c6 2E       		.uleb128 0x2e
 32311 02c7 00       		.byte	0
 32312 02c8 3F       		.uleb128 0x3f
 32313 02c9 19       		.uleb128 0x19
 32314 02ca 03       		.uleb128 0x3
 32315 02cb 0E       		.uleb128 0xe
 32316 02cc 3A       		.uleb128 0x3a
 32317 02cd 0B       		.uleb128 0xb
 32318 02ce 3B       		.uleb128 0x3b
 32319 02cf 05       		.uleb128 0x5
 32320 02d0 11       		.uleb128 0x11
 32321 02d1 01       		.uleb128 0x1
 32322 02d2 12       		.uleb128 0x12
 32323 02d3 06       		.uleb128 0x6
 32324 02d4 40       		.uleb128 0x40
 32325 02d5 18       		.uleb128 0x18
 32326 02d6 9642     		.uleb128 0x2116
 32327 02d8 19       		.uleb128 0x19
 32328 02d9 00       		.byte	0
 32329 02da 00       		.byte	0
 32330 02db 30       		.uleb128 0x30
 32331 02dc 2E       		.uleb128 0x2e
 32332 02dd 00       		.byte	0
 32333 02de 3F       		.uleb128 0x3f
 32334 02df 19       		.uleb128 0x19
 32335 02e0 03       		.uleb128 0x3
 32336 02e1 0E       		.uleb128 0xe
 32337 02e2 3A       		.uleb128 0x3a
 32338 02e3 0B       		.uleb128 0xb
 32339 02e4 3B       		.uleb128 0x3b
 32340 02e5 05       		.uleb128 0x5
 32341 02e6 11       		.uleb128 0x11
 32342 02e7 01       		.uleb128 0x1
 32343 02e8 12       		.uleb128 0x12
 32344 02e9 06       		.uleb128 0x6
 32345 02ea 40       		.uleb128 0x40
 32346 02eb 18       		.uleb128 0x18
 32347 02ec 9742     		.uleb128 0x2117
 32348 02ee 19       		.uleb128 0x19
 32349 02ef 00       		.byte	0
 32350 02f0 00       		.byte	0
 32351 02f1 31       		.uleb128 0x31
 32352 02f2 2E       		.uleb128 0x2e
 32353 02f3 01       		.byte	0x1
 32354 02f4 3F       		.uleb128 0x3f
 32355 02f5 19       		.uleb128 0x19
 32356 02f6 03       		.uleb128 0x3
 32357 02f7 0E       		.uleb128 0xe
 32358 02f8 3A       		.uleb128 0x3a
 32359 02f9 0B       		.uleb128 0xb
 32360 02fa 3B       		.uleb128 0x3b
 32361 02fb 05       		.uleb128 0x5
 32362 02fc 49       		.uleb128 0x49
 32363 02fd 13       		.uleb128 0x13
 32364 02fe 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 689


 32365 02ff 01       		.uleb128 0x1
 32366 0300 12       		.uleb128 0x12
 32367 0301 06       		.uleb128 0x6
 32368 0302 40       		.uleb128 0x40
 32369 0303 18       		.uleb128 0x18
 32370 0304 9742     		.uleb128 0x2117
 32371 0306 19       		.uleb128 0x19
 32372 0307 01       		.uleb128 0x1
 32373 0308 13       		.uleb128 0x13
 32374 0309 00       		.byte	0
 32375 030a 00       		.byte	0
 32376 030b 32       		.uleb128 0x32
 32377 030c 34       		.uleb128 0x34
 32378 030d 00       		.byte	0
 32379 030e 03       		.uleb128 0x3
 32380 030f 0E       		.uleb128 0xe
 32381 0310 3A       		.uleb128 0x3a
 32382 0311 0B       		.uleb128 0xb
 32383 0312 3B       		.uleb128 0x3b
 32384 0313 05       		.uleb128 0x5
 32385 0314 49       		.uleb128 0x49
 32386 0315 13       		.uleb128 0x13
 32387 0316 3F       		.uleb128 0x3f
 32388 0317 19       		.uleb128 0x19
 32389 0318 3C       		.uleb128 0x3c
 32390 0319 19       		.uleb128 0x19
 32391 031a 00       		.byte	0
 32392 031b 00       		.byte	0
 32393 031c 33       		.uleb128 0x33
 32394 031d 34       		.uleb128 0x34
 32395 031e 00       		.byte	0
 32396 031f 03       		.uleb128 0x3
 32397 0320 0E       		.uleb128 0xe
 32398 0321 3A       		.uleb128 0x3a
 32399 0322 0B       		.uleb128 0xb
 32400 0323 3B       		.uleb128 0x3b
 32401 0324 0B       		.uleb128 0xb
 32402 0325 49       		.uleb128 0x49
 32403 0326 13       		.uleb128 0x13
 32404 0327 3F       		.uleb128 0x3f
 32405 0328 19       		.uleb128 0x19
 32406 0329 02       		.uleb128 0x2
 32407 032a 18       		.uleb128 0x18
 32408 032b 00       		.byte	0
 32409 032c 00       		.byte	0
 32410 032d 00       		.byte	0
 32411              		.section	.debug_aranges,"",%progbits
 32412 0000 CC010000 		.4byte	0x1cc
 32413 0004 0200     		.2byte	0x2
 32414 0006 00000000 		.4byte	.Ldebug_info0
 32415 000a 04       		.byte	0x4
 32416 000b 00       		.byte	0
 32417 000c 0000     		.2byte	0
 32418 000e 0000     		.2byte	0
 32419 0010 00000000 		.4byte	.LFB64
 32420 0014 E8040000 		.4byte	.LFE64-.LFB64
 32421 0018 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 690


 32422 001c 22000000 		.4byte	.LFE65-.LFB65
 32423 0020 00000000 		.4byte	.LFB66
 32424 0024 02010000 		.4byte	.LFE66-.LFB66
 32425 0028 00000000 		.4byte	.LFB67
 32426 002c 0C320000 		.4byte	.LFE67-.LFB67
 32427 0030 00000000 		.4byte	.LFB68
 32428 0034 24190000 		.4byte	.LFE68-.LFB68
 32429 0038 00000000 		.4byte	.LFB69
 32430 003c 8C140000 		.4byte	.LFE69-.LFB69
 32431 0040 00000000 		.4byte	.LFB70
 32432 0044 F40D0000 		.4byte	.LFE70-.LFB70
 32433 0048 00000000 		.4byte	.LFB71
 32434 004c 84000000 		.4byte	.LFE71-.LFB71
 32435 0050 00000000 		.4byte	.LFB72
 32436 0054 50210000 		.4byte	.LFE72-.LFB72
 32437 0058 00000000 		.4byte	.LFB73
 32438 005c B4030000 		.4byte	.LFE73-.LFB73
 32439 0060 00000000 		.4byte	.LFB74
 32440 0064 7C120000 		.4byte	.LFE74-.LFB74
 32441 0068 00000000 		.4byte	.LFB75
 32442 006c C8000000 		.4byte	.LFE75-.LFB75
 32443 0070 00000000 		.4byte	.LFB76
 32444 0074 30010000 		.4byte	.LFE76-.LFB76
 32445 0078 00000000 		.4byte	.LFB77
 32446 007c 74030000 		.4byte	.LFE77-.LFB77
 32447 0080 00000000 		.4byte	.LFB78
 32448 0084 84000000 		.4byte	.LFE78-.LFB78
 32449 0088 00000000 		.4byte	.LFB79
 32450 008c 88000000 		.4byte	.LFE79-.LFB79
 32451 0090 00000000 		.4byte	.LFB80
 32452 0094 A0000000 		.4byte	.LFE80-.LFB80
 32453 0098 00000000 		.4byte	.LFB81
 32454 009c 3E000000 		.4byte	.LFE81-.LFB81
 32455 00a0 00000000 		.4byte	.LFB82
 32456 00a4 2E000000 		.4byte	.LFE82-.LFB82
 32457 00a8 00000000 		.4byte	.LFB83
 32458 00ac 98000000 		.4byte	.LFE83-.LFB83
 32459 00b0 00000000 		.4byte	.LFB84
 32460 00b4 80000000 		.4byte	.LFE84-.LFB84
 32461 00b8 00000000 		.4byte	.LFB85
 32462 00bc 5C000000 		.4byte	.LFE85-.LFB85
 32463 00c0 00000000 		.4byte	.LFB86
 32464 00c4 08060000 		.4byte	.LFE86-.LFB86
 32465 00c8 00000000 		.4byte	.LFB87
 32466 00cc 38020000 		.4byte	.LFE87-.LFB87
 32467 00d0 00000000 		.4byte	.LFB88
 32468 00d4 28000000 		.4byte	.LFE88-.LFB88
 32469 00d8 00000000 		.4byte	.LFB89
 32470 00dc 78000000 		.4byte	.LFE89-.LFB89
 32471 00e0 00000000 		.4byte	.LFB90
 32472 00e4 B0000000 		.4byte	.LFE90-.LFB90
 32473 00e8 00000000 		.4byte	.LFB91
 32474 00ec B4000000 		.4byte	.LFE91-.LFB91
 32475 00f0 00000000 		.4byte	.LFB92
 32476 00f4 B8000000 		.4byte	.LFE92-.LFB92
 32477 00f8 00000000 		.4byte	.LFB93
 32478 00fc B8000000 		.4byte	.LFE93-.LFB93
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 691


 32479 0100 00000000 		.4byte	.LFB94
 32480 0104 5C000000 		.4byte	.LFE94-.LFB94
 32481 0108 00000000 		.4byte	.LFB95
 32482 010c 44020000 		.4byte	.LFE95-.LFB95
 32483 0110 00000000 		.4byte	.LFB96
 32484 0114 BC000000 		.4byte	.LFE96-.LFB96
 32485 0118 00000000 		.4byte	.LFB97
 32486 011c 5C000000 		.4byte	.LFE97-.LFB97
 32487 0120 00000000 		.4byte	.LFB98
 32488 0124 38010000 		.4byte	.LFE98-.LFB98
 32489 0128 00000000 		.4byte	.LFB99
 32490 012c EC000000 		.4byte	.LFE99-.LFB99
 32491 0130 00000000 		.4byte	.LFB100
 32492 0134 64000000 		.4byte	.LFE100-.LFB100
 32493 0138 00000000 		.4byte	.LFB101
 32494 013c A8000000 		.4byte	.LFE101-.LFB101
 32495 0140 00000000 		.4byte	.LFB102
 32496 0144 34000000 		.4byte	.LFE102-.LFB102
 32497 0148 00000000 		.4byte	.LFB103
 32498 014c 20000000 		.4byte	.LFE103-.LFB103
 32499 0150 00000000 		.4byte	.LFB104
 32500 0154 A0000000 		.4byte	.LFE104-.LFB104
 32501 0158 00000000 		.4byte	.LFB105
 32502 015c BC010000 		.4byte	.LFE105-.LFB105
 32503 0160 00000000 		.4byte	.LFB106
 32504 0164 60000000 		.4byte	.LFE106-.LFB106
 32505 0168 00000000 		.4byte	.LFB107
 32506 016c 98050000 		.4byte	.LFE107-.LFB107
 32507 0170 00000000 		.4byte	.LFB108
 32508 0174 8C000000 		.4byte	.LFE108-.LFB108
 32509 0178 00000000 		.4byte	.LFB109
 32510 017c EC000000 		.4byte	.LFE109-.LFB109
 32511 0180 00000000 		.4byte	.LFB110
 32512 0184 5C000000 		.4byte	.LFE110-.LFB110
 32513 0188 00000000 		.4byte	.LFB111
 32514 018c C0000000 		.4byte	.LFE111-.LFB111
 32515 0190 00000000 		.4byte	.LFB112
 32516 0194 0C000000 		.4byte	.LFE112-.LFB112
 32517 0198 00000000 		.4byte	.LFB113
 32518 019c 12000000 		.4byte	.LFE113-.LFB113
 32519 01a0 00000000 		.4byte	.LFB114
 32520 01a4 64010000 		.4byte	.LFE114-.LFB114
 32521 01a8 00000000 		.4byte	.LFB115
 32522 01ac 12000000 		.4byte	.LFE115-.LFB115
 32523 01b0 00000000 		.4byte	.LFB116
 32524 01b4 1A000000 		.4byte	.LFE116-.LFB116
 32525 01b8 00000000 		.4byte	.LFB117
 32526 01bc 0C000000 		.4byte	.LFE117-.LFB117
 32527 01c0 00000000 		.4byte	.LFB118
 32528 01c4 0C000000 		.4byte	.LFE118-.LFB118
 32529 01c8 00000000 		.4byte	0
 32530 01cc 00000000 		.4byte	0
 32531              		.section	.debug_ranges,"",%progbits
 32532              	.Ldebug_ranges0:
 32533 0000 00000000 		.4byte	.LFB64
 32534 0004 E8040000 		.4byte	.LFE64
 32535 0008 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 692


 32536 000c 22000000 		.4byte	.LFE65
 32537 0010 00000000 		.4byte	.LFB66
 32538 0014 02010000 		.4byte	.LFE66
 32539 0018 00000000 		.4byte	.LFB67
 32540 001c 0C320000 		.4byte	.LFE67
 32541 0020 00000000 		.4byte	.LFB68
 32542 0024 24190000 		.4byte	.LFE68
 32543 0028 00000000 		.4byte	.LFB69
 32544 002c 8C140000 		.4byte	.LFE69
 32545 0030 00000000 		.4byte	.LFB70
 32546 0034 F40D0000 		.4byte	.LFE70
 32547 0038 00000000 		.4byte	.LFB71
 32548 003c 84000000 		.4byte	.LFE71
 32549 0040 00000000 		.4byte	.LFB72
 32550 0044 50210000 		.4byte	.LFE72
 32551 0048 00000000 		.4byte	.LFB73
 32552 004c B4030000 		.4byte	.LFE73
 32553 0050 00000000 		.4byte	.LFB74
 32554 0054 7C120000 		.4byte	.LFE74
 32555 0058 00000000 		.4byte	.LFB75
 32556 005c C8000000 		.4byte	.LFE75
 32557 0060 00000000 		.4byte	.LFB76
 32558 0064 30010000 		.4byte	.LFE76
 32559 0068 00000000 		.4byte	.LFB77
 32560 006c 74030000 		.4byte	.LFE77
 32561 0070 00000000 		.4byte	.LFB78
 32562 0074 84000000 		.4byte	.LFE78
 32563 0078 00000000 		.4byte	.LFB79
 32564 007c 88000000 		.4byte	.LFE79
 32565 0080 00000000 		.4byte	.LFB80
 32566 0084 A0000000 		.4byte	.LFE80
 32567 0088 00000000 		.4byte	.LFB81
 32568 008c 3E000000 		.4byte	.LFE81
 32569 0090 00000000 		.4byte	.LFB82
 32570 0094 2E000000 		.4byte	.LFE82
 32571 0098 00000000 		.4byte	.LFB83
 32572 009c 98000000 		.4byte	.LFE83
 32573 00a0 00000000 		.4byte	.LFB84
 32574 00a4 80000000 		.4byte	.LFE84
 32575 00a8 00000000 		.4byte	.LFB85
 32576 00ac 5C000000 		.4byte	.LFE85
 32577 00b0 00000000 		.4byte	.LFB86
 32578 00b4 08060000 		.4byte	.LFE86
 32579 00b8 00000000 		.4byte	.LFB87
 32580 00bc 38020000 		.4byte	.LFE87
 32581 00c0 00000000 		.4byte	.LFB88
 32582 00c4 28000000 		.4byte	.LFE88
 32583 00c8 00000000 		.4byte	.LFB89
 32584 00cc 78000000 		.4byte	.LFE89
 32585 00d0 00000000 		.4byte	.LFB90
 32586 00d4 B0000000 		.4byte	.LFE90
 32587 00d8 00000000 		.4byte	.LFB91
 32588 00dc B4000000 		.4byte	.LFE91
 32589 00e0 00000000 		.4byte	.LFB92
 32590 00e4 B8000000 		.4byte	.LFE92
 32591 00e8 00000000 		.4byte	.LFB93
 32592 00ec B8000000 		.4byte	.LFE93
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 693


 32593 00f0 00000000 		.4byte	.LFB94
 32594 00f4 5C000000 		.4byte	.LFE94
 32595 00f8 00000000 		.4byte	.LFB95
 32596 00fc 44020000 		.4byte	.LFE95
 32597 0100 00000000 		.4byte	.LFB96
 32598 0104 BC000000 		.4byte	.LFE96
 32599 0108 00000000 		.4byte	.LFB97
 32600 010c 5C000000 		.4byte	.LFE97
 32601 0110 00000000 		.4byte	.LFB98
 32602 0114 38010000 		.4byte	.LFE98
 32603 0118 00000000 		.4byte	.LFB99
 32604 011c EC000000 		.4byte	.LFE99
 32605 0120 00000000 		.4byte	.LFB100
 32606 0124 64000000 		.4byte	.LFE100
 32607 0128 00000000 		.4byte	.LFB101
 32608 012c A8000000 		.4byte	.LFE101
 32609 0130 00000000 		.4byte	.LFB102
 32610 0134 34000000 		.4byte	.LFE102
 32611 0138 00000000 		.4byte	.LFB103
 32612 013c 20000000 		.4byte	.LFE103
 32613 0140 00000000 		.4byte	.LFB104
 32614 0144 A0000000 		.4byte	.LFE104
 32615 0148 00000000 		.4byte	.LFB105
 32616 014c BC010000 		.4byte	.LFE105
 32617 0150 00000000 		.4byte	.LFB106
 32618 0154 60000000 		.4byte	.LFE106
 32619 0158 00000000 		.4byte	.LFB107
 32620 015c 98050000 		.4byte	.LFE107
 32621 0160 00000000 		.4byte	.LFB108
 32622 0164 8C000000 		.4byte	.LFE108
 32623 0168 00000000 		.4byte	.LFB109
 32624 016c EC000000 		.4byte	.LFE109
 32625 0170 00000000 		.4byte	.LFB110
 32626 0174 5C000000 		.4byte	.LFE110
 32627 0178 00000000 		.4byte	.LFB111
 32628 017c C0000000 		.4byte	.LFE111
 32629 0180 00000000 		.4byte	.LFB112
 32630 0184 0C000000 		.4byte	.LFE112
 32631 0188 00000000 		.4byte	.LFB113
 32632 018c 12000000 		.4byte	.LFE113
 32633 0190 00000000 		.4byte	.LFB114
 32634 0194 64010000 		.4byte	.LFE114
 32635 0198 00000000 		.4byte	.LFB115
 32636 019c 12000000 		.4byte	.LFE115
 32637 01a0 00000000 		.4byte	.LFB116
 32638 01a4 1A000000 		.4byte	.LFE116
 32639 01a8 00000000 		.4byte	.LFB117
 32640 01ac 0C000000 		.4byte	.LFE117
 32641 01b0 00000000 		.4byte	.LFB118
 32642 01b4 0C000000 		.4byte	.LFE118
 32643 01b8 00000000 		.4byte	0
 32644 01bc 00000000 		.4byte	0
 32645              		.section	.debug_line,"",%progbits
 32646              	.Ldebug_line0:
 32647 0000 021E0000 		.section	.debug_str,"MS",%progbits,1
 32647      0200C001 
 32647      00000201 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 694


 32647      FB0E0D00 
 32647      01010101 
 32648              	.LASF213:
 32649 0000 696E666F 		.ascii	"infoSend\000"
 32649      53656E64 
 32649      00
 32650              	.LASF265:
 32651 0009 69645F73 		.ascii	"id_str\000"
 32651      747200
 32652              	.LASF247:
 32653 0010 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 32653      61637469 
 32653      76617469 
 32653      6F6E5F6D 
 32653      6F64655F 
 32654              	.LASF25:
 32655 0029 73697A65 		.ascii	"sizetype\000"
 32655      74797065 
 32655      00
 32656              	.LASF33:
 32657 0032 434D445F 		.ascii	"CMD_INIT_MEM\000"
 32657      494E4954 
 32657      5F4D454D 
 32657      00
 32658              	.LASF331:
 32659 003f 676C5F63 		.ascii	"gl_c\000"
 32659      00
 32660              	.LASF193:
 32661 0044 77726973 		.ascii	"wrist_direction_association\000"
 32661      745F6469 
 32661      72656374 
 32661      696F6E5F 
 32661      6173736F 
 32662              	.LASF64:
 32663 0060 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 32663      545F4D4F 
 32663      44455F45 
 32663      4D475F46 
 32663      4346535F 
 32664              	.LASF36:
 32665 0078 434D445F 		.ascii	"CMD_ACTIVATE\000"
 32665      41435449 
 32665      56415445 
 32665      00
 32666              	.LASF198:
 32667 0085 75736572 		.ascii	"user\000"
 32667      00
 32668              	.LASF345:
 32669 008a 665F6572 		.ascii	"f_err_emg_1\000"
 32669      725F656D 
 32669      675F3100 
 32670              	.LASF346:
 32671 0096 665F6572 		.ascii	"f_err_emg_2\000"
 32671      725F656D 
 32671      675F3200 
 32672              	.LASF350:
 32673 00a2 73746F70 		.ascii	"stop_master_device\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 695


 32673      5F6D6173 
 32673      7465725F 
 32673      64657669 
 32673      636500
 32674              	.LASF11:
 32675 00b5 696E7433 		.ascii	"int32_t\000"
 32675      325F7400 
 32676              	.LASF361:
 32677 00bd 675F7278 		.ascii	"g_rx\000"
 32677      00
 32678              	.LASF101:
 32679 00c2 73745F64 		.ascii	"st_data\000"
 32679      61746100 
 32680              	.LASF296:
 32681 00ca 77726974 		.ascii	"writeStatus\000"
 32681      65537461 
 32681      74757300 
 32682              	.LASF15:
 32683 00d6 75696E74 		.ascii	"uint32\000"
 32683      333200
 32684              	.LASF337:
 32685 00dd 636D645F 		.ascii	"cmd_set_baudrate\000"
 32685      7365745F 
 32685      62617564 
 32685      72617465 
 32685      00
 32686              	.LASF339:
 32687 00ee 6169725F 		.ascii	"air_chambers_control\000"
 32687      6368616D 
 32687      62657273 
 32687      5F636F6E 
 32687      74726F6C 
 32688              	.LASF273:
 32689 0103 7370695F 		.ascii	"spi_read_delay_str_len\000"
 32689      72656164 
 32689      5F64656C 
 32689      61795F73 
 32689      74725F6C 
 32690              	.LASF199:
 32691 011a 4A4F595F 		.ascii	"JOY_spec\000"
 32691      73706563 
 32691      00
 32692              	.LASF275:
 32693 0123 70726570 		.ascii	"prepare_generic_info\000"
 32693      6172655F 
 32693      67656E65 
 32693      7269635F 
 32693      696E666F 
 32694              	.LASF137:
 32695 0138 706F735F 		.ascii	"pos_lim_inf\000"
 32695      6C696D5F 
 32695      696E6600 
 32696              	.LASF239:
 32697 0144 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 32697      4E445F4D 
 32697      4F544F52 
 32697      5F494458 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 696


 32697      00
 32698              	.LASF324:
 32699 0155 636D645F 		.ascii	"cmd_get_inputs\000"
 32699      6765745F 
 32699      696E7075 
 32699      747300
 32700              	.LASF63:
 32701 0164 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 32701      545F4D4F 
 32701      44455F45 
 32701      4D475F46 
 32701      43465300 
 32702              	.LASF141:
 32703 0178 63757272 		.ascii	"curr_lookup\000"
 32703      5F6C6F6F 
 32703      6B757000 
 32704              	.LASF109:
 32705 0184 72657374 		.ascii	"rest_counter\000"
 32705      5F636F75 
 32705      6E746572 
 32705      00
 32706              	.LASF329:
 32707 0191 636D645F 		.ascii	"cmd_get_imu_readings\000"
 32707      6765745F 
 32707      696D755F 
 32707      72656164 
 32707      696E6773 
 32708              	.LASF183:
 32709 01a6 73745F4D 		.ascii	"st_MASTER_spec\000"
 32709      41535445 
 32709      525F7370 
 32709      656300
 32710              	.LASF268:
 32711 01b5 69645F73 		.ascii	"id_str_len\000"
 32711      74725F6C 
 32711      656E00
 32712              	.LASF62:
 32713 01c0 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 32713      545F4D4F 
 32713      44455F45 
 32713      4D475F49 
 32713      4E544547 
 32714              	.LASF241:
 32715 01d8 6D5F746D 		.ascii	"m_tmp\000"
 32715      7000
 32716              	.LASF16:
 32717 01de 696E7438 		.ascii	"int8\000"
 32717      00
 32718              	.LASF218:
 32719 01e3 6765745F 		.ascii	"get_param_list\000"
 32719      70617261 
 32719      6D5F6C69 
 32719      737400
 32720              	.LASF309:
 32721 01f2 636D645F 		.ascii	"cmd_get_accelerations\000"
 32721      6765745F 
 32721      61636365 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 697


 32721      6C657261 
 32721      74696F6E 
 32722              	.LASF328:
 32723 0208 636D645F 		.ascii	"cmd_get_emg\000"
 32723      6765745F 
 32723      656D6700 
 32724              	.LASF156:
 32725 0214 73745F65 		.ascii	"st_emg\000"
 32725      6D6700
 32726              	.LASF107:
 32727 021b 706F7369 		.ascii	"position_hist\000"
 32727      74696F6E 
 32727      5F686973 
 32727      7400
 32728              	.LASF206:
 32729 0229 74656D70 		.ascii	"temp_value\000"
 32729      5F76616C 
 32729      756500
 32730              	.LASF393:
 32731 0234 72657375 		.ascii	"result\000"
 32731      6C7400
 32732              	.LASF267:
 32733 023b 7370695F 		.ascii	"spi_read_delay_str\000"
 32733      72656164 
 32733      5F64656C 
 32733      61795F73 
 32733      747200
 32734              	.LASF190:
 32735 024e 73745F57 		.ascii	"st_WR_spec\000"
 32735      525F7370 
 32735      656300
 32736              	.LASF104:
 32737 0259 72656164 		.ascii	"ready\000"
 32737      7900
 32738              	.LASF153:
 32739 025f 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 32739      6964785F 
 32739      7573655F 
 32739      666F725F 
 32739      636F6E74 
 32740              	.LASF49:
 32741 0277 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 32741      4745545F 
 32741      4A4F5953 
 32741      5449434B 
 32741      00
 32742              	.LASF61:
 32743 0288 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 32743      545F4D4F 
 32743      44455F45 
 32743      4D475F50 
 32743      524F504F 
 32744              	.LASF118:
 32745 02a4 7573655F 		.ascii	"use_2nd_motor_flag\000"
 32745      326E645F 
 32745      6D6F746F 
 32745      725F666C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 698


 32745      616700
 32746              	.LASF320:
 32747 02b7 745F7374 		.ascii	"t_start\000"
 32747      61727400 
 32748              	.LASF163:
 32749 02bf 72656164 		.ascii	"read_imu_flag\000"
 32749      5F696D75 
 32749      5F666C61 
 32749      6700
 32750              	.LASF365:
 32751 02cd 74696D65 		.ascii	"timer_value\000"
 32751      725F7661 
 32751      6C756500 
 32752              	.LASF4:
 32753 02d9 6C6F6E67 		.ascii	"long int\000"
 32753      20696E74 
 32753      00
 32754              	.LASF196:
 32755 02e2 756E7573 		.ascii	"unused_bytes1\000"
 32755      65645F62 
 32755      79746573 
 32755      3100
 32756              	.LASF349:
 32757 02f0 6D6F746F 		.ascii	"motor_idx\000"
 32757      725F6964 
 32757      7800
 32758              	.LASF117:
 32759 02fa 72657365 		.ascii	"reset_counters\000"
 32759      745F636F 
 32759      756E7465 
 32759      727300
 32760              	.LASF173:
 32761 0309 75736572 		.ascii	"user_emg\000"
 32761      5F656D67 
 32761      00
 32762              	.LASF338:
 32763 0312 636D645F 		.ascii	"cmd_get_SD_file\000"
 32763      6765745F 
 32763      53445F66 
 32763      696C6500 
 32764              	.LASF306:
 32765 0322 7365745A 		.ascii	"setZeros\000"
 32765      65726F73 
 32765      00
 32766              	.LASF122:
 32767 032b 756E7573 		.ascii	"unused_bytes\000"
 32767      65645F62 
 32767      79746573 
 32767      00
 32768              	.LASF202:
 32769 0338 61636365 		.ascii	"accel_value\000"
 32769      6C5F7661 
 32769      6C756500 
 32770              	.LASF222:
 32771 0344 4E554D5F 		.ascii	"NUM_ITEMS\000"
 32771      4954454D 
 32771      5300
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 699


 32772              	.LASF105:
 32773 034e 73745F63 		.ascii	"st_counters\000"
 32773      6F756E74 
 32773      65727300 
 32774              	.LASF245:
 32775 035a 4D454D5F 		.ascii	"MEM_P\000"
 32775      5000
 32776              	.LASF19:
 32777 0360 666C6F61 		.ascii	"float32\000"
 32777      74333200 
 32778              	.LASF335:
 32779 0368 636D645F 		.ascii	"cmd_get_ADC_map\000"
 32779      6765745F 
 32779      4144435F 
 32779      6D617000 
 32780              	.LASF41:
 32781 0378 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 32781      4745545F 
 32781      43555252 
 32781      454E5453 
 32781      00
 32782              	.LASF106:
 32783 0389 656D675F 		.ascii	"emg_counter\000"
 32783      636F756E 
 32783      74657200 
 32784              	.LASF336:
 32785 0395 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 32785      6765745F 
 32785      4144435F 
 32785      72617700 
 32786              	.LASF255:
 32787 03a5 6175785F 		.ascii	"aux_float2\000"
 32787      666C6F61 
 32787      743200
 32788              	.LASF323:
 32789 03b0 636D645F 		.ascii	"cmd_ping\000"
 32789      70696E67 
 32789      00
 32790              	.LASF274:
 32791 03b9 7370695F 		.ascii	"spi_delay_menu_len\000"
 32791      64656C61 
 32791      795F6D65 
 32791      6E755F6C 
 32791      656E00
 32792              	.LASF253:
 32793 03cc 7365745F 		.ascii	"set_custom_param\000"
 32793      63757374 
 32793      6F6D5F70 
 32793      6172616D 
 32793      00
 32794              	.LASF305:
 32795 03dd 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 32795      6E69745F 
 32795      4F74626B 
 32795      41637457 
 32795      72697374 
 32796              	.LASF0:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 700


 32797 03f4 7369676E 		.ascii	"signed char\000"
 32797      65642063 
 32797      68617200 
 32798              	.LASF172:
 32799 0400 75736572 		.ascii	"user_code_string\000"
 32799      5F636F64 
 32799      655F7374 
 32799      72696E67 
 32799      00
 32800              	.LASF207:
 32801 0411 73745F63 		.ascii	"st_calib\000"
 32801      616C6962 
 32801      00
 32802              	.LASF343:
 32803 041a 6572725F 		.ascii	"err_emg_1\000"
 32803      656D675F 
 32803      3100
 32804              	.LASF294:
 32805 0424 6D656D53 		.ascii	"memStore\000"
 32805      746F7265 
 32805      00
 32806              	.LASF384:
 32807 042d 73696E67 		.ascii	"single_imu_size\000"
 32807      6C655F69 
 32807      6D755F73 
 32807      697A6500 
 32808              	.LASF72:
 32809 043d 6D6F746F 		.ascii	"motor_supply_type\000"
 32809      725F7375 
 32809      70706C79 
 32809      5F747970 
 32809      6500
 32810              	.LASF322:
 32811 044f 72656164 		.ascii	"read_flag\000"
 32811      5F666C61 
 32811      6700
 32812              	.LASF374:
 32813 0459 4144435F 		.ascii	"ADC_buf\000"
 32813      62756600 
 32814              	.LASF371:
 32815 0461 696E7465 		.ascii	"interrupt_flag\000"
 32815      72727570 
 32815      745F666C 
 32815      616700
 32816              	.LASF279:
 32817 0470 73746570 		.ascii	"step\000"
 32817      00
 32818              	.LASF1:
 32819 0475 756E7369 		.ascii	"unsigned char\000"
 32819      676E6564 
 32819      20636861 
 32819      7200
 32820              	.LASF147:
 32821 0483 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 32821      72657665 
 32821      72735F6D 
 32821      6F746F72 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 701


 32821      5F666C61 
 32822              	.LASF354:
 32823 0499 675F7265 		.ascii	"g_refNew\000"
 32823      664E6577 
 32823      00
 32824              	.LASF116:
 32825 04a2 72696768 		.ascii	"right_left\000"
 32825      745F6C65 
 32825      667400
 32826              	.LASF29:
 32827 04ad 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 32827      53544F52 
 32827      455F4445 
 32827      4641554C 
 32827      545F5041 
 32828              	.LASF145:
 32829 04c6 656E636F 		.ascii	"encoder_line\000"
 32829      6465725F 
 32829      6C696E65 
 32829      00
 32830              	.LASF391:
 32831 04d3 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 32831      73657273 
 32831      5C4D6174 
 32831      7469615C 
 32831      446F6375 
 32832 0501 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Generic.cydsn\000"
 32832      656E6572 
 32832      69632D46 
 32832      572D5053 
 32832      6F43355C 
 32833              	.LASF269:
 32834 0523 6E5F696D 		.ascii	"n_imu_str_len\000"
 32834      755F7374 
 32834      725F6C65 
 32834      6E00
 32835              	.LASF272:
 32836 0531 696D755F 		.ascii	"imu_table_str_len\000"
 32836      7461626C 
 32836      655F7374 
 32836      725F6C65 
 32836      6E00
 32837              	.LASF292:
 32838 0543 76616C75 		.ascii	"value\000"
 32838      6500
 32839              	.LASF201:
 32840 0549 666C6167 		.ascii	"flags\000"
 32840      7300
 32841              	.LASF100:
 32842 054f 70726573 		.ascii	"pressure\000"
 32842      73757265 
 32842      00
 32843              	.LASF37:
 32844 0558 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 32844      4745545F 
 32844      41435449 
 32844      56415445 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 702


 32844      00
 32845              	.LASF22:
 32846 0569 63686172 		.ascii	"char\000"
 32846      00
 32847              	.LASF140:
 32848 056e 6D61785F 		.ascii	"max_step_pos\000"
 32848      73746570 
 32848      5F706F73 
 32848      00
 32849              	.LASF385:
 32850 057b 675F696D 		.ascii	"g_imu\000"
 32850      7500
 32851              	.LASF298:
 32852 0581 7265745F 		.ascii	"ret_val\000"
 32852      76616C00 
 32853              	.LASF252:
 32854 0589 6D656E75 		.ascii	"menu_idx\000"
 32854      5F696478 
 32854      00
 32855              	.LASF261:
 32856 0592 73746172 		.ascii	"start_byte\000"
 32856      745F6279 
 32856      746500
 32857              	.LASF258:
 32858 059d 6E756D5F 		.ascii	"num_mag_cal_params\000"
 32858      6D61675F 
 32858      63616C5F 
 32858      70617261 
 32858      6D7300
 32859              	.LASF146:
 32860 05b0 70776D5F 		.ascii	"pwm_rate_limiter\000"
 32860      72617465 
 32860      5F6C696D 
 32860      69746572 
 32860      00
 32861              	.LASF126:
 32862 05c1 6B5F645F 		.ascii	"k_d_c\000"
 32862      6300
 32863              	.LASF99:
 32864 05c7 73745F66 		.ascii	"st_fb_meas\000"
 32864      625F6D65 
 32864      617300
 32865              	.LASF215:
 32866 05d2 7061636B 		.ascii	"packet_string\000"
 32866      65745F73 
 32866      7472696E 
 32866      6700
 32867              	.LASF151:
 32868 05e0 6D5F6D75 		.ascii	"m_mult\000"
 32868      6C7400
 32869              	.LASF125:
 32870 05e7 6B5F695F 		.ascii	"k_i_c\000"
 32870      6300
 32871              	.LASF295:
 32872 05ed 64697370 		.ascii	"displacement\000"
 32872      6C616365 
 32872      6D656E74 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 703


 32872      00
 32873              	.LASF289:
 32874 05fa 64617461 		.ascii	"data_length\000"
 32874      5F6C656E 
 32874      67746800 
 32875              	.LASF138:
 32876 0606 706F735F 		.ascii	"pos_lim_sup\000"
 32876      6C696D5F 
 32876      73757000 
 32877              	.LASF159:
 32878 0612 656D675F 		.ascii	"emg_speed\000"
 32878      73706565 
 32878      6400
 32879              	.LASF177:
 32880 061c 72657374 		.ascii	"rest_vel\000"
 32880      5F76656C 
 32880      00
 32881              	.LASF228:
 32882 0625 7061636B 		.ascii	"packet_data\000"
 32882      65745F64 
 32882      61746100 
 32883              	.LASF113:
 32884 0631 73745F64 		.ascii	"st_device\000"
 32884      65766963 
 32884      6500
 32885              	.LASF380:
 32886 063b 7046696C 		.ascii	"pFile\000"
 32886      6500
 32887              	.LASF170:
 32888 0641 4144435F 		.ascii	"ADC_conf\000"
 32888      636F6E66 
 32888      00
 32889              	.LASF286:
 32890 064a 636F6D6D 		.ascii	"commWrite\000"
 32890      57726974 
 32890      6500
 32891              	.LASF351:
 32892 0654 64656163 		.ascii	"deactivate_slaves\000"
 32892      74697661 
 32892      74655F73 
 32892      6C617665 
 32892      7300
 32893              	.LASF297:
 32894 0666 70616765 		.ascii	"pages\000"
 32894      7300
 32895              	.LASF301:
 32896 066c 6D656D49 		.ascii	"memInit\000"
 32896      6E697400 
 32897              	.LASF128:
 32898 0674 6B5F695F 		.ascii	"k_i_dl\000"
 32898      646C00
 32899              	.LASF38:
 32900 067b 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 32900      5345545F 
 32900      494E5055 
 32900      545300
 32901              	.LASF102:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 704


 32902 068a 62756666 		.ascii	"buffer\000"
 32902      657200
 32903              	.LASF130:
 32904 0691 6B5F705F 		.ascii	"k_p_c_dl\000"
 32904      635F646C 
 32904      00
 32905              	.LASF307:
 32906 069a 636D645F 		.ascii	"cmd_get_measurements\000"
 32906      6765745F 
 32906      6D656173 
 32906      7572656D 
 32906      656E7473 
 32907              	.LASF210:
 32908 06af 73706565 		.ascii	"speed\000"
 32908      6400
 32909              	.LASF214:
 32910 06b5 72785F63 		.ascii	"rx_cmd\000"
 32910      6D6400
 32911              	.LASF87:
 32912 06bc 54595045 		.ascii	"TYPE_DOUBLE\000"
 32912      5F444F55 
 32912      424C4500 
 32913              	.LASF340:
 32914 06c8 736C6176 		.ascii	"slave_motor_idx\000"
 32914      655F6D6F 
 32914      746F725F 
 32914      69647800 
 32915              	.LASF356:
 32916 06d8 675F6D65 		.ascii	"g_meas\000"
 32916      617300
 32917              	.LASF379:
 32918 06df 456E636F 		.ascii	"Encoder_Check\000"
 32918      6465725F 
 32918      43686563 
 32918      6B00
 32919              	.LASF312:
 32920 06ed 6C617374 		.ascii	"last_aux_int16\000"
 32920      5F617578 
 32920      5F696E74 
 32920      313600
 32921              	.LASF76:
 32922 06fc 41434B5F 		.ascii	"ACK_ERROR\000"
 32922      4552524F 
 32922      5200
 32923              	.LASF376:
 32924 0706 64617461 		.ascii	"data_encoder_raw\000"
 32924      5F656E63 
 32924      6F646572 
 32924      5F726177 
 32924      00
 32925              	.LASF59:
 32926 0717 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 32926      545F4D4F 
 32926      44455F45 
 32926      58544552 
 32926      4E414C00 
 32927              	.LASF243:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 705


 32928 072b 696E6465 		.ascii	"index\000"
 32928      7800
 32929              	.LASF188:
 32930 0731 6D617869 		.ascii	"maximum_pressure_kPa\000"
 32930      6D756D5F 
 32930      70726573 
 32930      73757265 
 32930      5F6B5061 
 32931              	.LASF178:
 32932 0746 72657374 		.ascii	"rest_position_flag\000"
 32932      5F706F73 
 32932      6974696F 
 32932      6E5F666C 
 32932      616700
 32933              	.LASF180:
 32934 0759 6A6F7973 		.ascii	"joystick_closure_speed\000"
 32934      7469636B 
 32934      5F636C6F 
 32934      73757265 
 32934      5F737065 
 32935              	.LASF131:
 32936 0770 6B5F695F 		.ascii	"k_i_c_dl\000"
 32936      635F646C 
 32936      00
 32937              	.LASF318:
 32938 0779 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 32938      52656164 
 32938      52657343 
 32938      75727246 
 32938      726F6D53 
 32939              	.LASF317:
 32940 078f 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 32940      6765745F 
 32940      63757272 
 32940      656E7473 
 32940      5F666F72 
 32941              	.LASF264:
 32942 07a9 6D61675F 		.ascii	"mag_param_str\000"
 32942      70617261 
 32942      6D5F7374 
 32942      7200
 32943              	.LASF373:
 32944 07b7 72657365 		.ascii	"reset_PSoC_flag\000"
 32944      745F5053 
 32944      6F435F66 
 32944      6C616700 
 32945              	.LASF347:
 32946 07c7 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 32946      5F616374 
 32946      5F777269 
 32946      73745F63 
 32946      6F6E7472 
 32947              	.LASF88:
 32948 07de 54595045 		.ascii	"TYPE_STRING\000"
 32948      5F535452 
 32948      494E4700 
 32949              	.LASF71:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 706


 32950 07ea 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 32950      5F414E44 
 32950      5F504F53 
 32950      5F434F4E 
 32950      54524F4C 
 32951              	.LASF28:
 32952 07ff 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 32952      53544F52 
 32952      455F5041 
 32952      52414D53 
 32952      00
 32953              	.LASF225:
 32954 0810 50415241 		.ascii	"PARAMS_STR\000"
 32954      4D535F53 
 32954      545200
 32955              	.LASF208:
 32956 081b 656E6162 		.ascii	"enabled\000"
 32956      6C656400 
 32957              	.LASF7:
 32958 0823 6C6F6E67 		.ascii	"long unsigned int\000"
 32958      20756E73 
 32958      69676E65 
 32958      6420696E 
 32958      7400
 32959              	.LASF111:
 32960 0835 746F7461 		.ascii	"total_time_on\000"
 32960      6C5F7469 
 32960      6D655F6F 
 32960      6E00
 32961              	.LASF32:
 32962 0843 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 32962      424F4F54 
 32962      4C4F4144 
 32962      455200
 32963              	.LASF182:
 32964 0852 6A6F7973 		.ascii	"joystick_gains\000"
 32964      7469636B 
 32964      5F676169 
 32964      6E7300
 32965              	.LASF95:
 32966 0861 686F6C64 		.ascii	"hold_curr\000"
 32966      5F637572 
 32966      7200
 32967              	.LASF65:
 32968 086b 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 32968      545F4D4F 
 32968      44455F4A 
 32968      4F595354 
 32968      49434B00 
 32969              	.LASF112:
 32970 087f 746F7461 		.ascii	"total_time_rest\000"
 32970      6C5F7469 
 32970      6D655F72 
 32970      65737400 
 32971              	.LASF217:
 32972 088f 7374725F 		.ascii	"str_sd_data\000"
 32972      73645F64 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 707


 32972      61746100 
 32973              	.LASF133:
 32974 089b 61637469 		.ascii	"activ\000"
 32974      7600
 32975              	.LASF227:
 32976 08a1 4D454E55 		.ascii	"MENU_STR\000"
 32976      5F535452 
 32976      00
 32977              	.LASF150:
 32978 08aa 6D5F6F66 		.ascii	"m_off\000"
 32978      6600
 32979              	.LASF77:
 32980 08b0 41434B5F 		.ascii	"ACK_OK\000"
 32980      4F4B00
 32981              	.LASF79:
 32982 08b7 54595045 		.ascii	"TYPE_FLAG\000"
 32982      5F464C41 
 32982      4700
 32983              	.LASF205:
 32984 08c1 71756174 		.ascii	"quat_value\000"
 32984      5F76616C 
 32984      756500
 32985              	.LASF260:
 32986 08cc 7061636B 		.ascii	"packet_length\000"
 32986      65745F6C 
 32986      656E6774 
 32986      6800
 32987              	.LASF175:
 32988 08da 72657374 		.ascii	"rest_pos\000"
 32988      5F706F73 
 32988      00
 32989              	.LASF90:
 32990 08e3 63757272 		.ascii	"curr\000"
 32990      00
 32991              	.LASF143:
 32992 08e8 696E7075 		.ascii	"input_mode\000"
 32992      745F6D6F 
 32992      646500
 32993              	.LASF69:
 32994 08f3 434F4E54 		.ascii	"CONTROL_PWM\000"
 32994      524F4C5F 
 32994      50574D00 
 32995              	.LASF43:
 32996 08ff 434D445F 		.ascii	"CMD_GET_EMG\000"
 32996      4745545F 
 32996      454D4700 
 32997              	.LASF302:
 32998 090b 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 32998      6E69745F 
 32998      536F6674 
 32998      48616E64 
 32998      50726F00 
 32999              	.LASF31:
 33000 091f 434D445F 		.ascii	"CMD_GET_INFO\000"
 33000      4745545F 
 33000      494E464F 
 33000      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 708


 33001              	.LASF256:
 33002 092c 6765745F 		.ascii	"get_IMU_param_list\000"
 33002      494D555F 
 33002      70617261 
 33002      6D5F6C69 
 33002      737400
 33003              	.LASF332:
 33004 093f 73696E67 		.ascii	"single_packet\000"
 33004      6C655F70 
 33004      61636B65 
 33004      7400
 33005              	.LASF259:
 33006 094d 66697273 		.ascii	"first_imu_parameter\000"
 33006      745F696D 
 33006      755F7061 
 33006      72616D65 
 33006      74657200 
 33007              	.LASF42:
 33008 0961 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 33008      4745545F 
 33008      43555252 
 33008      5F414E44 
 33008      5F4D4541 
 33009              	.LASF389:
 33010 0977 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 33010      43313120 
 33010      352E342E 
 33010      31203230 
 33010      31363036 
 33011 09aa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 33011      20726576 
 33011      6973696F 
 33011      6E203233 
 33011      37373135 
 33012 09dd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 33012      66756E63 
 33012      74696F6E 
 33012      2D736563 
 33012      74696F6E 
 33013              	.LASF92:
 33014 0a05 73745F72 		.ascii	"st_ref\000"
 33014      656600
 33015              	.LASF310:
 33016 0a0c 636D645F 		.ascii	"cmd_get_joystick\000"
 33016      6765745F 
 33016      6A6F7973 
 33016      7469636B 
 33016      00
 33017              	.LASF47:
 33018 0a1d 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 33018      5345545F 
 33018      43554646 
 33018      5F494E50 
 33018      55545300 
 33019              	.LASF174:
 33020 0a31 73745F53 		.ascii	"st_SH_spec\000"
 33020      485F7370 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 709


 33020      656300
 33021              	.LASF364:
 33022 0a3c 63616C69 		.ascii	"calib\000"
 33022      6200
 33023              	.LASF6:
 33024 0a42 5F5F7569 		.ascii	"__uint32_t\000"
 33024      6E743332 
 33024      5F7400
 33025              	.LASF8:
 33026 0a4d 6C6F6E67 		.ascii	"long long int\000"
 33026      206C6F6E 
 33026      6720696E 
 33026      7400
 33027              	.LASF67:
 33028 0a5b 53485F63 		.ascii	"SH_control_mode\000"
 33028      6F6E7472 
 33028      6F6C5F6D 
 33028      6F646500 
 33029              	.LASF81:
 33030 0a6b 54595045 		.ascii	"TYPE_UINT8\000"
 33030      5F55494E 
 33030      543800
 33031              	.LASF316:
 33032 0a76 636D645F 		.ascii	"cmd_get_currents\000"
 33032      6765745F 
 33032      63757272 
 33032      656E7473 
 33032      00
 33033              	.LASF74:
 33034 0a87 4D41584F 		.ascii	"MAXON_12V\000"
 33034      4E5F3132 
 33034      5600
 33035              	.LASF372:
 33036 0a91 6368616E 		.ascii	"change_ext_ref_flag\000"
 33036      67655F65 
 33036      78745F72 
 33036      65665F66 
 33036      6C616700 
 33037              	.LASF21:
 33038 0aa5 646F7562 		.ascii	"double\000"
 33038      6C6500
 33039              	.LASF56:
 33040 0aac 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 33040      4745545F 
 33040      53445F53 
 33040      494E474C 
 33040      455F4649 
 33041              	.LASF149:
 33042 0ac3 456E635F 		.ascii	"Enc_raw_read_conf\000"
 33042      7261775F 
 33042      72656164 
 33042      5F636F6E 
 33042      6600
 33043              	.LASF211:
 33044 0ad5 72657065 		.ascii	"repetitions\000"
 33044      74697469 
 33044      6F6E7300 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 710


 33045              	.LASF139:
 33046 0ae1 6D61785F 		.ascii	"max_step_neg\000"
 33046      73746570 
 33046      5F6E6567 
 33046      00
 33047              	.LASF185:
 33048 0aee 736C6176 		.ascii	"slave_ID\000"
 33048      655F4944 
 33048      00
 33049              	.LASF370:
 33050 0af7 72657365 		.ascii	"reset_last_value_flag\000"
 33050      745F6C61 
 33050      73745F76 
 33050      616C7565 
 33050      5F666C61 
 33051              	.LASF226:
 33052 0b0d 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 33052      4F4D5F50 
 33052      4152414D 
 33052      5F474554 
 33052      00
 33053              	.LASF20:
 33054 0b1e 666C6F61 		.ascii	"float\000"
 33054      7400
 33055              	.LASF165:
 33056 0b24 494D555F 		.ascii	"IMU_conf\000"
 33056      636F6E66 
 33056      00
 33057              	.LASF244:
 33058 0b2d 50415241 		.ascii	"PARAM_IDX\000"
 33058      4D5F4944 
 33058      5800
 33059              	.LASF96:
 33060 0b37 73745F61 		.ascii	"st_adc_meas\000"
 33060      64635F6D 
 33060      65617300 
 33061              	.LASF240:
 33062 0b43 6D5F6164 		.ascii	"m_addr\000"
 33062      647200
 33063              	.LASF363:
 33064 0b4a 635F6D65 		.ascii	"c_mem\000"
 33064      6D00
 33065              	.LASF288:
 33066 0b50 64617461 		.ascii	"data_array\000"
 33066      5F617272 
 33066      617900
 33067              	.LASF10:
 33068 0b5b 756E7369 		.ascii	"unsigned int\000"
 33068      676E6564 
 33068      20696E74 
 33068      00
 33069              	.LASF344:
 33070 0b68 6572725F 		.ascii	"err_emg_2\000"
 33070      656D675F 
 33070      3200
 33071              	.LASF303:
 33072 0b72 6D656D49 		.ascii	"memInit_Master\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 711


 33072      6E69745F 
 33072      4D617374 
 33072      657200
 33073              	.LASF229:
 33074 0b81 7061636B 		.ascii	"packet_lenght\000"
 33074      65745F6C 
 33074      656E6768 
 33074      7400
 33075              	.LASF291:
 33076 0b8f 73656E64 		.ascii	"sendAcknowledgment\000"
 33076      41636B6E 
 33076      6F776C65 
 33076      64676D65 
 33076      6E7400
 33077              	.LASF281:
 33078 0ba2 70726570 		.ascii	"prepare_SD_legend\000"
 33078      6172655F 
 33078      53445F6C 
 33078      6567656E 
 33078      6400
 33079              	.LASF386:
 33080 0bb4 4D616743 		.ascii	"MagCal\000"
 33080      616C00
 33081              	.LASF57:
 33082 0bbb 53485F63 		.ascii	"SH_command\000"
 33082      6F6D6D61 
 33082      6E6400
 33083              	.LASF83:
 33084 0bc6 54595045 		.ascii	"TYPE_UINT16\000"
 33084      5F55494E 
 33084      54313600 
 33085              	.LASF195:
 33086 0bd2 666C6167 		.ascii	"flag\000"
 33086      00
 33087              	.LASF311:
 33088 0bd7 636D645F 		.ascii	"cmd_set_inputs\000"
 33088      7365745F 
 33088      696E7075 
 33088      747300
 33089              	.LASF144:
 33090 0be6 636F6E74 		.ascii	"control_mode\000"
 33090      726F6C5F 
 33090      6D6F6465 
 33090      00
 33091              	.LASF326:
 33092 0bf3 6F66665F 		.ascii	"off_1\000"
 33092      3100
 33093              	.LASF60:
 33094 0bf9 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 33094      545F4D4F 
 33094      44455F45 
 33094      4E434F44 
 33094      45523300 
 33095              	.LASF287:
 33096 0c0d 636F6D6D 		.ascii	"commWriteID\000"
 33096      57726974 
 33096      65494400 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 712


 33097              	.LASF52:
 33098 0c19 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 33098      4745545F 
 33098      454E434F 
 33098      4445525F 
 33098      434F4E46 
 33099              	.LASF162:
 33100 0c2e 73745F69 		.ascii	"st_imu\000"
 33100      6D7500
 33101              	.LASF314:
 33102 0c35 636D645F 		.ascii	"cmd_get_activate\000"
 33102      6765745F 
 33102      61637469 
 33102      76617465 
 33102      00
 33103              	.LASF341:
 33104 0c46 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 33104      61637469 
 33104      76617469 
 33104      6F6E5F76 
 33104      656C6F63 
 33105              	.LASF231:
 33106 0c62 73747269 		.ascii	"string_lenght\000"
 33106      6E675F6C 
 33106      656E6768 
 33106      7400
 33107              	.LASF86:
 33108 0c70 54595045 		.ascii	"TYPE_FLOAT\000"
 33108      5F464C4F 
 33108      415400
 33109              	.LASF249:
 33110 0c7b 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 33110      4F4D5F50 
 33110      4152414D 
 33110      5F534554 
 33110      5F4C4953 
 33111              	.LASF223:
 33112 0c91 4E554D5F 		.ascii	"NUM_STRUCT\000"
 33112      53545255 
 33112      435400
 33113              	.LASF254:
 33114 0c9c 6175785F 		.ascii	"aux_uchar\000"
 33114      75636861 
 33114      7200
 33115              	.LASF97:
 33116 0ca6 6164645F 		.ascii	"add_emg\000"
 33116      656D6700 
 33117              	.LASF82:
 33118 0cae 54595045 		.ascii	"TYPE_INT16\000"
 33118      5F494E54 
 33118      313600
 33119              	.LASF235:
 33120 0cb9 6175785F 		.ascii	"aux_uint16\000"
 33120      75696E74 
 33120      313600
 33121              	.LASF157:
 33122 0cc4 656D675F 		.ascii	"emg_threshold\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 713


 33122      74687265 
 33122      73686F6C 
 33122      6400
 33123              	.LASF46:
 33124 0cd2 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 33124      4745545F 
 33124      43555252 
 33124      5F444946 
 33124      4600
 33125              	.LASF108:
 33126 0ce4 63757272 		.ascii	"current_hist\000"
 33126      656E745F 
 33126      68697374 
 33126      00
 33127              	.LASF70:
 33128 0cf1 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 33128      524F4C5F 
 33128      43555252 
 33128      454E5400 
 33129              	.LASF24:
 33130 0d01 6C6F6E67 		.ascii	"long double\000"
 33130      20646F75 
 33130      626C6500 
 33131              	.LASF85:
 33132 0d0d 54595045 		.ascii	"TYPE_UINT32\000"
 33132      5F55494E 
 33132      54333200 
 33133              	.LASF186:
 33134 0d19 73745F46 		.ascii	"st_FB_spec\000"
 33134      425F7370 
 33134      656300
 33135              	.LASF220:
 33136 0d24 5641525F 		.ascii	"VAR_P\000"
 33136      5000
 33137              	.LASF248:
 33138 0d2a 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 33138      4F4D5F50 
 33138      4152414D 
 33138      5F474554 
 33138      5F4C4953 
 33139              	.LASF154:
 33140 0d40 6D6F746F 		.ascii	"motor_handle_ratio\000"
 33140      725F6861 
 33140      6E646C65 
 33140      5F726174 
 33140      696F00
 33141              	.LASF290:
 33142 0d53 63686563 		.ascii	"checksum\000"
 33142      6B73756D 
 33142      00
 33143              	.LASF355:
 33144 0d5c 675F7265 		.ascii	"g_refOld\000"
 33144      664F6C64 
 33144      00
 33145              	.LASF35:
 33146 0d65 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 33146      48414E44 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 714


 33146      5F43414C 
 33146      49425241 
 33146      544500
 33147              	.LASF203:
 33148 0d78 6779726F 		.ascii	"gyro_value\000"
 33148      5F76616C 
 33148      756500
 33149              	.LASF167:
 33150 0d83 63757272 		.ascii	"curr_time\000"
 33150      5F74696D 
 33150      6500
 33151              	.LASF152:
 33152 0d8d 646F7562 		.ascii	"double_encoder_on_off\000"
 33152      6C655F65 
 33152      6E636F64 
 33152      65725F6F 
 33152      6E5F6F66 
 33153              	.LASF348:
 33154 0da3 64726976 		.ascii	"drive_slave\000"
 33154      655F736C 
 33154      61766500 
 33155              	.LASF164:
 33156 0daf 5350495F 		.ascii	"SPI_read_delay\000"
 33156      72656164 
 33156      5F64656C 
 33156      617900
 33157              	.LASF75:
 33158 0dbe 61636B6E 		.ascii	"acknowledgment_values\000"
 33158      6F776C65 
 33158      64676D65 
 33158      6E745F76 
 33158      616C7565 
 33159              	.LASF238:
 33160 0dd4 4D4F544F 		.ascii	"MOTOR_IDX\000"
 33160      525F4944 
 33160      5800
 33161              	.LASF300:
 33162 0dde 6D656D52 		.ascii	"memRestore\000"
 33162      6573746F 
 33162      726500
 33163              	.LASF262:
 33164 0de9 6E5F696D 		.ascii	"n_imu_str\000"
 33164      755F7374 
 33164      7200
 33165              	.LASF276:
 33166 0df3 696E666F 		.ascii	"info_string\000"
 33166      5F737472 
 33166      696E6700 
 33167              	.LASF282:
 33168 0dff 70726570 		.ascii	"prepare_SD_info\000"
 33168      6172655F 
 33168      53445F69 
 33168      6E666F00 
 33169              	.LASF342:
 33170 0e0f 66736D5F 		.ascii	"fsm_state\000"
 33170      73746174 
 33170      6500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 715


 33171              	.LASF9:
 33172 0e19 6C6F6E67 		.ascii	"long long unsigned int\000"
 33172      206C6F6E 
 33172      6720756E 
 33172      7369676E 
 33172      65642069 
 33173              	.LASF84:
 33174 0e30 54595045 		.ascii	"TYPE_INT32\000"
 33174      5F494E54 
 33174      333200
 33175              	.LASF237:
 33176 0e3b 6175785F 		.ascii	"aux_uint32\000"
 33176      75696E74 
 33176      333200
 33177              	.LASF103:
 33178 0e46 6C656E67 		.ascii	"length\000"
 33178      746800
 33179              	.LASF250:
 33180 0e4d 55534552 		.ascii	"USER_ID_PARAM\000"
 33180      5F49445F 
 33180      50415241 
 33180      4D00
 33181              	.LASF200:
 33182 0e5b 73745F69 		.ascii	"st_imu_data\000"
 33182      6D755F64 
 33182      61746100 
 33183              	.LASF204:
 33184 0e67 6D61675F 		.ascii	"mag_value\000"
 33184      76616C75 
 33184      6500
 33185              	.LASF91:
 33186 0e71 6F6E6F66 		.ascii	"onoff\000"
 33186      6600
 33187              	.LASF45:
 33188 0e77 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 33188      4745545F 
 33188      41434345 
 33188      4C00
 33189              	.LASF308:
 33190 0e85 636D645F 		.ascii	"cmd_get_velocities\000"
 33190      6765745F 
 33190      76656C6F 
 33190      63697469 
 33190      657300
 33191              	.LASF299:
 33192 0e98 6D656D52 		.ascii	"memRecall\000"
 33192      6563616C 
 33192      6C00
 33193              	.LASF366:
 33194 0ea2 74696D65 		.ascii	"timer_value0\000"
 33194      725F7661 
 33194      6C756530 
 33194      00
 33195              	.LASF48:
 33196 0eaf 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 33196      5345545F 
 33196      42415544 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 716


 33196      52415445 
 33196      00
 33197              	.LASF124:
 33198 0ec0 6B5F705F 		.ascii	"k_p_c\000"
 33198      6300
 33199              	.LASF266:
 33200 0ec6 696D755F 		.ascii	"imu_table_str\000"
 33200      7461626C 
 33200      655F7374 
 33200      7200
 33201              	.LASF367:
 33202 0ed4 6465765F 		.ascii	"dev_tension\000"
 33202      74656E73 
 33202      696F6E00 
 33203              	.LASF135:
 33204 0ee0 6D6F746F 		.ascii	"motor_driver_type\000"
 33204      725F6472 
 33204      69766572 
 33204      5F747970 
 33204      6500
 33205              	.LASF327:
 33206 0ef2 6D756C74 		.ascii	"mult_1\000"
 33206      5F3100
 33207              	.LASF278:
 33208 0ef9 70726570 		.ascii	"prepare_counter_info\000"
 33208      6172655F 
 33208      636F756E 
 33208      7465725F 
 33208      696E666F 
 33209              	.LASF23:
 33210 0f0e 72656738 		.ascii	"reg8\000"
 33210      00
 33211              	.LASF189:
 33212 0f13 70726F70 		.ascii	"prop_err_fb_gain\000"
 33212      5F657272 
 33212      5F66625F 
 33212      6761696E 
 33212      00
 33213              	.LASF284:
 33214 0f24 636F6D6D 		.ascii	"commWrite_old_id\000"
 33214      57726974 
 33214      655F6F6C 
 33214      645F6964 
 33214      00
 33215              	.LASF242:
 33216 0f35 6D616E61 		.ascii	"manage_param_list\000"
 33216      67655F70 
 33216      6172616D 
 33216      5F6C6973 
 33216      7400
 33217              	.LASF30:
 33218 0f47 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 33218      52455354 
 33218      4F52455F 
 33218      50415241 
 33218      4D5300
 33219              	.LASF280:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 717


 33220 0f5a 70726570 		.ascii	"prepare_SD_param_info\000"
 33220      6172655F 
 33220      53445F70 
 33220      6172616D 
 33220      5F696E66 
 33221              	.LASF319:
 33222 0f70 63757272 		.ascii	"curr_diff\000"
 33222      5F646966 
 33222      6600
 33223              	.LASF184:
 33224 0f7a 736C6176 		.ascii	"slave_comm_active\000"
 33224      655F636F 
 33224      6D6D5F61 
 33224      63746976 
 33224      6500
 33225              	.LASF285:
 33226 0f8c 6F6C645F 		.ascii	"old_id\000"
 33226      696400
 33227              	.LASF392:
 33228 0f93 5F5F5245 		.ascii	"__REV16\000"
 33228      56313600 
 33229              	.LASF377:
 33230 0f9b 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 33230      636F6465 
 33230      725F4C69 
 33230      6E655F43 
 33230      6F6E6E65 
 33231              	.LASF121:
 33232 0fb4 6465765F 		.ascii	"dev_type\000"
 33232      74797065 
 33232      00
 33233              	.LASF171:
 33234 0fbd 73745F75 		.ascii	"st_user\000"
 33234      73657200 
 33235              	.LASF315:
 33236 0fc5 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 33236      6765745F 
 33236      63757272 
 33236      5F616E64 
 33236      5F6D6561 
 33237              	.LASF155:
 33238 0fdb 67656172 		.ascii	"gears_params\000"
 33238      735F7061 
 33238      72616D73 
 33238      00
 33239              	.LASF166:
 33240 0fe8 73745F65 		.ascii	"st_expansion\000"
 33240      7870616E 
 33240      73696F6E 
 33240      00
 33241              	.LASF160:
 33242 0ff5 656D675F 		.ascii	"emg_calibration_flag\000"
 33242      63616C69 
 33242      62726174 
 33242      696F6E5F 
 33242      666C6167 
 33243              	.LASF93:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 718


 33244 100a 73745F6D 		.ascii	"st_meas\000"
 33244      65617300 
 33245              	.LASF55:
 33246 1012 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 33246      4745545F 
 33246      4144435F 
 33246      52415700 
 33247              	.LASF181:
 33248 1022 6A6F7973 		.ascii	"joystick_threshold\000"
 33248      7469636B 
 33248      5F746872 
 33248      6573686F 
 33248      6C6400
 33249              	.LASF73:
 33250 1035 4D41584F 		.ascii	"MAXON_24V\000"
 33250      4E5F3234 
 33250      5600
 33251              	.LASF66:
 33252 103f 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 33252      545F4D4F 
 33252      44455F45 
 33252      4D475F50 
 33252      524F504F 
 33253              	.LASF51:
 33254 105e 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 33254      4745545F 
 33254      494D555F 
 33254      50415241 
 33254      4D00
 33255              	.LASF360:
 33256 1070 675F6662 		.ascii	"g_fb_meas\000"
 33256      5F6D6561 
 33256      7300
 33257              	.LASF53:
 33258 107a 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 33258      4745545F 
 33258      454E434F 
 33258      4445525F 
 33258      52415700 
 33259              	.LASF325:
 33260 108e 636D645F 		.ascii	"cmd_store_params\000"
 33260      73746F72 
 33260      655F7061 
 33260      72616D73 
 33260      00
 33261              	.LASF362:
 33262 109f 675F6D65 		.ascii	"g_mem\000"
 33262      6D00
 33263              	.LASF40:
 33264 10a5 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 33264      4745545F 
 33264      4D454153 
 33264      5552454D 
 33264      454E5453 
 33265              	.LASF359:
 33266 10ba 675F6164 		.ascii	"g_adc_measOld\000"
 33266      635F6D65 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 719


 33266      61734F6C 
 33266      6400
 33267              	.LASF334:
 33268 10c8 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 33268      6765745F 
 33268      656E636F 
 33268      6465725F 
 33268      72617700 
 33269              	.LASF13:
 33270 10dc 75696E74 		.ascii	"uint8\000"
 33270      3800
 33271              	.LASF212:
 33272 10e2 636F6D6D 		.ascii	"commProcess\000"
 33272      50726F63 
 33272      65737300 
 33273              	.LASF179:
 33274 10ee 73745F4A 		.ascii	"st_JOY_spec\000"
 33274      4F595F73 
 33274      70656300 
 33275              	.LASF2:
 33276 10fa 73686F72 		.ascii	"short int\000"
 33276      7420696E 
 33276      7400
 33277              	.LASF304:
 33278 1104 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 33278      6E69745F 
 33278      41697243 
 33278      68616D62 
 33278      65727346 
 33279              	.LASF270:
 33280 111a 6964735F 		.ascii	"ids_str_len\000"
 33280      7374725F 
 33280      6C656E00 
 33281              	.LASF129:
 33282 1126 6B5F645F 		.ascii	"k_d_dl\000"
 33282      646C00
 33283              	.LASF230:
 33284 112d 6964785F 		.ascii	"idx_menu\000"
 33284      6D656E75 
 33284      00
 33285              	.LASF98:
 33286 1136 6A6F7973 		.ascii	"joystick\000"
 33286      7469636B 
 33286      00
 33287              	.LASF197:
 33288 113f 6D6F746F 		.ascii	"motor\000"
 33288      7200
 33289              	.LASF381:
 33290 1145 4E5F494D 		.ascii	"N_IMU_Connected\000"
 33290      555F436F 
 33290      6E6E6563 
 33290      74656400 
 33291              	.LASF39:
 33292 1155 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 33292      4745545F 
 33292      494E5055 
 33292      545300
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 720


 33293              	.LASF114:
 33294 1164 68775F6D 		.ascii	"hw_maint_date\000"
 33294      61696E74 
 33294      5F646174 
 33294      6500
 33295              	.LASF263:
 33296 1172 6964735F 		.ascii	"ids_str\000"
 33296      73747200 
 33297              	.LASF54:
 33298 117a 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 33298      4745545F 
 33298      4144435F 
 33298      434F4E46 
 33298      00
 33299              	.LASF27:
 33300 118b 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 33300      5345545F 
 33300      5A45524F 
 33300      5300
 33301              	.LASF271:
 33302 1199 6D61675F 		.ascii	"mag_param_str_len\000"
 33302      70617261 
 33302      6D5F7374 
 33302      725F6C65 
 33302      6E00
 33303              	.LASF257:
 33304 11ab 6E756D5F 		.ascii	"num_imus_id_params\000"
 33304      696D7573 
 33304      5F69645F 
 33304      70617261 
 33304      6D7300
 33305              	.LASF234:
 33306 11be 6175785F 		.ascii	"aux_int16\000"
 33306      696E7431 
 33306      3600
 33307              	.LASF388:
 33308 11c8 45455052 		.ascii	"EEPROM_ADDR\000"
 33308      4F4D5F41 
 33308      44445200 
 33309              	.LASF115:
 33310 11d4 73746174 		.ascii	"stats_period_begin_date\000"
 33310      735F7065 
 33310      72696F64 
 33310      5F626567 
 33310      696E5F64 
 33311              	.LASF383:
 33312 11ec 696D7573 		.ascii	"imus_data_size\000"
 33312      5F646174 
 33312      615F7369 
 33312      7A6500
 33313              	.LASF352:
 33314 11fb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 33314      52784275 
 33314      66666572 
 33314      00
 33315              	.LASF44:
 33316 1208 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 721


 33316      4745545F 
 33316      56454C4F 
 33316      43495449 
 33316      455300
 33317              	.LASF369:
 33318 121b 706F775F 		.ascii	"pow_tension\000"
 33318      74656E73 
 33318      696F6E00 
 33319              	.LASF34:
 33320 1227 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 33320      4745545F 
 33320      50415241 
 33320      4D5F4C49 
 33320      535400
 33321              	.LASF78:
 33322 123a 64617461 		.ascii	"data_types\000"
 33322      5F747970 
 33322      657300
 33323              	.LASF17:
 33324 1245 696E7431 		.ascii	"int16\000"
 33324      3600
 33325              	.LASF168:
 33326 124b 72656164 		.ascii	"read_exp_port_flag\000"
 33326      5F657870 
 33326      5F706F72 
 33326      745F666C 
 33326      616700
 33327              	.LASF161:
 33328 125e 73776974 		.ascii	"switch_emg\000"
 33328      63685F65 
 33328      6D6700
 33329              	.LASF134:
 33330 1269 61637469 		.ascii	"activate_pwm_rescaling\000"
 33330      76617465 
 33330      5F70776D 
 33330      5F726573 
 33330      63616C69 
 33331              	.LASF127:
 33332 1280 6B5F705F 		.ascii	"k_p_dl\000"
 33332      646C00
 33333              	.LASF94:
 33334 1287 65737469 		.ascii	"estim_curr\000"
 33334      6D5F6375 
 33334      727200
 33335              	.LASF368:
 33336 1292 6465765F 		.ascii	"dev_pwm_limit\000"
 33336      70776D5F 
 33336      6C696D69 
 33336      7400
 33337              	.LASF169:
 33338 12a0 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 33338      5F414443 
 33338      5F73656E 
 33338      736F7273 
 33338      5F706F72 
 33339              	.LASF378:
 33340 12bb 456E636F 		.ascii	"Encoder_Value\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 722


 33340      6465725F 
 33340      56616C75 
 33340      6500
 33341              	.LASF333:
 33342 12c9 636D645F 		.ascii	"cmd_get_encoder_map\000"
 33342      6765745F 
 33342      656E636F 
 33342      6465725F 
 33342      6D617000 
 33343              	.LASF120:
 33344 12dd 75736572 		.ascii	"user_id\000"
 33344      5F696400 
 33345              	.LASF12:
 33346 12e5 75696E74 		.ascii	"uint32_t\000"
 33346      33325F74 
 33346      00
 33347              	.LASF233:
 33348 12ee 6175785F 		.ascii	"aux_float\000"
 33348      666C6F61 
 33348      7400
 33349              	.LASF382:
 33350 12f8 494D555F 		.ascii	"IMU_connected\000"
 33350      636F6E6E 
 33350      65637465 
 33350      6400
 33351              	.LASF224:
 33352 1306 4E554D5F 		.ascii	"NUM_MENU\000"
 33352      4D454E55 
 33352      00
 33353              	.LASF236:
 33354 130f 6175785F 		.ascii	"aux_int32\000"
 33354      696E7433 
 33354      3200
 33355              	.LASF119:
 33356 1319 62617564 		.ascii	"baud_rate\000"
 33356      5F726174 
 33356      6500
 33357              	.LASF321:
 33358 1323 745F656E 		.ascii	"t_end\000"
 33358      6400
 33359              	.LASF192:
 33360 1329 66617374 		.ascii	"fast_act_threshold\000"
 33360      5F616374 
 33360      5F746872 
 33360      6573686F 
 33360      6C6400
 33361              	.LASF219:
 33362 133c 696E666F 		.ascii	"info_type\000"
 33362      5F747970 
 33362      6500
 33363              	.LASF50:
 33364 1346 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 33364      4745545F 
 33364      494D555F 
 33364      52454144 
 33364      494E4753 
 33365              	.LASF293:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 723


 33366 135b 4C435243 		.ascii	"LCRChecksum\000"
 33366      6865636B 
 33366      73756D00 
 33367              	.LASF330:
 33368 1367 6B5F696D 		.ascii	"k_imu\000"
 33368      7500
 33369              	.LASF3:
 33370 136d 73686F72 		.ascii	"short unsigned int\000"
 33370      7420756E 
 33370      7369676E 
 33370      65642069 
 33370      6E7400
 33371              	.LASF148:
 33372 1380 73745F65 		.ascii	"st_encoder\000"
 33372      6E636F64 
 33372      657200
 33373              	.LASF358:
 33374 138b 675F6164 		.ascii	"g_adc_meas\000"
 33374      635F6D65 
 33374      617300
 33375              	.LASF187:
 33376 1396 6D61785F 		.ascii	"max_residual_current\000"
 33376      72657369 
 33376      6475616C 
 33376      5F637572 
 33376      72656E74 
 33377              	.LASF277:
 33378 13ab 454E435F 		.ascii	"ENC_L\000"
 33378      4C00
 33379              	.LASF194:
 33380 13b1 73745F65 		.ascii	"st_eeprom\000"
 33380      6570726F 
 33380      6D00
 33381              	.LASF221:
 33382 13bb 54595045 		.ascii	"TYPES\000"
 33382      5300
 33383              	.LASF353:
 33384 13c1 675F7265 		.ascii	"g_ref\000"
 33384      6600
 33385              	.LASF18:
 33386 13c7 696E7433 		.ascii	"int32\000"
 33386      3200
 33387              	.LASF375:
 33388 13cd 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 33388      4F465F41 
 33388      4E414C4F 
 33388      475F494E 
 33388      50555453 
 33389              	.LASF216:
 33390 13e2 696E666F 		.ascii	"infoGet\000"
 33390      47657400 
 33391              	.LASF123:
 33392 13ea 73745F6D 		.ascii	"st_motor\000"
 33392      6F746F72 
 33392      00
 33393              	.LASF387:
 33394 13f3 6D617374 		.ascii	"master_mode\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 724


 33394      65725F6D 
 33394      6F646500 
 33395              	.LASF89:
 33396 13ff 46535F46 		.ascii	"FS_FILE\000"
 33396      494C4500 
 33397              	.LASF136:
 33398 1407 706F735F 		.ascii	"pos_lim_flag\000"
 33398      6C696D5F 
 33398      666C6167 
 33398      00
 33399              	.LASF357:
 33400 1414 675F6D65 		.ascii	"g_measOld\000"
 33400      61734F6C 
 33400      6400
 33401              	.LASF68:
 33402 141e 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 33402      524F4C5F 
 33402      414E474C 
 33402      4500
 33403              	.LASF313:
 33404 142c 636D645F 		.ascii	"cmd_activate\000"
 33404      61637469 
 33404      76617465 
 33404      00
 33405              	.LASF5:
 33406 1439 5F5F696E 		.ascii	"__int32_t\000"
 33406      7433325F 
 33406      7400
 33407              	.LASF246:
 33408 1443 7370695F 		.ascii	"spi_delay_menu\000"
 33408      64656C61 
 33408      795F6D65 
 33408      6E7500
 33409              	.LASF110:
 33410 1452 77697265 		.ascii	"wire_disp\000"
 33410      5F646973 
 33410      7000
 33411              	.LASF158:
 33412 145c 656D675F 		.ascii	"emg_max_value\000"
 33412      6D61785F 
 33412      76616C75 
 33412      6500
 33413              	.LASF251:
 33414 146a 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 33414      4F4D5F50 
 33414      4152414D 
 33414      5F534554 
 33414      00
 33415              	.LASF390:
 33416 147b 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 33416      72635C63 
 33416      6F6D6D61 
 33416      6E645F70 
 33416      726F6365 
 33417              	.LASF142:
 33418 1497 63757272 		.ascii	"current_limit\000"
 33418      656E745F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccPC8dFz.s 			page 725


 33418      6C696D69 
 33418      7400
 33419              	.LASF58:
 33420 14a5 53485F69 		.ascii	"SH_input_mode\000"
 33420      6E707574 
 33420      5F6D6F64 
 33420      6500
 33421              	.LASF80:
 33422 14b3 54595045 		.ascii	"TYPE_INT8\000"
 33422      5F494E54 
 33422      3800
 33423              	.LASF191:
 33424 14bd 61637469 		.ascii	"activation_mode\000"
 33424      76617469 
 33424      6F6E5F6D 
 33424      6F646500 
 33425              	.LASF283:
 33426 14cd 494D555F 		.ascii	"IMU_reading_info\000"
 33426      72656164 
 33426      696E675F 
 33426      696E666F 
 33426      00
 33427              	.LASF14:
 33428 14de 75696E74 		.ascii	"uint16\000"
 33428      313600
 33429              	.LASF176:
 33430 14e5 72657374 		.ascii	"rest_delay\000"
 33430      5F64656C 
 33430      617900
 33431              	.LASF232:
 33432 14f0 6175785F 		.ascii	"aux_str\000"
 33432      73747200 
 33433              	.LASF26:
 33434 14f8 434D445F 		.ascii	"CMD_PING\000"
 33434      50494E47 
 33434      00
 33435              	.LASF132:
 33436 1501 6B5F645F 		.ascii	"k_d_c_dl\000"
 33436      635F646C 
 33436      00
 33437              	.LASF209:
 33438 150a 64697265 		.ascii	"direction\000"
 33438      6374696F 
 33438      6E00
 33439              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
