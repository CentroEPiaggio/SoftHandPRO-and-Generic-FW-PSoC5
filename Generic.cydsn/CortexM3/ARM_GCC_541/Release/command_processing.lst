ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2019, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         October 01, 2017
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2019 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E24B     		ldr	r3, .L48
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E04B     		ldr	r3, .L48
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DD48     		ldr	r0, .L48
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DA4B     		ldr	r3, .L48
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D84A     		ldr	r2, .L48
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D64B     		ldr	r3, .L48
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 42E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F23E82 		bhi	.L47
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 67030000 		.word	.L5+1
  85 0050 49030000 		.word	.L7+1
  86 0054 C3040000 		.word	.L47+1
  87 0058 6D030000 		.word	.L8+1
  88 005c 73030000 		.word	.L9+1
  89 0060 99030000 		.word	.L10+1
  90 0064 31030000 		.word	.L11+1
  91 0068 C3040000 		.word	.L47+1
  92 006c C3040000 		.word	.L47+1
  93 0070 CD030000 		.word	.L12+1
  94 0074 B3030000 		.word	.L13+1
  95 0078 C3040000 		.word	.L47+1
  96 007c 4F030000 		.word	.L14+1
  97 0080 EF030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 4


  98 0084 C3040000 		.word	.L47+1
  99 0088 C3040000 		.word	.L47+1
 100 008c C3040000 		.word	.L47+1
 101 0090 C3040000 		.word	.L47+1
 102 0094 C3040000 		.word	.L47+1
 103 0098 C3040000 		.word	.L47+1
 104 009c C3040000 		.word	.L47+1
 105 00a0 C3040000 		.word	.L47+1
 106 00a4 C3040000 		.word	.L47+1
 107 00a8 C3040000 		.word	.L47+1
 108 00ac C3040000 		.word	.L47+1
 109 00b0 C3040000 		.word	.L47+1
 110 00b4 C3040000 		.word	.L47+1
 111 00b8 C3040000 		.word	.L47+1
 112 00bc C3040000 		.word	.L47+1
 113 00c0 C3040000 		.word	.L47+1
 114 00c4 C3040000 		.word	.L47+1
 115 00c8 C3040000 		.word	.L47+1
 116 00cc C3040000 		.word	.L47+1
 117 00d0 C3040000 		.word	.L47+1
 118 00d4 C3040000 		.word	.L47+1
 119 00d8 C3040000 		.word	.L47+1
 120 00dc C3040000 		.word	.L47+1
 121 00e0 C3040000 		.word	.L47+1
 122 00e4 C3040000 		.word	.L47+1
 123 00e8 C3040000 		.word	.L47+1
 124 00ec C3040000 		.word	.L47+1
 125 00f0 C3040000 		.word	.L47+1
 126 00f4 C3040000 		.word	.L47+1
 127 00f8 C3040000 		.word	.L47+1
 128 00fc C3040000 		.word	.L47+1
 129 0100 C3040000 		.word	.L47+1
 130 0104 C3040000 		.word	.L47+1
 131 0108 C3040000 		.word	.L47+1
 132 010c C3040000 		.word	.L47+1
 133 0110 C3040000 		.word	.L47+1
 134 0114 C3040000 		.word	.L47+1
 135 0118 C3040000 		.word	.L47+1
 136 011c C3040000 		.word	.L47+1
 137 0120 C3040000 		.word	.L47+1
 138 0124 C3040000 		.word	.L47+1
 139 0128 C3040000 		.word	.L47+1
 140 012c C3040000 		.word	.L47+1
 141 0130 C3040000 		.word	.L47+1
 142 0134 C3040000 		.word	.L47+1
 143 0138 C3040000 		.word	.L47+1
 144 013c C3040000 		.word	.L47+1
 145 0140 C3040000 		.word	.L47+1
 146 0144 C3040000 		.word	.L47+1
 147 0148 C3040000 		.word	.L47+1
 148 014c C3040000 		.word	.L47+1
 149 0150 C3040000 		.word	.L47+1
 150 0154 C3040000 		.word	.L47+1
 151 0158 C3040000 		.word	.L47+1
 152 015c C3040000 		.word	.L47+1
 153 0160 C3040000 		.word	.L47+1
 154 0164 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 5


 155 0168 C3040000 		.word	.L47+1
 156 016c C3040000 		.word	.L47+1
 157 0170 C3040000 		.word	.L47+1
 158 0174 C3040000 		.word	.L47+1
 159 0178 C3040000 		.word	.L47+1
 160 017c C3040000 		.word	.L47+1
 161 0180 C3040000 		.word	.L47+1
 162 0184 C3040000 		.word	.L47+1
 163 0188 C3040000 		.word	.L47+1
 164 018c C3040000 		.word	.L47+1
 165 0190 C3040000 		.word	.L47+1
 166 0194 C3040000 		.word	.L47+1
 167 0198 C3040000 		.word	.L47+1
 168 019c C3040000 		.word	.L47+1
 169 01a0 C3040000 		.word	.L47+1
 170 01a4 C3040000 		.word	.L47+1
 171 01a8 C3040000 		.word	.L47+1
 172 01ac C3040000 		.word	.L47+1
 173 01b0 C3040000 		.word	.L47+1
 174 01b4 C3040000 		.word	.L47+1
 175 01b8 C3040000 		.word	.L47+1
 176 01bc C3040000 		.word	.L47+1
 177 01c0 C3040000 		.word	.L47+1
 178 01c4 C3040000 		.word	.L47+1
 179 01c8 C3040000 		.word	.L47+1
 180 01cc C3040000 		.word	.L47+1
 181 01d0 C3040000 		.word	.L47+1
 182 01d4 C3040000 		.word	.L47+1
 183 01d8 C3040000 		.word	.L47+1
 184 01dc C3040000 		.word	.L47+1
 185 01e0 C3040000 		.word	.L47+1
 186 01e4 C3040000 		.word	.L47+1
 187 01e8 C3040000 		.word	.L47+1
 188 01ec C3040000 		.word	.L47+1
 189 01f0 C3040000 		.word	.L47+1
 190 01f4 C3040000 		.word	.L47+1
 191 01f8 C3040000 		.word	.L47+1
 192 01fc C3040000 		.word	.L47+1
 193 0200 C3040000 		.word	.L47+1
 194 0204 C3040000 		.word	.L47+1
 195 0208 C3040000 		.word	.L47+1
 196 020c C3040000 		.word	.L47+1
 197 0210 C3040000 		.word	.L47+1
 198 0214 C3040000 		.word	.L47+1
 199 0218 C3040000 		.word	.L47+1
 200 021c C3040000 		.word	.L47+1
 201 0220 C3040000 		.word	.L47+1
 202 0224 C3040000 		.word	.L47+1
 203 0228 C3040000 		.word	.L47+1
 204 022c C3040000 		.word	.L47+1
 205 0230 C3040000 		.word	.L47+1
 206 0234 C3040000 		.word	.L47+1
 207 0238 C3040000 		.word	.L47+1
 208 023c C3040000 		.word	.L47+1
 209 0240 C3040000 		.word	.L47+1
 210 0244 C3040000 		.word	.L47+1
 211 0248 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 1F030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 2B030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C3040000 		.word	.L47+1
 220 026c 19030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C3040000 		.word	.L47+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C3040000 		.word	.L47+1
 226 0284 C3040000 		.word	.L47+1
 227 0288 C3040000 		.word	.L47+1
 228 028c 25030000 		.word	.L27+1
 229 0290 C3040000 		.word	.L47+1
 230 0294 C3040000 		.word	.L47+1
 231 0298 C3040000 		.word	.L47+1
 232 029c C3040000 		.word	.L47+1
 233 02a0 C3040000 		.word	.L47+1
 234 02a4 C3040000 		.word	.L47+1
 235 02a8 C3040000 		.word	.L47+1
 236 02ac C3040000 		.word	.L47+1
 237 02b0 C3040000 		.word	.L47+1
 238 02b4 C3040000 		.word	.L47+1
 239 02b8 C3040000 		.word	.L47+1
 240 02bc C3040000 		.word	.L47+1
 241 02c0 C3040000 		.word	.L47+1
 242 02c4 C3040000 		.word	.L47+1
 243 02c8 C3040000 		.word	.L47+1
 244 02cc C3040000 		.word	.L47+1
 245 02d0 8D040000 		.word	.L28+1
 246 02d4 93040000 		.word	.L29+1
 247 02d8 AB040000 		.word	.L30+1
 248 02dc B1040000 		.word	.L31+1
 249 02e0 B7040000 		.word	.L32+1
 250 02e4 BD040000 		.word	.L33+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec EAE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E7E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E4E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E1E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 DEE0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DBE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 8


 285              		.loc 1 115 0
 286 0310 D8E0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D5E0     		b	.L1
 292              	.L23:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_EMG:
 126:..\src/command_processing.c ****             cmd_get_emg();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_emg
 127:..\src/command_processing.c ****             break;
 295              		.loc 1 127 0
 296 031c D2E0     		b	.L1
 297              	.L17:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 130:..\src/command_processing.c ****             
 131:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 132:..\src/command_processing.c ****             cmd_get_activate();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_activate
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 CFE0     		b	.L1
 302              	.L27:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 138:..\src/command_processing.c ****             cmd_set_baudrate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_set_baudrate
 139:..\src/command_processing.c ****             break;  
 305              		.loc 1 139 0
 306 0328 CCE0     		b	.L1
 307              	.L19:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 142:..\src/command_processing.c **** 
 143:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 144:..\src/command_processing.c ****             cmd_get_inputs();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_get_inputs
 145:..\src/command_processing.c ****             break;
 310              		.loc 1 145 0
 311 032e C9E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 9


 312              	.L11:
 146:..\src/command_processing.c **** 
 147:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INFO:
 150:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 313              		.loc 1 150 0
 314 0330 184B     		ldr	r3, .L48+4
 315 0332 1B88     		ldrh	r3, [r3]
 316 0334 3B61     		str	r3, [r7, #16]
 317              	.LBB8:
 318              	.LBB9:
 319              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 320              		.loc 2 792 0
 321 0336 3B69     		ldr	r3, [r7, #16]
 322              		.syntax unified
 323              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 324 0338 5BBA     		rev16 r3, r3
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328 033a FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 329              		.loc 2 793 0
 330 033c FB68     		ldr	r3, [r7, #12]
 331              	.LBE9:
 332              	.LBE8:
 333              		.loc 1 150 0
 334 033e 9BB2     		uxth	r3, r3
 335 0340 1846     		mov	r0, r3
 336 0342 FFF7FEFF 		bl	infoGet
 151:..\src/command_processing.c ****             break;
 337              		.loc 1 151 0
 338 0346 BDE0     		b	.L1
 339              	.L7:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 156:..\src/command_processing.c ****             setZeros();
 340              		.loc 1 156 0
 341 0348 FFF7FEFF 		bl	setZeros
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BAE0     		b	.L1
 344              	.L14:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 162:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 345              		.loc 1 162 0
 346 034e 114B     		ldr	r3, .L48+4
 347 0350 1B88     		ldrh	r3, [r3]
 348 0352 BB61     		str	r3, [r7, #24]
 349              	.LBB10:
 350              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 351              		.loc 2 792 0
 352 0354 BB69     		ldr	r3, [r7, #24]
 353              		.syntax unified
 354              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 355 0356 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 24


 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359 0358 BB60     		str	r3, [r7, #8]
 360              		.loc 2 793 0
 361 035a BB68     		ldr	r3, [r7, #8]
 362              	.LBE11:
 363              	.LBE10:
 364              		.loc 1 162 0
 365 035c 9BB2     		uxth	r3, r3
 366 035e 1846     		mov	r0, r3
 367 0360 FFF7FEFF 		bl	manage_param_list
 163:..\src/command_processing.c ****             break;
 368              		.loc 1 163 0
 369 0364 AEE0     		b	.L1
 370              	.L5:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //=================================================================     CMD_PING
 166:..\src/command_processing.c ****             
 167:..\src/command_processing.c ****         case CMD_PING:
 168:..\src/command_processing.c ****             cmd_ping();
 371              		.loc 1 168 0
 372 0366 FFF7FEFF 		bl	cmd_ping
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ABE0     		b	.L1
 375              	.L8:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 174:..\src/command_processing.c ****             cmd_store_params();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_store_params
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 A8E0     		b	.L1
 380              	.L9:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 178:..\src/command_processing.c **** 
 179:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 180:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 381              		.loc 1 180 0
 382 0372 3220     		movs	r0, #50
 383 0374 FFF7FEFF 		bl	memStore
 384 0378 0346     		mov	r3, r0
 385 037a 002B     		cmp	r3, #0
 386 037c 03D0     		beq	.L36
 181:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 387              		.loc 1 181 0
 388 037e 0120     		movs	r0, #1
 389 0380 FFF7FEFF 		bl	sendAcknowledgment
 182:..\src/command_processing.c ****             else
 183:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 184:..\src/command_processing.c ****             break;
 390              		.loc 1 184 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 25


 391 0384 9EE0     		b	.L1
 392              	.L36:
 183:..\src/command_processing.c ****             break;
 393              		.loc 1 183 0
 394 0386 0020     		movs	r0, #0
 395 0388 FFF7FEFF 		bl	sendAcknowledgment
 396              		.loc 1 184 0
 397 038c 9AE0     		b	.L1
 398              	.L49:
 399 038e 00BF     		.align	2
 400              	.L48:
 401 0390 00000000 		.word	g_rx
 402 0394 01000000 		.word	g_rx+1
 403              	.L10:
 185:..\src/command_processing.c **** 
 186:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 187:..\src/command_processing.c **** 
 188:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 189:..\src/command_processing.c ****             if(memRestore())
 404              		.loc 1 189 0
 405 0398 FFF7FEFF 		bl	memRestore
 406 039c 0346     		mov	r3, r0
 407 039e 002B     		cmp	r3, #0
 408 03a0 03D0     		beq	.L38
 190:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 409              		.loc 1 190 0
 410 03a2 0120     		movs	r0, #1
 411 03a4 FFF7FEFF 		bl	sendAcknowledgment
 191:..\src/command_processing.c ****             else
 192:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 193:..\src/command_processing.c ****             break;
 412              		.loc 1 193 0
 413 03a8 8CE0     		b	.L1
 414              	.L38:
 192:..\src/command_processing.c ****             break;
 415              		.loc 1 192 0
 416 03aa 0020     		movs	r0, #0
 417 03ac FFF7FEFF 		bl	sendAcknowledgment
 418              		.loc 1 193 0
 419 03b0 88E0     		b	.L1
 420              	.L13:
 194:..\src/command_processing.c **** 
 195:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 196:..\src/command_processing.c **** 
 197:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 198:..\src/command_processing.c ****             if(memInit())
 421              		.loc 1 198 0
 422 03b2 FFF7FEFF 		bl	memInit
 423 03b6 0346     		mov	r3, r0
 424 03b8 002B     		cmp	r3, #0
 425 03ba 03D0     		beq	.L40
 199:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 426              		.loc 1 199 0
 427 03bc 0120     		movs	r0, #1
 428 03be FFF7FEFF 		bl	sendAcknowledgment
 200:..\src/command_processing.c ****             else
 201:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 26


 202:..\src/command_processing.c ****             break;
 429              		.loc 1 202 0
 430 03c2 7FE0     		b	.L1
 431              	.L40:
 201:..\src/command_processing.c ****             break;
 432              		.loc 1 201 0
 433 03c4 0020     		movs	r0, #0
 434 03c6 FFF7FEFF 		bl	sendAcknowledgment
 435              		.loc 1 202 0
 436 03ca 7BE0     		b	.L1
 437              	.L12:
 203:..\src/command_processing.c **** 
 204:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 205:..\src/command_processing.c **** 
 206:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 207:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 208:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 438              		.loc 1 208 0
 439 03cc 0120     		movs	r0, #1
 440 03ce FFF7FEFF 		bl	sendAcknowledgment
 209:..\src/command_processing.c ****             CyDelay(1000);
 441              		.loc 1 209 0
 442 03d2 4FF47A70 		mov	r0, #1000
 443 03d6 FFF7FEFF 		bl	CyDelay
 210:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 444              		.loc 1 210 0
 445 03da 0020     		movs	r0, #0
 446 03dc FFF7FEFF 		bl	FTDI_ENABLE_Write
 211:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 211 0
 448 03e0 4FF47A70 		mov	r0, #1000
 449 03e4 FFF7FEFF 		bl	CyDelay
 212:..\src/command_processing.c ****             Bootloadable_Load();
 450              		.loc 1 212 0
 451 03e8 FFF7FEFF 		bl	Bootloadable_Load
 213:..\src/command_processing.c ****             break;
 452              		.loc 1 213 0
 453 03ec 6AE0     		b	.L1
 454              	.L15:
 214:..\src/command_processing.c **** 
 215:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 216:..\src/command_processing.c **** 
 217:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 218:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 455              		.loc 1 218 0
 456 03ee 374B     		ldr	r3, .L50
 457 03f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 458 03f2 1B02     		lsls	r3, r3, #8
 459 03f4 1AB2     		sxth	r2, r3
 460 03f6 354B     		ldr	r3, .L50
 461 03f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 462 03fa 1BB2     		sxth	r3, r3
 463 03fc 1343     		orrs	r3, r3, r2
 464 03fe 1AB2     		sxth	r2, r3
 465 0400 334B     		ldr	r3, .L50+4
 466 0402 5A80     		strh	r2, [r3, #2]	@ movhi
 219:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 27


 467              		.loc 1 219 0
 468 0404 314B     		ldr	r3, .L50
 469 0406 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 470 0408 1B02     		lsls	r3, r3, #8
 471 040a 1AB2     		sxth	r2, r3
 472 040c 2F4B     		ldr	r3, .L50
 473 040e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 474 0410 1BB2     		sxth	r3, r3
 475 0412 1343     		orrs	r3, r3, r2
 476 0414 1AB2     		sxth	r2, r3
 477 0416 2E4B     		ldr	r3, .L50+4
 478 0418 9A80     		strh	r2, [r3, #4]	@ movhi
 220:..\src/command_processing.c ****             
 221:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 479              		.loc 1 221 0
 480 041a 2D4B     		ldr	r3, .L50+4
 481 041c B3F90230 		ldrsh	r3, [r3, #2]
 482 0420 B3F1FF3F 		cmp	r3, #-1
 483 0424 0FD1     		bne	.L42
 484              		.loc 1 221 0 is_stmt 0 discriminator 1
 485 0426 2A4B     		ldr	r3, .L50+4
 486 0428 B3F90430 		ldrsh	r3, [r3, #4]
 487 042c B3F1FF3F 		cmp	r3, #-1
 488 0430 09D1     		bne	.L42
 222:..\src/command_processing.c ****                 calib.enabled = FALSE;
 489              		.loc 1 222 0 is_stmt 1
 490 0432 274B     		ldr	r3, .L50+4
 491 0434 0022     		movs	r2, #0
 492 0436 1A70     		strb	r2, [r3]
 223:..\src/command_processing.c ****                 calib.speed = 0;
 493              		.loc 1 223 0
 494 0438 254B     		ldr	r3, .L50+4
 495 043a 0022     		movs	r2, #0
 496 043c 5A80     		strh	r2, [r3, #2]	@ movhi
 224:..\src/command_processing.c ****                 calib.repetitions = 0;
 497              		.loc 1 224 0
 498 043e 244B     		ldr	r3, .L50+4
 499 0440 0022     		movs	r2, #0
 500 0442 9A80     		strh	r2, [r3, #4]	@ movhi
 225:..\src/command_processing.c ****                 break;
 501              		.loc 1 225 0
 502 0444 3EE0     		b	.L1
 503              	.L42:
 226:..\src/command_processing.c ****             }
 227:..\src/command_processing.c ****             // Speed & repetitions saturations
 228:..\src/command_processing.c ****             if (calib.speed < 0) {
 504              		.loc 1 228 0
 505 0446 224B     		ldr	r3, .L50+4
 506 0448 B3F90230 		ldrsh	r3, [r3, #2]
 507 044c 002B     		cmp	r3, #0
 508 044e 03DA     		bge	.L43
 229:..\src/command_processing.c ****                 calib.speed = 0;
 509              		.loc 1 229 0
 510 0450 1F4B     		ldr	r3, .L50+4
 511 0452 0022     		movs	r2, #0
 512 0454 5A80     		strh	r2, [r3, #2]	@ movhi
 513 0456 07E0     		b	.L44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 28


 514              	.L43:
 230:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 515              		.loc 1 230 0
 516 0458 1D4B     		ldr	r3, .L50+4
 517 045a B3F90230 		ldrsh	r3, [r3, #2]
 518 045e C82B     		cmp	r3, #200
 519 0460 02DD     		ble	.L44
 231:..\src/command_processing.c ****                 calib.speed = 200;
 520              		.loc 1 231 0
 521 0462 1B4B     		ldr	r3, .L50+4
 522 0464 C822     		movs	r2, #200
 523 0466 5A80     		strh	r2, [r3, #2]	@ movhi
 524              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 525              		.loc 1 233 0
 526 0468 194B     		ldr	r3, .L50+4
 527 046a B3F90430 		ldrsh	r3, [r3, #4]
 528 046e 002B     		cmp	r3, #0
 529 0470 02DA     		bge	.L45
 234:..\src/command_processing.c ****                 calib.repetitions = 0;
 530              		.loc 1 234 0
 531 0472 174B     		ldr	r3, .L50+4
 532 0474 0022     		movs	r2, #0
 533 0476 9A80     		strh	r2, [r3, #4]	@ movhi
 534              	.L45:
 235:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 236:..\src/command_processing.c ****                 calib.repetitions = 32767;
 237:..\src/command_processing.c ****             }
 238:..\src/command_processing.c ****             
 239:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 535              		.loc 1 239 0
 536 0478 164B     		ldr	r3, .L50+8
 537 047a 0022     		movs	r2, #0
 538 047c 1A60     		str	r2, [r3]
 240:..\src/command_processing.c ****             calib.enabled = TRUE;
 539              		.loc 1 240 0
 540 047e 144B     		ldr	r3, .L50+4
 541 0480 0122     		movs	r2, #1
 542 0482 1A70     		strb	r2, [r3]
 241:..\src/command_processing.c ****          
 242:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 543              		.loc 1 242 0
 544 0484 0120     		movs	r0, #1
 545 0486 FFF7FEFF 		bl	sendAcknowledgment
 243:..\src/command_processing.c ****             break;
 546              		.loc 1 243 0
 547 048a 1BE0     		b	.L1
 548              	.L28:
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 246:..\src/command_processing.c **** 
 247:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 248:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 248 0
 550 048c FFF7FEFF 		bl	cmd_get_imu_readings
 249:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 29


 551              		.loc 1 249 0
 552 0490 18E0     		b	.L1
 553              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 254:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 254 0
 555 0492 114B     		ldr	r3, .L50+12
 556 0494 1B88     		ldrh	r3, [r3]
 557 0496 7B61     		str	r3, [r7, #20]
 558              	.LBB12:
 559              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0498 7B69     		ldr	r3, [r7, #20]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 049a 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 049c 7B60     		str	r3, [r7, #4]
 569              		.loc 2 793 0
 570 049e 7B68     		ldr	r3, [r7, #4]
 571              	.LBE13:
 572              	.LBE12:
 573              		.loc 1 254 0
 574 04a0 9BB2     		uxth	r3, r3
 575 04a2 1846     		mov	r0, r3
 576 04a4 FFF7FEFF 		bl	get_IMU_param_list
 255:..\src/command_processing.c ****             break;             
 577              		.loc 1 255 0
 578 04a8 0CE0     		b	.L1
 579              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 260:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 260 0
 581 04aa FFF7FEFF 		bl	cmd_get_encoder_map
 261:..\src/command_processing.c ****             break; 
 582              		.loc 1 261 0
 583 04ae 09E0     		b	.L1
 584              	.L31:
 262:..\src/command_processing.c **** 
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 266:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 266 0
 586 04b0 FFF7FEFF 		bl	cmd_get_encoder_raw
 267:..\src/command_processing.c ****             break; 
 587              		.loc 1 267 0
 588 04b4 06E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 30


 589              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 272:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 272 0
 591 04b6 FFF7FEFF 		bl	cmd_get_ADC_map
 273:..\src/command_processing.c ****             break; 
 592              		.loc 1 273 0
 593 04ba 03E0     		b	.L1
 594              	.L33:
 274:..\src/command_processing.c ****             
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 278:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 278 0
 596 04bc FFF7FEFF 		bl	cmd_get_ADC_raw
 279:..\src/command_processing.c ****             break; 
 597              		.loc 1 279 0
 598 04c0 00E0     		b	.L1
 599              	.L47:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c ****             
 282:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 283:..\src/command_processing.c ****         default:
 284:..\src/command_processing.c ****             break;
 600              		.loc 1 284 0
 601 04c2 00BF     		nop
 602              	.L1:
 285:..\src/command_processing.c **** 
 286:..\src/command_processing.c ****     }
 287:..\src/command_processing.c **** }  
 603              		.loc 1 287 0
 604 04c4 2037     		adds	r7, r7, #32
 605              		.cfi_def_cfa_offset 8
 606 04c6 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 04c8 80BD     		pop	{r7, pc}
 610              	.L51:
 611 04ca 00BF     		.align	2
 612              	.L50:
 613 04cc 00000000 		.word	g_rx
 614 04d0 00000000 		.word	calib
 615 04d4 00000000 		.word	g_refNew
 616 04d8 01000000 		.word	g_rx+1
 617              		.cfi_endproc
 618              	.LFE64:
 619              		.size	commProcess, .-commProcess
 620              		.section	.text.infoSend,"ax",%progbits
 621              		.align	2
 622              		.global	infoSend
 623              		.thumb
 624              		.thumb_func
 625              		.type	infoSend, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 31


 626              	infoSend:
 627              	.LFB65:
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c **** //==============================================================================
 290:..\src/command_processing.c **** //                                                                     INFO SEND
 291:..\src/command_processing.c **** //==============================================================================
 292:..\src/command_processing.c **** 
 293:..\src/command_processing.c **** void infoSend(void){
 628              		.loc 1 293 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 1504
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 ADF5BC6D 		sub	sp, sp, #1504
 637              		.cfi_def_cfa_offset 1512
 638 0006 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 294:..\src/command_processing.c ****     char packet_string[1500];
 295:..\src/command_processing.c ****     
 296:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 640              		.loc 1 296 0
 641 0008 3B1D     		adds	r3, r7, #4
 642 000a 1846     		mov	r0, r3
 643 000c FFF7FEFF 		bl	prepare_generic_info
 297:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 644              		.loc 1 297 0
 645 0010 3B1D     		adds	r3, r7, #4
 646 0012 1846     		mov	r0, r3
 647 0014 FFF7FEFF 		bl	UART_RS485_PutString
 298:..\src/command_processing.c **** }
 648              		.loc 1 298 0
 649 0018 00BF     		nop
 650 001a 07F5BC67 		add	r7, r7, #1504
 651              		.cfi_def_cfa_offset 8
 652 001e BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0020 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE65:
 658              		.size	infoSend, .-infoSend
 659 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 660              		.align	2
 661              		.global	infoGet
 662              		.thumb
 663              		.thumb_func
 664              		.type	infoGet, %function
 665              	infoGet:
 666              	.LFB66:
 299:..\src/command_processing.c **** 
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 303:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 32


 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 667              		.loc 1 305 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 24008
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 ADF5BB4D 		sub	sp, sp, #23936
 676              		.cfi_def_cfa_offset 23944
 677 0006 92B0     		sub	sp, sp, #72
 678              		.cfi_def_cfa_offset 24016
 679 0008 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 000a 0246     		mov	r2, r0
 682 000c 07F14803 		add	r3, r7, #72
 683 0010 423B     		subs	r3, r3, #66
 684 0012 1A80     		strh	r2, [r3]	@ movhi
 306:..\src/command_processing.c ****     char packet_string[4000] = "";
 685              		.loc 1 306 0
 686 0014 07F59C43 		add	r3, r7, #19968
 687 0018 03F12803 		add	r3, r3, #40
 688 001c 0022     		movs	r2, #0
 689 001e 1A60     		str	r2, [r3]
 690 0020 0433     		adds	r3, r3, #4
 691 0022 40F69C72 		movw	r2, #3996
 692 0026 0021     		movs	r1, #0
 693 0028 1846     		mov	r0, r3
 694 002a FFF7FEFF 		bl	memset
 307:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 695              		.loc 1 307 0
 696 002e 07F14803 		add	r3, r7, #72
 697 0032 403B     		subs	r3, r3, #64
 698 0034 0022     		movs	r2, #0
 699 0036 1A60     		str	r2, [r3]
 700 0038 0433     		adds	r3, r3, #4
 701 003a 44F61C62 		movw	r2, #19996
 702 003e 0021     		movs	r1, #0
 703 0040 1846     		mov	r0, r3
 704 0042 FFF7FEFF 		bl	memset
 308:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c ****     switch (info_type) {
 705              		.loc 1 310 0
 706 0046 07F14803 		add	r3, r7, #72
 707 004a 423B     		subs	r3, r3, #66
 708 004c 1B88     		ldrh	r3, [r3]
 709 004e 032B     		cmp	r3, #3
 710 0050 50D8     		bhi	.L61
 711 0052 01A2     		adr	r2, .L56
 712 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 713              		.p2align 2
 714              	.L56:
 715 0058 69000000 		.word	.L55+1
 716 005c 8B000000 		.word	.L57+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 33


 717 0060 AD000000 		.word	.L58+1
 718 0064 D3000000 		.word	.L59+1
 719              		.p2align 1
 720              	.L55:
 311:..\src/command_processing.c ****         case INFO_ALL:
 312:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 721              		.loc 1 312 0
 722 0068 07F59C43 		add	r3, r7, #19968
 723 006c 03F12803 		add	r3, r3, #40
 724 0070 1846     		mov	r0, r3
 725 0072 FFF7FEFF 		bl	prepare_generic_info
 313:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 726              		.loc 1 313 0
 727 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 314:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 728              		.loc 1 314 0
 729 007a 07F59C43 		add	r3, r7, #19968
 730 007e 03F12803 		add	r3, r3, #40
 731 0082 1846     		mov	r0, r3
 732 0084 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c ****             break;
 733              		.loc 1 315 0
 734 0088 35E0     		b	.L60
 735              	.L57:
 316:..\src/command_processing.c ****         case CYCLES_INFO:
 317:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 736              		.loc 1 317 0
 737 008a 07F59C43 		add	r3, r7, #19968
 738 008e 03F12803 		add	r3, r3, #40
 739 0092 1846     		mov	r0, r3
 740 0094 FFF7FEFF 		bl	prepare_counter_info
 318:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 741              		.loc 1 318 0
 742 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 319:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 743              		.loc 1 319 0
 744 009c 07F59C43 		add	r3, r7, #19968
 745 00a0 03F12803 		add	r3, r3, #40
 746 00a4 1846     		mov	r0, r3
 747 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 320:..\src/command_processing.c ****             break;
 748              		.loc 1 320 0
 749 00aa 24E0     		b	.L60
 750              	.L58:
 321:..\src/command_processing.c ****         case GET_SD_PARAM:
 322:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
 751              		.loc 1 322 0
 752 00ac 07F59C43 		add	r3, r7, #19968
 753 00b0 03F12803 		add	r3, r3, #40
 754 00b4 4FF47A61 		mov	r1, #4000
 755 00b8 1846     		mov	r0, r3
 756 00ba FFF7FEFF 		bl	Read_SD_Param
 323:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 757              		.loc 1 323 0
 758 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 324:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 759              		.loc 1 324 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 34


 760 00c2 07F59C43 		add	r3, r7, #19968
 761 00c6 03F12803 		add	r3, r3, #40
 762 00ca 1846     		mov	r0, r3
 763 00cc FFF7FEFF 		bl	UART_RS485_PutString
 325:..\src/command_processing.c ****             break;
 764              		.loc 1 325 0
 765 00d0 11E0     		b	.L60
 766              	.L59:
 326:..\src/command_processing.c ****         case GET_SD_DATA:
 327:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 767              		.loc 1 327 0
 768 00d2 07F14803 		add	r3, r7, #72
 769 00d6 403B     		subs	r3, r3, #64
 770 00d8 44F62061 		movw	r1, #20000
 771 00dc 1846     		mov	r0, r3
 772 00de FFF7FEFF 		bl	Read_SD_Data
 328:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 773              		.loc 1 328 0
 774 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 329:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 775              		.loc 1 329 0
 776 00e6 07F14803 		add	r3, r7, #72
 777 00ea 403B     		subs	r3, r3, #64
 778 00ec 1846     		mov	r0, r3
 779 00ee FFF7FEFF 		bl	UART_RS485_PutString
 330:..\src/command_processing.c **** 
 331:..\src/command_processing.c ****             break;
 780              		.loc 1 331 0
 781 00f2 00E0     		b	.L60
 782              	.L61:
 332:..\src/command_processing.c ****         default:
 333:..\src/command_processing.c ****             break;
 783              		.loc 1 333 0
 784 00f4 00BF     		nop
 785              	.L60:
 334:..\src/command_processing.c ****     }
 335:..\src/command_processing.c **** }
 786              		.loc 1 335 0 discriminator 1
 787 00f6 00BF     		nop
 788 00f8 07F5BB47 		add	r7, r7, #23936
 789 00fc 4837     		adds	r7, r7, #72
 790              		.cfi_def_cfa_offset 8
 791 00fe BD46     		mov	sp, r7
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 0100 80BD     		pop	{r7, pc}
 795              		.cfi_endproc
 796              	.LFE66:
 797              		.size	infoGet, .-infoGet
 798              		.global	__aeabi_i2f
 799              		.global	__aeabi_fdiv
 800 0102 00BF     		.section	.rodata
 801              		.align	2
 802              	.LC76:
 803 0000 20557362 		.ascii	" Usb\000"
 803      00
 804 0005 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 35


 805              	.LC77:
 806 0008 2048616E 		.ascii	" Handle\000"
 806      646C6500 
 807              		.align	2
 808              	.LC78:
 809 0010 20454D47 		.ascii	" EMG proportional\000"
 809      2070726F 
 809      706F7274 
 809      696F6E61 
 809      6C00
 810 0022 0000     		.align	2
 811              	.LC79:
 812 0024 20454D47 		.ascii	" EMG integral\000"
 812      20696E74 
 812      65677261 
 812      6C00
 813 0032 0000     		.align	2
 814              	.LC80:
 815 0034 20454D47 		.ascii	" EMG FCFS\000"
 815      20464346 
 815      5300
 816 003e 0000     		.align	2
 817              	.LC81:
 818 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 818      20464346 
 818      53204164 
 818      76616E63 
 818      656400
 819 0053 00       		.align	2
 820              	.LC82:
 821 0054 20506F73 		.ascii	" Position\000"
 821      6974696F 
 821      6E00
 822 005e 0000     		.align	2
 823              	.LC83:
 824 0060 2050574D 		.ascii	" PWM\000"
 824      00
 825 0065 000000   		.align	2
 826              	.LC84:
 827 0068 20437572 		.ascii	" Current\000"
 827      72656E74 
 827      00
 828 0071 000000   		.align	2
 829              	.LC85:
 830 0074 20506F73 		.ascii	" Position and Current\000"
 830      6974696F 
 830      6E20616E 
 830      64204375 
 830      7272656E 
 831 008a 0000     		.align	2
 832              	.LC86:
 833 008c 20594553 		.ascii	" YES\000\000"
 833      0000
 834 0092 0000     		.align	2
 835              	.LC87:
 836 0094 204E4F00 		.ascii	" NO\000\000"
 836      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 36


 837 0099 000000   		.align	2
 838              	.LC88:
 839 009c 20526967 		.ascii	" Right\000\000"
 839      68740000 
 840              		.align	2
 841              	.LC89:
 842 00a4 204C6566 		.ascii	" Left\000\000"
 842      740000
 843 00ab 00       		.align	2
 844              	.LC90:
 845 00ac 204F4646 		.ascii	" OFF\000\000"
 845      0000
 846 00b2 0000     		.align	2
 847              	.LC91:
 848 00b4 204F4E00 		.ascii	" ON\000\000"
 848      00
 849 00b9 000000   		.align	2
 850              	.LC92:
 851 00bc 204E6F6E 		.ascii	" None\000\000"
 851      650000
 852 00c3 00       		.align	2
 853              	.LC93:
 854 00c4 2053442F 		.ascii	" SD/RTC board\000\000"
 854      52544320 
 854      626F6172 
 854      640000
 855 00d3 00       		.align	2
 856              	.LC94:
 857 00d4 20576946 		.ascii	" WiFi board [N/A]\000\000"
 857      6920626F 
 857      61726420 
 857      5B4E2F41 
 857      5D0000
 858 00e7 00       		.align	2
 859              	.LC95:
 860 00e8 204F7468 		.ascii	" Other [N/A]\000\000"
 860      6572205B 
 860      4E2F415D 
 860      0000
 861 00f6 0000     		.align	2
 862              	.LC96:
 863 00f8 204C6F77 		.ascii	" Low\000\000"
 863      0000
 864 00fe 0000     		.align	2
 865              	.LC97:
 866 0100 20486967 		.ascii	" High\000\000"
 866      680000
 867 0107 00       		.align	2
 868              	.LC98:
 869 0108 2047454E 		.ascii	" GENERIC USER\000\000"
 869      45524943 
 869      20555345 
 869      520000
 870 0117 00       		.align	2
 871              	.LC99:
 872 0118 204D4152 		.ascii	" MARIA\000\000"
 872      49410000 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 37


 873              		.align	2
 874              	.LC100:
 875 0120 20524F5A 		.ascii	" ROZA\000\000"
 875      410000
 876 0127 00       		.align	2
 877              	.LC101:
 878 0128 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 878      33383837 
 878      20285374 
 878      616E6461 
 878      72642900 
 879 013d 000000   		.align	2
 880              	.LC102:
 881 0140 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 881      35303139 
 881      20284869 
 881      67682070 
 881      6F776572 
 882 0157 00       		.align	2
 883              	.LC103:
 884 0158 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 884      5448414E 
 884      44205052 
 884      4F0000
 885 0167 00       		.align	2
 886              	.LC104:
 887 0168 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 887      45524943 
 887      2032204D 
 887      4F544F52 
 887      530000
 888              		.section	.text.get_param_list,"ax",%progbits
 889              		.align	2
 890              		.global	get_param_list
 891              		.thumb
 892              		.thumb_func
 893              		.type	get_param_list, %function
 894              	get_param_list:
 895              	.LFB67:
 336:..\src/command_processing.c **** 
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c **** //==============================================================================
 339:..\src/command_processing.c **** //                                                                GET PARAM LIST
 340:..\src/command_processing.c **** //==============================================================================
 341:..\src/command_processing.c **** 
 342:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 343:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 344:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 345:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 896              		.loc 1 345 0
 897              		.cfi_startproc
 898              		@ args = 16, pretend = 0, frame = 5208
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900 0000 B0B5     		push	{r4, r5, r7, lr}
 901              		.cfi_def_cfa_offset 16
 902              		.cfi_offset 4, -16
 903              		.cfi_offset 5, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 38


 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0002 ADF5A25D 		sub	sp, sp, #5184
 907              		.cfi_def_cfa_offset 5200
 908 0006 86B0     		sub	sp, sp, #24
 909              		.cfi_def_cfa_offset 5224
 910 0008 00AF     		add	r7, sp, #0
 911              		.cfi_def_cfa_register 7
 912 000a 07F11804 		add	r4, r7, #24
 913 000e 0C3C     		subs	r4, r4, #12
 914 0010 2060     		str	r0, [r4]
 915 0012 07F11800 		add	r0, r7, #24
 916 0016 1038     		subs	r0, r0, #16
 917 0018 0160     		str	r1, [r0]
 918 001a 07F11801 		add	r1, r7, #24
 919 001e 1439     		subs	r1, r1, #20
 920 0020 0A60     		str	r2, [r1]
 921 0022 07F11802 		add	r2, r7, #24
 922 0026 183A     		subs	r2, r2, #24
 923 0028 1360     		str	r3, [r2]
 346:..\src/command_processing.c ****     
 347:..\src/command_processing.c ****     //Package to be sent variables
 348:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 924              		.loc 1 348 0
 925 002a 07F15803 		add	r3, r7, #88
 926 002e 0022     		movs	r2, #0
 927 0030 1A60     		str	r2, [r3]
 928 0032 0433     		adds	r3, r3, #4
 929 0034 41F2E832 		movw	r2, #5096
 930 0038 0021     		movs	r1, #0
 931 003a 1846     		mov	r0, r3
 932 003c FFF7FEFF 		bl	memset
 349:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 933              		.loc 1 349 0
 934 0040 41F2EC33 		movw	r3, #5100
 935 0044 07F5A252 		add	r2, r7, #5184
 936 0048 02F11002 		add	r2, r2, #16
 937 004c 1380     		strh	r3, [r2]	@ movhi
 350:..\src/command_processing.c **** 
 351:..\src/command_processing.c ****     //Auxiliary variables
 352:..\src/command_processing.c ****     uint8 CYDATA i, j;
 353:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 938              		.loc 1 353 0
 939 004e 0023     		movs	r3, #0
 940 0050 07F5A252 		add	r2, r7, #5184
 941 0054 02F11502 		add	r2, r2, #21
 942 0058 1370     		strb	r3, [r2]
 354:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 943              		.loc 1 354 0
 944 005a 0023     		movs	r3, #0
 945 005c 07F5A252 		add	r2, r7, #5184
 946 0060 02F11402 		add	r2, r2, #20
 947 0064 1370     		strb	r3, [r2]
 355:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 948              		.loc 1 355 0
 949 0066 0023     		movs	r3, #0
 950 0068 07F5A252 		add	r2, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 39


 951 006c 02F11302 		add	r2, r2, #19
 952 0070 1370     		strb	r3, [r2]
 356:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 357:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 953              		.loc 1 357 0
 954 0072 07F13803 		add	r3, r7, #56
 955 0076 143B     		subs	r3, r3, #20
 956 0078 0022     		movs	r2, #0
 957 007a 1A60     		str	r2, [r3]
 958 007c 0433     		adds	r3, r3, #4
 959 007e 2E22     		movs	r2, #46
 960 0080 0021     		movs	r1, #0
 961 0082 1846     		mov	r0, r3
 962 0084 FFF7FEFF 		bl	memset
 358:..\src/command_processing.c ****     float aux_float;
 359:..\src/command_processing.c ****     int16 aux_int16;
 360:..\src/command_processing.c ****     uint16 aux_uint16;
 361:..\src/command_processing.c ****     int32 aux_int32;
 362:..\src/command_processing.c ****     uint32 aux_uint32;
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 963              		.loc 1 364 0
 964 0088 0023     		movs	r3, #0
 965 008a 07F5A252 		add	r2, r7, #5184
 966 008e 02F10F02 		add	r2, r2, #15
 967 0092 1370     		strb	r3, [r2]
 365:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 968              		.loc 1 365 0
 969 0094 0123     		movs	r3, #1
 970 0096 07F5A252 		add	r2, r7, #5184
 971 009a 02F10E02 		add	r2, r2, #14
 972 009e 1370     		strb	r3, [r2]
 366:..\src/command_processing.c ****   
 367:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 973              		.loc 1 367 0
 974 00a0 07F11803 		add	r3, r7, #24
 975 00a4 0C3B     		subs	r3, r3, #12
 976 00a6 1B68     		ldr	r3, [r3]
 977 00a8 1B68     		ldr	r3, [r3]
 978 00aa 07F5A252 		add	r2, r7, #5184
 979 00ae 02F10802 		add	r2, r2, #8
 980 00b2 1360     		str	r3, [r2]
 368:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 981              		.loc 1 368 0
 982 00b4 07F5A253 		add	r3, r7, #5184
 983 00b8 03F10803 		add	r3, r3, #8
 984 00bc 1B68     		ldr	r3, [r3]
 985 00be 07F5A252 		add	r2, r7, #5184
 986 00c2 02F10402 		add	r2, r2, #4
 987 00c6 1360     		str	r3, [r2]
 369:..\src/command_processing.c ****         
 370:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 988              		.loc 1 370 0
 989 00c8 07F15803 		add	r3, r7, #88
 990 00cc 0C22     		movs	r2, #12
 991 00ce 1A70     		strb	r2, [r3]
 371:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 40


 992              		.loc 1 371 0
 993 00d0 07F15803 		add	r3, r7, #88
 994 00d4 4722     		movs	r2, #71
 995 00d6 5A70     		strb	r2, [r3, #1]
 372:..\src/command_processing.c ****     
 373:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 996              		.loc 1 373 0
 997 00d8 0023     		movs	r3, #0
 998 00da 07F5A252 		add	r2, r7, #5184
 999 00de 02F11502 		add	r2, r2, #21
 1000 00e2 1370     		strb	r3, [r2]
 1001 00e4 02F050BE 		b	.L63
 1002              	.L246:
 374:..\src/command_processing.c ****         
 375:..\src/command_processing.c ****         // Assign m_addr memory address
 376:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1003              		.loc 1 376 0
 1004 00e8 07F5A253 		add	r3, r7, #5184
 1005 00ec 03F11503 		add	r3, r3, #21
 1006 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 00f2 9A00     		lsls	r2, r3, #2
 1008 00f4 07F11803 		add	r3, r7, #24
 1009 00f8 0C3B     		subs	r3, r3, #12
 1010 00fa 1B68     		ldr	r3, [r3]
 1011 00fc 1344     		add	r3, r3, r2
 1012 00fe 1B68     		ldr	r3, [r3]
 1013 0100 07F5A252 		add	r2, r7, #5184
 1014 0104 02F10802 		add	r2, r2, #8
 1015 0108 1360     		str	r3, [r2]
 377:..\src/command_processing.c ****         
 378:..\src/command_processing.c ****         // Add parameter type and size to packet
 379:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1016              		.loc 1 379 0
 1017 010a 07F5A253 		add	r3, r7, #5184
 1018 010e 03F11503 		add	r3, r3, #21
 1019 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1020 0114 3222     		movs	r2, #50
 1021 0116 02FB03F3 		mul	r3, r2, r3
 1022 011a 9A1C     		adds	r2, r3, #2
 1023 011c 07F5A253 		add	r3, r7, #5184
 1024 0120 03F11503 		add	r3, r3, #21
 1025 0124 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1026 0126 07F11803 		add	r3, r7, #24
 1027 012a 103B     		subs	r3, r3, #16
 1028 012c 1B68     		ldr	r3, [r3]
 1029 012e 0B44     		add	r3, r3, r1
 1030 0130 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1031 0132 07F15803 		add	r3, r7, #88
 1032 0136 9954     		strb	r1, [r3, r2]
 380:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1033              		.loc 1 380 0
 1034 0138 07F5A253 		add	r3, r7, #5184
 1035 013c 03F11503 		add	r3, r3, #21
 1036 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1037 0142 3222     		movs	r2, #50
 1038 0144 02FB03F3 		mul	r3, r2, r3
 1039 0148 DA1C     		adds	r2, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 41


 1040 014a 07F5A253 		add	r3, r7, #5184
 1041 014e 03F11503 		add	r3, r3, #21
 1042 0152 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1043 0154 07F11803 		add	r3, r7, #24
 1044 0158 143B     		subs	r3, r3, #20
 1045 015a 1B68     		ldr	r3, [r3]
 1046 015c 0B44     		add	r3, r3, r1
 1047 015e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1048 0160 07F15803 		add	r3, r7, #88
 1049 0164 9954     		strb	r1, [r3, r2]
 381:..\src/command_processing.c ****         
 382:..\src/command_processing.c ****         // Find size of data
 383:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1050              		.loc 1 383 0
 1051 0166 07F5A253 		add	r3, r7, #5184
 1052 016a 03F11503 		add	r3, r3, #21
 1053 016e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1054 0170 07F11803 		add	r3, r7, #24
 1055 0174 103B     		subs	r3, r3, #16
 1056 0176 1B68     		ldr	r3, [r3]
 1057 0178 1344     		add	r3, r3, r2
 1058 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1059 017c 092B     		cmp	r3, #9
 1060 017e 2CD8     		bhi	.L64
 1061 0180 01A2     		adr	r2, .L66
 1062 0182 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1063 0186 00BF     		.p2align 2
 1064              	.L66:
 1065 0188 B1010000 		.word	.L65+1
 1066 018c B1010000 		.word	.L65+1
 1067 0190 B1010000 		.word	.L65+1
 1068 0194 BF010000 		.word	.L67+1
 1069 0198 BF010000 		.word	.L67+1
 1070 019c CD010000 		.word	.L68+1
 1071 01a0 CD010000 		.word	.L68+1
 1072 01a4 CD010000 		.word	.L68+1
 1073 01a8 DB010000 		.word	.L64+1
 1074 01ac B1010000 		.word	.L65+1
 1075              		.p2align 1
 1076              	.L65:
 384:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 385:..\src/command_processing.c ****                 sod = 1; break;
 1077              		.loc 1 385 0
 1078 01b0 0123     		movs	r3, #1
 1079 01b2 07F5A252 		add	r2, r7, #5184
 1080 01b6 02F11302 		add	r2, r2, #19
 1081 01ba 1370     		strb	r3, [r2]
 1082 01bc 0DE0     		b	.L64
 1083              	.L67:
 386:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 387:..\src/command_processing.c ****                 sod = 2; break;
 1084              		.loc 1 387 0
 1085 01be 0223     		movs	r3, #2
 1086 01c0 07F5A252 		add	r2, r7, #5184
 1087 01c4 02F11302 		add	r2, r2, #19
 1088 01c8 1370     		strb	r3, [r2]
 1089 01ca 06E0     		b	.L64
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 42


 1090              	.L68:
 388:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 389:..\src/command_processing.c ****                 sod = 4; break;
 1091              		.loc 1 389 0
 1092 01cc 0423     		movs	r3, #4
 1093 01ce 07F5A252 		add	r2, r7, #5184
 1094 01d2 02F11302 		add	r2, r2, #19
 1095 01d6 1370     		strb	r3, [r2]
 1096 01d8 00BF     		nop
 1097              	.L64:
 390:..\src/command_processing.c ****         }
 391:..\src/command_processing.c ****             
 392:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1098              		.loc 1 392 0
 1099 01da 07F5A253 		add	r3, r7, #5184
 1100 01de 03F11503 		add	r3, r3, #21
 1101 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1102 01e4 07F5A352 		add	r2, r7, #5216
 1103 01e8 02F11002 		add	r2, r2, #16
 1104 01ec 1268     		ldr	r2, [r2]
 1105 01ee 1344     		add	r3, r3, r2
 1106 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1107 01f2 002B     		cmp	r3, #0
 1108 01f4 40F0D383 		bne	.L69
 393:..\src/command_processing.c ****             
 394:..\src/command_processing.c ****             // Add parameter data to packet
 395:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1109              		.loc 1 395 0
 1110 01f8 07F5A253 		add	r3, r7, #5184
 1111 01fc 03F11503 		add	r3, r3, #21
 1112 0200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1113 0202 07F11803 		add	r3, r7, #24
 1114 0206 103B     		subs	r3, r3, #16
 1115 0208 1B68     		ldr	r3, [r3]
 1116 020a 1344     		add	r3, r3, r2
 1117 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1118 020e 092B     		cmp	r3, #9
 1119 0210 02F2FF80 		bhi	.L103
 1120 0214 01A2     		adr	r2, .L72
 1121 0216 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1122 021a 00BF     		.p2align 2
 1123              	.L72:
 1124 021c 45020000 		.word	.L71+1
 1125 0220 FF020000 		.word	.L73+1
 1126 0224 45020000 		.word	.L71+1
 1127 0228 B9030000 		.word	.L74+1
 1128 022c E9040000 		.word	.L75+1
 1129 0230 17060000 		.word	.L76+1
 1130 0234 41070000 		.word	.L77+1
 1131 0238 6F080000 		.word	.L78+1
 1132 023c 13240000 		.word	.L103+1
 1133 0240 45020000 		.word	.L71+1
 1134              		.p2align 1
 1135              	.L71:
 396:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 397:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1136              		.loc 1 397 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 43


 1137 0244 0023     		movs	r3, #0
 1138 0246 07F5A252 		add	r2, r7, #5184
 1139 024a 02F11702 		add	r2, r2, #23
 1140 024e 1370     		strb	r3, [r2]
 1141 0250 41E0     		b	.L79
 1142              	.L80:
 398:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1143              		.loc 1 398 0 discriminator 3
 1144 0252 07F5A253 		add	r3, r7, #5184
 1145 0256 03F11703 		add	r3, r3, #23
 1146 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1147 025c 07F5A252 		add	r2, r7, #5184
 1148 0260 02F11302 		add	r2, r2, #19
 1149 0264 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1150 0266 02FB03F3 		mul	r3, r2, r3
 1151 026a 1A46     		mov	r2, r3
 1152 026c 07F5A253 		add	r3, r7, #5184
 1153 0270 03F10803 		add	r3, r3, #8
 1154 0274 1B68     		ldr	r3, [r3]
 1155 0276 1344     		add	r3, r3, r2
 1156 0278 07F5A252 		add	r2, r7, #5184
 1157 027c 02F10402 		add	r2, r2, #4
 1158 0280 1360     		str	r3, [r2]
 399:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1159              		.loc 1 399 0 discriminator 3
 1160 0282 07F5A253 		add	r3, r7, #5184
 1161 0286 03F11503 		add	r3, r3, #21
 1162 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1163 028c 3222     		movs	r2, #50
 1164 028e 02FB03F3 		mul	r3, r2, r3
 1165 0292 1A1D     		adds	r2, r3, #4
 1166 0294 07F5A253 		add	r3, r7, #5184
 1167 0298 03F11703 		add	r3, r3, #23
 1168 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1169 029e 07F5A251 		add	r1, r7, #5184
 1170 02a2 01F11301 		add	r1, r1, #19
 1171 02a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1172 02a8 01FB03F3 		mul	r3, r1, r3
 1173 02ac 1344     		add	r3, r3, r2
 1174 02ae 07F5A252 		add	r2, r7, #5184
 1175 02b2 02F10402 		add	r2, r2, #4
 1176 02b6 1268     		ldr	r2, [r2]
 1177 02b8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1178 02ba 07F15802 		add	r2, r7, #88
 1179 02be D154     		strb	r1, [r2, r3]
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1180              		.loc 1 397 0 discriminator 3
 1181 02c0 07F5A253 		add	r3, r7, #5184
 1182 02c4 03F11703 		add	r3, r3, #23
 1183 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 02ca 0133     		adds	r3, r3, #1
 1185 02cc 07F5A252 		add	r2, r7, #5184
 1186 02d0 02F11702 		add	r2, r2, #23
 1187 02d4 1370     		strb	r3, [r2]
 1188              	.L79:
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1189              		.loc 1 397 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 44


 1190 02d6 07F5A253 		add	r3, r7, #5184
 1191 02da 03F11503 		add	r3, r3, #21
 1192 02de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1193 02e0 07F11803 		add	r3, r7, #24
 1194 02e4 143B     		subs	r3, r3, #20
 1195 02e6 1B68     		ldr	r3, [r3]
 1196 02e8 1344     		add	r3, r3, r2
 1197 02ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1198 02ec 07F5A252 		add	r2, r7, #5184
 1199 02f0 02F11702 		add	r2, r2, #23
 1200 02f4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1201 02f6 9A42     		cmp	r2, r3
 1202 02f8 ABD3     		bcc	.L80
 400:..\src/command_processing.c ****                     }
 401:..\src/command_processing.c ****                     break;                
 1203              		.loc 1 401 0 is_stmt 1
 1204 02fa 02F08AB8 		b	.L103
 1205              	.L73:
 402:..\src/command_processing.c ****                 case TYPE_INT8:
 403:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1206              		.loc 1 403 0
 1207 02fe 0023     		movs	r3, #0
 1208 0300 07F5A252 		add	r2, r7, #5184
 1209 0304 02F11702 		add	r2, r2, #23
 1210 0308 1370     		strb	r3, [r2]
 1211 030a 41E0     		b	.L81
 1212              	.L82:
 404:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1213              		.loc 1 404 0 discriminator 3
 1214 030c 07F5A253 		add	r3, r7, #5184
 1215 0310 03F11703 		add	r3, r3, #23
 1216 0314 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1217 0316 07F5A252 		add	r2, r7, #5184
 1218 031a 02F11302 		add	r2, r2, #19
 1219 031e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1220 0320 02FB03F3 		mul	r3, r2, r3
 1221 0324 1A46     		mov	r2, r3
 1222 0326 07F5A253 		add	r3, r7, #5184
 1223 032a 03F10803 		add	r3, r3, #8
 1224 032e 1B68     		ldr	r3, [r3]
 1225 0330 1344     		add	r3, r3, r2
 1226 0332 07F5A252 		add	r2, r7, #5184
 1227 0336 02F10402 		add	r2, r2, #4
 1228 033a 1360     		str	r3, [r2]
 405:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1229              		.loc 1 405 0 discriminator 3
 1230 033c 07F5A253 		add	r3, r7, #5184
 1231 0340 03F11503 		add	r3, r3, #21
 1232 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1233 0346 3222     		movs	r2, #50
 1234 0348 02FB03F3 		mul	r3, r2, r3
 1235 034c 1A1D     		adds	r2, r3, #4
 1236 034e 07F5A253 		add	r3, r7, #5184
 1237 0352 03F11703 		add	r3, r3, #23
 1238 0356 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 0358 07F5A251 		add	r1, r7, #5184
 1240 035c 01F11301 		add	r1, r1, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 45


 1241 0360 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1242 0362 01FB03F3 		mul	r3, r1, r3
 1243 0366 1344     		add	r3, r3, r2
 1244 0368 07F5A252 		add	r2, r7, #5184
 1245 036c 02F10402 		add	r2, r2, #4
 1246 0370 1268     		ldr	r2, [r2]
 1247 0372 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1248 0374 07F15802 		add	r2, r7, #88
 1249 0378 D154     		strb	r1, [r2, r3]
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1250              		.loc 1 403 0 discriminator 3
 1251 037a 07F5A253 		add	r3, r7, #5184
 1252 037e 03F11703 		add	r3, r3, #23
 1253 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1254 0384 0133     		adds	r3, r3, #1
 1255 0386 07F5A252 		add	r2, r7, #5184
 1256 038a 02F11702 		add	r2, r2, #23
 1257 038e 1370     		strb	r3, [r2]
 1258              	.L81:
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1259              		.loc 1 403 0 is_stmt 0 discriminator 1
 1260 0390 07F5A253 		add	r3, r7, #5184
 1261 0394 03F11503 		add	r3, r3, #21
 1262 0398 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1263 039a 07F11803 		add	r3, r7, #24
 1264 039e 143B     		subs	r3, r3, #20
 1265 03a0 1B68     		ldr	r3, [r3]
 1266 03a2 1344     		add	r3, r3, r2
 1267 03a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1268 03a6 07F5A252 		add	r2, r7, #5184
 1269 03aa 02F11702 		add	r2, r2, #23
 1270 03ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1271 03b0 9A42     		cmp	r2, r3
 1272 03b2 ABD3     		bcc	.L82
 406:..\src/command_processing.c ****                     }
 407:..\src/command_processing.c ****                     break;
 1273              		.loc 1 407 0 is_stmt 1
 1274 03b4 02F02DB8 		b	.L103
 1275              	.L74:
 408:..\src/command_processing.c ****                 case TYPE_INT16:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1276              		.loc 1 409 0
 1277 03b8 0023     		movs	r3, #0
 1278 03ba 07F5A252 		add	r2, r7, #5184
 1279 03be 02F11702 		add	r2, r2, #23
 1280 03c2 1370     		strb	r3, [r2]
 1281 03c4 7BE0     		b	.L83
 1282              	.L86:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1283              		.loc 1 410 0
 1284 03c6 07F5A253 		add	r3, r7, #5184
 1285 03ca 03F11703 		add	r3, r3, #23
 1286 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1287 03d0 07F5A252 		add	r2, r7, #5184
 1288 03d4 02F11302 		add	r2, r2, #19
 1289 03d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1290 03da 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 46


 1291 03de 1A46     		mov	r2, r3
 1292 03e0 07F5A253 		add	r3, r7, #5184
 1293 03e4 03F10803 		add	r3, r3, #8
 1294 03e8 1B68     		ldr	r3, [r3]
 1295 03ea 1344     		add	r3, r3, r2
 1296 03ec 07F5A252 		add	r2, r7, #5184
 1297 03f0 02F10402 		add	r2, r2, #4
 1298 03f4 1360     		str	r3, [r2]
 411:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1299              		.loc 1 411 0
 1300 03f6 07F5A253 		add	r3, r7, #5184
 1301 03fa 03F10403 		add	r3, r3, #4
 1302 03fe 1B68     		ldr	r3, [r3]
 1303 0400 B3F90020 		ldrsh	r2, [r3]
 1304 0404 07F13803 		add	r3, r7, #56
 1305 0408 1A3B     		subs	r3, r3, #26
 1306 040a 1A80     		strh	r2, [r3]	@ movhi
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1307              		.loc 1 412 0
 1308 040c 0023     		movs	r3, #0
 1309 040e 07F5A252 		add	r2, r7, #5184
 1310 0412 02F11602 		add	r2, r2, #22
 1311 0416 1370     		strb	r3, [r2]
 1312 0418 3AE0     		b	.L84
 1313              	.L85:
 413:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1314              		.loc 1 413 0 discriminator 3
 1315 041a 07F5A253 		add	r3, r7, #5184
 1316 041e 03F11503 		add	r3, r3, #21
 1317 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1318 0424 3222     		movs	r2, #50
 1319 0426 02FB03F3 		mul	r3, r2, r3
 1320 042a 1A1D     		adds	r2, r3, #4
 1321 042c 07F5A253 		add	r3, r7, #5184
 1322 0430 03F11703 		add	r3, r3, #23
 1323 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1324 0436 07F5A251 		add	r1, r7, #5184
 1325 043a 01F11301 		add	r1, r1, #19
 1326 043e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1327 0440 01FB03F3 		mul	r3, r1, r3
 1328 0444 1A44     		add	r2, r2, r3
 1329 0446 07F5A253 		add	r3, r7, #5184
 1330 044a 03F11303 		add	r3, r3, #19
 1331 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1332 0450 1A44     		add	r2, r2, r3
 1333 0452 07F5A253 		add	r3, r7, #5184
 1334 0456 03F11603 		add	r3, r3, #22
 1335 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1336 045c D31A     		subs	r3, r2, r3
 1337 045e 5A1E     		subs	r2, r3, #1
 1338 0460 07F5A253 		add	r3, r7, #5184
 1339 0464 03F11603 		add	r3, r3, #22
 1340 0468 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1341 046a 07F13803 		add	r3, r7, #56
 1342 046e 1A3B     		subs	r3, r3, #26
 1343 0470 0B44     		add	r3, r3, r1
 1344 0472 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 47


 1345 0474 07F15803 		add	r3, r7, #88
 1346 0478 9954     		strb	r1, [r3, r2]
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1347              		.loc 1 412 0 discriminator 3
 1348 047a 07F5A253 		add	r3, r7, #5184
 1349 047e 03F11603 		add	r3, r3, #22
 1350 0482 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1351 0484 0133     		adds	r3, r3, #1
 1352 0486 07F5A252 		add	r2, r7, #5184
 1353 048a 02F11602 		add	r2, r2, #22
 1354 048e 1370     		strb	r3, [r2]
 1355              	.L84:
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1356              		.loc 1 412 0 is_stmt 0 discriminator 1
 1357 0490 07F5A253 		add	r3, r7, #5184
 1358 0494 03F11603 		add	r3, r3, #22
 1359 0498 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1360 049a 07F5A253 		add	r3, r7, #5184
 1361 049e 03F11303 		add	r3, r3, #19
 1362 04a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1363 04a4 9A42     		cmp	r2, r3
 1364 04a6 B8D3     		bcc	.L85
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1365              		.loc 1 409 0 is_stmt 1 discriminator 2
 1366 04a8 07F5A253 		add	r3, r7, #5184
 1367 04ac 03F11703 		add	r3, r3, #23
 1368 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1369 04b2 0133     		adds	r3, r3, #1
 1370 04b4 07F5A252 		add	r2, r7, #5184
 1371 04b8 02F11702 		add	r2, r2, #23
 1372 04bc 1370     		strb	r3, [r2]
 1373              	.L83:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1374              		.loc 1 409 0 is_stmt 0 discriminator 1
 1375 04be 07F5A253 		add	r3, r7, #5184
 1376 04c2 03F11503 		add	r3, r3, #21
 1377 04c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1378 04c8 07F11803 		add	r3, r7, #24
 1379 04cc 143B     		subs	r3, r3, #20
 1380 04ce 1B68     		ldr	r3, [r3]
 1381 04d0 1344     		add	r3, r3, r2
 1382 04d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1383 04d4 07F5A252 		add	r2, r7, #5184
 1384 04d8 02F11702 		add	r2, r2, #23
 1385 04dc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1386 04de 9A42     		cmp	r2, r3
 1387 04e0 FFF471AF 		bcc	.L86
 414:..\src/command_processing.c ****                         }
 415:..\src/command_processing.c ****                     }
 416:..\src/command_processing.c ****                     break;
 1388              		.loc 1 416 0 is_stmt 1
 1389 04e4 01F095BF 		b	.L103
 1390              	.L75:
 417:..\src/command_processing.c ****                 case TYPE_UINT16:
 418:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1391              		.loc 1 418 0
 1392 04e8 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 48


 1393 04ea 07F5A252 		add	r2, r7, #5184
 1394 04ee 02F11702 		add	r2, r2, #23
 1395 04f2 1370     		strb	r3, [r2]
 1396 04f4 7AE0     		b	.L87
 1397              	.L90:
 419:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1398              		.loc 1 419 0
 1399 04f6 07F5A253 		add	r3, r7, #5184
 1400 04fa 03F11703 		add	r3, r3, #23
 1401 04fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 0500 07F5A252 		add	r2, r7, #5184
 1403 0504 02F11302 		add	r2, r2, #19
 1404 0508 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1405 050a 02FB03F3 		mul	r3, r2, r3
 1406 050e 1A46     		mov	r2, r3
 1407 0510 07F5A253 		add	r3, r7, #5184
 1408 0514 03F10803 		add	r3, r3, #8
 1409 0518 1B68     		ldr	r3, [r3]
 1410 051a 1344     		add	r3, r3, r2
 1411 051c 07F5A252 		add	r2, r7, #5184
 1412 0520 02F10402 		add	r2, r2, #4
 1413 0524 1360     		str	r3, [r2]
 420:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1414              		.loc 1 420 0
 1415 0526 07F5A253 		add	r3, r7, #5184
 1416 052a 03F10403 		add	r3, r3, #4
 1417 052e 1B68     		ldr	r3, [r3]
 1418 0530 1A88     		ldrh	r2, [r3]
 1419 0532 07F13803 		add	r3, r7, #56
 1420 0536 1C3B     		subs	r3, r3, #28
 1421 0538 1A80     		strh	r2, [r3]	@ movhi
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1422              		.loc 1 421 0
 1423 053a 0023     		movs	r3, #0
 1424 053c 07F5A252 		add	r2, r7, #5184
 1425 0540 02F11602 		add	r2, r2, #22
 1426 0544 1370     		strb	r3, [r2]
 1427 0546 3AE0     		b	.L88
 1428              	.L89:
 422:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1429              		.loc 1 422 0 discriminator 3
 1430 0548 07F5A253 		add	r3, r7, #5184
 1431 054c 03F11503 		add	r3, r3, #21
 1432 0550 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1433 0552 3222     		movs	r2, #50
 1434 0554 02FB03F3 		mul	r3, r2, r3
 1435 0558 1A1D     		adds	r2, r3, #4
 1436 055a 07F5A253 		add	r3, r7, #5184
 1437 055e 03F11703 		add	r3, r3, #23
 1438 0562 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 0564 07F5A251 		add	r1, r7, #5184
 1440 0568 01F11301 		add	r1, r1, #19
 1441 056c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1442 056e 01FB03F3 		mul	r3, r1, r3
 1443 0572 1A44     		add	r2, r2, r3
 1444 0574 07F5A253 		add	r3, r7, #5184
 1445 0578 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 49


 1446 057c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 057e 1A44     		add	r2, r2, r3
 1448 0580 07F5A253 		add	r3, r7, #5184
 1449 0584 03F11603 		add	r3, r3, #22
 1450 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1451 058a D31A     		subs	r3, r2, r3
 1452 058c 5A1E     		subs	r2, r3, #1
 1453 058e 07F5A253 		add	r3, r7, #5184
 1454 0592 03F11603 		add	r3, r3, #22
 1455 0596 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1456 0598 07F13803 		add	r3, r7, #56
 1457 059c 1C3B     		subs	r3, r3, #28
 1458 059e 0B44     		add	r3, r3, r1
 1459 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1460 05a2 07F15803 		add	r3, r7, #88
 1461 05a6 9954     		strb	r1, [r3, r2]
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1462              		.loc 1 421 0 discriminator 3
 1463 05a8 07F5A253 		add	r3, r7, #5184
 1464 05ac 03F11603 		add	r3, r3, #22
 1465 05b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1466 05b2 0133     		adds	r3, r3, #1
 1467 05b4 07F5A252 		add	r2, r7, #5184
 1468 05b8 02F11602 		add	r2, r2, #22
 1469 05bc 1370     		strb	r3, [r2]
 1470              	.L88:
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1471              		.loc 1 421 0 is_stmt 0 discriminator 1
 1472 05be 07F5A253 		add	r3, r7, #5184
 1473 05c2 03F11603 		add	r3, r3, #22
 1474 05c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1475 05c8 07F5A253 		add	r3, r7, #5184
 1476 05cc 03F11303 		add	r3, r3, #19
 1477 05d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1478 05d2 9A42     		cmp	r2, r3
 1479 05d4 B8D3     		bcc	.L89
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1480              		.loc 1 418 0 is_stmt 1 discriminator 2
 1481 05d6 07F5A253 		add	r3, r7, #5184
 1482 05da 03F11703 		add	r3, r3, #23
 1483 05de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1484 05e0 0133     		adds	r3, r3, #1
 1485 05e2 07F5A252 		add	r2, r7, #5184
 1486 05e6 02F11702 		add	r2, r2, #23
 1487 05ea 1370     		strb	r3, [r2]
 1488              	.L87:
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1489              		.loc 1 418 0 is_stmt 0 discriminator 1
 1490 05ec 07F5A253 		add	r3, r7, #5184
 1491 05f0 03F11503 		add	r3, r3, #21
 1492 05f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1493 05f6 07F11803 		add	r3, r7, #24
 1494 05fa 143B     		subs	r3, r3, #20
 1495 05fc 1B68     		ldr	r3, [r3]
 1496 05fe 1344     		add	r3, r3, r2
 1497 0600 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1498 0602 07F5A252 		add	r2, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 50


 1499 0606 02F11702 		add	r2, r2, #23
 1500 060a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1501 060c 9A42     		cmp	r2, r3
 1502 060e FFF472AF 		bcc	.L90
 423:..\src/command_processing.c ****                         }
 424:..\src/command_processing.c ****                     }
 425:..\src/command_processing.c ****                     break;
 1503              		.loc 1 425 0 is_stmt 1
 1504 0612 01F0FEBE 		b	.L103
 1505              	.L76:
 426:..\src/command_processing.c ****                 case TYPE_INT32: 
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1506              		.loc 1 427 0
 1507 0616 0023     		movs	r3, #0
 1508 0618 07F5A252 		add	r2, r7, #5184
 1509 061c 02F11702 		add	r2, r2, #23
 1510 0620 1370     		strb	r3, [r2]
 1511 0622 78E0     		b	.L91
 1512              	.L94:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1513              		.loc 1 428 0
 1514 0624 07F5A253 		add	r3, r7, #5184
 1515 0628 03F11703 		add	r3, r3, #23
 1516 062c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1517 062e 07F5A252 		add	r2, r7, #5184
 1518 0632 02F11302 		add	r2, r2, #19
 1519 0636 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1520 0638 02FB03F3 		mul	r3, r2, r3
 1521 063c 1A46     		mov	r2, r3
 1522 063e 07F5A253 		add	r3, r7, #5184
 1523 0642 03F10803 		add	r3, r3, #8
 1524 0646 1B68     		ldr	r3, [r3]
 1525 0648 1344     		add	r3, r3, r2
 1526 064a 07F5A252 		add	r2, r7, #5184
 1527 064e 02F10402 		add	r2, r2, #4
 1528 0652 1360     		str	r3, [r2]
 429:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1529              		.loc 1 429 0
 1530 0654 07F5A253 		add	r3, r7, #5184
 1531 0658 03F10403 		add	r3, r3, #4
 1532 065c 1B68     		ldr	r3, [r3]
 1533 065e 1A68     		ldr	r2, [r3]
 1534 0660 07F11803 		add	r3, r7, #24
 1535 0664 1A60     		str	r2, [r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1536              		.loc 1 430 0
 1537 0666 0023     		movs	r3, #0
 1538 0668 07F5A252 		add	r2, r7, #5184
 1539 066c 02F11602 		add	r2, r2, #22
 1540 0670 1370     		strb	r3, [r2]
 1541 0672 39E0     		b	.L92
 1542              	.L93:
 431:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1543              		.loc 1 431 0 discriminator 3
 1544 0674 07F5A253 		add	r3, r7, #5184
 1545 0678 03F11503 		add	r3, r3, #21
 1546 067c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 51


 1547 067e 3222     		movs	r2, #50
 1548 0680 02FB03F3 		mul	r3, r2, r3
 1549 0684 1A1D     		adds	r2, r3, #4
 1550 0686 07F5A253 		add	r3, r7, #5184
 1551 068a 03F11703 		add	r3, r3, #23
 1552 068e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1553 0690 07F5A251 		add	r1, r7, #5184
 1554 0694 01F11301 		add	r1, r1, #19
 1555 0698 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1556 069a 01FB03F3 		mul	r3, r1, r3
 1557 069e 1A44     		add	r2, r2, r3
 1558 06a0 07F5A253 		add	r3, r7, #5184
 1559 06a4 03F11303 		add	r3, r3, #19
 1560 06a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1561 06aa 1A44     		add	r2, r2, r3
 1562 06ac 07F5A253 		add	r3, r7, #5184
 1563 06b0 03F11603 		add	r3, r3, #22
 1564 06b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1565 06b6 D31A     		subs	r3, r2, r3
 1566 06b8 013B     		subs	r3, r3, #1
 1567 06ba 07F5A252 		add	r2, r7, #5184
 1568 06be 02F11602 		add	r2, r2, #22
 1569 06c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1570 06c4 07F11801 		add	r1, r7, #24
 1571 06c8 0A44     		add	r2, r2, r1
 1572 06ca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1573 06cc 07F15802 		add	r2, r7, #88
 1574 06d0 D154     		strb	r1, [r2, r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1575              		.loc 1 430 0 discriminator 3
 1576 06d2 07F5A253 		add	r3, r7, #5184
 1577 06d6 03F11603 		add	r3, r3, #22
 1578 06da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1579 06dc 0133     		adds	r3, r3, #1
 1580 06de 07F5A252 		add	r2, r7, #5184
 1581 06e2 02F11602 		add	r2, r2, #22
 1582 06e6 1370     		strb	r3, [r2]
 1583              	.L92:
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1584              		.loc 1 430 0 is_stmt 0 discriminator 1
 1585 06e8 07F5A253 		add	r3, r7, #5184
 1586 06ec 03F11603 		add	r3, r3, #22
 1587 06f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1588 06f2 07F5A253 		add	r3, r7, #5184
 1589 06f6 03F11303 		add	r3, r3, #19
 1590 06fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1591 06fc 9A42     		cmp	r2, r3
 1592 06fe B9D3     		bcc	.L93
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1593              		.loc 1 427 0 is_stmt 1 discriminator 2
 1594 0700 07F5A253 		add	r3, r7, #5184
 1595 0704 03F11703 		add	r3, r3, #23
 1596 0708 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1597 070a 0133     		adds	r3, r3, #1
 1598 070c 07F5A252 		add	r2, r7, #5184
 1599 0710 02F11702 		add	r2, r2, #23
 1600 0714 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 52


 1601              	.L91:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1602              		.loc 1 427 0 is_stmt 0 discriminator 1
 1603 0716 07F5A253 		add	r3, r7, #5184
 1604 071a 03F11503 		add	r3, r3, #21
 1605 071e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1606 0720 07F11803 		add	r3, r7, #24
 1607 0724 143B     		subs	r3, r3, #20
 1608 0726 1B68     		ldr	r3, [r3]
 1609 0728 1344     		add	r3, r3, r2
 1610 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1611 072c 07F5A252 		add	r2, r7, #5184
 1612 0730 02F11702 		add	r2, r2, #23
 1613 0734 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1614 0736 9A42     		cmp	r2, r3
 1615 0738 FFF474AF 		bcc	.L94
 432:..\src/command_processing.c ****                         }
 433:..\src/command_processing.c ****                     }
 434:..\src/command_processing.c ****                     break;
 1616              		.loc 1 434 0 is_stmt 1
 1617 073c 01F069BE 		b	.L103
 1618              	.L77:
 435:..\src/command_processing.c ****                 case TYPE_UINT32: 
 436:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1619              		.loc 1 436 0
 1620 0740 0023     		movs	r3, #0
 1621 0742 07F5A252 		add	r2, r7, #5184
 1622 0746 02F11702 		add	r2, r2, #23
 1623 074a 1370     		strb	r3, [r2]
 1624 074c 7AE0     		b	.L95
 1625              	.L98:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1626              		.loc 1 437 0
 1627 074e 07F5A253 		add	r3, r7, #5184
 1628 0752 03F11703 		add	r3, r3, #23
 1629 0756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1630 0758 07F5A252 		add	r2, r7, #5184
 1631 075c 02F11302 		add	r2, r2, #19
 1632 0760 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1633 0762 02FB03F3 		mul	r3, r2, r3
 1634 0766 1A46     		mov	r2, r3
 1635 0768 07F5A253 		add	r3, r7, #5184
 1636 076c 03F10803 		add	r3, r3, #8
 1637 0770 1B68     		ldr	r3, [r3]
 1638 0772 1344     		add	r3, r3, r2
 1639 0774 07F5A252 		add	r2, r7, #5184
 1640 0778 02F10402 		add	r2, r2, #4
 1641 077c 1360     		str	r3, [r2]
 438:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1642              		.loc 1 438 0
 1643 077e 07F5A253 		add	r3, r7, #5184
 1644 0782 03F10403 		add	r3, r3, #4
 1645 0786 1B68     		ldr	r3, [r3]
 1646 0788 1A68     		ldr	r2, [r3]
 1647 078a 07F11803 		add	r3, r7, #24
 1648 078e 043B     		subs	r3, r3, #4
 1649 0790 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 53


 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1650              		.loc 1 439 0
 1651 0792 0023     		movs	r3, #0
 1652 0794 07F5A252 		add	r2, r7, #5184
 1653 0798 02F11602 		add	r2, r2, #22
 1654 079c 1370     		strb	r3, [r2]
 1655 079e 3AE0     		b	.L96
 1656              	.L97:
 440:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1657              		.loc 1 440 0 discriminator 3
 1658 07a0 07F5A253 		add	r3, r7, #5184
 1659 07a4 03F11503 		add	r3, r3, #21
 1660 07a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1661 07aa 3222     		movs	r2, #50
 1662 07ac 02FB03F3 		mul	r3, r2, r3
 1663 07b0 1A1D     		adds	r2, r3, #4
 1664 07b2 07F5A253 		add	r3, r7, #5184
 1665 07b6 03F11703 		add	r3, r3, #23
 1666 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1667 07bc 07F5A251 		add	r1, r7, #5184
 1668 07c0 01F11301 		add	r1, r1, #19
 1669 07c4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1670 07c6 01FB03F3 		mul	r3, r1, r3
 1671 07ca 1A44     		add	r2, r2, r3
 1672 07cc 07F5A253 		add	r3, r7, #5184
 1673 07d0 03F11303 		add	r3, r3, #19
 1674 07d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1675 07d6 1A44     		add	r2, r2, r3
 1676 07d8 07F5A253 		add	r3, r7, #5184
 1677 07dc 03F11603 		add	r3, r3, #22
 1678 07e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1679 07e2 D31A     		subs	r3, r2, r3
 1680 07e4 5A1E     		subs	r2, r3, #1
 1681 07e6 07F5A253 		add	r3, r7, #5184
 1682 07ea 03F11603 		add	r3, r3, #22
 1683 07ee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1684 07f0 07F11803 		add	r3, r7, #24
 1685 07f4 043B     		subs	r3, r3, #4
 1686 07f6 0B44     		add	r3, r3, r1
 1687 07f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1688 07fa 07F15803 		add	r3, r7, #88
 1689 07fe 9954     		strb	r1, [r3, r2]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1690              		.loc 1 439 0 discriminator 3
 1691 0800 07F5A253 		add	r3, r7, #5184
 1692 0804 03F11603 		add	r3, r3, #22
 1693 0808 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1694 080a 0133     		adds	r3, r3, #1
 1695 080c 07F5A252 		add	r2, r7, #5184
 1696 0810 02F11602 		add	r2, r2, #22
 1697 0814 1370     		strb	r3, [r2]
 1698              	.L96:
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1699              		.loc 1 439 0 is_stmt 0 discriminator 1
 1700 0816 07F5A253 		add	r3, r7, #5184
 1701 081a 03F11603 		add	r3, r3, #22
 1702 081e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 54


 1703 0820 07F5A253 		add	r3, r7, #5184
 1704 0824 03F11303 		add	r3, r3, #19
 1705 0828 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1706 082a 9A42     		cmp	r2, r3
 1707 082c B8D3     		bcc	.L97
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1708              		.loc 1 436 0 is_stmt 1 discriminator 2
 1709 082e 07F5A253 		add	r3, r7, #5184
 1710 0832 03F11703 		add	r3, r3, #23
 1711 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1712 0838 0133     		adds	r3, r3, #1
 1713 083a 07F5A252 		add	r2, r7, #5184
 1714 083e 02F11702 		add	r2, r2, #23
 1715 0842 1370     		strb	r3, [r2]
 1716              	.L95:
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1717              		.loc 1 436 0 is_stmt 0 discriminator 1
 1718 0844 07F5A253 		add	r3, r7, #5184
 1719 0848 03F11503 		add	r3, r3, #21
 1720 084c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1721 084e 07F11803 		add	r3, r7, #24
 1722 0852 143B     		subs	r3, r3, #20
 1723 0854 1B68     		ldr	r3, [r3]
 1724 0856 1344     		add	r3, r3, r2
 1725 0858 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1726 085a 07F5A252 		add	r2, r7, #5184
 1727 085e 02F11702 		add	r2, r2, #23
 1728 0862 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1729 0864 9A42     		cmp	r2, r3
 1730 0866 FFF472AF 		bcc	.L98
 441:..\src/command_processing.c ****                         }
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1731              		.loc 1 443 0 is_stmt 1
 1732 086a 01F0D2BD 		b	.L103
 1733              	.L78:
 444:..\src/command_processing.c ****                     
 445:..\src/command_processing.c ****                 case TYPE_FLOAT:
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1734              		.loc 1 446 0
 1735 086e 0023     		movs	r3, #0
 1736 0870 07F5A252 		add	r2, r7, #5184
 1737 0874 02F11702 		add	r2, r2, #23
 1738 0878 1370     		strb	r3, [r2]
 1739 087a 7AE0     		b	.L99
 1740              	.L102:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1741              		.loc 1 447 0
 1742 087c 07F5A253 		add	r3, r7, #5184
 1743 0880 03F11703 		add	r3, r3, #23
 1744 0884 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1745 0886 07F5A252 		add	r2, r7, #5184
 1746 088a 02F11302 		add	r2, r2, #19
 1747 088e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1748 0890 02FB03F3 		mul	r3, r2, r3
 1749 0894 1A46     		mov	r2, r3
 1750 0896 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 55


 1751 089a 03F10803 		add	r3, r3, #8
 1752 089e 1B68     		ldr	r3, [r3]
 1753 08a0 1344     		add	r3, r3, r2
 1754 08a2 07F5A252 		add	r2, r7, #5184
 1755 08a6 02F10402 		add	r2, r2, #4
 1756 08aa 1360     		str	r3, [r2]
 448:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1757              		.loc 1 448 0
 1758 08ac 07F5A253 		add	r3, r7, #5184
 1759 08b0 03F10403 		add	r3, r3, #4
 1760 08b4 1B68     		ldr	r3, [r3]
 1761 08b6 1A68     		ldr	r2, [r3]	@ float
 1762 08b8 07F13803 		add	r3, r7, #56
 1763 08bc 183B     		subs	r3, r3, #24
 1764 08be 1A60     		str	r2, [r3]	@ float
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1765              		.loc 1 449 0
 1766 08c0 0023     		movs	r3, #0
 1767 08c2 07F5A252 		add	r2, r7, #5184
 1768 08c6 02F11602 		add	r2, r2, #22
 1769 08ca 1370     		strb	r3, [r2]
 1770 08cc 3AE0     		b	.L100
 1771              	.L101:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1772              		.loc 1 450 0 discriminator 3
 1773 08ce 07F5A253 		add	r3, r7, #5184
 1774 08d2 03F11503 		add	r3, r3, #21
 1775 08d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1776 08d8 3222     		movs	r2, #50
 1777 08da 02FB03F3 		mul	r3, r2, r3
 1778 08de 1A1D     		adds	r2, r3, #4
 1779 08e0 07F5A253 		add	r3, r7, #5184
 1780 08e4 03F11703 		add	r3, r3, #23
 1781 08e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1782 08ea 07F5A251 		add	r1, r7, #5184
 1783 08ee 01F11301 		add	r1, r1, #19
 1784 08f2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1785 08f4 01FB03F3 		mul	r3, r1, r3
 1786 08f8 1A44     		add	r2, r2, r3
 1787 08fa 07F5A253 		add	r3, r7, #5184
 1788 08fe 03F11303 		add	r3, r3, #19
 1789 0902 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1790 0904 1A44     		add	r2, r2, r3
 1791 0906 07F5A253 		add	r3, r7, #5184
 1792 090a 03F11603 		add	r3, r3, #22
 1793 090e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1794 0910 D31A     		subs	r3, r2, r3
 1795 0912 5A1E     		subs	r2, r3, #1
 1796 0914 07F5A253 		add	r3, r7, #5184
 1797 0918 03F11603 		add	r3, r3, #22
 1798 091c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1799 091e 07F13803 		add	r3, r7, #56
 1800 0922 183B     		subs	r3, r3, #24
 1801 0924 0B44     		add	r3, r3, r1
 1802 0926 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1803 0928 07F15803 		add	r3, r7, #88
 1804 092c 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 56


 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1805              		.loc 1 449 0 discriminator 3
 1806 092e 07F5A253 		add	r3, r7, #5184
 1807 0932 03F11603 		add	r3, r3, #22
 1808 0936 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1809 0938 0133     		adds	r3, r3, #1
 1810 093a 07F5A252 		add	r2, r7, #5184
 1811 093e 02F11602 		add	r2, r2, #22
 1812 0942 1370     		strb	r3, [r2]
 1813              	.L100:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1814              		.loc 1 449 0 is_stmt 0 discriminator 1
 1815 0944 07F5A253 		add	r3, r7, #5184
 1816 0948 03F11603 		add	r3, r3, #22
 1817 094c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1818 094e 07F5A253 		add	r3, r7, #5184
 1819 0952 03F11303 		add	r3, r3, #19
 1820 0956 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1821 0958 9A42     		cmp	r2, r3
 1822 095a B8D3     		bcc	.L101
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1823              		.loc 1 446 0 is_stmt 1 discriminator 2
 1824 095c 07F5A253 		add	r3, r7, #5184
 1825 0960 03F11703 		add	r3, r3, #23
 1826 0964 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1827 0966 0133     		adds	r3, r3, #1
 1828 0968 07F5A252 		add	r2, r7, #5184
 1829 096c 02F11702 		add	r2, r2, #23
 1830 0970 1370     		strb	r3, [r2]
 1831              	.L99:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1832              		.loc 1 446 0 is_stmt 0 discriminator 1
 1833 0972 07F5A253 		add	r3, r7, #5184
 1834 0976 03F11503 		add	r3, r3, #21
 1835 097a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1836 097c 07F11803 		add	r3, r7, #24
 1837 0980 143B     		subs	r3, r3, #20
 1838 0982 1B68     		ldr	r3, [r3]
 1839 0984 1344     		add	r3, r3, r2
 1840 0986 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1841 0988 07F5A252 		add	r2, r7, #5184
 1842 098c 02F11702 		add	r2, r2, #23
 1843 0990 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1844 0992 9A42     		cmp	r2, r3
 1845 0994 FFF472AF 		bcc	.L102
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;   
 1846              		.loc 1 453 0 is_stmt 1 discriminator 7
 1847 0998 00BF     		nop
 1848 099a 01F03ABD 		b	.L103
 1849              	.L69:
 454:..\src/command_processing.c ****             }
 455:..\src/command_processing.c ****         }
 456:..\src/command_processing.c ****         else {
 457:..\src/command_processing.c ****             
 458:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 57


 459:..\src/command_processing.c ****             
 460:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 461:..\src/command_processing.c ****                 switch(idx+1){
 1850              		.loc 1 461 0
 1851 099e 07F5A253 		add	r3, r7, #5184
 1852 09a2 03F11503 		add	r3, r3, #21
 1853 09a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1854 09a8 0133     		adds	r3, r3, #1
 1855 09aa 023B     		subs	r3, r3, #2
 1856 09ac 332B     		cmp	r3, #51
 1857 09ae 01F22F85 		bhi	.L251
 1858 09b2 01A2     		adr	r2, .L106
 1859 09b4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1860              		.p2align 2
 1861              	.L106:
 1862 09b8 890A0000 		.word	.L105+1
 1863 09bc 470F0000 		.word	.L107+1
 1864 09c0 11240000 		.word	.L251+1
 1865 09c4 11240000 		.word	.L251+1
 1866 09c8 11240000 		.word	.L251+1
 1867 09cc 11240000 		.word	.L251+1
 1868 09d0 09140000 		.word	.L108+1
 1869 09d4 11240000 		.word	.L251+1
 1870 09d8 11240000 		.word	.L251+1
 1871 09dc 2D150000 		.word	.L109+1
 1872 09e0 11240000 		.word	.L251+1
 1873 09e4 11240000 		.word	.L251+1
 1874 09e8 11240000 		.word	.L251+1
 1875 09ec 11240000 		.word	.L251+1
 1876 09f0 11240000 		.word	.L251+1
 1877 09f4 11240000 		.word	.L251+1
 1878 09f8 11240000 		.word	.L251+1
 1879 09fc 11240000 		.word	.L251+1
 1880 0a00 11240000 		.word	.L251+1
 1881 0a04 11240000 		.word	.L251+1
 1882 0a08 11240000 		.word	.L251+1
 1883 0a0c E5160000 		.word	.L110+1
 1884 0a10 11240000 		.word	.L251+1
 1885 0a14 11240000 		.word	.L251+1
 1886 0a18 11240000 		.word	.L251+1
 1887 0a1c 11240000 		.word	.L251+1
 1888 0a20 11240000 		.word	.L251+1
 1889 0a24 11240000 		.word	.L251+1
 1890 0a28 11240000 		.word	.L251+1
 1891 0a2c 11240000 		.word	.L251+1
 1892 0a30 11240000 		.word	.L251+1
 1893 0a34 11240000 		.word	.L251+1
 1894 0a38 11240000 		.word	.L251+1
 1895 0a3c 11240000 		.word	.L251+1
 1896 0a40 11240000 		.word	.L251+1
 1897 0a44 11240000 		.word	.L251+1
 1898 0a48 11240000 		.word	.L251+1
 1899 0a4c 11240000 		.word	.L251+1
 1900 0a50 11240000 		.word	.L251+1
 1901 0a54 11240000 		.word	.L251+1
 1902 0a58 11240000 		.word	.L251+1
 1903 0a5c 11240000 		.word	.L251+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 58


 1904 0a60 B3170000 		.word	.L111+1
 1905 0a64 711C0000 		.word	.L112+1
 1906 0a68 11240000 		.word	.L251+1
 1907 0a6c 11240000 		.word	.L251+1
 1908 0a70 11240000 		.word	.L251+1
 1909 0a74 11240000 		.word	.L251+1
 1910 0a78 31210000 		.word	.L113+1
 1911 0a7c 11240000 		.word	.L251+1
 1912 0a80 11240000 		.word	.L251+1
 1913 0a84 53220000 		.word	.L114+1
 1914              		.p2align 1
 1915              	.L105:
 462:..\src/command_processing.c ****                     case 2:         // Position PID
 463:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1916              		.loc 1 463 0
 1917 0a88 07F5A253 		add	r3, r7, #5184
 1918 0a8c 03F10F03 		add	r3, r3, #15
 1919 0a90 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1920 0a92 AA49     		ldr	r1, .L255
 1921 0a94 1346     		mov	r3, r2
 1922 0a96 DB00     		lsls	r3, r3, #3
 1923 0a98 9B1A     		subs	r3, r3, r2
 1924 0a9a 1B01     		lsls	r3, r3, #4
 1925 0a9c 0B44     		add	r3, r3, r1
 1926 0a9e 03F20F13 		addw	r3, r3, #271
 1927 0aa2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1928 0aa4 032B     		cmp	r3, #3
 1929 0aa6 00F02681 		beq	.L115
 464:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1930              		.loc 1 464 0
 1931 0aaa 07F5A253 		add	r3, r7, #5184
 1932 0aae 03F10F03 		add	r3, r3, #15
 1933 0ab2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1934 0ab4 A149     		ldr	r1, .L255
 1935 0ab6 1346     		mov	r3, r2
 1936 0ab8 DB00     		lsls	r3, r3, #3
 1937 0aba 9B1A     		subs	r3, r3, r2
 1938 0abc 1B01     		lsls	r3, r3, #4
 1939 0abe 0B44     		add	r3, r3, r1
 1940 0ac0 B033     		adds	r3, r3, #176
 1941 0ac2 1B68     		ldr	r3, [r3]
 1942 0ac4 1846     		mov	r0, r3
 1943 0ac6 FFF7FEFF 		bl	__aeabi_i2f
 1944 0aca 0346     		mov	r3, r0
 1945 0acc 4FF08F41 		mov	r1, #1199570944
 1946 0ad0 1846     		mov	r0, r3
 1947 0ad2 FFF7FEFF 		bl	__aeabi_fdiv
 1948 0ad6 0346     		mov	r3, r0
 1949 0ad8 1A46     		mov	r2, r3
 1950 0ada 07F13803 		add	r3, r7, #56
 1951 0ade 183B     		subs	r3, r3, #24
 1952 0ae0 1A60     		str	r2, [r3]	@ float
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1953              		.loc 1 465 0
 1954 0ae2 0023     		movs	r3, #0
 1955 0ae4 07F5A252 		add	r2, r7, #5184
 1956 0ae8 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 59


 1957 0aec 1370     		strb	r3, [r2]
 1958 0aee 2DE0     		b	.L116
 1959              	.L117:
 466:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1960              		.loc 1 466 0 discriminator 3
 1961 0af0 07F5A253 		add	r3, r7, #5184
 1962 0af4 03F11503 		add	r3, r3, #21
 1963 0af8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1964 0afa 3222     		movs	r2, #50
 1965 0afc 02FB03F3 		mul	r3, r2, r3
 1966 0b00 1A1D     		adds	r2, r3, #4
 1967 0b02 07F5A253 		add	r3, r7, #5184
 1968 0b06 03F11303 		add	r3, r3, #19
 1969 0b0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1970 0b0c 1A44     		add	r2, r2, r3
 1971 0b0e 07F5A253 		add	r3, r7, #5184
 1972 0b12 03F11703 		add	r3, r3, #23
 1973 0b16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1974 0b18 D31A     		subs	r3, r2, r3
 1975 0b1a 5A1E     		subs	r2, r3, #1
 1976 0b1c 07F5A253 		add	r3, r7, #5184
 1977 0b20 03F11703 		add	r3, r3, #23
 1978 0b24 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1979 0b26 07F13803 		add	r3, r7, #56
 1980 0b2a 183B     		subs	r3, r3, #24
 1981 0b2c 0B44     		add	r3, r3, r1
 1982 0b2e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1983 0b30 07F15803 		add	r3, r7, #88
 1984 0b34 9954     		strb	r1, [r3, r2]
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1985              		.loc 1 465 0 discriminator 3
 1986 0b36 07F5A253 		add	r3, r7, #5184
 1987 0b3a 03F11703 		add	r3, r3, #23
 1988 0b3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1989 0b40 0133     		adds	r3, r3, #1
 1990 0b42 07F5A252 		add	r2, r7, #5184
 1991 0b46 02F11702 		add	r2, r2, #23
 1992 0b4a 1370     		strb	r3, [r2]
 1993              	.L116:
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1994              		.loc 1 465 0 is_stmt 0 discriminator 1
 1995 0b4c 07F5A253 		add	r3, r7, #5184
 1996 0b50 03F11703 		add	r3, r3, #23
 1997 0b54 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1998 0b56 07F5A253 		add	r3, r7, #5184
 1999 0b5a 03F11303 		add	r3, r3, #19
 2000 0b5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2001 0b60 9A42     		cmp	r2, r3
 2002 0b62 C5D3     		bcc	.L117
 467:..\src/command_processing.c ****                             }
 468:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2003              		.loc 1 468 0 is_stmt 1
 2004 0b64 07F5A253 		add	r3, r7, #5184
 2005 0b68 03F10F03 		add	r3, r3, #15
 2006 0b6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2007 0b6e 7349     		ldr	r1, .L255
 2008 0b70 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 60


 2009 0b72 DB00     		lsls	r3, r3, #3
 2010 0b74 9B1A     		subs	r3, r3, r2
 2011 0b76 1B01     		lsls	r3, r3, #4
 2012 0b78 0B44     		add	r3, r3, r1
 2013 0b7a B433     		adds	r3, r3, #180
 2014 0b7c 1B68     		ldr	r3, [r3]
 2015 0b7e 1846     		mov	r0, r3
 2016 0b80 FFF7FEFF 		bl	__aeabi_i2f
 2017 0b84 0346     		mov	r3, r0
 2018 0b86 4FF08F41 		mov	r1, #1199570944
 2019 0b8a 1846     		mov	r0, r3
 2020 0b8c FFF7FEFF 		bl	__aeabi_fdiv
 2021 0b90 0346     		mov	r3, r0
 2022 0b92 1A46     		mov	r2, r3
 2023 0b94 07F13803 		add	r3, r7, #56
 2024 0b98 183B     		subs	r3, r3, #24
 2025 0b9a 1A60     		str	r2, [r3]	@ float
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2026              		.loc 1 469 0
 2027 0b9c 0023     		movs	r3, #0
 2028 0b9e 07F5A252 		add	r2, r7, #5184
 2029 0ba2 02F11702 		add	r2, r2, #23
 2030 0ba6 1370     		strb	r3, [r2]
 2031 0ba8 33E0     		b	.L118
 2032              	.L119:
 470:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2033              		.loc 1 470 0 discriminator 3
 2034 0baa 07F5A253 		add	r3, r7, #5184
 2035 0bae 03F11503 		add	r3, r3, #21
 2036 0bb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2037 0bb4 3222     		movs	r2, #50
 2038 0bb6 02FB03F3 		mul	r3, r2, r3
 2039 0bba 1A1D     		adds	r2, r3, #4
 2040 0bbc 07F5A253 		add	r3, r7, #5184
 2041 0bc0 03F11303 		add	r3, r3, #19
 2042 0bc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2043 0bc6 1A44     		add	r2, r2, r3
 2044 0bc8 07F5A253 		add	r3, r7, #5184
 2045 0bcc 03F11303 		add	r3, r3, #19
 2046 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2047 0bd2 1A44     		add	r2, r2, r3
 2048 0bd4 07F5A253 		add	r3, r7, #5184
 2049 0bd8 03F11703 		add	r3, r3, #23
 2050 0bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2051 0bde D31A     		subs	r3, r2, r3
 2052 0be0 5A1E     		subs	r2, r3, #1
 2053 0be2 07F5A253 		add	r3, r7, #5184
 2054 0be6 03F11703 		add	r3, r3, #23
 2055 0bea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2056 0bec 07F13803 		add	r3, r7, #56
 2057 0bf0 183B     		subs	r3, r3, #24
 2058 0bf2 0B44     		add	r3, r3, r1
 2059 0bf4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2060 0bf6 07F15803 		add	r3, r7, #88
 2061 0bfa 9954     		strb	r1, [r3, r2]
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2062              		.loc 1 469 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 61


 2063 0bfc 07F5A253 		add	r3, r7, #5184
 2064 0c00 03F11703 		add	r3, r3, #23
 2065 0c04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2066 0c06 0133     		adds	r3, r3, #1
 2067 0c08 07F5A252 		add	r2, r7, #5184
 2068 0c0c 02F11702 		add	r2, r2, #23
 2069 0c10 1370     		strb	r3, [r2]
 2070              	.L118:
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2071              		.loc 1 469 0 is_stmt 0 discriminator 1
 2072 0c12 07F5A253 		add	r3, r7, #5184
 2073 0c16 03F11703 		add	r3, r3, #23
 2074 0c1a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2075 0c1c 07F5A253 		add	r3, r7, #5184
 2076 0c20 03F11303 		add	r3, r3, #19
 2077 0c24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2078 0c26 9A42     		cmp	r2, r3
 2079 0c28 BFD3     		bcc	.L119
 471:..\src/command_processing.c ****                             }
 472:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2080              		.loc 1 472 0 is_stmt 1
 2081 0c2a 07F5A253 		add	r3, r7, #5184
 2082 0c2e 03F10F03 		add	r3, r3, #15
 2083 0c32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2084 0c34 4149     		ldr	r1, .L255
 2085 0c36 1346     		mov	r3, r2
 2086 0c38 DB00     		lsls	r3, r3, #3
 2087 0c3a 9B1A     		subs	r3, r3, r2
 2088 0c3c 1B01     		lsls	r3, r3, #4
 2089 0c3e 0B44     		add	r3, r3, r1
 2090 0c40 B833     		adds	r3, r3, #184
 2091 0c42 1B68     		ldr	r3, [r3]
 2092 0c44 1846     		mov	r0, r3
 2093 0c46 FFF7FEFF 		bl	__aeabi_i2f
 2094 0c4a 0346     		mov	r3, r0
 2095 0c4c 4FF08F41 		mov	r1, #1199570944
 2096 0c50 1846     		mov	r0, r3
 2097 0c52 FFF7FEFF 		bl	__aeabi_fdiv
 2098 0c56 0346     		mov	r3, r0
 2099 0c58 1A46     		mov	r2, r3
 2100 0c5a 07F13803 		add	r3, r7, #56
 2101 0c5e 183B     		subs	r3, r3, #24
 2102 0c60 1A60     		str	r2, [r3]	@ float
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2103              		.loc 1 473 0
 2104 0c62 0023     		movs	r3, #0
 2105 0c64 07F5A252 		add	r2, r7, #5184
 2106 0c68 02F11702 		add	r2, r2, #23
 2107 0c6c 1370     		strb	r3, [r2]
 2108 0c6e 34E0     		b	.L120
 2109              	.L121:
 474:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2110              		.loc 1 474 0 discriminator 3
 2111 0c70 07F5A253 		add	r3, r7, #5184
 2112 0c74 03F11503 		add	r3, r3, #21
 2113 0c78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2114 0c7a 3222     		movs	r2, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 62


 2115 0c7c 02FB03F3 		mul	r3, r2, r3
 2116 0c80 1A1D     		adds	r2, r3, #4
 2117 0c82 07F5A253 		add	r3, r7, #5184
 2118 0c86 03F11303 		add	r3, r3, #19
 2119 0c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2120 0c8c 5B00     		lsls	r3, r3, #1
 2121 0c8e 1A44     		add	r2, r2, r3
 2122 0c90 07F5A253 		add	r3, r7, #5184
 2123 0c94 03F11303 		add	r3, r3, #19
 2124 0c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2125 0c9a 1A44     		add	r2, r2, r3
 2126 0c9c 07F5A253 		add	r3, r7, #5184
 2127 0ca0 03F11703 		add	r3, r3, #23
 2128 0ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2129 0ca6 D31A     		subs	r3, r2, r3
 2130 0ca8 5A1E     		subs	r2, r3, #1
 2131 0caa 07F5A253 		add	r3, r7, #5184
 2132 0cae 03F11703 		add	r3, r3, #23
 2133 0cb2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2134 0cb4 07F13803 		add	r3, r7, #56
 2135 0cb8 183B     		subs	r3, r3, #24
 2136 0cba 0B44     		add	r3, r3, r1
 2137 0cbc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2138 0cbe 07F15803 		add	r3, r7, #88
 2139 0cc2 9954     		strb	r1, [r3, r2]
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2140              		.loc 1 473 0 discriminator 3
 2141 0cc4 07F5A253 		add	r3, r7, #5184
 2142 0cc8 03F11703 		add	r3, r3, #23
 2143 0ccc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2144 0cce 0133     		adds	r3, r3, #1
 2145 0cd0 07F5A252 		add	r2, r7, #5184
 2146 0cd4 02F11702 		add	r2, r2, #23
 2147 0cd8 1370     		strb	r3, [r2]
 2148              	.L120:
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2149              		.loc 1 473 0 is_stmt 0 discriminator 1
 2150 0cda 07F5A253 		add	r3, r7, #5184
 2151 0cde 03F11703 		add	r3, r3, #23
 2152 0ce2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2153 0ce4 07F5A253 		add	r3, r7, #5184
 2154 0ce8 03F11303 		add	r3, r3, #19
 2155 0cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2156 0cee 9A42     		cmp	r2, r3
 2157 0cf0 BED3     		bcc	.L121
 475:..\src/command_processing.c ****                             } 
 476:..\src/command_processing.c ****                         }
 477:..\src/command_processing.c ****                         else {
 478:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 480:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 481:..\src/command_processing.c ****                             }
 482:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 483:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 484:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 485:..\src/command_processing.c ****                             }
 486:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 63


 487:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 488:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 489:..\src/command_processing.c ****                             }
 490:..\src/command_processing.c ****                         }
 491:..\src/command_processing.c ****                         break;
 2158              		.loc 1 491 0 is_stmt 1
 2159 0cf2 01F08EBB 		b	.L103
 2160              	.L115:
 478:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2161              		.loc 1 478 0
 2162 0cf6 07F5A253 		add	r3, r7, #5184
 2163 0cfa 03F10F03 		add	r3, r3, #15
 2164 0cfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2165 0d00 0E49     		ldr	r1, .L255
 2166 0d02 1346     		mov	r3, r2
 2167 0d04 DB00     		lsls	r3, r3, #3
 2168 0d06 9B1A     		subs	r3, r3, r2
 2169 0d08 1B01     		lsls	r3, r3, #4
 2170 0d0a 0B44     		add	r3, r3, r1
 2171 0d0c C833     		adds	r3, r3, #200
 2172 0d0e 1B68     		ldr	r3, [r3]
 2173 0d10 1846     		mov	r0, r3
 2174 0d12 FFF7FEFF 		bl	__aeabi_i2f
 2175 0d16 0346     		mov	r3, r0
 2176 0d18 4FF08F41 		mov	r1, #1199570944
 2177 0d1c 1846     		mov	r0, r3
 2178 0d1e FFF7FEFF 		bl	__aeabi_fdiv
 2179 0d22 0346     		mov	r3, r0
 2180 0d24 1A46     		mov	r2, r3
 2181 0d26 07F13803 		add	r3, r7, #56
 2182 0d2a 183B     		subs	r3, r3, #24
 2183 0d2c 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2184              		.loc 1 479 0
 2185 0d2e 0023     		movs	r3, #0
 2186 0d30 07F5A252 		add	r2, r7, #5184
 2187 0d34 02F11702 		add	r2, r2, #23
 2188 0d38 1370     		strb	r3, [r2]
 2189 0d3a 2FE0     		b	.L123
 2190              	.L256:
 2191              		.align	2
 2192              	.L255:
 2193 0d3c 00000000 		.word	c_mem
 2194              	.L124:
 480:..\src/command_processing.c ****                             }
 2195              		.loc 1 480 0 discriminator 3
 2196 0d40 07F5A253 		add	r3, r7, #5184
 2197 0d44 03F11503 		add	r3, r3, #21
 2198 0d48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2199 0d4a 3222     		movs	r2, #50
 2200 0d4c 02FB03F3 		mul	r3, r2, r3
 2201 0d50 1A1D     		adds	r2, r3, #4
 2202 0d52 07F5A253 		add	r3, r7, #5184
 2203 0d56 03F11303 		add	r3, r3, #19
 2204 0d5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2205 0d5c 1A44     		add	r2, r2, r3
 2206 0d5e 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 64


 2207 0d62 03F11703 		add	r3, r3, #23
 2208 0d66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 0d68 D31A     		subs	r3, r2, r3
 2210 0d6a 5A1E     		subs	r2, r3, #1
 2211 0d6c 07F5A253 		add	r3, r7, #5184
 2212 0d70 03F11703 		add	r3, r3, #23
 2213 0d74 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2214 0d76 07F13803 		add	r3, r7, #56
 2215 0d7a 183B     		subs	r3, r3, #24
 2216 0d7c 0B44     		add	r3, r3, r1
 2217 0d7e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2218 0d80 07F15803 		add	r3, r7, #88
 2219 0d84 9954     		strb	r1, [r3, r2]
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2220              		.loc 1 479 0 discriminator 3
 2221 0d86 07F5A253 		add	r3, r7, #5184
 2222 0d8a 03F11703 		add	r3, r3, #23
 2223 0d8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2224 0d90 0133     		adds	r3, r3, #1
 2225 0d92 07F5A252 		add	r2, r7, #5184
 2226 0d96 02F11702 		add	r2, r2, #23
 2227 0d9a 1370     		strb	r3, [r2]
 2228              	.L123:
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2229              		.loc 1 479 0 is_stmt 0 discriminator 1
 2230 0d9c 07F5A253 		add	r3, r7, #5184
 2231 0da0 03F11703 		add	r3, r3, #23
 2232 0da4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2233 0da6 07F5A253 		add	r3, r7, #5184
 2234 0daa 03F11303 		add	r3, r3, #19
 2235 0dae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2236 0db0 9A42     		cmp	r2, r3
 2237 0db2 C5D3     		bcc	.L124
 482:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2238              		.loc 1 482 0 is_stmt 1
 2239 0db4 07F5A253 		add	r3, r7, #5184
 2240 0db8 03F10F03 		add	r3, r3, #15
 2241 0dbc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2242 0dbe AA49     		ldr	r1, .L257
 2243 0dc0 1346     		mov	r3, r2
 2244 0dc2 DB00     		lsls	r3, r3, #3
 2245 0dc4 9B1A     		subs	r3, r3, r2
 2246 0dc6 1B01     		lsls	r3, r3, #4
 2247 0dc8 0B44     		add	r3, r3, r1
 2248 0dca CC33     		adds	r3, r3, #204
 2249 0dcc 1B68     		ldr	r3, [r3]
 2250 0dce 1846     		mov	r0, r3
 2251 0dd0 FFF7FEFF 		bl	__aeabi_i2f
 2252 0dd4 0346     		mov	r3, r0
 2253 0dd6 4FF08F41 		mov	r1, #1199570944
 2254 0dda 1846     		mov	r0, r3
 2255 0ddc FFF7FEFF 		bl	__aeabi_fdiv
 2256 0de0 0346     		mov	r3, r0
 2257 0de2 1A46     		mov	r2, r3
 2258 0de4 07F13803 		add	r3, r7, #56
 2259 0de8 183B     		subs	r3, r3, #24
 2260 0dea 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 65


 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2261              		.loc 1 483 0
 2262 0dec 0023     		movs	r3, #0
 2263 0dee 07F5A252 		add	r2, r7, #5184
 2264 0df2 02F11702 		add	r2, r2, #23
 2265 0df6 1370     		strb	r3, [r2]
 2266 0df8 33E0     		b	.L125
 2267              	.L126:
 484:..\src/command_processing.c ****                             }
 2268              		.loc 1 484 0 discriminator 3
 2269 0dfa 07F5A253 		add	r3, r7, #5184
 2270 0dfe 03F11503 		add	r3, r3, #21
 2271 0e02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2272 0e04 3222     		movs	r2, #50
 2273 0e06 02FB03F3 		mul	r3, r2, r3
 2274 0e0a 1A1D     		adds	r2, r3, #4
 2275 0e0c 07F5A253 		add	r3, r7, #5184
 2276 0e10 03F11303 		add	r3, r3, #19
 2277 0e14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2278 0e16 1A44     		add	r2, r2, r3
 2279 0e18 07F5A253 		add	r3, r7, #5184
 2280 0e1c 03F11303 		add	r3, r3, #19
 2281 0e20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2282 0e22 1A44     		add	r2, r2, r3
 2283 0e24 07F5A253 		add	r3, r7, #5184
 2284 0e28 03F11703 		add	r3, r3, #23
 2285 0e2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2286 0e2e D31A     		subs	r3, r2, r3
 2287 0e30 5A1E     		subs	r2, r3, #1
 2288 0e32 07F5A253 		add	r3, r7, #5184
 2289 0e36 03F11703 		add	r3, r3, #23
 2290 0e3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2291 0e3c 07F13803 		add	r3, r7, #56
 2292 0e40 183B     		subs	r3, r3, #24
 2293 0e42 0B44     		add	r3, r3, r1
 2294 0e44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2295 0e46 07F15803 		add	r3, r7, #88
 2296 0e4a 9954     		strb	r1, [r3, r2]
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2297              		.loc 1 483 0 discriminator 3
 2298 0e4c 07F5A253 		add	r3, r7, #5184
 2299 0e50 03F11703 		add	r3, r3, #23
 2300 0e54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2301 0e56 0133     		adds	r3, r3, #1
 2302 0e58 07F5A252 		add	r2, r7, #5184
 2303 0e5c 02F11702 		add	r2, r2, #23
 2304 0e60 1370     		strb	r3, [r2]
 2305              	.L125:
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2306              		.loc 1 483 0 is_stmt 0 discriminator 1
 2307 0e62 07F5A253 		add	r3, r7, #5184
 2308 0e66 03F11703 		add	r3, r3, #23
 2309 0e6a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2310 0e6c 07F5A253 		add	r3, r7, #5184
 2311 0e70 03F11303 		add	r3, r3, #19
 2312 0e74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2313 0e76 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 66


 2314 0e78 BFD3     		bcc	.L126
 486:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2315              		.loc 1 486 0 is_stmt 1
 2316 0e7a 07F5A253 		add	r3, r7, #5184
 2317 0e7e 03F10F03 		add	r3, r3, #15
 2318 0e82 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2319 0e84 7849     		ldr	r1, .L257
 2320 0e86 1346     		mov	r3, r2
 2321 0e88 DB00     		lsls	r3, r3, #3
 2322 0e8a 9B1A     		subs	r3, r3, r2
 2323 0e8c 1B01     		lsls	r3, r3, #4
 2324 0e8e 0B44     		add	r3, r3, r1
 2325 0e90 D033     		adds	r3, r3, #208
 2326 0e92 1B68     		ldr	r3, [r3]
 2327 0e94 1846     		mov	r0, r3
 2328 0e96 FFF7FEFF 		bl	__aeabi_i2f
 2329 0e9a 0346     		mov	r3, r0
 2330 0e9c 4FF08F41 		mov	r1, #1199570944
 2331 0ea0 1846     		mov	r0, r3
 2332 0ea2 FFF7FEFF 		bl	__aeabi_fdiv
 2333 0ea6 0346     		mov	r3, r0
 2334 0ea8 1A46     		mov	r2, r3
 2335 0eaa 07F13803 		add	r3, r7, #56
 2336 0eae 183B     		subs	r3, r3, #24
 2337 0eb0 1A60     		str	r2, [r3]	@ float
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2338              		.loc 1 487 0
 2339 0eb2 0023     		movs	r3, #0
 2340 0eb4 07F5A252 		add	r2, r7, #5184
 2341 0eb8 02F11702 		add	r2, r2, #23
 2342 0ebc 1370     		strb	r3, [r2]
 2343 0ebe 34E0     		b	.L127
 2344              	.L128:
 488:..\src/command_processing.c ****                             }
 2345              		.loc 1 488 0 discriminator 3
 2346 0ec0 07F5A253 		add	r3, r7, #5184
 2347 0ec4 03F11503 		add	r3, r3, #21
 2348 0ec8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2349 0eca 3222     		movs	r2, #50
 2350 0ecc 02FB03F3 		mul	r3, r2, r3
 2351 0ed0 1A1D     		adds	r2, r3, #4
 2352 0ed2 07F5A253 		add	r3, r7, #5184
 2353 0ed6 03F11303 		add	r3, r3, #19
 2354 0eda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2355 0edc 5B00     		lsls	r3, r3, #1
 2356 0ede 1A44     		add	r2, r2, r3
 2357 0ee0 07F5A253 		add	r3, r7, #5184
 2358 0ee4 03F11303 		add	r3, r3, #19
 2359 0ee8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2360 0eea 1A44     		add	r2, r2, r3
 2361 0eec 07F5A253 		add	r3, r7, #5184
 2362 0ef0 03F11703 		add	r3, r3, #23
 2363 0ef4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2364 0ef6 D31A     		subs	r3, r2, r3
 2365 0ef8 5A1E     		subs	r2, r3, #1
 2366 0efa 07F5A253 		add	r3, r7, #5184
 2367 0efe 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 67


 2368 0f02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2369 0f04 07F13803 		add	r3, r7, #56
 2370 0f08 183B     		subs	r3, r3, #24
 2371 0f0a 0B44     		add	r3, r3, r1
 2372 0f0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2373 0f0e 07F15803 		add	r3, r7, #88
 2374 0f12 9954     		strb	r1, [r3, r2]
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2375              		.loc 1 487 0 discriminator 3
 2376 0f14 07F5A253 		add	r3, r7, #5184
 2377 0f18 03F11703 		add	r3, r3, #23
 2378 0f1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2379 0f1e 0133     		adds	r3, r3, #1
 2380 0f20 07F5A252 		add	r2, r7, #5184
 2381 0f24 02F11702 		add	r2, r2, #23
 2382 0f28 1370     		strb	r3, [r2]
 2383              	.L127:
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2384              		.loc 1 487 0 is_stmt 0 discriminator 1
 2385 0f2a 07F5A253 		add	r3, r7, #5184
 2386 0f2e 03F11703 		add	r3, r3, #23
 2387 0f32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2388 0f34 07F5A253 		add	r3, r7, #5184
 2389 0f38 03F11303 		add	r3, r3, #19
 2390 0f3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2391 0f3e 9A42     		cmp	r2, r3
 2392 0f40 BED3     		bcc	.L128
 2393              		.loc 1 491 0 is_stmt 1
 2394 0f42 01F066BA 		b	.L103
 2395              	.L107:
 492:..\src/command_processing.c ****                         
 493:..\src/command_processing.c ****                     case 3:         //Current PID
 494:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2396              		.loc 1 494 0
 2397 0f46 07F5A253 		add	r3, r7, #5184
 2398 0f4a 03F10F03 		add	r3, r3, #15
 2399 0f4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2400 0f50 4549     		ldr	r1, .L257
 2401 0f52 1346     		mov	r3, r2
 2402 0f54 DB00     		lsls	r3, r3, #3
 2403 0f56 9B1A     		subs	r3, r3, r2
 2404 0f58 1B01     		lsls	r3, r3, #4
 2405 0f5a 0B44     		add	r3, r3, r1
 2406 0f5c 03F20F13 		addw	r3, r3, #271
 2407 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2408 0f62 032B     		cmp	r3, #3
 2409 0f64 00F02881 		beq	.L129
 495:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2410              		.loc 1 495 0
 2411 0f68 07F5A253 		add	r3, r7, #5184
 2412 0f6c 03F10F03 		add	r3, r3, #15
 2413 0f70 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2414 0f72 3D49     		ldr	r1, .L257
 2415 0f74 1346     		mov	r3, r2
 2416 0f76 DB00     		lsls	r3, r3, #3
 2417 0f78 9B1A     		subs	r3, r3, r2
 2418 0f7a 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 68


 2419 0f7c 0B44     		add	r3, r3, r1
 2420 0f7e BC33     		adds	r3, r3, #188
 2421 0f80 1B68     		ldr	r3, [r3]
 2422 0f82 1846     		mov	r0, r3
 2423 0f84 FFF7FEFF 		bl	__aeabi_i2f
 2424 0f88 0346     		mov	r3, r0
 2425 0f8a 4FF08F41 		mov	r1, #1199570944
 2426 0f8e 1846     		mov	r0, r3
 2427 0f90 FFF7FEFF 		bl	__aeabi_fdiv
 2428 0f94 0346     		mov	r3, r0
 2429 0f96 1A46     		mov	r2, r3
 2430 0f98 07F13803 		add	r3, r7, #56
 2431 0f9c 183B     		subs	r3, r3, #24
 2432 0f9e 1A60     		str	r2, [r3]	@ float
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2433              		.loc 1 496 0
 2434 0fa0 0023     		movs	r3, #0
 2435 0fa2 07F5A252 		add	r2, r7, #5184
 2436 0fa6 02F11702 		add	r2, r2, #23
 2437 0faa 1370     		strb	r3, [r2]
 2438 0fac 2DE0     		b	.L130
 2439              	.L131:
 497:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2440              		.loc 1 497 0 discriminator 3
 2441 0fae 07F5A253 		add	r3, r7, #5184
 2442 0fb2 03F11503 		add	r3, r3, #21
 2443 0fb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2444 0fb8 3222     		movs	r2, #50
 2445 0fba 02FB03F3 		mul	r3, r2, r3
 2446 0fbe 1A1D     		adds	r2, r3, #4
 2447 0fc0 07F5A253 		add	r3, r7, #5184
 2448 0fc4 03F11303 		add	r3, r3, #19
 2449 0fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2450 0fca 1A44     		add	r2, r2, r3
 2451 0fcc 07F5A253 		add	r3, r7, #5184
 2452 0fd0 03F11703 		add	r3, r3, #23
 2453 0fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2454 0fd6 D31A     		subs	r3, r2, r3
 2455 0fd8 5A1E     		subs	r2, r3, #1
 2456 0fda 07F5A253 		add	r3, r7, #5184
 2457 0fde 03F11703 		add	r3, r3, #23
 2458 0fe2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2459 0fe4 07F13803 		add	r3, r7, #56
 2460 0fe8 183B     		subs	r3, r3, #24
 2461 0fea 0B44     		add	r3, r3, r1
 2462 0fec 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2463 0fee 07F15803 		add	r3, r7, #88
 2464 0ff2 9954     		strb	r1, [r3, r2]
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2465              		.loc 1 496 0 discriminator 3
 2466 0ff4 07F5A253 		add	r3, r7, #5184
 2467 0ff8 03F11703 		add	r3, r3, #23
 2468 0ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2469 0ffe 0133     		adds	r3, r3, #1
 2470 1000 07F5A252 		add	r2, r7, #5184
 2471 1004 02F11702 		add	r2, r2, #23
 2472 1008 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 69


 2473              	.L130:
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2474              		.loc 1 496 0 is_stmt 0 discriminator 1
 2475 100a 07F5A253 		add	r3, r7, #5184
 2476 100e 03F11703 		add	r3, r3, #23
 2477 1012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2478 1014 07F5A253 		add	r3, r7, #5184
 2479 1018 03F11303 		add	r3, r3, #19
 2480 101c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2481 101e 9A42     		cmp	r2, r3
 2482 1020 C5D3     		bcc	.L131
 498:..\src/command_processing.c ****                             }
 499:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2483              		.loc 1 499 0 is_stmt 1
 2484 1022 07F5A253 		add	r3, r7, #5184
 2485 1026 03F10F03 		add	r3, r3, #15
 2486 102a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2487 102c 0E49     		ldr	r1, .L257
 2488 102e 1346     		mov	r3, r2
 2489 1030 DB00     		lsls	r3, r3, #3
 2490 1032 9B1A     		subs	r3, r3, r2
 2491 1034 1B01     		lsls	r3, r3, #4
 2492 1036 0B44     		add	r3, r3, r1
 2493 1038 C033     		adds	r3, r3, #192
 2494 103a 1B68     		ldr	r3, [r3]
 2495 103c 1846     		mov	r0, r3
 2496 103e FFF7FEFF 		bl	__aeabi_i2f
 2497 1042 0346     		mov	r3, r0
 2498 1044 4FF08F41 		mov	r1, #1199570944
 2499 1048 1846     		mov	r0, r3
 2500 104a FFF7FEFF 		bl	__aeabi_fdiv
 2501 104e 0346     		mov	r3, r0
 2502 1050 1A46     		mov	r2, r3
 2503 1052 07F13803 		add	r3, r7, #56
 2504 1056 183B     		subs	r3, r3, #24
 2505 1058 1A60     		str	r2, [r3]	@ float
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2506              		.loc 1 500 0
 2507 105a 0023     		movs	r3, #0
 2508 105c 07F5A252 		add	r2, r7, #5184
 2509 1060 02F11702 		add	r2, r2, #23
 2510 1064 1370     		strb	r3, [r2]
 2511 1066 35E0     		b	.L132
 2512              	.L258:
 2513              		.align	2
 2514              	.L257:
 2515 1068 00000000 		.word	c_mem
 2516              	.L133:
 501:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2517              		.loc 1 501 0 discriminator 3
 2518 106c 07F5A253 		add	r3, r7, #5184
 2519 1070 03F11503 		add	r3, r3, #21
 2520 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2521 1076 3222     		movs	r2, #50
 2522 1078 02FB03F3 		mul	r3, r2, r3
 2523 107c 1A1D     		adds	r2, r3, #4
 2524 107e 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 70


 2525 1082 03F11303 		add	r3, r3, #19
 2526 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2527 1088 1A44     		add	r2, r2, r3
 2528 108a 07F5A253 		add	r3, r7, #5184
 2529 108e 03F11303 		add	r3, r3, #19
 2530 1092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2531 1094 1A44     		add	r2, r2, r3
 2532 1096 07F5A253 		add	r3, r7, #5184
 2533 109a 03F11703 		add	r3, r3, #23
 2534 109e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2535 10a0 D31A     		subs	r3, r2, r3
 2536 10a2 5A1E     		subs	r2, r3, #1
 2537 10a4 07F5A253 		add	r3, r7, #5184
 2538 10a8 03F11703 		add	r3, r3, #23
 2539 10ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2540 10ae 07F13803 		add	r3, r7, #56
 2541 10b2 183B     		subs	r3, r3, #24
 2542 10b4 0B44     		add	r3, r3, r1
 2543 10b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2544 10b8 07F15803 		add	r3, r7, #88
 2545 10bc 9954     		strb	r1, [r3, r2]
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2546              		.loc 1 500 0 discriminator 3
 2547 10be 07F5A253 		add	r3, r7, #5184
 2548 10c2 03F11703 		add	r3, r3, #23
 2549 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2550 10c8 0133     		adds	r3, r3, #1
 2551 10ca 07F5A252 		add	r2, r7, #5184
 2552 10ce 02F11702 		add	r2, r2, #23
 2553 10d2 1370     		strb	r3, [r2]
 2554              	.L132:
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2555              		.loc 1 500 0 is_stmt 0 discriminator 1
 2556 10d4 07F5A253 		add	r3, r7, #5184
 2557 10d8 03F11703 		add	r3, r3, #23
 2558 10dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2559 10de 07F5A253 		add	r3, r7, #5184
 2560 10e2 03F11303 		add	r3, r3, #19
 2561 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2562 10e8 9A42     		cmp	r2, r3
 2563 10ea BFD3     		bcc	.L133
 502:..\src/command_processing.c ****                             }
 503:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2564              		.loc 1 503 0 is_stmt 1
 2565 10ec 07F5A253 		add	r3, r7, #5184
 2566 10f0 03F10F03 		add	r3, r3, #15
 2567 10f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2568 10f6 C349     		ldr	r1, .L259
 2569 10f8 1346     		mov	r3, r2
 2570 10fa DB00     		lsls	r3, r3, #3
 2571 10fc 9B1A     		subs	r3, r3, r2
 2572 10fe 1B01     		lsls	r3, r3, #4
 2573 1100 0B44     		add	r3, r3, r1
 2574 1102 C433     		adds	r3, r3, #196
 2575 1104 1B68     		ldr	r3, [r3]
 2576 1106 1846     		mov	r0, r3
 2577 1108 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 71


 2578 110c 0346     		mov	r3, r0
 2579 110e 4FF08F41 		mov	r1, #1199570944
 2580 1112 1846     		mov	r0, r3
 2581 1114 FFF7FEFF 		bl	__aeabi_fdiv
 2582 1118 0346     		mov	r3, r0
 2583 111a 1A46     		mov	r2, r3
 2584 111c 07F13803 		add	r3, r7, #56
 2585 1120 183B     		subs	r3, r3, #24
 2586 1122 1A60     		str	r2, [r3]	@ float
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2587              		.loc 1 504 0
 2588 1124 0023     		movs	r3, #0
 2589 1126 07F5A252 		add	r2, r7, #5184
 2590 112a 02F11702 		add	r2, r2, #23
 2591 112e 1370     		strb	r3, [r2]
 2592 1130 34E0     		b	.L134
 2593              	.L135:
 505:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2594              		.loc 1 505 0 discriminator 3
 2595 1132 07F5A253 		add	r3, r7, #5184
 2596 1136 03F11503 		add	r3, r3, #21
 2597 113a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2598 113c 3222     		movs	r2, #50
 2599 113e 02FB03F3 		mul	r3, r2, r3
 2600 1142 1A1D     		adds	r2, r3, #4
 2601 1144 07F5A253 		add	r3, r7, #5184
 2602 1148 03F11303 		add	r3, r3, #19
 2603 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2604 114e 5B00     		lsls	r3, r3, #1
 2605 1150 1A44     		add	r2, r2, r3
 2606 1152 07F5A253 		add	r3, r7, #5184
 2607 1156 03F11303 		add	r3, r3, #19
 2608 115a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2609 115c 1A44     		add	r2, r2, r3
 2610 115e 07F5A253 		add	r3, r7, #5184
 2611 1162 03F11703 		add	r3, r3, #23
 2612 1166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2613 1168 D31A     		subs	r3, r2, r3
 2614 116a 5A1E     		subs	r2, r3, #1
 2615 116c 07F5A253 		add	r3, r7, #5184
 2616 1170 03F11703 		add	r3, r3, #23
 2617 1174 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2618 1176 07F13803 		add	r3, r7, #56
 2619 117a 183B     		subs	r3, r3, #24
 2620 117c 0B44     		add	r3, r3, r1
 2621 117e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2622 1180 07F15803 		add	r3, r7, #88
 2623 1184 9954     		strb	r1, [r3, r2]
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2624              		.loc 1 504 0 discriminator 3
 2625 1186 07F5A253 		add	r3, r7, #5184
 2626 118a 03F11703 		add	r3, r3, #23
 2627 118e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2628 1190 0133     		adds	r3, r3, #1
 2629 1192 07F5A252 		add	r2, r7, #5184
 2630 1196 02F11702 		add	r2, r2, #23
 2631 119a 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 72


 2632              	.L134:
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2633              		.loc 1 504 0 is_stmt 0 discriminator 1
 2634 119c 07F5A253 		add	r3, r7, #5184
 2635 11a0 03F11703 		add	r3, r3, #23
 2636 11a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2637 11a6 07F5A253 		add	r3, r7, #5184
 2638 11aa 03F11303 		add	r3, r3, #19
 2639 11ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2640 11b0 9A42     		cmp	r2, r3
 2641 11b2 BED3     		bcc	.L135
 506:..\src/command_processing.c ****                             }
 507:..\src/command_processing.c ****                         }
 508:..\src/command_processing.c ****                         else {
 509:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 511:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 512:..\src/command_processing.c ****                             }
 513:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 516:..\src/command_processing.c ****                             }
 517:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 520:..\src/command_processing.c ****                             }
 521:..\src/command_processing.c ****                         }            
 522:..\src/command_processing.c ****                         break;  
 2642              		.loc 1 522 0 is_stmt 1
 2643 11b4 01F02DB9 		b	.L103
 2644              	.L129:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2645              		.loc 1 509 0
 2646 11b8 07F5A253 		add	r3, r7, #5184
 2647 11bc 03F10F03 		add	r3, r3, #15
 2648 11c0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2649 11c2 9049     		ldr	r1, .L259
 2650 11c4 1346     		mov	r3, r2
 2651 11c6 DB00     		lsls	r3, r3, #3
 2652 11c8 9B1A     		subs	r3, r3, r2
 2653 11ca 1B01     		lsls	r3, r3, #4
 2654 11cc 0B44     		add	r3, r3, r1
 2655 11ce D433     		adds	r3, r3, #212
 2656 11d0 1B68     		ldr	r3, [r3]
 2657 11d2 1846     		mov	r0, r3
 2658 11d4 FFF7FEFF 		bl	__aeabi_i2f
 2659 11d8 0346     		mov	r3, r0
 2660 11da 4FF08F41 		mov	r1, #1199570944
 2661 11de 1846     		mov	r0, r3
 2662 11e0 FFF7FEFF 		bl	__aeabi_fdiv
 2663 11e4 0346     		mov	r3, r0
 2664 11e6 1A46     		mov	r2, r3
 2665 11e8 07F13803 		add	r3, r7, #56
 2666 11ec 183B     		subs	r3, r3, #24
 2667 11ee 1A60     		str	r2, [r3]	@ float
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2668              		.loc 1 510 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 73


 2669 11f0 0023     		movs	r3, #0
 2670 11f2 07F5A252 		add	r2, r7, #5184
 2671 11f6 02F11702 		add	r2, r2, #23
 2672 11fa 1370     		strb	r3, [r2]
 2673 11fc 2DE0     		b	.L137
 2674              	.L138:
 511:..\src/command_processing.c ****                             }
 2675              		.loc 1 511 0 discriminator 3
 2676 11fe 07F5A253 		add	r3, r7, #5184
 2677 1202 03F11503 		add	r3, r3, #21
 2678 1206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2679 1208 3222     		movs	r2, #50
 2680 120a 02FB03F3 		mul	r3, r2, r3
 2681 120e 1A1D     		adds	r2, r3, #4
 2682 1210 07F5A253 		add	r3, r7, #5184
 2683 1214 03F11303 		add	r3, r3, #19
 2684 1218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2685 121a 1A44     		add	r2, r2, r3
 2686 121c 07F5A253 		add	r3, r7, #5184
 2687 1220 03F11703 		add	r3, r3, #23
 2688 1224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2689 1226 D31A     		subs	r3, r2, r3
 2690 1228 5A1E     		subs	r2, r3, #1
 2691 122a 07F5A253 		add	r3, r7, #5184
 2692 122e 03F11703 		add	r3, r3, #23
 2693 1232 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2694 1234 07F13803 		add	r3, r7, #56
 2695 1238 183B     		subs	r3, r3, #24
 2696 123a 0B44     		add	r3, r3, r1
 2697 123c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2698 123e 07F15803 		add	r3, r7, #88
 2699 1242 9954     		strb	r1, [r3, r2]
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2700              		.loc 1 510 0 discriminator 3
 2701 1244 07F5A253 		add	r3, r7, #5184
 2702 1248 03F11703 		add	r3, r3, #23
 2703 124c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2704 124e 0133     		adds	r3, r3, #1
 2705 1250 07F5A252 		add	r2, r7, #5184
 2706 1254 02F11702 		add	r2, r2, #23
 2707 1258 1370     		strb	r3, [r2]
 2708              	.L137:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2709              		.loc 1 510 0 is_stmt 0 discriminator 1
 2710 125a 07F5A253 		add	r3, r7, #5184
 2711 125e 03F11703 		add	r3, r3, #23
 2712 1262 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2713 1264 07F5A253 		add	r3, r7, #5184
 2714 1268 03F11303 		add	r3, r3, #19
 2715 126c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2716 126e 9A42     		cmp	r2, r3
 2717 1270 C5D3     		bcc	.L138
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2718              		.loc 1 513 0 is_stmt 1
 2719 1272 07F5A253 		add	r3, r7, #5184
 2720 1276 03F10F03 		add	r3, r3, #15
 2721 127a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 74


 2722 127c 6149     		ldr	r1, .L259
 2723 127e 1346     		mov	r3, r2
 2724 1280 DB00     		lsls	r3, r3, #3
 2725 1282 9B1A     		subs	r3, r3, r2
 2726 1284 1B01     		lsls	r3, r3, #4
 2727 1286 0B44     		add	r3, r3, r1
 2728 1288 D833     		adds	r3, r3, #216
 2729 128a 1B68     		ldr	r3, [r3]
 2730 128c 1846     		mov	r0, r3
 2731 128e FFF7FEFF 		bl	__aeabi_i2f
 2732 1292 0346     		mov	r3, r0
 2733 1294 4FF08F41 		mov	r1, #1199570944
 2734 1298 1846     		mov	r0, r3
 2735 129a FFF7FEFF 		bl	__aeabi_fdiv
 2736 129e 0346     		mov	r3, r0
 2737 12a0 1A46     		mov	r2, r3
 2738 12a2 07F13803 		add	r3, r7, #56
 2739 12a6 183B     		subs	r3, r3, #24
 2740 12a8 1A60     		str	r2, [r3]	@ float
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2741              		.loc 1 514 0
 2742 12aa 0023     		movs	r3, #0
 2743 12ac 07F5A252 		add	r2, r7, #5184
 2744 12b0 02F11702 		add	r2, r2, #23
 2745 12b4 1370     		strb	r3, [r2]
 2746 12b6 33E0     		b	.L139
 2747              	.L140:
 515:..\src/command_processing.c ****                             }
 2748              		.loc 1 515 0 discriminator 3
 2749 12b8 07F5A253 		add	r3, r7, #5184
 2750 12bc 03F11503 		add	r3, r3, #21
 2751 12c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2752 12c2 3222     		movs	r2, #50
 2753 12c4 02FB03F3 		mul	r3, r2, r3
 2754 12c8 1A1D     		adds	r2, r3, #4
 2755 12ca 07F5A253 		add	r3, r7, #5184
 2756 12ce 03F11303 		add	r3, r3, #19
 2757 12d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2758 12d4 1A44     		add	r2, r2, r3
 2759 12d6 07F5A253 		add	r3, r7, #5184
 2760 12da 03F11303 		add	r3, r3, #19
 2761 12de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2762 12e0 1A44     		add	r2, r2, r3
 2763 12e2 07F5A253 		add	r3, r7, #5184
 2764 12e6 03F11703 		add	r3, r3, #23
 2765 12ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2766 12ec D31A     		subs	r3, r2, r3
 2767 12ee 5A1E     		subs	r2, r3, #1
 2768 12f0 07F5A253 		add	r3, r7, #5184
 2769 12f4 03F11703 		add	r3, r3, #23
 2770 12f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2771 12fa 07F13803 		add	r3, r7, #56
 2772 12fe 183B     		subs	r3, r3, #24
 2773 1300 0B44     		add	r3, r3, r1
 2774 1302 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2775 1304 07F15803 		add	r3, r7, #88
 2776 1308 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 75


 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2777              		.loc 1 514 0 discriminator 3
 2778 130a 07F5A253 		add	r3, r7, #5184
 2779 130e 03F11703 		add	r3, r3, #23
 2780 1312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2781 1314 0133     		adds	r3, r3, #1
 2782 1316 07F5A252 		add	r2, r7, #5184
 2783 131a 02F11702 		add	r2, r2, #23
 2784 131e 1370     		strb	r3, [r2]
 2785              	.L139:
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2786              		.loc 1 514 0 is_stmt 0 discriminator 1
 2787 1320 07F5A253 		add	r3, r7, #5184
 2788 1324 03F11703 		add	r3, r3, #23
 2789 1328 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2790 132a 07F5A253 		add	r3, r7, #5184
 2791 132e 03F11303 		add	r3, r3, #19
 2792 1332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2793 1334 9A42     		cmp	r2, r3
 2794 1336 BFD3     		bcc	.L140
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2795              		.loc 1 517 0 is_stmt 1
 2796 1338 07F5A253 		add	r3, r7, #5184
 2797 133c 03F10F03 		add	r3, r3, #15
 2798 1340 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2799 1342 3049     		ldr	r1, .L259
 2800 1344 1346     		mov	r3, r2
 2801 1346 DB00     		lsls	r3, r3, #3
 2802 1348 9B1A     		subs	r3, r3, r2
 2803 134a 1B01     		lsls	r3, r3, #4
 2804 134c 0B44     		add	r3, r3, r1
 2805 134e DC33     		adds	r3, r3, #220
 2806 1350 1B68     		ldr	r3, [r3]
 2807 1352 1846     		mov	r0, r3
 2808 1354 FFF7FEFF 		bl	__aeabi_i2f
 2809 1358 0346     		mov	r3, r0
 2810 135a 4FF08F41 		mov	r1, #1199570944
 2811 135e 1846     		mov	r0, r3
 2812 1360 FFF7FEFF 		bl	__aeabi_fdiv
 2813 1364 0346     		mov	r3, r0
 2814 1366 1A46     		mov	r2, r3
 2815 1368 07F13803 		add	r3, r7, #56
 2816 136c 183B     		subs	r3, r3, #24
 2817 136e 1A60     		str	r2, [r3]	@ float
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2818              		.loc 1 518 0
 2819 1370 0023     		movs	r3, #0
 2820 1372 07F5A252 		add	r2, r7, #5184
 2821 1376 02F11702 		add	r2, r2, #23
 2822 137a 1370     		strb	r3, [r2]
 2823 137c 34E0     		b	.L141
 2824              	.L142:
 519:..\src/command_processing.c ****                             }
 2825              		.loc 1 519 0 discriminator 3
 2826 137e 07F5A253 		add	r3, r7, #5184
 2827 1382 03F11503 		add	r3, r3, #21
 2828 1386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 76


 2829 1388 3222     		movs	r2, #50
 2830 138a 02FB03F3 		mul	r3, r2, r3
 2831 138e 1A1D     		adds	r2, r3, #4
 2832 1390 07F5A253 		add	r3, r7, #5184
 2833 1394 03F11303 		add	r3, r3, #19
 2834 1398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2835 139a 5B00     		lsls	r3, r3, #1
 2836 139c 1A44     		add	r2, r2, r3
 2837 139e 07F5A253 		add	r3, r7, #5184
 2838 13a2 03F11303 		add	r3, r3, #19
 2839 13a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2840 13a8 1A44     		add	r2, r2, r3
 2841 13aa 07F5A253 		add	r3, r7, #5184
 2842 13ae 03F11703 		add	r3, r3, #23
 2843 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2844 13b4 D31A     		subs	r3, r2, r3
 2845 13b6 5A1E     		subs	r2, r3, #1
 2846 13b8 07F5A253 		add	r3, r7, #5184
 2847 13bc 03F11703 		add	r3, r3, #23
 2848 13c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2849 13c2 07F13803 		add	r3, r7, #56
 2850 13c6 183B     		subs	r3, r3, #24
 2851 13c8 0B44     		add	r3, r3, r1
 2852 13ca 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2853 13cc 07F15803 		add	r3, r7, #88
 2854 13d0 9954     		strb	r1, [r3, r2]
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2855              		.loc 1 518 0 discriminator 3
 2856 13d2 07F5A253 		add	r3, r7, #5184
 2857 13d6 03F11703 		add	r3, r3, #23
 2858 13da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2859 13dc 0133     		adds	r3, r3, #1
 2860 13de 07F5A252 		add	r2, r7, #5184
 2861 13e2 02F11702 		add	r2, r2, #23
 2862 13e6 1370     		strb	r3, [r2]
 2863              	.L141:
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2864              		.loc 1 518 0 is_stmt 0 discriminator 1
 2865 13e8 07F5A253 		add	r3, r7, #5184
 2866 13ec 03F11703 		add	r3, r3, #23
 2867 13f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2868 13f2 07F5A253 		add	r3, r7, #5184
 2869 13f6 03F11303 		add	r3, r3, #19
 2870 13fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2871 13fc 9A42     		cmp	r2, r3
 2872 13fe BED3     		bcc	.L142
 2873              		.loc 1 522 0 is_stmt 1
 2874 1400 01F007B8 		b	.L103
 2875              	.L260:
 2876              		.align	2
 2877              	.L259:
 2878 1404 00000000 		.word	c_mem
 2879              	.L108:
 523:..\src/command_processing.c **** 
 524:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 525:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2880              		.loc 1 525 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 77


 2881 1408 07F5A253 		add	r3, r7, #5184
 2882 140c 03F10F03 		add	r3, r3, #15
 2883 1410 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2884 1412 C849     		ldr	r1, .L261
 2885 1414 1346     		mov	r3, r2
 2886 1416 DB00     		lsls	r3, r3, #3
 2887 1418 9B1A     		subs	r3, r3, r2
 2888 141a 1B01     		lsls	r3, r3, #4
 2889 141c 0B44     		add	r3, r3, r1
 2890 141e 03F58873 		add	r3, r3, #272
 2891 1422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2892 1424 1846     		mov	r0, r3
 2893 1426 07F5A253 		add	r3, r7, #5184
 2894 142a 03F11703 		add	r3, r3, #23
 2895 142e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2896 1430 C149     		ldr	r1, .L261+4
 2897 1432 0346     		mov	r3, r0
 2898 1434 5B00     		lsls	r3, r3, #1
 2899 1436 0344     		add	r3, r3, r0
 2900 1438 9B00     		lsls	r3, r3, #2
 2901 143a 1344     		add	r3, r3, r2
 2902 143c 6633     		adds	r3, r3, #102
 2903 143e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2904 1442 07F5A253 		add	r3, r7, #5184
 2905 1446 03F10F03 		add	r3, r3, #15
 2906 144a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2907 144c B948     		ldr	r0, .L261
 2908 144e 1346     		mov	r3, r2
 2909 1450 DB00     		lsls	r3, r3, #3
 2910 1452 9B1A     		subs	r3, r3, r2
 2911 1454 1B01     		lsls	r3, r3, #4
 2912 1456 0344     		add	r3, r3, r0
 2913 1458 03F58873 		add	r3, r3, #272
 2914 145c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2915 145e 1C46     		mov	r4, r3
 2916 1460 07F5A253 		add	r3, r7, #5184
 2917 1464 03F11703 		add	r3, r3, #23
 2918 1468 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2919 146a B348     		ldr	r0, .L261+4
 2920 146c 2346     		mov	r3, r4
 2921 146e 5B00     		lsls	r3, r3, #1
 2922 1470 2344     		add	r3, r3, r4
 2923 1472 1B01     		lsls	r3, r3, #4
 2924 1474 0344     		add	r3, r3, r0
 2925 1476 1344     		add	r3, r3, r2
 2926 1478 03F29513 		addw	r3, r3, #405
 2927 147c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2928 147e 41FA03F3 		asr	r3, r1, r3
 2929 1482 1AB2     		sxth	r2, r3
 2930 1484 07F13803 		add	r3, r7, #56
 2931 1488 1A3B     		subs	r3, r3, #26
 2932 148a 1A80     		strh	r2, [r3]	@ movhi
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2933              		.loc 1 526 0
 2934 148c 0023     		movs	r3, #0
 2935 148e 07F5A252 		add	r2, r7, #5184
 2936 1492 02F11602 		add	r2, r2, #22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 78


 2937 1496 1370     		strb	r3, [r2]
 2938 1498 3AE0     		b	.L143
 2939              	.L144:
 527:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2940              		.loc 1 527 0 discriminator 3
 2941 149a 07F5A253 		add	r3, r7, #5184
 2942 149e 03F11503 		add	r3, r3, #21
 2943 14a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2944 14a4 3222     		movs	r2, #50
 2945 14a6 02FB03F3 		mul	r3, r2, r3
 2946 14aa 1A1D     		adds	r2, r3, #4
 2947 14ac 07F5A253 		add	r3, r7, #5184
 2948 14b0 03F11703 		add	r3, r3, #23
 2949 14b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2950 14b6 07F5A251 		add	r1, r7, #5184
 2951 14ba 01F11301 		add	r1, r1, #19
 2952 14be 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2953 14c0 01FB03F3 		mul	r3, r1, r3
 2954 14c4 1A44     		add	r2, r2, r3
 2955 14c6 07F5A253 		add	r3, r7, #5184
 2956 14ca 03F11303 		add	r3, r3, #19
 2957 14ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2958 14d0 1A44     		add	r2, r2, r3
 2959 14d2 07F5A253 		add	r3, r7, #5184
 2960 14d6 03F11603 		add	r3, r3, #22
 2961 14da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2962 14dc D31A     		subs	r3, r2, r3
 2963 14de 5A1E     		subs	r2, r3, #1
 2964 14e0 07F5A253 		add	r3, r7, #5184
 2965 14e4 03F11603 		add	r3, r3, #22
 2966 14e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2967 14ea 07F13803 		add	r3, r7, #56
 2968 14ee 1A3B     		subs	r3, r3, #26
 2969 14f0 0B44     		add	r3, r3, r1
 2970 14f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2971 14f4 07F15803 		add	r3, r7, #88
 2972 14f8 9954     		strb	r1, [r3, r2]
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2973              		.loc 1 526 0 discriminator 3
 2974 14fa 07F5A253 		add	r3, r7, #5184
 2975 14fe 03F11603 		add	r3, r3, #22
 2976 1502 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2977 1504 0133     		adds	r3, r3, #1
 2978 1506 07F5A252 		add	r2, r7, #5184
 2979 150a 02F11602 		add	r2, r2, #22
 2980 150e 1370     		strb	r3, [r2]
 2981              	.L143:
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2982              		.loc 1 526 0 is_stmt 0 discriminator 1
 2983 1510 07F5A253 		add	r3, r7, #5184
 2984 1514 03F11603 		add	r3, r3, #22
 2985 1518 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2986 151a 07F5A253 		add	r3, r7, #5184
 2987 151e 03F11303 		add	r3, r3, #19
 2988 1522 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2989 1524 9A42     		cmp	r2, r3
 2990 1526 B8D3     		bcc	.L144
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 79


 528:..\src/command_processing.c ****                         }
 529:..\src/command_processing.c ****                         break;
 2991              		.loc 1 529 0 is_stmt 1
 2992 1528 00F073BF 		b	.L103
 2993              	.L109:
 530:..\src/command_processing.c ****                 
 531:..\src/command_processing.c ****                     case 11:        //Position limits
 532:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 2994              		.loc 1 532 0
 2995 152c 07F5A253 		add	r3, r7, #5184
 2996 1530 03F10F03 		add	r3, r3, #15
 2997 1534 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2998 1536 8049     		ldr	r1, .L261+4
 2999 1538 1346     		mov	r3, r2
 3000 153a DB00     		lsls	r3, r3, #3
 3001 153c 9B1A     		subs	r3, r3, r2
 3002 153e 1B01     		lsls	r3, r3, #4
 3003 1540 0B44     		add	r3, r3, r1
 3004 1542 E433     		adds	r3, r3, #228
 3005 1544 1968     		ldr	r1, [r3]
 3006 1546 07F5A253 		add	r3, r7, #5184
 3007 154a 03F10F03 		add	r3, r3, #15
 3008 154e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3009 1550 7848     		ldr	r0, .L261
 3010 1552 1346     		mov	r3, r2
 3011 1554 DB00     		lsls	r3, r3, #3
 3012 1556 9B1A     		subs	r3, r3, r2
 3013 1558 1B01     		lsls	r3, r3, #4
 3014 155a 0344     		add	r3, r3, r0
 3015 155c 03F58873 		add	r3, r3, #272
 3016 1560 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3017 1562 1846     		mov	r0, r3
 3018 1564 744A     		ldr	r2, .L261+4
 3019 1566 0346     		mov	r3, r0
 3020 1568 5B00     		lsls	r3, r3, #1
 3021 156a 0344     		add	r3, r3, r0
 3022 156c 1B01     		lsls	r3, r3, #4
 3023 156e 1344     		add	r3, r3, r2
 3024 1570 03F29513 		addw	r3, r3, #405
 3025 1574 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3026 1576 41FA03F2 		asr	r2, r1, r3
 3027 157a 07F11803 		add	r3, r7, #24
 3028 157e 1A60     		str	r2, [r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3029              		.loc 1 533 0
 3030 1580 0023     		movs	r3, #0
 3031 1582 07F5A252 		add	r2, r7, #5184
 3032 1586 02F11602 		add	r2, r2, #22
 3033 158a 1370     		strb	r3, [r2]
 3034 158c 2CE0     		b	.L145
 3035              	.L146:
 534:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3036              		.loc 1 534 0 discriminator 3
 3037 158e 07F5A253 		add	r3, r7, #5184
 3038 1592 03F11503 		add	r3, r3, #21
 3039 1596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3040 1598 3222     		movs	r2, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 80


 3041 159a 02FB03F3 		mul	r3, r2, r3
 3042 159e 1A1D     		adds	r2, r3, #4
 3043 15a0 07F5A253 		add	r3, r7, #5184
 3044 15a4 03F11303 		add	r3, r3, #19
 3045 15a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3046 15aa 1A44     		add	r2, r2, r3
 3047 15ac 07F5A253 		add	r3, r7, #5184
 3048 15b0 03F11603 		add	r3, r3, #22
 3049 15b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3050 15b6 D31A     		subs	r3, r2, r3
 3051 15b8 013B     		subs	r3, r3, #1
 3052 15ba 07F5A252 		add	r2, r7, #5184
 3053 15be 02F11602 		add	r2, r2, #22
 3054 15c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3055 15c4 07F11801 		add	r1, r7, #24
 3056 15c8 0A44     		add	r2, r2, r1
 3057 15ca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3058 15cc 07F15802 		add	r2, r7, #88
 3059 15d0 D154     		strb	r1, [r2, r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3060              		.loc 1 533 0 discriminator 3
 3061 15d2 07F5A253 		add	r3, r7, #5184
 3062 15d6 03F11603 		add	r3, r3, #22
 3063 15da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3064 15dc 0133     		adds	r3, r3, #1
 3065 15de 07F5A252 		add	r2, r7, #5184
 3066 15e2 02F11602 		add	r2, r2, #22
 3067 15e6 1370     		strb	r3, [r2]
 3068              	.L145:
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3069              		.loc 1 533 0 is_stmt 0 discriminator 1
 3070 15e8 07F5A253 		add	r3, r7, #5184
 3071 15ec 03F11603 		add	r3, r3, #22
 3072 15f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3073 15f2 07F5A253 		add	r3, r7, #5184
 3074 15f6 03F11303 		add	r3, r3, #19
 3075 15fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3076 15fc 9A42     		cmp	r2, r3
 3077 15fe C6D3     		bcc	.L146
 535:..\src/command_processing.c ****                         }
 536:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3078              		.loc 1 536 0 is_stmt 1
 3079 1600 07F5A253 		add	r3, r7, #5184
 3080 1604 03F10F03 		add	r3, r3, #15
 3081 1608 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3082 160a 4B49     		ldr	r1, .L261+4
 3083 160c 1346     		mov	r3, r2
 3084 160e DB00     		lsls	r3, r3, #3
 3085 1610 9B1A     		subs	r3, r3, r2
 3086 1612 1B01     		lsls	r3, r3, #4
 3087 1614 0B44     		add	r3, r3, r1
 3088 1616 E833     		adds	r3, r3, #232
 3089 1618 1968     		ldr	r1, [r3]
 3090 161a 07F5A253 		add	r3, r7, #5184
 3091 161e 03F10F03 		add	r3, r3, #15
 3092 1622 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3093 1624 4348     		ldr	r0, .L261
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 81


 3094 1626 1346     		mov	r3, r2
 3095 1628 DB00     		lsls	r3, r3, #3
 3096 162a 9B1A     		subs	r3, r3, r2
 3097 162c 1B01     		lsls	r3, r3, #4
 3098 162e 0344     		add	r3, r3, r0
 3099 1630 03F58873 		add	r3, r3, #272
 3100 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3101 1636 1846     		mov	r0, r3
 3102 1638 3F4A     		ldr	r2, .L261+4
 3103 163a 0346     		mov	r3, r0
 3104 163c 5B00     		lsls	r3, r3, #1
 3105 163e 0344     		add	r3, r3, r0
 3106 1640 1B01     		lsls	r3, r3, #4
 3107 1642 1344     		add	r3, r3, r2
 3108 1644 03F29513 		addw	r3, r3, #405
 3109 1648 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3110 164a 41FA03F2 		asr	r2, r1, r3
 3111 164e 07F11803 		add	r3, r7, #24
 3112 1652 1A60     		str	r2, [r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3113              		.loc 1 537 0
 3114 1654 0023     		movs	r3, #0
 3115 1656 07F5A252 		add	r2, r7, #5184
 3116 165a 02F11602 		add	r2, r2, #22
 3117 165e 1370     		strb	r3, [r2]
 3118 1660 32E0     		b	.L147
 3119              	.L148:
 538:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3120              		.loc 1 538 0 discriminator 3
 3121 1662 07F5A253 		add	r3, r7, #5184
 3122 1666 03F11503 		add	r3, r3, #21
 3123 166a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3124 166c 3222     		movs	r2, #50
 3125 166e 02FB03F3 		mul	r3, r2, r3
 3126 1672 1A1D     		adds	r2, r3, #4
 3127 1674 07F5A253 		add	r3, r7, #5184
 3128 1678 03F11303 		add	r3, r3, #19
 3129 167c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3130 167e 1A44     		add	r2, r2, r3
 3131 1680 07F5A253 		add	r3, r7, #5184
 3132 1684 03F11303 		add	r3, r3, #19
 3133 1688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3134 168a 1A44     		add	r2, r2, r3
 3135 168c 07F5A253 		add	r3, r7, #5184
 3136 1690 03F11603 		add	r3, r3, #22
 3137 1694 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3138 1696 D31A     		subs	r3, r2, r3
 3139 1698 013B     		subs	r3, r3, #1
 3140 169a 07F5A252 		add	r2, r7, #5184
 3141 169e 02F11602 		add	r2, r2, #22
 3142 16a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3143 16a4 07F11801 		add	r1, r7, #24
 3144 16a8 0A44     		add	r2, r2, r1
 3145 16aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3146 16ac 07F15802 		add	r2, r7, #88
 3147 16b0 D154     		strb	r1, [r2, r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 82


 3148              		.loc 1 537 0 discriminator 3
 3149 16b2 07F5A253 		add	r3, r7, #5184
 3150 16b6 03F11603 		add	r3, r3, #22
 3151 16ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3152 16bc 0133     		adds	r3, r3, #1
 3153 16be 07F5A252 		add	r2, r7, #5184
 3154 16c2 02F11602 		add	r2, r2, #22
 3155 16c6 1370     		strb	r3, [r2]
 3156              	.L147:
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3157              		.loc 1 537 0 is_stmt 0 discriminator 1
 3158 16c8 07F5A253 		add	r3, r7, #5184
 3159 16cc 03F11603 		add	r3, r3, #22
 3160 16d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3161 16d2 07F5A253 		add	r3, r7, #5184
 3162 16d6 03F11303 		add	r3, r3, #19
 3163 16da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3164 16dc 9A42     		cmp	r2, r3
 3165 16de C0D3     		bcc	.L148
 539:..\src/command_processing.c ****                         }
 540:..\src/command_processing.c ****                         break;            
 3166              		.loc 1 540 0 is_stmt 1
 3167 16e0 00F097BE 		b	.L103
 3168              	.L110:
 541:..\src/command_processing.c **** 
 542:..\src/command_processing.c ****                     case 23:        //Rest Position
 543:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3169              		.loc 1 543 0
 3170 16e4 144B     		ldr	r3, .L261+4
 3171 16e6 D3F8A012 		ldr	r1, [r3, #672]
 3172 16ea 07F5A253 		add	r3, r7, #5184
 3173 16ee 03F10F03 		add	r3, r3, #15
 3174 16f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3175 16f4 0F48     		ldr	r0, .L261
 3176 16f6 1346     		mov	r3, r2
 3177 16f8 DB00     		lsls	r3, r3, #3
 3178 16fa 9B1A     		subs	r3, r3, r2
 3179 16fc 1B01     		lsls	r3, r3, #4
 3180 16fe 0344     		add	r3, r3, r0
 3181 1700 03F58873 		add	r3, r3, #272
 3182 1704 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3183 1706 1846     		mov	r0, r3
 3184 1708 0B4A     		ldr	r2, .L261+4
 3185 170a 0346     		mov	r3, r0
 3186 170c 5B00     		lsls	r3, r3, #1
 3187 170e 0344     		add	r3, r3, r0
 3188 1710 1B01     		lsls	r3, r3, #4
 3189 1712 1344     		add	r3, r3, r2
 3190 1714 03F29513 		addw	r3, r3, #405
 3191 1718 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3192 171a 41FA03F2 		asr	r2, r1, r3
 3193 171e 07F11803 		add	r3, r7, #24
 3194 1722 1A60     		str	r2, [r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3195              		.loc 1 544 0
 3196 1724 0023     		movs	r3, #0
 3197 1726 07F5A252 		add	r2, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 83


 3198 172a 02F11602 		add	r2, r2, #22
 3199 172e 1370     		strb	r3, [r2]
 3200 1730 31E0     		b	.L149
 3201              	.L262:
 3202 1732 00BF     		.align	2
 3203              	.L261:
 3204 1734 00000000 		.word	g_mem
 3205 1738 00000000 		.word	c_mem
 3206              	.L150:
 545:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3207              		.loc 1 545 0 discriminator 3
 3208 173c 07F5A253 		add	r3, r7, #5184
 3209 1740 03F11503 		add	r3, r3, #21
 3210 1744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3211 1746 3222     		movs	r2, #50
 3212 1748 02FB03F3 		mul	r3, r2, r3
 3213 174c 1A1D     		adds	r2, r3, #4
 3214 174e 07F5A253 		add	r3, r7, #5184
 3215 1752 03F11303 		add	r3, r3, #19
 3216 1756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3217 1758 1A44     		add	r2, r2, r3
 3218 175a 07F5A253 		add	r3, r7, #5184
 3219 175e 03F11603 		add	r3, r3, #22
 3220 1762 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3221 1764 D31A     		subs	r3, r2, r3
 3222 1766 013B     		subs	r3, r3, #1
 3223 1768 07F5A252 		add	r2, r7, #5184
 3224 176c 02F11602 		add	r2, r2, #22
 3225 1770 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3226 1772 07F11801 		add	r1, r7, #24
 3227 1776 0A44     		add	r2, r2, r1
 3228 1778 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3229 177a 07F15802 		add	r2, r7, #88
 3230 177e D154     		strb	r1, [r2, r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3231              		.loc 1 544 0 discriminator 3
 3232 1780 07F5A253 		add	r3, r7, #5184
 3233 1784 03F11603 		add	r3, r3, #22
 3234 1788 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3235 178a 0133     		adds	r3, r3, #1
 3236 178c 07F5A252 		add	r2, r7, #5184
 3237 1790 02F11602 		add	r2, r2, #22
 3238 1794 1370     		strb	r3, [r2]
 3239              	.L149:
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3240              		.loc 1 544 0 is_stmt 0 discriminator 1
 3241 1796 07F5A253 		add	r3, r7, #5184
 3242 179a 03F11603 		add	r3, r3, #22
 3243 179e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3244 17a0 07F5A253 		add	r3, r7, #5184
 3245 17a4 03F11303 		add	r3, r3, #19
 3246 17a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3247 17aa 9A42     		cmp	r2, r3
 3248 17ac C6D3     		bcc	.L150
 546:..\src/command_processing.c ****                         }
 547:..\src/command_processing.c ****                         break; 
 3249              		.loc 1 547 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 84


 3250 17ae 00F030BE 		b	.L103
 3251              	.L111:
 548:..\src/command_processing.c ****                         
 549:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 550:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3252              		.loc 1 550 0
 3253 17b2 07F5A253 		add	r3, r7, #5184
 3254 17b6 03F10E03 		add	r3, r3, #14
 3255 17ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3256 17bc AA49     		ldr	r1, .L263
 3257 17be 1346     		mov	r3, r2
 3258 17c0 DB00     		lsls	r3, r3, #3
 3259 17c2 9B1A     		subs	r3, r3, r2
 3260 17c4 1B01     		lsls	r3, r3, #4
 3261 17c6 0B44     		add	r3, r3, r1
 3262 17c8 03F20F13 		addw	r3, r3, #271
 3263 17cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3264 17ce 032B     		cmp	r3, #3
 3265 17d0 00F02681 		beq	.L151
 551:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3266              		.loc 1 551 0
 3267 17d4 07F5A253 		add	r3, r7, #5184
 3268 17d8 03F10E03 		add	r3, r3, #14
 3269 17dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3270 17de A249     		ldr	r1, .L263
 3271 17e0 1346     		mov	r3, r2
 3272 17e2 DB00     		lsls	r3, r3, #3
 3273 17e4 9B1A     		subs	r3, r3, r2
 3274 17e6 1B01     		lsls	r3, r3, #4
 3275 17e8 0B44     		add	r3, r3, r1
 3276 17ea B033     		adds	r3, r3, #176
 3277 17ec 1B68     		ldr	r3, [r3]
 3278 17ee 1846     		mov	r0, r3
 3279 17f0 FFF7FEFF 		bl	__aeabi_i2f
 3280 17f4 0346     		mov	r3, r0
 3281 17f6 4FF08F41 		mov	r1, #1199570944
 3282 17fa 1846     		mov	r0, r3
 3283 17fc FFF7FEFF 		bl	__aeabi_fdiv
 3284 1800 0346     		mov	r3, r0
 3285 1802 1A46     		mov	r2, r3
 3286 1804 07F13803 		add	r3, r7, #56
 3287 1808 183B     		subs	r3, r3, #24
 3288 180a 1A60     		str	r2, [r3]	@ float
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3289              		.loc 1 552 0
 3290 180c 0023     		movs	r3, #0
 3291 180e 07F5A252 		add	r2, r7, #5184
 3292 1812 02F11702 		add	r2, r2, #23
 3293 1816 1370     		strb	r3, [r2]
 3294 1818 2DE0     		b	.L152
 3295              	.L153:
 553:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3296              		.loc 1 553 0 discriminator 3
 3297 181a 07F5A253 		add	r3, r7, #5184
 3298 181e 03F11503 		add	r3, r3, #21
 3299 1822 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3300 1824 3222     		movs	r2, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 85


 3301 1826 02FB03F3 		mul	r3, r2, r3
 3302 182a 1A1D     		adds	r2, r3, #4
 3303 182c 07F5A253 		add	r3, r7, #5184
 3304 1830 03F11303 		add	r3, r3, #19
 3305 1834 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3306 1836 1A44     		add	r2, r2, r3
 3307 1838 07F5A253 		add	r3, r7, #5184
 3308 183c 03F11703 		add	r3, r3, #23
 3309 1840 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3310 1842 D31A     		subs	r3, r2, r3
 3311 1844 5A1E     		subs	r2, r3, #1
 3312 1846 07F5A253 		add	r3, r7, #5184
 3313 184a 03F11703 		add	r3, r3, #23
 3314 184e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3315 1850 07F13803 		add	r3, r7, #56
 3316 1854 183B     		subs	r3, r3, #24
 3317 1856 0B44     		add	r3, r3, r1
 3318 1858 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3319 185a 07F15803 		add	r3, r7, #88
 3320 185e 9954     		strb	r1, [r3, r2]
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3321              		.loc 1 552 0 discriminator 3
 3322 1860 07F5A253 		add	r3, r7, #5184
 3323 1864 03F11703 		add	r3, r3, #23
 3324 1868 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3325 186a 0133     		adds	r3, r3, #1
 3326 186c 07F5A252 		add	r2, r7, #5184
 3327 1870 02F11702 		add	r2, r2, #23
 3328 1874 1370     		strb	r3, [r2]
 3329              	.L152:
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3330              		.loc 1 552 0 is_stmt 0 discriminator 1
 3331 1876 07F5A253 		add	r3, r7, #5184
 3332 187a 03F11703 		add	r3, r3, #23
 3333 187e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3334 1880 07F5A253 		add	r3, r7, #5184
 3335 1884 03F11303 		add	r3, r3, #19
 3336 1888 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3337 188a 9A42     		cmp	r2, r3
 3338 188c C5D3     		bcc	.L153
 554:..\src/command_processing.c ****                             }
 555:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3339              		.loc 1 555 0 is_stmt 1
 3340 188e 07F5A253 		add	r3, r7, #5184
 3341 1892 03F10E03 		add	r3, r3, #14
 3342 1896 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3343 1898 7349     		ldr	r1, .L263
 3344 189a 1346     		mov	r3, r2
 3345 189c DB00     		lsls	r3, r3, #3
 3346 189e 9B1A     		subs	r3, r3, r2
 3347 18a0 1B01     		lsls	r3, r3, #4
 3348 18a2 0B44     		add	r3, r3, r1
 3349 18a4 B433     		adds	r3, r3, #180
 3350 18a6 1B68     		ldr	r3, [r3]
 3351 18a8 1846     		mov	r0, r3
 3352 18aa FFF7FEFF 		bl	__aeabi_i2f
 3353 18ae 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 86


 3354 18b0 4FF08F41 		mov	r1, #1199570944
 3355 18b4 1846     		mov	r0, r3
 3356 18b6 FFF7FEFF 		bl	__aeabi_fdiv
 3357 18ba 0346     		mov	r3, r0
 3358 18bc 1A46     		mov	r2, r3
 3359 18be 07F13803 		add	r3, r7, #56
 3360 18c2 183B     		subs	r3, r3, #24
 3361 18c4 1A60     		str	r2, [r3]	@ float
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3362              		.loc 1 556 0
 3363 18c6 0023     		movs	r3, #0
 3364 18c8 07F5A252 		add	r2, r7, #5184
 3365 18cc 02F11702 		add	r2, r2, #23
 3366 18d0 1370     		strb	r3, [r2]
 3367 18d2 33E0     		b	.L154
 3368              	.L155:
 557:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3369              		.loc 1 557 0 discriminator 3
 3370 18d4 07F5A253 		add	r3, r7, #5184
 3371 18d8 03F11503 		add	r3, r3, #21
 3372 18dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3373 18de 3222     		movs	r2, #50
 3374 18e0 02FB03F3 		mul	r3, r2, r3
 3375 18e4 1A1D     		adds	r2, r3, #4
 3376 18e6 07F5A253 		add	r3, r7, #5184
 3377 18ea 03F11303 		add	r3, r3, #19
 3378 18ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3379 18f0 1A44     		add	r2, r2, r3
 3380 18f2 07F5A253 		add	r3, r7, #5184
 3381 18f6 03F11303 		add	r3, r3, #19
 3382 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3383 18fc 1A44     		add	r2, r2, r3
 3384 18fe 07F5A253 		add	r3, r7, #5184
 3385 1902 03F11703 		add	r3, r3, #23
 3386 1906 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3387 1908 D31A     		subs	r3, r2, r3
 3388 190a 5A1E     		subs	r2, r3, #1
 3389 190c 07F5A253 		add	r3, r7, #5184
 3390 1910 03F11703 		add	r3, r3, #23
 3391 1914 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3392 1916 07F13803 		add	r3, r7, #56
 3393 191a 183B     		subs	r3, r3, #24
 3394 191c 0B44     		add	r3, r3, r1
 3395 191e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3396 1920 07F15803 		add	r3, r7, #88
 3397 1924 9954     		strb	r1, [r3, r2]
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3398              		.loc 1 556 0 discriminator 3
 3399 1926 07F5A253 		add	r3, r7, #5184
 3400 192a 03F11703 		add	r3, r3, #23
 3401 192e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3402 1930 0133     		adds	r3, r3, #1
 3403 1932 07F5A252 		add	r2, r7, #5184
 3404 1936 02F11702 		add	r2, r2, #23
 3405 193a 1370     		strb	r3, [r2]
 3406              	.L154:
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 87


 3407              		.loc 1 556 0 is_stmt 0 discriminator 1
 3408 193c 07F5A253 		add	r3, r7, #5184
 3409 1940 03F11703 		add	r3, r3, #23
 3410 1944 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3411 1946 07F5A253 		add	r3, r7, #5184
 3412 194a 03F11303 		add	r3, r3, #19
 3413 194e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3414 1950 9A42     		cmp	r2, r3
 3415 1952 BFD3     		bcc	.L155
 558:..\src/command_processing.c ****                             }
 559:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3416              		.loc 1 559 0 is_stmt 1
 3417 1954 07F5A253 		add	r3, r7, #5184
 3418 1958 03F10E03 		add	r3, r3, #14
 3419 195c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3420 195e 4249     		ldr	r1, .L263
 3421 1960 1346     		mov	r3, r2
 3422 1962 DB00     		lsls	r3, r3, #3
 3423 1964 9B1A     		subs	r3, r3, r2
 3424 1966 1B01     		lsls	r3, r3, #4
 3425 1968 0B44     		add	r3, r3, r1
 3426 196a B833     		adds	r3, r3, #184
 3427 196c 1B68     		ldr	r3, [r3]
 3428 196e 1846     		mov	r0, r3
 3429 1970 FFF7FEFF 		bl	__aeabi_i2f
 3430 1974 0346     		mov	r3, r0
 3431 1976 4FF08F41 		mov	r1, #1199570944
 3432 197a 1846     		mov	r0, r3
 3433 197c FFF7FEFF 		bl	__aeabi_fdiv
 3434 1980 0346     		mov	r3, r0
 3435 1982 1A46     		mov	r2, r3
 3436 1984 07F13803 		add	r3, r7, #56
 3437 1988 183B     		subs	r3, r3, #24
 3438 198a 1A60     		str	r2, [r3]	@ float
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3439              		.loc 1 560 0
 3440 198c 0023     		movs	r3, #0
 3441 198e 07F5A252 		add	r2, r7, #5184
 3442 1992 02F11702 		add	r2, r2, #23
 3443 1996 1370     		strb	r3, [r2]
 3444 1998 34E0     		b	.L156
 3445              	.L157:
 561:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3446              		.loc 1 561 0 discriminator 3
 3447 199a 07F5A253 		add	r3, r7, #5184
 3448 199e 03F11503 		add	r3, r3, #21
 3449 19a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3450 19a4 3222     		movs	r2, #50
 3451 19a6 02FB03F3 		mul	r3, r2, r3
 3452 19aa 1A1D     		adds	r2, r3, #4
 3453 19ac 07F5A253 		add	r3, r7, #5184
 3454 19b0 03F11303 		add	r3, r3, #19
 3455 19b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3456 19b6 5B00     		lsls	r3, r3, #1
 3457 19b8 1A44     		add	r2, r2, r3
 3458 19ba 07F5A253 		add	r3, r7, #5184
 3459 19be 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 88


 3460 19c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3461 19c4 1A44     		add	r2, r2, r3
 3462 19c6 07F5A253 		add	r3, r7, #5184
 3463 19ca 03F11703 		add	r3, r3, #23
 3464 19ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3465 19d0 D31A     		subs	r3, r2, r3
 3466 19d2 5A1E     		subs	r2, r3, #1
 3467 19d4 07F5A253 		add	r3, r7, #5184
 3468 19d8 03F11703 		add	r3, r3, #23
 3469 19dc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3470 19de 07F13803 		add	r3, r7, #56
 3471 19e2 183B     		subs	r3, r3, #24
 3472 19e4 0B44     		add	r3, r3, r1
 3473 19e6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3474 19e8 07F15803 		add	r3, r7, #88
 3475 19ec 9954     		strb	r1, [r3, r2]
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3476              		.loc 1 560 0 discriminator 3
 3477 19ee 07F5A253 		add	r3, r7, #5184
 3478 19f2 03F11703 		add	r3, r3, #23
 3479 19f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3480 19f8 0133     		adds	r3, r3, #1
 3481 19fa 07F5A252 		add	r2, r7, #5184
 3482 19fe 02F11702 		add	r2, r2, #23
 3483 1a02 1370     		strb	r3, [r2]
 3484              	.L156:
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3485              		.loc 1 560 0 is_stmt 0 discriminator 1
 3486 1a04 07F5A253 		add	r3, r7, #5184
 3487 1a08 03F11703 		add	r3, r3, #23
 3488 1a0c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3489 1a0e 07F5A253 		add	r3, r7, #5184
 3490 1a12 03F11303 		add	r3, r3, #19
 3491 1a16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3492 1a18 9A42     		cmp	r2, r3
 3493 1a1a BED3     		bcc	.L157
 562:..\src/command_processing.c ****                             } 
 563:..\src/command_processing.c ****                         }
 564:..\src/command_processing.c ****                         else {
 565:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 567:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 568:..\src/command_processing.c ****                             }
 569:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 570:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 571:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 572:..\src/command_processing.c ****                             }
 573:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 574:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 575:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 576:..\src/command_processing.c ****                             }
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;
 3494              		.loc 1 578 0 is_stmt 1
 3495 1a1c 00F0F9BC 		b	.L103
 3496              	.L151:
 565:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 89


 3497              		.loc 1 565 0
 3498 1a20 07F5A253 		add	r3, r7, #5184
 3499 1a24 03F10E03 		add	r3, r3, #14
 3500 1a28 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3501 1a2a 0F49     		ldr	r1, .L263
 3502 1a2c 1346     		mov	r3, r2
 3503 1a2e DB00     		lsls	r3, r3, #3
 3504 1a30 9B1A     		subs	r3, r3, r2
 3505 1a32 1B01     		lsls	r3, r3, #4
 3506 1a34 0B44     		add	r3, r3, r1
 3507 1a36 C833     		adds	r3, r3, #200
 3508 1a38 1B68     		ldr	r3, [r3]
 3509 1a3a 1846     		mov	r0, r3
 3510 1a3c FFF7FEFF 		bl	__aeabi_i2f
 3511 1a40 0346     		mov	r3, r0
 3512 1a42 4FF08F41 		mov	r1, #1199570944
 3513 1a46 1846     		mov	r0, r3
 3514 1a48 FFF7FEFF 		bl	__aeabi_fdiv
 3515 1a4c 0346     		mov	r3, r0
 3516 1a4e 1A46     		mov	r2, r3
 3517 1a50 07F13803 		add	r3, r7, #56
 3518 1a54 183B     		subs	r3, r3, #24
 3519 1a56 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3520              		.loc 1 566 0
 3521 1a58 0023     		movs	r3, #0
 3522 1a5a 07F5A252 		add	r2, r7, #5184
 3523 1a5e 02F11702 		add	r2, r2, #23
 3524 1a62 1370     		strb	r3, [r2]
 3525 1a64 30E0     		b	.L159
 3526              	.L264:
 3527 1a66 00BF     		.align	2
 3528              	.L263:
 3529 1a68 00000000 		.word	c_mem
 3530              	.L160:
 567:..\src/command_processing.c ****                             }
 3531              		.loc 1 567 0 discriminator 3
 3532 1a6c 07F5A253 		add	r3, r7, #5184
 3533 1a70 03F11503 		add	r3, r3, #21
 3534 1a74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3535 1a76 3222     		movs	r2, #50
 3536 1a78 02FB03F3 		mul	r3, r2, r3
 3537 1a7c 1A1D     		adds	r2, r3, #4
 3538 1a7e 07F5A253 		add	r3, r7, #5184
 3539 1a82 03F11303 		add	r3, r3, #19
 3540 1a86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3541 1a88 1A44     		add	r2, r2, r3
 3542 1a8a 07F5A253 		add	r3, r7, #5184
 3543 1a8e 03F11703 		add	r3, r3, #23
 3544 1a92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3545 1a94 D31A     		subs	r3, r2, r3
 3546 1a96 5A1E     		subs	r2, r3, #1
 3547 1a98 07F5A253 		add	r3, r7, #5184
 3548 1a9c 03F11703 		add	r3, r3, #23
 3549 1aa0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3550 1aa2 07F13803 		add	r3, r7, #56
 3551 1aa6 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 90


 3552 1aa8 0B44     		add	r3, r3, r1
 3553 1aaa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3554 1aac 07F15803 		add	r3, r7, #88
 3555 1ab0 9954     		strb	r1, [r3, r2]
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3556              		.loc 1 566 0 discriminator 3
 3557 1ab2 07F5A253 		add	r3, r7, #5184
 3558 1ab6 03F11703 		add	r3, r3, #23
 3559 1aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3560 1abc 0133     		adds	r3, r3, #1
 3561 1abe 07F5A252 		add	r2, r7, #5184
 3562 1ac2 02F11702 		add	r2, r2, #23
 3563 1ac6 1370     		strb	r3, [r2]
 3564              	.L159:
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3565              		.loc 1 566 0 is_stmt 0 discriminator 1
 3566 1ac8 07F5A253 		add	r3, r7, #5184
 3567 1acc 03F11703 		add	r3, r3, #23
 3568 1ad0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3569 1ad2 07F5A253 		add	r3, r7, #5184
 3570 1ad6 03F11303 		add	r3, r3, #19
 3571 1ada 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3572 1adc 9A42     		cmp	r2, r3
 3573 1ade C5D3     		bcc	.L160
 569:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3574              		.loc 1 569 0 is_stmt 1
 3575 1ae0 07F5A253 		add	r3, r7, #5184
 3576 1ae4 03F10E03 		add	r3, r3, #14
 3577 1ae8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3578 1aea AA49     		ldr	r1, .L265
 3579 1aec 1346     		mov	r3, r2
 3580 1aee DB00     		lsls	r3, r3, #3
 3581 1af0 9B1A     		subs	r3, r3, r2
 3582 1af2 1B01     		lsls	r3, r3, #4
 3583 1af4 0B44     		add	r3, r3, r1
 3584 1af6 CC33     		adds	r3, r3, #204
 3585 1af8 1B68     		ldr	r3, [r3]
 3586 1afa 1846     		mov	r0, r3
 3587 1afc FFF7FEFF 		bl	__aeabi_i2f
 3588 1b00 0346     		mov	r3, r0
 3589 1b02 4FF08F41 		mov	r1, #1199570944
 3590 1b06 1846     		mov	r0, r3
 3591 1b08 FFF7FEFF 		bl	__aeabi_fdiv
 3592 1b0c 0346     		mov	r3, r0
 3593 1b0e 1A46     		mov	r2, r3
 3594 1b10 07F13803 		add	r3, r7, #56
 3595 1b14 183B     		subs	r3, r3, #24
 3596 1b16 1A60     		str	r2, [r3]	@ float
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3597              		.loc 1 570 0
 3598 1b18 0023     		movs	r3, #0
 3599 1b1a 07F5A252 		add	r2, r7, #5184
 3600 1b1e 02F11702 		add	r2, r2, #23
 3601 1b22 1370     		strb	r3, [r2]
 3602 1b24 33E0     		b	.L161
 3603              	.L162:
 571:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 91


 3604              		.loc 1 571 0 discriminator 3
 3605 1b26 07F5A253 		add	r3, r7, #5184
 3606 1b2a 03F11503 		add	r3, r3, #21
 3607 1b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3608 1b30 3222     		movs	r2, #50
 3609 1b32 02FB03F3 		mul	r3, r2, r3
 3610 1b36 1A1D     		adds	r2, r3, #4
 3611 1b38 07F5A253 		add	r3, r7, #5184
 3612 1b3c 03F11303 		add	r3, r3, #19
 3613 1b40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3614 1b42 1A44     		add	r2, r2, r3
 3615 1b44 07F5A253 		add	r3, r7, #5184
 3616 1b48 03F11303 		add	r3, r3, #19
 3617 1b4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3618 1b4e 1A44     		add	r2, r2, r3
 3619 1b50 07F5A253 		add	r3, r7, #5184
 3620 1b54 03F11703 		add	r3, r3, #23
 3621 1b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3622 1b5a D31A     		subs	r3, r2, r3
 3623 1b5c 5A1E     		subs	r2, r3, #1
 3624 1b5e 07F5A253 		add	r3, r7, #5184
 3625 1b62 03F11703 		add	r3, r3, #23
 3626 1b66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3627 1b68 07F13803 		add	r3, r7, #56
 3628 1b6c 183B     		subs	r3, r3, #24
 3629 1b6e 0B44     		add	r3, r3, r1
 3630 1b70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3631 1b72 07F15803 		add	r3, r7, #88
 3632 1b76 9954     		strb	r1, [r3, r2]
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3633              		.loc 1 570 0 discriminator 3
 3634 1b78 07F5A253 		add	r3, r7, #5184
 3635 1b7c 03F11703 		add	r3, r3, #23
 3636 1b80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3637 1b82 0133     		adds	r3, r3, #1
 3638 1b84 07F5A252 		add	r2, r7, #5184
 3639 1b88 02F11702 		add	r2, r2, #23
 3640 1b8c 1370     		strb	r3, [r2]
 3641              	.L161:
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3642              		.loc 1 570 0 is_stmt 0 discriminator 1
 3643 1b8e 07F5A253 		add	r3, r7, #5184
 3644 1b92 03F11703 		add	r3, r3, #23
 3645 1b96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3646 1b98 07F5A253 		add	r3, r7, #5184
 3647 1b9c 03F11303 		add	r3, r3, #19
 3648 1ba0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3649 1ba2 9A42     		cmp	r2, r3
 3650 1ba4 BFD3     		bcc	.L162
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3651              		.loc 1 573 0 is_stmt 1
 3652 1ba6 07F5A253 		add	r3, r7, #5184
 3653 1baa 03F10E03 		add	r3, r3, #14
 3654 1bae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3655 1bb0 7849     		ldr	r1, .L265
 3656 1bb2 1346     		mov	r3, r2
 3657 1bb4 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 92


 3658 1bb6 9B1A     		subs	r3, r3, r2
 3659 1bb8 1B01     		lsls	r3, r3, #4
 3660 1bba 0B44     		add	r3, r3, r1
 3661 1bbc D033     		adds	r3, r3, #208
 3662 1bbe 1B68     		ldr	r3, [r3]
 3663 1bc0 1846     		mov	r0, r3
 3664 1bc2 FFF7FEFF 		bl	__aeabi_i2f
 3665 1bc6 0346     		mov	r3, r0
 3666 1bc8 4FF08F41 		mov	r1, #1199570944
 3667 1bcc 1846     		mov	r0, r3
 3668 1bce FFF7FEFF 		bl	__aeabi_fdiv
 3669 1bd2 0346     		mov	r3, r0
 3670 1bd4 1A46     		mov	r2, r3
 3671 1bd6 07F13803 		add	r3, r7, #56
 3672 1bda 183B     		subs	r3, r3, #24
 3673 1bdc 1A60     		str	r2, [r3]	@ float
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3674              		.loc 1 574 0
 3675 1bde 0023     		movs	r3, #0
 3676 1be0 07F5A252 		add	r2, r7, #5184
 3677 1be4 02F11702 		add	r2, r2, #23
 3678 1be8 1370     		strb	r3, [r2]
 3679 1bea 34E0     		b	.L163
 3680              	.L164:
 575:..\src/command_processing.c ****                             }
 3681              		.loc 1 575 0 discriminator 3
 3682 1bec 07F5A253 		add	r3, r7, #5184
 3683 1bf0 03F11503 		add	r3, r3, #21
 3684 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3685 1bf6 3222     		movs	r2, #50
 3686 1bf8 02FB03F3 		mul	r3, r2, r3
 3687 1bfc 1A1D     		adds	r2, r3, #4
 3688 1bfe 07F5A253 		add	r3, r7, #5184
 3689 1c02 03F11303 		add	r3, r3, #19
 3690 1c06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3691 1c08 5B00     		lsls	r3, r3, #1
 3692 1c0a 1A44     		add	r2, r2, r3
 3693 1c0c 07F5A253 		add	r3, r7, #5184
 3694 1c10 03F11303 		add	r3, r3, #19
 3695 1c14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3696 1c16 1A44     		add	r2, r2, r3
 3697 1c18 07F5A253 		add	r3, r7, #5184
 3698 1c1c 03F11703 		add	r3, r3, #23
 3699 1c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3700 1c22 D31A     		subs	r3, r2, r3
 3701 1c24 5A1E     		subs	r2, r3, #1
 3702 1c26 07F5A253 		add	r3, r7, #5184
 3703 1c2a 03F11703 		add	r3, r3, #23
 3704 1c2e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3705 1c30 07F13803 		add	r3, r7, #56
 3706 1c34 183B     		subs	r3, r3, #24
 3707 1c36 0B44     		add	r3, r3, r1
 3708 1c38 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3709 1c3a 07F15803 		add	r3, r7, #88
 3710 1c3e 9954     		strb	r1, [r3, r2]
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3711              		.loc 1 574 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 93


 3712 1c40 07F5A253 		add	r3, r7, #5184
 3713 1c44 03F11703 		add	r3, r3, #23
 3714 1c48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3715 1c4a 0133     		adds	r3, r3, #1
 3716 1c4c 07F5A252 		add	r2, r7, #5184
 3717 1c50 02F11702 		add	r2, r2, #23
 3718 1c54 1370     		strb	r3, [r2]
 3719              	.L163:
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3720              		.loc 1 574 0 is_stmt 0 discriminator 1
 3721 1c56 07F5A253 		add	r3, r7, #5184
 3722 1c5a 03F11703 		add	r3, r3, #23
 3723 1c5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3724 1c60 07F5A253 		add	r3, r7, #5184
 3725 1c64 03F11303 		add	r3, r3, #19
 3726 1c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3727 1c6a 9A42     		cmp	r2, r3
 3728 1c6c BED3     		bcc	.L164
 3729              		.loc 1 578 0 is_stmt 1
 3730 1c6e D0E3     		b	.L103
 3731              	.L112:
 579:..\src/command_processing.c ****                         
 580:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 581:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3732              		.loc 1 581 0
 3733 1c70 07F5A253 		add	r3, r7, #5184
 3734 1c74 03F10E03 		add	r3, r3, #14
 3735 1c78 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3736 1c7a 4649     		ldr	r1, .L265
 3737 1c7c 1346     		mov	r3, r2
 3738 1c7e DB00     		lsls	r3, r3, #3
 3739 1c80 9B1A     		subs	r3, r3, r2
 3740 1c82 1B01     		lsls	r3, r3, #4
 3741 1c84 0B44     		add	r3, r3, r1
 3742 1c86 03F20F13 		addw	r3, r3, #271
 3743 1c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3744 1c8c 032B     		cmp	r3, #3
 3745 1c8e 00F02881 		beq	.L165
 582:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3746              		.loc 1 582 0
 3747 1c92 07F5A253 		add	r3, r7, #5184
 3748 1c96 03F10E03 		add	r3, r3, #14
 3749 1c9a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3750 1c9c 3D49     		ldr	r1, .L265
 3751 1c9e 1346     		mov	r3, r2
 3752 1ca0 DB00     		lsls	r3, r3, #3
 3753 1ca2 9B1A     		subs	r3, r3, r2
 3754 1ca4 1B01     		lsls	r3, r3, #4
 3755 1ca6 0B44     		add	r3, r3, r1
 3756 1ca8 BC33     		adds	r3, r3, #188
 3757 1caa 1B68     		ldr	r3, [r3]
 3758 1cac 1846     		mov	r0, r3
 3759 1cae FFF7FEFF 		bl	__aeabi_i2f
 3760 1cb2 0346     		mov	r3, r0
 3761 1cb4 4FF08F41 		mov	r1, #1199570944
 3762 1cb8 1846     		mov	r0, r3
 3763 1cba FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 94


 3764 1cbe 0346     		mov	r3, r0
 3765 1cc0 1A46     		mov	r2, r3
 3766 1cc2 07F13803 		add	r3, r7, #56
 3767 1cc6 183B     		subs	r3, r3, #24
 3768 1cc8 1A60     		str	r2, [r3]	@ float
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3769              		.loc 1 583 0
 3770 1cca 0023     		movs	r3, #0
 3771 1ccc 07F5A252 		add	r2, r7, #5184
 3772 1cd0 02F11702 		add	r2, r2, #23
 3773 1cd4 1370     		strb	r3, [r2]
 3774 1cd6 2DE0     		b	.L166
 3775              	.L167:
 584:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3776              		.loc 1 584 0 discriminator 3
 3777 1cd8 07F5A253 		add	r3, r7, #5184
 3778 1cdc 03F11503 		add	r3, r3, #21
 3779 1ce0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3780 1ce2 3222     		movs	r2, #50
 3781 1ce4 02FB03F3 		mul	r3, r2, r3
 3782 1ce8 1A1D     		adds	r2, r3, #4
 3783 1cea 07F5A253 		add	r3, r7, #5184
 3784 1cee 03F11303 		add	r3, r3, #19
 3785 1cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3786 1cf4 1A44     		add	r2, r2, r3
 3787 1cf6 07F5A253 		add	r3, r7, #5184
 3788 1cfa 03F11703 		add	r3, r3, #23
 3789 1cfe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3790 1d00 D31A     		subs	r3, r2, r3
 3791 1d02 5A1E     		subs	r2, r3, #1
 3792 1d04 07F5A253 		add	r3, r7, #5184
 3793 1d08 03F11703 		add	r3, r3, #23
 3794 1d0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3795 1d0e 07F13803 		add	r3, r7, #56
 3796 1d12 183B     		subs	r3, r3, #24
 3797 1d14 0B44     		add	r3, r3, r1
 3798 1d16 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3799 1d18 07F15803 		add	r3, r7, #88
 3800 1d1c 9954     		strb	r1, [r3, r2]
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3801              		.loc 1 583 0 discriminator 3
 3802 1d1e 07F5A253 		add	r3, r7, #5184
 3803 1d22 03F11703 		add	r3, r3, #23
 3804 1d26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3805 1d28 0133     		adds	r3, r3, #1
 3806 1d2a 07F5A252 		add	r2, r7, #5184
 3807 1d2e 02F11702 		add	r2, r2, #23
 3808 1d32 1370     		strb	r3, [r2]
 3809              	.L166:
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3810              		.loc 1 583 0 is_stmt 0 discriminator 1
 3811 1d34 07F5A253 		add	r3, r7, #5184
 3812 1d38 03F11703 		add	r3, r3, #23
 3813 1d3c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3814 1d3e 07F5A253 		add	r3, r7, #5184
 3815 1d42 03F11303 		add	r3, r3, #19
 3816 1d46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 95


 3817 1d48 9A42     		cmp	r2, r3
 3818 1d4a C5D3     		bcc	.L167
 585:..\src/command_processing.c ****                             }
 586:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3819              		.loc 1 586 0 is_stmt 1
 3820 1d4c 07F5A253 		add	r3, r7, #5184
 3821 1d50 03F10E03 		add	r3, r3, #14
 3822 1d54 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3823 1d56 0F49     		ldr	r1, .L265
 3824 1d58 1346     		mov	r3, r2
 3825 1d5a DB00     		lsls	r3, r3, #3
 3826 1d5c 9B1A     		subs	r3, r3, r2
 3827 1d5e 1B01     		lsls	r3, r3, #4
 3828 1d60 0B44     		add	r3, r3, r1
 3829 1d62 C033     		adds	r3, r3, #192
 3830 1d64 1B68     		ldr	r3, [r3]
 3831 1d66 1846     		mov	r0, r3
 3832 1d68 FFF7FEFF 		bl	__aeabi_i2f
 3833 1d6c 0346     		mov	r3, r0
 3834 1d6e 4FF08F41 		mov	r1, #1199570944
 3835 1d72 1846     		mov	r0, r3
 3836 1d74 FFF7FEFF 		bl	__aeabi_fdiv
 3837 1d78 0346     		mov	r3, r0
 3838 1d7a 1A46     		mov	r2, r3
 3839 1d7c 07F13803 		add	r3, r7, #56
 3840 1d80 183B     		subs	r3, r3, #24
 3841 1d82 1A60     		str	r2, [r3]	@ float
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3842              		.loc 1 587 0
 3843 1d84 0023     		movs	r3, #0
 3844 1d86 07F5A252 		add	r2, r7, #5184
 3845 1d8a 02F11702 		add	r2, r2, #23
 3846 1d8e 1370     		strb	r3, [r2]
 3847 1d90 36E0     		b	.L168
 3848              	.L266:
 3849 1d92 00BF     		.align	2
 3850              	.L265:
 3851 1d94 00000000 		.word	c_mem
 3852              	.L169:
 588:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3853              		.loc 1 588 0 discriminator 3
 3854 1d98 07F5A253 		add	r3, r7, #5184
 3855 1d9c 03F11503 		add	r3, r3, #21
 3856 1da0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3857 1da2 3222     		movs	r2, #50
 3858 1da4 02FB03F3 		mul	r3, r2, r3
 3859 1da8 1A1D     		adds	r2, r3, #4
 3860 1daa 07F5A253 		add	r3, r7, #5184
 3861 1dae 03F11303 		add	r3, r3, #19
 3862 1db2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3863 1db4 1A44     		add	r2, r2, r3
 3864 1db6 07F5A253 		add	r3, r7, #5184
 3865 1dba 03F11303 		add	r3, r3, #19
 3866 1dbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3867 1dc0 1A44     		add	r2, r2, r3
 3868 1dc2 07F5A253 		add	r3, r7, #5184
 3869 1dc6 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 96


 3870 1dca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3871 1dcc D31A     		subs	r3, r2, r3
 3872 1dce 5A1E     		subs	r2, r3, #1
 3873 1dd0 07F5A253 		add	r3, r7, #5184
 3874 1dd4 03F11703 		add	r3, r3, #23
 3875 1dd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3876 1dda 07F13803 		add	r3, r7, #56
 3877 1dde 183B     		subs	r3, r3, #24
 3878 1de0 0B44     		add	r3, r3, r1
 3879 1de2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3880 1de4 07F15803 		add	r3, r7, #88
 3881 1de8 9954     		strb	r1, [r3, r2]
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3882              		.loc 1 587 0 discriminator 3
 3883 1dea 07F5A253 		add	r3, r7, #5184
 3884 1dee 03F11703 		add	r3, r3, #23
 3885 1df2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3886 1df4 0133     		adds	r3, r3, #1
 3887 1df6 07F5A252 		add	r2, r7, #5184
 3888 1dfa 02F11702 		add	r2, r2, #23
 3889 1dfe 1370     		strb	r3, [r2]
 3890              	.L168:
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3891              		.loc 1 587 0 is_stmt 0 discriminator 1
 3892 1e00 07F5A253 		add	r3, r7, #5184
 3893 1e04 03F11703 		add	r3, r3, #23
 3894 1e08 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3895 1e0a 07F5A253 		add	r3, r7, #5184
 3896 1e0e 03F11303 		add	r3, r3, #19
 3897 1e12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3898 1e14 9A42     		cmp	r2, r3
 3899 1e16 BFD3     		bcc	.L169
 589:..\src/command_processing.c ****                             }
 590:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 3900              		.loc 1 590 0 is_stmt 1
 3901 1e18 07F5A253 		add	r3, r7, #5184
 3902 1e1c 03F10E03 		add	r3, r3, #14
 3903 1e20 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3904 1e22 C249     		ldr	r1, .L267
 3905 1e24 1346     		mov	r3, r2
 3906 1e26 DB00     		lsls	r3, r3, #3
 3907 1e28 9B1A     		subs	r3, r3, r2
 3908 1e2a 1B01     		lsls	r3, r3, #4
 3909 1e2c 0B44     		add	r3, r3, r1
 3910 1e2e C433     		adds	r3, r3, #196
 3911 1e30 1B68     		ldr	r3, [r3]
 3912 1e32 1846     		mov	r0, r3
 3913 1e34 FFF7FEFF 		bl	__aeabi_i2f
 3914 1e38 0346     		mov	r3, r0
 3915 1e3a 4FF08F41 		mov	r1, #1199570944
 3916 1e3e 1846     		mov	r0, r3
 3917 1e40 FFF7FEFF 		bl	__aeabi_fdiv
 3918 1e44 0346     		mov	r3, r0
 3919 1e46 1A46     		mov	r2, r3
 3920 1e48 07F13803 		add	r3, r7, #56
 3921 1e4c 183B     		subs	r3, r3, #24
 3922 1e4e 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 97


 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3923              		.loc 1 591 0
 3924 1e50 0023     		movs	r3, #0
 3925 1e52 07F5A252 		add	r2, r7, #5184
 3926 1e56 02F11702 		add	r2, r2, #23
 3927 1e5a 1370     		strb	r3, [r2]
 3928 1e5c 34E0     		b	.L170
 3929              	.L171:
 592:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3930              		.loc 1 592 0 discriminator 3
 3931 1e5e 07F5A253 		add	r3, r7, #5184
 3932 1e62 03F11503 		add	r3, r3, #21
 3933 1e66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3934 1e68 3222     		movs	r2, #50
 3935 1e6a 02FB03F3 		mul	r3, r2, r3
 3936 1e6e 1A1D     		adds	r2, r3, #4
 3937 1e70 07F5A253 		add	r3, r7, #5184
 3938 1e74 03F11303 		add	r3, r3, #19
 3939 1e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3940 1e7a 5B00     		lsls	r3, r3, #1
 3941 1e7c 1A44     		add	r2, r2, r3
 3942 1e7e 07F5A253 		add	r3, r7, #5184
 3943 1e82 03F11303 		add	r3, r3, #19
 3944 1e86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3945 1e88 1A44     		add	r2, r2, r3
 3946 1e8a 07F5A253 		add	r3, r7, #5184
 3947 1e8e 03F11703 		add	r3, r3, #23
 3948 1e92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3949 1e94 D31A     		subs	r3, r2, r3
 3950 1e96 5A1E     		subs	r2, r3, #1
 3951 1e98 07F5A253 		add	r3, r7, #5184
 3952 1e9c 03F11703 		add	r3, r3, #23
 3953 1ea0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3954 1ea2 07F13803 		add	r3, r7, #56
 3955 1ea6 183B     		subs	r3, r3, #24
 3956 1ea8 0B44     		add	r3, r3, r1
 3957 1eaa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3958 1eac 07F15803 		add	r3, r7, #88
 3959 1eb0 9954     		strb	r1, [r3, r2]
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3960              		.loc 1 591 0 discriminator 3
 3961 1eb2 07F5A253 		add	r3, r7, #5184
 3962 1eb6 03F11703 		add	r3, r3, #23
 3963 1eba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3964 1ebc 0133     		adds	r3, r3, #1
 3965 1ebe 07F5A252 		add	r2, r7, #5184
 3966 1ec2 02F11702 		add	r2, r2, #23
 3967 1ec6 1370     		strb	r3, [r2]
 3968              	.L170:
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3969              		.loc 1 591 0 is_stmt 0 discriminator 1
 3970 1ec8 07F5A253 		add	r3, r7, #5184
 3971 1ecc 03F11703 		add	r3, r3, #23
 3972 1ed0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3973 1ed2 07F5A253 		add	r3, r7, #5184
 3974 1ed6 03F11303 		add	r3, r3, #19
 3975 1eda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 98


 3976 1edc 9A42     		cmp	r2, r3
 3977 1ede BED3     		bcc	.L171
 593:..\src/command_processing.c ****                             }
 594:..\src/command_processing.c ****                         }
 595:..\src/command_processing.c ****                         else {
 596:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 599:..\src/command_processing.c ****                             }
 600:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 603:..\src/command_processing.c ****                             }
 604:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 607:..\src/command_processing.c ****                             }
 608:..\src/command_processing.c ****                         }            
 609:..\src/command_processing.c ****                         break;  
 3978              		.loc 1 609 0 is_stmt 1
 3979 1ee0 97E2     		b	.L103
 3980              	.L165:
 596:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3981              		.loc 1 596 0
 3982 1ee2 07F5A253 		add	r3, r7, #5184
 3983 1ee6 03F10E03 		add	r3, r3, #14
 3984 1eea 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3985 1eec 8F49     		ldr	r1, .L267
 3986 1eee 1346     		mov	r3, r2
 3987 1ef0 DB00     		lsls	r3, r3, #3
 3988 1ef2 9B1A     		subs	r3, r3, r2
 3989 1ef4 1B01     		lsls	r3, r3, #4
 3990 1ef6 0B44     		add	r3, r3, r1
 3991 1ef8 D433     		adds	r3, r3, #212
 3992 1efa 1B68     		ldr	r3, [r3]
 3993 1efc 1846     		mov	r0, r3
 3994 1efe FFF7FEFF 		bl	__aeabi_i2f
 3995 1f02 0346     		mov	r3, r0
 3996 1f04 4FF08F41 		mov	r1, #1199570944
 3997 1f08 1846     		mov	r0, r3
 3998 1f0a FFF7FEFF 		bl	__aeabi_fdiv
 3999 1f0e 0346     		mov	r3, r0
 4000 1f10 1A46     		mov	r2, r3
 4001 1f12 07F13803 		add	r3, r7, #56
 4002 1f16 183B     		subs	r3, r3, #24
 4003 1f18 1A60     		str	r2, [r3]	@ float
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4004              		.loc 1 597 0
 4005 1f1a 0023     		movs	r3, #0
 4006 1f1c 07F5A252 		add	r2, r7, #5184
 4007 1f20 02F11702 		add	r2, r2, #23
 4008 1f24 1370     		strb	r3, [r2]
 4009 1f26 2DE0     		b	.L173
 4010              	.L174:
 598:..\src/command_processing.c ****                             }
 4011              		.loc 1 598 0 discriminator 3
 4012 1f28 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 99


 4013 1f2c 03F11503 		add	r3, r3, #21
 4014 1f30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4015 1f32 3222     		movs	r2, #50
 4016 1f34 02FB03F3 		mul	r3, r2, r3
 4017 1f38 1A1D     		adds	r2, r3, #4
 4018 1f3a 07F5A253 		add	r3, r7, #5184
 4019 1f3e 03F11303 		add	r3, r3, #19
 4020 1f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4021 1f44 1A44     		add	r2, r2, r3
 4022 1f46 07F5A253 		add	r3, r7, #5184
 4023 1f4a 03F11703 		add	r3, r3, #23
 4024 1f4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4025 1f50 D31A     		subs	r3, r2, r3
 4026 1f52 5A1E     		subs	r2, r3, #1
 4027 1f54 07F5A253 		add	r3, r7, #5184
 4028 1f58 03F11703 		add	r3, r3, #23
 4029 1f5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4030 1f5e 07F13803 		add	r3, r7, #56
 4031 1f62 183B     		subs	r3, r3, #24
 4032 1f64 0B44     		add	r3, r3, r1
 4033 1f66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4034 1f68 07F15803 		add	r3, r7, #88
 4035 1f6c 9954     		strb	r1, [r3, r2]
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4036              		.loc 1 597 0 discriminator 3
 4037 1f6e 07F5A253 		add	r3, r7, #5184
 4038 1f72 03F11703 		add	r3, r3, #23
 4039 1f76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4040 1f78 0133     		adds	r3, r3, #1
 4041 1f7a 07F5A252 		add	r2, r7, #5184
 4042 1f7e 02F11702 		add	r2, r2, #23
 4043 1f82 1370     		strb	r3, [r2]
 4044              	.L173:
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4045              		.loc 1 597 0 is_stmt 0 discriminator 1
 4046 1f84 07F5A253 		add	r3, r7, #5184
 4047 1f88 03F11703 		add	r3, r3, #23
 4048 1f8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4049 1f8e 07F5A253 		add	r3, r7, #5184
 4050 1f92 03F11303 		add	r3, r3, #19
 4051 1f96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4052 1f98 9A42     		cmp	r2, r3
 4053 1f9a C5D3     		bcc	.L174
 600:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4054              		.loc 1 600 0 is_stmt 1
 4055 1f9c 07F5A253 		add	r3, r7, #5184
 4056 1fa0 03F10E03 		add	r3, r3, #14
 4057 1fa4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4058 1fa6 6149     		ldr	r1, .L267
 4059 1fa8 1346     		mov	r3, r2
 4060 1faa DB00     		lsls	r3, r3, #3
 4061 1fac 9B1A     		subs	r3, r3, r2
 4062 1fae 1B01     		lsls	r3, r3, #4
 4063 1fb0 0B44     		add	r3, r3, r1
 4064 1fb2 D833     		adds	r3, r3, #216
 4065 1fb4 1B68     		ldr	r3, [r3]
 4066 1fb6 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 100


 4067 1fb8 FFF7FEFF 		bl	__aeabi_i2f
 4068 1fbc 0346     		mov	r3, r0
 4069 1fbe 4FF08F41 		mov	r1, #1199570944
 4070 1fc2 1846     		mov	r0, r3
 4071 1fc4 FFF7FEFF 		bl	__aeabi_fdiv
 4072 1fc8 0346     		mov	r3, r0
 4073 1fca 1A46     		mov	r2, r3
 4074 1fcc 07F13803 		add	r3, r7, #56
 4075 1fd0 183B     		subs	r3, r3, #24
 4076 1fd2 1A60     		str	r2, [r3]	@ float
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4077              		.loc 1 601 0
 4078 1fd4 0023     		movs	r3, #0
 4079 1fd6 07F5A252 		add	r2, r7, #5184
 4080 1fda 02F11702 		add	r2, r2, #23
 4081 1fde 1370     		strb	r3, [r2]
 4082 1fe0 33E0     		b	.L175
 4083              	.L176:
 602:..\src/command_processing.c ****                             }
 4084              		.loc 1 602 0 discriminator 3
 4085 1fe2 07F5A253 		add	r3, r7, #5184
 4086 1fe6 03F11503 		add	r3, r3, #21
 4087 1fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4088 1fec 3222     		movs	r2, #50
 4089 1fee 02FB03F3 		mul	r3, r2, r3
 4090 1ff2 1A1D     		adds	r2, r3, #4
 4091 1ff4 07F5A253 		add	r3, r7, #5184
 4092 1ff8 03F11303 		add	r3, r3, #19
 4093 1ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4094 1ffe 1A44     		add	r2, r2, r3
 4095 2000 07F5A253 		add	r3, r7, #5184
 4096 2004 03F11303 		add	r3, r3, #19
 4097 2008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4098 200a 1A44     		add	r2, r2, r3
 4099 200c 07F5A253 		add	r3, r7, #5184
 4100 2010 03F11703 		add	r3, r3, #23
 4101 2014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4102 2016 D31A     		subs	r3, r2, r3
 4103 2018 5A1E     		subs	r2, r3, #1
 4104 201a 07F5A253 		add	r3, r7, #5184
 4105 201e 03F11703 		add	r3, r3, #23
 4106 2022 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4107 2024 07F13803 		add	r3, r7, #56
 4108 2028 183B     		subs	r3, r3, #24
 4109 202a 0B44     		add	r3, r3, r1
 4110 202c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4111 202e 07F15803 		add	r3, r7, #88
 4112 2032 9954     		strb	r1, [r3, r2]
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4113              		.loc 1 601 0 discriminator 3
 4114 2034 07F5A253 		add	r3, r7, #5184
 4115 2038 03F11703 		add	r3, r3, #23
 4116 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4117 203e 0133     		adds	r3, r3, #1
 4118 2040 07F5A252 		add	r2, r7, #5184
 4119 2044 02F11702 		add	r2, r2, #23
 4120 2048 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 101


 4121              	.L175:
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4122              		.loc 1 601 0 is_stmt 0 discriminator 1
 4123 204a 07F5A253 		add	r3, r7, #5184
 4124 204e 03F11703 		add	r3, r3, #23
 4125 2052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4126 2054 07F5A253 		add	r3, r7, #5184
 4127 2058 03F11303 		add	r3, r3, #19
 4128 205c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4129 205e 9A42     		cmp	r2, r3
 4130 2060 BFD3     		bcc	.L176
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4131              		.loc 1 604 0 is_stmt 1
 4132 2062 07F5A253 		add	r3, r7, #5184
 4133 2066 03F10E03 		add	r3, r3, #14
 4134 206a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4135 206c 2F49     		ldr	r1, .L267
 4136 206e 1346     		mov	r3, r2
 4137 2070 DB00     		lsls	r3, r3, #3
 4138 2072 9B1A     		subs	r3, r3, r2
 4139 2074 1B01     		lsls	r3, r3, #4
 4140 2076 0B44     		add	r3, r3, r1
 4141 2078 DC33     		adds	r3, r3, #220
 4142 207a 1B68     		ldr	r3, [r3]
 4143 207c 1846     		mov	r0, r3
 4144 207e FFF7FEFF 		bl	__aeabi_i2f
 4145 2082 0346     		mov	r3, r0
 4146 2084 4FF08F41 		mov	r1, #1199570944
 4147 2088 1846     		mov	r0, r3
 4148 208a FFF7FEFF 		bl	__aeabi_fdiv
 4149 208e 0346     		mov	r3, r0
 4150 2090 1A46     		mov	r2, r3
 4151 2092 07F13803 		add	r3, r7, #56
 4152 2096 183B     		subs	r3, r3, #24
 4153 2098 1A60     		str	r2, [r3]	@ float
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4154              		.loc 1 605 0
 4155 209a 0023     		movs	r3, #0
 4156 209c 07F5A252 		add	r2, r7, #5184
 4157 20a0 02F11702 		add	r2, r2, #23
 4158 20a4 1370     		strb	r3, [r2]
 4159 20a6 34E0     		b	.L177
 4160              	.L178:
 606:..\src/command_processing.c ****                             }
 4161              		.loc 1 606 0 discriminator 3
 4162 20a8 07F5A253 		add	r3, r7, #5184
 4163 20ac 03F11503 		add	r3, r3, #21
 4164 20b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4165 20b2 3222     		movs	r2, #50
 4166 20b4 02FB03F3 		mul	r3, r2, r3
 4167 20b8 1A1D     		adds	r2, r3, #4
 4168 20ba 07F5A253 		add	r3, r7, #5184
 4169 20be 03F11303 		add	r3, r3, #19
 4170 20c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4171 20c4 5B00     		lsls	r3, r3, #1
 4172 20c6 1A44     		add	r2, r2, r3
 4173 20c8 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 102


 4174 20cc 03F11303 		add	r3, r3, #19
 4175 20d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4176 20d2 1A44     		add	r2, r2, r3
 4177 20d4 07F5A253 		add	r3, r7, #5184
 4178 20d8 03F11703 		add	r3, r3, #23
 4179 20dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4180 20de D31A     		subs	r3, r2, r3
 4181 20e0 5A1E     		subs	r2, r3, #1
 4182 20e2 07F5A253 		add	r3, r7, #5184
 4183 20e6 03F11703 		add	r3, r3, #23
 4184 20ea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4185 20ec 07F13803 		add	r3, r7, #56
 4186 20f0 183B     		subs	r3, r3, #24
 4187 20f2 0B44     		add	r3, r3, r1
 4188 20f4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4189 20f6 07F15803 		add	r3, r7, #88
 4190 20fa 9954     		strb	r1, [r3, r2]
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4191              		.loc 1 605 0 discriminator 3
 4192 20fc 07F5A253 		add	r3, r7, #5184
 4193 2100 03F11703 		add	r3, r3, #23
 4194 2104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4195 2106 0133     		adds	r3, r3, #1
 4196 2108 07F5A252 		add	r2, r7, #5184
 4197 210c 02F11702 		add	r2, r2, #23
 4198 2110 1370     		strb	r3, [r2]
 4199              	.L177:
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4200              		.loc 1 605 0 is_stmt 0 discriminator 1
 4201 2112 07F5A253 		add	r3, r7, #5184
 4202 2116 03F11703 		add	r3, r3, #23
 4203 211a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4204 211c 07F5A253 		add	r3, r7, #5184
 4205 2120 03F11303 		add	r3, r3, #19
 4206 2124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4207 2126 9A42     		cmp	r2, r3
 4208 2128 BED3     		bcc	.L178
 4209              		.loc 1 609 0 is_stmt 1
 4210 212a 72E1     		b	.L103
 4211              	.L268:
 4212              		.align	2
 4213              	.L267:
 4214 212c 00000000 		.word	c_mem
 4215              	.L113:
 610:..\src/command_processing.c **** 
 611:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 612:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4216              		.loc 1 612 0
 4217 2130 07F5A253 		add	r3, r7, #5184
 4218 2134 03F10E03 		add	r3, r3, #14
 4219 2138 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4220 213a B349     		ldr	r1, .L269
 4221 213c 1346     		mov	r3, r2
 4222 213e DB00     		lsls	r3, r3, #3
 4223 2140 9B1A     		subs	r3, r3, r2
 4224 2142 1B01     		lsls	r3, r3, #4
 4225 2144 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 103


 4226 2146 03F58873 		add	r3, r3, #272
 4227 214a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4228 214c 1846     		mov	r0, r3
 4229 214e 07F5A253 		add	r3, r7, #5184
 4230 2152 03F11703 		add	r3, r3, #23
 4231 2156 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4232 2158 AC49     		ldr	r1, .L269+4
 4233 215a 0346     		mov	r3, r0
 4234 215c 5B00     		lsls	r3, r3, #1
 4235 215e 0344     		add	r3, r3, r0
 4236 2160 9B00     		lsls	r3, r3, #2
 4237 2162 1344     		add	r3, r3, r2
 4238 2164 6633     		adds	r3, r3, #102
 4239 2166 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4240 216a 07F5A253 		add	r3, r7, #5184
 4241 216e 03F10E03 		add	r3, r3, #14
 4242 2172 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4243 2174 A448     		ldr	r0, .L269
 4244 2176 1346     		mov	r3, r2
 4245 2178 DB00     		lsls	r3, r3, #3
 4246 217a 9B1A     		subs	r3, r3, r2
 4247 217c 1B01     		lsls	r3, r3, #4
 4248 217e 0344     		add	r3, r3, r0
 4249 2180 03F58873 		add	r3, r3, #272
 4250 2184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4251 2186 1C46     		mov	r4, r3
 4252 2188 07F5A253 		add	r3, r7, #5184
 4253 218c 03F11703 		add	r3, r3, #23
 4254 2190 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4255 2192 9E48     		ldr	r0, .L269+4
 4256 2194 2346     		mov	r3, r4
 4257 2196 5B00     		lsls	r3, r3, #1
 4258 2198 2344     		add	r3, r3, r4
 4259 219a 1B01     		lsls	r3, r3, #4
 4260 219c 0344     		add	r3, r3, r0
 4261 219e 1344     		add	r3, r3, r2
 4262 21a0 03F29513 		addw	r3, r3, #405
 4263 21a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4264 21a6 41FA03F3 		asr	r3, r1, r3
 4265 21aa 1AB2     		sxth	r2, r3
 4266 21ac 07F13803 		add	r3, r7, #56
 4267 21b0 1A3B     		subs	r3, r3, #26
 4268 21b2 1A80     		strh	r2, [r3]	@ movhi
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4269              		.loc 1 613 0
 4270 21b4 0023     		movs	r3, #0
 4271 21b6 07F5A252 		add	r2, r7, #5184
 4272 21ba 02F11602 		add	r2, r2, #22
 4273 21be 1370     		strb	r3, [r2]
 4274 21c0 3AE0     		b	.L179
 4275              	.L180:
 614:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4276              		.loc 1 614 0 discriminator 3
 4277 21c2 07F5A253 		add	r3, r7, #5184
 4278 21c6 03F11503 		add	r3, r3, #21
 4279 21ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4280 21cc 3222     		movs	r2, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 104


 4281 21ce 02FB03F3 		mul	r3, r2, r3
 4282 21d2 1A1D     		adds	r2, r3, #4
 4283 21d4 07F5A253 		add	r3, r7, #5184
 4284 21d8 03F11703 		add	r3, r3, #23
 4285 21dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4286 21de 07F5A251 		add	r1, r7, #5184
 4287 21e2 01F11301 		add	r1, r1, #19
 4288 21e6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4289 21e8 01FB03F3 		mul	r3, r1, r3
 4290 21ec 1A44     		add	r2, r2, r3
 4291 21ee 07F5A253 		add	r3, r7, #5184
 4292 21f2 03F11303 		add	r3, r3, #19
 4293 21f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4294 21f8 1A44     		add	r2, r2, r3
 4295 21fa 07F5A253 		add	r3, r7, #5184
 4296 21fe 03F11603 		add	r3, r3, #22
 4297 2202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4298 2204 D31A     		subs	r3, r2, r3
 4299 2206 5A1E     		subs	r2, r3, #1
 4300 2208 07F5A253 		add	r3, r7, #5184
 4301 220c 03F11603 		add	r3, r3, #22
 4302 2210 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4303 2212 07F13803 		add	r3, r7, #56
 4304 2216 1A3B     		subs	r3, r3, #26
 4305 2218 0B44     		add	r3, r3, r1
 4306 221a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4307 221c 07F15803 		add	r3, r7, #88
 4308 2220 9954     		strb	r1, [r3, r2]
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4309              		.loc 1 613 0 discriminator 3
 4310 2222 07F5A253 		add	r3, r7, #5184
 4311 2226 03F11603 		add	r3, r3, #22
 4312 222a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4313 222c 0133     		adds	r3, r3, #1
 4314 222e 07F5A252 		add	r2, r7, #5184
 4315 2232 02F11602 		add	r2, r2, #22
 4316 2236 1370     		strb	r3, [r2]
 4317              	.L179:
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4318              		.loc 1 613 0 is_stmt 0 discriminator 1
 4319 2238 07F5A253 		add	r3, r7, #5184
 4320 223c 03F11603 		add	r3, r3, #22
 4321 2240 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4322 2242 07F5A253 		add	r3, r7, #5184
 4323 2246 03F11303 		add	r3, r3, #19
 4324 224a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4325 224c 9A42     		cmp	r2, r3
 4326 224e B8D3     		bcc	.L180
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         break;
 4327              		.loc 1 616 0 is_stmt 1
 4328 2250 DFE0     		b	.L103
 4329              	.L114:
 617:..\src/command_processing.c ****                 
 618:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 619:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4330              		.loc 1 619 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 105


 4331 2252 07F5A253 		add	r3, r7, #5184
 4332 2256 03F10E03 		add	r3, r3, #14
 4333 225a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4334 225c 6B49     		ldr	r1, .L269+4
 4335 225e 1346     		mov	r3, r2
 4336 2260 DB00     		lsls	r3, r3, #3
 4337 2262 9B1A     		subs	r3, r3, r2
 4338 2264 1B01     		lsls	r3, r3, #4
 4339 2266 0B44     		add	r3, r3, r1
 4340 2268 E433     		adds	r3, r3, #228
 4341 226a 1968     		ldr	r1, [r3]
 4342 226c 07F5A253 		add	r3, r7, #5184
 4343 2270 03F10E03 		add	r3, r3, #14
 4344 2274 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4345 2276 6448     		ldr	r0, .L269
 4346 2278 1346     		mov	r3, r2
 4347 227a DB00     		lsls	r3, r3, #3
 4348 227c 9B1A     		subs	r3, r3, r2
 4349 227e 1B01     		lsls	r3, r3, #4
 4350 2280 0344     		add	r3, r3, r0
 4351 2282 03F58873 		add	r3, r3, #272
 4352 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4353 2288 1846     		mov	r0, r3
 4354 228a 604A     		ldr	r2, .L269+4
 4355 228c 0346     		mov	r3, r0
 4356 228e 5B00     		lsls	r3, r3, #1
 4357 2290 0344     		add	r3, r3, r0
 4358 2292 1B01     		lsls	r3, r3, #4
 4359 2294 1344     		add	r3, r3, r2
 4360 2296 03F29513 		addw	r3, r3, #405
 4361 229a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4362 229c 41FA03F2 		asr	r2, r1, r3
 4363 22a0 07F11803 		add	r3, r7, #24
 4364 22a4 1A60     		str	r2, [r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4365              		.loc 1 620 0
 4366 22a6 0023     		movs	r3, #0
 4367 22a8 07F5A252 		add	r2, r7, #5184
 4368 22ac 02F11602 		add	r2, r2, #22
 4369 22b0 1370     		strb	r3, [r2]
 4370 22b2 2CE0     		b	.L181
 4371              	.L182:
 621:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4372              		.loc 1 621 0 discriminator 3
 4373 22b4 07F5A253 		add	r3, r7, #5184
 4374 22b8 03F11503 		add	r3, r3, #21
 4375 22bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4376 22be 3222     		movs	r2, #50
 4377 22c0 02FB03F3 		mul	r3, r2, r3
 4378 22c4 1A1D     		adds	r2, r3, #4
 4379 22c6 07F5A253 		add	r3, r7, #5184
 4380 22ca 03F11303 		add	r3, r3, #19
 4381 22ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4382 22d0 1A44     		add	r2, r2, r3
 4383 22d2 07F5A253 		add	r3, r7, #5184
 4384 22d6 03F11603 		add	r3, r3, #22
 4385 22da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 106


 4386 22dc D31A     		subs	r3, r2, r3
 4387 22de 013B     		subs	r3, r3, #1
 4388 22e0 07F5A252 		add	r2, r7, #5184
 4389 22e4 02F11602 		add	r2, r2, #22
 4390 22e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4391 22ea 07F11801 		add	r1, r7, #24
 4392 22ee 0A44     		add	r2, r2, r1
 4393 22f0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4394 22f2 07F15802 		add	r2, r7, #88
 4395 22f6 D154     		strb	r1, [r2, r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4396              		.loc 1 620 0 discriminator 3
 4397 22f8 07F5A253 		add	r3, r7, #5184
 4398 22fc 03F11603 		add	r3, r3, #22
 4399 2300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4400 2302 0133     		adds	r3, r3, #1
 4401 2304 07F5A252 		add	r2, r7, #5184
 4402 2308 02F11602 		add	r2, r2, #22
 4403 230c 1370     		strb	r3, [r2]
 4404              	.L181:
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4405              		.loc 1 620 0 is_stmt 0 discriminator 1
 4406 230e 07F5A253 		add	r3, r7, #5184
 4407 2312 03F11603 		add	r3, r3, #22
 4408 2316 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4409 2318 07F5A253 		add	r3, r7, #5184
 4410 231c 03F11303 		add	r3, r3, #19
 4411 2320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4412 2322 9A42     		cmp	r2, r3
 4413 2324 C6D3     		bcc	.L182
 622:..\src/command_processing.c ****                         }
 623:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4414              		.loc 1 623 0 is_stmt 1
 4415 2326 07F5A253 		add	r3, r7, #5184
 4416 232a 03F10E03 		add	r3, r3, #14
 4417 232e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4418 2330 3649     		ldr	r1, .L269+4
 4419 2332 1346     		mov	r3, r2
 4420 2334 DB00     		lsls	r3, r3, #3
 4421 2336 9B1A     		subs	r3, r3, r2
 4422 2338 1B01     		lsls	r3, r3, #4
 4423 233a 0B44     		add	r3, r3, r1
 4424 233c E833     		adds	r3, r3, #232
 4425 233e 1968     		ldr	r1, [r3]
 4426 2340 07F5A253 		add	r3, r7, #5184
 4427 2344 03F10E03 		add	r3, r3, #14
 4428 2348 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4429 234a 2F48     		ldr	r0, .L269
 4430 234c 1346     		mov	r3, r2
 4431 234e DB00     		lsls	r3, r3, #3
 4432 2350 9B1A     		subs	r3, r3, r2
 4433 2352 1B01     		lsls	r3, r3, #4
 4434 2354 0344     		add	r3, r3, r0
 4435 2356 03F58873 		add	r3, r3, #272
 4436 235a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4437 235c 1846     		mov	r0, r3
 4438 235e 2B4A     		ldr	r2, .L269+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 107


 4439 2360 0346     		mov	r3, r0
 4440 2362 5B00     		lsls	r3, r3, #1
 4441 2364 0344     		add	r3, r3, r0
 4442 2366 1B01     		lsls	r3, r3, #4
 4443 2368 1344     		add	r3, r3, r2
 4444 236a 03F29513 		addw	r3, r3, #405
 4445 236e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4446 2370 41FA03F2 		asr	r2, r1, r3
 4447 2374 07F11803 		add	r3, r7, #24
 4448 2378 1A60     		str	r2, [r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4449              		.loc 1 624 0
 4450 237a 0023     		movs	r3, #0
 4451 237c 07F5A252 		add	r2, r7, #5184
 4452 2380 02F11602 		add	r2, r2, #22
 4453 2384 1370     		strb	r3, [r2]
 4454 2386 32E0     		b	.L183
 4455              	.L184:
 625:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4456              		.loc 1 625 0 discriminator 3
 4457 2388 07F5A253 		add	r3, r7, #5184
 4458 238c 03F11503 		add	r3, r3, #21
 4459 2390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4460 2392 3222     		movs	r2, #50
 4461 2394 02FB03F3 		mul	r3, r2, r3
 4462 2398 1A1D     		adds	r2, r3, #4
 4463 239a 07F5A253 		add	r3, r7, #5184
 4464 239e 03F11303 		add	r3, r3, #19
 4465 23a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4466 23a4 1A44     		add	r2, r2, r3
 4467 23a6 07F5A253 		add	r3, r7, #5184
 4468 23aa 03F11303 		add	r3, r3, #19
 4469 23ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4470 23b0 1A44     		add	r2, r2, r3
 4471 23b2 07F5A253 		add	r3, r7, #5184
 4472 23b6 03F11603 		add	r3, r3, #22
 4473 23ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4474 23bc D31A     		subs	r3, r2, r3
 4475 23be 013B     		subs	r3, r3, #1
 4476 23c0 07F5A252 		add	r2, r7, #5184
 4477 23c4 02F11602 		add	r2, r2, #22
 4478 23c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4479 23ca 07F11801 		add	r1, r7, #24
 4480 23ce 0A44     		add	r2, r2, r1
 4481 23d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4482 23d2 07F15802 		add	r2, r7, #88
 4483 23d6 D154     		strb	r1, [r2, r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4484              		.loc 1 624 0 discriminator 3
 4485 23d8 07F5A253 		add	r3, r7, #5184
 4486 23dc 03F11603 		add	r3, r3, #22
 4487 23e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4488 23e2 0133     		adds	r3, r3, #1
 4489 23e4 07F5A252 		add	r2, r7, #5184
 4490 23e8 02F11602 		add	r2, r2, #22
 4491 23ec 1370     		strb	r3, [r2]
 4492              	.L183:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 108


 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4493              		.loc 1 624 0 is_stmt 0 discriminator 1
 4494 23ee 07F5A253 		add	r3, r7, #5184
 4495 23f2 03F11603 		add	r3, r3, #22
 4496 23f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4497 23f8 07F5A253 		add	r3, r7, #5184
 4498 23fc 03F11303 		add	r3, r3, #19
 4499 2400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4500 2402 9A42     		cmp	r2, r3
 4501 2404 C0D3     		bcc	.L184
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         break;
 4502              		.loc 1 627 0 is_stmt 1
 4503 2406 04E0     		b	.L103
 4504              	.L270:
 4505              		.align	2
 4506              	.L269:
 4507 2408 00000000 		.word	g_mem
 4508 240c 00000000 		.word	c_mem
 4509              	.L251:
 628:..\src/command_processing.c ****                         
 629:..\src/command_processing.c ****                     default:
 630:..\src/command_processing.c ****                         break;
 4510              		.loc 1 630 0
 4511 2410 00BF     		nop
 4512              	.L103:
 631:..\src/command_processing.c ****                 }
 632:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 633:..\src/command_processing.c ****                         
 634:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 635:..\src/command_processing.c ****         }
 636:..\src/command_processing.c ****         
 637:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4513              		.loc 1 637 0
 4514 2412 07F5A253 		add	r3, r7, #5184
 4515 2416 03F11503 		add	r3, r3, #21
 4516 241a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4517 241c 9B00     		lsls	r3, r3, #2
 4518 241e 07F5A352 		add	r2, r7, #5216
 4519 2422 02F10C02 		add	r2, r2, #12
 4520 2426 1268     		ldr	r2, [r2]
 4521 2428 1344     		add	r3, r3, r2
 4522 242a 1A68     		ldr	r2, [r3]
 4523 242c 07F13803 		add	r3, r7, #56
 4524 2430 143B     		subs	r3, r3, #20
 4525 2432 1146     		mov	r1, r2
 4526 2434 1846     		mov	r0, r3
 4527 2436 FFF7FEFF 		bl	sprintf
 638:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4528              		.loc 1 638 0
 4529 243a 07F13803 		add	r3, r7, #56
 4530 243e 143B     		subs	r3, r3, #20
 4531 2440 1846     		mov	r0, r3
 4532 2442 FFF7FEFF 		bl	strlen
 4533 2446 0346     		mov	r3, r0
 4534 2448 07F5A252 		add	r2, r7, #5184
 4535 244c 02F11202 		add	r2, r2, #18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 109


 4536 2450 1370     		strb	r3, [r2]
 639:..\src/command_processing.c ****         
 640:..\src/command_processing.c ****         // Parameters with a menu
 641:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4537              		.loc 1 641 0
 4538 2452 07F5A253 		add	r3, r7, #5184
 4539 2456 03F11503 		add	r3, r3, #21
 4540 245a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4541 245c 07F11803 		add	r3, r7, #24
 4542 2460 103B     		subs	r3, r3, #16
 4543 2462 1B68     		ldr	r3, [r3]
 4544 2464 1344     		add	r3, r3, r2
 4545 2466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4546 2468 002B     		cmp	r3, #0
 4547 246a 40F05983 		bne	.L185
 642:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4548              		.loc 1 642 0
 4549 246e 07F5A253 		add	r3, r7, #5184
 4550 2472 03F11403 		add	r3, r3, #20
 4551 2476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4552 2478 07F5A352 		add	r2, r7, #5216
 4553 247c 02F10802 		add	r2, r2, #8
 4554 2480 1268     		ldr	r2, [r2]
 4555 2482 1344     		add	r3, r3, r2
 4556 2484 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4557 2486 013B     		subs	r3, r3, #1
 4558 2488 092B     		cmp	r3, #9
 4559 248a 00F23B83 		bhi	.L186
 4560 248e 01A2     		adr	r2, .L188
 4561 2490 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4562              		.p2align 2
 4563              	.L188:
 4564 2494 BD240000 		.word	.L187+1
 4565 2498 F1250000 		.word	.L189+1
 4566 249c C5260000 		.word	.L190+1
 4567 24a0 19270000 		.word	.L191+1
 4568 24a4 7D270000 		.word	.L192+1
 4569 24a8 D9270000 		.word	.L193+1
 4570 24ac F5280000 		.word	.L194+1
 4571 24b0 7D290000 		.word	.L195+1
 4572 24b4 112A0000 		.word	.L196+1
 4573 24b8 892A0000 		.word	.L197+1
 4574              		.p2align 1
 4575              	.L187:
 643:..\src/command_processing.c ****                 case 1:     // input mode menu
 644:..\src/command_processing.c ****                     switch(*m_addr) {
 4576              		.loc 1 644 0
 4577 24bc 07F5A253 		add	r3, r7, #5184
 4578 24c0 03F10803 		add	r3, r3, #8
 4579 24c4 1B68     		ldr	r3, [r3]
 4580 24c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4581 24c8 052B     		cmp	r3, #5
 4582 24ca 00F21683 		bhi	.L252
 4583 24ce 01A2     		adr	r2, .L200
 4584 24d0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4585              		.p2align 2
 4586              	.L200:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 110


 4587 24d4 ED240000 		.word	.L199+1
 4588 24d8 11250000 		.word	.L201+1
 4589 24dc 37250000 		.word	.L202+1
 4590 24e0 65250000 		.word	.L203+1
 4591 24e4 91250000 		.word	.L204+1
 4592 24e8 BB250000 		.word	.L205+1
 4593              		.p2align 1
 4594              	.L199:
 645:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 646:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4595              		.loc 1 646 0
 4596 24ec 07F13803 		add	r3, r7, #56
 4597 24f0 143B     		subs	r3, r3, #20
 4598 24f2 1846     		mov	r0, r3
 4599 24f4 FFF7FEFF 		bl	strlen
 4600 24f8 0346     		mov	r3, r0
 4601 24fa 1A46     		mov	r2, r3
 4602 24fc 07F13803 		add	r3, r7, #56
 4603 2500 143B     		subs	r3, r3, #20
 4604 2502 1344     		add	r3, r3, r2
 4605 2504 D24A     		ldr	r2, .L271
 4606 2506 1068     		ldr	r0, [r2]	@ unaligned
 4607 2508 1860     		str	r0, [r3]	@ unaligned
 4608 250a 1279     		ldrb	r2, [r2, #4]
 4609 250c 1A71     		strb	r2, [r3, #4]
 647:..\src/command_processing.c ****                         break;
 4610              		.loc 1 647 0
 4611 250e 6EE0     		b	.L198
 4612              	.L201:
 648:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 649:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4613              		.loc 1 649 0
 4614 2510 07F13803 		add	r3, r7, #56
 4615 2514 143B     		subs	r3, r3, #20
 4616 2516 1846     		mov	r0, r3
 4617 2518 FFF7FEFF 		bl	strlen
 4618 251c 0346     		mov	r3, r0
 4619 251e 1A46     		mov	r2, r3
 4620 2520 07F13803 		add	r3, r7, #56
 4621 2524 143B     		subs	r3, r3, #20
 4622 2526 1344     		add	r3, r3, r2
 4623 2528 CA49     		ldr	r1, .L271+4
 4624 252a 1A46     		mov	r2, r3
 4625 252c 0B46     		mov	r3, r1
 4626 252e 03CB     		ldmia	r3!, {r0, r1}
 4627 2530 1060     		str	r0, [r2]	@ unaligned
 4628 2532 5160     		str	r1, [r2, #4]	@ unaligned
 650:..\src/command_processing.c ****                         break;
 4629              		.loc 1 650 0
 4630 2534 5BE0     		b	.L198
 4631              	.L202:
 651:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 652:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4632              		.loc 1 652 0
 4633 2536 07F13803 		add	r3, r7, #56
 4634 253a 143B     		subs	r3, r3, #20
 4635 253c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 111


 4636 253e FFF7FEFF 		bl	strlen
 4637 2542 0346     		mov	r3, r0
 4638 2544 1A46     		mov	r2, r3
 4639 2546 07F13803 		add	r3, r7, #56
 4640 254a 143B     		subs	r3, r3, #20
 4641 254c 1344     		add	r3, r3, r2
 4642 254e C24A     		ldr	r2, .L271+8
 4643 2550 1D46     		mov	r5, r3
 4644 2552 1446     		mov	r4, r2
 4645 2554 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4646 2556 2860     		str	r0, [r5]	@ unaligned
 4647 2558 6960     		str	r1, [r5, #4]	@ unaligned
 4648 255a AA60     		str	r2, [r5, #8]	@ unaligned
 4649 255c EB60     		str	r3, [r5, #12]	@ unaligned
 4650 255e 2388     		ldrh	r3, [r4]	@ unaligned
 4651 2560 2B82     		strh	r3, [r5, #16]	@ unaligned
 653:..\src/command_processing.c ****                         break;
 4652              		.loc 1 653 0
 4653 2562 44E0     		b	.L198
 4654              	.L203:
 654:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 655:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4655              		.loc 1 655 0
 4656 2564 07F13803 		add	r3, r7, #56
 4657 2568 143B     		subs	r3, r3, #20
 4658 256a 1846     		mov	r0, r3
 4659 256c FFF7FEFF 		bl	strlen
 4660 2570 0346     		mov	r3, r0
 4661 2572 1A46     		mov	r2, r3
 4662 2574 07F13803 		add	r3, r7, #56
 4663 2578 143B     		subs	r3, r3, #20
 4664 257a 1344     		add	r3, r3, r2
 4665 257c B74A     		ldr	r2, .L271+12
 4666 257e 1C46     		mov	r4, r3
 4667 2580 1346     		mov	r3, r2
 4668 2582 07CB     		ldmia	r3!, {r0, r1, r2}
 4669 2584 2060     		str	r0, [r4]	@ unaligned
 4670 2586 6160     		str	r1, [r4, #4]	@ unaligned
 4671 2588 A260     		str	r2, [r4, #8]	@ unaligned
 4672 258a 1B88     		ldrh	r3, [r3]	@ unaligned
 4673 258c A381     		strh	r3, [r4, #12]	@ unaligned
 656:..\src/command_processing.c ****                         break;
 4674              		.loc 1 656 0
 4675 258e 2EE0     		b	.L198
 4676              	.L204:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 658:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4677              		.loc 1 658 0
 4678 2590 07F13803 		add	r3, r7, #56
 4679 2594 143B     		subs	r3, r3, #20
 4680 2596 1846     		mov	r0, r3
 4681 2598 FFF7FEFF 		bl	strlen
 4682 259c 0346     		mov	r3, r0
 4683 259e 1A46     		mov	r2, r3
 4684 25a0 07F13803 		add	r3, r7, #56
 4685 25a4 143B     		subs	r3, r3, #20
 4686 25a6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 112


 4687 25a8 AD49     		ldr	r1, .L271+16
 4688 25aa 1A46     		mov	r2, r3
 4689 25ac 0B46     		mov	r3, r1
 4690 25ae 03CB     		ldmia	r3!, {r0, r1}
 4691 25b0 1060     		str	r0, [r2]	@ unaligned
 4692 25b2 5160     		str	r1, [r2, #4]	@ unaligned
 4693 25b4 1B88     		ldrh	r3, [r3]	@ unaligned
 4694 25b6 1381     		strh	r3, [r2, #8]	@ unaligned
 659:..\src/command_processing.c ****                         break;
 4695              		.loc 1 659 0
 4696 25b8 19E0     		b	.L198
 4697              	.L205:
 660:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 661:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4698              		.loc 1 661 0
 4699 25ba 07F13803 		add	r3, r7, #56
 4700 25be 143B     		subs	r3, r3, #20
 4701 25c0 1846     		mov	r0, r3
 4702 25c2 FFF7FEFF 		bl	strlen
 4703 25c6 0346     		mov	r3, r0
 4704 25c8 1A46     		mov	r2, r3
 4705 25ca 07F13803 		add	r3, r7, #56
 4706 25ce 143B     		subs	r3, r3, #20
 4707 25d0 1344     		add	r3, r3, r2
 4708 25d2 A44A     		ldr	r2, .L271+20
 4709 25d4 1D46     		mov	r5, r3
 4710 25d6 1446     		mov	r4, r2
 4711 25d8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4712 25da 2860     		str	r0, [r5]	@ unaligned
 4713 25dc 6960     		str	r1, [r5, #4]	@ unaligned
 4714 25de AA60     		str	r2, [r5, #8]	@ unaligned
 4715 25e0 EB60     		str	r3, [r5, #12]	@ unaligned
 4716 25e2 2388     		ldrh	r3, [r4]	@ unaligned
 4717 25e4 A278     		ldrb	r2, [r4, #2]
 4718 25e6 2B82     		strh	r3, [r5, #16]	@ unaligned
 4719 25e8 1346     		mov	r3, r2
 4720 25ea AB74     		strb	r3, [r5, #18]
 662:..\src/command_processing.c ****                         break;
 4721              		.loc 1 662 0
 4722 25ec 00BF     		nop
 4723              	.L198:
 663:..\src/command_processing.c ****                     }
 664:..\src/command_processing.c ****                     break;
 4724              		.loc 1 664 0
 4725 25ee 84E2     		b	.L252
 4726              	.L189:
 665:..\src/command_processing.c ****                 case 2:     // control mode menu
 666:..\src/command_processing.c ****                     switch(*m_addr){
 4727              		.loc 1 666 0
 4728 25f0 07F5A253 		add	r3, r7, #5184
 4729 25f4 03F10803 		add	r3, r3, #8
 4730 25f8 1B68     		ldr	r3, [r3]
 4731 25fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4732 25fc 032B     		cmp	r3, #3
 4733 25fe 00F27E82 		bhi	.L253
 4734 2602 01A2     		adr	r2, .L208
 4735 2604 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 113


 4736              		.p2align 2
 4737              	.L208:
 4738 2608 19260000 		.word	.L207+1
 4739 260c 43260000 		.word	.L209+1
 4740 2610 67260000 		.word	.L210+1
 4741 2614 91260000 		.word	.L211+1
 4742              		.p2align 1
 4743              	.L207:
 667:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 668:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4744              		.loc 1 668 0
 4745 2618 07F13803 		add	r3, r7, #56
 4746 261c 143B     		subs	r3, r3, #20
 4747 261e 1846     		mov	r0, r3
 4748 2620 FFF7FEFF 		bl	strlen
 4749 2624 0346     		mov	r3, r0
 4750 2626 1A46     		mov	r2, r3
 4751 2628 07F13803 		add	r3, r7, #56
 4752 262c 143B     		subs	r3, r3, #20
 4753 262e 1344     		add	r3, r3, r2
 4754 2630 8D49     		ldr	r1, .L271+24
 4755 2632 1A46     		mov	r2, r3
 4756 2634 0B46     		mov	r3, r1
 4757 2636 03CB     		ldmia	r3!, {r0, r1}
 4758 2638 1060     		str	r0, [r2]	@ unaligned
 4759 263a 5160     		str	r1, [r2, #4]	@ unaligned
 4760 263c 1B88     		ldrh	r3, [r3]	@ unaligned
 4761 263e 1381     		strh	r3, [r2, #8]	@ unaligned
 669:..\src/command_processing.c ****                         break;
 4762              		.loc 1 669 0
 4763 2640 3FE0     		b	.L206
 4764              	.L209:
 670:..\src/command_processing.c ****                         case CONTROL_PWM:
 671:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4765              		.loc 1 671 0
 4766 2642 07F13803 		add	r3, r7, #56
 4767 2646 143B     		subs	r3, r3, #20
 4768 2648 1846     		mov	r0, r3
 4769 264a FFF7FEFF 		bl	strlen
 4770 264e 0346     		mov	r3, r0
 4771 2650 1A46     		mov	r2, r3
 4772 2652 07F13803 		add	r3, r7, #56
 4773 2656 143B     		subs	r3, r3, #20
 4774 2658 1344     		add	r3, r3, r2
 4775 265a 844A     		ldr	r2, .L271+28
 4776 265c 1068     		ldr	r0, [r2]	@ unaligned
 4777 265e 1860     		str	r0, [r3]	@ unaligned
 4778 2660 1279     		ldrb	r2, [r2, #4]
 4779 2662 1A71     		strb	r2, [r3, #4]
 672:..\src/command_processing.c ****                         break;
 4780              		.loc 1 672 0
 4781 2664 2DE0     		b	.L206
 4782              	.L210:
 673:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 674:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4783              		.loc 1 674 0
 4784 2666 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 114


 4785 266a 143B     		subs	r3, r3, #20
 4786 266c 1846     		mov	r0, r3
 4787 266e FFF7FEFF 		bl	strlen
 4788 2672 0346     		mov	r3, r0
 4789 2674 1A46     		mov	r2, r3
 4790 2676 07F13803 		add	r3, r7, #56
 4791 267a 143B     		subs	r3, r3, #20
 4792 267c 1344     		add	r3, r3, r2
 4793 267e 7C49     		ldr	r1, .L271+32
 4794 2680 1A46     		mov	r2, r3
 4795 2682 0B46     		mov	r3, r1
 4796 2684 03CB     		ldmia	r3!, {r0, r1}
 4797 2686 1060     		str	r0, [r2]	@ unaligned
 4798 2688 5160     		str	r1, [r2, #4]	@ unaligned
 4799 268a 1B78     		ldrb	r3, [r3]
 4800 268c 1372     		strb	r3, [r2, #8]
 675:..\src/command_processing.c ****                         break;
 4801              		.loc 1 675 0
 4802 268e 18E0     		b	.L206
 4803              	.L211:
 676:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 677:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 4804              		.loc 1 677 0
 4805 2690 07F13803 		add	r3, r7, #56
 4806 2694 143B     		subs	r3, r3, #20
 4807 2696 1846     		mov	r0, r3
 4808 2698 FFF7FEFF 		bl	strlen
 4809 269c 0346     		mov	r3, r0
 4810 269e 1A46     		mov	r2, r3
 4811 26a0 07F13803 		add	r3, r7, #56
 4812 26a4 143B     		subs	r3, r3, #20
 4813 26a6 1344     		add	r3, r3, r2
 4814 26a8 724A     		ldr	r2, .L271+36
 4815 26aa 1D46     		mov	r5, r3
 4816 26ac 1446     		mov	r4, r2
 4817 26ae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4818 26b0 2860     		str	r0, [r5]	@ unaligned
 4819 26b2 6960     		str	r1, [r5, #4]	@ unaligned
 4820 26b4 AA60     		str	r2, [r5, #8]	@ unaligned
 4821 26b6 EB60     		str	r3, [r5, #12]	@ unaligned
 4822 26b8 2068     		ldr	r0, [r4]	@ unaligned
 4823 26ba 2861     		str	r0, [r5, #16]	@ unaligned
 4824 26bc A388     		ldrh	r3, [r4, #4]	@ unaligned
 4825 26be AB82     		strh	r3, [r5, #20]	@ unaligned
 678:..\src/command_processing.c ****                         break;
 4826              		.loc 1 678 0
 4827 26c0 00BF     		nop
 4828              	.L206:
 679:..\src/command_processing.c ****                     }
 680:..\src/command_processing.c ****                     break;
 4829              		.loc 1 680 0
 4830 26c2 1CE2     		b	.L253
 4831              	.L190:
 681:..\src/command_processing.c ****                 case 3:     // yes/no menu
 682:..\src/command_processing.c ****                     if(*m_addr){
 4832              		.loc 1 682 0
 4833 26c4 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 115


 4834 26c8 03F10803 		add	r3, r3, #8
 4835 26cc 1B68     		ldr	r3, [r3]
 4836 26ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4837 26d0 002B     		cmp	r3, #0
 4838 26d2 11D0     		beq	.L212
 683:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 4839              		.loc 1 683 0
 4840 26d4 07F13803 		add	r3, r7, #56
 4841 26d8 143B     		subs	r3, r3, #20
 4842 26da 1846     		mov	r0, r3
 4843 26dc FFF7FEFF 		bl	strlen
 4844 26e0 0346     		mov	r3, r0
 4845 26e2 1A46     		mov	r2, r3
 4846 26e4 07F13803 		add	r3, r7, #56
 4847 26e8 143B     		subs	r3, r3, #20
 4848 26ea 1344     		add	r3, r3, r2
 4849 26ec 624A     		ldr	r2, .L271+40
 4850 26ee 1068     		ldr	r0, [r2]	@ unaligned
 4851 26f0 1860     		str	r0, [r3]	@ unaligned
 4852 26f2 1279     		ldrb	r2, [r2, #4]
 4853 26f4 1A71     		strb	r2, [r3, #4]
 684:..\src/command_processing.c ****                     }
 685:..\src/command_processing.c ****                     else {
 686:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 687:..\src/command_processing.c ****                     }
 688:..\src/command_processing.c ****                     break;    
 4854              		.loc 1 688 0
 4855 26f6 05E2     		b	.L186
 4856              	.L212:
 686:..\src/command_processing.c ****                     }
 4857              		.loc 1 686 0
 4858 26f8 07F13803 		add	r3, r7, #56
 4859 26fc 143B     		subs	r3, r3, #20
 4860 26fe 1846     		mov	r0, r3
 4861 2700 FFF7FEFF 		bl	strlen
 4862 2704 0346     		mov	r3, r0
 4863 2706 1A46     		mov	r2, r3
 4864 2708 07F13803 		add	r3, r7, #56
 4865 270c 143B     		subs	r3, r3, #20
 4866 270e 1344     		add	r3, r3, r2
 4867 2710 5A4A     		ldr	r2, .L271+44
 4868 2712 1068     		ldr	r0, [r2]	@ unaligned
 4869 2714 1860     		str	r0, [r3]	@ unaligned
 4870              		.loc 1 688 0
 4871 2716 F5E1     		b	.L186
 4872              	.L191:
 689:..\src/command_processing.c ****                 case 4:     // right/lef menu
 690:..\src/command_processing.c ****                     switch(*m_addr){
 4873              		.loc 1 690 0
 4874 2718 07F5A253 		add	r3, r7, #5184
 4875 271c 03F10803 		add	r3, r3, #8
 4876 2720 1B68     		ldr	r3, [r3]
 4877 2722 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4878 2724 002B     		cmp	r3, #0
 4879 2726 02D0     		beq	.L215
 4880 2728 012B     		cmp	r3, #1
 4881 272a 14D0     		beq	.L216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 116


 691:..\src/command_processing.c ****                         case RIGHT_HAND:
 692:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 693:..\src/command_processing.c ****                         break;
 694:..\src/command_processing.c ****                         case LEFT_HAND:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 696:..\src/command_processing.c ****                         break;
 697:..\src/command_processing.c ****                     }
 698:..\src/command_processing.c ****                     break;
 4882              		.loc 1 698 0
 4883 272c EAE1     		b	.L186
 4884              	.L215:
 692:..\src/command_processing.c ****                         break;
 4885              		.loc 1 692 0
 4886 272e 07F13803 		add	r3, r7, #56
 4887 2732 143B     		subs	r3, r3, #20
 4888 2734 1846     		mov	r0, r3
 4889 2736 FFF7FEFF 		bl	strlen
 4890 273a 0346     		mov	r3, r0
 4891 273c 1A46     		mov	r2, r3
 4892 273e 07F13803 		add	r3, r7, #56
 4893 2742 143B     		subs	r3, r3, #20
 4894 2744 1344     		add	r3, r3, r2
 4895 2746 4E4A     		ldr	r2, .L271+48
 4896 2748 1068     		ldr	r0, [r2]	@ unaligned
 4897 274a 1860     		str	r0, [r3]	@ unaligned
 4898 274c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4899 274e 9279     		ldrb	r2, [r2, #6]
 4900 2750 9980     		strh	r1, [r3, #4]	@ unaligned
 4901 2752 9A71     		strb	r2, [r3, #6]
 693:..\src/command_processing.c ****                         case LEFT_HAND:
 4902              		.loc 1 693 0
 4903 2754 11E0     		b	.L214
 4904              	.L216:
 695:..\src/command_processing.c ****                         break;
 4905              		.loc 1 695 0
 4906 2756 07F13803 		add	r3, r7, #56
 4907 275a 143B     		subs	r3, r3, #20
 4908 275c 1846     		mov	r0, r3
 4909 275e FFF7FEFF 		bl	strlen
 4910 2762 0346     		mov	r3, r0
 4911 2764 1A46     		mov	r2, r3
 4912 2766 07F13803 		add	r3, r7, #56
 4913 276a 143B     		subs	r3, r3, #20
 4914 276c 1344     		add	r3, r3, r2
 4915 276e 454A     		ldr	r2, .L271+52
 4916 2770 1068     		ldr	r0, [r2]	@ unaligned
 4917 2772 1860     		str	r0, [r3]	@ unaligned
 4918 2774 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4919 2776 9A80     		strh	r2, [r3, #4]	@ unaligned
 696:..\src/command_processing.c ****                     }
 4920              		.loc 1 696 0
 4921 2778 00BF     		nop
 4922              	.L214:
 4923              		.loc 1 698 0
 4924 277a C3E1     		b	.L186
 4925              	.L192:
 699:..\src/command_processing.c ****                 case 5:     // on/off menu
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 117


 700:..\src/command_processing.c ****                     switch(*m_addr){
 4926              		.loc 1 700 0
 4927 277c 07F5A253 		add	r3, r7, #5184
 4928 2780 03F10803 		add	r3, r3, #8
 4929 2784 1B68     		ldr	r3, [r3]
 4930 2786 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4931 2788 002B     		cmp	r3, #0
 4932 278a 02D0     		beq	.L218
 4933 278c 012B     		cmp	r3, #1
 4934 278e 12D0     		beq	.L219
 701:..\src/command_processing.c ****                         case 0:
 702:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 703:..\src/command_processing.c ****                         break;
 704:..\src/command_processing.c ****                         case 1:
 705:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 706:..\src/command_processing.c ****                         break;
 707:..\src/command_processing.c ****                     }
 708:..\src/command_processing.c ****                     break;
 4935              		.loc 1 708 0
 4936 2790 B8E1     		b	.L186
 4937              	.L218:
 702:..\src/command_processing.c ****                         break;
 4938              		.loc 1 702 0
 4939 2792 07F13803 		add	r3, r7, #56
 4940 2796 143B     		subs	r3, r3, #20
 4941 2798 1846     		mov	r0, r3
 4942 279a FFF7FEFF 		bl	strlen
 4943 279e 0346     		mov	r3, r0
 4944 27a0 1A46     		mov	r2, r3
 4945 27a2 07F13803 		add	r3, r7, #56
 4946 27a6 143B     		subs	r3, r3, #20
 4947 27a8 1344     		add	r3, r3, r2
 4948 27aa 374A     		ldr	r2, .L271+56
 4949 27ac 1068     		ldr	r0, [r2]	@ unaligned
 4950 27ae 1860     		str	r0, [r3]	@ unaligned
 4951 27b0 1279     		ldrb	r2, [r2, #4]
 4952 27b2 1A71     		strb	r2, [r3, #4]
 703:..\src/command_processing.c ****                         case 1:
 4953              		.loc 1 703 0
 4954 27b4 0FE0     		b	.L217
 4955              	.L219:
 705:..\src/command_processing.c ****                         break;
 4956              		.loc 1 705 0
 4957 27b6 07F13803 		add	r3, r7, #56
 4958 27ba 143B     		subs	r3, r3, #20
 4959 27bc 1846     		mov	r0, r3
 4960 27be FFF7FEFF 		bl	strlen
 4961 27c2 0346     		mov	r3, r0
 4962 27c4 1A46     		mov	r2, r3
 4963 27c6 07F13803 		add	r3, r7, #56
 4964 27ca 143B     		subs	r3, r3, #20
 4965 27cc 1344     		add	r3, r3, r2
 4966 27ce 2F4A     		ldr	r2, .L271+60
 4967 27d0 1068     		ldr	r0, [r2]	@ unaligned
 4968 27d2 1860     		str	r0, [r3]	@ unaligned
 706:..\src/command_processing.c ****                     }
 4969              		.loc 1 706 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 118


 4970 27d4 00BF     		nop
 4971              	.L217:
 4972              		.loc 1 708 0
 4973 27d6 95E1     		b	.L186
 4974              	.L193:
 709:..\src/command_processing.c ****                 case 6:     // expansion port menu
 710:..\src/command_processing.c ****                     switch(*m_addr){
 4975              		.loc 1 710 0
 4976 27d8 07F5A253 		add	r3, r7, #5184
 4977 27dc 03F10803 		add	r3, r3, #8
 4978 27e0 1B68     		ldr	r3, [r3]
 4979 27e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4980 27e4 032B     		cmp	r3, #3
 4981 27e6 00F28C81 		bhi	.L254
 4982 27ea 01A2     		adr	r2, .L222
 4983 27ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4984              		.p2align 2
 4985              	.L222:
 4986 27f0 01280000 		.word	.L221+1
 4987 27f4 25280000 		.word	.L223+1
 4988 27f8 99280000 		.word	.L224+1
 4989 27fc C7280000 		.word	.L225+1
 4990              		.p2align 1
 4991              	.L221:
 711:..\src/command_processing.c ****                         case EXP_NONE:
 712:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 4992              		.loc 1 712 0
 4993 2800 07F13803 		add	r3, r7, #56
 4994 2804 143B     		subs	r3, r3, #20
 4995 2806 1846     		mov	r0, r3
 4996 2808 FFF7FEFF 		bl	strlen
 4997 280c 0346     		mov	r3, r0
 4998 280e 1A46     		mov	r2, r3
 4999 2810 07F13803 		add	r3, r7, #56
 5000 2814 143B     		subs	r3, r3, #20
 5001 2816 1344     		add	r3, r3, r2
 5002 2818 1D4A     		ldr	r2, .L271+64
 5003 281a 1068     		ldr	r0, [r2]	@ unaligned
 5004 281c 1860     		str	r0, [r3]	@ unaligned
 5005 281e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5006 2820 9A80     		strh	r2, [r3, #4]	@ unaligned
 713:..\src/command_processing.c ****                             break;
 5007              		.loc 1 713 0
 5008 2822 66E0     		b	.L220
 5009              	.L223:
 714:..\src/command_processing.c ****                         case EXP_SD_RTC:
 715:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5010              		.loc 1 715 0
 5011 2824 07F13803 		add	r3, r7, #56
 5012 2828 143B     		subs	r3, r3, #20
 5013 282a 1846     		mov	r0, r3
 5014 282c FFF7FEFF 		bl	strlen
 5015 2830 0346     		mov	r3, r0
 5016 2832 1A46     		mov	r2, r3
 5017 2834 07F13803 		add	r3, r7, #56
 5018 2838 143B     		subs	r3, r3, #20
 5019 283a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 119


 5020 283c 154A     		ldr	r2, .L271+68
 5021 283e 1C46     		mov	r4, r3
 5022 2840 1346     		mov	r3, r2
 5023 2842 07CB     		ldmia	r3!, {r0, r1, r2}
 5024 2844 2060     		str	r0, [r4]	@ unaligned
 5025 2846 6160     		str	r1, [r4, #4]	@ unaligned
 5026 2848 A260     		str	r2, [r4, #8]	@ unaligned
 5027 284a 1B88     		ldrh	r3, [r3]	@ unaligned
 5028 284c A381     		strh	r3, [r4, #12]	@ unaligned
 716:..\src/command_processing.c ****                             break;
 5029              		.loc 1 716 0
 5030 284e 50E0     		b	.L220
 5031              	.L272:
 5032              		.align	2
 5033              	.L271:
 5034 2850 00000000 		.word	.LC76
 5035 2854 08000000 		.word	.LC77
 5036 2858 10000000 		.word	.LC78
 5037 285c 24000000 		.word	.LC79
 5038 2860 34000000 		.word	.LC80
 5039 2864 40000000 		.word	.LC81
 5040 2868 54000000 		.word	.LC82
 5041 286c 60000000 		.word	.LC83
 5042 2870 68000000 		.word	.LC84
 5043 2874 74000000 		.word	.LC85
 5044 2878 8C000000 		.word	.LC86
 5045 287c 94000000 		.word	.LC87
 5046 2880 9C000000 		.word	.LC88
 5047 2884 A4000000 		.word	.LC89
 5048 2888 AC000000 		.word	.LC90
 5049 288c B4000000 		.word	.LC91
 5050 2890 BC000000 		.word	.LC92
 5051 2894 C4000000 		.word	.LC93
 5052              	.L224:
 717:..\src/command_processing.c ****                         case EXP_WIFI:
 718:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5053              		.loc 1 718 0
 5054 2898 07F13803 		add	r3, r7, #56
 5055 289c 143B     		subs	r3, r3, #20
 5056 289e 1846     		mov	r0, r3
 5057 28a0 FFF7FEFF 		bl	strlen
 5058 28a4 0346     		mov	r3, r0
 5059 28a6 1A46     		mov	r2, r3
 5060 28a8 07F13803 		add	r3, r7, #56
 5061 28ac 143B     		subs	r3, r3, #20
 5062 28ae 1344     		add	r3, r3, r2
 5063 28b0 A14A     		ldr	r2, .L273
 5064 28b2 1D46     		mov	r5, r3
 5065 28b4 1446     		mov	r4, r2
 5066 28b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5067 28b8 2860     		str	r0, [r5]	@ unaligned
 5068 28ba 6960     		str	r1, [r5, #4]	@ unaligned
 5069 28bc AA60     		str	r2, [r5, #8]	@ unaligned
 5070 28be EB60     		str	r3, [r5, #12]	@ unaligned
 5071 28c0 2388     		ldrh	r3, [r4]	@ unaligned
 5072 28c2 2B82     		strh	r3, [r5, #16]	@ unaligned
 719:..\src/command_processing.c ****         					break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 120


 5073              		.loc 1 719 0
 5074 28c4 15E0     		b	.L220
 5075              	.L225:
 720:..\src/command_processing.c ****                         case EXP_OTHER:
 721:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5076              		.loc 1 721 0
 5077 28c6 07F13803 		add	r3, r7, #56
 5078 28ca 143B     		subs	r3, r3, #20
 5079 28cc 1846     		mov	r0, r3
 5080 28ce FFF7FEFF 		bl	strlen
 5081 28d2 0346     		mov	r3, r0
 5082 28d4 1A46     		mov	r2, r3
 5083 28d6 07F13803 		add	r3, r7, #56
 5084 28da 143B     		subs	r3, r3, #20
 5085 28dc 1344     		add	r3, r3, r2
 5086 28de 974A     		ldr	r2, .L273+4
 5087 28e0 1C46     		mov	r4, r3
 5088 28e2 1346     		mov	r3, r2
 5089 28e4 07CB     		ldmia	r3!, {r0, r1, r2}
 5090 28e6 2060     		str	r0, [r4]	@ unaligned
 5091 28e8 6160     		str	r1, [r4, #4]	@ unaligned
 5092 28ea A260     		str	r2, [r4, #8]	@ unaligned
 5093 28ec 1B78     		ldrb	r3, [r3]
 5094 28ee 2373     		strb	r3, [r4, #12]
 722:..\src/command_processing.c ****         					break;
 5095              		.loc 1 722 0
 5096 28f0 00BF     		nop
 5097              	.L220:
 723:..\src/command_processing.c ****                     }
 724:..\src/command_processing.c ****                     break;
 5098              		.loc 1 724 0
 5099 28f2 06E1     		b	.L254
 5100              	.L194:
 725:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 726:..\src/command_processing.c ****                     switch(*m_addr){
 5101              		.loc 1 726 0
 5102 28f4 07F5A253 		add	r3, r7, #5184
 5103 28f8 03F10803 		add	r3, r3, #8
 5104 28fc 1B68     		ldr	r3, [r3]
 5105 28fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5106 2900 012B     		cmp	r3, #1
 5107 2902 16D0     		beq	.L227
 5108 2904 022B     		cmp	r3, #2
 5109 2906 26D0     		beq	.L228
 5110 2908 002B     		cmp	r3, #0
 5111 290a 00D0     		beq	.L229
 727:..\src/command_processing.c ****                         case 0: 
 728:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 729:..\src/command_processing.c ****                             break;
 730:..\src/command_processing.c ****                         case 1: 
 731:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 732:..\src/command_processing.c ****                             break;
 733:..\src/command_processing.c ****                         case 2: 
 734:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 735:..\src/command_processing.c ****                             break;
 736:..\src/command_processing.c ****                         default:
 737:..\src/command_processing.c ****                             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 121


 5112              		.loc 1 737 0
 5113 290c 35E0     		b	.L230
 5114              	.L229:
 728:..\src/command_processing.c ****                             break;
 5115              		.loc 1 728 0
 5116 290e 07F13803 		add	r3, r7, #56
 5117 2912 143B     		subs	r3, r3, #20
 5118 2914 1846     		mov	r0, r3
 5119 2916 FFF7FEFF 		bl	strlen
 5120 291a 0346     		mov	r3, r0
 5121 291c 1A46     		mov	r2, r3
 5122 291e 07F13803 		add	r3, r7, #56
 5123 2922 143B     		subs	r3, r3, #20
 5124 2924 1344     		add	r3, r3, r2
 5125 2926 864A     		ldr	r2, .L273+8
 5126 2928 1068     		ldr	r0, [r2]	@ unaligned
 5127 292a 1860     		str	r0, [r3]	@ unaligned
 5128 292c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5129 292e 9A80     		strh	r2, [r3, #4]	@ unaligned
 729:..\src/command_processing.c ****                         case 1: 
 5130              		.loc 1 729 0
 5131 2930 23E0     		b	.L230
 5132              	.L227:
 731:..\src/command_processing.c ****                             break;
 5133              		.loc 1 731 0
 5134 2932 07F13803 		add	r3, r7, #56
 5135 2936 143B     		subs	r3, r3, #20
 5136 2938 1846     		mov	r0, r3
 5137 293a FFF7FEFF 		bl	strlen
 5138 293e 0346     		mov	r3, r0
 5139 2940 1A46     		mov	r2, r3
 5140 2942 07F13803 		add	r3, r7, #56
 5141 2946 143B     		subs	r3, r3, #20
 5142 2948 1344     		add	r3, r3, r2
 5143 294a 7E4A     		ldr	r2, .L273+12
 5144 294c 1068     		ldr	r0, [r2]	@ unaligned
 5145 294e 1860     		str	r0, [r3]	@ unaligned
 5146 2950 1279     		ldrb	r2, [r2, #4]
 5147 2952 1A71     		strb	r2, [r3, #4]
 732:..\src/command_processing.c ****                         case 2: 
 5148              		.loc 1 732 0
 5149 2954 11E0     		b	.L230
 5150              	.L228:
 734:..\src/command_processing.c ****                             break;
 5151              		.loc 1 734 0
 5152 2956 07F13803 		add	r3, r7, #56
 5153 295a 143B     		subs	r3, r3, #20
 5154 295c 1846     		mov	r0, r3
 5155 295e FFF7FEFF 		bl	strlen
 5156 2962 0346     		mov	r3, r0
 5157 2964 1A46     		mov	r2, r3
 5158 2966 07F13803 		add	r3, r7, #56
 5159 296a 143B     		subs	r3, r3, #20
 5160 296c 1344     		add	r3, r3, r2
 5161 296e 764A     		ldr	r2, .L273+16
 5162 2970 1068     		ldr	r0, [r2]	@ unaligned
 5163 2972 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 122


 5164 2974 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5165 2976 9A80     		strh	r2, [r3, #4]	@ unaligned
 735:..\src/command_processing.c ****                         default:
 5166              		.loc 1 735 0
 5167 2978 00BF     		nop
 5168              	.L230:
 738:..\src/command_processing.c ****                     } 
 739:..\src/command_processing.c ****                     break;
 5169              		.loc 1 739 0 discriminator 12
 5170 297a C3E0     		b	.L186
 5171              	.L195:
 740:..\src/command_processing.c ****                 case 8:     // user menu          
 741:..\src/command_processing.c ****                     switch(*m_addr){
 5172              		.loc 1 741 0
 5173 297c 07F5A253 		add	r3, r7, #5184
 5174 2980 03F10803 		add	r3, r3, #8
 5175 2984 1B68     		ldr	r3, [r3]
 5176 2986 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5177 2988 012B     		cmp	r3, #1
 5178 298a 1AD0     		beq	.L232
 5179 298c 022B     		cmp	r3, #2
 5180 298e 2CD0     		beq	.L233
 5181 2990 002B     		cmp	r3, #0
 5182 2992 00D0     		beq	.L234
 742:..\src/command_processing.c ****                         case GENERIC_USER:
 743:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 744:..\src/command_processing.c ****                         break;
 745:..\src/command_processing.c ****                         case MARIA:
 746:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case ROZA:
 749:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                     }   
 752:..\src/command_processing.c ****                     break;                    
 5183              		.loc 1 752 0
 5184 2994 B6E0     		b	.L186
 5185              	.L234:
 743:..\src/command_processing.c ****                         break;
 5186              		.loc 1 743 0
 5187 2996 07F13803 		add	r3, r7, #56
 5188 299a 143B     		subs	r3, r3, #20
 5189 299c 1846     		mov	r0, r3
 5190 299e FFF7FEFF 		bl	strlen
 5191 29a2 0346     		mov	r3, r0
 5192 29a4 1A46     		mov	r2, r3
 5193 29a6 07F13803 		add	r3, r7, #56
 5194 29aa 143B     		subs	r3, r3, #20
 5195 29ac 1344     		add	r3, r3, r2
 5196 29ae 674A     		ldr	r2, .L273+20
 5197 29b0 1C46     		mov	r4, r3
 5198 29b2 1346     		mov	r3, r2
 5199 29b4 07CB     		ldmia	r3!, {r0, r1, r2}
 5200 29b6 2060     		str	r0, [r4]	@ unaligned
 5201 29b8 6160     		str	r1, [r4, #4]	@ unaligned
 5202 29ba A260     		str	r2, [r4, #8]	@ unaligned
 5203 29bc 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 123


 5204 29be A381     		strh	r3, [r4, #12]	@ unaligned
 744:..\src/command_processing.c ****                         case MARIA:
 5205              		.loc 1 744 0
 5206 29c0 25E0     		b	.L231
 5207              	.L232:
 746:..\src/command_processing.c ****                         break;
 5208              		.loc 1 746 0
 5209 29c2 07F13803 		add	r3, r7, #56
 5210 29c6 143B     		subs	r3, r3, #20
 5211 29c8 1846     		mov	r0, r3
 5212 29ca FFF7FEFF 		bl	strlen
 5213 29ce 0346     		mov	r3, r0
 5214 29d0 1A46     		mov	r2, r3
 5215 29d2 07F13803 		add	r3, r7, #56
 5216 29d6 143B     		subs	r3, r3, #20
 5217 29d8 1344     		add	r3, r3, r2
 5218 29da 5D4A     		ldr	r2, .L273+24
 5219 29dc 1068     		ldr	r0, [r2]	@ unaligned
 5220 29de 1860     		str	r0, [r3]	@ unaligned
 5221 29e0 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5222 29e2 9279     		ldrb	r2, [r2, #6]
 5223 29e4 9980     		strh	r1, [r3, #4]	@ unaligned
 5224 29e6 9A71     		strb	r2, [r3, #6]
 747:..\src/command_processing.c ****                         case ROZA:
 5225              		.loc 1 747 0
 5226 29e8 11E0     		b	.L231
 5227              	.L233:
 749:..\src/command_processing.c ****                         break;
 5228              		.loc 1 749 0
 5229 29ea 07F13803 		add	r3, r7, #56
 5230 29ee 143B     		subs	r3, r3, #20
 5231 29f0 1846     		mov	r0, r3
 5232 29f2 FFF7FEFF 		bl	strlen
 5233 29f6 0346     		mov	r3, r0
 5234 29f8 1A46     		mov	r2, r3
 5235 29fa 07F13803 		add	r3, r7, #56
 5236 29fe 143B     		subs	r3, r3, #20
 5237 2a00 1344     		add	r3, r3, r2
 5238 2a02 544A     		ldr	r2, .L273+28
 5239 2a04 1068     		ldr	r0, [r2]	@ unaligned
 5240 2a06 1860     		str	r0, [r3]	@ unaligned
 5241 2a08 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5242 2a0a 9A80     		strh	r2, [r3, #4]	@ unaligned
 750:..\src/command_processing.c ****                     }   
 5243              		.loc 1 750 0
 5244 2a0c 00BF     		nop
 5245              	.L231:
 5246              		.loc 1 752 0
 5247 2a0e 79E0     		b	.L186
 5248              	.L196:
 753:..\src/command_processing.c ****                 case 9:     // driver type menu
 754:..\src/command_processing.c ****                     switch(*m_addr){
 5249              		.loc 1 754 0
 5250 2a10 07F5A253 		add	r3, r7, #5184
 5251 2a14 03F10803 		add	r3, r3, #8
 5252 2a18 1B68     		ldr	r3, [r3]
 5253 2a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 124


 5254 2a1c 002B     		cmp	r3, #0
 5255 2a1e 02D0     		beq	.L236
 5256 2a20 012B     		cmp	r3, #1
 5257 2a22 17D0     		beq	.L237
 755:..\src/command_processing.c ****                         case 0:
 756:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 757:..\src/command_processing.c ****                         break;
 758:..\src/command_processing.c ****                         case 1:
 759:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 760:..\src/command_processing.c ****                         break;
 761:..\src/command_processing.c ****                     }
 762:..\src/command_processing.c ****                     break;
 5258              		.loc 1 762 0
 5259 2a24 6EE0     		b	.L186
 5260              	.L236:
 756:..\src/command_processing.c ****                         break;
 5261              		.loc 1 756 0
 5262 2a26 07F13803 		add	r3, r7, #56
 5263 2a2a 143B     		subs	r3, r3, #20
 5264 2a2c 1846     		mov	r0, r3
 5265 2a2e FFF7FEFF 		bl	strlen
 5266 2a32 0346     		mov	r3, r0
 5267 2a34 1A46     		mov	r2, r3
 5268 2a36 07F13803 		add	r3, r7, #56
 5269 2a3a 143B     		subs	r3, r3, #20
 5270 2a3c 1344     		add	r3, r3, r2
 5271 2a3e 464A     		ldr	r2, .L273+32
 5272 2a40 1D46     		mov	r5, r3
 5273 2a42 1446     		mov	r4, r2
 5274 2a44 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5275 2a46 2860     		str	r0, [r5]	@ unaligned
 5276 2a48 6960     		str	r1, [r5, #4]	@ unaligned
 5277 2a4a AA60     		str	r2, [r5, #8]	@ unaligned
 5278 2a4c EB60     		str	r3, [r5, #12]	@ unaligned
 5279 2a4e 2068     		ldr	r0, [r4]	@ unaligned
 5280 2a50 2861     		str	r0, [r5, #16]	@ unaligned
 757:..\src/command_processing.c ****                         case 1:
 5281              		.loc 1 757 0
 5282 2a52 18E0     		b	.L235
 5283              	.L237:
 759:..\src/command_processing.c ****                         break;
 5284              		.loc 1 759 0
 5285 2a54 07F13803 		add	r3, r7, #56
 5286 2a58 143B     		subs	r3, r3, #20
 5287 2a5a 1846     		mov	r0, r3
 5288 2a5c FFF7FEFF 		bl	strlen
 5289 2a60 0346     		mov	r3, r0
 5290 2a62 1A46     		mov	r2, r3
 5291 2a64 07F13803 		add	r3, r7, #56
 5292 2a68 143B     		subs	r3, r3, #20
 5293 2a6a 1344     		add	r3, r3, r2
 5294 2a6c 3B4A     		ldr	r2, .L273+36
 5295 2a6e 1D46     		mov	r5, r3
 5296 2a70 1446     		mov	r4, r2
 5297 2a72 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5298 2a74 2860     		str	r0, [r5]	@ unaligned
 5299 2a76 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 125


 5300 2a78 AA60     		str	r2, [r5, #8]	@ unaligned
 5301 2a7a EB60     		str	r3, [r5, #12]	@ unaligned
 5302 2a7c 2068     		ldr	r0, [r4]	@ unaligned
 5303 2a7e 2861     		str	r0, [r5, #16]	@ unaligned
 5304 2a80 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5305 2a82 AB82     		strh	r3, [r5, #20]	@ unaligned
 760:..\src/command_processing.c ****                     }
 5306              		.loc 1 760 0
 5307 2a84 00BF     		nop
 5308              	.L235:
 5309              		.loc 1 762 0
 5310 2a86 3DE0     		b	.L186
 5311              	.L197:
 763:..\src/command_processing.c ****                 case 10:    // device type menu
 764:..\src/command_processing.c ****                     switch(*m_addr){
 5312              		.loc 1 764 0
 5313 2a88 07F5A253 		add	r3, r7, #5184
 5314 2a8c 03F10803 		add	r3, r3, #8
 5315 2a90 1B68     		ldr	r3, [r3]
 5316 2a92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5317 2a94 002B     		cmp	r3, #0
 5318 2a96 02D0     		beq	.L239
 5319 2a98 012B     		cmp	r3, #1
 5320 2a9a 16D0     		beq	.L240
 765:..\src/command_processing.c ****                         case 0:
 766:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 767:..\src/command_processing.c ****                         break;
 768:..\src/command_processing.c ****                         case 1:
 769:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 770:..\src/command_processing.c ****                         break;
 771:..\src/command_processing.c ****                     }
 772:..\src/command_processing.c ****                     break;
 5321              		.loc 1 772 0
 5322 2a9c 32E0     		b	.L186
 5323              	.L239:
 766:..\src/command_processing.c ****                         break;
 5324              		.loc 1 766 0
 5325 2a9e 07F13803 		add	r3, r7, #56
 5326 2aa2 143B     		subs	r3, r3, #20
 5327 2aa4 1846     		mov	r0, r3
 5328 2aa6 FFF7FEFF 		bl	strlen
 5329 2aaa 0346     		mov	r3, r0
 5330 2aac 1A46     		mov	r2, r3
 5331 2aae 07F13803 		add	r3, r7, #56
 5332 2ab2 143B     		subs	r3, r3, #20
 5333 2ab4 1344     		add	r3, r3, r2
 5334 2ab6 2A4A     		ldr	r2, .L273+40
 5335 2ab8 1C46     		mov	r4, r3
 5336 2aba 1346     		mov	r3, r2
 5337 2abc 07CB     		ldmia	r3!, {r0, r1, r2}
 5338 2abe 2060     		str	r0, [r4]	@ unaligned
 5339 2ac0 6160     		str	r1, [r4, #4]	@ unaligned
 5340 2ac2 A260     		str	r2, [r4, #8]	@ unaligned
 5341 2ac4 1B88     		ldrh	r3, [r3]	@ unaligned
 5342 2ac6 A381     		strh	r3, [r4, #12]	@ unaligned
 767:..\src/command_processing.c ****                         case 1:
 5343              		.loc 1 767 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 126


 5344 2ac8 16E0     		b	.L238
 5345              	.L240:
 769:..\src/command_processing.c ****                         break;
 5346              		.loc 1 769 0
 5347 2aca 07F13803 		add	r3, r7, #56
 5348 2ace 143B     		subs	r3, r3, #20
 5349 2ad0 1846     		mov	r0, r3
 5350 2ad2 FFF7FEFF 		bl	strlen
 5351 2ad6 0346     		mov	r3, r0
 5352 2ad8 1A46     		mov	r2, r3
 5353 2ada 07F13803 		add	r3, r7, #56
 5354 2ade 143B     		subs	r3, r3, #20
 5355 2ae0 1344     		add	r3, r3, r2
 5356 2ae2 204A     		ldr	r2, .L273+44
 5357 2ae4 1D46     		mov	r5, r3
 5358 2ae6 1446     		mov	r4, r2
 5359 2ae8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5360 2aea 2860     		str	r0, [r5]	@ unaligned
 5361 2aec 6960     		str	r1, [r5, #4]	@ unaligned
 5362 2aee AA60     		str	r2, [r5, #8]	@ unaligned
 5363 2af0 EB60     		str	r3, [r5, #12]	@ unaligned
 5364 2af2 2388     		ldrh	r3, [r4]	@ unaligned
 5365 2af4 2B82     		strh	r3, [r5, #16]	@ unaligned
 770:..\src/command_processing.c ****                     }
 5366              		.loc 1 770 0
 5367 2af6 00BF     		nop
 5368              	.L238:
 5369              		.loc 1 772 0
 5370 2af8 04E0     		b	.L186
 5371              	.L252:
 664:..\src/command_processing.c ****                 case 2:     // control mode menu
 5372              		.loc 1 664 0
 5373 2afa 00BF     		nop
 5374 2afc 02E0     		b	.L186
 5375              	.L253:
 680:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5376              		.loc 1 680 0
 5377 2afe 00BF     		nop
 5378 2b00 00E0     		b	.L186
 5379              	.L254:
 724:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5380              		.loc 1 724 0
 5381 2b02 00BF     		nop
 5382              	.L186:
 773:..\src/command_processing.c ****             }
 774:..\src/command_processing.c ****             //Recomputes string lenght
 775:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5383              		.loc 1 775 0
 5384 2b04 07F13803 		add	r3, r7, #56
 5385 2b08 143B     		subs	r3, r3, #20
 5386 2b0a 1846     		mov	r0, r3
 5387 2b0c FFF7FEFF 		bl	strlen
 5388 2b10 0346     		mov	r3, r0
 5389 2b12 DBB2     		uxtb	r3, r3
 5390 2b14 0133     		adds	r3, r3, #1
 5391 2b16 07F5A252 		add	r2, r7, #5184
 5392 2b1a 02F11202 		add	r2, r2, #18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 127


 5393 2b1e 1370     		strb	r3, [r2]
 5394              	.L185:
 776:..\src/command_processing.c ****         }
 777:..\src/command_processing.c **** 
 778:..\src/command_processing.c ****         // Add parameter string to packet
 779:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5395              		.loc 1 779 0
 5396 2b20 07F5A253 		add	r3, r7, #5184
 5397 2b24 03F11203 		add	r3, r3, #18
 5398 2b28 1B78     		ldrb	r3, [r3]
 5399 2b2a 07F5A252 		add	r2, r7, #5184
 5400 2b2e 02F11702 		add	r2, r2, #23
 5401 2b32 1370     		strb	r3, [r2]
 5402 2b34 5DE0     		b	.L241
 5403              	.L274:
 5404 2b36 00BF     		.align	2
 5405              	.L273:
 5406 2b38 D4000000 		.word	.LC94
 5407 2b3c E8000000 		.word	.LC95
 5408 2b40 BC000000 		.word	.LC92
 5409 2b44 F8000000 		.word	.LC96
 5410 2b48 00010000 		.word	.LC97
 5411 2b4c 08010000 		.word	.LC98
 5412 2b50 18010000 		.word	.LC99
 5413 2b54 20010000 		.word	.LC100
 5414 2b58 28010000 		.word	.LC101
 5415 2b5c 40010000 		.word	.LC102
 5416 2b60 58010000 		.word	.LC103
 5417 2b64 68010000 		.word	.LC104
 5418              	.L242:
 780:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5419              		.loc 1 780 0 discriminator 3
 5420 2b68 07F5A253 		add	r3, r7, #5184
 5421 2b6c 03F11503 		add	r3, r3, #21
 5422 2b70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5423 2b72 3222     		movs	r2, #50
 5424 2b74 02FB03F3 		mul	r3, r2, r3
 5425 2b78 1A1D     		adds	r2, r3, #4
 5426 2b7a 07F5A253 		add	r3, r7, #5184
 5427 2b7e 03F11303 		add	r3, r3, #19
 5428 2b82 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5429 2b84 07F5A253 		add	r3, r7, #5184
 5430 2b88 03F11503 		add	r3, r3, #21
 5431 2b8c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5432 2b8e 07F11803 		add	r3, r7, #24
 5433 2b92 143B     		subs	r3, r3, #20
 5434 2b94 1B68     		ldr	r3, [r3]
 5435 2b96 0344     		add	r3, r3, r0
 5436 2b98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5437 2b9a 03FB01F3 		mul	r3, r3, r1
 5438 2b9e 1A44     		add	r2, r2, r3
 5439 2ba0 07F5A253 		add	r3, r7, #5184
 5440 2ba4 03F11203 		add	r3, r3, #18
 5441 2ba8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5442 2baa 1A44     		add	r2, r2, r3
 5443 2bac 07F5A253 		add	r3, r7, #5184
 5444 2bb0 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 128


 5445 2bb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5446 2bb6 D21A     		subs	r2, r2, r3
 5447 2bb8 07F5A253 		add	r3, r7, #5184
 5448 2bbc 03F11203 		add	r3, r3, #18
 5449 2bc0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5450 2bc2 07F5A253 		add	r3, r7, #5184
 5451 2bc6 03F11703 		add	r3, r3, #23
 5452 2bca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5453 2bcc C91A     		subs	r1, r1, r3
 5454 2bce 07F13803 		add	r3, r7, #56
 5455 2bd2 143B     		subs	r3, r3, #20
 5456 2bd4 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5457 2bd6 07F15803 		add	r3, r7, #88
 5458 2bda 9954     		strb	r1, [r3, r2]
 779:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5459              		.loc 1 779 0 discriminator 3
 5460 2bdc 07F5A253 		add	r3, r7, #5184
 5461 2be0 03F11703 		add	r3, r3, #23
 5462 2be4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5463 2be6 013B     		subs	r3, r3, #1
 5464 2be8 07F5A252 		add	r2, r7, #5184
 5465 2bec 02F11702 		add	r2, r2, #23
 5466 2bf0 1370     		strb	r3, [r2]
 5467              	.L241:
 779:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5468              		.loc 1 779 0 is_stmt 0 discriminator 1
 5469 2bf2 07F5A253 		add	r3, r7, #5184
 5470 2bf6 03F11703 		add	r3, r3, #23
 5471 2bfa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5472 2bfc 002B     		cmp	r3, #0
 5473 2bfe B3D1     		bne	.L242
 781:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 782:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5474              		.loc 1 782 0 is_stmt 1
 5475 2c00 07F5A253 		add	r3, r7, #5184
 5476 2c04 03F11503 		add	r3, r3, #21
 5477 2c08 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5478 2c0a 07F11803 		add	r3, r7, #24
 5479 2c0e 103B     		subs	r3, r3, #16
 5480 2c10 1B68     		ldr	r3, [r3]
 5481 2c12 1344     		add	r3, r3, r2
 5482 2c14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5483 2c16 002B     		cmp	r3, #0
 5484 2c18 3BD1     		bne	.L243
 783:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5485              		.loc 1 783 0
 5486 2c1a 07F5A253 		add	r3, r7, #5184
 5487 2c1e 03F11503 		add	r3, r3, #21
 5488 2c22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5489 2c24 3222     		movs	r2, #50
 5490 2c26 02FB03F3 		mul	r3, r2, r3
 5491 2c2a 1A1D     		adds	r2, r3, #4
 5492 2c2c 07F5A253 		add	r3, r7, #5184
 5493 2c30 03F11303 		add	r3, r3, #19
 5494 2c34 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5495 2c36 07F5A253 		add	r3, r7, #5184
 5496 2c3a 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 129


 5497 2c3e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5498 2c40 07F11803 		add	r3, r7, #24
 5499 2c44 143B     		subs	r3, r3, #20
 5500 2c46 1B68     		ldr	r3, [r3]
 5501 2c48 0344     		add	r3, r3, r0
 5502 2c4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5503 2c4c 03FB01F3 		mul	r3, r3, r1
 5504 2c50 1A44     		add	r2, r2, r3
 5505 2c52 07F5A253 		add	r3, r7, #5184
 5506 2c56 03F11203 		add	r3, r3, #18
 5507 2c5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5508 2c5c 1344     		add	r3, r3, r2
 5509 2c5e 07F5A252 		add	r2, r7, #5184
 5510 2c62 02F11402 		add	r2, r2, #20
 5511 2c66 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5512 2c68 07F5A351 		add	r1, r7, #5216
 5513 2c6c 01F10801 		add	r1, r1, #8
 5514 2c70 0968     		ldr	r1, [r1]
 5515 2c72 0A44     		add	r2, r2, r1
 5516 2c74 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5517 2c76 07F15802 		add	r2, r7, #88
 5518 2c7a D154     		strb	r1, [r2, r3]
 784:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5519              		.loc 1 784 0
 5520 2c7c 07F5A253 		add	r3, r7, #5184
 5521 2c80 03F11403 		add	r3, r3, #20
 5522 2c84 1B78     		ldrb	r3, [r3]
 5523 2c86 0133     		adds	r3, r3, #1
 5524 2c88 07F5A252 		add	r2, r7, #5184
 5525 2c8c 02F11402 		add	r2, r2, #20
 5526 2c90 1370     		strb	r3, [r2]
 5527              	.L243:
 785:..\src/command_processing.c ****         }      
 786:..\src/command_processing.c ****         
 787:..\src/command_processing.c ****         // Add struct index after an empty bit
 788:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 789:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5528              		.loc 1 789 0
 5529 2c92 07F5A253 		add	r3, r7, #5184
 5530 2c96 03F11503 		add	r3, r3, #21
 5531 2c9a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5532 2c9c 07F11803 		add	r3, r7, #24
 5533 2ca0 103B     		subs	r3, r3, #16
 5534 2ca2 1B68     		ldr	r3, [r3]
 5535 2ca4 1344     		add	r3, r3, r2
 5536 2ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5537 2ca8 002B     		cmp	r3, #0
 5538 2caa 31D1     		bne	.L244
 790:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 5539              		.loc 1 790 0
 5540 2cac 07F5A253 		add	r3, r7, #5184
 5541 2cb0 03F11503 		add	r3, r3, #21
 5542 2cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5543 2cb6 3222     		movs	r2, #50
 5544 2cb8 02FB03F3 		mul	r3, r2, r3
 5545 2cbc 1A1D     		adds	r2, r3, #4
 5546 2cbe 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 130


 5547 2cc2 03F11303 		add	r3, r3, #19
 5548 2cc6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5549 2cc8 07F5A253 		add	r3, r7, #5184
 5550 2ccc 03F11503 		add	r3, r3, #21
 5551 2cd0 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5552 2cd2 07F11803 		add	r3, r7, #24
 5553 2cd6 143B     		subs	r3, r3, #20
 5554 2cd8 1B68     		ldr	r3, [r3]
 5555 2cda 0344     		add	r3, r3, r0
 5556 2cdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5557 2cde 03FB01F3 		mul	r3, r3, r1
 5558 2ce2 1A44     		add	r2, r2, r3
 5559 2ce4 07F5A253 		add	r3, r7, #5184
 5560 2ce8 03F11203 		add	r3, r3, #18
 5561 2cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5562 2cee 1344     		add	r3, r3, r2
 5563 2cf0 9A1C     		adds	r2, r3, #2
 5564 2cf2 07F5A253 		add	r3, r7, #5184
 5565 2cf6 03F11503 		add	r3, r3, #21
 5566 2cfa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5567 2cfc 07F11803 		add	r3, r7, #24
 5568 2d00 183B     		subs	r3, r3, #24
 5569 2d02 1B68     		ldr	r3, [r3]
 5570 2d04 0B44     		add	r3, r3, r1
 5571 2d06 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5572 2d08 07F15803 		add	r3, r7, #88
 5573 2d0c 9954     		strb	r1, [r3, r2]
 5574 2d0e 30E0     		b	.L245
 5575              	.L244:
 791:..\src/command_processing.c ****         }
 792:..\src/command_processing.c ****         else {
 793:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 5576              		.loc 1 793 0
 5577 2d10 07F5A253 		add	r3, r7, #5184
 5578 2d14 03F11503 		add	r3, r3, #21
 5579 2d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5580 2d1a 3222     		movs	r2, #50
 5581 2d1c 02FB03F3 		mul	r3, r2, r3
 5582 2d20 1A1D     		adds	r2, r3, #4
 5583 2d22 07F5A253 		add	r3, r7, #5184
 5584 2d26 03F11303 		add	r3, r3, #19
 5585 2d2a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5586 2d2c 07F5A253 		add	r3, r7, #5184
 5587 2d30 03F11503 		add	r3, r3, #21
 5588 2d34 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5589 2d36 07F11803 		add	r3, r7, #24
 5590 2d3a 143B     		subs	r3, r3, #20
 5591 2d3c 1B68     		ldr	r3, [r3]
 5592 2d3e 0344     		add	r3, r3, r0
 5593 2d40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5594 2d42 03FB01F3 		mul	r3, r3, r1
 5595 2d46 1A44     		add	r2, r2, r3
 5596 2d48 07F5A253 		add	r3, r7, #5184
 5597 2d4c 03F11203 		add	r3, r3, #18
 5598 2d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5599 2d52 1344     		add	r3, r3, r2
 5600 2d54 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 131


 5601 2d56 07F5A253 		add	r3, r7, #5184
 5602 2d5a 03F11503 		add	r3, r3, #21
 5603 2d5e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5604 2d60 07F11803 		add	r3, r7, #24
 5605 2d64 183B     		subs	r3, r3, #24
 5606 2d66 1B68     		ldr	r3, [r3]
 5607 2d68 0B44     		add	r3, r3, r1
 5608 2d6a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5609 2d6c 07F15803 		add	r3, r7, #88
 5610 2d70 9954     		strb	r1, [r3, r2]
 5611              	.L245:
 373:..\src/command_processing.c ****         
 5612              		.loc 1 373 0 discriminator 2
 5613 2d72 07F5A253 		add	r3, r7, #5184
 5614 2d76 03F11503 		add	r3, r3, #21
 5615 2d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5616 2d7c 0133     		adds	r3, r3, #1
 5617 2d7e 07F5A252 		add	r2, r7, #5184
 5618 2d82 02F11502 		add	r2, r2, #21
 5619 2d86 1370     		strb	r3, [r2]
 5620              	.L63:
 373:..\src/command_processing.c ****         
 5621              		.loc 1 373 0 is_stmt 0 discriminator 1
 5622 2d88 07F5A253 		add	r3, r7, #5184
 5623 2d8c 03F11503 		add	r3, r3, #21
 5624 2d90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5625 2d92 462B     		cmp	r3, #70
 5626 2d94 7DF6A8A9 		bls	.L246
 794:..\src/command_processing.c ****         }
 795:..\src/command_processing.c ****     }
 796:..\src/command_processing.c **** 
 797:..\src/command_processing.c ****     // Add menu
 798:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 5627              		.loc 1 798 0 is_stmt 1
 5628 2d98 0023     		movs	r3, #0
 5629 2d9a 07F5A252 		add	r2, r7, #5184
 5630 2d9e 02F11602 		add	r2, r2, #22
 5631 2da2 1370     		strb	r3, [r2]
 5632 2da4 70E0     		b	.L247
 5633              	.L250:
 799:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5634              		.loc 1 799 0
 5635 2da6 07F5A253 		add	r3, r7, #5184
 5636 2daa 03F11603 		add	r3, r3, #22
 5637 2dae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5638 2db0 9B00     		lsls	r3, r3, #2
 5639 2db2 07F5A352 		add	r2, r7, #5216
 5640 2db6 02F11402 		add	r2, r2, #20
 5641 2dba 1268     		ldr	r2, [r2]
 5642 2dbc 1344     		add	r3, r3, r2
 5643 2dbe 1B68     		ldr	r3, [r3]
 5644 2dc0 1846     		mov	r0, r3
 5645 2dc2 FFF7FEFF 		bl	strlen
 5646 2dc6 0346     		mov	r3, r0
 5647 2dc8 07F5A252 		add	r2, r7, #5184
 5648 2dcc 02F11202 		add	r2, r2, #18
 5649 2dd0 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 132


 800:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5650              		.loc 1 800 0
 5651 2dd2 07F5A253 		add	r3, r7, #5184
 5652 2dd6 03F11203 		add	r3, r3, #18
 5653 2dda 1B78     		ldrb	r3, [r3]
 5654 2ddc 07F5A252 		add	r2, r7, #5184
 5655 2de0 02F11702 		add	r2, r2, #23
 5656 2de4 1370     		strb	r3, [r2]
 5657 2de6 3DE0     		b	.L248
 5658              	.L249:
 801:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 5659              		.loc 1 801 0 discriminator 3
 5660 2de8 07F5A253 		add	r3, r7, #5184
 5661 2dec 03F11603 		add	r3, r3, #22
 5662 2df0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5663 2df2 9622     		movs	r2, #150
 5664 2df4 02FB03F3 		mul	r3, r2, r3
 5665 2df8 03F55E62 		add	r2, r3, #3552
 5666 2dfc 07F5A253 		add	r3, r7, #5184
 5667 2e00 03F11203 		add	r3, r3, #18
 5668 2e04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5669 2e06 1A44     		add	r2, r2, r3
 5670 2e08 07F5A253 		add	r3, r7, #5184
 5671 2e0c 03F11703 		add	r3, r3, #23
 5672 2e10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5673 2e12 D31A     		subs	r3, r2, r3
 5674 2e14 07F5A252 		add	r2, r7, #5184
 5675 2e18 02F11602 		add	r2, r2, #22
 5676 2e1c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5677 2e1e 9200     		lsls	r2, r2, #2
 5678 2e20 07F5A351 		add	r1, r7, #5216
 5679 2e24 01F11401 		add	r1, r1, #20
 5680 2e28 0968     		ldr	r1, [r1]
 5681 2e2a 0A44     		add	r2, r2, r1
 5682 2e2c 1268     		ldr	r2, [r2]
 5683 2e2e 07F5A251 		add	r1, r7, #5184
 5684 2e32 01F11201 		add	r1, r1, #18
 5685 2e36 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 5686 2e38 07F5A251 		add	r1, r7, #5184
 5687 2e3c 01F11701 		add	r1, r1, #23
 5688 2e40 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 5689 2e42 411A     		subs	r1, r0, r1
 5690 2e44 0A44     		add	r2, r2, r1
 5691 2e46 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5692 2e48 07F15802 		add	r2, r7, #88
 5693 2e4c D154     		strb	r1, [r2, r3]
 800:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5694              		.loc 1 800 0 discriminator 3
 5695 2e4e 07F5A253 		add	r3, r7, #5184
 5696 2e52 03F11703 		add	r3, r3, #23
 5697 2e56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5698 2e58 013B     		subs	r3, r3, #1
 5699 2e5a 07F5A252 		add	r2, r7, #5184
 5700 2e5e 02F11702 		add	r2, r2, #23
 5701 2e62 1370     		strb	r3, [r2]
 5702              	.L248:
 800:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 133


 5703              		.loc 1 800 0 is_stmt 0 discriminator 1
 5704 2e64 07F5A253 		add	r3, r7, #5184
 5705 2e68 03F11703 		add	r3, r3, #23
 5706 2e6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5707 2e6e 002B     		cmp	r3, #0
 5708 2e70 BAD1     		bne	.L249
 798:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5709              		.loc 1 798 0 is_stmt 1 discriminator 2
 5710 2e72 07F5A253 		add	r3, r7, #5184
 5711 2e76 03F11603 		add	r3, r3, #22
 5712 2e7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5713 2e7c 0133     		adds	r3, r3, #1
 5714 2e7e 07F5A252 		add	r2, r7, #5184
 5715 2e82 02F11602 		add	r2, r2, #22
 5716 2e86 1370     		strb	r3, [r2]
 5717              	.L247:
 798:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5718              		.loc 1 798 0 is_stmt 0 discriminator 1
 5719 2e88 07F5A253 		add	r3, r7, #5184
 5720 2e8c 03F11603 		add	r3, r3, #22
 5721 2e90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5722 2e92 092B     		cmp	r3, #9
 5723 2e94 87D9     		bls	.L250
 802:..\src/command_processing.c ****     }
 803:..\src/command_processing.c ****     
 804:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 5724              		.loc 1 804 0 is_stmt 1
 5725 2e96 07F5A253 		add	r3, r7, #5184
 5726 2e9a 03F11003 		add	r3, r3, #16
 5727 2e9e 1B88     		ldrh	r3, [r3]
 5728 2ea0 5C1E     		subs	r4, r3, #1
 5729 2ea2 07F5A253 		add	r3, r7, #5184
 5730 2ea6 03F11003 		add	r3, r3, #16
 5731 2eaa 1B88     		ldrh	r3, [r3]	@ movhi
 5732 2eac DBB2     		uxtb	r3, r3
 5733 2eae 013B     		subs	r3, r3, #1
 5734 2eb0 DAB2     		uxtb	r2, r3
 5735 2eb2 07F15803 		add	r3, r7, #88
 5736 2eb6 1146     		mov	r1, r2
 5737 2eb8 1846     		mov	r0, r3
 5738 2eba FFF7FEFF 		bl	LCRChecksum
 5739 2ebe 0346     		mov	r3, r0
 5740 2ec0 1A46     		mov	r2, r3
 5741 2ec2 07F15803 		add	r3, r7, #88
 5742 2ec6 1A55     		strb	r2, [r3, r4]
 805:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 5743              		.loc 1 805 0
 5744 2ec8 07F5A253 		add	r3, r7, #5184
 5745 2ecc 03F11003 		add	r3, r3, #16
 5746 2ed0 1A88     		ldrh	r2, [r3]
 5747 2ed2 07F15803 		add	r3, r7, #88
 5748 2ed6 1146     		mov	r1, r2
 5749 2ed8 1846     		mov	r0, r3
 5750 2eda FFF7FEFF 		bl	commWrite
 806:..\src/command_processing.c **** }
 5751              		.loc 1 806 0
 5752 2ede 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 134


 5753 2ee0 07F5A257 		add	r7, r7, #5184
 5754 2ee4 1837     		adds	r7, r7, #24
 5755              		.cfi_def_cfa_offset 16
 5756 2ee6 BD46     		mov	sp, r7
 5757              		.cfi_def_cfa_register 13
 5758              		@ sp needed
 5759 2ee8 B0BD     		pop	{r4, r5, r7, pc}
 5760              		.cfi_endproc
 5761              	.LFE67:
 5762              		.size	get_param_list, .-get_param_list
 5763 2eea 00BF     		.section	.rodata
 5764 017b 00       		.align	2
 5765              	.LC106:
 5766 017c 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 5766      204E6F6E 
 5766      650A3120 
 5766      2D3E204C 
 5766      6F772028 
 5767 01ac 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 5767      74657220 
 5767      72656164 
 5767      290A3220 
 5767      2D3E2048 
 5768 01dc 62697420 		.ascii	"bit register read)\012\000"
 5768      72656769 
 5768      73746572 
 5768      20726561 
 5768      64290A00 
 5769              		.align	2
 5770              	.LC107:
 5771 01f0 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 5771      20557362 
 5771      0A31202D 
 5771      3E204861 
 5771      6E646C65 
 5772 021b 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 5772      20454D47 
 5772      20496E74 
 5772      65677261 
 5772      6C0A3420 
 5773 0248 20416476 		.ascii	" Advanced\012\000"
 5773      616E6365 
 5773      640A00
 5774 0253 00       		.align	2
 5775              	.LC108:
 5776 0254 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 5776      20506F73 
 5776      6974696F 
 5776      6E0A3120 
 5776      2D3E2050 
 5777 027e 6F736974 		.ascii	"osition and Current\012\000"
 5777      696F6E20 
 5777      616E6420 
 5777      43757272 
 5777      656E740A 
 5778 0293 00       		.align	2
 5779              	.LC109:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 135


 5780 0294 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 5780      20446561 
 5780      63746976 
 5780      61746520 
 5780      5B4E4F5D 
 5781 02be 0000     		.align	2
 5782              	.LC110:
 5783 02c0 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 5783      20526967 
 5783      68740A31 
 5783      202D3E20 
 5783      4C656674 
 5784 02d6 0000     		.align	2
 5785              	.LC111:
 5786 02d8 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 5786      204F4646 
 5786      0A31202D 
 5786      3E204F4E 
 5786      0A546865 
 5787 02ff 00       		.align	2
 5788              	.LC112:
 5789 0300 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 5789      204E6F6E 
 5789      650A3120 
 5789      2D3E2053 
 5789      442F5254 
 5790 032d 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 5790      0A33202D 
 5790      3E204F74 
 5790      68657220 
 5790      5B4E2F41 
 5791 0358 00       		.ascii	"\000"
 5792 0359 000000   		.align	2
 5793              	.LC113:
 5794 035c 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 5794      2047656E 
 5794      65726963 
 5794      20757365 
 5794      720A3120 
 5795 0386 20626F61 		.ascii	" board will reset\012\000"
 5795      72642077 
 5795      696C6C20 
 5795      72657365 
 5795      740A00
 5796 0399 000000   		.align	2
 5797              	.LC114:
 5798 039c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 5798      204D4333 
 5798      33383837 
 5798      20285374 
 5798      616E6461 
 5799 03cc 290A5468 		.ascii	")\012The board will reset\012\000"
 5799      6520626F 
 5799      61726420 
 5799      77696C6C 
 5799      20726573 
 5800              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 136


 5801              	.LC115:
 5802 03e4 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\012The b"
 5802      20534F46 
 5802      5448414E 
 5802      44205052 
 5802      4F0A3120 
 5803 0411 6F617264 		.ascii	"oard will reset\012\000"
 5803      2077696C 
 5803      6C207265 
 5803      7365740A 
 5803      00
 5804 0422 0000     		.align	2
 5805              	.LC0:
 5806 0424 02       		.byte	2
 5807 0425 07       		.byte	7
 5808 0426 07       		.byte	7
 5809 0427 00       		.byte	0
 5810 0428 00       		.byte	0
 5811 0429 00       		.byte	0
 5812 042a 02       		.byte	2
 5813 042b 03       		.byte	3
 5814 042c 07       		.byte	7
 5815 042d 00       		.byte	0
 5816 042e 05       		.byte	5
 5817 042f 05       		.byte	5
 5818 0430 03       		.byte	3
 5819 0431 04       		.byte	4
 5820 0432 00       		.byte	0
 5821 0433 06       		.byte	6
 5822 0434 02       		.byte	2
 5823 0435 00       		.byte	0
 5824 0436 01       		.byte	1
 5825 0437 00       		.byte	0
 5826 0438 07       		.byte	7
 5827 0439 02       		.byte	2
 5828 043a 05       		.byte	5
 5829 043b 05       		.byte	5
 5830 043c 05       		.byte	5
 5831 043d 00       		.byte	0
 5832 043e 00       		.byte	0
 5833 043f 00       		.byte	0
 5834 0440 00       		.byte	0
 5835 0441 00       		.byte	0
 5836 0442 00       		.byte	0
 5837 0443 02       		.byte	2
 5838 0444 00       		.byte	0
 5839 0445 02       		.byte	2
 5840 0446 00       		.byte	0
 5841 0447 09       		.byte	9
 5842 0448 02       		.byte	2
 5843 0449 00       		.byte	0
 5844 044a 02       		.byte	2
 5845 044b 00       		.byte	0
 5846 044c 02       		.byte	2
 5847 044d 01       		.byte	1
 5848 044e 00       		.byte	0
 5849 044f 07       		.byte	7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 137


 5850 0450 07       		.byte	7
 5851 0451 00       		.byte	0
 5852 0452 00       		.byte	0
 5853 0453 00       		.byte	0
 5854 0454 02       		.byte	2
 5855 0455 03       		.byte	3
 5856 0456 07       		.byte	7
 5857 0457 00       		.byte	0
 5858 0458 05       		.byte	5
 5859 0459 05       		.byte	5
 5860 045a 03       		.byte	3
 5861 045b 00       		.byte	0
 5862 045c 01       		.byte	1
 5863 045d 00       		.byte	0
 5864 045e 07       		.byte	7
 5865 045f 02       		.byte	2
 5866 0460 00       		.byte	0
 5867 0461 02       		.byte	2
 5868 0462 00       		.byte	0
 5869 0463 02       		.byte	2
 5870 0464 01       		.byte	1
 5871 0465 02       		.byte	2
 5872 0466 02       		.byte	2
 5873 0467 00       		.byte	0
 5874 0468 02       		.byte	2
 5875 0469 02       		.byte	2
 5876 046a 00       		.byte	0
 5877 046b 00       		.align	2
 5878              	.LC1:
 5879 046c 31202D20 		.ascii	"1 - Device ID:\000"
 5879      44657669 
 5879      63652049 
 5879      443A00
 5880 047b 00       		.align	2
 5881              	.LC2:
 5882 047c 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 5882      506F7369 
 5882      74696F6E 
 5882      20504944 
 5882      205B502C 
 5883              		.align	2
 5884              	.LC3:
 5885 0498 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 5885      43757272 
 5885      656E7420 
 5885      50494420 
 5885      5B502C20 
 5886 04b3 00       		.align	2
 5887              	.LC4:
 5888 04b4 34202D20 		.ascii	"4 - Startup Activation:\000"
 5888      53746172 
 5888      74757020 
 5888      41637469 
 5888      76617469 
 5889              		.align	2
 5890              	.LC5:
 5891 04cc 35202D20 		.ascii	"5 - Input mode:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 138


 5891      496E7075 
 5891      74206D6F 
 5891      64653A00 
 5892              		.align	2
 5893              	.LC6:
 5894 04dc 36202D20 		.ascii	"6 - Control mode:\000"
 5894      436F6E74 
 5894      726F6C20 
 5894      6D6F6465 
 5894      3A00
 5895 04ee 0000     		.align	2
 5896              	.LC7:
 5897 04f0 37202D20 		.ascii	"7 - Resolutions:\000"
 5897      5265736F 
 5897      6C757469 
 5897      6F6E733A 
 5897      00
 5898 0501 000000   		.align	2
 5899              	.LC8:
 5900 0504 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 5900      4D656173 
 5900      7572656D 
 5900      656E7420 
 5900      4F666673 
 5901 051d 000000   		.align	2
 5902              	.LC9:
 5903 0520 39202D20 		.ascii	"9 - Multipliers:\000"
 5903      4D756C74 
 5903      69706C69 
 5903      6572733A 
 5903      00
 5904 0531 000000   		.align	2
 5905              	.LC10:
 5906 0534 3130202D 		.ascii	"10 - Pos. limit active:\000"
 5906      20506F73 
 5906      2E206C69 
 5906      6D697420 
 5906      61637469 
 5907              		.align	2
 5908              	.LC11:
 5909 054c 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 5909      20506F73 
 5909      2E206C69 
 5909      6D697473 
 5909      205B696E 
 5910 0569 000000   		.align	2
 5911              	.LC12:
 5912 056c 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 5912      204D6178 
 5912      20737465 
 5912      7073205B 
 5912      6E65672C 
 5913 0587 00       		.align	2
 5914              	.LC13:
 5915 0588 3133202D 		.ascii	"13 - Current limit:\000"
 5915      20437572 
 5915      72656E74 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 139


 5915      206C696D 
 5915      69743A00 
 5916              		.align	2
 5917              	.LC14:
 5918 059c 3134202D 		.ascii	"14 - EMG thresholds:\000"
 5918      20454D47 
 5918      20746872 
 5918      6573686F 
 5918      6C64733A 
 5919 05b1 000000   		.align	2
 5920              	.LC15:
 5921 05b4 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 5921      20454D47 
 5921      2063616C 
 5921      69627261 
 5921      74696F6E 
 5922 05d5 000000   		.align	2
 5923              	.LC16:
 5924 05d8 3136202D 		.ascii	"16 - EMG max values:\000"
 5924      20454D47 
 5924      206D6178 
 5924      2076616C 
 5924      7565733A 
 5925 05ed 000000   		.align	2
 5926              	.LC17:
 5927 05f0 3137202D 		.ascii	"17 - EMG max speed:\000"
 5927      20454D47 
 5927      206D6178 
 5927      20737065 
 5927      65643A00 
 5928              		.align	2
 5929              	.LC18:
 5930 0604 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 5930      20416273 
 5930      6F6C7574 
 5930      6520656E 
 5930      636F6465 
 5931              		.align	2
 5932              	.LC19:
 5933 0624 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 5933      204D6F74 
 5933      6F722068 
 5933      616E646C 
 5933      65207261 
 5934 063d 000000   		.align	2
 5935              	.LC20:
 5936 0640 3230202D 		.ascii	"20 - PWM rescaling:\000"
 5936      2050574D 
 5936      20726573 
 5936      63616C69 
 5936      6E673A00 
 5937              		.align	2
 5938              	.LC21:
 5939 0654 3231202D 		.ascii	"21 - Current lookup:\000"
 5939      20437572 
 5939      72656E74 
 5939      206C6F6F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 140


 5939      6B75703A 
 5940 0669 000000   		.align	2
 5941              	.LC22:
 5942 066c 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 5942      20446174 
 5942      65206F66 
 5942      206D6169 
 5942      6E74656E 
 5943 068e 0000     		.align	2
 5944              	.LC23:
 5945 0690 3233202D 		.ascii	"23 - Rest position:\000"
 5945      20526573 
 5945      7420706F 
 5945      73697469 
 5945      6F6E3A00 
 5946              		.align	2
 5947              	.LC24:
 5948 06a4 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 5948      20526573 
 5948      7420706F 
 5948      73697469 
 5948      6F6E2074 
 5949              		.align	2
 5950              	.LC25:
 5951 06c8 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 5951      20526573 
 5951      74207665 
 5951      6C20636C 
 5951      6F737572 
 5952 06eb 00       		.align	2
 5953              	.LC26:
 5954 06ec 3236202D 		.ascii	"26 - Rest position enabled:\000"
 5954      20526573 
 5954      7420706F 
 5954      73697469 
 5954      6F6E2065 
 5955              		.align	2
 5956              	.LC27:
 5957 0708 3237202D 		.ascii	"27 - EMG inversion:\000"
 5957      20454D47 
 5957      20696E76 
 5957      65727369 
 5957      6F6E3A00 
 5958              		.align	2
 5959              	.LC28:
 5960 071c 3238202D 		.ascii	"28 - Hand side:\000"
 5960      2048616E 
 5960      64207369 
 5960      64653A00 
 5961              		.align	2
 5962              	.LC29:
 5963 072c 3239202D 		.ascii	"29 - Enable IMUs:\000"
 5963      20456E61 
 5963      626C6520 
 5963      494D5573 
 5963      3A00
 5964 073e 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 141


 5965              	.LC30:
 5966 0740 3330202D 		.ascii	"30 - Read Expansion port:\000"
 5966      20526561 
 5966      64204578 
 5966      70616E73 
 5966      696F6E20 
 5967 075a 0000     		.align	2
 5968              	.LC31:
 5969 075c 3331202D 		.ascii	"31 - Reset counters:\000"
 5969      20526573 
 5969      65742063 
 5969      6F756E74 
 5969      6572733A 
 5970 0771 000000   		.align	2
 5971              	.LC32:
 5972 0774 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 5972      204C6173 
 5972      74206368 
 5972      65636B65 
 5972      64205469 
 5973 079a 0000     		.align	2
 5974              	.LC33:
 5975 079c 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 5975      20535049 
 5975      20726561 
 5975      64206465 
 5975      6C617920 
 5976 07b7 00       		.align	2
 5977              	.LC34:
 5978 07b8 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 5978      204F6E20 
 5978      626F6172 
 5978      6420494D 
 5978      5520636F 
 5979 07dd 000000   		.align	2
 5980              	.LC35:
 5981 07e0 3335202D 		.ascii	"35 - User ID:\000"
 5981      20557365 
 5981      72204944 
 5981      3A00
 5982 07ee 0000     		.align	2
 5983              	.LC36:
 5984 07f0 3336202D 		.ascii	"36 - User code:\000"
 5984      20557365 
 5984      7220636F 
 5984      64653A00 
 5985              		.align	2
 5986              	.LC37:
 5987 0800 3337202D 		.ascii	"37 - Associated encoder line:\000"
 5987      20417373 
 5987      6F636961 
 5987      74656420 
 5987      656E636F 
 5988 081e 0000     		.align	2
 5989              	.LC38:
 5990 0820 3338202D 		.ascii	"38 - Driver type:\000"
 5990      20447269 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 142


 5990      76657220 
 5990      74797065 
 5990      3A00
 5991 0832 0000     		.align	2
 5992              	.LC39:
 5993 0834 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 5993      2050574D 
 5993      20726174 
 5993      65206C69 
 5993      6D697465 
 5994 084b 00       		.align	2
 5995              	.LC40:
 5996 084c 3430202D 		.ascii	"40 - Not reversible:\000"
 5996      204E6F74 
 5996      20726576 
 5996      65727369 
 5996      626C653A 
 5997 0861 000000   		.align	2
 5998              	.LC41:
 5999 0864 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 5999      20456E63 
 5999      20696478 
 5999      20757365 
 5999      6420666F 
 6000 0883 00       		.align	2
 6001              	.LC42:
 6002 0884 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6002      20476561 
 6002      72207061 
 6002      72616D73 
 6002      5B4E312C 
 6003 08a2 0000     		.align	2
 6004              	.LC43:
 6005 08a4 3433202D 		.ascii	"43 - Use second motor:\000"
 6005      20557365 
 6005      20736563 
 6005      6F6E6420 
 6005      6D6F746F 
 6006 08bb 00       		.align	2
 6007              	.LC44:
 6008 08bc 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6008      20506F73 
 6008      6974696F 
 6008      6E205049 
 6008      44205B50 
 6009 08d9 000000   		.align	2
 6010              	.LC45:
 6011 08dc 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6011      20437572 
 6011      72656E74 
 6011      20504944 
 6011      205B502C 
 6012              		.align	2
 6013              	.LC46:
 6014 08f8 3436202D 		.ascii	"46 - Startup Activation:\000"
 6014      20537461 
 6014      72747570 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 143


 6014      20416374 
 6014      69766174 
 6015 0911 000000   		.align	2
 6016              	.LC47:
 6017 0914 3437202D 		.ascii	"47 - Input mode:\000"
 6017      20496E70 
 6017      7574206D 
 6017      6F64653A 
 6017      00
 6018 0925 000000   		.align	2
 6019              	.LC48:
 6020 0928 3438202D 		.ascii	"48 - Control mode:\000"
 6020      20436F6E 
 6020      74726F6C 
 6020      206D6F64 
 6020      653A00
 6021 093b 00       		.align	2
 6022              	.LC49:
 6023 093c 3439202D 		.ascii	"49 - Resolutions:\000"
 6023      20526573 
 6023      6F6C7574 
 6023      696F6E73 
 6023      3A00
 6024 094e 0000     		.align	2
 6025              	.LC50:
 6026 0950 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6026      204D6561 
 6026      73757265 
 6026      6D656E74 
 6026      204F6666 
 6027 096a 0000     		.align	2
 6028              	.LC51:
 6029 096c 3531202D 		.ascii	"51 - Multipliers:\000"
 6029      204D756C 
 6029      7469706C 
 6029      69657273 
 6029      3A00
 6030 097e 0000     		.align	2
 6031              	.LC52:
 6032 0980 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6032      20506F73 
 6032      2E206C69 
 6032      6D697420 
 6032      61637469 
 6033              		.align	2
 6034              	.LC53:
 6035 0998 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6035      20506F73 
 6035      2E206C69 
 6035      6D697473 
 6035      205B696E 
 6036 09b5 000000   		.align	2
 6037              	.LC54:
 6038 09b8 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6038      204D6178 
 6038      20737465 
 6038      7073205B 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 144


 6038      6E65672C 
 6039 09d3 00       		.align	2
 6040              	.LC55:
 6041 09d4 3535202D 		.ascii	"55 - Current limit:\000"
 6041      20437572 
 6041      72656E74 
 6041      206C696D 
 6041      69743A00 
 6042              		.align	2
 6043              	.LC56:
 6044 09e8 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6044      20416273 
 6044      6F6C7574 
 6044      6520656E 
 6044      636F6465 
 6045              		.align	2
 6046              	.LC57:
 6047 0a08 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6047      204D6F74 
 6047      6F722068 
 6047      616E646C 
 6047      65207261 
 6048 0a21 000000   		.align	2
 6049              	.LC58:
 6050 0a24 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6050      2050574D 
 6050      20726573 
 6050      63616C69 
 6050      6E673A00 
 6051              		.align	2
 6052              	.LC59:
 6053 0a38 3539202D 		.ascii	"59 - Current lookup:\000"
 6053      20437572 
 6053      72656E74 
 6053      206C6F6F 
 6053      6B75703A 
 6054 0a4d 000000   		.align	2
 6055              	.LC60:
 6056 0a50 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6056      20417373 
 6056      6F636961 
 6056      74656420 
 6056      656E636F 
 6057 0a6e 0000     		.align	2
 6058              	.LC61:
 6059 0a70 3631202D 		.ascii	"61 - Driver type:\000"
 6059      20447269 
 6059      76657220 
 6059      74797065 
 6059      3A00
 6060 0a82 0000     		.align	2
 6061              	.LC62:
 6062 0a84 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6062      2050574D 
 6062      20726174 
 6062      65206C69 
 6062      6D697465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 145


 6063 0a9b 00       		.align	2
 6064              	.LC63:
 6065 0a9c 3633202D 		.ascii	"63 - Not reversible:\000"
 6065      204E6F74 
 6065      20726576 
 6065      65727369 
 6065      626C653A 
 6066 0ab1 000000   		.align	2
 6067              	.LC64:
 6068 0ab4 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6068      20456E63 
 6068      20696478 
 6068      20757365 
 6068      6420666F 
 6069 0ad3 00       		.align	2
 6070              	.LC65:
 6071 0ad4 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6071      20476561 
 6071      72207061 
 6071      72616D73 
 6071      5B4E312C 
 6072 0af2 0000     		.align	2
 6073              	.LC66:
 6074 0af4 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6074      20526561 
 6074      6420656E 
 6074      63207261 
 6074      77206C69 
 6075 0b0e 0000     		.align	2
 6076              	.LC67:
 6077 0b10 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6077      20526561 
 6077      6420656E 
 6077      63207261 
 6077      77206C69 
 6078 0b2a 0000     		.align	2
 6079              	.LC68:
 6080 0b2c 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6080      20526561 
 6080      64206164 
 6080      64697469 
 6080      6F6E616C 
 6081 0b4b 00       		.align	2
 6082              	.LC69:
 6083 0b4c 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6083      20414443 
 6083      20636861 
 6083      6E6E656C 
 6083      205B312D 
 6084              		.align	2
 6085              	.LC70:
 6086 0b64 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6086      20414443 
 6086      20636861 
 6086      6E6E656C 
 6086      205B372D 
 6087 0b7d 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 146


 6088              	.LC71:
 6089 0b80 3731202D 		.ascii	"71 - Device type:\000"
 6089      20446576 
 6089      69636520 
 6089      74797065 
 6089      3A00
 6090 0b92 0000     		.align	2
 6091              	.LC105:
 6092 0b94 6C040000 		.word	.LC1
 6093 0b98 7C040000 		.word	.LC2
 6094 0b9c 98040000 		.word	.LC3
 6095 0ba0 B4040000 		.word	.LC4
 6096 0ba4 CC040000 		.word	.LC5
 6097 0ba8 DC040000 		.word	.LC6
 6098 0bac F0040000 		.word	.LC7
 6099 0bb0 04050000 		.word	.LC8
 6100 0bb4 20050000 		.word	.LC9
 6101 0bb8 34050000 		.word	.LC10
 6102 0bbc 4C050000 		.word	.LC11
 6103 0bc0 6C050000 		.word	.LC12
 6104 0bc4 88050000 		.word	.LC13
 6105 0bc8 9C050000 		.word	.LC14
 6106 0bcc B4050000 		.word	.LC15
 6107 0bd0 D8050000 		.word	.LC16
 6108 0bd4 F0050000 		.word	.LC17
 6109 0bd8 04060000 		.word	.LC18
 6110 0bdc 24060000 		.word	.LC19
 6111 0be0 40060000 		.word	.LC20
 6112 0be4 54060000 		.word	.LC21
 6113 0be8 6C060000 		.word	.LC22
 6114 0bec 90060000 		.word	.LC23
 6115 0bf0 A4060000 		.word	.LC24
 6116 0bf4 C8060000 		.word	.LC25
 6117 0bf8 EC060000 		.word	.LC26
 6118 0bfc 08070000 		.word	.LC27
 6119 0c00 1C070000 		.word	.LC28
 6120 0c04 2C070000 		.word	.LC29
 6121 0c08 40070000 		.word	.LC30
 6122 0c0c 5C070000 		.word	.LC31
 6123 0c10 74070000 		.word	.LC32
 6124 0c14 9C070000 		.word	.LC33
 6125 0c18 B8070000 		.word	.LC34
 6126 0c1c E0070000 		.word	.LC35
 6127 0c20 F0070000 		.word	.LC36
 6128 0c24 00080000 		.word	.LC37
 6129 0c28 20080000 		.word	.LC38
 6130 0c2c 34080000 		.word	.LC39
 6131 0c30 4C080000 		.word	.LC40
 6132 0c34 64080000 		.word	.LC41
 6133 0c38 84080000 		.word	.LC42
 6134 0c3c A4080000 		.word	.LC43
 6135 0c40 BC080000 		.word	.LC44
 6136 0c44 DC080000 		.word	.LC45
 6137 0c48 F8080000 		.word	.LC46
 6138 0c4c 14090000 		.word	.LC47
 6139 0c50 28090000 		.word	.LC48
 6140 0c54 3C090000 		.word	.LC49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 147


 6141 0c58 50090000 		.word	.LC50
 6142 0c5c 6C090000 		.word	.LC51
 6143 0c60 80090000 		.word	.LC52
 6144 0c64 98090000 		.word	.LC53
 6145 0c68 B8090000 		.word	.LC54
 6146 0c6c D4090000 		.word	.LC55
 6147 0c70 E8090000 		.word	.LC56
 6148 0c74 080A0000 		.word	.LC57
 6149 0c78 240A0000 		.word	.LC58
 6150 0c7c 380A0000 		.word	.LC59
 6151 0c80 500A0000 		.word	.LC60
 6152 0c84 700A0000 		.word	.LC61
 6153 0c88 840A0000 		.word	.LC62
 6154 0c8c 9C0A0000 		.word	.LC63
 6155 0c90 B40A0000 		.word	.LC64
 6156 0c94 D40A0000 		.word	.LC65
 6157 0c98 F40A0000 		.word	.LC66
 6158 0c9c 100B0000 		.word	.LC67
 6159 0ca0 2C0B0000 		.word	.LC68
 6160 0ca4 4C0B0000 		.word	.LC69
 6161 0ca8 640B0000 		.word	.LC70
 6162 0cac 800B0000 		.word	.LC71
 6163              		.align	2
 6164              	.LC73:
 6165 0cb0 03       		.byte	3
 6166 0cb1 01       		.byte	1
 6167 0cb2 02       		.byte	2
 6168 0cb3 03       		.byte	3
 6169 0cb4 03       		.byte	3
 6170 0cb5 03       		.byte	3
 6171 0cb6 03       		.byte	3
 6172 0cb7 03       		.byte	3
 6173 0cb8 03       		.byte	3
 6174 0cb9 04       		.byte	4
 6175 0cba 05       		.byte	5
 6176 0cbb 06       		.byte	6
 6177 0cbc 03       		.byte	3
 6178 0cbd 07       		.byte	7
 6179 0cbe 08       		.byte	8
 6180 0cbf 09       		.byte	9
 6181 0cc0 03       		.byte	3
 6182 0cc1 05       		.byte	5
 6183 0cc2 03       		.byte	3
 6184 0cc3 01       		.byte	1
 6185 0cc4 02       		.byte	2
 6186 0cc5 03       		.byte	3
 6187 0cc6 03       		.byte	3
 6188 0cc7 03       		.byte	3
 6189 0cc8 09       		.byte	9
 6190 0cc9 03       		.byte	3
 6191 0cca 05       		.byte	5
 6192 0ccb 0A       		.byte	10
 6193              		.align	2
 6194              	.LC74:
 6195 0ccc 02       		.byte	2
 6196 0ccd 03       		.byte	3
 6197 0cce 08       		.byte	8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 148


 6198 0ccf 0B       		.byte	11
 6199 0cd0 17       		.byte	23
 6200 0cd1 2C       		.byte	44
 6201 0cd2 2D       		.byte	45
 6202 0cd3 32       		.byte	50
 6203 0cd4 35       		.byte	53
 6204 0cd5 000000   		.align	2
 6205              	.LC75:
 6206 0cd8 02       		.byte	2
 6207 0cd9 03       		.byte	3
 6208 0cda 05       		.byte	5
 6209 0cdb 08       		.byte	8
 6210 0cdc 0B       		.byte	11
 6211 0cdd 17       		.byte	23
 6212 0cde 18       		.byte	24
 6213 0cdf 1C       		.byte	28
 6214 0ce0 1F       		.byte	31
 6215 0ce1 20       		.byte	32
 6216 0ce2 26       		.byte	38
 6217 0ce3 2C       		.byte	44
 6218 0ce4 2D       		.byte	45
 6219 0ce5 2F       		.byte	47
 6220 0ce6 32       		.byte	50
 6221 0ce7 35       		.byte	53
 6222 0ce8 3D       		.byte	61
 6223 0ce9 47       		.byte	71
 6224              		.section	.text.manage_param_list,"ax",%progbits
 6225              		.align	2
 6226              		.global	manage_param_list
 6227              		.thumb
 6228              		.thumb_func
 6229              		.type	manage_param_list, %function
 6230              	manage_param_list:
 6231              	.LFB68:
 807:..\src/command_processing.c **** 
 808:..\src/command_processing.c **** //==============================================================================
 809:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 810:..\src/command_processing.c **** //==============================================================================
 811:..\src/command_processing.c **** 
 812:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6232              		.loc 1 812 0
 6233              		.cfi_startproc
 6234              		@ args = 0, pretend = 0, frame = 1192
 6235              		@ frame_needed = 1, uses_anonymous_args = 0
 6236 0000 B0B5     		push	{r4, r5, r7, lr}
 6237              		.cfi_def_cfa_offset 16
 6238              		.cfi_offset 4, -16
 6239              		.cfi_offset 5, -12
 6240              		.cfi_offset 7, -8
 6241              		.cfi_offset 14, -4
 6242 0002 ADF5976D 		sub	sp, sp, #1208
 6243              		.cfi_def_cfa_offset 1224
 6244 0006 04AF     		add	r7, sp, #16
 6245              		.cfi_def_cfa 7, 1208
 6246 0008 0246     		mov	r2, r0
 6247 000a BB1D     		adds	r3, r7, #6
 6248 000c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 149


 813:..\src/command_processing.c ****     uint8 CYDATA i, j;
 814:..\src/command_processing.c ****     uint8 CYDATA sod;
 815:..\src/command_processing.c ****     uint8 PARAM_IDX;
 816:..\src/command_processing.c ****     int16 aux_int16;
 817:..\src/command_processing.c ****     uint16 aux_uint16;
 818:..\src/command_processing.c ****     int32 aux_int32;
 819:..\src/command_processing.c ****     uint32 aux_uint32;
 820:..\src/command_processing.c ****     float aux_float;
 821:..\src/command_processing.c ****  
 822:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6249              		.loc 1 822 0
 6250 000e 0023     		movs	r3, #0
 6251 0010 87F89D34 		strb	r3, [r7, #1181]
 823:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6252              		.loc 1 823 0
 6253 0014 0123     		movs	r3, #1
 6254 0016 87F89C34 		strb	r3, [r7, #1180]
 824:..\src/command_processing.c ****     
 825:..\src/command_processing.c ****     // Arrays
 826:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6255              		.loc 1 826 0
 6256 001a 054B     		ldr	r3, .L337
 6257 001c C7F8A034 		str	r3, [r7, #1184]
 827:..\src/command_processing.c ****     
 828:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6258              		.loc 1 828 0
 6259 0020 BB1D     		adds	r3, r7, #6
 6260 0022 1B88     		ldrh	r3, [r3]
 6261 0024 002B     		cmp	r3, #0
 6262 0026 07D0     		beq	.L276
 829:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6263              		.loc 1 829 0
 6264 0028 024B     		ldr	r3, .L337+4
 6265 002a C7F8A034 		str	r3, [r7, #1184]
 6266 002e 03E0     		b	.L338
 6267              	.L339:
 6268              		.align	2
 6269              	.L337:
 6270 0030 00000000 		.word	c_mem
 6271 0034 00000000 		.word	g_mem
 6272              	.L338:
 6273              	.L276:
 830:..\src/command_processing.c ****     }
 831:..\src/command_processing.c ****  
 832:..\src/command_processing.c ****     
 833:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 834:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 835:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6274              		.loc 1 835 0
 6275 0038 D7F8A034 		ldr	r3, [r7, #1184]
 6276 003c 03F1A002 		add	r2, r3, #160
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6277              		.loc 1 834 0
 6278 0040 07F55B73 		add	r3, r7, #876
 6279 0044 1A60     		str	r2, [r3]
 836:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6280              		.loc 1 836 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 150


 6281 0046 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6282 004a 1346     		mov	r3, r2
 6283 004c DB00     		lsls	r3, r3, #3
 6284 004e 9B1A     		subs	r3, r3, r2
 6285 0050 1B01     		lsls	r3, r3, #4
 6286 0052 B033     		adds	r3, r3, #176
 6287 0054 D7F8A024 		ldr	r2, [r7, #1184]
 6288 0058 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6289              		.loc 1 834 0
 6290 005a 07F55B73 		add	r3, r7, #876
 6291 005e 5A60     		str	r2, [r3, #4]
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6292              		.loc 1 837 0
 6293 0060 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6294 0064 1346     		mov	r3, r2
 6295 0066 DB00     		lsls	r3, r3, #3
 6296 0068 9B1A     		subs	r3, r3, r2
 6297 006a 1B01     		lsls	r3, r3, #4
 6298 006c B833     		adds	r3, r3, #184
 6299 006e D7F8A024 		ldr	r2, [r7, #1184]
 6300 0072 1344     		add	r3, r3, r2
 6301 0074 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6302              		.loc 1 834 0
 6303 0076 07F55B73 		add	r3, r7, #876
 6304 007a 9A60     		str	r2, [r3, #8]
 838:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6305              		.loc 1 838 0
 6306 007c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6307 0080 1346     		mov	r3, r2
 6308 0082 DB00     		lsls	r3, r3, #3
 6309 0084 9B1A     		subs	r3, r3, r2
 6310 0086 1B01     		lsls	r3, r3, #4
 6311 0088 E033     		adds	r3, r3, #224
 6312 008a D7F8A024 		ldr	r2, [r7, #1184]
 6313 008e 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6314              		.loc 1 834 0
 6315 0090 07F55B73 		add	r3, r7, #876
 6316 0094 DA60     		str	r2, [r3, #12]
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6317              		.loc 1 839 0
 6318 0096 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6319 009a 1346     		mov	r3, r2
 6320 009c DB00     		lsls	r3, r3, #3
 6321 009e 9B1A     		subs	r3, r3, r2
 6322 00a0 1B01     		lsls	r3, r3, #4
 6323 00a2 03F58473 		add	r3, r3, #264
 6324 00a6 D7F8A024 		ldr	r2, [r7, #1184]
 6325 00aa 1344     		add	r3, r3, r2
 6326 00ac 9A1D     		adds	r2, r3, #6
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6327              		.loc 1 834 0
 6328 00ae 07F55B73 		add	r3, r7, #876
 6329 00b2 1A61     		str	r2, [r3, #16]
 840:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 151


 6330              		.loc 1 840 0
 6331 00b4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6332 00b8 1346     		mov	r3, r2
 6333 00ba DB00     		lsls	r3, r3, #3
 6334 00bc 9B1A     		subs	r3, r3, r2
 6335 00be 1B01     		lsls	r3, r3, #4
 6336 00c0 03F58473 		add	r3, r3, #264
 6337 00c4 D7F8A024 		ldr	r2, [r7, #1184]
 6338 00c8 1344     		add	r3, r3, r2
 6339 00ca DA1D     		adds	r2, r3, #7
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6340              		.loc 1 834 0
 6341 00cc 07F55B73 		add	r3, r7, #876
 6342 00d0 5A61     		str	r2, [r3, #20]
 841:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6343              		.loc 1 841 0
 6344 00d2 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6345 00d6 D7F8A014 		ldr	r1, [r7, #1184]
 6346 00da 1346     		mov	r3, r2
 6347 00dc DB00     		lsls	r3, r3, #3
 6348 00de 9B1A     		subs	r3, r3, r2
 6349 00e0 1B01     		lsls	r3, r3, #4
 6350 00e2 0B44     		add	r3, r3, r1
 6351 00e4 03F58873 		add	r3, r3, #272
 6352 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6353 00ea 1A46     		mov	r2, r3
 6354 00ec 1346     		mov	r3, r2
 6355 00ee 5B00     		lsls	r3, r3, #1
 6356 00f0 1344     		add	r3, r3, r2
 6357 00f2 1B01     		lsls	r3, r3, #4
 6358 00f4 03F5C873 		add	r3, r3, #400
 6359 00f8 D7F8A024 		ldr	r2, [r7, #1184]
 6360 00fc 1344     		add	r3, r3, r2
 6361 00fe 5A1D     		adds	r2, r3, #5
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6362              		.loc 1 834 0
 6363 0100 07F55B73 		add	r3, r7, #876
 6364 0104 9A61     		str	r2, [r3, #24]
 842:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6365              		.loc 1 842 0
 6366 0106 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6367 010a D7F8A014 		ldr	r1, [r7, #1184]
 6368 010e 1346     		mov	r3, r2
 6369 0110 DB00     		lsls	r3, r3, #3
 6370 0112 9B1A     		subs	r3, r3, r2
 6371 0114 1B01     		lsls	r3, r3, #4
 6372 0116 0B44     		add	r3, r3, r1
 6373 0118 03F58873 		add	r3, r3, #272
 6374 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6375 011e 1A46     		mov	r2, r3
 6376 0120 1346     		mov	r3, r2
 6377 0122 5B00     		lsls	r3, r3, #1
 6378 0124 1344     		add	r3, r3, r2
 6379 0126 1B01     		lsls	r3, r3, #4
 6380 0128 03F5CC73 		add	r3, r3, #408
 6381 012c D7F8A024 		ldr	r2, [r7, #1184]
 6382 0130 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 152


 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6383              		.loc 1 834 0
 6384 0132 07F55B73 		add	r3, r7, #876
 6385 0136 DA61     		str	r2, [r3, #28]
 843:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6386              		.loc 1 843 0
 6387 0138 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6388 013c D7F8A014 		ldr	r1, [r7, #1184]
 6389 0140 1346     		mov	r3, r2
 6390 0142 DB00     		lsls	r3, r3, #3
 6391 0144 9B1A     		subs	r3, r3, r2
 6392 0146 1B01     		lsls	r3, r3, #4
 6393 0148 0B44     		add	r3, r3, r1
 6394 014a 03F58873 		add	r3, r3, #272
 6395 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6396 0150 1A46     		mov	r2, r3
 6397 0152 1346     		mov	r3, r2
 6398 0154 5B00     		lsls	r3, r3, #1
 6399 0156 1344     		add	r3, r3, r2
 6400 0158 1B01     		lsls	r3, r3, #4
 6401 015a 03F5D073 		add	r3, r3, #416
 6402 015e D7F8A024 		ldr	r2, [r7, #1184]
 6403 0162 1344     		add	r3, r3, r2
 6404 0164 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6405              		.loc 1 834 0
 6406 0166 07F55B73 		add	r3, r7, #876
 6407 016a 1A62     		str	r2, [r3, #32]
 844:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6408              		.loc 1 844 0
 6409 016c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6410 0170 1346     		mov	r3, r2
 6411 0172 DB00     		lsls	r3, r3, #3
 6412 0174 9B1A     		subs	r3, r3, r2
 6413 0176 1B01     		lsls	r3, r3, #4
 6414 0178 E033     		adds	r3, r3, #224
 6415 017a D7F8A024 		ldr	r2, [r7, #1184]
 6416 017e 1344     		add	r3, r3, r2
 6417 0180 DA1C     		adds	r2, r3, #3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6418              		.loc 1 834 0
 6419 0182 07F55B73 		add	r3, r7, #876
 6420 0186 5A62     		str	r2, [r3, #36]
 845:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6421              		.loc 1 845 0
 6422 0188 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6423 018c 1346     		mov	r3, r2
 6424 018e DB00     		lsls	r3, r3, #3
 6425 0190 9B1A     		subs	r3, r3, r2
 6426 0192 1B01     		lsls	r3, r3, #4
 6427 0194 E033     		adds	r3, r3, #224
 6428 0196 D7F8A024 		ldr	r2, [r7, #1184]
 6429 019a 1344     		add	r3, r3, r2
 6430 019c 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6431              		.loc 1 834 0
 6432 019e 07F55B73 		add	r3, r7, #876
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 153


 6433 01a2 9A62     		str	r2, [r3, #40]
 846:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 6434              		.loc 1 846 0
 6435 01a4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6436 01a8 1346     		mov	r3, r2
 6437 01aa DB00     		lsls	r3, r3, #3
 6438 01ac 9B1A     		subs	r3, r3, r2
 6439 01ae 1B01     		lsls	r3, r3, #4
 6440 01b0 E833     		adds	r3, r3, #232
 6441 01b2 D7F8A024 		ldr	r2, [r7, #1184]
 6442 01b6 1344     		add	r3, r3, r2
 6443 01b8 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6444              		.loc 1 834 0
 6445 01ba 07F55B73 		add	r3, r7, #876
 6446 01be DA62     		str	r2, [r3, #44]
 847:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 6447              		.loc 1 847 0
 6448 01c0 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6449 01c4 1346     		mov	r3, r2
 6450 01c6 DB00     		lsls	r3, r3, #3
 6451 01c8 9B1A     		subs	r3, r3, r2
 6452 01ca 1B01     		lsls	r3, r3, #4
 6453 01cc 03F58473 		add	r3, r3, #264
 6454 01d0 D7F8A024 		ldr	r2, [r7, #1184]
 6455 01d4 1344     		add	r3, r3, r2
 6456 01d6 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6457              		.loc 1 834 0
 6458 01d8 07F55B73 		add	r3, r7, #876
 6459 01dc 1A63     		str	r2, [r3, #48]
 848:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 6460              		.loc 1 848 0
 6461 01de D7F8A034 		ldr	r3, [r7, #1184]
 6462 01e2 03F5F872 		add	r2, r3, #496
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6463              		.loc 1 834 0
 6464 01e6 07F55B73 		add	r3, r7, #876
 6465 01ea 5A63     		str	r2, [r3, #52]
 849:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 6466              		.loc 1 849 0
 6467 01ec D7F8A034 		ldr	r3, [r7, #1184]
 6468 01f0 03F2FD12 		addw	r2, r3, #509
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6469              		.loc 1 834 0
 6470 01f4 07F55B73 		add	r3, r7, #876
 6471 01f8 9A63     		str	r2, [r3, #56]
 850:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 6472              		.loc 1 850 0
 6473 01fa D7F8A034 		ldr	r3, [r7, #1184]
 6474 01fe 03F5FA72 		add	r2, r3, #500
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6475              		.loc 1 834 0
 6476 0202 07F55B73 		add	r3, r7, #876
 6477 0206 DA63     		str	r2, [r3, #60]
 851:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed), 
 6478              		.loc 1 851 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 154


 6479 0208 D7F8A034 		ldr	r3, [r7, #1184]
 6480 020c 03F5FE72 		add	r2, r3, #508
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6481              		.loc 1 834 0
 6482 0210 07F55B73 		add	r3, r7, #876
 6483 0214 1A64     		str	r2, [r3, #64]
 852:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 6484              		.loc 1 852 0
 6485 0216 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6486 021a D7F8A014 		ldr	r1, [r7, #1184]
 6487 021e 1346     		mov	r3, r2
 6488 0220 DB00     		lsls	r3, r3, #3
 6489 0222 9B1A     		subs	r3, r3, r2
 6490 0224 1B01     		lsls	r3, r3, #4
 6491 0226 0B44     		add	r3, r3, r1
 6492 0228 03F58873 		add	r3, r3, #272
 6493 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6494 022e 1A46     		mov	r2, r3
 6495 0230 1346     		mov	r3, r2
 6496 0232 5B00     		lsls	r3, r3, #1
 6497 0234 1344     		add	r3, r3, r2
 6498 0236 1B01     		lsls	r3, r3, #4
 6499 0238 03F5D873 		add	r3, r3, #432
 6500 023c D7F8A024 		ldr	r2, [r7, #1184]
 6501 0240 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6502              		.loc 1 834 0
 6503 0242 07F55B73 		add	r3, r7, #876
 6504 0246 5A64     		str	r2, [r3, #68]
 853:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 6505              		.loc 1 853 0
 6506 0248 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6507 024c D7F8A014 		ldr	r1, [r7, #1184]
 6508 0250 1346     		mov	r3, r2
 6509 0252 DB00     		lsls	r3, r3, #3
 6510 0254 9B1A     		subs	r3, r3, r2
 6511 0256 1B01     		lsls	r3, r3, #4
 6512 0258 0B44     		add	r3, r3, r1
 6513 025a 03F58873 		add	r3, r3, #272
 6514 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6515 0260 1A46     		mov	r2, r3
 6516 0262 1346     		mov	r3, r2
 6517 0264 5B00     		lsls	r3, r3, #1
 6518 0266 1344     		add	r3, r3, r2
 6519 0268 1B01     		lsls	r3, r3, #4
 6520 026a 03F5D873 		add	r3, r3, #432
 6521 026e D7F8A024 		ldr	r2, [r7, #1184]
 6522 0272 1344     		add	r3, r3, r2
 6523 0274 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6524              		.loc 1 834 0
 6525 0276 07F55B73 		add	r3, r7, #876
 6526 027a 9A64     		str	r2, [r3, #72]
 854:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 6527              		.loc 1 854 0
 6528 027c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6529 0280 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 155


 6530 0282 DB00     		lsls	r3, r3, #3
 6531 0284 9B1A     		subs	r3, r3, r2
 6532 0286 1B01     		lsls	r3, r3, #4
 6533 0288 E033     		adds	r3, r3, #224
 6534 028a D7F8A024 		ldr	r2, [r7, #1184]
 6535 028e 1344     		add	r3, r3, r2
 6536 0290 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6537              		.loc 1 834 0
 6538 0292 07F55B73 		add	r3, r7, #876
 6539 0296 DA64     		str	r2, [r3, #76]
 855:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 6540              		.loc 1 855 0
 6541 0298 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6542 029c 1346     		mov	r3, r2
 6543 029e DB00     		lsls	r3, r3, #3
 6544 02a0 9B1A     		subs	r3, r3, r2
 6545 02a2 1B01     		lsls	r3, r3, #4
 6546 02a4 F033     		adds	r3, r3, #240
 6547 02a6 D7F8A024 		ldr	r2, [r7, #1184]
 6548 02aa 1344     		add	r3, r3, r2
 6549 02ac 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6550              		.loc 1 834 0
 6551 02ae 07F55B73 		add	r3, r7, #876
 6552 02b2 1A65     		str	r2, [r3, #80]
 856:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 6553              		.loc 1 856 0
 6554 02b4 D7F8A034 		ldr	r3, [r7, #1184]
 6555 02b8 03F1A102 		add	r2, r3, #161
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6556              		.loc 1 834 0
 6557 02bc 07F55B73 		add	r3, r7, #876
 6558 02c0 5A65     		str	r2, [r3, #84]
 857:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 6559              		.loc 1 857 0
 6560 02c2 D7F8A034 		ldr	r3, [r7, #1184]
 6561 02c6 03F52872 		add	r2, r3, #672
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6562              		.loc 1 834 0
 6563 02ca 07F55B73 		add	r3, r7, #876
 6564 02ce 9A65     		str	r2, [r3, #88]
 858:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 6565              		.loc 1 858 0
 6566 02d0 D7F8A034 		ldr	r3, [r7, #1184]
 6567 02d4 03F52972 		add	r2, r3, #676
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6568              		.loc 1 834 0
 6569 02d8 07F55B73 		add	r3, r7, #876
 6570 02dc DA65     		str	r2, [r3, #92]
 859:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 6571              		.loc 1 859 0
 6572 02de D7F8A034 		ldr	r3, [r7, #1184]
 6573 02e2 03F52A72 		add	r2, r3, #680
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6574              		.loc 1 834 0
 6575 02e6 07F55B73 		add	r3, r7, #876
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 156


 6576 02ea 1A66     		str	r2, [r3, #96]
 860:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 6577              		.loc 1 860 0
 6578 02ec D7F8A034 		ldr	r3, [r7, #1184]
 6579 02f0 03F52B72 		add	r2, r3, #684
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6580              		.loc 1 834 0
 6581 02f4 07F55B73 		add	r3, r7, #876
 6582 02f8 5A66     		str	r2, [r3, #100]
 861:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 6583              		.loc 1 861 0
 6584 02fa D7F8A034 		ldr	r3, [r7, #1184]
 6585 02fe 03F5FF72 		add	r2, r3, #510
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6586              		.loc 1 834 0
 6587 0302 07F55B73 		add	r3, r7, #876
 6588 0306 9A66     		str	r2, [r3, #104]
 862:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 6589              		.loc 1 862 0
 6590 0308 D7F8A034 		ldr	r3, [r7, #1184]
 6591 030c 03F1A702 		add	r2, r3, #167
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6592              		.loc 1 834 0
 6593 0310 07F55B73 		add	r3, r7, #876
 6594 0314 DA66     		str	r2, [r3, #108]
 863:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 6595              		.loc 1 863 0
 6596 0316 D7F8A034 		ldr	r3, [r7, #1184]
 6597 031a 03F50072 		add	r2, r3, #512
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6598              		.loc 1 834 0
 6599 031e 07F55B73 		add	r3, r7, #876
 6600 0322 1A67     		str	r2, [r3, #112]
 864:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 6601              		.loc 1 864 0
 6602 0324 D7F8A034 		ldr	r3, [r7, #1184]
 6603 0328 03F22622 		addw	r2, r3, #550
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6604              		.loc 1 834 0
 6605 032c 07F55B73 		add	r3, r7, #876
 6606 0330 5A67     		str	r2, [r3, #116]
 865:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 6607              		.loc 1 865 0
 6608 0332 D7F8A034 		ldr	r3, [r7, #1184]
 6609 0336 03F1A802 		add	r2, r3, #168
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6610              		.loc 1 834 0
 6611 033a 07F55B73 		add	r3, r7, #876
 6612 033e 9A67     		str	r2, [r3, #120]
 866:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 6613              		.loc 1 866 0
 6614 0340 D7F8A034 		ldr	r3, [r7, #1184]
 6615 0344 03F50872 		add	r2, r3, #544
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6616              		.loc 1 834 0
 6617 0348 07F55B73 		add	r3, r7, #876
 6618 034c DA67     		str	r2, [r3, #124]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 157


 867:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 6619              		.loc 1 867 0
 6620 034e D7F8A034 		ldr	r3, [r7, #1184]
 6621 0352 03F20122 		addw	r2, r3, #513
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6622              		.loc 1 834 0
 6623 0356 07F55B73 		add	r3, r7, #876
 6624 035a C3F88020 		str	r2, [r3, #128]
 868:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 6625              		.loc 1 868 0
 6626 035e D7F8A034 		ldr	r3, [r7, #1184]
 6627 0362 03F20222 		addw	r2, r3, #514
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6628              		.loc 1 834 0
 6629 0366 07F55B73 		add	r3, r7, #876
 6630 036a C3F88420 		str	r2, [r3, #132]
 869:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 6631              		.loc 1 869 0
 6632 036e D7F8A034 		ldr	r3, [r7, #1184]
 6633 0372 03F1AB02 		add	r2, r3, #171
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6634              		.loc 1 834 0
 6635 0376 07F55B73 		add	r3, r7, #876
 6636 037a C3F88820 		str	r2, [r3, #136]
 870:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 6637              		.loc 1 870 0
 6638 037e D7F8A034 		ldr	r3, [r7, #1184]
 6639 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 6640 0386 1233     		adds	r3, r3, #18
 6641 0388 5B01     		lsls	r3, r3, #5
 6642 038a D7F8A024 		ldr	r2, [r7, #1184]
 6643 038e 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6644              		.loc 1 834 0
 6645 0390 07F55B73 		add	r3, r7, #876
 6646 0394 C3F88C20 		str	r2, [r3, #140]
 871:..\src/command_processing.c ****         
 872:..\src/command_processing.c ****         // GENERIC PARAMS
 873:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 6647              		.loc 1 873 0
 6648 0398 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6649 039c 1346     		mov	r3, r2
 6650 039e DB00     		lsls	r3, r3, #3
 6651 03a0 9B1A     		subs	r3, r3, r2
 6652 03a2 1B01     		lsls	r3, r3, #4
 6653 03a4 03F58873 		add	r3, r3, #272
 6654 03a8 D7F8A024 		ldr	r2, [r7, #1184]
 6655 03ac 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6656              		.loc 1 834 0
 6657 03ae 07F55B73 		add	r3, r7, #876
 6658 03b2 C3F89020 		str	r2, [r3, #144]
 874:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 6659              		.loc 1 874 0
 6660 03b6 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6661 03ba 1346     		mov	r3, r2
 6662 03bc DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 158


 6663 03be 9B1A     		subs	r3, r3, r2
 6664 03c0 1B01     		lsls	r3, r3, #4
 6665 03c2 E033     		adds	r3, r3, #224
 6666 03c4 D7F8A024 		ldr	r2, [r7, #1184]
 6667 03c8 1344     		add	r3, r3, r2
 6668 03ca 9A1C     		adds	r2, r3, #2
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6669              		.loc 1 834 0
 6670 03cc 07F55B73 		add	r3, r7, #876
 6671 03d0 C3F89420 		str	r2, [r3, #148]
 875:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 6672              		.loc 1 875 0
 6673 03d4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6674 03d8 1346     		mov	r3, r2
 6675 03da DB00     		lsls	r3, r3, #3
 6676 03dc 9B1A     		subs	r3, r3, r2
 6677 03de 1B01     		lsls	r3, r3, #4
 6678 03e0 03F58873 		add	r3, r3, #272
 6679 03e4 D7F8A024 		ldr	r2, [r7, #1184]
 6680 03e8 1344     		add	r3, r3, r2
 6681 03ea 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6682              		.loc 1 834 0
 6683 03ec 07F55B73 		add	r3, r7, #876
 6684 03f0 C3F89820 		str	r2, [r3, #152]
 876:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 6685              		.loc 1 876 0
 6686 03f4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6687 03f8 1346     		mov	r3, r2
 6688 03fa DB00     		lsls	r3, r3, #3
 6689 03fc 9B1A     		subs	r3, r3, r2
 6690 03fe 1B01     		lsls	r3, r3, #4
 6691 0400 03F58873 		add	r3, r3, #272
 6692 0404 D7F8A024 		ldr	r2, [r7, #1184]
 6693 0408 1344     		add	r3, r3, r2
 6694 040a 9A1C     		adds	r2, r3, #2
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6695              		.loc 1 834 0
 6696 040c 07F55B73 		add	r3, r7, #876
 6697 0410 C3F89C20 		str	r2, [r3, #156]
 877:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 6698              		.loc 1 877 0
 6699 0414 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6700 0418 D7F8A014 		ldr	r1, [r7, #1184]
 6701 041c 1346     		mov	r3, r2
 6702 041e DB00     		lsls	r3, r3, #3
 6703 0420 9B1A     		subs	r3, r3, r2
 6704 0422 1B01     		lsls	r3, r3, #4
 6705 0424 0B44     		add	r3, r3, r1
 6706 0426 03F58873 		add	r3, r3, #272
 6707 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6708 042c 1A46     		mov	r2, r3
 6709 042e 1346     		mov	r3, r2
 6710 0430 5B00     		lsls	r3, r3, #1
 6711 0432 1344     		add	r3, r3, r2
 6712 0434 1B01     		lsls	r3, r3, #4
 6713 0436 03F5D873 		add	r3, r3, #432
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 159


 6714 043a D7F8A024 		ldr	r2, [r7, #1184]
 6715 043e 1344     		add	r3, r3, r2
 6716 0440 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6717              		.loc 1 834 0
 6718 0442 07F55B73 		add	r3, r7, #876
 6719 0446 C3F8A020 		str	r2, [r3, #160]
 878:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 6720              		.loc 1 878 0
 6721 044a 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6722 044e D7F8A014 		ldr	r1, [r7, #1184]
 6723 0452 1346     		mov	r3, r2
 6724 0454 DB00     		lsls	r3, r3, #3
 6725 0456 9B1A     		subs	r3, r3, r2
 6726 0458 1B01     		lsls	r3, r3, #4
 6727 045a 0B44     		add	r3, r3, r1
 6728 045c 03F58873 		add	r3, r3, #272
 6729 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6730 0462 1A46     		mov	r2, r3
 6731 0464 1346     		mov	r3, r2
 6732 0466 5B00     		lsls	r3, r3, #1
 6733 0468 1344     		add	r3, r3, r2
 6734 046a 1B01     		lsls	r3, r3, #4
 6735 046c 03F5D873 		add	r3, r3, #432
 6736 0470 D7F8A024 		ldr	r2, [r7, #1184]
 6737 0474 1344     		add	r3, r3, r2
 6738 0476 5A1D     		adds	r2, r3, #5
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6739              		.loc 1 834 0
 6740 0478 07F55B73 		add	r3, r7, #876
 6741 047c C3F8A420 		str	r2, [r3, #164]
 879:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 6742              		.loc 1 879 0
 6743 0480 D7F8A034 		ldr	r3, [r7, #1184]
 6744 0484 03F1A902 		add	r2, r3, #169
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6745              		.loc 1 834 0
 6746 0488 07F55B73 		add	r3, r7, #876
 6747 048c C3F8A820 		str	r2, [r3, #168]
 880:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 6748              		.loc 1 880 0
 6749 0490 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6750 0494 1346     		mov	r3, r2
 6751 0496 DB00     		lsls	r3, r3, #3
 6752 0498 9B1A     		subs	r3, r3, r2
 6753 049a 1B01     		lsls	r3, r3, #4
 6754 049c B033     		adds	r3, r3, #176
 6755 049e D7F8A024 		ldr	r2, [r7, #1184]
 6756 04a2 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6757              		.loc 1 834 0
 6758 04a4 07F55B73 		add	r3, r7, #876
 6759 04a8 C3F8AC20 		str	r2, [r3, #172]
 881:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 6760              		.loc 1 881 0
 6761 04ac 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6762 04b0 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 160


 6763 04b2 DB00     		lsls	r3, r3, #3
 6764 04b4 9B1A     		subs	r3, r3, r2
 6765 04b6 1B01     		lsls	r3, r3, #4
 6766 04b8 B833     		adds	r3, r3, #184
 6767 04ba D7F8A024 		ldr	r2, [r7, #1184]
 6768 04be 1344     		add	r3, r3, r2
 6769 04c0 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6770              		.loc 1 834 0
 6771 04c2 07F55B73 		add	r3, r7, #876
 6772 04c6 C3F8B020 		str	r2, [r3, #176]
 882:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 6773              		.loc 1 882 0
 6774 04ca 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6775 04ce 1346     		mov	r3, r2
 6776 04d0 DB00     		lsls	r3, r3, #3
 6777 04d2 9B1A     		subs	r3, r3, r2
 6778 04d4 1B01     		lsls	r3, r3, #4
 6779 04d6 E033     		adds	r3, r3, #224
 6780 04d8 D7F8A024 		ldr	r2, [r7, #1184]
 6781 04dc 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6782              		.loc 1 834 0
 6783 04de 07F55B73 		add	r3, r7, #876
 6784 04e2 C3F8B420 		str	r2, [r3, #180]
 883:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 6785              		.loc 1 883 0
 6786 04e6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6787 04ea 1346     		mov	r3, r2
 6788 04ec DB00     		lsls	r3, r3, #3
 6789 04ee 9B1A     		subs	r3, r3, r2
 6790 04f0 1B01     		lsls	r3, r3, #4
 6791 04f2 03F58473 		add	r3, r3, #264
 6792 04f6 D7F8A024 		ldr	r2, [r7, #1184]
 6793 04fa 1344     		add	r3, r3, r2
 6794 04fc 9A1D     		adds	r2, r3, #6
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6795              		.loc 1 834 0
 6796 04fe 07F55B73 		add	r3, r7, #876
 6797 0502 C3F8B820 		str	r2, [r3, #184]
 884:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 6798              		.loc 1 884 0
 6799 0506 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6800 050a 1346     		mov	r3, r2
 6801 050c DB00     		lsls	r3, r3, #3
 6802 050e 9B1A     		subs	r3, r3, r2
 6803 0510 1B01     		lsls	r3, r3, #4
 6804 0512 03F58473 		add	r3, r3, #264
 6805 0516 D7F8A024 		ldr	r2, [r7, #1184]
 6806 051a 1344     		add	r3, r3, r2
 6807 051c DA1D     		adds	r2, r3, #7
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6808              		.loc 1 834 0
 6809 051e 07F55B73 		add	r3, r7, #876
 6810 0522 C3F8BC20 		str	r2, [r3, #188]
 885:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 6811              		.loc 1 885 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 161


 6812 0526 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6813 052a D7F8A014 		ldr	r1, [r7, #1184]
 6814 052e 1346     		mov	r3, r2
 6815 0530 DB00     		lsls	r3, r3, #3
 6816 0532 9B1A     		subs	r3, r3, r2
 6817 0534 1B01     		lsls	r3, r3, #4
 6818 0536 0B44     		add	r3, r3, r1
 6819 0538 03F58873 		add	r3, r3, #272
 6820 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6821 053e 1A46     		mov	r2, r3
 6822 0540 1346     		mov	r3, r2
 6823 0542 5B00     		lsls	r3, r3, #1
 6824 0544 1344     		add	r3, r3, r2
 6825 0546 1B01     		lsls	r3, r3, #4
 6826 0548 03F5C873 		add	r3, r3, #400
 6827 054c D7F8A024 		ldr	r2, [r7, #1184]
 6828 0550 1344     		add	r3, r3, r2
 6829 0552 5A1D     		adds	r2, r3, #5
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6830              		.loc 1 834 0
 6831 0554 07F55B73 		add	r3, r7, #876
 6832 0558 C3F8C020 		str	r2, [r3, #192]
 886:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 6833              		.loc 1 886 0
 6834 055c 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6835 0560 D7F8A014 		ldr	r1, [r7, #1184]
 6836 0564 1346     		mov	r3, r2
 6837 0566 DB00     		lsls	r3, r3, #3
 6838 0568 9B1A     		subs	r3, r3, r2
 6839 056a 1B01     		lsls	r3, r3, #4
 6840 056c 0B44     		add	r3, r3, r1
 6841 056e 03F58873 		add	r3, r3, #272
 6842 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6843 0574 1A46     		mov	r2, r3
 6844 0576 1346     		mov	r3, r2
 6845 0578 5B00     		lsls	r3, r3, #1
 6846 057a 1344     		add	r3, r3, r2
 6847 057c 1B01     		lsls	r3, r3, #4
 6848 057e 03F5CC73 		add	r3, r3, #408
 6849 0582 D7F8A024 		ldr	r2, [r7, #1184]
 6850 0586 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6851              		.loc 1 834 0
 6852 0588 07F55B73 		add	r3, r7, #876
 6853 058c C3F8C420 		str	r2, [r3, #196]
 887:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 6854              		.loc 1 887 0
 6855 0590 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6856 0594 D7F8A014 		ldr	r1, [r7, #1184]
 6857 0598 1346     		mov	r3, r2
 6858 059a DB00     		lsls	r3, r3, #3
 6859 059c 9B1A     		subs	r3, r3, r2
 6860 059e 1B01     		lsls	r3, r3, #4
 6861 05a0 0B44     		add	r3, r3, r1
 6862 05a2 03F58873 		add	r3, r3, #272
 6863 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6864 05a8 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 162


 6865 05aa 1346     		mov	r3, r2
 6866 05ac 5B00     		lsls	r3, r3, #1
 6867 05ae 1344     		add	r3, r3, r2
 6868 05b0 1B01     		lsls	r3, r3, #4
 6869 05b2 03F5D073 		add	r3, r3, #416
 6870 05b6 D7F8A024 		ldr	r2, [r7, #1184]
 6871 05ba 1344     		add	r3, r3, r2
 6872 05bc 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6873              		.loc 1 834 0
 6874 05be 07F55B73 		add	r3, r7, #876
 6875 05c2 C3F8C820 		str	r2, [r3, #200]
 888:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 6876              		.loc 1 888 0
 6877 05c6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6878 05ca 1346     		mov	r3, r2
 6879 05cc DB00     		lsls	r3, r3, #3
 6880 05ce 9B1A     		subs	r3, r3, r2
 6881 05d0 1B01     		lsls	r3, r3, #4
 6882 05d2 E033     		adds	r3, r3, #224
 6883 05d4 D7F8A024 		ldr	r2, [r7, #1184]
 6884 05d8 1344     		add	r3, r3, r2
 6885 05da DA1C     		adds	r2, r3, #3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6886              		.loc 1 834 0
 6887 05dc 07F55B73 		add	r3, r7, #876
 6888 05e0 C3F8CC20 		str	r2, [r3, #204]
 889:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 6889              		.loc 1 889 0
 6890 05e4 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6891 05e8 1346     		mov	r3, r2
 6892 05ea DB00     		lsls	r3, r3, #3
 6893 05ec 9B1A     		subs	r3, r3, r2
 6894 05ee 1B01     		lsls	r3, r3, #4
 6895 05f0 E033     		adds	r3, r3, #224
 6896 05f2 D7F8A024 		ldr	r2, [r7, #1184]
 6897 05f6 1344     		add	r3, r3, r2
 6898 05f8 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6899              		.loc 1 834 0
 6900 05fa 07F55B73 		add	r3, r7, #876
 6901 05fe C3F8D020 		str	r2, [r3, #208]
 890:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 6902              		.loc 1 890 0
 6903 0602 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6904 0606 1346     		mov	r3, r2
 6905 0608 DB00     		lsls	r3, r3, #3
 6906 060a 9B1A     		subs	r3, r3, r2
 6907 060c 1B01     		lsls	r3, r3, #4
 6908 060e E833     		adds	r3, r3, #232
 6909 0610 D7F8A024 		ldr	r2, [r7, #1184]
 6910 0614 1344     		add	r3, r3, r2
 6911 0616 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6912              		.loc 1 834 0
 6913 0618 07F55B73 		add	r3, r7, #876
 6914 061c C3F8D420 		str	r2, [r3, #212]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 163


 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 6915              		.loc 1 891 0
 6916 0620 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6917 0624 1346     		mov	r3, r2
 6918 0626 DB00     		lsls	r3, r3, #3
 6919 0628 9B1A     		subs	r3, r3, r2
 6920 062a 1B01     		lsls	r3, r3, #4
 6921 062c 03F58473 		add	r3, r3, #264
 6922 0630 D7F8A024 		ldr	r2, [r7, #1184]
 6923 0634 1344     		add	r3, r3, r2
 6924 0636 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6925              		.loc 1 834 0
 6926 0638 07F55B73 		add	r3, r7, #876
 6927 063c C3F8D820 		str	r2, [r3, #216]
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 6928              		.loc 1 892 0
 6929 0640 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6930 0644 D7F8A014 		ldr	r1, [r7, #1184]
 6931 0648 1346     		mov	r3, r2
 6932 064a DB00     		lsls	r3, r3, #3
 6933 064c 9B1A     		subs	r3, r3, r2
 6934 064e 1B01     		lsls	r3, r3, #4
 6935 0650 0B44     		add	r3, r3, r1
 6936 0652 03F58873 		add	r3, r3, #272
 6937 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6938 0658 1A46     		mov	r2, r3
 6939 065a 1346     		mov	r3, r2
 6940 065c 5B00     		lsls	r3, r3, #1
 6941 065e 1344     		add	r3, r3, r2
 6942 0660 1B01     		lsls	r3, r3, #4
 6943 0662 03F5D873 		add	r3, r3, #432
 6944 0666 D7F8A024 		ldr	r2, [r7, #1184]
 6945 066a 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6946              		.loc 1 834 0
 6947 066c 07F55B73 		add	r3, r7, #876
 6948 0670 C3F8DC20 		str	r2, [r3, #220]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 6949              		.loc 1 893 0
 6950 0674 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6951 0678 D7F8A014 		ldr	r1, [r7, #1184]
 6952 067c 1346     		mov	r3, r2
 6953 067e DB00     		lsls	r3, r3, #3
 6954 0680 9B1A     		subs	r3, r3, r2
 6955 0682 1B01     		lsls	r3, r3, #4
 6956 0684 0B44     		add	r3, r3, r1
 6957 0686 03F58873 		add	r3, r3, #272
 6958 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6959 068c 1A46     		mov	r2, r3
 6960 068e 1346     		mov	r3, r2
 6961 0690 5B00     		lsls	r3, r3, #1
 6962 0692 1344     		add	r3, r3, r2
 6963 0694 1B01     		lsls	r3, r3, #4
 6964 0696 03F5D873 		add	r3, r3, #432
 6965 069a D7F8A024 		ldr	r2, [r7, #1184]
 6966 069e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 164


 6967 06a0 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6968              		.loc 1 834 0
 6969 06a2 07F55B73 		add	r3, r7, #876
 6970 06a6 C3F8E020 		str	r2, [r3, #224]
 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 6971              		.loc 1 894 0
 6972 06aa 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6973 06ae 1346     		mov	r3, r2
 6974 06b0 DB00     		lsls	r3, r3, #3
 6975 06b2 9B1A     		subs	r3, r3, r2
 6976 06b4 1B01     		lsls	r3, r3, #4
 6977 06b6 E033     		adds	r3, r3, #224
 6978 06b8 D7F8A024 		ldr	r2, [r7, #1184]
 6979 06bc 1344     		add	r3, r3, r2
 6980 06be 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6981              		.loc 1 834 0
 6982 06c0 07F55B73 		add	r3, r7, #876
 6983 06c4 C3F8E420 		str	r2, [r3, #228]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 6984              		.loc 1 895 0
 6985 06c8 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6986 06cc 1346     		mov	r3, r2
 6987 06ce DB00     		lsls	r3, r3, #3
 6988 06d0 9B1A     		subs	r3, r3, r2
 6989 06d2 1B01     		lsls	r3, r3, #4
 6990 06d4 F033     		adds	r3, r3, #240
 6991 06d6 D7F8A024 		ldr	r2, [r7, #1184]
 6992 06da 1344     		add	r3, r3, r2
 6993 06dc 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6994              		.loc 1 834 0
 6995 06de 07F55B73 		add	r3, r7, #876
 6996 06e2 C3F8E820 		str	r2, [r3, #232]
 896:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 6997              		.loc 1 896 0
 6998 06e6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6999 06ea 1346     		mov	r3, r2
 7000 06ec DB00     		lsls	r3, r3, #3
 7001 06ee 9B1A     		subs	r3, r3, r2
 7002 06f0 1B01     		lsls	r3, r3, #4
 7003 06f2 03F58873 		add	r3, r3, #272
 7004 06f6 D7F8A024 		ldr	r2, [r7, #1184]
 7005 06fa 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7006              		.loc 1 834 0
 7007 06fc 07F55B73 		add	r3, r7, #876
 7008 0700 C3F8EC20 		str	r2, [r3, #236]
 897:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7009              		.loc 1 897 0
 7010 0704 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7011 0708 1346     		mov	r3, r2
 7012 070a DB00     		lsls	r3, r3, #3
 7013 070c 9B1A     		subs	r3, r3, r2
 7014 070e 1B01     		lsls	r3, r3, #4
 7015 0710 E033     		adds	r3, r3, #224
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 165


 7016 0712 D7F8A024 		ldr	r2, [r7, #1184]
 7017 0716 1344     		add	r3, r3, r2
 7018 0718 9A1C     		adds	r2, r3, #2
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7019              		.loc 1 834 0
 7020 071a 07F55B73 		add	r3, r7, #876
 7021 071e C3F8F020 		str	r2, [r3, #240]
 898:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7022              		.loc 1 898 0
 7023 0722 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7024 0726 1346     		mov	r3, r2
 7025 0728 DB00     		lsls	r3, r3, #3
 7026 072a 9B1A     		subs	r3, r3, r2
 7027 072c 1B01     		lsls	r3, r3, #4
 7028 072e 03F58873 		add	r3, r3, #272
 7029 0732 D7F8A024 		ldr	r2, [r7, #1184]
 7030 0736 1344     		add	r3, r3, r2
 7031 0738 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7032              		.loc 1 834 0
 7033 073a 07F55B73 		add	r3, r7, #876
 7034 073e C3F8F420 		str	r2, [r3, #244]
 899:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7035              		.loc 1 899 0
 7036 0742 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7037 0746 1346     		mov	r3, r2
 7038 0748 DB00     		lsls	r3, r3, #3
 7039 074a 9B1A     		subs	r3, r3, r2
 7040 074c 1B01     		lsls	r3, r3, #4
 7041 074e 03F58873 		add	r3, r3, #272
 7042 0752 D7F8A024 		ldr	r2, [r7, #1184]
 7043 0756 1344     		add	r3, r3, r2
 7044 0758 9A1C     		adds	r2, r3, #2
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7045              		.loc 1 834 0
 7046 075a 07F55B73 		add	r3, r7, #876
 7047 075e C3F8F820 		str	r2, [r3, #248]
 900:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7048              		.loc 1 900 0
 7049 0762 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7050 0766 D7F8A014 		ldr	r1, [r7, #1184]
 7051 076a 1346     		mov	r3, r2
 7052 076c DB00     		lsls	r3, r3, #3
 7053 076e 9B1A     		subs	r3, r3, r2
 7054 0770 1B01     		lsls	r3, r3, #4
 7055 0772 0B44     		add	r3, r3, r1
 7056 0774 03F58873 		add	r3, r3, #272
 7057 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7058 077a 1A46     		mov	r2, r3
 7059 077c 1346     		mov	r3, r2
 7060 077e 5B00     		lsls	r3, r3, #1
 7061 0780 1344     		add	r3, r3, r2
 7062 0782 1B01     		lsls	r3, r3, #4
 7063 0784 03F5D873 		add	r3, r3, #432
 7064 0788 D7F8A024 		ldr	r2, [r7, #1184]
 7065 078c 1344     		add	r3, r3, r2
 7066 078e 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 166


 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7067              		.loc 1 834 0
 7068 0790 07F55B73 		add	r3, r7, #876
 7069 0794 C3F8FC20 		str	r2, [r3, #252]
 901:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7070              		.loc 1 901 0
 7071 0798 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7072 079c D7F8A014 		ldr	r1, [r7, #1184]
 7073 07a0 1346     		mov	r3, r2
 7074 07a2 DB00     		lsls	r3, r3, #3
 7075 07a4 9B1A     		subs	r3, r3, r2
 7076 07a6 1B01     		lsls	r3, r3, #4
 7077 07a8 0B44     		add	r3, r3, r1
 7078 07aa 03F58873 		add	r3, r3, #272
 7079 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7080 07b0 1A46     		mov	r2, r3
 7081 07b2 1346     		mov	r3, r2
 7082 07b4 5B00     		lsls	r3, r3, #1
 7083 07b6 1344     		add	r3, r3, r2
 7084 07b8 1B01     		lsls	r3, r3, #4
 7085 07ba 03F5D873 		add	r3, r3, #432
 7086 07be D7F8A024 		ldr	r2, [r7, #1184]
 7087 07c2 1344     		add	r3, r3, r2
 7088 07c4 5A1D     		adds	r2, r3, #5
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7089              		.loc 1 834 0
 7090 07c6 07F55B73 		add	r3, r7, #876
 7091 07ca C3F80021 		str	r2, [r3, #256]
 902:..\src/command_processing.c ****         
 903:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7092              		.loc 1 903 0
 7093 07ce D7F8A034 		ldr	r3, [r7, #1184]
 7094 07d2 03F5C872 		add	r2, r3, #400
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7095              		.loc 1 834 0
 7096 07d6 07F55B73 		add	r3, r7, #876
 7097 07da C3F80421 		str	r2, [r3, #260]
 904:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7098              		.loc 1 904 0
 7099 07de D7F8A034 		ldr	r3, [r7, #1184]
 7100 07e2 03F5E072 		add	r2, r3, #448
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7101              		.loc 1 834 0
 7102 07e6 07F55B73 		add	r3, r7, #876
 7103 07ea C3F80821 		str	r2, [r3, #264]
 905:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7104              		.loc 1 905 0
 7105 07ee D7F8A034 		ldr	r3, [r7, #1184]
 7106 07f2 03F22722 		addw	r2, r3, #551
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7107              		.loc 1 834 0
 7108 07f6 07F55B73 		add	r3, r7, #876
 7109 07fa C3F80C21 		str	r2, [r3, #268]
 906:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7110              		.loc 1 906 0
 7111 07fe D7F8A034 		ldr	r3, [r7, #1184]
 7112 0802 03F50A72 		add	r2, r3, #552
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 167


 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7113              		.loc 1 834 0
 7114 0806 07F55B73 		add	r3, r7, #876
 7115 080a C3F81021 		str	r2, [r3, #272]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70         
 7116              		.loc 1 907 0
 7117 080e D7F8A034 		ldr	r3, [r7, #1184]
 7118 0812 03F22E22 		addw	r2, r3, #558
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7119              		.loc 1 834 0
 7120 0816 07F55B73 		add	r3, r7, #876
 7121 081a C3F81421 		str	r2, [r3, #276]
 908:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type)
 7122              		.loc 1 908 0
 7123 081e D7F8A034 		ldr	r3, [r7, #1184]
 7124 0822 03F1AC02 		add	r2, r3, #172
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7125              		.loc 1 834 0
 7126 0826 07F55B73 		add	r3, r7, #876
 7127 082a C3F81821 		str	r2, [r3, #280]
 909:..\src/command_processing.c ****     };
 910:..\src/command_processing.c ****     
 911:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7128              		.loc 1 911 0
 7129 082e 07F54973 		add	r3, r7, #804
 7130 0832 F34A     		ldr	r2, .L340
 7131 0834 1846     		mov	r0, r3
 7132 0836 1146     		mov	r1, r2
 7133 0838 4723     		movs	r3, #71
 7134 083a 1A46     		mov	r2, r3
 7135 083c FFF7FEFF 		bl	memcpy
 912:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 913:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 914:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 915:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 916:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 917:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 918:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 919:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 920:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 921:..\src/command_processing.c ****         
 922:..\src/command_processing.c ****         // GENERIC PARAMS
 923:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 924:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 925:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 926:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
 927:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
 928:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
 929:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
 930:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
 931:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG      
 932:..\src/command_processing.c ****     };
 933:..\src/command_processing.c **** 
 934:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7136              		.loc 1 934 0
 7137 0840 07F53773 		add	r3, r7, #732
 7138 0844 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 168


 7139 0846 1A70     		strb	r2, [r3]
 7140 0848 07F53773 		add	r3, r7, #732
 7141 084c 0322     		movs	r2, #3
 7142 084e 5A70     		strb	r2, [r3, #1]
 7143 0850 07F53773 		add	r3, r7, #732
 7144 0854 0322     		movs	r2, #3
 7145 0856 9A70     		strb	r2, [r3, #2]
 7146 0858 07F53773 		add	r3, r7, #732
 7147 085c 0122     		movs	r2, #1
 7148 085e DA70     		strb	r2, [r3, #3]
 7149 0860 07F53773 		add	r3, r7, #732
 7150 0864 0122     		movs	r2, #1
 7151 0866 1A71     		strb	r2, [r3, #4]
 7152 0868 07F53773 		add	r3, r7, #732
 7153 086c 0122     		movs	r2, #1
 7154 086e 5A71     		strb	r2, [r3, #5]
 7155 0870 07F53773 		add	r3, r7, #732
 7156 0874 0322     		movs	r2, #3
 7157 0876 9A71     		strb	r2, [r3, #6]
 7158 0878 07F53773 		add	r3, r7, #732
 7159 087c 0322     		movs	r2, #3
 7160 087e DA71     		strb	r2, [r3, #7]
 7161 0880 07F53773 		add	r3, r7, #732
 7162 0884 0322     		movs	r2, #3
 7163 0886 1A72     		strb	r2, [r3, #8]
 7164 0888 07F53773 		add	r3, r7, #732
 7165 088c 0122     		movs	r2, #1
 7166 088e 5A72     		strb	r2, [r3, #9]
 7167 0890 07F53773 		add	r3, r7, #732
 7168 0894 0222     		movs	r2, #2
 7169 0896 9A72     		strb	r2, [r3, #10]
 7170 0898 07F53773 		add	r3, r7, #732
 7171 089c 0222     		movs	r2, #2
 7172 089e DA72     		strb	r2, [r3, #11]
 7173 08a0 07F53773 		add	r3, r7, #732
 7174 08a4 0122     		movs	r2, #1
 7175 08a6 1A73     		strb	r2, [r3, #12]
 7176 08a8 07F53773 		add	r3, r7, #732
 7177 08ac 0222     		movs	r2, #2
 7178 08ae 5A73     		strb	r2, [r3, #13]
 7179 08b0 07F53773 		add	r3, r7, #732
 7180 08b4 0122     		movs	r2, #1
 7181 08b6 9A73     		strb	r2, [r3, #14]
 7182 08b8 07F53773 		add	r3, r7, #732
 7183 08bc 0222     		movs	r2, #2
 7184 08be DA73     		strb	r2, [r3, #15]
 7185 08c0 07F53773 		add	r3, r7, #732
 7186 08c4 0122     		movs	r2, #1
 7187 08c6 1A74     		strb	r2, [r3, #16]
 7188 08c8 07F53773 		add	r3, r7, #732
 7189 08cc 0122     		movs	r2, #1
 7190 08ce 5A74     		strb	r2, [r3, #17]
 7191 08d0 07F53773 		add	r3, r7, #732
 7192 08d4 0122     		movs	r2, #1
 7193 08d6 9A74     		strb	r2, [r3, #18]
 7194 08d8 07F53773 		add	r3, r7, #732
 7195 08dc 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 169


 7196 08de DA74     		strb	r2, [r3, #19]
 7197 08e0 07F53773 		add	r3, r7, #732
 7198 08e4 0622     		movs	r2, #6
 7199 08e6 1A75     		strb	r2, [r3, #20]
 7200 08e8 07F53773 		add	r3, r7, #732
 7201 08ec 0322     		movs	r2, #3
 7202 08ee 5A75     		strb	r2, [r3, #21]
 7203 08f0 07F53773 		add	r3, r7, #732
 7204 08f4 0122     		movs	r2, #1
 7205 08f6 9A75     		strb	r2, [r3, #22]
 7206 08f8 07F53773 		add	r3, r7, #732
 7207 08fc 0122     		movs	r2, #1
 7208 08fe DA75     		strb	r2, [r3, #23]
 7209 0900 07F53773 		add	r3, r7, #732
 7210 0904 0122     		movs	r2, #1
 7211 0906 1A76     		strb	r2, [r3, #24]
 7212 0908 07F53773 		add	r3, r7, #732
 7213 090c 0122     		movs	r2, #1
 7214 090e 5A76     		strb	r2, [r3, #25]
 7215 0910 07F53773 		add	r3, r7, #732
 7216 0914 0122     		movs	r2, #1
 7217 0916 9A76     		strb	r2, [r3, #26]
 7218 0918 07F53773 		add	r3, r7, #732
 7219 091c 0122     		movs	r2, #1
 7220 091e DA76     		strb	r2, [r3, #27]
 7221 0920 07F53773 		add	r3, r7, #732
 7222 0924 0122     		movs	r2, #1
 7223 0926 1A77     		strb	r2, [r3, #28]
 7224 0928 07F53773 		add	r3, r7, #732
 7225 092c 0122     		movs	r2, #1
 7226 092e 5A77     		strb	r2, [r3, #29]
 7227 0930 07F53773 		add	r3, r7, #732
 7228 0934 0122     		movs	r2, #1
 7229 0936 9A77     		strb	r2, [r3, #30]
 7230 0938 07F53773 		add	r3, r7, #732
 7231 093c 0622     		movs	r2, #6
 7232 093e DA77     		strb	r2, [r3, #31]
 7233 0940 07F53773 		add	r3, r7, #732
 7234 0944 0122     		movs	r2, #1
 7235 0946 83F82020 		strb	r2, [r3, #32]
 7236 094a 07F53773 		add	r3, r7, #732
 7237 094e 0522     		movs	r2, #5
 7238 0950 83F82120 		strb	r2, [r3, #33]
 7239 0954 07F53773 		add	r3, r7, #732
 7240 0958 0122     		movs	r2, #1
 7241 095a 83F82220 		strb	r2, [r3, #34]
 7242 095e 07F53773 		add	r3, r7, #732
 7243 0962 0622     		movs	r2, #6
 7244 0964 83F82320 		strb	r2, [r3, #35]
 7245 0968 07F53773 		add	r3, r7, #732
 7246 096c 0122     		movs	r2, #1
 7247 096e 83F82420 		strb	r2, [r3, #36]
 7248 0972 07F53773 		add	r3, r7, #732
 7249 0976 0122     		movs	r2, #1
 7250 0978 83F82520 		strb	r2, [r3, #37]
 7251 097c 07F53773 		add	r3, r7, #732
 7252 0980 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 170


 7253 0982 83F82620 		strb	r2, [r3, #38]
 7254 0986 07F53773 		add	r3, r7, #732
 7255 098a 0122     		movs	r2, #1
 7256 098c 83F82720 		strb	r2, [r3, #39]
 7257 0990 07F53773 		add	r3, r7, #732
 7258 0994 0322     		movs	r2, #3
 7259 0996 83F82820 		strb	r2, [r3, #40]
 7260 099a 07F53773 		add	r3, r7, #732
 7261 099e 0322     		movs	r2, #3
 7262 09a0 83F82920 		strb	r2, [r3, #41]
 7263 09a4 07F53773 		add	r3, r7, #732
 7264 09a8 0122     		movs	r2, #1
 7265 09aa 83F82A20 		strb	r2, [r3, #42]
 7266 09ae 07F53773 		add	r3, r7, #732
 7267 09b2 0322     		movs	r2, #3
 7268 09b4 83F82B20 		strb	r2, [r3, #43]
 7269 09b8 07F53773 		add	r3, r7, #732
 7270 09bc 0322     		movs	r2, #3
 7271 09be 83F82C20 		strb	r2, [r3, #44]
 7272 09c2 07F53773 		add	r3, r7, #732
 7273 09c6 0122     		movs	r2, #1
 7274 09c8 83F82D20 		strb	r2, [r3, #45]
 7275 09cc 07F53773 		add	r3, r7, #732
 7276 09d0 0122     		movs	r2, #1
 7277 09d2 83F82E20 		strb	r2, [r3, #46]
 7278 09d6 07F53773 		add	r3, r7, #732
 7279 09da 0122     		movs	r2, #1
 7280 09dc 83F82F20 		strb	r2, [r3, #47]
 7281 09e0 07F53773 		add	r3, r7, #732
 7282 09e4 0322     		movs	r2, #3
 7283 09e6 83F83020 		strb	r2, [r3, #48]
 7284 09ea 07F53773 		add	r3, r7, #732
 7285 09ee 0322     		movs	r2, #3
 7286 09f0 83F83120 		strb	r2, [r3, #49]
 7287 09f4 07F53773 		add	r3, r7, #732
 7288 09f8 0322     		movs	r2, #3
 7289 09fa 83F83220 		strb	r2, [r3, #50]
 7290 09fe 07F53773 		add	r3, r7, #732
 7291 0a02 0122     		movs	r2, #1
 7292 0a04 83F83320 		strb	r2, [r3, #51]
 7293 0a08 07F53773 		add	r3, r7, #732
 7294 0a0c 0222     		movs	r2, #2
 7295 0a0e 83F83420 		strb	r2, [r3, #52]
 7296 0a12 07F53773 		add	r3, r7, #732
 7297 0a16 0222     		movs	r2, #2
 7298 0a18 83F83520 		strb	r2, [r3, #53]
 7299 0a1c 07F53773 		add	r3, r7, #732
 7300 0a20 0122     		movs	r2, #1
 7301 0a22 83F83620 		strb	r2, [r3, #54]
 7302 0a26 07F53773 		add	r3, r7, #732
 7303 0a2a 0122     		movs	r2, #1
 7304 0a2c 83F83720 		strb	r2, [r3, #55]
 7305 0a30 07F53773 		add	r3, r7, #732
 7306 0a34 0122     		movs	r2, #1
 7307 0a36 83F83820 		strb	r2, [r3, #56]
 7308 0a3a 07F53773 		add	r3, r7, #732
 7309 0a3e 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 171


 7310 0a40 83F83920 		strb	r2, [r3, #57]
 7311 0a44 07F53773 		add	r3, r7, #732
 7312 0a48 0622     		movs	r2, #6
 7313 0a4a 83F83A20 		strb	r2, [r3, #58]
 7314 0a4e 07F53773 		add	r3, r7, #732
 7315 0a52 0122     		movs	r2, #1
 7316 0a54 83F83B20 		strb	r2, [r3, #59]
 7317 0a58 07F53773 		add	r3, r7, #732
 7318 0a5c 0122     		movs	r2, #1
 7319 0a5e 83F83C20 		strb	r2, [r3, #60]
 7320 0a62 07F53773 		add	r3, r7, #732
 7321 0a66 0122     		movs	r2, #1
 7322 0a68 83F83D20 		strb	r2, [r3, #61]
 7323 0a6c 07F53773 		add	r3, r7, #732
 7324 0a70 0122     		movs	r2, #1
 7325 0a72 83F83E20 		strb	r2, [r3, #62]
 7326 0a76 07F53773 		add	r3, r7, #732
 7327 0a7a 0322     		movs	r2, #3
 7328 0a7c 83F83F20 		strb	r2, [r3, #63]
 7329 0a80 07F53773 		add	r3, r7, #732
 7330 0a84 0322     		movs	r2, #3
 7331 0a86 83F84020 		strb	r2, [r3, #64]
 935:..\src/command_processing.c ****         1, 3, 3, 1, 
 936:..\src/command_processing.c ****         1, 1, 3, 3,
 937:..\src/command_processing.c ****         3, 1, 2, 2, 
 938:..\src/command_processing.c ****         1, 2, 1, 2,
 939:..\src/command_processing.c ****         1, 1, 1, 1, 
 940:..\src/command_processing.c ****         6, 3, 1, 1,
 941:..\src/command_processing.c ****         1, 1, 1, 1, 
 942:..\src/command_processing.c ****         1, 1, 1, 6,
 943:..\src/command_processing.c ****         1, 5, 1, 6,
 944:..\src/command_processing.c ****         
 945:..\src/command_processing.c ****         // GENERIC PARAMS
 946:..\src/command_processing.c ****         1, 1, 1, 1,
 947:..\src/command_processing.c ****         3, 3, 1, 3,
 948:..\src/command_processing.c ****         3, 1, 1, 1,
 949:..\src/command_processing.c ****         3, 3, 3, 1,
 950:..\src/command_processing.c ****         2, 2, 1, 1,
 951:..\src/command_processing.c ****         1, 1, 6, 1,
 952:..\src/command_processing.c ****         1, 1, 1, 3, 
 953:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7332              		.loc 1 953 0
 7333 0a8a 5E4B     		ldr	r3, .L340+4
 7334 0a8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 934:..\src/command_processing.c ****         1, 3, 3, 1, 
 7335              		.loc 1 934 0
 7336 0a8e 07F53773 		add	r3, r7, #732
 7337 0a92 83F84120 		strb	r2, [r3, #65]
 7338              		.loc 1 953 0
 7339 0a96 5B4B     		ldr	r3, .L340+4
 7340 0a98 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 934:..\src/command_processing.c ****         1, 3, 3, 1, 
 7341              		.loc 1 934 0
 7342 0a9a 07F53773 		add	r3, r7, #732
 7343 0a9e 83F84220 		strb	r2, [r3, #66]
 7344 0aa2 07F53773 		add	r3, r7, #732
 7345 0aa6 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 172


 7346 0aa8 83F84320 		strb	r2, [r3, #67]
 7347 0aac 07F53773 		add	r3, r7, #732
 7348 0ab0 0622     		movs	r2, #6
 7349 0ab2 83F84420 		strb	r2, [r3, #68]
 7350 0ab6 07F53773 		add	r3, r7, #732
 7351 0aba 0622     		movs	r2, #6
 7352 0abc 83F84520 		strb	r2, [r3, #69]
 7353 0ac0 07F53773 		add	r3, r7, #732
 7354 0ac4 0122     		movs	r2, #1
 7355 0ac6 83F84620 		strb	r2, [r3, #70]
 954:..\src/command_processing.c ****         6, 6, 1
 955:..\src/command_processing.c ****     };
 956:..\src/command_processing.c ****     
 957:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 7356              		.loc 1 957 0
 7357 0aca 07F52573 		add	r3, r7, #660
 7358 0ace 0022     		movs	r2, #0
 7359 0ad0 1A70     		strb	r2, [r3]
 7360 0ad2 97F89D34 		ldrb	r3, [r7, #1181]
 7361 0ad6 0A33     		adds	r3, r3, #10
 7362 0ad8 DAB2     		uxtb	r2, r3
 7363 0ada 07F52573 		add	r3, r7, #660
 7364 0ade 5A70     		strb	r2, [r3, #1]
 7365 0ae0 97F89D34 		ldrb	r3, [r7, #1181]
 7366 0ae4 0A33     		adds	r3, r3, #10
 7367 0ae6 DAB2     		uxtb	r2, r3
 7368 0ae8 07F52573 		add	r3, r7, #660
 7369 0aec 9A70     		strb	r2, [r3, #2]
 7370 0aee 97F89D34 		ldrb	r3, [r7, #1181]
 7371 0af2 0A33     		adds	r3, r3, #10
 7372 0af4 DAB2     		uxtb	r2, r3
 7373 0af6 07F52573 		add	r3, r7, #660
 7374 0afa DA70     		strb	r2, [r3, #3]
 7375 0afc 97F89D34 		ldrb	r3, [r7, #1181]
 7376 0b00 0A33     		adds	r3, r3, #10
 7377 0b02 DAB2     		uxtb	r2, r3
 7378 0b04 07F52573 		add	r3, r7, #660
 7379 0b08 1A71     		strb	r2, [r3, #4]
 7380 0b0a 97F89D34 		ldrb	r3, [r7, #1181]
 7381 0b0e 0A33     		adds	r3, r3, #10
 7382 0b10 DAB2     		uxtb	r2, r3
 7383 0b12 07F52573 		add	r3, r7, #660
 7384 0b16 5A71     		strb	r2, [r3, #5]
 958:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 959:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 7385              		.loc 1 959 0
 7386 0b18 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7387 0b1c D7F8A014 		ldr	r1, [r7, #1184]
 7388 0b20 1346     		mov	r3, r2
 7389 0b22 DB00     		lsls	r3, r3, #3
 7390 0b24 9B1A     		subs	r3, r3, r2
 7391 0b26 1B01     		lsls	r3, r3, #4
 7392 0b28 0B44     		add	r3, r3, r1
 7393 0b2a 03F58873 		add	r3, r3, #272
 7394 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7395              		.loc 1 957 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 173


 7396 0b30 1433     		adds	r3, r3, #20
 7397 0b32 DAB2     		uxtb	r2, r3
 7398 0b34 07F52573 		add	r3, r7, #660
 7399 0b38 9A71     		strb	r2, [r3, #6]
 7400              		.loc 1 959 0
 7401 0b3a 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7402 0b3e D7F8A014 		ldr	r1, [r7, #1184]
 7403 0b42 1346     		mov	r3, r2
 7404 0b44 DB00     		lsls	r3, r3, #3
 7405 0b46 9B1A     		subs	r3, r3, r2
 7406 0b48 1B01     		lsls	r3, r3, #4
 7407 0b4a 0B44     		add	r3, r3, r1
 7408 0b4c 03F58873 		add	r3, r3, #272
 7409 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7410              		.loc 1 957 0
 7411 0b52 1433     		adds	r3, r3, #20
 7412 0b54 DAB2     		uxtb	r2, r3
 7413 0b56 07F52573 		add	r3, r7, #660
 7414 0b5a DA71     		strb	r2, [r3, #7]
 960:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7415              		.loc 1 960 0
 7416 0b5c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7417 0b60 D7F8A014 		ldr	r1, [r7, #1184]
 7418 0b64 1346     		mov	r3, r2
 7419 0b66 DB00     		lsls	r3, r3, #3
 7420 0b68 9B1A     		subs	r3, r3, r2
 7421 0b6a 1B01     		lsls	r3, r3, #4
 7422 0b6c 0B44     		add	r3, r3, r1
 7423 0b6e 03F58873 		add	r3, r3, #272
 7424 0b72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7425              		.loc 1 957 0
 7426 0b74 1433     		adds	r3, r3, #20
 7427 0b76 DAB2     		uxtb	r2, r3
 7428 0b78 07F52573 		add	r3, r7, #660
 7429 0b7c 1A72     		strb	r2, [r3, #8]
 7430 0b7e 97F89D34 		ldrb	r3, [r7, #1181]
 7431 0b82 0A33     		adds	r3, r3, #10
 7432 0b84 DAB2     		uxtb	r2, r3
 7433 0b86 07F52573 		add	r3, r7, #660
 7434 0b8a 5A72     		strb	r2, [r3, #9]
 7435 0b8c 97F89D34 		ldrb	r3, [r7, #1181]
 7436 0b90 0A33     		adds	r3, r3, #10
 7437 0b92 DAB2     		uxtb	r2, r3
 7438 0b94 07F52573 		add	r3, r7, #660
 7439 0b98 9A72     		strb	r2, [r3, #10]
 7440 0b9a 97F89D34 		ldrb	r3, [r7, #1181]
 7441 0b9e 0A33     		adds	r3, r3, #10
 7442 0ba0 DAB2     		uxtb	r2, r3
 7443 0ba2 07F52573 		add	r3, r7, #660
 7444 0ba6 DA72     		strb	r2, [r3, #11]
 7445 0ba8 97F89D34 		ldrb	r3, [r7, #1181]
 7446 0bac 0A33     		adds	r3, r3, #10
 7447 0bae DAB2     		uxtb	r2, r3
 7448 0bb0 07F52573 		add	r3, r7, #660
 7449 0bb4 1A73     		strb	r2, [r3, #12]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 174


 7450 0bb6 07F52573 		add	r3, r7, #660
 7451 0bba 1E22     		movs	r2, #30
 7452 0bbc 5A73     		strb	r2, [r3, #13]
 7453 0bbe 07F52573 		add	r3, r7, #660
 7454 0bc2 1E22     		movs	r2, #30
 7455 0bc4 9A73     		strb	r2, [r3, #14]
 7456 0bc6 07F52573 		add	r3, r7, #660
 7457 0bca 1E22     		movs	r2, #30
 7458 0bcc DA73     		strb	r2, [r3, #15]
 7459 0bce 07F52573 		add	r3, r7, #660
 7460 0bd2 1E22     		movs	r2, #30
 7461 0bd4 1A74     		strb	r2, [r3, #16]
 961:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
 962:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 7462              		.loc 1 962 0
 7463 0bd6 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7464 0bda D7F8A014 		ldr	r1, [r7, #1184]
 7465 0bde 1346     		mov	r3, r2
 7466 0be0 DB00     		lsls	r3, r3, #3
 7467 0be2 9B1A     		subs	r3, r3, r2
 7468 0be4 1B01     		lsls	r3, r3, #4
 7469 0be6 0B44     		add	r3, r3, r1
 7470 0be8 03F58873 		add	r3, r3, #272
 7471 0bec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7472              		.loc 1 957 0
 7473 0bee 1433     		adds	r3, r3, #20
 7474 0bf0 DAB2     		uxtb	r2, r3
 7475 0bf2 07F52573 		add	r3, r7, #660
 7476 0bf6 5A74     		strb	r2, [r3, #17]
 7477              		.loc 1 962 0
 7478 0bf8 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7479 0bfc 04E0     		b	.L341
 7480              	.L342:
 7481 0bfe 00BF     		.align	2
 7482              	.L340:
 7483 0c00 24040000 		.word	.LC0
 7484 0c04 00000000 		.word	N_Encoder_Line_Connected
 7485              	.L341:
 7486 0c08 D7F8A014 		ldr	r1, [r7, #1184]
 7487 0c0c 1346     		mov	r3, r2
 7488 0c0e DB00     		lsls	r3, r3, #3
 7489 0c10 9B1A     		subs	r3, r3, r2
 7490 0c12 1B01     		lsls	r3, r3, #4
 7491 0c14 0B44     		add	r3, r3, r1
 7492 0c16 03F58873 		add	r3, r3, #272
 7493 0c1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7494              		.loc 1 957 0
 7495 0c1c 1433     		adds	r3, r3, #20
 7496 0c1e DAB2     		uxtb	r2, r3
 7497 0c20 07F52573 		add	r3, r7, #660
 7498 0c24 9A74     		strb	r2, [r3, #18]
 7499 0c26 97F89D34 		ldrb	r3, [r7, #1181]
 7500 0c2a 0A33     		adds	r3, r3, #10
 7501 0c2c DAB2     		uxtb	r2, r3
 7502 0c2e 07F52573 		add	r3, r7, #660
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 175


 7503 0c32 DA74     		strb	r2, [r3, #19]
 7504 0c34 97F89D34 		ldrb	r3, [r7, #1181]
 7505 0c38 0A33     		adds	r3, r3, #10
 7506 0c3a DAB2     		uxtb	r2, r3
 7507 0c3c 07F52573 		add	r3, r7, #660
 7508 0c40 1A75     		strb	r2, [r3, #20]
 7509 0c42 07F52573 		add	r3, r7, #660
 7510 0c46 0022     		movs	r2, #0
 7511 0c48 5A75     		strb	r2, [r3, #21]
 7512 0c4a 07F52573 		add	r3, r7, #660
 7513 0c4e 4622     		movs	r2, #70
 7514 0c50 9A75     		strb	r2, [r3, #22]
 7515 0c52 07F52573 		add	r3, r7, #660
 7516 0c56 4622     		movs	r2, #70
 7517 0c58 DA75     		strb	r2, [r3, #23]
 7518 0c5a 07F52573 		add	r3, r7, #660
 7519 0c5e 4622     		movs	r2, #70
 7520 0c60 1A76     		strb	r2, [r3, #24]
 7521 0c62 07F52573 		add	r3, r7, #660
 7522 0c66 4622     		movs	r2, #70
 7523 0c68 5A76     		strb	r2, [r3, #25]
 7524 0c6a 07F52573 		add	r3, r7, #660
 7525 0c6e 1E22     		movs	r2, #30
 7526 0c70 9A76     		strb	r2, [r3, #26]
 7527 0c72 07F52573 		add	r3, r7, #660
 7528 0c76 0022     		movs	r2, #0
 7529 0c78 DA76     		strb	r2, [r3, #27]
 7530 0c7a 07F52573 		add	r3, r7, #660
 7531 0c7e 2822     		movs	r2, #40
 7532 0c80 1A77     		strb	r2, [r3, #28]
 7533 0c82 07F52573 		add	r3, r7, #660
 7534 0c86 3222     		movs	r2, #50
 7535 0c88 5A77     		strb	r2, [r3, #29]
 7536 0c8a 07F52573 		add	r3, r7, #660
 7537 0c8e 0022     		movs	r2, #0
 7538 0c90 9A77     		strb	r2, [r3, #30]
 7539 0c92 07F52573 		add	r3, r7, #660
 7540 0c96 3222     		movs	r2, #50
 7541 0c98 DA77     		strb	r2, [r3, #31]
 7542 0c9a 07F52573 		add	r3, r7, #660
 7543 0c9e 2822     		movs	r2, #40
 7544 0ca0 83F82020 		strb	r2, [r3, #32]
 7545 0ca4 07F52573 		add	r3, r7, #660
 7546 0ca8 2822     		movs	r2, #40
 7547 0caa 83F82120 		strb	r2, [r3, #33]
 7548 0cae 07F52573 		add	r3, r7, #660
 7549 0cb2 0022     		movs	r2, #0
 7550 0cb4 83F82220 		strb	r2, [r3, #34]
 963:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
 964:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
 965:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
 966:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 7551              		.loc 1 966 0
 7552 0cb8 D7F8A034 		ldr	r3, [r7, #1184]
 7553 0cbc 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7554              		.loc 1 957 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 176


 7555 0cc0 3C33     		adds	r3, r3, #60
 7556 0cc2 DAB2     		uxtb	r2, r3
 7557 0cc4 07F52573 		add	r3, r7, #660
 7558 0cc8 83F82320 		strb	r2, [r3, #35]
 7559 0ccc 97F89D34 		ldrb	r3, [r7, #1181]
 7560 0cd0 0A33     		adds	r3, r3, #10
 7561 0cd2 DAB2     		uxtb	r2, r3
 7562 0cd4 07F52573 		add	r3, r7, #660
 7563 0cd8 83F82420 		strb	r2, [r3, #36]
 7564 0cdc 97F89D34 		ldrb	r3, [r7, #1181]
 7565 0ce0 0A33     		adds	r3, r3, #10
 7566 0ce2 DAB2     		uxtb	r2, r3
 7567 0ce4 07F52573 		add	r3, r7, #660
 7568 0ce8 83F82520 		strb	r2, [r3, #37]
 7569 0cec 97F89D34 		ldrb	r3, [r7, #1181]
 7570 0cf0 0A33     		adds	r3, r3, #10
 7571 0cf2 DAB2     		uxtb	r2, r3
 7572 0cf4 07F52573 		add	r3, r7, #660
 7573 0cf8 83F82620 		strb	r2, [r3, #38]
 7574 0cfc 97F89D34 		ldrb	r3, [r7, #1181]
 7575 0d00 0A33     		adds	r3, r3, #10
 7576 0d02 DAB2     		uxtb	r2, r3
 7577 0d04 07F52573 		add	r3, r7, #660
 7578 0d08 83F82720 		strb	r2, [r3, #39]
 967:..\src/command_processing.c ****         
 968:..\src/command_processing.c ****         // GENERIC PARAMS
 969:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
 970:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 7579              		.loc 1 970 0
 7580 0d0c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7581 0d10 D7F8A014 		ldr	r1, [r7, #1184]
 7582 0d14 1346     		mov	r3, r2
 7583 0d16 DB00     		lsls	r3, r3, #3
 7584 0d18 9B1A     		subs	r3, r3, r2
 7585 0d1a 1B01     		lsls	r3, r3, #4
 7586 0d1c 0B44     		add	r3, r3, r1
 7587 0d1e 03F58873 		add	r3, r3, #272
 7588 0d22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7589              		.loc 1 957 0
 7590 0d24 1433     		adds	r3, r3, #20
 7591 0d26 DAB2     		uxtb	r2, r3
 7592 0d28 07F52573 		add	r3, r7, #660
 7593 0d2c 83F82820 		strb	r2, [r3, #40]
 7594              		.loc 1 970 0
 7595 0d30 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7596 0d34 D7F8A014 		ldr	r1, [r7, #1184]
 7597 0d38 1346     		mov	r3, r2
 7598 0d3a DB00     		lsls	r3, r3, #3
 7599 0d3c 9B1A     		subs	r3, r3, r2
 7600 0d3e 1B01     		lsls	r3, r3, #4
 7601 0d40 0B44     		add	r3, r3, r1
 7602 0d42 03F58873 		add	r3, r3, #272
 7603 0d46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7604              		.loc 1 957 0
 7605 0d48 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 177


 7606 0d4a DAB2     		uxtb	r2, r3
 7607 0d4c 07F52573 		add	r3, r7, #660
 7608 0d50 83F82920 		strb	r2, [r3, #41]
 7609 0d54 07F52573 		add	r3, r7, #660
 7610 0d58 0022     		movs	r2, #0
 7611 0d5a 83F82A20 		strb	r2, [r3, #42]
 7612 0d5e 97F89C34 		ldrb	r3, [r7, #1180]
 7613 0d62 0A33     		adds	r3, r3, #10
 7614 0d64 DAB2     		uxtb	r2, r3
 7615 0d66 07F52573 		add	r3, r7, #660
 7616 0d6a 83F82B20 		strb	r2, [r3, #43]
 7617 0d6e 97F89C34 		ldrb	r3, [r7, #1180]
 7618 0d72 0A33     		adds	r3, r3, #10
 7619 0d74 DAB2     		uxtb	r2, r3
 7620 0d76 07F52573 		add	r3, r7, #660
 7621 0d7a 83F82C20 		strb	r2, [r3, #44]
 7622 0d7e 97F89C34 		ldrb	r3, [r7, #1180]
 7623 0d82 0A33     		adds	r3, r3, #10
 7624 0d84 DAB2     		uxtb	r2, r3
 7625 0d86 07F52573 		add	r3, r7, #660
 7626 0d8a 83F82D20 		strb	r2, [r3, #45]
 7627 0d8e 97F89C34 		ldrb	r3, [r7, #1180]
 7628 0d92 0A33     		adds	r3, r3, #10
 7629 0d94 DAB2     		uxtb	r2, r3
 7630 0d96 07F52573 		add	r3, r7, #660
 7631 0d9a 83F82E20 		strb	r2, [r3, #46]
 7632 0d9e 97F89C34 		ldrb	r3, [r7, #1180]
 7633 0da2 0A33     		adds	r3, r3, #10
 7634 0da4 DAB2     		uxtb	r2, r3
 7635 0da6 07F52573 		add	r3, r7, #660
 7636 0daa 83F82F20 		strb	r2, [r3, #47]
 971:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
 972:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 7637              		.loc 1 972 0
 7638 0dae 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7639 0db2 D7F8A014 		ldr	r1, [r7, #1184]
 7640 0db6 1346     		mov	r3, r2
 7641 0db8 DB00     		lsls	r3, r3, #3
 7642 0dba 9B1A     		subs	r3, r3, r2
 7643 0dbc 1B01     		lsls	r3, r3, #4
 7644 0dbe 0B44     		add	r3, r3, r1
 7645 0dc0 03F58873 		add	r3, r3, #272
 7646 0dc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7647              		.loc 1 957 0
 7648 0dc6 1433     		adds	r3, r3, #20
 7649 0dc8 DAB2     		uxtb	r2, r3
 7650 0dca 07F52573 		add	r3, r7, #660
 7651 0dce 83F83020 		strb	r2, [r3, #48]
 7652              		.loc 1 972 0
 7653 0dd2 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7654 0dd6 D7F8A014 		ldr	r1, [r7, #1184]
 7655 0dda 1346     		mov	r3, r2
 7656 0ddc DB00     		lsls	r3, r3, #3
 7657 0dde 9B1A     		subs	r3, r3, r2
 7658 0de0 1B01     		lsls	r3, r3, #4
 7659 0de2 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 178


 7660 0de4 03F58873 		add	r3, r3, #272
 7661 0de8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7662              		.loc 1 957 0
 7663 0dea 1433     		adds	r3, r3, #20
 7664 0dec DAB2     		uxtb	r2, r3
 7665 0dee 07F52573 		add	r3, r7, #660
 7666 0df2 83F83120 		strb	r2, [r3, #49]
 7667              		.loc 1 972 0
 7668 0df6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7669 0dfa D7F8A014 		ldr	r1, [r7, #1184]
 7670 0dfe 1346     		mov	r3, r2
 7671 0e00 DB00     		lsls	r3, r3, #3
 7672 0e02 9B1A     		subs	r3, r3, r2
 7673 0e04 1B01     		lsls	r3, r3, #4
 7674 0e06 0B44     		add	r3, r3, r1
 7675 0e08 03F58873 		add	r3, r3, #272
 7676 0e0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7677              		.loc 1 957 0
 7678 0e0e 1433     		adds	r3, r3, #20
 7679 0e10 DAB2     		uxtb	r2, r3
 7680 0e12 07F52573 		add	r3, r7, #660
 7681 0e16 83F83220 		strb	r2, [r3, #50]
 7682 0e1a 97F89C34 		ldrb	r3, [r7, #1180]
 7683 0e1e 0A33     		adds	r3, r3, #10
 7684 0e20 DAB2     		uxtb	r2, r3
 7685 0e22 07F52573 		add	r3, r7, #660
 7686 0e26 83F83320 		strb	r2, [r3, #51]
 7687 0e2a 97F89C34 		ldrb	r3, [r7, #1180]
 7688 0e2e 0A33     		adds	r3, r3, #10
 7689 0e30 DAB2     		uxtb	r2, r3
 7690 0e32 07F52573 		add	r3, r7, #660
 7691 0e36 83F83420 		strb	r2, [r3, #52]
 7692 0e3a 97F89C34 		ldrb	r3, [r7, #1180]
 7693 0e3e 0A33     		adds	r3, r3, #10
 7694 0e40 DAB2     		uxtb	r2, r3
 7695 0e42 07F52573 		add	r3, r7, #660
 7696 0e46 83F83520 		strb	r2, [r3, #53]
 7697 0e4a 97F89C34 		ldrb	r3, [r7, #1180]
 7698 0e4e 0A33     		adds	r3, r3, #10
 7699 0e50 DAB2     		uxtb	r2, r3
 7700 0e52 07F52573 		add	r3, r7, #660
 7701 0e56 83F83620 		strb	r2, [r3, #54]
 973:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7702              		.loc 1 973 0
 7703 0e5a 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7704 0e5e D7F8A014 		ldr	r1, [r7, #1184]
 7705 0e62 1346     		mov	r3, r2
 7706 0e64 DB00     		lsls	r3, r3, #3
 7707 0e66 9B1A     		subs	r3, r3, r2
 7708 0e68 1B01     		lsls	r3, r3, #4
 7709 0e6a 0B44     		add	r3, r3, r1
 7710 0e6c 03F58873 		add	r3, r3, #272
 7711 0e70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7712              		.loc 1 957 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 179


 7713 0e72 1433     		adds	r3, r3, #20
 7714 0e74 DAB2     		uxtb	r2, r3
 7715 0e76 07F52573 		add	r3, r7, #660
 7716 0e7a 83F83720 		strb	r2, [r3, #55]
 974:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 7717              		.loc 1 974 0
 7718 0e7e 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7719 0e82 D7F8A014 		ldr	r1, [r7, #1184]
 7720 0e86 1346     		mov	r3, r2
 7721 0e88 DB00     		lsls	r3, r3, #3
 7722 0e8a 9B1A     		subs	r3, r3, r2
 7723 0e8c 1B01     		lsls	r3, r3, #4
 7724 0e8e 0B44     		add	r3, r3, r1
 7725 0e90 03F58873 		add	r3, r3, #272
 7726 0e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7727              		.loc 1 957 0
 7728 0e96 1433     		adds	r3, r3, #20
 7729 0e98 DAB2     		uxtb	r2, r3
 7730 0e9a 07F52573 		add	r3, r7, #660
 7731 0e9e 83F83820 		strb	r2, [r3, #56]
 7732 0ea2 97F89C34 		ldrb	r3, [r7, #1180]
 7733 0ea6 0A33     		adds	r3, r3, #10
 7734 0ea8 DAB2     		uxtb	r2, r3
 7735 0eaa 07F52573 		add	r3, r7, #660
 7736 0eae 83F83920 		strb	r2, [r3, #57]
 7737 0eb2 97F89C34 		ldrb	r3, [r7, #1180]
 7738 0eb6 0A33     		adds	r3, r3, #10
 7739 0eb8 DAB2     		uxtb	r2, r3
 7740 0eba 07F52573 		add	r3, r7, #660
 7741 0ebe 83F83A20 		strb	r2, [r3, #58]
 7742 0ec2 97F89C34 		ldrb	r3, [r7, #1180]
 7743 0ec6 0A33     		adds	r3, r3, #10
 7744 0ec8 DAB2     		uxtb	r2, r3
 7745 0eca 07F52573 		add	r3, r7, #660
 7746 0ece 83F83B20 		strb	r2, [r3, #59]
 7747 0ed2 97F89C34 		ldrb	r3, [r7, #1180]
 7748 0ed6 0A33     		adds	r3, r3, #10
 7749 0ed8 DAB2     		uxtb	r2, r3
 7750 0eda 07F52573 		add	r3, r7, #660
 7751 0ede 83F83C20 		strb	r2, [r3, #60]
 7752 0ee2 97F89C34 		ldrb	r3, [r7, #1180]
 7753 0ee6 0A33     		adds	r3, r3, #10
 7754 0ee8 DAB2     		uxtb	r2, r3
 7755 0eea 07F52573 		add	r3, r7, #660
 7756 0eee 83F83D20 		strb	r2, [r3, #61]
 7757 0ef2 97F89C34 		ldrb	r3, [r7, #1180]
 7758 0ef6 0A33     		adds	r3, r3, #10
 7759 0ef8 DAB2     		uxtb	r2, r3
 7760 0efa 07F52573 		add	r3, r7, #660
 7761 0efe 83F83E20 		strb	r2, [r3, #62]
 975:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7762              		.loc 1 975 0
 7763 0f02 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7764 0f06 D7F8A014 		ldr	r1, [r7, #1184]
 7765 0f0a 1346     		mov	r3, r2
 7766 0f0c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 180


 7767 0f0e 9B1A     		subs	r3, r3, r2
 7768 0f10 1B01     		lsls	r3, r3, #4
 7769 0f12 0B44     		add	r3, r3, r1
 7770 0f14 03F58873 		add	r3, r3, #272
 7771 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7772              		.loc 1 957 0
 7773 0f1a 1433     		adds	r3, r3, #20
 7774 0f1c DAB2     		uxtb	r2, r3
 7775 0f1e 07F52573 		add	r3, r7, #660
 7776 0f22 83F83F20 		strb	r2, [r3, #63]
 976:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 7777              		.loc 1 976 0
 7778 0f26 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7779 0f2a D7F8A014 		ldr	r1, [r7, #1184]
 7780 0f2e 1346     		mov	r3, r2
 7781 0f30 DB00     		lsls	r3, r3, #3
 7782 0f32 9B1A     		subs	r3, r3, r2
 7783 0f34 1B01     		lsls	r3, r3, #4
 7784 0f36 0B44     		add	r3, r3, r1
 7785 0f38 03F58873 		add	r3, r3, #272
 7786 0f3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7787              		.loc 1 957 0
 7788 0f3e 1433     		adds	r3, r3, #20
 7789 0f40 DAB2     		uxtb	r2, r3
 7790 0f42 07F52573 		add	r3, r7, #660
 7791 0f46 83F84020 		strb	r2, [r3, #64]
 7792 0f4a 07F52573 		add	r3, r7, #660
 7793 0f4e 1422     		movs	r2, #20
 7794 0f50 83F84120 		strb	r2, [r3, #65]
 7795 0f54 07F52573 		add	r3, r7, #660
 7796 0f58 1522     		movs	r2, #21
 7797 0f5a 83F84220 		strb	r2, [r3, #66]
 7798 0f5e 07F52573 		add	r3, r7, #660
 7799 0f62 3222     		movs	r2, #50
 7800 0f64 83F84320 		strb	r2, [r3, #67]
 7801 0f68 07F52573 		add	r3, r7, #660
 7802 0f6c 3222     		movs	r2, #50
 7803 0f6e 83F84420 		strb	r2, [r3, #68]
 7804 0f72 07F52573 		add	r3, r7, #660
 7805 0f76 3222     		movs	r2, #50
 7806 0f78 83F84520 		strb	r2, [r3, #69]
 7807 0f7c 07F52573 		add	r3, r7, #660
 7808 0f80 0022     		movs	r2, #0
 7809 0f82 83F84620 		strb	r2, [r3, #70]
 977:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_DEVICE
 978:..\src/command_processing.c ****     };
 979:..\src/command_processing.c ****     
 980:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 7810              		.loc 1 980 0
 7811 0f86 07F5BC73 		add	r3, r7, #376
 7812 0f8a CA4A     		ldr	r2, .L343
 7813 0f8c 1846     		mov	r0, r3
 7814 0f8e 1146     		mov	r1, r2
 7815 0f90 4FF48E73 		mov	r3, #284
 7816 0f94 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 181


 7817 0f96 FFF7FEFF 		bl	memcpy
 981:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 982:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 983:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 984:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
 985:..\src/command_processing.c ****         "17 - EMG max speed:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 -
 986:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
 987:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
 988:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
 989:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
 990:..\src/command_processing.c ****         
 991:..\src/command_processing.c ****         // GENERIC PARAMS
 992:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
 993:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
 994:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
 995:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
 996:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
 997:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
 998:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
 999:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1000:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Device type:"
1001:..\src/command_processing.c ****     };
1002:..\src/command_processing.c **** 
1003:..\src/command_processing.c ****     //Parameters menu
1004:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 7818              		.loc 1 1004 0
 7819 0f9a 07F58073 		add	r3, r7, #256
 7820 0f9e 0022     		movs	r2, #0
 7821 0fa0 1A60     		str	r2, [r3]
 7822 0fa2 0433     		adds	r3, r3, #4
 7823 0fa4 7222     		movs	r2, #114
 7824 0fa6 0021     		movs	r1, #0
 7825 0fa8 1846     		mov	r0, r3
 7826 0faa FFF7FEFF 		bl	memset
1005:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 7827              		.loc 1 1005 0
 7828 0fae 07F58070 		add	r0, r7, #256
 7829 0fb2 6423     		movs	r3, #100
 7830 0fb4 0A22     		movs	r2, #10
 7831 0fb6 C049     		ldr	r1, .L343+4
 7832 0fb8 FFF7FEFF 		bl	sprintf
1006:..\src/command_processing.c **** 
1007:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 7833              		.loc 1 1007 0
 7834 0fbc 07F1D803 		add	r3, r7, #216
 7835 0fc0 BE4A     		ldr	r2, .L343+8
 7836 0fc2 1A60     		str	r2, [r3]
 7837 0fc4 07F1D803 		add	r3, r7, #216
 7838 0fc8 BD4A     		ldr	r2, .L343+12
 7839 0fca 5A60     		str	r2, [r3, #4]
 7840 0fcc 07F1D803 		add	r3, r7, #216
 7841 0fd0 BC4A     		ldr	r2, .L343+16
 7842 0fd2 9A60     		str	r2, [r3, #8]
 7843 0fd4 07F1D803 		add	r3, r7, #216
 7844 0fd8 BB4A     		ldr	r2, .L343+20
 7845 0fda DA60     		str	r2, [r3, #12]
 7846 0fdc 07F1D803 		add	r3, r7, #216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 182


 7847 0fe0 BA4A     		ldr	r2, .L343+24
 7848 0fe2 1A61     		str	r2, [r3, #16]
 7849 0fe4 07F1D803 		add	r3, r7, #216
 7850 0fe8 B94A     		ldr	r2, .L343+28
 7851 0fea 5A61     		str	r2, [r3, #20]
 7852 0fec 07F1D803 		add	r3, r7, #216
 7853 0ff0 07F58072 		add	r2, r7, #256
 7854 0ff4 9A61     		str	r2, [r3, #24]
 7855 0ff6 07F1D803 		add	r3, r7, #216
 7856 0ffa B64A     		ldr	r2, .L343+32
 7857 0ffc DA61     		str	r2, [r3, #28]
 7858 0ffe 07F1D803 		add	r3, r7, #216
 7859 1002 B54A     		ldr	r2, .L343+36
 7860 1004 1A62     		str	r2, [r3, #32]
 7861 1006 07F1D803 		add	r3, r7, #216
 7862 100a B44A     		ldr	r2, .L343+40
 7863 100c 5A62     		str	r2, [r3, #36]
1008:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1009:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1010:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1011:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1012:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1013:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1014:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1015:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1016:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1017:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\nThe board will reset\n"                         
1018:..\src/command_processing.c ****     };   
1019:..\src/command_processing.c ****     
1020:..\src/command_processing.c ****     uint8 NUM_MENU[28] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 7864              		.loc 1 1020 0
 7865 100e 07F1BC03 		add	r3, r7, #188
 7866 1012 B34A     		ldr	r2, .L343+44
 7867 1014 1C46     		mov	r4, r3
 7868 1016 1546     		mov	r5, r2
 7869 1018 2868     		ldr	r0, [r5]	@ unaligned
 7870 101a 6968     		ldr	r1, [r5, #4]	@ unaligned
 7871 101c AA68     		ldr	r2, [r5, #8]	@ unaligned
 7872 101e EB68     		ldr	r3, [r5, #12]	@ unaligned
 7873 1020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7874 1022 2869     		ldr	r0, [r5, #16]	@ unaligned
 7875 1024 6969     		ldr	r1, [r5, #20]	@ unaligned
 7876 1026 AA69     		ldr	r2, [r5, #24]	@ unaligned
 7877 1028 07C4     		stmia	r4!, {r0, r1, r2}
1021:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 7878              		.loc 1 1021 0
 7879 102a 07F1B003 		add	r3, r7, #176
 7880 102e AD4A     		ldr	r2, .L343+48
 7881 1030 1068     		ldr	r0, [r2]	@ unaligned
 7882 1032 5168     		ldr	r1, [r2, #4]	@ unaligned
 7883 1034 03C3     		stmia	r3!, {r0, r1}
 7884 1036 127A     		ldrb	r2, [r2, #8]
 7885 1038 1A70     		strb	r2, [r3]
1022:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 7886              		.loc 1 1022 0
 7887 103a 07F19C03 		add	r3, r7, #156
 7888 103e AA4A     		ldr	r2, .L343+52
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 183


 7889 1040 1C46     		mov	r4, r3
 7890 1042 1546     		mov	r5, r2
 7891 1044 2868     		ldr	r0, [r5]	@ unaligned
 7892 1046 6968     		ldr	r1, [r5, #4]	@ unaligned
 7893 1048 AA68     		ldr	r2, [r5, #8]	@ unaligned
 7894 104a EB68     		ldr	r3, [r5, #12]	@ unaligned
 7895 104c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7896 104e 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 7897 1050 2380     		strh	r3, [r4]	@ unaligned
1023:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 7898              		.loc 1 1023 0
 7899 1052 2323     		movs	r3, #35
 7900 1054 87F89B34 		strb	r3, [r7, #1179]
1024:..\src/command_processing.c **** 
1025:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1026:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1027:..\src/command_processing.c ****     
1028:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1029:..\src/command_processing.c **** 
1030:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1031:..\src/command_processing.c ****     
1032:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1033:..\src/command_processing.c ****     j = 0;
 7901              		.loc 1 1033 0
 7902 1058 0023     		movs	r3, #0
 7903 105a 87F8A634 		strb	r3, [r7, #1190]
1034:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 7904              		.loc 1 1034 0
 7905 105e 0023     		movs	r3, #0
 7906 1060 87F8A734 		strb	r3, [r7, #1191]
 7907 1064 21E0     		b	.L277
 7908              	.L280:
1035:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7909              		.loc 1 1035 0
 7910 1066 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7911 106a 07F1B002 		add	r2, r7, #176
 7912 106e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7913 1070 1A46     		mov	r2, r3
 7914 1072 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7915 1076 0133     		adds	r3, r3, #1
 7916 1078 9A42     		cmp	r2, r3
 7917 107a 0BD1     		bne	.L278
1036:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 7918              		.loc 1 1036 0
 7919 107c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7920 1080 07F15402 		add	r2, r7, #84
 7921 1084 0121     		movs	r1, #1
 7922 1086 D154     		strb	r1, [r2, r3]
1037:..\src/command_processing.c ****             j++;
 7923              		.loc 1 1037 0
 7924 1088 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7925 108c 0133     		adds	r3, r3, #1
 7926 108e 87F8A634 		strb	r3, [r7, #1190]
 7927 1092 05E0     		b	.L279
 7928              	.L278:
1038:..\src/command_processing.c ****         }
1039:..\src/command_processing.c ****         else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 184


1040:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 7929              		.loc 1 1040 0
 7930 1094 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7931 1098 07F15402 		add	r2, r7, #84
 7932 109c 0021     		movs	r1, #0
 7933 109e D154     		strb	r1, [r2, r3]
 7934              	.L279:
1034:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7935              		.loc 1 1034 0 discriminator 2
 7936 10a0 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7937 10a4 0133     		adds	r3, r3, #1
 7938 10a6 87F8A734 		strb	r3, [r7, #1191]
 7939              	.L277:
1034:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7940              		.loc 1 1034 0 is_stmt 0 discriminator 1
 7941 10aa 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7942 10ae 462B     		cmp	r3, #70
 7943 10b0 D9D9     		bls	.L280
1041:..\src/command_processing.c ****         }
1042:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1043:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1044:..\src/command_processing.c ****     j = 0;
 7944              		.loc 1 1044 0 is_stmt 1
 7945 10b2 0023     		movs	r3, #0
 7946 10b4 87F8A634 		strb	r3, [r7, #1190]
1045:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 7947              		.loc 1 1045 0
 7948 10b8 0023     		movs	r3, #0
 7949 10ba 87F8A734 		strb	r3, [r7, #1191]
 7950 10be 21E0     		b	.L281
 7951              	.L284:
1046:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7952              		.loc 1 1046 0
 7953 10c0 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7954 10c4 07F19C02 		add	r2, r7, #156
 7955 10c8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7956 10ca 1A46     		mov	r2, r3
 7957 10cc 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7958 10d0 0133     		adds	r3, r3, #1
 7959 10d2 9A42     		cmp	r2, r3
 7960 10d4 0BD1     		bne	.L282
1047:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 7961              		.loc 1 1047 0
 7962 10d6 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7963 10da 07F10C02 		add	r2, r7, #12
 7964 10de 0121     		movs	r1, #1
 7965 10e0 D154     		strb	r1, [r2, r3]
1048:..\src/command_processing.c ****             j++;
 7966              		.loc 1 1048 0
 7967 10e2 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7968 10e6 0133     		adds	r3, r3, #1
 7969 10e8 87F8A634 		strb	r3, [r7, #1190]
 7970 10ec 05E0     		b	.L283
 7971              	.L282:
1049:..\src/command_processing.c ****         }
1050:..\src/command_processing.c ****         else {
1051:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 185


 7972              		.loc 1 1051 0
 7973 10ee 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7974 10f2 07F10C02 		add	r2, r7, #12
 7975 10f6 0021     		movs	r1, #0
 7976 10f8 D154     		strb	r1, [r2, r3]
 7977              	.L283:
1045:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7978              		.loc 1 1045 0 discriminator 2
 7979 10fa 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7980 10fe 0133     		adds	r3, r3, #1
 7981 1100 87F8A734 		strb	r3, [r7, #1191]
 7982              	.L281:
1045:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7983              		.loc 1 1045 0 is_stmt 0 discriminator 1
 7984 1104 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7985 1108 462B     		cmp	r3, #70
 7986 110a D9D9     		bls	.L284
1052:..\src/command_processing.c ****         }
1053:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1054:..\src/command_processing.c ****         
1055:..\src/command_processing.c ****     if (!index) {
 7987              		.loc 1 1055 0 is_stmt 1
 7988 110c BB1D     		adds	r3, r7, #6
 7989 110e 1B88     		ldrh	r3, [r3]
 7990 1110 002B     		cmp	r3, #0
 7991 1112 17D1     		bne	.L285
1056:..\src/command_processing.c ****         // Get parameters list with relative types
1057:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 7992              		.loc 1 1057 0
 7993 1114 07F52574 		add	r4, r7, #660
 7994 1118 07F53772 		add	r2, r7, #732
 7995 111c 07F54971 		add	r1, r7, #804
 7996 1120 07F55B70 		add	r0, r7, #876
 7997 1124 07F1D803 		add	r3, r7, #216
 7998 1128 0393     		str	r3, [sp, #12]
 7999 112a 07F15403 		add	r3, r7, #84
 8000 112e 0293     		str	r3, [sp, #8]
 8001 1130 07F5BC73 		add	r3, r7, #376
 8002 1134 0193     		str	r3, [sp, #4]
 8003 1136 07F1BC03 		add	r3, r7, #188
 8004 113a 0093     		str	r3, [sp]
 8005 113c 2346     		mov	r3, r4
 8006 113e FFF7FEFF 		bl	get_param_list
1058:..\src/command_processing.c ****     }
1059:..\src/command_processing.c ****     else {
1060:..\src/command_processing.c ****         // Set specific parameter        
1061:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1062:..\src/command_processing.c ****         
1063:..\src/command_processing.c ****         // Find size of data
1064:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1065:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1066:..\src/command_processing.c ****                 sod = 1; break;
1067:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1068:..\src/command_processing.c ****                 sod = 2; break;
1069:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1070:..\src/command_processing.c ****                 sod = 4; break;
1071:..\src/command_processing.c ****         }   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 186


1072:..\src/command_processing.c ****             
1073:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1074:..\src/command_processing.c ****             // Use default specifications for param setting
1075:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1076:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1077:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1078:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1079:..\src/command_processing.c ****                     }
1080:..\src/command_processing.c ****                     break;                
1081:..\src/command_processing.c ****                 case TYPE_STRING:
1082:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1083:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1084:..\src/command_processing.c ****                     }
1085:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1086:..\src/command_processing.c ****                 break; 
1087:..\src/command_processing.c ****                 case TYPE_INT8:
1088:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1089:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1090:..\src/command_processing.c ****                     }
1091:..\src/command_processing.c ****                     break;                    
1092:..\src/command_processing.c ****                 case TYPE_INT16:
1093:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1094:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1095:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1096:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1097:..\src/command_processing.c ****                         }
1098:..\src/command_processing.c ****                     }                   
1099:..\src/command_processing.c ****                     break;
1100:..\src/command_processing.c ****                 case TYPE_UINT16:
1101:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1102:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1103:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1104:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1105:..\src/command_processing.c ****                         }
1106:..\src/command_processing.c ****                     }
1107:..\src/command_processing.c ****                     break;
1108:..\src/command_processing.c ****                 case TYPE_INT32:
1109:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1110:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1111:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1112:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1113:..\src/command_processing.c ****                         }
1114:..\src/command_processing.c ****                     }
1115:..\src/command_processing.c ****                     break;
1116:..\src/command_processing.c ****                 case TYPE_UINT32:
1117:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1118:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1119:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1120:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1121:..\src/command_processing.c ****                         }
1122:..\src/command_processing.c ****                     }
1123:..\src/command_processing.c ****                     break;
1124:..\src/command_processing.c ****                 case TYPE_FLOAT:
1125:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1126:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1127:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1128:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 187


1129:..\src/command_processing.c ****                         }
1130:..\src/command_processing.c ****                     }
1131:..\src/command_processing.c ****                     break;
1132:..\src/command_processing.c ****                 default:
1133:..\src/command_processing.c ****                     break;
1134:..\src/command_processing.c ****             }
1135:..\src/command_processing.c ****         }
1136:..\src/command_processing.c ****         else {  
1137:..\src/command_processing.c ****             // Use custom specifications for param setting
1138:..\src/command_processing.c ****             set_custom_param(index);
1139:..\src/command_processing.c ****         }
1140:..\src/command_processing.c ****         
1141:..\src/command_processing.c ****         // Store param also in user_emg structure
1142:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1143:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1144:..\src/command_processing.c ****         }
1145:..\src/command_processing.c ****         
1146:..\src/command_processing.c ****         // Perform chip reset if needed
1147:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1148:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1149:..\src/command_processing.c ****             do {
1150:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1151:..\src/command_processing.c ****                 idx++;
1152:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1153:..\src/command_processing.c ****             
1154:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1155:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1156:..\src/command_processing.c ****             }   
1157:..\src/command_processing.c ****         }
1158:..\src/command_processing.c ****     }
1159:..\src/command_processing.c **** } 
 8007              		.loc 1 1159 0
 8008 1142 D9E2     		b	.L336
 8009              	.L285:
1061:..\src/command_processing.c ****         
 8010              		.loc 1 1061 0
 8011 1144 BB1D     		adds	r3, r7, #6
 8012 1146 1B88     		ldrh	r3, [r3]	@ movhi
 8013 1148 DBB2     		uxtb	r3, r3
 8014 114a 013B     		subs	r3, r3, #1
 8015 114c 87F89A34 		strb	r3, [r7, #1178]
1064:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8016              		.loc 1 1064 0
 8017 1150 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8018 1154 07F54972 		add	r2, r7, #804
 8019 1158 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8020 115a 092B     		cmp	r3, #9
 8021 115c 22D8     		bhi	.L287
 8022 115e 01A2     		adr	r2, .L289
 8023 1160 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8024              		.p2align 2
 8025              	.L289:
 8026 1164 8D110000 		.word	.L288+1
 8027 1168 8D110000 		.word	.L288+1
 8028 116c 8D110000 		.word	.L288+1
 8029 1170 95110000 		.word	.L290+1
 8030 1174 95110000 		.word	.L290+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 188


 8031 1178 9D110000 		.word	.L291+1
 8032 117c 9D110000 		.word	.L291+1
 8033 1180 9D110000 		.word	.L291+1
 8034 1184 A5110000 		.word	.L287+1
 8035 1188 8D110000 		.word	.L288+1
 8036              		.p2align 1
 8037              	.L288:
1066:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8038              		.loc 1 1066 0
 8039 118c 0123     		movs	r3, #1
 8040 118e 87F8A534 		strb	r3, [r7, #1189]
 8041 1192 07E0     		b	.L287
 8042              	.L290:
1068:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8043              		.loc 1 1068 0
 8044 1194 0223     		movs	r3, #2
 8045 1196 87F8A534 		strb	r3, [r7, #1189]
 8046 119a 03E0     		b	.L287
 8047              	.L291:
1070:..\src/command_processing.c ****         }   
 8048              		.loc 1 1070 0
 8049 119c 0423     		movs	r3, #4
 8050 119e 87F8A534 		strb	r3, [r7, #1189]
 8051 11a2 00BF     		nop
 8052              	.L287:
1073:..\src/command_processing.c ****             // Use default specifications for param setting
 8053              		.loc 1 1073 0
 8054 11a4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8055 11a8 07F10C02 		add	r2, r7, #12
 8056 11ac D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8057 11ae 002B     		cmp	r3, #0
 8058 11b0 40F03682 		bne	.L292
1075:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8059              		.loc 1 1075 0
 8060 11b4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8061 11b8 07F54972 		add	r2, r7, #804
 8062 11bc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8063 11be 092B     		cmp	r3, #9
 8064 11c0 00F23682 		bhi	.L335
 8065 11c4 01A2     		adr	r2, .L295
 8066 11c6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8067 11ca 00BF     		.p2align 2
 8068              	.L295:
 8069 11cc F5110000 		.word	.L294+1
 8070 11d0 AB120000 		.word	.L296+1
 8071 11d4 F5110000 		.word	.L294+1
 8072 11d8 3B130000 		.word	.L297+1
 8073 11dc D1130000 		.word	.L298+1
 8074 11e0 65140000 		.word	.L299+1
 8075 11e4 F9140000 		.word	.L300+1
 8076 11e8 8D150000 		.word	.L301+1
 8077 11ec 31160000 		.word	.L335+1
 8078 11f0 41120000 		.word	.L302+1
 8079              		.p2align 1
 8080              	.L294:
1077:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8081              		.loc 1 1077 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 189


 8082 11f4 0023     		movs	r3, #0
 8083 11f6 87F8A734 		strb	r3, [r7, #1191]
 8084 11fa 17E0     		b	.L303
 8085              	.L304:
1078:..\src/command_processing.c ****                     }
 8086              		.loc 1 1078 0 discriminator 3
 8087 11fc 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8088 1200 07F55B73 		add	r3, r7, #876
 8089 1204 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8090 1208 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8091 120c 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8092 1210 01FB02F2 		mul	r2, r1, r2
 8093 1214 1344     		add	r3, r3, r2
 8094 1216 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8095 121a 0332     		adds	r2, r2, #3
 8096 121c 3349     		ldr	r1, .L343+56
 8097 121e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8098 1220 1A70     		strb	r2, [r3]
1077:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8099              		.loc 1 1077 0 discriminator 3
 8100 1222 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8101 1226 0133     		adds	r3, r3, #1
 8102 1228 87F8A734 		strb	r3, [r7, #1191]
 8103              	.L303:
1077:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8104              		.loc 1 1077 0 is_stmt 0 discriminator 1
 8105 122c 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8106 1230 07F53772 		add	r2, r7, #732
 8107 1234 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8108 1236 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8109 123a 9A42     		cmp	r2, r3
 8110 123c DED3     		bcc	.L304
1080:..\src/command_processing.c ****                 case TYPE_STRING:
 8111              		.loc 1 1080 0 is_stmt 1
 8112 123e F8E1     		b	.L330
 8113              	.L302:
1082:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8114              		.loc 1 1082 0
 8115 1240 0023     		movs	r3, #0
 8116 1242 87F8A734 		strb	r3, [r7, #1191]
 8117 1246 17E0     		b	.L306
 8118              	.L307:
1083:..\src/command_processing.c ****                     }
 8119              		.loc 1 1083 0 discriminator 3
 8120 1248 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8121 124c 07F55B73 		add	r3, r7, #876
 8122 1250 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8123 1254 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8124 1258 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8125 125c 01FB02F2 		mul	r2, r1, r2
 8126 1260 1344     		add	r3, r3, r2
 8127 1262 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8128 1266 0332     		adds	r2, r2, #3
 8129 1268 2049     		ldr	r1, .L343+56
 8130 126a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8131 126c 1A70     		strb	r2, [r3]
1082:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 190


 8132              		.loc 1 1082 0 discriminator 3
 8133 126e 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8134 1272 0133     		adds	r3, r3, #1
 8135 1274 87F8A734 		strb	r3, [r7, #1191]
 8136              	.L306:
1082:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8137              		.loc 1 1082 0 is_stmt 0 discriminator 1
 8138 1278 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8139 127c 07F53772 		add	r2, r7, #732
 8140 1280 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8141 1282 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8142 1286 9A42     		cmp	r2, r3
 8143 1288 DED3     		bcc	.L307
1085:..\src/command_processing.c ****                 break; 
 8144              		.loc 1 1085 0 is_stmt 1
 8145 128a 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8146 128e 07F55B73 		add	r3, r7, #876
 8147 1292 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8148 1296 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8149 129a 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8150 129e 01FB02F2 		mul	r2, r1, r2
 8151 12a2 1344     		add	r3, r3, r2
 8152 12a4 0022     		movs	r2, #0
 8153 12a6 1A70     		strb	r2, [r3]
1086:..\src/command_processing.c ****                 case TYPE_INT8:
 8154              		.loc 1 1086 0
 8155 12a8 C3E1     		b	.L330
 8156              	.L296:
1088:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8157              		.loc 1 1088 0
 8158 12aa 0023     		movs	r3, #0
 8159 12ac 87F8A734 		strb	r3, [r7, #1191]
 8160 12b0 39E0     		b	.L308
 8161              	.L344:
 8162 12b2 00BF     		.align	2
 8163              	.L343:
 8164 12b4 940B0000 		.word	.LC105
 8165 12b8 7C010000 		.word	.LC106
 8166 12bc F0010000 		.word	.LC107
 8167 12c0 54020000 		.word	.LC108
 8168 12c4 94020000 		.word	.LC109
 8169 12c8 C0020000 		.word	.LC110
 8170 12cc D8020000 		.word	.LC111
 8171 12d0 00030000 		.word	.LC112
 8172 12d4 5C030000 		.word	.LC113
 8173 12d8 9C030000 		.word	.LC114
 8174 12dc E4030000 		.word	.LC115
 8175 12e0 B00C0000 		.word	.LC73
 8176 12e4 CC0C0000 		.word	.LC74
 8177 12e8 D80C0000 		.word	.LC75
 8178 12ec 00000000 		.word	g_rx
 8179              	.L309:
1089:..\src/command_processing.c ****                     }
 8180              		.loc 1 1089 0 discriminator 3
 8181 12f0 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8182 12f4 07F55B73 		add	r3, r7, #876
 8183 12f8 53F82230 		ldr	r3, [r3, r2, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 191


 8184 12fc 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8185 1300 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8186 1304 01FB02F2 		mul	r2, r1, r2
 8187 1308 1344     		add	r3, r3, r2
 8188 130a 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8189 130e 0332     		adds	r2, r2, #3
 8190 1310 C649     		ldr	r1, .L345
 8191 1312 0A44     		add	r2, r2, r1
 8192 1314 92F90020 		ldrsb	r2, [r2]
 8193 1318 D2B2     		uxtb	r2, r2
 8194 131a 1A70     		strb	r2, [r3]
1088:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8195              		.loc 1 1088 0 discriminator 3
 8196 131c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8197 1320 0133     		adds	r3, r3, #1
 8198 1322 87F8A734 		strb	r3, [r7, #1191]
 8199              	.L308:
1088:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8200              		.loc 1 1088 0 is_stmt 0 discriminator 1
 8201 1326 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8202 132a 07F53772 		add	r2, r7, #732
 8203 132e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8204 1330 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8205 1334 9A42     		cmp	r2, r3
 8206 1336 DBD3     		bcc	.L309
1091:..\src/command_processing.c ****                 case TYPE_INT16:
 8207              		.loc 1 1091 0 is_stmt 1
 8208 1338 7BE1     		b	.L330
 8209              	.L297:
1093:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8210              		.loc 1 1093 0
 8211 133a 0023     		movs	r3, #0
 8212 133c 87F8A734 		strb	r3, [r7, #1191]
 8213 1340 3CE0     		b	.L310
 8214              	.L313:
1094:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8215              		.loc 1 1094 0
 8216 1342 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8217 1346 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 8218 134a 02FB03F3 		mul	r3, r2, r3
 8219 134e 0333     		adds	r3, r3, #3
 8220 1350 B64A     		ldr	r2, .L345
 8221 1352 1344     		add	r3, r3, r2
 8222 1354 B3F90030 		ldrsh	r3, [r3]
 8223 1358 A7F89834 		strh	r3, [r7, #1176]	@ movhi
1095:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8224              		.loc 1 1095 0
 8225 135c 0023     		movs	r3, #0
 8226 135e 87F8A634 		strb	r3, [r7, #1190]
 8227 1362 20E0     		b	.L311
 8228              	.L312:
1096:..\src/command_processing.c ****                         }
 8229              		.loc 1 1096 0 discriminator 3
 8230 1364 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8231 1368 07F55B73 		add	r3, r7, #876
 8232 136c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8233 1370 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 192


 8234 1374 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8235 1378 01FB03F3 		mul	r3, r1, r3
 8236 137c 1846     		mov	r0, r3
 8237 137e 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8238 1382 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8239 1386 CB1A     		subs	r3, r1, r3
 8240 1388 0344     		add	r3, r3, r0
 8241 138a 013B     		subs	r3, r3, #1
 8242 138c 1344     		add	r3, r3, r2
 8243 138e 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8244 1392 07F59361 		add	r1, r7, #1176
 8245 1396 0A44     		add	r2, r2, r1
 8246 1398 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8247 139a 1A70     		strb	r2, [r3]
1095:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8248              		.loc 1 1095 0 discriminator 3
 8249 139c 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8250 13a0 0133     		adds	r3, r3, #1
 8251 13a2 87F8A634 		strb	r3, [r7, #1190]
 8252              	.L311:
1095:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8253              		.loc 1 1095 0 is_stmt 0 discriminator 1
 8254 13a6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8255 13aa 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 8256 13ae 9A42     		cmp	r2, r3
 8257 13b0 D8D3     		bcc	.L312
1093:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8258              		.loc 1 1093 0 is_stmt 1 discriminator 2
 8259 13b2 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8260 13b6 0133     		adds	r3, r3, #1
 8261 13b8 87F8A734 		strb	r3, [r7, #1191]
 8262              	.L310:
1093:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8263              		.loc 1 1093 0 is_stmt 0 discriminator 1
 8264 13bc 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8265 13c0 07F53772 		add	r2, r7, #732
 8266 13c4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8267 13c6 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8268 13ca 9A42     		cmp	r2, r3
 8269 13cc B9D3     		bcc	.L313
1099:..\src/command_processing.c ****                 case TYPE_UINT16:
 8270              		.loc 1 1099 0 is_stmt 1
 8271 13ce 30E1     		b	.L330
 8272              	.L298:
1101:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8273              		.loc 1 1101 0
 8274 13d0 0023     		movs	r3, #0
 8275 13d2 87F8A734 		strb	r3, [r7, #1191]
 8276 13d6 3BE0     		b	.L314
 8277              	.L317:
1102:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8278              		.loc 1 1102 0
 8279 13d8 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8280 13dc 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 8281 13e0 02FB03F3 		mul	r3, r2, r3
 8282 13e4 0333     		adds	r3, r3, #3
 8283 13e6 914A     		ldr	r2, .L345
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 193


 8284 13e8 1344     		add	r3, r3, r2
 8285 13ea 1B88     		ldrh	r3, [r3]
 8286 13ec A7F89634 		strh	r3, [r7, #1174]	@ movhi
1103:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8287              		.loc 1 1103 0
 8288 13f0 0023     		movs	r3, #0
 8289 13f2 87F8A634 		strb	r3, [r7, #1190]
 8290 13f6 20E0     		b	.L315
 8291              	.L316:
1104:..\src/command_processing.c ****                         }
 8292              		.loc 1 1104 0 discriminator 3
 8293 13f8 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8294 13fc 07F55B73 		add	r3, r7, #876
 8295 1400 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8296 1404 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8297 1408 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8298 140c 01FB03F3 		mul	r3, r1, r3
 8299 1410 1846     		mov	r0, r3
 8300 1412 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8301 1416 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8302 141a CB1A     		subs	r3, r1, r3
 8303 141c 0344     		add	r3, r3, r0
 8304 141e 013B     		subs	r3, r3, #1
 8305 1420 1344     		add	r3, r3, r2
 8306 1422 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8307 1426 07F29641 		addw	r1, r7, #1174
 8308 142a 0A44     		add	r2, r2, r1
 8309 142c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8310 142e 1A70     		strb	r2, [r3]
1103:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8311              		.loc 1 1103 0 discriminator 3
 8312 1430 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8313 1434 0133     		adds	r3, r3, #1
 8314 1436 87F8A634 		strb	r3, [r7, #1190]
 8315              	.L315:
1103:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8316              		.loc 1 1103 0 is_stmt 0 discriminator 1
 8317 143a 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8318 143e 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 8319 1442 9A42     		cmp	r2, r3
 8320 1444 D8D3     		bcc	.L316
1101:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8321              		.loc 1 1101 0 is_stmt 1 discriminator 2
 8322 1446 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8323 144a 0133     		adds	r3, r3, #1
 8324 144c 87F8A734 		strb	r3, [r7, #1191]
 8325              	.L314:
1101:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8326              		.loc 1 1101 0 is_stmt 0 discriminator 1
 8327 1450 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8328 1454 07F53772 		add	r2, r7, #732
 8329 1458 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8330 145a 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8331 145e 9A42     		cmp	r2, r3
 8332 1460 BAD3     		bcc	.L317
1107:..\src/command_processing.c ****                 case TYPE_INT32:
 8333              		.loc 1 1107 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 194


 8334 1462 E6E0     		b	.L330
 8335              	.L299:
1109:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8336              		.loc 1 1109 0
 8337 1464 0023     		movs	r3, #0
 8338 1466 87F8A734 		strb	r3, [r7, #1191]
 8339 146a 3BE0     		b	.L318
 8340              	.L321:
1110:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8341              		.loc 1 1110 0
 8342 146c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8343 1470 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 8344 1474 02FB03F3 		mul	r3, r2, r3
 8345 1478 0333     		adds	r3, r3, #3
 8346 147a 6C4A     		ldr	r2, .L345
 8347 147c 1344     		add	r3, r3, r2
 8348 147e 1B68     		ldr	r3, [r3]
 8349 1480 C7F89034 		str	r3, [r7, #1168]
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8350              		.loc 1 1111 0
 8351 1484 0023     		movs	r3, #0
 8352 1486 87F8A634 		strb	r3, [r7, #1190]
 8353 148a 20E0     		b	.L319
 8354              	.L320:
1112:..\src/command_processing.c ****                         }
 8355              		.loc 1 1112 0 discriminator 3
 8356 148c 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8357 1490 07F55B73 		add	r3, r7, #876
 8358 1494 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8359 1498 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8360 149c 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8361 14a0 01FB03F3 		mul	r3, r1, r3
 8362 14a4 1846     		mov	r0, r3
 8363 14a6 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8364 14aa 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8365 14ae CB1A     		subs	r3, r1, r3
 8366 14b0 0344     		add	r3, r3, r0
 8367 14b2 013B     		subs	r3, r3, #1
 8368 14b4 1344     		add	r3, r3, r2
 8369 14b6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8370 14ba 07F59261 		add	r1, r7, #1168
 8371 14be 0A44     		add	r2, r2, r1
 8372 14c0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8373 14c2 1A70     		strb	r2, [r3]
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8374              		.loc 1 1111 0 discriminator 3
 8375 14c4 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8376 14c8 0133     		adds	r3, r3, #1
 8377 14ca 87F8A634 		strb	r3, [r7, #1190]
 8378              	.L319:
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8379              		.loc 1 1111 0 is_stmt 0 discriminator 1
 8380 14ce 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8381 14d2 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 8382 14d6 9A42     		cmp	r2, r3
 8383 14d8 D8D3     		bcc	.L320
1109:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 195


 8384              		.loc 1 1109 0 is_stmt 1 discriminator 2
 8385 14da 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8386 14de 0133     		adds	r3, r3, #1
 8387 14e0 87F8A734 		strb	r3, [r7, #1191]
 8388              	.L318:
1109:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8389              		.loc 1 1109 0 is_stmt 0 discriminator 1
 8390 14e4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8391 14e8 07F53772 		add	r2, r7, #732
 8392 14ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8393 14ee 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8394 14f2 9A42     		cmp	r2, r3
 8395 14f4 BAD3     		bcc	.L321
1115:..\src/command_processing.c ****                 case TYPE_UINT32:
 8396              		.loc 1 1115 0 is_stmt 1
 8397 14f6 9CE0     		b	.L330
 8398              	.L300:
1117:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8399              		.loc 1 1117 0
 8400 14f8 0023     		movs	r3, #0
 8401 14fa 87F8A734 		strb	r3, [r7, #1191]
 8402 14fe 3BE0     		b	.L322
 8403              	.L325:
1118:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8404              		.loc 1 1118 0
 8405 1500 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8406 1504 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 8407 1508 02FB03F3 		mul	r3, r2, r3
 8408 150c 0333     		adds	r3, r3, #3
 8409 150e 474A     		ldr	r2, .L345
 8410 1510 1344     		add	r3, r3, r2
 8411 1512 1B68     		ldr	r3, [r3]
 8412 1514 C7F88C34 		str	r3, [r7, #1164]
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8413              		.loc 1 1119 0
 8414 1518 0023     		movs	r3, #0
 8415 151a 87F8A634 		strb	r3, [r7, #1190]
 8416 151e 20E0     		b	.L323
 8417              	.L324:
1120:..\src/command_processing.c ****                         }
 8418              		.loc 1 1120 0 discriminator 3
 8419 1520 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8420 1524 07F55B73 		add	r3, r7, #876
 8421 1528 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8422 152c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8423 1530 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8424 1534 01FB03F3 		mul	r3, r1, r3
 8425 1538 1846     		mov	r0, r3
 8426 153a 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8427 153e 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8428 1542 CB1A     		subs	r3, r1, r3
 8429 1544 0344     		add	r3, r3, r0
 8430 1546 013B     		subs	r3, r3, #1
 8431 1548 1344     		add	r3, r3, r2
 8432 154a 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8433 154e 07F28C41 		addw	r1, r7, #1164
 8434 1552 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 196


 8435 1554 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8436 1556 1A70     		strb	r2, [r3]
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8437              		.loc 1 1119 0 discriminator 3
 8438 1558 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8439 155c 0133     		adds	r3, r3, #1
 8440 155e 87F8A634 		strb	r3, [r7, #1190]
 8441              	.L323:
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8442              		.loc 1 1119 0 is_stmt 0 discriminator 1
 8443 1562 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8444 1566 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 8445 156a 9A42     		cmp	r2, r3
 8446 156c D8D3     		bcc	.L324
1117:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8447              		.loc 1 1117 0 is_stmt 1 discriminator 2
 8448 156e 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8449 1572 0133     		adds	r3, r3, #1
 8450 1574 87F8A734 		strb	r3, [r7, #1191]
 8451              	.L322:
1117:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8452              		.loc 1 1117 0 is_stmt 0 discriminator 1
 8453 1578 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8454 157c 07F53772 		add	r2, r7, #732
 8455 1580 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8456 1582 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8457 1586 9A42     		cmp	r2, r3
 8458 1588 BAD3     		bcc	.L325
1123:..\src/command_processing.c ****                 case TYPE_FLOAT:
 8459              		.loc 1 1123 0 is_stmt 1
 8460 158a 52E0     		b	.L330
 8461              	.L301:
1125:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8462              		.loc 1 1125 0
 8463 158c 0023     		movs	r3, #0
 8464 158e 87F8A734 		strb	r3, [r7, #1191]
 8465 1592 3BE0     		b	.L326
 8466              	.L329:
1126:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8467              		.loc 1 1126 0
 8468 1594 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8469 1598 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 8470 159c 02FB03F3 		mul	r3, r2, r3
 8471 15a0 0333     		adds	r3, r3, #3
 8472 15a2 224A     		ldr	r2, .L345
 8473 15a4 1344     		add	r3, r3, r2
 8474 15a6 1B68     		ldr	r3, [r3]	@ float
 8475 15a8 C7F88834 		str	r3, [r7, #1160]	@ float
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8476              		.loc 1 1127 0
 8477 15ac 0023     		movs	r3, #0
 8478 15ae 87F8A634 		strb	r3, [r7, #1190]
 8479 15b2 20E0     		b	.L327
 8480              	.L328:
1128:..\src/command_processing.c ****                         }
 8481              		.loc 1 1128 0 discriminator 3
 8482 15b4 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 197


 8483 15b8 07F55B73 		add	r3, r7, #876
 8484 15bc 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8485 15c0 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8486 15c4 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8487 15c8 01FB03F3 		mul	r3, r1, r3
 8488 15cc 1846     		mov	r0, r3
 8489 15ce 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8490 15d2 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8491 15d6 CB1A     		subs	r3, r1, r3
 8492 15d8 0344     		add	r3, r3, r0
 8493 15da 013B     		subs	r3, r3, #1
 8494 15dc 1344     		add	r3, r3, r2
 8495 15de 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8496 15e2 07F59161 		add	r1, r7, #1160
 8497 15e6 0A44     		add	r2, r2, r1
 8498 15e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8499 15ea 1A70     		strb	r2, [r3]
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8500              		.loc 1 1127 0 discriminator 3
 8501 15ec 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8502 15f0 0133     		adds	r3, r3, #1
 8503 15f2 87F8A634 		strb	r3, [r7, #1190]
 8504              	.L327:
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8505              		.loc 1 1127 0 is_stmt 0 discriminator 1
 8506 15f6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8507 15fa 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 8508 15fe 9A42     		cmp	r2, r3
 8509 1600 D8D3     		bcc	.L328
1125:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8510              		.loc 1 1125 0 is_stmt 1 discriminator 2
 8511 1602 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8512 1606 0133     		adds	r3, r3, #1
 8513 1608 87F8A734 		strb	r3, [r7, #1191]
 8514              	.L326:
1125:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8515              		.loc 1 1125 0 is_stmt 0 discriminator 1
 8516 160c 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8517 1610 07F53772 		add	r2, r7, #732
 8518 1614 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8519 1616 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8520 161a 9A42     		cmp	r2, r3
 8521 161c BAD3     		bcc	.L329
1131:..\src/command_processing.c ****                 default:
 8522              		.loc 1 1131 0 is_stmt 1
 8523 161e 08E0     		b	.L330
 8524              	.L292:
1138:..\src/command_processing.c ****         }
 8525              		.loc 1 1138 0
 8526 1620 BB1D     		adds	r3, r7, #6
 8527 1622 1B88     		ldrh	r3, [r3]
 8528 1624 1846     		mov	r0, r3
 8529 1626 FFF7FEFF 		bl	set_custom_param
 8530 162a 02E0     		b	.L330
 8531              	.L346:
 8532              		.align	2
 8533              	.L345:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 198


 8534 162c 00000000 		.word	g_rx
 8535              	.L335:
1133:..\src/command_processing.c ****             }
 8536              		.loc 1 1133 0
 8537 1630 00BF     		nop
 8538              	.L330:
1142:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 8539              		.loc 1 1142 0
 8540 1632 97F89B34 		ldrb	r3, [r7, #1179]	@ zero_extendqisi2
 8541 1636 9BB2     		uxth	r3, r3
 8542 1638 BA1D     		adds	r2, r7, #6
 8543 163a 1288     		ldrh	r2, [r2]
 8544 163c 9A42     		cmp	r2, r3
 8545 163e 11D0     		beq	.L331
1143:..\src/command_processing.c ****         }
 8546              		.loc 1 1143 0
 8547 1640 D7F8A034 		ldr	r3, [r7, #1184]
 8548 1644 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 8549 1648 5B01     		lsls	r3, r3, #5
 8550 164a 03F51273 		add	r3, r3, #584
 8551 164e D7F8A024 		ldr	r2, [r7, #1184]
 8552 1652 D018     		adds	r0, r2, r3
 8553 1654 D7F8A034 		ldr	r3, [r7, #1184]
 8554 1658 03F5F873 		add	r3, r3, #496
 8555 165c 1022     		movs	r2, #16
 8556 165e 1946     		mov	r1, r3
 8557 1660 FFF7FEFF 		bl	memcpy
 8558              	.L331:
1147:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 8559              		.loc 1 1147 0
 8560 1664 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8561 1668 07F54972 		add	r2, r7, #804
 8562 166c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8563 166e 002B     		cmp	r3, #0
 8564 1670 42D1     		bne	.L336
 8565              	.LBB14:
1148:..\src/command_processing.c ****             do {
 8566              		.loc 1 1148 0
 8567 1672 0023     		movs	r3, #0
 8568 1674 87F89F34 		strb	r3, [r7, #1183]
 8569 1678 FF23     		movs	r3, #255
 8570 167a 87F89E34 		strb	r3, [r7, #1182]
 8571              	.L333:
1150:..\src/command_processing.c ****                 idx++;
 8572              		.loc 1 1150 0
 8573 167e 97F89F34 		ldrb	r3, [r7, #1183]	@ zero_extendqisi2
 8574 1682 07F54972 		add	r2, r7, #804
 8575 1686 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8576 1688 002B     		cmp	r3, #0
 8577 168a 04D1     		bne	.L332
1150:..\src/command_processing.c ****                 idx++;
 8578              		.loc 1 1150 0 is_stmt 0 discriminator 1
 8579 168c 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8580 1690 0133     		adds	r3, r3, #1
 8581 1692 87F89E34 		strb	r3, [r7, #1182]
 8582              	.L332:
1151:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 199


 8583              		.loc 1 1151 0 is_stmt 1
 8584 1696 97F89F34 		ldrb	r3, [r7, #1183]	@ zero_extendqisi2
 8585 169a 0133     		adds	r3, r3, #1
 8586 169c 87F89F34 		strb	r3, [r7, #1183]
1152:..\src/command_processing.c ****             
 8587              		.loc 1 1152 0
 8588 16a0 97F89F24 		ldrb	r2, [r7, #1183]	@ zero_extendqisi2
 8589 16a4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8590 16a8 9A42     		cmp	r2, r3
 8591 16aa E8D9     		bls	.L333
1154:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8592              		.loc 1 1154 0
 8593 16ac 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8594 16b0 07F1BC02 		add	r2, r7, #188
 8595 16b4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8596 16b6 052B     		cmp	r3, #5
 8597 16b8 1BD0     		beq	.L334
1154:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8598              		.loc 1 1154 0 is_stmt 0 discriminator 1
 8599 16ba 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8600 16be 07F1BC02 		add	r2, r7, #188
 8601 16c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8602 16c4 062B     		cmp	r3, #6
 8603 16c6 14D0     		beq	.L334
1154:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8604              		.loc 1 1154 0 discriminator 2
 8605 16c8 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8606 16cc 07F1BC02 		add	r2, r7, #188
 8607 16d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8608 16d2 082B     		cmp	r3, #8
 8609 16d4 0DD0     		beq	.L334
1154:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8610              		.loc 1 1154 0 discriminator 3
 8611 16d6 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8612 16da 07F1BC02 		add	r2, r7, #188
 8613 16de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8614 16e0 092B     		cmp	r3, #9
 8615 16e2 06D0     		beq	.L334
1154:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8616              		.loc 1 1154 0 discriminator 4
 8617 16e4 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8618 16e8 07F1BC02 		add	r2, r7, #188
 8619 16ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8620 16ee 0A2B     		cmp	r3, #10
 8621 16f0 02D1     		bne	.L336
 8622              	.L334:
1155:..\src/command_processing.c ****             }   
 8623              		.loc 1 1155 0 is_stmt 1
 8624 16f2 044B     		ldr	r3, .L347
 8625 16f4 0122     		movs	r2, #1
 8626 16f6 1A70     		strb	r2, [r3]
 8627              	.L336:
 8628              	.LBE14:
 8629              		.loc 1 1159 0
 8630 16f8 00BF     		nop
 8631 16fa 07F59567 		add	r7, r7, #1192
 8632              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 200


 8633 16fe BD46     		mov	sp, r7
 8634              		.cfi_def_cfa_register 13
 8635              		@ sp needed
 8636 1700 B0BD     		pop	{r4, r5, r7, pc}
 8637              	.L348:
 8638 1702 00BF     		.align	2
 8639              	.L347:
 8640 1704 00000000 		.word	reset_PSoC_flag
 8641              		.cfi_endproc
 8642              	.LFE68:
 8643              		.size	manage_param_list, .-manage_param_list
 8644              		.global	__aeabi_fmul
 8645              		.global	__aeabi_f2iz
 8646              		.section	.text.set_custom_param,"ax",%progbits
 8647              		.align	2
 8648              		.global	set_custom_param
 8649              		.thumb
 8650              		.thumb_func
 8651              		.type	set_custom_param, %function
 8652              	set_custom_param:
 8653              	.LFB69:
1160:..\src/command_processing.c **** 
1161:..\src/command_processing.c **** //==============================================================================
1162:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1163:..\src/command_processing.c **** //==============================================================================
1164:..\src/command_processing.c **** 
1165:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 8654              		.loc 1 1165 0
 8655              		.cfi_startproc
 8656              		@ args = 0, pretend = 0, frame = 24
 8657              		@ frame_needed = 1, uses_anonymous_args = 0
 8658 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8659              		.cfi_def_cfa_offset 20
 8660              		.cfi_offset 4, -20
 8661              		.cfi_offset 5, -16
 8662              		.cfi_offset 6, -12
 8663              		.cfi_offset 7, -8
 8664              		.cfi_offset 14, -4
 8665 0002 87B0     		sub	sp, sp, #28
 8666              		.cfi_def_cfa_offset 48
 8667 0004 00AF     		add	r7, sp, #0
 8668              		.cfi_def_cfa_register 7
 8669 0006 0346     		mov	r3, r0
 8670 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1166:..\src/command_processing.c **** 
1167:..\src/command_processing.c ****     uint8 CYDATA i, j;
1168:..\src/command_processing.c ****     uint8 aux_uchar;
1169:..\src/command_processing.c ****     float aux_float, aux_float2;
1170:..\src/command_processing.c **** 
1171:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 8671              		.loc 1 1171 0
 8672 000a 0023     		movs	r3, #0
 8673 000c 3B75     		strb	r3, [r7, #20]
1172:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 8674              		.loc 1 1172 0
 8675 000e 0123     		movs	r3, #1
 8676 0010 FB74     		strb	r3, [r7, #19]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 201


1173:..\src/command_processing.c ****     
1174:..\src/command_processing.c ****     switch(index){
 8677              		.loc 1 1174 0
 8678 0012 FB88     		ldrh	r3, [r7, #6]
 8679 0014 023B     		subs	r3, r3, #2
 8680 0016 452B     		cmp	r3, #69
 8681 0018 01F2EB81 		bhi	.L441
 8682 001c 01A2     		adr	r2, .L352
 8683 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8684 0022 00BF     		.p2align 2
 8685              	.L352:
 8686 0024 3D010000 		.word	.L351+1
 8687 0028 6F030000 		.word	.L353+1
 8688 002c F3130000 		.word	.L441+1
 8689 0030 B5050000 		.word	.L354+1
 8690 0034 F3130000 		.word	.L441+1
 8691 0038 F3130000 		.word	.L441+1
 8692 003c 01060000 		.word	.L355+1
 8693 0040 F3130000 		.word	.L441+1
 8694 0044 F3130000 		.word	.L441+1
 8695 0048 39070000 		.word	.L356+1
 8696 004c F3130000 		.word	.L441+1
 8697 0050 F3130000 		.word	.L441+1
 8698 0054 F3130000 		.word	.L441+1
 8699 0058 F3130000 		.word	.L441+1
 8700 005c F3130000 		.word	.L441+1
 8701 0060 F3130000 		.word	.L441+1
 8702 0064 F3130000 		.word	.L441+1
 8703 0068 F3130000 		.word	.L441+1
 8704 006c F3130000 		.word	.L441+1
 8705 0070 F3130000 		.word	.L441+1
 8706 0074 F3130000 		.word	.L441+1
 8707 0078 39080000 		.word	.L357+1
 8708 007c 97080000 		.word	.L358+1
 8709 0080 F3130000 		.word	.L441+1
 8710 0084 F3130000 		.word	.L441+1
 8711 0088 F3130000 		.word	.L441+1
 8712 008c D1080000 		.word	.L359+1
 8713 0090 F3130000 		.word	.L441+1
 8714 0094 F3130000 		.word	.L441+1
 8715 0098 4D0A0000 		.word	.L360+1
 8716 009c F90A0000 		.word	.L361+1
 8717 00a0 F3130000 		.word	.L441+1
 8718 00a4 F3130000 		.word	.L441+1
 8719 00a8 F3130000 		.word	.L441+1
 8720 00ac F3130000 		.word	.L441+1
 8721 00b0 F3130000 		.word	.L441+1
 8722 00b4 330B0000 		.word	.L362+1
 8723 00b8 F3130000 		.word	.L441+1
 8724 00bc F3130000 		.word	.L441+1
 8725 00c0 F3130000 		.word	.L441+1
 8726 00c4 F3130000 		.word	.L441+1
 8727 00c8 F3130000 		.word	.L441+1
 8728 00cc 6D0B0000 		.word	.L363+1
 8729 00d0 B30D0000 		.word	.L364+1
 8730 00d4 F3130000 		.word	.L441+1
 8731 00d8 F50F0000 		.word	.L365+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 202


 8732 00dc F3130000 		.word	.L441+1
 8733 00e0 F3130000 		.word	.L441+1
 8734 00e4 3F100000 		.word	.L366+1
 8735 00e8 F3130000 		.word	.L441+1
 8736 00ec F3130000 		.word	.L441+1
 8737 00f0 55110000 		.word	.L367+1
 8738 00f4 F3130000 		.word	.L441+1
 8739 00f8 F3130000 		.word	.L441+1
 8740 00fc F3130000 		.word	.L441+1
 8741 0100 F3130000 		.word	.L441+1
 8742 0104 F3130000 		.word	.L441+1
 8743 0108 F3130000 		.word	.L441+1
 8744 010c F3130000 		.word	.L441+1
 8745 0110 53120000 		.word	.L368+1
 8746 0114 F3130000 		.word	.L441+1
 8747 0118 F3130000 		.word	.L441+1
 8748 011c F3130000 		.word	.L441+1
 8749 0120 F3130000 		.word	.L441+1
 8750 0124 F3130000 		.word	.L441+1
 8751 0128 F3130000 		.word	.L441+1
 8752 012c F3130000 		.word	.L441+1
 8753 0130 F3130000 		.word	.L441+1
 8754 0134 F3130000 		.word	.L441+1
 8755 0138 A1120000 		.word	.L369+1
 8756              		.p2align 1
 8757              	.L351:
1175:..\src/command_processing.c ****         case 2:         // Position PID
1176:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8758              		.loc 1 1176 0
 8759 013c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8760 013e AB49     		ldr	r1, .L447
 8761 0140 1346     		mov	r3, r2
 8762 0142 DB00     		lsls	r3, r3, #3
 8763 0144 9B1A     		subs	r3, r3, r2
 8764 0146 1B01     		lsls	r3, r3, #4
 8765 0148 0B44     		add	r3, r3, r1
 8766 014a 03F20F13 		addw	r3, r3, #271
 8767 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8768 0150 032B     		cmp	r3, #3
 8769 0152 00F08680 		beq	.L370
1177:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8770              		.loc 1 1177 0
 8771 0156 A64B     		ldr	r3, .L447+4
 8772 0158 1B68     		ldr	r3, [r3]	@ float
 8773 015a FB60     		str	r3, [r7, #12]	@ float
1178:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8774              		.loc 1 1178 0
 8775 015c 0023     		movs	r3, #0
 8776 015e BB75     		strb	r3, [r7, #22]
 8777 0160 0EE0     		b	.L371
 8778              	.L372:
1179:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8779              		.loc 1 1179 0 discriminator 3
 8780 0162 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8781 0164 C3F10303 		rsb	r3, r3, #3
 8782 0168 07F10802 		add	r2, r7, #8
 8783 016c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 203


 8784 016e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8785 0170 07F10C01 		add	r1, r7, #12
 8786 0174 0A44     		add	r2, r2, r1
 8787 0176 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8788 0178 1A70     		strb	r2, [r3]
1178:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8789              		.loc 1 1178 0 discriminator 3
 8790 017a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8791 017c 0133     		adds	r3, r3, #1
 8792 017e BB75     		strb	r3, [r7, #22]
 8793              	.L371:
1178:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8794              		.loc 1 1178 0 is_stmt 0 discriminator 1
 8795 0180 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8796 0182 032B     		cmp	r3, #3
 8797 0184 EDD9     		bls	.L372
1180:..\src/command_processing.c ****                 }
1181:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 8798              		.loc 1 1181 0 is_stmt 1
 8799 0186 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8800 0188 BB68     		ldr	r3, [r7, #8]	@ float
 8801 018a 4FF08F41 		mov	r1, #1199570944
 8802 018e 1846     		mov	r0, r3
 8803 0190 FFF7FEFF 		bl	__aeabi_fmul
 8804 0194 0346     		mov	r3, r0
 8805 0196 1846     		mov	r0, r3
 8806 0198 FFF7FEFF 		bl	__aeabi_f2iz
 8807 019c 0146     		mov	r1, r0
 8808 019e 954A     		ldr	r2, .L447+8
 8809 01a0 2346     		mov	r3, r4
 8810 01a2 DB00     		lsls	r3, r3, #3
 8811 01a4 1B1B     		subs	r3, r3, r4
 8812 01a6 1B01     		lsls	r3, r3, #4
 8813 01a8 1344     		add	r3, r3, r2
 8814 01aa B033     		adds	r3, r3, #176
 8815 01ac 1960     		str	r1, [r3]
1182:..\src/command_processing.c ****                 
1183:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 8816              		.loc 1 1183 0
 8817 01ae 924B     		ldr	r3, .L447+12
 8818 01b0 1B68     		ldr	r3, [r3]	@ float
 8819 01b2 FB60     		str	r3, [r7, #12]	@ float
1184:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8820              		.loc 1 1184 0
 8821 01b4 0023     		movs	r3, #0
 8822 01b6 BB75     		strb	r3, [r7, #22]
 8823 01b8 0EE0     		b	.L373
 8824              	.L374:
1185:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8825              		.loc 1 1185 0 discriminator 3
 8826 01ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8827 01bc C3F10303 		rsb	r3, r3, #3
 8828 01c0 07F10802 		add	r2, r7, #8
 8829 01c4 1344     		add	r3, r3, r2
 8830 01c6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8831 01c8 07F10C01 		add	r1, r7, #12
 8832 01cc 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 204


 8833 01ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8834 01d0 1A70     		strb	r2, [r3]
1184:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8835              		.loc 1 1184 0 discriminator 3
 8836 01d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8837 01d4 0133     		adds	r3, r3, #1
 8838 01d6 BB75     		strb	r3, [r7, #22]
 8839              	.L373:
1184:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8840              		.loc 1 1184 0 is_stmt 0 discriminator 1
 8841 01d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8842 01da 032B     		cmp	r3, #3
 8843 01dc EDD9     		bls	.L374
1186:..\src/command_processing.c ****                 }
1187:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 8844              		.loc 1 1187 0 is_stmt 1
 8845 01de 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8846 01e0 BB68     		ldr	r3, [r7, #8]	@ float
 8847 01e2 4FF08F41 		mov	r1, #1199570944
 8848 01e6 1846     		mov	r0, r3
 8849 01e8 FFF7FEFF 		bl	__aeabi_fmul
 8850 01ec 0346     		mov	r3, r0
 8851 01ee 1846     		mov	r0, r3
 8852 01f0 FFF7FEFF 		bl	__aeabi_f2iz
 8853 01f4 0146     		mov	r1, r0
 8854 01f6 7F4A     		ldr	r2, .L447+8
 8855 01f8 2346     		mov	r3, r4
 8856 01fa DB00     		lsls	r3, r3, #3
 8857 01fc 1B1B     		subs	r3, r3, r4
 8858 01fe 1B01     		lsls	r3, r3, #4
 8859 0200 1344     		add	r3, r3, r2
 8860 0202 B433     		adds	r3, r3, #180
 8861 0204 1960     		str	r1, [r3]
1188:..\src/command_processing.c ****                 
1189:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 8862              		.loc 1 1189 0
 8863 0206 7D4B     		ldr	r3, .L447+16
 8864 0208 1B68     		ldr	r3, [r3]	@ float
 8865 020a FB60     		str	r3, [r7, #12]	@ float
1190:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8866              		.loc 1 1190 0
 8867 020c 0023     		movs	r3, #0
 8868 020e BB75     		strb	r3, [r7, #22]
 8869 0210 0EE0     		b	.L375
 8870              	.L376:
1191:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8871              		.loc 1 1191 0 discriminator 3
 8872 0212 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8873 0214 C3F10303 		rsb	r3, r3, #3
 8874 0218 07F10802 		add	r2, r7, #8
 8875 021c 1344     		add	r3, r3, r2
 8876 021e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8877 0220 07F10C01 		add	r1, r7, #12
 8878 0224 0A44     		add	r2, r2, r1
 8879 0226 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8880 0228 1A70     		strb	r2, [r3]
1190:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 205


 8881              		.loc 1 1190 0 discriminator 3
 8882 022a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8883 022c 0133     		adds	r3, r3, #1
 8884 022e BB75     		strb	r3, [r7, #22]
 8885              	.L375:
1190:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8886              		.loc 1 1190 0 is_stmt 0 discriminator 1
 8887 0230 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8888 0232 032B     		cmp	r3, #3
 8889 0234 EDD9     		bls	.L376
1192:..\src/command_processing.c ****                 }
1193:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 8890              		.loc 1 1193 0 is_stmt 1
 8891 0236 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8892 0238 BB68     		ldr	r3, [r7, #8]	@ float
 8893 023a 4FF08F41 		mov	r1, #1199570944
 8894 023e 1846     		mov	r0, r3
 8895 0240 FFF7FEFF 		bl	__aeabi_fmul
 8896 0244 0346     		mov	r3, r0
 8897 0246 1846     		mov	r0, r3
 8898 0248 FFF7FEFF 		bl	__aeabi_f2iz
 8899 024c 0146     		mov	r1, r0
 8900 024e 694A     		ldr	r2, .L447+8
 8901 0250 2346     		mov	r3, r4
 8902 0252 DB00     		lsls	r3, r3, #3
 8903 0254 1B1B     		subs	r3, r3, r4
 8904 0256 1B01     		lsls	r3, r3, #4
 8905 0258 1344     		add	r3, r3, r2
 8906 025a B833     		adds	r3, r3, #184
 8907 025c 1960     		str	r1, [r3]
1194:..\src/command_processing.c ****             }
1195:..\src/command_processing.c ****             else {
1196:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1197:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1198:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1199:..\src/command_processing.c ****                 }
1200:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1201:..\src/command_processing.c ****                 
1202:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1203:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1204:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1205:..\src/command_processing.c ****                 }
1206:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1207:..\src/command_processing.c ****                 
1208:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1209:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1210:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1211:..\src/command_processing.c ****                 }
1212:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1213:..\src/command_processing.c ****             }
1214:..\src/command_processing.c ****             break;
 8908              		.loc 1 1214 0
 8909 025e 01F0D3B8 		b	.L384
 8910              	.L370:
1196:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8911              		.loc 1 1196 0
 8912 0262 634B     		ldr	r3, .L447+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 206


 8913 0264 1B68     		ldr	r3, [r3]	@ float
 8914 0266 FB60     		str	r3, [r7, #12]	@ float
1197:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8915              		.loc 1 1197 0
 8916 0268 0023     		movs	r3, #0
 8917 026a BB75     		strb	r3, [r7, #22]
 8918 026c 0EE0     		b	.L378
 8919              	.L379:
1198:..\src/command_processing.c ****                 }
 8920              		.loc 1 1198 0 discriminator 3
 8921 026e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8922 0270 C3F10303 		rsb	r3, r3, #3
 8923 0274 07F10802 		add	r2, r7, #8
 8924 0278 1344     		add	r3, r3, r2
 8925 027a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8926 027c 07F10C01 		add	r1, r7, #12
 8927 0280 0A44     		add	r2, r2, r1
 8928 0282 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8929 0284 1A70     		strb	r2, [r3]
1197:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8930              		.loc 1 1197 0 discriminator 3
 8931 0286 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8932 0288 0133     		adds	r3, r3, #1
 8933 028a BB75     		strb	r3, [r7, #22]
 8934              	.L378:
1197:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8935              		.loc 1 1197 0 is_stmt 0 discriminator 1
 8936 028c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8937 028e 032B     		cmp	r3, #3
 8938 0290 EDD9     		bls	.L379
1200:..\src/command_processing.c ****                 
 8939              		.loc 1 1200 0 is_stmt 1
 8940 0292 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8941 0294 BB68     		ldr	r3, [r7, #8]	@ float
 8942 0296 4FF08F41 		mov	r1, #1199570944
 8943 029a 1846     		mov	r0, r3
 8944 029c FFF7FEFF 		bl	__aeabi_fmul
 8945 02a0 0346     		mov	r3, r0
 8946 02a2 1846     		mov	r0, r3
 8947 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 8948 02a8 0146     		mov	r1, r0
 8949 02aa 524A     		ldr	r2, .L447+8
 8950 02ac 2346     		mov	r3, r4
 8951 02ae DB00     		lsls	r3, r3, #3
 8952 02b0 1B1B     		subs	r3, r3, r4
 8953 02b2 1B01     		lsls	r3, r3, #4
 8954 02b4 1344     		add	r3, r3, r2
 8955 02b6 C833     		adds	r3, r3, #200
 8956 02b8 1960     		str	r1, [r3]
1202:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8957              		.loc 1 1202 0
 8958 02ba 4F4B     		ldr	r3, .L447+12
 8959 02bc 1B68     		ldr	r3, [r3]	@ float
 8960 02be FB60     		str	r3, [r7, #12]	@ float
1203:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8961              		.loc 1 1203 0
 8962 02c0 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 207


 8963 02c2 BB75     		strb	r3, [r7, #22]
 8964 02c4 0EE0     		b	.L380
 8965              	.L381:
1204:..\src/command_processing.c ****                 }
 8966              		.loc 1 1204 0 discriminator 3
 8967 02c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8968 02c8 C3F10303 		rsb	r3, r3, #3
 8969 02cc 07F10802 		add	r2, r7, #8
 8970 02d0 1344     		add	r3, r3, r2
 8971 02d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8972 02d4 07F10C01 		add	r1, r7, #12
 8973 02d8 0A44     		add	r2, r2, r1
 8974 02da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8975 02dc 1A70     		strb	r2, [r3]
1203:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8976              		.loc 1 1203 0 discriminator 3
 8977 02de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8978 02e0 0133     		adds	r3, r3, #1
 8979 02e2 BB75     		strb	r3, [r7, #22]
 8980              	.L380:
1203:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8981              		.loc 1 1203 0 is_stmt 0 discriminator 1
 8982 02e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8983 02e6 032B     		cmp	r3, #3
 8984 02e8 EDD9     		bls	.L381
1206:..\src/command_processing.c ****                 
 8985              		.loc 1 1206 0 is_stmt 1
 8986 02ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8987 02ec BB68     		ldr	r3, [r7, #8]	@ float
 8988 02ee 4FF08F41 		mov	r1, #1199570944
 8989 02f2 1846     		mov	r0, r3
 8990 02f4 FFF7FEFF 		bl	__aeabi_fmul
 8991 02f8 0346     		mov	r3, r0
 8992 02fa 1846     		mov	r0, r3
 8993 02fc FFF7FEFF 		bl	__aeabi_f2iz
 8994 0300 0146     		mov	r1, r0
 8995 0302 3C4A     		ldr	r2, .L447+8
 8996 0304 2346     		mov	r3, r4
 8997 0306 DB00     		lsls	r3, r3, #3
 8998 0308 1B1B     		subs	r3, r3, r4
 8999 030a 1B01     		lsls	r3, r3, #4
 9000 030c 1344     		add	r3, r3, r2
 9001 030e CC33     		adds	r3, r3, #204
 9002 0310 1960     		str	r1, [r3]
1208:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9003              		.loc 1 1208 0
 9004 0312 3A4B     		ldr	r3, .L447+16
 9005 0314 1B68     		ldr	r3, [r3]	@ float
 9006 0316 FB60     		str	r3, [r7, #12]	@ float
1209:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9007              		.loc 1 1209 0
 9008 0318 0023     		movs	r3, #0
 9009 031a BB75     		strb	r3, [r7, #22]
 9010 031c 0EE0     		b	.L382
 9011              	.L383:
1210:..\src/command_processing.c ****                 }
 9012              		.loc 1 1210 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 208


 9013 031e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9014 0320 C3F10303 		rsb	r3, r3, #3
 9015 0324 07F10802 		add	r2, r7, #8
 9016 0328 1344     		add	r3, r3, r2
 9017 032a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9018 032c 07F10C01 		add	r1, r7, #12
 9019 0330 0A44     		add	r2, r2, r1
 9020 0332 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9021 0334 1A70     		strb	r2, [r3]
1209:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9022              		.loc 1 1209 0 discriminator 3
 9023 0336 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9024 0338 0133     		adds	r3, r3, #1
 9025 033a BB75     		strb	r3, [r7, #22]
 9026              	.L382:
1209:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9027              		.loc 1 1209 0 is_stmt 0 discriminator 1
 9028 033c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9029 033e 032B     		cmp	r3, #3
 9030 0340 EDD9     		bls	.L383
1212:..\src/command_processing.c ****             }
 9031              		.loc 1 1212 0 is_stmt 1
 9032 0342 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9033 0344 BB68     		ldr	r3, [r7, #8]	@ float
 9034 0346 4FF08F41 		mov	r1, #1199570944
 9035 034a 1846     		mov	r0, r3
 9036 034c FFF7FEFF 		bl	__aeabi_fmul
 9037 0350 0346     		mov	r3, r0
 9038 0352 1846     		mov	r0, r3
 9039 0354 FFF7FEFF 		bl	__aeabi_f2iz
 9040 0358 0146     		mov	r1, r0
 9041 035a 264A     		ldr	r2, .L447+8
 9042 035c 2346     		mov	r3, r4
 9043 035e DB00     		lsls	r3, r3, #3
 9044 0360 1B1B     		subs	r3, r3, r4
 9045 0362 1B01     		lsls	r3, r3, #4
 9046 0364 1344     		add	r3, r3, r2
 9047 0366 D033     		adds	r3, r3, #208
 9048 0368 1960     		str	r1, [r3]
 9049              		.loc 1 1214 0
 9050 036a 01F04DB8 		b	.L384
 9051              	.L353:
1215:..\src/command_processing.c ****             
1216:..\src/command_processing.c ****         case 3:         //Current PID
1217:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9052              		.loc 1 1217 0
 9053 036e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9054 0370 1E49     		ldr	r1, .L447
 9055 0372 1346     		mov	r3, r2
 9056 0374 DB00     		lsls	r3, r3, #3
 9057 0376 9B1A     		subs	r3, r3, r2
 9058 0378 1B01     		lsls	r3, r3, #4
 9059 037a 0B44     		add	r3, r3, r1
 9060 037c 03F20F13 		addw	r3, r3, #271
 9061 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9062 0382 032B     		cmp	r3, #3
 9063 0384 00F09080 		beq	.L385
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 209


1218:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9064              		.loc 1 1218 0
 9065 0388 194B     		ldr	r3, .L447+4
 9066 038a 1B68     		ldr	r3, [r3]	@ float
 9067 038c FB60     		str	r3, [r7, #12]	@ float
1219:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9068              		.loc 1 1219 0
 9069 038e 0023     		movs	r3, #0
 9070 0390 BB75     		strb	r3, [r7, #22]
 9071 0392 0EE0     		b	.L386
 9072              	.L387:
1220:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9073              		.loc 1 1220 0 discriminator 3
 9074 0394 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9075 0396 C3F10303 		rsb	r3, r3, #3
 9076 039a 07F10802 		add	r2, r7, #8
 9077 039e 1344     		add	r3, r3, r2
 9078 03a0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9079 03a2 07F10C01 		add	r1, r7, #12
 9080 03a6 0A44     		add	r2, r2, r1
 9081 03a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9082 03aa 1A70     		strb	r2, [r3]
1219:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9083              		.loc 1 1219 0 discriminator 3
 9084 03ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9085 03ae 0133     		adds	r3, r3, #1
 9086 03b0 BB75     		strb	r3, [r7, #22]
 9087              	.L386:
1219:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9088              		.loc 1 1219 0 is_stmt 0 discriminator 1
 9089 03b2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9090 03b4 032B     		cmp	r3, #3
 9091 03b6 EDD9     		bls	.L387
1221:..\src/command_processing.c ****                 }
1222:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9092              		.loc 1 1222 0 is_stmt 1
 9093 03b8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9094 03ba BB68     		ldr	r3, [r7, #8]	@ float
 9095 03bc 4FF08F41 		mov	r1, #1199570944
 9096 03c0 1846     		mov	r0, r3
 9097 03c2 FFF7FEFF 		bl	__aeabi_fmul
 9098 03c6 0346     		mov	r3, r0
 9099 03c8 1846     		mov	r0, r3
 9100 03ca FFF7FEFF 		bl	__aeabi_f2iz
 9101 03ce 0146     		mov	r1, r0
 9102 03d0 084A     		ldr	r2, .L447+8
 9103 03d2 2346     		mov	r3, r4
 9104 03d4 DB00     		lsls	r3, r3, #3
 9105 03d6 1B1B     		subs	r3, r3, r4
 9106 03d8 1B01     		lsls	r3, r3, #4
 9107 03da 1344     		add	r3, r3, r2
 9108 03dc BC33     		adds	r3, r3, #188
 9109 03de 1960     		str	r1, [r3]
1223:..\src/command_processing.c ****                 
1224:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9110              		.loc 1 1224 0
 9111 03e0 054B     		ldr	r3, .L447+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 210


 9112 03e2 1B68     		ldr	r3, [r3]	@ float
 9113 03e4 FB60     		str	r3, [r7, #12]	@ float
1225:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9114              		.loc 1 1225 0
 9115 03e6 0023     		movs	r3, #0
 9116 03e8 BB75     		strb	r3, [r7, #22]
 9117 03ea 18E0     		b	.L388
 9118              	.L448:
 9119              		.align	2
 9120              	.L447:
 9121 03ec 00000000 		.word	c_mem
 9122 03f0 03000000 		.word	g_rx+3
 9123 03f4 00000000 		.word	g_mem
 9124 03f8 07000000 		.word	g_rx+7
 9125 03fc 0B000000 		.word	g_rx+11
 9126              	.L389:
1226:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9127              		.loc 1 1226 0 discriminator 3
 9128 0400 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9129 0402 C3F10303 		rsb	r3, r3, #3
 9130 0406 07F10802 		add	r2, r7, #8
 9131 040a 1344     		add	r3, r3, r2
 9132 040c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9133 040e 07F10C01 		add	r1, r7, #12
 9134 0412 0A44     		add	r2, r2, r1
 9135 0414 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9136 0416 1A70     		strb	r2, [r3]
1225:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9137              		.loc 1 1225 0 discriminator 3
 9138 0418 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9139 041a 0133     		adds	r3, r3, #1
 9140 041c BB75     		strb	r3, [r7, #22]
 9141              	.L388:
1225:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9142              		.loc 1 1225 0 is_stmt 0 discriminator 1
 9143 041e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9144 0420 032B     		cmp	r3, #3
 9145 0422 EDD9     		bls	.L389
1227:..\src/command_processing.c ****                 }
1228:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9146              		.loc 1 1228 0 is_stmt 1
 9147 0424 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9148 0426 BB68     		ldr	r3, [r7, #8]	@ float
 9149 0428 4FF08F41 		mov	r1, #1199570944
 9150 042c 1846     		mov	r0, r3
 9151 042e FFF7FEFF 		bl	__aeabi_fmul
 9152 0432 0346     		mov	r3, r0
 9153 0434 1846     		mov	r0, r3
 9154 0436 FFF7FEFF 		bl	__aeabi_f2iz
 9155 043a 0146     		mov	r1, r0
 9156 043c B64A     		ldr	r2, .L449
 9157 043e 2346     		mov	r3, r4
 9158 0440 DB00     		lsls	r3, r3, #3
 9159 0442 1B1B     		subs	r3, r3, r4
 9160 0444 1B01     		lsls	r3, r3, #4
 9161 0446 1344     		add	r3, r3, r2
 9162 0448 C033     		adds	r3, r3, #192
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 211


 9163 044a 1960     		str	r1, [r3]
1229:..\src/command_processing.c ****                 
1230:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9164              		.loc 1 1230 0
 9165 044c B34B     		ldr	r3, .L449+4
 9166 044e 1B68     		ldr	r3, [r3]	@ float
 9167 0450 FB60     		str	r3, [r7, #12]	@ float
1231:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9168              		.loc 1 1231 0
 9169 0452 0023     		movs	r3, #0
 9170 0454 BB75     		strb	r3, [r7, #22]
 9171 0456 0EE0     		b	.L390
 9172              	.L391:
1232:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9173              		.loc 1 1232 0 discriminator 3
 9174 0458 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9175 045a C3F10303 		rsb	r3, r3, #3
 9176 045e 07F10802 		add	r2, r7, #8
 9177 0462 1344     		add	r3, r3, r2
 9178 0464 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9179 0466 07F10C01 		add	r1, r7, #12
 9180 046a 0A44     		add	r2, r2, r1
 9181 046c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9182 046e 1A70     		strb	r2, [r3]
1231:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9183              		.loc 1 1231 0 discriminator 3
 9184 0470 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9185 0472 0133     		adds	r3, r3, #1
 9186 0474 BB75     		strb	r3, [r7, #22]
 9187              	.L390:
1231:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9188              		.loc 1 1231 0 is_stmt 0 discriminator 1
 9189 0476 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9190 0478 032B     		cmp	r3, #3
 9191 047a EDD9     		bls	.L391
1233:..\src/command_processing.c ****                 }
1234:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9192              		.loc 1 1234 0 is_stmt 1
 9193 047c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9194 047e BB68     		ldr	r3, [r7, #8]	@ float
 9195 0480 4FF08F41 		mov	r1, #1199570944
 9196 0484 1846     		mov	r0, r3
 9197 0486 FFF7FEFF 		bl	__aeabi_fmul
 9198 048a 0346     		mov	r3, r0
 9199 048c 1846     		mov	r0, r3
 9200 048e FFF7FEFF 		bl	__aeabi_f2iz
 9201 0492 0146     		mov	r1, r0
 9202 0494 A04A     		ldr	r2, .L449
 9203 0496 2346     		mov	r3, r4
 9204 0498 DB00     		lsls	r3, r3, #3
 9205 049a 1B1B     		subs	r3, r3, r4
 9206 049c 1B01     		lsls	r3, r3, #4
 9207 049e 1344     		add	r3, r3, r2
 9208 04a0 C433     		adds	r3, r3, #196
 9209 04a2 1960     		str	r1, [r3]
1235:..\src/command_processing.c ****             }
1236:..\src/command_processing.c ****             else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 212


1237:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1238:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1239:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1240:..\src/command_processing.c ****                 }
1241:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1242:..\src/command_processing.c ****                 
1243:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1244:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1245:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1246:..\src/command_processing.c ****                 }
1247:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1248:..\src/command_processing.c ****                 
1249:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1250:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1251:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1252:..\src/command_processing.c ****                 }
1253:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1254:..\src/command_processing.c ****             }            
1255:..\src/command_processing.c ****             break;  
 9210              		.loc 1 1255 0
 9211 04a4 00F0B0BF 		b	.L384
 9212              	.L385:
1237:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9213              		.loc 1 1237 0
 9214 04a8 9D4B     		ldr	r3, .L449+8
 9215 04aa 1B68     		ldr	r3, [r3]	@ float
 9216 04ac FB60     		str	r3, [r7, #12]	@ float
1238:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9217              		.loc 1 1238 0
 9218 04ae 0023     		movs	r3, #0
 9219 04b0 BB75     		strb	r3, [r7, #22]
 9220 04b2 0EE0     		b	.L393
 9221              	.L394:
1239:..\src/command_processing.c ****                 }
 9222              		.loc 1 1239 0 discriminator 3
 9223 04b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9224 04b6 C3F10303 		rsb	r3, r3, #3
 9225 04ba 07F10802 		add	r2, r7, #8
 9226 04be 1344     		add	r3, r3, r2
 9227 04c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9228 04c2 07F10C01 		add	r1, r7, #12
 9229 04c6 0A44     		add	r2, r2, r1
 9230 04c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9231 04ca 1A70     		strb	r2, [r3]
1238:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9232              		.loc 1 1238 0 discriminator 3
 9233 04cc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9234 04ce 0133     		adds	r3, r3, #1
 9235 04d0 BB75     		strb	r3, [r7, #22]
 9236              	.L393:
1238:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9237              		.loc 1 1238 0 is_stmt 0 discriminator 1
 9238 04d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9239 04d4 032B     		cmp	r3, #3
 9240 04d6 EDD9     		bls	.L394
1241:..\src/command_processing.c ****                 
 9241              		.loc 1 1241 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 213


 9242 04d8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9243 04da BB68     		ldr	r3, [r7, #8]	@ float
 9244 04dc 4FF08F41 		mov	r1, #1199570944
 9245 04e0 1846     		mov	r0, r3
 9246 04e2 FFF7FEFF 		bl	__aeabi_fmul
 9247 04e6 0346     		mov	r3, r0
 9248 04e8 1846     		mov	r0, r3
 9249 04ea FFF7FEFF 		bl	__aeabi_f2iz
 9250 04ee 0146     		mov	r1, r0
 9251 04f0 894A     		ldr	r2, .L449
 9252 04f2 2346     		mov	r3, r4
 9253 04f4 DB00     		lsls	r3, r3, #3
 9254 04f6 1B1B     		subs	r3, r3, r4
 9255 04f8 1B01     		lsls	r3, r3, #4
 9256 04fa 1344     		add	r3, r3, r2
 9257 04fc D433     		adds	r3, r3, #212
 9258 04fe 1960     		str	r1, [r3]
1243:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9259              		.loc 1 1243 0
 9260 0500 884B     		ldr	r3, .L449+12
 9261 0502 1B68     		ldr	r3, [r3]	@ float
 9262 0504 FB60     		str	r3, [r7, #12]	@ float
1244:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9263              		.loc 1 1244 0
 9264 0506 0023     		movs	r3, #0
 9265 0508 BB75     		strb	r3, [r7, #22]
 9266 050a 0EE0     		b	.L395
 9267              	.L396:
1245:..\src/command_processing.c ****                 }
 9268              		.loc 1 1245 0 discriminator 3
 9269 050c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9270 050e C3F10303 		rsb	r3, r3, #3
 9271 0512 07F10802 		add	r2, r7, #8
 9272 0516 1344     		add	r3, r3, r2
 9273 0518 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9274 051a 07F10C01 		add	r1, r7, #12
 9275 051e 0A44     		add	r2, r2, r1
 9276 0520 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9277 0522 1A70     		strb	r2, [r3]
1244:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9278              		.loc 1 1244 0 discriminator 3
 9279 0524 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9280 0526 0133     		adds	r3, r3, #1
 9281 0528 BB75     		strb	r3, [r7, #22]
 9282              	.L395:
1244:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9283              		.loc 1 1244 0 is_stmt 0 discriminator 1
 9284 052a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9285 052c 032B     		cmp	r3, #3
 9286 052e EDD9     		bls	.L396
1247:..\src/command_processing.c ****                 
 9287              		.loc 1 1247 0 is_stmt 1
 9288 0530 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9289 0532 BB68     		ldr	r3, [r7, #8]	@ float
 9290 0534 4FF08F41 		mov	r1, #1199570944
 9291 0538 1846     		mov	r0, r3
 9292 053a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 214


 9293 053e 0346     		mov	r3, r0
 9294 0540 1846     		mov	r0, r3
 9295 0542 FFF7FEFF 		bl	__aeabi_f2iz
 9296 0546 0146     		mov	r1, r0
 9297 0548 734A     		ldr	r2, .L449
 9298 054a 2346     		mov	r3, r4
 9299 054c DB00     		lsls	r3, r3, #3
 9300 054e 1B1B     		subs	r3, r3, r4
 9301 0550 1B01     		lsls	r3, r3, #4
 9302 0552 1344     		add	r3, r3, r2
 9303 0554 D833     		adds	r3, r3, #216
 9304 0556 1960     		str	r1, [r3]
1249:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9305              		.loc 1 1249 0
 9306 0558 704B     		ldr	r3, .L449+4
 9307 055a 1B68     		ldr	r3, [r3]	@ float
 9308 055c FB60     		str	r3, [r7, #12]	@ float
1250:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9309              		.loc 1 1250 0
 9310 055e 0023     		movs	r3, #0
 9311 0560 BB75     		strb	r3, [r7, #22]
 9312 0562 0EE0     		b	.L397
 9313              	.L398:
1251:..\src/command_processing.c ****                 }
 9314              		.loc 1 1251 0 discriminator 3
 9315 0564 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9316 0566 C3F10303 		rsb	r3, r3, #3
 9317 056a 07F10802 		add	r2, r7, #8
 9318 056e 1344     		add	r3, r3, r2
 9319 0570 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9320 0572 07F10C01 		add	r1, r7, #12
 9321 0576 0A44     		add	r2, r2, r1
 9322 0578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9323 057a 1A70     		strb	r2, [r3]
1250:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9324              		.loc 1 1250 0 discriminator 3
 9325 057c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9326 057e 0133     		adds	r3, r3, #1
 9327 0580 BB75     		strb	r3, [r7, #22]
 9328              	.L397:
1250:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9329              		.loc 1 1250 0 is_stmt 0 discriminator 1
 9330 0582 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9331 0584 032B     		cmp	r3, #3
 9332 0586 EDD9     		bls	.L398
1253:..\src/command_processing.c ****             }            
 9333              		.loc 1 1253 0 is_stmt 1
 9334 0588 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9335 058a BB68     		ldr	r3, [r7, #8]	@ float
 9336 058c 4FF08F41 		mov	r1, #1199570944
 9337 0590 1846     		mov	r0, r3
 9338 0592 FFF7FEFF 		bl	__aeabi_fmul
 9339 0596 0346     		mov	r3, r0
 9340 0598 1846     		mov	r0, r3
 9341 059a FFF7FEFF 		bl	__aeabi_f2iz
 9342 059e 0146     		mov	r1, r0
 9343 05a0 5D4A     		ldr	r2, .L449
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 215


 9344 05a2 2346     		mov	r3, r4
 9345 05a4 DB00     		lsls	r3, r3, #3
 9346 05a6 1B1B     		subs	r3, r3, r4
 9347 05a8 1B01     		lsls	r3, r3, #4
 9348 05aa 1344     		add	r3, r3, r2
 9349 05ac DC33     		adds	r3, r3, #220
 9350 05ae 1960     		str	r1, [r3]
 9351              		.loc 1 1255 0
 9352 05b0 00F02ABF 		b	.L384
 9353              	.L354:
1256:..\src/command_processing.c ****             
1257:..\src/command_processing.c ****         case 5:         //Input mode
1258:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 9354              		.loc 1 1258 0
 9355 05b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9356 05b6 5C4B     		ldr	r3, .L449+16
 9357 05b8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9358 05ba 5749     		ldr	r1, .L449
 9359 05bc 1346     		mov	r3, r2
 9360 05be DB00     		lsls	r3, r3, #3
 9361 05c0 9B1A     		subs	r3, r3, r2
 9362 05c2 1B01     		lsls	r3, r3, #4
 9363 05c4 0B44     		add	r3, r3, r1
 9364 05c6 03F58773 		add	r3, r3, #270
 9365 05ca 0246     		mov	r2, r0
 9366 05cc 1A70     		strb	r2, [r3]
1259:..\src/command_processing.c ****             
1260:..\src/command_processing.c ****             // Hold the actual position
1261:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 9367              		.loc 1 1261 0
 9368 05ce 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9369 05d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9370 05d2 5148     		ldr	r0, .L449
 9371 05d4 1346     		mov	r3, r2
 9372 05d6 DB00     		lsls	r3, r3, #3
 9373 05d8 9B1A     		subs	r3, r3, r2
 9374 05da 1B01     		lsls	r3, r3, #4
 9375 05dc 0344     		add	r3, r3, r0
 9376 05de 03F58873 		add	r3, r3, #272
 9377 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9378 05e4 1846     		mov	r0, r3
 9379 05e6 514A     		ldr	r2, .L449+20
 9380 05e8 0346     		mov	r3, r0
 9381 05ea 5B00     		lsls	r3, r3, #1
 9382 05ec 0344     		add	r3, r3, r0
 9383 05ee 1B01     		lsls	r3, r3, #4
 9384 05f0 1344     		add	r3, r3, r2
 9385 05f2 1A68     		ldr	r2, [r3]
 9386 05f4 4E48     		ldr	r0, .L449+24
 9387 05f6 0B01     		lsls	r3, r1, #4
 9388 05f8 0344     		add	r3, r3, r0
 9389 05fa 1A60     		str	r2, [r3]
1262:..\src/command_processing.c ****             break;   
 9390              		.loc 1 1262 0
 9391 05fc 00F004BF 		b	.L384
 9392              	.L355:
1263:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 216


1264:..\src/command_processing.c ****         case 8:         //Measurement Offset
1265:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 9393              		.loc 1 1265 0
 9394 0600 0023     		movs	r3, #0
 9395 0602 FB75     		strb	r3, [r7, #23]
 9396 0604 7FE0     		b	.L399
 9397              	.L400:
1266:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9398              		.loc 1 1266 0 discriminator 3
 9399 0606 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9400 0608 4349     		ldr	r1, .L449
 9401 060a 1346     		mov	r3, r2
 9402 060c DB00     		lsls	r3, r3, #3
 9403 060e 9B1A     		subs	r3, r3, r2
 9404 0610 1B01     		lsls	r3, r3, #4
 9405 0612 0B44     		add	r3, r3, r1
 9406 0614 03F58873 		add	r3, r3, #272
 9407 0618 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9408 061a 1C46     		mov	r4, r3
 9409 061c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9410 061e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9411 0620 5B00     		lsls	r3, r3, #1
 9412 0622 0333     		adds	r3, r3, #3
 9413 0624 4049     		ldr	r1, .L449+16
 9414 0626 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9415 0628 1B02     		lsls	r3, r3, #8
 9416 062a 19B2     		sxth	r1, r3
 9417 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9418 062e 0233     		adds	r3, r3, #2
 9419 0630 5B00     		lsls	r3, r3, #1
 9420 0632 3D48     		ldr	r0, .L449+16
 9421 0634 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 9422 0636 1BB2     		sxth	r3, r3
 9423 0638 0B43     		orrs	r3, r3, r1
 9424 063a 1BB2     		sxth	r3, r3
 9425 063c 1846     		mov	r0, r3
 9426 063e 3649     		ldr	r1, .L449
 9427 0640 2346     		mov	r3, r4
 9428 0642 5B00     		lsls	r3, r3, #1
 9429 0644 2344     		add	r3, r3, r4
 9430 0646 9B00     		lsls	r3, r3, #2
 9431 0648 1344     		add	r3, r3, r2
 9432 064a 6633     		adds	r3, r3, #102
 9433 064c 41F82300 		str	r0, [r1, r3, lsl #2]
1267:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 9434              		.loc 1 1267 0 discriminator 3
 9435 0650 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9436 0652 3149     		ldr	r1, .L449
 9437 0654 1346     		mov	r3, r2
 9438 0656 DB00     		lsls	r3, r3, #3
 9439 0658 9B1A     		subs	r3, r3, r2
 9440 065a 1B01     		lsls	r3, r3, #4
 9441 065c 0B44     		add	r3, r3, r1
 9442 065e 03F58873 		add	r3, r3, #272
 9443 0662 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9444 0664 1D46     		mov	r5, r3
 9445 0666 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 217


 9446 0668 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9447 066a 2B48     		ldr	r0, .L449
 9448 066c 1346     		mov	r3, r2
 9449 066e DB00     		lsls	r3, r3, #3
 9450 0670 9B1A     		subs	r3, r3, r2
 9451 0672 1B01     		lsls	r3, r3, #4
 9452 0674 0344     		add	r3, r3, r0
 9453 0676 03F58873 		add	r3, r3, #272
 9454 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9455 067c 1C46     		mov	r4, r3
 9456 067e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9457 0680 2548     		ldr	r0, .L449
 9458 0682 2346     		mov	r3, r4
 9459 0684 5B00     		lsls	r3, r3, #1
 9460 0686 2344     		add	r3, r3, r4
 9461 0688 9B00     		lsls	r3, r3, #2
 9462 068a 1344     		add	r3, r3, r2
 9463 068c 6633     		adds	r3, r3, #102
 9464 068e 50F82300 		ldr	r0, [r0, r3, lsl #2]
 9465 0692 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9466 0694 204C     		ldr	r4, .L449
 9467 0696 1346     		mov	r3, r2
 9468 0698 DB00     		lsls	r3, r3, #3
 9469 069a 9B1A     		subs	r3, r3, r2
 9470 069c 1B01     		lsls	r3, r3, #4
 9471 069e 2344     		add	r3, r3, r4
 9472 06a0 03F58873 		add	r3, r3, #272
 9473 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9474 06a6 1E46     		mov	r6, r3
 9475 06a8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9476 06aa 1B4C     		ldr	r4, .L449
 9477 06ac 3346     		mov	r3, r6
 9478 06ae 5B00     		lsls	r3, r3, #1
 9479 06b0 3344     		add	r3, r3, r6
 9480 06b2 1B01     		lsls	r3, r3, #4
 9481 06b4 2344     		add	r3, r3, r4
 9482 06b6 1344     		add	r3, r3, r2
 9483 06b8 03F29513 		addw	r3, r3, #405
 9484 06bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9485 06be 00FA03F2 		lsl	r2, r0, r3
 9486 06c2 1548     		ldr	r0, .L449
 9487 06c4 2B46     		mov	r3, r5
 9488 06c6 5B00     		lsls	r3, r3, #1
 9489 06c8 2B44     		add	r3, r3, r5
 9490 06ca 9B00     		lsls	r3, r3, #2
 9491 06cc 0B44     		add	r3, r3, r1
 9492 06ce 6633     		adds	r3, r3, #102
 9493 06d0 40F82320 		str	r2, [r0, r3, lsl #2]
1268:..\src/command_processing.c **** 
1269:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 9494              		.loc 1 1269 0 discriminator 3
 9495 06d4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9496 06d6 1049     		ldr	r1, .L449
 9497 06d8 1346     		mov	r3, r2
 9498 06da DB00     		lsls	r3, r3, #3
 9499 06dc 9B1A     		subs	r3, r3, r2
 9500 06de 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 218


 9501 06e0 0B44     		add	r3, r3, r1
 9502 06e2 03F58873 		add	r3, r3, #272
 9503 06e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9504 06e8 1846     		mov	r0, r3
 9505 06ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9506 06ec 0F49     		ldr	r1, .L449+20
 9507 06ee 0346     		mov	r3, r0
 9508 06f0 5B00     		lsls	r3, r3, #1
 9509 06f2 0344     		add	r3, r3, r0
 9510 06f4 1B01     		lsls	r3, r3, #4
 9511 06f6 0B44     		add	r3, r3, r1
 9512 06f8 1344     		add	r3, r3, r2
 9513 06fa 1433     		adds	r3, r3, #20
 9514 06fc 0022     		movs	r2, #0
 9515 06fe 1A70     		strb	r2, [r3]
1265:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9516              		.loc 1 1265 0 discriminator 3
 9517 0700 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9518 0702 0133     		adds	r3, r3, #1
 9519 0704 FB75     		strb	r3, [r7, #23]
 9520              	.L399:
1265:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9521              		.loc 1 1265 0 is_stmt 0 discriminator 1
 9522 0706 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9523 0708 022B     		cmp	r3, #2
 9524 070a 7FF67CAF 		bls	.L400
1270:..\src/command_processing.c ****             }
1271:..\src/command_processing.c ****             reset_last_value_flag = 1;
 9525              		.loc 1 1271 0 is_stmt 1
 9526 070e 094B     		ldr	r3, .L449+28
 9527 0710 0122     		movs	r2, #1
 9528 0712 1A70     		strb	r2, [r3]
1272:..\src/command_processing.c ****             break;
 9529              		.loc 1 1272 0
 9530 0714 00F078BE 		b	.L384
 9531              	.L450:
 9532              		.align	2
 9533              	.L449:
 9534 0718 00000000 		.word	g_mem
 9535 071c 0B000000 		.word	g_rx+11
 9536 0720 03000000 		.word	g_rx+3
 9537 0724 07000000 		.word	g_rx+7
 9538 0728 00000000 		.word	g_rx
 9539 072c 00000000 		.word	g_meas
 9540 0730 00000000 		.word	g_refNew
 9541 0734 00000000 		.word	reset_last_value_flag
 9542              	.L356:
1273:..\src/command_processing.c ****     
1274:..\src/command_processing.c ****         case 11:        //Position limits
1275:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 9543              		.loc 1 1275 0
 9544 0738 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9545 073a C14B     		ldr	r3, .L451
 9546 073c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9547 073e 1906     		lsls	r1, r3, #24
 9548 0740 BF4B     		ldr	r3, .L451
 9549 0742 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 219


 9550 0744 1B04     		lsls	r3, r3, #16
 9551 0746 1943     		orrs	r1, r1, r3
 9552 0748 BD4B     		ldr	r3, .L451
 9553 074a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9554 074c 1B02     		lsls	r3, r3, #8
 9555 074e 0B43     		orrs	r3, r3, r1
 9556 0750 BB49     		ldr	r1, .L451
 9557 0752 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 9558 0754 1943     		orrs	r1, r1, r3
 9559 0756 BB48     		ldr	r0, .L451+4
 9560 0758 1346     		mov	r3, r2
 9561 075a DB00     		lsls	r3, r3, #3
 9562 075c 9B1A     		subs	r3, r3, r2
 9563 075e 1B01     		lsls	r3, r3, #4
 9564 0760 0344     		add	r3, r3, r0
 9565 0762 E433     		adds	r3, r3, #228
 9566 0764 1960     		str	r1, [r3]
1276:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 9567              		.loc 1 1276 0
 9568 0766 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9569 0768 B54B     		ldr	r3, .L451
 9570 076a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9571 076c 1906     		lsls	r1, r3, #24
 9572 076e B44B     		ldr	r3, .L451
 9573 0770 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9574 0772 1B04     		lsls	r3, r3, #16
 9575 0774 1943     		orrs	r1, r1, r3
 9576 0776 B24B     		ldr	r3, .L451
 9577 0778 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 9578 077a 1B02     		lsls	r3, r3, #8
 9579 077c 0B43     		orrs	r3, r3, r1
 9580 077e B049     		ldr	r1, .L451
 9581 0780 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 9582 0782 1943     		orrs	r1, r1, r3
 9583 0784 AF48     		ldr	r0, .L451+4
 9584 0786 1346     		mov	r3, r2
 9585 0788 DB00     		lsls	r3, r3, #3
 9586 078a 9B1A     		subs	r3, r3, r2
 9587 078c 1B01     		lsls	r3, r3, #4
 9588 078e 0344     		add	r3, r3, r0
 9589 0790 E833     		adds	r3, r3, #232
 9590 0792 1960     		str	r1, [r3]
1277:..\src/command_processing.c **** 
1278:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 9591              		.loc 1 1278 0
 9592 0794 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9593 0796 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9594 0798 AA48     		ldr	r0, .L451+4
 9595 079a 0B46     		mov	r3, r1
 9596 079c DB00     		lsls	r3, r3, #3
 9597 079e 5B1A     		subs	r3, r3, r1
 9598 07a0 1B01     		lsls	r3, r3, #4
 9599 07a2 0344     		add	r3, r3, r0
 9600 07a4 E433     		adds	r3, r3, #228
 9601 07a6 1868     		ldr	r0, [r3]
 9602 07a8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9603 07aa A64C     		ldr	r4, .L451+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 220


 9604 07ac 0B46     		mov	r3, r1
 9605 07ae DB00     		lsls	r3, r3, #3
 9606 07b0 5B1A     		subs	r3, r3, r1
 9607 07b2 1B01     		lsls	r3, r3, #4
 9608 07b4 2344     		add	r3, r3, r4
 9609 07b6 03F58873 		add	r3, r3, #272
 9610 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9611 07bc 1C46     		mov	r4, r3
 9612 07be A149     		ldr	r1, .L451+4
 9613 07c0 2346     		mov	r3, r4
 9614 07c2 5B00     		lsls	r3, r3, #1
 9615 07c4 2344     		add	r3, r3, r4
 9616 07c6 1B01     		lsls	r3, r3, #4
 9617 07c8 0B44     		add	r3, r3, r1
 9618 07ca 03F29513 		addw	r3, r3, #405
 9619 07ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9620 07d0 00FA03F1 		lsl	r1, r0, r3
 9621 07d4 9B48     		ldr	r0, .L451+4
 9622 07d6 1346     		mov	r3, r2
 9623 07d8 DB00     		lsls	r3, r3, #3
 9624 07da 9B1A     		subs	r3, r3, r2
 9625 07dc 1B01     		lsls	r3, r3, #4
 9626 07de 0344     		add	r3, r3, r0
 9627 07e0 E433     		adds	r3, r3, #228
 9628 07e2 1960     		str	r1, [r3]
1279:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 9629              		.loc 1 1279 0
 9630 07e4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9631 07e6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9632 07e8 9648     		ldr	r0, .L451+4
 9633 07ea 0B46     		mov	r3, r1
 9634 07ec DB00     		lsls	r3, r3, #3
 9635 07ee 5B1A     		subs	r3, r3, r1
 9636 07f0 1B01     		lsls	r3, r3, #4
 9637 07f2 0344     		add	r3, r3, r0
 9638 07f4 E833     		adds	r3, r3, #232
 9639 07f6 1868     		ldr	r0, [r3]
 9640 07f8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9641 07fa 924C     		ldr	r4, .L451+4
 9642 07fc 0B46     		mov	r3, r1
 9643 07fe DB00     		lsls	r3, r3, #3
 9644 0800 5B1A     		subs	r3, r3, r1
 9645 0802 1B01     		lsls	r3, r3, #4
 9646 0804 2344     		add	r3, r3, r4
 9647 0806 03F58873 		add	r3, r3, #272
 9648 080a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9649 080c 1C46     		mov	r4, r3
 9650 080e 8D49     		ldr	r1, .L451+4
 9651 0810 2346     		mov	r3, r4
 9652 0812 5B00     		lsls	r3, r3, #1
 9653 0814 2344     		add	r3, r3, r4
 9654 0816 1B01     		lsls	r3, r3, #4
 9655 0818 0B44     		add	r3, r3, r1
 9656 081a 03F29513 		addw	r3, r3, #405
 9657 081e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9658 0820 00FA03F1 		lsl	r1, r0, r3
 9659 0824 8748     		ldr	r0, .L451+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 221


 9660 0826 1346     		mov	r3, r2
 9661 0828 DB00     		lsls	r3, r3, #3
 9662 082a 9B1A     		subs	r3, r3, r2
 9663 082c 1B01     		lsls	r3, r3, #4
 9664 082e 0344     		add	r3, r3, r0
 9665 0830 E833     		adds	r3, r3, #232
 9666 0832 1960     		str	r1, [r3]
1280:..\src/command_processing.c ****             break;            
 9667              		.loc 1 1280 0
 9668 0834 00F0E8BD 		b	.L384
 9669              	.L357:
1281:..\src/command_processing.c **** 
1282:..\src/command_processing.c ****         case 23:        //Rest Position
1283:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 9670              		.loc 1 1283 0
 9671 0838 814B     		ldr	r3, .L451
 9672 083a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9673 083c 1A06     		lsls	r2, r3, #24
 9674 083e 804B     		ldr	r3, .L451
 9675 0840 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9676 0842 1B04     		lsls	r3, r3, #16
 9677 0844 1A43     		orrs	r2, r2, r3
 9678 0846 7E4B     		ldr	r3, .L451
 9679 0848 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9680 084a 1B02     		lsls	r3, r3, #8
 9681 084c 1343     		orrs	r3, r3, r2
 9682 084e 7C4A     		ldr	r2, .L451
 9683 0850 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9684 0852 1343     		orrs	r3, r3, r2
 9685 0854 7B4A     		ldr	r2, .L451+4
 9686 0856 C2F8A032 		str	r3, [r2, #672]
1284:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 9687              		.loc 1 1284 0
 9688 085a 7A4B     		ldr	r3, .L451+4
 9689 085c D3F8A012 		ldr	r1, [r3, #672]
 9690 0860 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9691 0862 7848     		ldr	r0, .L451+4
 9692 0864 1346     		mov	r3, r2
 9693 0866 DB00     		lsls	r3, r3, #3
 9694 0868 9B1A     		subs	r3, r3, r2
 9695 086a 1B01     		lsls	r3, r3, #4
 9696 086c 0344     		add	r3, r3, r0
 9697 086e 03F58873 		add	r3, r3, #272
 9698 0872 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9699 0874 1846     		mov	r0, r3
 9700 0876 734A     		ldr	r2, .L451+4
 9701 0878 0346     		mov	r3, r0
 9702 087a 5B00     		lsls	r3, r3, #1
 9703 087c 0344     		add	r3, r3, r0
 9704 087e 1B01     		lsls	r3, r3, #4
 9705 0880 1344     		add	r3, r3, r2
 9706 0882 03F29513 		addw	r3, r3, #405
 9707 0886 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9708 0888 01FA03F3 		lsl	r3, r1, r3
 9709 088c 6D4A     		ldr	r2, .L451+4
 9710 088e C2F8A032 		str	r3, [r2, #672]
1285:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 222


 9711              		.loc 1 1285 0
 9712 0892 00F0B9BD 		b	.L384
 9713              	.L358:
1286:..\src/command_processing.c ****             
1287:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1288:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 9714              		.loc 1 1288 0
 9715 0896 6A4B     		ldr	r3, .L451
 9716 0898 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9717 089a 1A06     		lsls	r2, r3, #24
 9718 089c 684B     		ldr	r3, .L451
 9719 089e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9720 08a0 1B04     		lsls	r3, r3, #16
 9721 08a2 1A43     		orrs	r2, r2, r3
 9722 08a4 664B     		ldr	r3, .L451
 9723 08a6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9724 08a8 1B02     		lsls	r3, r3, #8
 9725 08aa 1343     		orrs	r3, r3, r2
 9726 08ac 644A     		ldr	r2, .L451
 9727 08ae 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9728 08b0 1343     		orrs	r3, r3, r2
 9729 08b2 644A     		ldr	r2, .L451+4
 9730 08b4 C2F8A432 		str	r3, [r2, #676]
1289:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 9731              		.loc 1 1289 0
 9732 08b8 624B     		ldr	r3, .L451+4
 9733 08ba D3F8A432 		ldr	r3, [r3, #676]
 9734 08be 092B     		cmp	r3, #9
 9735 08c0 00F39985 		bgt	.L442
 9736              		.loc 1 1289 0 is_stmt 0 discriminator 1
 9737 08c4 5F4B     		ldr	r3, .L451+4
 9738 08c6 0A22     		movs	r2, #10
 9739 08c8 C3F8A422 		str	r2, [r3, #676]
1290:..\src/command_processing.c ****            break; 
 9740              		.loc 1 1290 0 is_stmt 1 discriminator 1
 9741 08cc 00F093BD 		b	.L442
 9742              	.L359:
1291:..\src/command_processing.c ****             
1292:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1293:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 9743              		.loc 1 1293 0
 9744 08d0 5B4B     		ldr	r3, .L451
 9745 08d2 DB78     		ldrb	r3, [r3, #3]
 9746 08d4 BB74     		strb	r3, [r7, #18]
1294:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 9747              		.loc 1 1294 0
 9748 08d6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9749 08d8 002B     		cmp	r3, #0
 9750 08da 04D0     		beq	.L402
1295:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 9751              		.loc 1 1295 0
 9752 08dc 594B     		ldr	r3, .L451+4
 9753 08de 0122     		movs	r2, #1
 9754 08e0 83F8A720 		strb	r2, [r3, #167]
 9755 08e4 03E0     		b	.L403
 9756              	.L402:
1296:..\src/command_processing.c ****             } else {            // 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 223


1297:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 9757              		.loc 1 1297 0
 9758 08e6 574B     		ldr	r3, .L451+4
 9759 08e8 0022     		movs	r2, #0
 9760 08ea 83F8A720 		strb	r2, [r3, #167]
 9761              	.L403:
1298:..\src/command_processing.c ****             }
1299:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 9762              		.loc 1 1299 0
 9763 08ee 564B     		ldr	r3, .L451+8
 9764 08f0 0122     		movs	r2, #1
 9765 08f2 1A70     		strb	r2, [r3]
1300:..\src/command_processing.c **** 
1301:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 9766              		.loc 1 1301 0
 9767 08f4 534B     		ldr	r3, .L451+4
 9768 08f6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 9769 08fa 002B     		cmp	r3, #0
 9770 08fc 40F07D85 		bne	.L443
1302:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1303:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 9771              		.loc 1 1303 0
 9772 0900 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9773 0902 504B     		ldr	r3, .L451+4
 9774 0904 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 9775 0908 4E49     		ldr	r1, .L451+4
 9776 090a 1346     		mov	r3, r2
 9777 090c DB00     		lsls	r3, r3, #3
 9778 090e 9B1A     		subs	r3, r3, r2
 9779 0910 1B01     		lsls	r3, r3, #4
 9780 0912 0B44     		add	r3, r3, r1
 9781 0914 03F58873 		add	r3, r3, #272
 9782 0918 0246     		mov	r2, r0
 9783 091a 1A70     		strb	r2, [r3]
1304:..\src/command_processing.c ****                 
1305:..\src/command_processing.c ****                 // Change also gears parameters
1306:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 9784              		.loc 1 1306 0
 9785 091c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9786 091e 4949     		ldr	r1, .L451+4
 9787 0920 1346     		mov	r3, r2
 9788 0922 DB00     		lsls	r3, r3, #3
 9789 0924 9B1A     		subs	r3, r3, r2
 9790 0926 1B01     		lsls	r3, r3, #4
 9791 0928 0B44     		add	r3, r3, r1
 9792 092a 03F58873 		add	r3, r3, #272
 9793 092e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9794 0930 1946     		mov	r1, r3
 9795 0932 444A     		ldr	r2, .L451+4
 9796 0934 0B46     		mov	r3, r1
 9797 0936 5B00     		lsls	r3, r3, #1
 9798 0938 0B44     		add	r3, r3, r1
 9799 093a 1B01     		lsls	r3, r3, #4
 9800 093c 1344     		add	r3, r3, r2
 9801 093e 03F5D873 		add	r3, r3, #432
 9802 0942 0122     		movs	r2, #1
 9803 0944 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 224


1307:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 9804              		.loc 1 1307 0
 9805 0946 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9806 0948 3E49     		ldr	r1, .L451+4
 9807 094a 1346     		mov	r3, r2
 9808 094c DB00     		lsls	r3, r3, #3
 9809 094e 9B1A     		subs	r3, r3, r2
 9810 0950 1B01     		lsls	r3, r3, #4
 9811 0952 0B44     		add	r3, r3, r1
 9812 0954 03F58873 		add	r3, r3, #272
 9813 0958 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9814 095a 1946     		mov	r1, r3
 9815 095c 394A     		ldr	r2, .L451+4
 9816 095e 0B46     		mov	r3, r1
 9817 0960 5B00     		lsls	r3, r3, #1
 9818 0962 0B44     		add	r3, r3, r1
 9819 0964 1B01     		lsls	r3, r3, #4
 9820 0966 1344     		add	r3, r3, r2
 9821 0968 03F2B513 		addw	r3, r3, #437
 9822 096c 2322     		movs	r2, #35
 9823 096e 1A70     		strb	r2, [r3]
1308:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 9824              		.loc 1 1308 0
 9825 0970 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9826 0972 3449     		ldr	r1, .L451+4
 9827 0974 1346     		mov	r3, r2
 9828 0976 DB00     		lsls	r3, r3, #3
 9829 0978 9B1A     		subs	r3, r3, r2
 9830 097a 1B01     		lsls	r3, r3, #4
 9831 097c 0B44     		add	r3, r3, r1
 9832 097e 03F58873 		add	r3, r3, #272
 9833 0982 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9834 0984 1946     		mov	r1, r3
 9835 0986 2F4A     		ldr	r2, .L451+4
 9836 0988 0B46     		mov	r3, r1
 9837 098a 5B00     		lsls	r3, r3, #1
 9838 098c 0B44     		add	r3, r3, r1
 9839 098e 1B01     		lsls	r3, r3, #4
 9840 0990 1344     		add	r3, r3, r2
 9841 0992 03F5DB73 		add	r3, r3, #438
 9842 0996 0322     		movs	r2, #3
 9843 0998 1A70     		strb	r2, [r3]
1309:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 9844              		.loc 1 1309 0
 9845 099a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9846 099c 2949     		ldr	r1, .L451+4
 9847 099e 1346     		mov	r3, r2
 9848 09a0 DB00     		lsls	r3, r3, #3
 9849 09a2 9B1A     		subs	r3, r3, r2
 9850 09a4 1B01     		lsls	r3, r3, #4
 9851 09a6 0B44     		add	r3, r3, r1
 9852 09a8 03F58873 		add	r3, r3, #272
 9853 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9854 09ae 1946     		mov	r1, r3
 9855 09b0 244A     		ldr	r2, .L451+4
 9856 09b2 0B46     		mov	r3, r1
 9857 09b4 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 225


 9858 09b6 0B44     		add	r3, r3, r1
 9859 09b8 1B01     		lsls	r3, r3, #4
 9860 09ba 1344     		add	r3, r3, r2
 9861 09bc 03F2B713 		addw	r3, r3, #439
 9862 09c0 FF22     		movs	r2, #255
 9863 09c2 1A70     		strb	r2, [r3]
1310:..\src/command_processing.c ****                 
1311:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1312:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 9864              		.loc 1 1312 0
 9865 09c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9866 09c6 1F49     		ldr	r1, .L451+4
 9867 09c8 1346     		mov	r3, r2
 9868 09ca DB00     		lsls	r3, r3, #3
 9869 09cc 9B1A     		subs	r3, r3, r2
 9870 09ce 1B01     		lsls	r3, r3, #4
 9871 09d0 0B44     		add	r3, r3, r1
 9872 09d2 03F21113 		addw	r3, r3, #273
 9873 09d6 0122     		movs	r2, #1
 9874 09d8 1A70     		strb	r2, [r3]
1313:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 9875              		.loc 1 1313 0
 9876 09da 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9877 09dc 1949     		ldr	r1, .L451+4
 9878 09de 1346     		mov	r3, r2
 9879 09e0 DB00     		lsls	r3, r3, #3
 9880 09e2 9B1A     		subs	r3, r3, r2
 9881 09e4 1B01     		lsls	r3, r3, #4
 9882 09e6 0B44     		add	r3, r3, r1
 9883 09e8 03F58973 		add	r3, r3, #274
 9884 09ec 0122     		movs	r2, #1
 9885 09ee 1A70     		strb	r2, [r3]
1314:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 9886              		.loc 1 1314 0
 9887 09f0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9888 09f2 1449     		ldr	r1, .L451+4
 9889 09f4 1346     		mov	r3, r2
 9890 09f6 DB00     		lsls	r3, r3, #3
 9891 09f8 9B1A     		subs	r3, r3, r2
 9892 09fa 1B01     		lsls	r3, r3, #4
 9893 09fc 0B44     		add	r3, r3, r1
 9894 09fe E433     		adds	r3, r3, #228
 9895 0a00 0022     		movs	r2, #0
 9896 0a02 1A60     		str	r2, [r3]
1315:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 9897              		.loc 1 1315 0
 9898 0a04 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9899 0a06 0F4B     		ldr	r3, .L451+4
 9900 0a08 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9901 0a0c 1846     		mov	r0, r3
 9902 0a0e 0D49     		ldr	r1, .L451+4
 9903 0a10 0346     		mov	r3, r0
 9904 0a12 5B00     		lsls	r3, r3, #1
 9905 0a14 0344     		add	r3, r3, r0
 9906 0a16 1B01     		lsls	r3, r3, #4
 9907 0a18 0B44     		add	r3, r3, r1
 9908 0a1a 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 226


 9909 0a1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9910 0a20 1946     		mov	r1, r3
 9911 0a22 4FF47A53 		mov	r3, #16000
 9912 0a26 03FA01F1 		lsl	r1, r3, r1
 9913 0a2a 0648     		ldr	r0, .L451+4
 9914 0a2c 1346     		mov	r3, r2
 9915 0a2e DB00     		lsls	r3, r3, #3
 9916 0a30 9B1A     		subs	r3, r3, r2
 9917 0a32 1B01     		lsls	r3, r3, #4
 9918 0a34 0344     		add	r3, r3, r0
 9919 0a36 E833     		adds	r3, r3, #232
 9920 0a38 1960     		str	r1, [r3]
1316:..\src/command_processing.c ****             }    
1317:..\src/command_processing.c **** 
1318:..\src/command_processing.c ****             break; 
 9921              		.loc 1 1318 0
 9922 0a3a 00F0DEBC 		b	.L443
 9923              	.L452:
 9924 0a3e 00BF     		.align	2
 9925              	.L451:
 9926 0a40 00000000 		.word	g_rx
 9927 0a44 00000000 		.word	g_mem
 9928 0a48 00000000 		.word	reset_last_value_flag
 9929              	.L360:
1319:..\src/command_processing.c **** 
1320:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1321:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 9930              		.loc 1 1321 0
 9931 0a4c A94B     		ldr	r3, .L453
 9932 0a4e DB78     		ldrb	r3, [r3, #3]
 9933 0a50 BB74     		strb	r3, [r7, #18]
1322:..\src/command_processing.c ****             if (aux_uchar) {
 9934              		.loc 1 1322 0
 9935 0a52 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9936 0a54 002B     		cmp	r3, #0
 9937 0a56 05D0     		beq	.L405
1323:..\src/command_processing.c ****                 reset_counters();
 9938              		.loc 1 1323 0
 9939 0a58 FFF7FEFF 		bl	reset_counters
1324:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 9940              		.loc 1 1324 0
 9941 0a5c A64B     		ldr	r3, .L453+4
 9942 0a5e 0022     		movs	r2, #0
 9943 0a60 83F8A820 		strb	r2, [r3, #168]
 9944              	.L405:
1325:..\src/command_processing.c ****             }
1326:..\src/command_processing.c ****             
1327:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 9945              		.loc 1 1327 0
 9946 0a64 A54B     		ldr	r3, .L453+8
 9947 0a66 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 9948 0a6a 012B     		cmp	r3, #1
 9949 0a6c 40F0C784 		bne	.L444
1328:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1329:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 9950              		.loc 1 1329 0
 9951 0a70 8720     		movs	r0, #135
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 227


 9952 0a72 FFF7FEFF 		bl	DS1302_read
 9953 0a76 0346     		mov	r3, r0
 9954 0a78 BB74     		strb	r3, [r7, #18]
1330:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 9955              		.loc 1 1330 0
 9956 0a7a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9957 0a7c 1B09     		lsrs	r3, r3, #4
 9958 0a7e DBB2     		uxtb	r3, r3
 9959 0a80 1A46     		mov	r2, r3
 9960 0a82 9200     		lsls	r2, r2, #2
 9961 0a84 1344     		add	r3, r3, r2
 9962 0a86 5B00     		lsls	r3, r3, #1
 9963 0a88 DAB2     		uxtb	r2, r3
 9964 0a8a BB7C     		ldrb	r3, [r7, #18]
 9965 0a8c 03F00F03 		and	r3, r3, #15
 9966 0a90 DBB2     		uxtb	r3, r3
 9967 0a92 1344     		add	r3, r3, r2
 9968 0a94 DAB2     		uxtb	r2, r3
 9969 0a96 984B     		ldr	r3, .L453+4
 9970 0a98 83F8A420 		strb	r2, [r3, #164]
1331:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 9971              		.loc 1 1331 0
 9972 0a9c 8920     		movs	r0, #137
 9973 0a9e FFF7FEFF 		bl	DS1302_read
 9974 0aa2 0346     		mov	r3, r0
 9975 0aa4 BB74     		strb	r3, [r7, #18]
1332:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 9976              		.loc 1 1332 0
 9977 0aa6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9978 0aa8 1B09     		lsrs	r3, r3, #4
 9979 0aaa DBB2     		uxtb	r3, r3
 9980 0aac 1A46     		mov	r2, r3
 9981 0aae 9200     		lsls	r2, r2, #2
 9982 0ab0 1344     		add	r3, r3, r2
 9983 0ab2 5B00     		lsls	r3, r3, #1
 9984 0ab4 DAB2     		uxtb	r2, r3
 9985 0ab6 BB7C     		ldrb	r3, [r7, #18]
 9986 0ab8 03F00F03 		and	r3, r3, #15
 9987 0abc DBB2     		uxtb	r3, r3
 9988 0abe 1344     		add	r3, r3, r2
 9989 0ac0 DAB2     		uxtb	r2, r3
 9990 0ac2 8D4B     		ldr	r3, .L453+4
 9991 0ac4 83F8A520 		strb	r2, [r3, #165]
1333:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 9992              		.loc 1 1333 0
 9993 0ac8 8D20     		movs	r0, #141
 9994 0aca FFF7FEFF 		bl	DS1302_read
 9995 0ace 0346     		mov	r3, r0
 9996 0ad0 BB74     		strb	r3, [r7, #18]
1334:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 9997              		.loc 1 1334 0
 9998 0ad2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9999 0ad4 1B09     		lsrs	r3, r3, #4
 10000 0ad6 DBB2     		uxtb	r3, r3
 10001 0ad8 1A46     		mov	r2, r3
 10002 0ada 9200     		lsls	r2, r2, #2
 10003 0adc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 228


 10004 0ade 5B00     		lsls	r3, r3, #1
 10005 0ae0 DAB2     		uxtb	r2, r3
 10006 0ae2 BB7C     		ldrb	r3, [r7, #18]
 10007 0ae4 03F00F03 		and	r3, r3, #15
 10008 0ae8 DBB2     		uxtb	r3, r3
 10009 0aea 1344     		add	r3, r3, r2
 10010 0aec DAB2     		uxtb	r2, r3
 10011 0aee 824B     		ldr	r3, .L453+4
 10012 0af0 83F8A620 		strb	r2, [r3, #166]
1335:..\src/command_processing.c ****             }
1336:..\src/command_processing.c ****             break;             
 10013              		.loc 1 1336 0
 10014 0af4 00F083BC 		b	.L444
 10015              	.L361:
 10016              	.LBB15:
1337:..\src/command_processing.c ****             
1338:..\src/command_processing.c ****         case 32:         //Current Time
1339:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10017              		.loc 1 1339 0
 10018 0af8 0023     		movs	r3, #0
 10019 0afa 7B75     		strb	r3, [r7, #21]
 10020 0afc 0CE0     		b	.L407
 10021              	.L408:
1340:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10022              		.loc 1 1340 0 discriminator 3
 10023 0afe 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10024 0b00 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10025 0b02 0332     		adds	r2, r2, #3
 10026 0b04 7B49     		ldr	r1, .L453
 10027 0b06 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10028 0b08 7B4A     		ldr	r2, .L453+4
 10029 0b0a 1344     		add	r3, r3, r2
 10030 0b0c 0A46     		mov	r2, r1
 10031 0b0e 83F82022 		strb	r2, [r3, #544]
1339:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10032              		.loc 1 1339 0 discriminator 3
 10033 0b12 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10034 0b14 0133     		adds	r3, r3, #1
 10035 0b16 7B75     		strb	r3, [r7, #21]
 10036              	.L407:
1339:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10037              		.loc 1 1339 0 is_stmt 0 discriminator 1
 10038 0b18 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10039 0b1a 052B     		cmp	r3, #5
 10040 0b1c EFD9     		bls	.L408
 10041              	.LBE15:
1341:..\src/command_processing.c ****             }
1342:..\src/command_processing.c ****             
1343:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10042              		.loc 1 1343 0 is_stmt 1
 10043 0b1e 764B     		ldr	r3, .L453+4
 10044 0b20 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10045 0b24 012B     		cmp	r3, #1
 10046 0b26 40F06C84 		bne	.L445
1344:..\src/command_processing.c ****                 set_RTC_time();
 10047              		.loc 1 1344 0
 10048 0b2a FFF7FEFF 		bl	set_RTC_time
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 229


1345:..\src/command_processing.c ****             }
1346:..\src/command_processing.c ****             break;
 10049              		.loc 1 1346 0
 10050 0b2e 00F068BC 		b	.L445
 10051              	.L362:
1347:..\src/command_processing.c ****            
1348:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1349:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10052              		.loc 1 1349 0
 10053 0b32 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10054 0b34 6F4B     		ldr	r3, .L453
 10055 0b36 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10056 0b38 6F49     		ldr	r1, .L453+4
 10057 0b3a 1346     		mov	r3, r2
 10058 0b3c DB00     		lsls	r3, r3, #3
 10059 0b3e 9B1A     		subs	r3, r3, r2
 10060 0b40 1B01     		lsls	r3, r3, #4
 10061 0b42 0B44     		add	r3, r3, r1
 10062 0b44 E233     		adds	r3, r3, #226
 10063 0b46 0246     		mov	r2, r0
 10064 0b48 1A70     		strb	r2, [r3]
1350:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10065              		.loc 1 1350 0
 10066 0b4a 6B4B     		ldr	r3, .L453+4
 10067 0b4c 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10068 0b50 5B00     		lsls	r3, r3, #1
 10069 0b52 5AB2     		sxtb	r2, r3
 10070 0b54 684B     		ldr	r3, .L453+4
 10071 0b56 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10072 0b5a 5BB2     		sxtb	r3, r3
 10073 0b5c 1343     		orrs	r3, r3, r2
 10074 0b5e 5BB2     		sxtb	r3, r3
 10075 0b60 DBB2     		uxtb	r3, r3
 10076 0b62 1846     		mov	r0, r3
 10077 0b64 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1351:..\src/command_processing.c ****             break;
 10078              		.loc 1 1351 0
 10079 0b68 00F04EBC 		b	.L384
 10080              	.L363:
1352:..\src/command_processing.c ****             
1353:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1354:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10081              		.loc 1 1354 0
 10082 0b6c FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10083 0b6e 6349     		ldr	r1, .L453+8
 10084 0b70 1346     		mov	r3, r2
 10085 0b72 DB00     		lsls	r3, r3, #3
 10086 0b74 9B1A     		subs	r3, r3, r2
 10087 0b76 1B01     		lsls	r3, r3, #4
 10088 0b78 0B44     		add	r3, r3, r1
 10089 0b7a 03F20F13 		addw	r3, r3, #271
 10090 0b7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10091 0b80 032B     		cmp	r3, #3
 10092 0b82 00F08580 		beq	.L410
1355:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10093              		.loc 1 1355 0
 10094 0b86 5E4B     		ldr	r3, .L453+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 230


 10095 0b88 1B68     		ldr	r3, [r3]	@ float
 10096 0b8a FB60     		str	r3, [r7, #12]	@ float
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10097              		.loc 1 1356 0
 10098 0b8c 0023     		movs	r3, #0
 10099 0b8e BB75     		strb	r3, [r7, #22]
 10100 0b90 0EE0     		b	.L411
 10101              	.L412:
1357:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10102              		.loc 1 1357 0 discriminator 3
 10103 0b92 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10104 0b94 C3F10303 		rsb	r3, r3, #3
 10105 0b98 07F10802 		add	r2, r7, #8
 10106 0b9c 1344     		add	r3, r3, r2
 10107 0b9e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10108 0ba0 07F10C01 		add	r1, r7, #12
 10109 0ba4 0A44     		add	r2, r2, r1
 10110 0ba6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10111 0ba8 1A70     		strb	r2, [r3]
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10112              		.loc 1 1356 0 discriminator 3
 10113 0baa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10114 0bac 0133     		adds	r3, r3, #1
 10115 0bae BB75     		strb	r3, [r7, #22]
 10116              	.L411:
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10117              		.loc 1 1356 0 is_stmt 0 discriminator 1
 10118 0bb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10119 0bb2 032B     		cmp	r3, #3
 10120 0bb4 EDD9     		bls	.L412
1358:..\src/command_processing.c ****                 }
1359:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10121              		.loc 1 1359 0 is_stmt 1
 10122 0bb6 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10123 0bb8 BB68     		ldr	r3, [r7, #8]	@ float
 10124 0bba 4FF08F41 		mov	r1, #1199570944
 10125 0bbe 1846     		mov	r0, r3
 10126 0bc0 FFF7FEFF 		bl	__aeabi_fmul
 10127 0bc4 0346     		mov	r3, r0
 10128 0bc6 1846     		mov	r0, r3
 10129 0bc8 FFF7FEFF 		bl	__aeabi_f2iz
 10130 0bcc 0146     		mov	r1, r0
 10131 0bce 4A4A     		ldr	r2, .L453+4
 10132 0bd0 2346     		mov	r3, r4
 10133 0bd2 DB00     		lsls	r3, r3, #3
 10134 0bd4 1B1B     		subs	r3, r3, r4
 10135 0bd6 1B01     		lsls	r3, r3, #4
 10136 0bd8 1344     		add	r3, r3, r2
 10137 0bda B033     		adds	r3, r3, #176
 10138 0bdc 1960     		str	r1, [r3]
1360:..\src/command_processing.c ****                 
1361:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10139              		.loc 1 1361 0
 10140 0bde 494B     		ldr	r3, .L453+16
 10141 0be0 1B68     		ldr	r3, [r3]	@ float
 10142 0be2 FB60     		str	r3, [r7, #12]	@ float
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 231


 10143              		.loc 1 1362 0
 10144 0be4 0023     		movs	r3, #0
 10145 0be6 BB75     		strb	r3, [r7, #22]
 10146 0be8 0EE0     		b	.L413
 10147              	.L414:
1363:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10148              		.loc 1 1363 0 discriminator 3
 10149 0bea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10150 0bec C3F10303 		rsb	r3, r3, #3
 10151 0bf0 07F10802 		add	r2, r7, #8
 10152 0bf4 1344     		add	r3, r3, r2
 10153 0bf6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10154 0bf8 07F10C01 		add	r1, r7, #12
 10155 0bfc 0A44     		add	r2, r2, r1
 10156 0bfe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10157 0c00 1A70     		strb	r2, [r3]
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10158              		.loc 1 1362 0 discriminator 3
 10159 0c02 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10160 0c04 0133     		adds	r3, r3, #1
 10161 0c06 BB75     		strb	r3, [r7, #22]
 10162              	.L413:
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10163              		.loc 1 1362 0 is_stmt 0 discriminator 1
 10164 0c08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10165 0c0a 032B     		cmp	r3, #3
 10166 0c0c EDD9     		bls	.L414
1364:..\src/command_processing.c ****                 }
1365:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10167              		.loc 1 1365 0 is_stmt 1
 10168 0c0e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10169 0c10 BB68     		ldr	r3, [r7, #8]	@ float
 10170 0c12 4FF08F41 		mov	r1, #1199570944
 10171 0c16 1846     		mov	r0, r3
 10172 0c18 FFF7FEFF 		bl	__aeabi_fmul
 10173 0c1c 0346     		mov	r3, r0
 10174 0c1e 1846     		mov	r0, r3
 10175 0c20 FFF7FEFF 		bl	__aeabi_f2iz
 10176 0c24 0146     		mov	r1, r0
 10177 0c26 344A     		ldr	r2, .L453+4
 10178 0c28 2346     		mov	r3, r4
 10179 0c2a DB00     		lsls	r3, r3, #3
 10180 0c2c 1B1B     		subs	r3, r3, r4
 10181 0c2e 1B01     		lsls	r3, r3, #4
 10182 0c30 1344     		add	r3, r3, r2
 10183 0c32 B433     		adds	r3, r3, #180
 10184 0c34 1960     		str	r1, [r3]
1366:..\src/command_processing.c ****                 
1367:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10185              		.loc 1 1367 0
 10186 0c36 344B     		ldr	r3, .L453+20
 10187 0c38 1B68     		ldr	r3, [r3]	@ float
 10188 0c3a FB60     		str	r3, [r7, #12]	@ float
1368:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10189              		.loc 1 1368 0
 10190 0c3c 0023     		movs	r3, #0
 10191 0c3e BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 232


 10192 0c40 0EE0     		b	.L415
 10193              	.L416:
1369:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10194              		.loc 1 1369 0 discriminator 3
 10195 0c42 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10196 0c44 C3F10303 		rsb	r3, r3, #3
 10197 0c48 07F10802 		add	r2, r7, #8
 10198 0c4c 1344     		add	r3, r3, r2
 10199 0c4e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10200 0c50 07F10C01 		add	r1, r7, #12
 10201 0c54 0A44     		add	r2, r2, r1
 10202 0c56 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10203 0c58 1A70     		strb	r2, [r3]
1368:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10204              		.loc 1 1368 0 discriminator 3
 10205 0c5a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10206 0c5c 0133     		adds	r3, r3, #1
 10207 0c5e BB75     		strb	r3, [r7, #22]
 10208              	.L415:
1368:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10209              		.loc 1 1368 0 is_stmt 0 discriminator 1
 10210 0c60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10211 0c62 032B     		cmp	r3, #3
 10212 0c64 EDD9     		bls	.L416
1370:..\src/command_processing.c ****                 }
1371:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 10213              		.loc 1 1371 0 is_stmt 1
 10214 0c66 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10215 0c68 BB68     		ldr	r3, [r7, #8]	@ float
 10216 0c6a 4FF08F41 		mov	r1, #1199570944
 10217 0c6e 1846     		mov	r0, r3
 10218 0c70 FFF7FEFF 		bl	__aeabi_fmul
 10219 0c74 0346     		mov	r3, r0
 10220 0c76 1846     		mov	r0, r3
 10221 0c78 FFF7FEFF 		bl	__aeabi_f2iz
 10222 0c7c 0146     		mov	r1, r0
 10223 0c7e 1E4A     		ldr	r2, .L453+4
 10224 0c80 2346     		mov	r3, r4
 10225 0c82 DB00     		lsls	r3, r3, #3
 10226 0c84 1B1B     		subs	r3, r3, r4
 10227 0c86 1B01     		lsls	r3, r3, #4
 10228 0c88 1344     		add	r3, r3, r2
 10229 0c8a B833     		adds	r3, r3, #184
 10230 0c8c 1960     		str	r1, [r3]
1372:..\src/command_processing.c ****             }
1373:..\src/command_processing.c ****             else {
1374:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1375:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1376:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1377:..\src/command_processing.c ****                 }
1378:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1379:..\src/command_processing.c ****                 
1380:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1381:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1382:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1383:..\src/command_processing.c ****                 }
1384:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 233


1385:..\src/command_processing.c ****                 
1386:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1387:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1388:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1389:..\src/command_processing.c ****                 }
1390:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1391:..\src/command_processing.c ****             }
1392:..\src/command_processing.c ****             break;
 10231              		.loc 1 1392 0
 10232 0c8e BBE3     		b	.L384
 10233              	.L410:
1374:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10234              		.loc 1 1374 0
 10235 0c90 1B4B     		ldr	r3, .L453+12
 10236 0c92 1B68     		ldr	r3, [r3]	@ float
 10237 0c94 FB60     		str	r3, [r7, #12]	@ float
1375:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10238              		.loc 1 1375 0
 10239 0c96 0023     		movs	r3, #0
 10240 0c98 BB75     		strb	r3, [r7, #22]
 10241 0c9a 0EE0     		b	.L418
 10242              	.L419:
1376:..\src/command_processing.c ****                 }
 10243              		.loc 1 1376 0 discriminator 3
 10244 0c9c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10245 0c9e C3F10303 		rsb	r3, r3, #3
 10246 0ca2 07F10802 		add	r2, r7, #8
 10247 0ca6 1344     		add	r3, r3, r2
 10248 0ca8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10249 0caa 07F10C01 		add	r1, r7, #12
 10250 0cae 0A44     		add	r2, r2, r1
 10251 0cb0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10252 0cb2 1A70     		strb	r2, [r3]
1375:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10253              		.loc 1 1375 0 discriminator 3
 10254 0cb4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10255 0cb6 0133     		adds	r3, r3, #1
 10256 0cb8 BB75     		strb	r3, [r7, #22]
 10257              	.L418:
1375:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10258              		.loc 1 1375 0 is_stmt 0 discriminator 1
 10259 0cba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10260 0cbc 032B     		cmp	r3, #3
 10261 0cbe EDD9     		bls	.L419
1378:..\src/command_processing.c ****                 
 10262              		.loc 1 1378 0 is_stmt 1
 10263 0cc0 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10264 0cc2 BB68     		ldr	r3, [r7, #8]	@ float
 10265 0cc4 4FF08F41 		mov	r1, #1199570944
 10266 0cc8 1846     		mov	r0, r3
 10267 0cca FFF7FEFF 		bl	__aeabi_fmul
 10268 0cce 0346     		mov	r3, r0
 10269 0cd0 1846     		mov	r0, r3
 10270 0cd2 FFF7FEFF 		bl	__aeabi_f2iz
 10271 0cd6 0146     		mov	r1, r0
 10272 0cd8 074A     		ldr	r2, .L453+4
 10273 0cda 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 234


 10274 0cdc DB00     		lsls	r3, r3, #3
 10275 0cde 1B1B     		subs	r3, r3, r4
 10276 0ce0 1B01     		lsls	r3, r3, #4
 10277 0ce2 1344     		add	r3, r3, r2
 10278 0ce4 C833     		adds	r3, r3, #200
 10279 0ce6 1960     		str	r1, [r3]
1380:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10280              		.loc 1 1380 0
 10281 0ce8 064B     		ldr	r3, .L453+16
 10282 0cea 1B68     		ldr	r3, [r3]	@ float
 10283 0cec FB60     		str	r3, [r7, #12]	@ float
1381:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10284              		.loc 1 1381 0
 10285 0cee 0023     		movs	r3, #0
 10286 0cf0 BB75     		strb	r3, [r7, #22]
 10287 0cf2 1AE0     		b	.L420
 10288              	.L454:
 10289              		.align	2
 10290              	.L453:
 10291 0cf4 00000000 		.word	g_rx
 10292 0cf8 00000000 		.word	g_mem
 10293 0cfc 00000000 		.word	c_mem
 10294 0d00 03000000 		.word	g_rx+3
 10295 0d04 07000000 		.word	g_rx+7
 10296 0d08 0B000000 		.word	g_rx+11
 10297              	.L421:
1382:..\src/command_processing.c ****                 }
 10298              		.loc 1 1382 0 discriminator 3
 10299 0d0c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10300 0d0e C3F10303 		rsb	r3, r3, #3
 10301 0d12 07F10802 		add	r2, r7, #8
 10302 0d16 1344     		add	r3, r3, r2
 10303 0d18 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10304 0d1a 07F10C01 		add	r1, r7, #12
 10305 0d1e 0A44     		add	r2, r2, r1
 10306 0d20 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10307 0d22 1A70     		strb	r2, [r3]
1381:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10308              		.loc 1 1381 0 discriminator 3
 10309 0d24 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10310 0d26 0133     		adds	r3, r3, #1
 10311 0d28 BB75     		strb	r3, [r7, #22]
 10312              	.L420:
1381:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10313              		.loc 1 1381 0 is_stmt 0 discriminator 1
 10314 0d2a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10315 0d2c 032B     		cmp	r3, #3
 10316 0d2e EDD9     		bls	.L421
1384:..\src/command_processing.c ****                 
 10317              		.loc 1 1384 0 is_stmt 1
 10318 0d30 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10319 0d32 BB68     		ldr	r3, [r7, #8]	@ float
 10320 0d34 4FF08F41 		mov	r1, #1199570944
 10321 0d38 1846     		mov	r0, r3
 10322 0d3a FFF7FEFF 		bl	__aeabi_fmul
 10323 0d3e 0346     		mov	r3, r0
 10324 0d40 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 235


 10325 0d42 FFF7FEFF 		bl	__aeabi_f2iz
 10326 0d46 0146     		mov	r1, r0
 10327 0d48 A54A     		ldr	r2, .L455
 10328 0d4a 2346     		mov	r3, r4
 10329 0d4c DB00     		lsls	r3, r3, #3
 10330 0d4e 1B1B     		subs	r3, r3, r4
 10331 0d50 1B01     		lsls	r3, r3, #4
 10332 0d52 1344     		add	r3, r3, r2
 10333 0d54 CC33     		adds	r3, r3, #204
 10334 0d56 1960     		str	r1, [r3]
1386:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10335              		.loc 1 1386 0
 10336 0d58 A24B     		ldr	r3, .L455+4
 10337 0d5a 1B68     		ldr	r3, [r3]	@ float
 10338 0d5c FB60     		str	r3, [r7, #12]	@ float
1387:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10339              		.loc 1 1387 0
 10340 0d5e 0023     		movs	r3, #0
 10341 0d60 BB75     		strb	r3, [r7, #22]
 10342 0d62 0EE0     		b	.L422
 10343              	.L423:
1388:..\src/command_processing.c ****                 }
 10344              		.loc 1 1388 0 discriminator 3
 10345 0d64 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10346 0d66 C3F10303 		rsb	r3, r3, #3
 10347 0d6a 07F10802 		add	r2, r7, #8
 10348 0d6e 1344     		add	r3, r3, r2
 10349 0d70 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10350 0d72 07F10C01 		add	r1, r7, #12
 10351 0d76 0A44     		add	r2, r2, r1
 10352 0d78 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10353 0d7a 1A70     		strb	r2, [r3]
1387:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10354              		.loc 1 1387 0 discriminator 3
 10355 0d7c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10356 0d7e 0133     		adds	r3, r3, #1
 10357 0d80 BB75     		strb	r3, [r7, #22]
 10358              	.L422:
1387:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10359              		.loc 1 1387 0 is_stmt 0 discriminator 1
 10360 0d82 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10361 0d84 032B     		cmp	r3, #3
 10362 0d86 EDD9     		bls	.L423
1390:..\src/command_processing.c ****             }
 10363              		.loc 1 1390 0 is_stmt 1
 10364 0d88 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10365 0d8a BB68     		ldr	r3, [r7, #8]	@ float
 10366 0d8c 4FF08F41 		mov	r1, #1199570944
 10367 0d90 1846     		mov	r0, r3
 10368 0d92 FFF7FEFF 		bl	__aeabi_fmul
 10369 0d96 0346     		mov	r3, r0
 10370 0d98 1846     		mov	r0, r3
 10371 0d9a FFF7FEFF 		bl	__aeabi_f2iz
 10372 0d9e 0146     		mov	r1, r0
 10373 0da0 8F4A     		ldr	r2, .L455
 10374 0da2 2346     		mov	r3, r4
 10375 0da4 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 236


 10376 0da6 1B1B     		subs	r3, r3, r4
 10377 0da8 1B01     		lsls	r3, r3, #4
 10378 0daa 1344     		add	r3, r3, r2
 10379 0dac D033     		adds	r3, r3, #208
 10380 0dae 1960     		str	r1, [r3]
 10381              		.loc 1 1392 0
 10382 0db0 2AE3     		b	.L384
 10383              	.L364:
1393:..\src/command_processing.c ****             
1394:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1395:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10384              		.loc 1 1395 0
 10385 0db2 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10386 0db4 8C49     		ldr	r1, .L455+8
 10387 0db6 1346     		mov	r3, r2
 10388 0db8 DB00     		lsls	r3, r3, #3
 10389 0dba 9B1A     		subs	r3, r3, r2
 10390 0dbc 1B01     		lsls	r3, r3, #4
 10391 0dbe 0B44     		add	r3, r3, r1
 10392 0dc0 03F20F13 		addw	r3, r3, #271
 10393 0dc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10394 0dc6 032B     		cmp	r3, #3
 10395 0dc8 00F08580 		beq	.L424
1396:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10396              		.loc 1 1396 0
 10397 0dcc 874B     		ldr	r3, .L455+12
 10398 0dce 1B68     		ldr	r3, [r3]	@ float
 10399 0dd0 FB60     		str	r3, [r7, #12]	@ float
1397:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10400              		.loc 1 1397 0
 10401 0dd2 0023     		movs	r3, #0
 10402 0dd4 BB75     		strb	r3, [r7, #22]
 10403 0dd6 0EE0     		b	.L425
 10404              	.L426:
1398:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10405              		.loc 1 1398 0 discriminator 3
 10406 0dd8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10407 0dda C3F10303 		rsb	r3, r3, #3
 10408 0dde 07F10802 		add	r2, r7, #8
 10409 0de2 1344     		add	r3, r3, r2
 10410 0de4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10411 0de6 07F10C01 		add	r1, r7, #12
 10412 0dea 0A44     		add	r2, r2, r1
 10413 0dec 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10414 0dee 1A70     		strb	r2, [r3]
1397:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10415              		.loc 1 1397 0 discriminator 3
 10416 0df0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10417 0df2 0133     		adds	r3, r3, #1
 10418 0df4 BB75     		strb	r3, [r7, #22]
 10419              	.L425:
1397:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10420              		.loc 1 1397 0 is_stmt 0 discriminator 1
 10421 0df6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10422 0df8 032B     		cmp	r3, #3
 10423 0dfa EDD9     		bls	.L426
1399:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 237


1400:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10424              		.loc 1 1400 0 is_stmt 1
 10425 0dfc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10426 0dfe BB68     		ldr	r3, [r7, #8]	@ float
 10427 0e00 4FF08F41 		mov	r1, #1199570944
 10428 0e04 1846     		mov	r0, r3
 10429 0e06 FFF7FEFF 		bl	__aeabi_fmul
 10430 0e0a 0346     		mov	r3, r0
 10431 0e0c 1846     		mov	r0, r3
 10432 0e0e FFF7FEFF 		bl	__aeabi_f2iz
 10433 0e12 0146     		mov	r1, r0
 10434 0e14 724A     		ldr	r2, .L455
 10435 0e16 2346     		mov	r3, r4
 10436 0e18 DB00     		lsls	r3, r3, #3
 10437 0e1a 1B1B     		subs	r3, r3, r4
 10438 0e1c 1B01     		lsls	r3, r3, #4
 10439 0e1e 1344     		add	r3, r3, r2
 10440 0e20 BC33     		adds	r3, r3, #188
 10441 0e22 1960     		str	r1, [r3]
1401:..\src/command_processing.c ****                 
1402:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10442              		.loc 1 1402 0
 10443 0e24 724B     		ldr	r3, .L455+16
 10444 0e26 1B68     		ldr	r3, [r3]	@ float
 10445 0e28 FB60     		str	r3, [r7, #12]	@ float
1403:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10446              		.loc 1 1403 0
 10447 0e2a 0023     		movs	r3, #0
 10448 0e2c BB75     		strb	r3, [r7, #22]
 10449 0e2e 0EE0     		b	.L427
 10450              	.L428:
1404:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10451              		.loc 1 1404 0 discriminator 3
 10452 0e30 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10453 0e32 C3F10303 		rsb	r3, r3, #3
 10454 0e36 07F10802 		add	r2, r7, #8
 10455 0e3a 1344     		add	r3, r3, r2
 10456 0e3c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10457 0e3e 07F10C01 		add	r1, r7, #12
 10458 0e42 0A44     		add	r2, r2, r1
 10459 0e44 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10460 0e46 1A70     		strb	r2, [r3]
1403:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10461              		.loc 1 1403 0 discriminator 3
 10462 0e48 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10463 0e4a 0133     		adds	r3, r3, #1
 10464 0e4c BB75     		strb	r3, [r7, #22]
 10465              	.L427:
1403:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10466              		.loc 1 1403 0 is_stmt 0 discriminator 1
 10467 0e4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10468 0e50 032B     		cmp	r3, #3
 10469 0e52 EDD9     		bls	.L428
1405:..\src/command_processing.c ****                 }
1406:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 10470              		.loc 1 1406 0 is_stmt 1
 10471 0e54 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 238


 10472 0e56 BB68     		ldr	r3, [r7, #8]	@ float
 10473 0e58 4FF08F41 		mov	r1, #1199570944
 10474 0e5c 1846     		mov	r0, r3
 10475 0e5e FFF7FEFF 		bl	__aeabi_fmul
 10476 0e62 0346     		mov	r3, r0
 10477 0e64 1846     		mov	r0, r3
 10478 0e66 FFF7FEFF 		bl	__aeabi_f2iz
 10479 0e6a 0146     		mov	r1, r0
 10480 0e6c 5C4A     		ldr	r2, .L455
 10481 0e6e 2346     		mov	r3, r4
 10482 0e70 DB00     		lsls	r3, r3, #3
 10483 0e72 1B1B     		subs	r3, r3, r4
 10484 0e74 1B01     		lsls	r3, r3, #4
 10485 0e76 1344     		add	r3, r3, r2
 10486 0e78 C033     		adds	r3, r3, #192
 10487 0e7a 1960     		str	r1, [r3]
1407:..\src/command_processing.c ****                 
1408:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10488              		.loc 1 1408 0
 10489 0e7c 594B     		ldr	r3, .L455+4
 10490 0e7e 1B68     		ldr	r3, [r3]	@ float
 10491 0e80 FB60     		str	r3, [r7, #12]	@ float
1409:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10492              		.loc 1 1409 0
 10493 0e82 0023     		movs	r3, #0
 10494 0e84 BB75     		strb	r3, [r7, #22]
 10495 0e86 0EE0     		b	.L429
 10496              	.L430:
1410:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10497              		.loc 1 1410 0 discriminator 3
 10498 0e88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10499 0e8a C3F10303 		rsb	r3, r3, #3
 10500 0e8e 07F10802 		add	r2, r7, #8
 10501 0e92 1344     		add	r3, r3, r2
 10502 0e94 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10503 0e96 07F10C01 		add	r1, r7, #12
 10504 0e9a 0A44     		add	r2, r2, r1
 10505 0e9c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10506 0e9e 1A70     		strb	r2, [r3]
1409:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10507              		.loc 1 1409 0 discriminator 3
 10508 0ea0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10509 0ea2 0133     		adds	r3, r3, #1
 10510 0ea4 BB75     		strb	r3, [r7, #22]
 10511              	.L429:
1409:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10512              		.loc 1 1409 0 is_stmt 0 discriminator 1
 10513 0ea6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10514 0ea8 032B     		cmp	r3, #3
 10515 0eaa EDD9     		bls	.L430
1411:..\src/command_processing.c ****                 }
1412:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10516              		.loc 1 1412 0 is_stmt 1
 10517 0eac FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10518 0eae BB68     		ldr	r3, [r7, #8]	@ float
 10519 0eb0 4FF08F41 		mov	r1, #1199570944
 10520 0eb4 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 239


 10521 0eb6 FFF7FEFF 		bl	__aeabi_fmul
 10522 0eba 0346     		mov	r3, r0
 10523 0ebc 1846     		mov	r0, r3
 10524 0ebe FFF7FEFF 		bl	__aeabi_f2iz
 10525 0ec2 0146     		mov	r1, r0
 10526 0ec4 464A     		ldr	r2, .L455
 10527 0ec6 2346     		mov	r3, r4
 10528 0ec8 DB00     		lsls	r3, r3, #3
 10529 0eca 1B1B     		subs	r3, r3, r4
 10530 0ecc 1B01     		lsls	r3, r3, #4
 10531 0ece 1344     		add	r3, r3, r2
 10532 0ed0 C433     		adds	r3, r3, #196
 10533 0ed2 1960     		str	r1, [r3]
1413:..\src/command_processing.c ****             }
1414:..\src/command_processing.c ****             else {
1415:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1416:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1417:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1418:..\src/command_processing.c ****                 }
1419:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1420:..\src/command_processing.c ****                 
1421:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1422:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1423:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1424:..\src/command_processing.c ****                 }
1425:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1426:..\src/command_processing.c ****                 
1427:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1428:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1429:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1430:..\src/command_processing.c ****                 }
1431:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1432:..\src/command_processing.c ****             }            
1433:..\src/command_processing.c ****             break;  
 10534              		.loc 1 1433 0
 10535 0ed4 98E2     		b	.L384
 10536              	.L424:
1415:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10537              		.loc 1 1415 0
 10538 0ed6 454B     		ldr	r3, .L455+12
 10539 0ed8 1B68     		ldr	r3, [r3]	@ float
 10540 0eda FB60     		str	r3, [r7, #12]	@ float
1416:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10541              		.loc 1 1416 0
 10542 0edc 0023     		movs	r3, #0
 10543 0ede BB75     		strb	r3, [r7, #22]
 10544 0ee0 0EE0     		b	.L432
 10545              	.L433:
1417:..\src/command_processing.c ****                 }
 10546              		.loc 1 1417 0 discriminator 3
 10547 0ee2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10548 0ee4 C3F10303 		rsb	r3, r3, #3
 10549 0ee8 07F10802 		add	r2, r7, #8
 10550 0eec 1344     		add	r3, r3, r2
 10551 0eee BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10552 0ef0 07F10C01 		add	r1, r7, #12
 10553 0ef4 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 240


 10554 0ef6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10555 0ef8 1A70     		strb	r2, [r3]
1416:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10556              		.loc 1 1416 0 discriminator 3
 10557 0efa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10558 0efc 0133     		adds	r3, r3, #1
 10559 0efe BB75     		strb	r3, [r7, #22]
 10560              	.L432:
1416:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10561              		.loc 1 1416 0 is_stmt 0 discriminator 1
 10562 0f00 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10563 0f02 032B     		cmp	r3, #3
 10564 0f04 EDD9     		bls	.L433
1419:..\src/command_processing.c ****                 
 10565              		.loc 1 1419 0 is_stmt 1
 10566 0f06 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10567 0f08 BB68     		ldr	r3, [r7, #8]	@ float
 10568 0f0a 4FF08F41 		mov	r1, #1199570944
 10569 0f0e 1846     		mov	r0, r3
 10570 0f10 FFF7FEFF 		bl	__aeabi_fmul
 10571 0f14 0346     		mov	r3, r0
 10572 0f16 1846     		mov	r0, r3
 10573 0f18 FFF7FEFF 		bl	__aeabi_f2iz
 10574 0f1c 0146     		mov	r1, r0
 10575 0f1e 304A     		ldr	r2, .L455
 10576 0f20 2346     		mov	r3, r4
 10577 0f22 DB00     		lsls	r3, r3, #3
 10578 0f24 1B1B     		subs	r3, r3, r4
 10579 0f26 1B01     		lsls	r3, r3, #4
 10580 0f28 1344     		add	r3, r3, r2
 10581 0f2a D433     		adds	r3, r3, #212
 10582 0f2c 1960     		str	r1, [r3]
1421:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10583              		.loc 1 1421 0
 10584 0f2e 304B     		ldr	r3, .L455+16
 10585 0f30 1B68     		ldr	r3, [r3]	@ float
 10586 0f32 FB60     		str	r3, [r7, #12]	@ float
1422:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10587              		.loc 1 1422 0
 10588 0f34 0023     		movs	r3, #0
 10589 0f36 BB75     		strb	r3, [r7, #22]
 10590 0f38 0EE0     		b	.L434
 10591              	.L435:
1423:..\src/command_processing.c ****                 }
 10592              		.loc 1 1423 0 discriminator 3
 10593 0f3a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10594 0f3c C3F10303 		rsb	r3, r3, #3
 10595 0f40 07F10802 		add	r2, r7, #8
 10596 0f44 1344     		add	r3, r3, r2
 10597 0f46 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10598 0f48 07F10C01 		add	r1, r7, #12
 10599 0f4c 0A44     		add	r2, r2, r1
 10600 0f4e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10601 0f50 1A70     		strb	r2, [r3]
1422:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10602              		.loc 1 1422 0 discriminator 3
 10603 0f52 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 241


 10604 0f54 0133     		adds	r3, r3, #1
 10605 0f56 BB75     		strb	r3, [r7, #22]
 10606              	.L434:
1422:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10607              		.loc 1 1422 0 is_stmt 0 discriminator 1
 10608 0f58 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10609 0f5a 032B     		cmp	r3, #3
 10610 0f5c EDD9     		bls	.L435
1425:..\src/command_processing.c ****                 
 10611              		.loc 1 1425 0 is_stmt 1
 10612 0f5e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10613 0f60 BB68     		ldr	r3, [r7, #8]	@ float
 10614 0f62 4FF08F41 		mov	r1, #1199570944
 10615 0f66 1846     		mov	r0, r3
 10616 0f68 FFF7FEFF 		bl	__aeabi_fmul
 10617 0f6c 0346     		mov	r3, r0
 10618 0f6e 1846     		mov	r0, r3
 10619 0f70 FFF7FEFF 		bl	__aeabi_f2iz
 10620 0f74 0146     		mov	r1, r0
 10621 0f76 1A4A     		ldr	r2, .L455
 10622 0f78 2346     		mov	r3, r4
 10623 0f7a DB00     		lsls	r3, r3, #3
 10624 0f7c 1B1B     		subs	r3, r3, r4
 10625 0f7e 1B01     		lsls	r3, r3, #4
 10626 0f80 1344     		add	r3, r3, r2
 10627 0f82 D833     		adds	r3, r3, #216
 10628 0f84 1960     		str	r1, [r3]
1427:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10629              		.loc 1 1427 0
 10630 0f86 174B     		ldr	r3, .L455+4
 10631 0f88 1B68     		ldr	r3, [r3]	@ float
 10632 0f8a FB60     		str	r3, [r7, #12]	@ float
1428:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10633              		.loc 1 1428 0
 10634 0f8c 0023     		movs	r3, #0
 10635 0f8e BB75     		strb	r3, [r7, #22]
 10636 0f90 0EE0     		b	.L436
 10637              	.L437:
1429:..\src/command_processing.c ****                 }
 10638              		.loc 1 1429 0 discriminator 3
 10639 0f92 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10640 0f94 C3F10303 		rsb	r3, r3, #3
 10641 0f98 07F10802 		add	r2, r7, #8
 10642 0f9c 1344     		add	r3, r3, r2
 10643 0f9e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10644 0fa0 07F10C01 		add	r1, r7, #12
 10645 0fa4 0A44     		add	r2, r2, r1
 10646 0fa6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10647 0fa8 1A70     		strb	r2, [r3]
1428:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10648              		.loc 1 1428 0 discriminator 3
 10649 0faa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10650 0fac 0133     		adds	r3, r3, #1
 10651 0fae BB75     		strb	r3, [r7, #22]
 10652              	.L436:
1428:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10653              		.loc 1 1428 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 242


 10654 0fb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10655 0fb2 032B     		cmp	r3, #3
 10656 0fb4 EDD9     		bls	.L437
1431:..\src/command_processing.c ****             }            
 10657              		.loc 1 1431 0 is_stmt 1
 10658 0fb6 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10659 0fb8 BB68     		ldr	r3, [r7, #8]	@ float
 10660 0fba 4FF08F41 		mov	r1, #1199570944
 10661 0fbe 1846     		mov	r0, r3
 10662 0fc0 FFF7FEFF 		bl	__aeabi_fmul
 10663 0fc4 0346     		mov	r3, r0
 10664 0fc6 1846     		mov	r0, r3
 10665 0fc8 FFF7FEFF 		bl	__aeabi_f2iz
 10666 0fcc 0146     		mov	r1, r0
 10667 0fce 044A     		ldr	r2, .L455
 10668 0fd0 2346     		mov	r3, r4
 10669 0fd2 DB00     		lsls	r3, r3, #3
 10670 0fd4 1B1B     		subs	r3, r3, r4
 10671 0fd6 1B01     		lsls	r3, r3, #4
 10672 0fd8 1344     		add	r3, r3, r2
 10673 0fda DC33     		adds	r3, r3, #220
 10674 0fdc 1960     		str	r1, [r3]
 10675              		.loc 1 1433 0
 10676 0fde 13E2     		b	.L384
 10677              	.L456:
 10678              		.align	2
 10679              	.L455:
 10680 0fe0 00000000 		.word	g_mem
 10681 0fe4 0B000000 		.word	g_rx+11
 10682 0fe8 00000000 		.word	c_mem
 10683 0fec 03000000 		.word	g_rx+3
 10684 0ff0 07000000 		.word	g_rx+7
 10685              	.L365:
1434:..\src/command_processing.c ****             
1435:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1436:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 10686              		.loc 1 1436 0
 10687 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10688 0ff6 A54B     		ldr	r3, .L457
 10689 0ff8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10690 0ffa A549     		ldr	r1, .L457+4
 10691 0ffc 1346     		mov	r3, r2
 10692 0ffe DB00     		lsls	r3, r3, #3
 10693 1000 9B1A     		subs	r3, r3, r2
 10694 1002 1B01     		lsls	r3, r3, #4
 10695 1004 0B44     		add	r3, r3, r1
 10696 1006 03F58773 		add	r3, r3, #270
 10697 100a 0246     		mov	r2, r0
 10698 100c 1A70     		strb	r2, [r3]
1437:..\src/command_processing.c ****             
1438:..\src/command_processing.c ****             // Hold the actual position
1439:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 10699              		.loc 1 1439 0
 10700 100e F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10701 1010 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10702 1012 9F48     		ldr	r0, .L457+4
 10703 1014 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 243


 10704 1016 DB00     		lsls	r3, r3, #3
 10705 1018 9B1A     		subs	r3, r3, r2
 10706 101a 1B01     		lsls	r3, r3, #4
 10707 101c 0344     		add	r3, r3, r0
 10708 101e 03F58873 		add	r3, r3, #272
 10709 1022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10710 1024 1846     		mov	r0, r3
 10711 1026 9B4A     		ldr	r2, .L457+8
 10712 1028 0346     		mov	r3, r0
 10713 102a 5B00     		lsls	r3, r3, #1
 10714 102c 0344     		add	r3, r3, r0
 10715 102e 1B01     		lsls	r3, r3, #4
 10716 1030 1344     		add	r3, r3, r2
 10717 1032 1A68     		ldr	r2, [r3]
 10718 1034 9848     		ldr	r0, .L457+12
 10719 1036 0B01     		lsls	r3, r1, #4
 10720 1038 0344     		add	r3, r3, r0
 10721 103a 1A60     		str	r2, [r3]
1440:..\src/command_processing.c ****             break;   
 10722              		.loc 1 1440 0
 10723 103c E4E1     		b	.L384
 10724              	.L366:
1441:..\src/command_processing.c **** 
1442:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1443:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10725              		.loc 1 1443 0
 10726 103e 0023     		movs	r3, #0
 10727 1040 FB75     		strb	r3, [r7, #23]
 10728 1042 7FE0     		b	.L438
 10729              	.L439:
1444:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10730              		.loc 1 1444 0 discriminator 3
 10731 1044 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10732 1046 9249     		ldr	r1, .L457+4
 10733 1048 1346     		mov	r3, r2
 10734 104a DB00     		lsls	r3, r3, #3
 10735 104c 9B1A     		subs	r3, r3, r2
 10736 104e 1B01     		lsls	r3, r3, #4
 10737 1050 0B44     		add	r3, r3, r1
 10738 1052 03F58873 		add	r3, r3, #272
 10739 1056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10740 1058 1C46     		mov	r4, r3
 10741 105a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10742 105c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10743 105e 5B00     		lsls	r3, r3, #1
 10744 1060 0333     		adds	r3, r3, #3
 10745 1062 8A49     		ldr	r1, .L457
 10746 1064 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10747 1066 1B02     		lsls	r3, r3, #8
 10748 1068 19B2     		sxth	r1, r3
 10749 106a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10750 106c 0233     		adds	r3, r3, #2
 10751 106e 5B00     		lsls	r3, r3, #1
 10752 1070 8648     		ldr	r0, .L457
 10753 1072 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10754 1074 1BB2     		sxth	r3, r3
 10755 1076 0B43     		orrs	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 244


 10756 1078 1BB2     		sxth	r3, r3
 10757 107a 1846     		mov	r0, r3
 10758 107c 8449     		ldr	r1, .L457+4
 10759 107e 2346     		mov	r3, r4
 10760 1080 5B00     		lsls	r3, r3, #1
 10761 1082 2344     		add	r3, r3, r4
 10762 1084 9B00     		lsls	r3, r3, #2
 10763 1086 1344     		add	r3, r3, r2
 10764 1088 6633     		adds	r3, r3, #102
 10765 108a 41F82300 		str	r0, [r1, r3, lsl #2]
1445:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 10766              		.loc 1 1445 0 discriminator 3
 10767 108e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10768 1090 7F49     		ldr	r1, .L457+4
 10769 1092 1346     		mov	r3, r2
 10770 1094 DB00     		lsls	r3, r3, #3
 10771 1096 9B1A     		subs	r3, r3, r2
 10772 1098 1B01     		lsls	r3, r3, #4
 10773 109a 0B44     		add	r3, r3, r1
 10774 109c 03F58873 		add	r3, r3, #272
 10775 10a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10776 10a2 1D46     		mov	r5, r3
 10777 10a4 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10778 10a6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10779 10a8 7948     		ldr	r0, .L457+4
 10780 10aa 1346     		mov	r3, r2
 10781 10ac DB00     		lsls	r3, r3, #3
 10782 10ae 9B1A     		subs	r3, r3, r2
 10783 10b0 1B01     		lsls	r3, r3, #4
 10784 10b2 0344     		add	r3, r3, r0
 10785 10b4 03F58873 		add	r3, r3, #272
 10786 10b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10787 10ba 1C46     		mov	r4, r3
 10788 10bc FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10789 10be 7448     		ldr	r0, .L457+4
 10790 10c0 2346     		mov	r3, r4
 10791 10c2 5B00     		lsls	r3, r3, #1
 10792 10c4 2344     		add	r3, r3, r4
 10793 10c6 9B00     		lsls	r3, r3, #2
 10794 10c8 1344     		add	r3, r3, r2
 10795 10ca 6633     		adds	r3, r3, #102
 10796 10cc 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10797 10d0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10798 10d2 6F4C     		ldr	r4, .L457+4
 10799 10d4 1346     		mov	r3, r2
 10800 10d6 DB00     		lsls	r3, r3, #3
 10801 10d8 9B1A     		subs	r3, r3, r2
 10802 10da 1B01     		lsls	r3, r3, #4
 10803 10dc 2344     		add	r3, r3, r4
 10804 10de 03F58873 		add	r3, r3, #272
 10805 10e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10806 10e4 1E46     		mov	r6, r3
 10807 10e6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10808 10e8 694C     		ldr	r4, .L457+4
 10809 10ea 3346     		mov	r3, r6
 10810 10ec 5B00     		lsls	r3, r3, #1
 10811 10ee 3344     		add	r3, r3, r6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 245


 10812 10f0 1B01     		lsls	r3, r3, #4
 10813 10f2 2344     		add	r3, r3, r4
 10814 10f4 1344     		add	r3, r3, r2
 10815 10f6 03F29513 		addw	r3, r3, #405
 10816 10fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10817 10fc 00FA03F2 		lsl	r2, r0, r3
 10818 1100 6348     		ldr	r0, .L457+4
 10819 1102 2B46     		mov	r3, r5
 10820 1104 5B00     		lsls	r3, r3, #1
 10821 1106 2B44     		add	r3, r3, r5
 10822 1108 9B00     		lsls	r3, r3, #2
 10823 110a 0B44     		add	r3, r3, r1
 10824 110c 6633     		adds	r3, r3, #102
 10825 110e 40F82320 		str	r2, [r0, r3, lsl #2]
1446:..\src/command_processing.c **** 
1447:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 10826              		.loc 1 1447 0 discriminator 3
 10827 1112 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10828 1114 5E49     		ldr	r1, .L457+4
 10829 1116 1346     		mov	r3, r2
 10830 1118 DB00     		lsls	r3, r3, #3
 10831 111a 9B1A     		subs	r3, r3, r2
 10832 111c 1B01     		lsls	r3, r3, #4
 10833 111e 0B44     		add	r3, r3, r1
 10834 1120 03F58873 		add	r3, r3, #272
 10835 1124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10836 1126 1846     		mov	r0, r3
 10837 1128 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10838 112a 5A49     		ldr	r1, .L457+8
 10839 112c 0346     		mov	r3, r0
 10840 112e 5B00     		lsls	r3, r3, #1
 10841 1130 0344     		add	r3, r3, r0
 10842 1132 1B01     		lsls	r3, r3, #4
 10843 1134 0B44     		add	r3, r3, r1
 10844 1136 1344     		add	r3, r3, r2
 10845 1138 1433     		adds	r3, r3, #20
 10846 113a 0022     		movs	r2, #0
 10847 113c 1A70     		strb	r2, [r3]
1443:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10848              		.loc 1 1443 0 discriminator 3
 10849 113e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10850 1140 0133     		adds	r3, r3, #1
 10851 1142 FB75     		strb	r3, [r7, #23]
 10852              	.L438:
1443:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10853              		.loc 1 1443 0 is_stmt 0 discriminator 1
 10854 1144 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10855 1146 022B     		cmp	r3, #2
 10856 1148 7FF67CAF 		bls	.L439
1448:..\src/command_processing.c ****             }
1449:..\src/command_processing.c ****             reset_last_value_flag = 1;
 10857              		.loc 1 1449 0 is_stmt 1
 10858 114c 534B     		ldr	r3, .L457+16
 10859 114e 0122     		movs	r2, #1
 10860 1150 1A70     		strb	r2, [r3]
1450:..\src/command_processing.c ****             break;
 10861              		.loc 1 1450 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 246


 10862 1152 59E1     		b	.L384
 10863              	.L367:
1451:..\src/command_processing.c ****     
1452:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1453:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 10864              		.loc 1 1453 0
 10865 1154 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10866 1156 4D4B     		ldr	r3, .L457
 10867 1158 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10868 115a 1906     		lsls	r1, r3, #24
 10869 115c 4B4B     		ldr	r3, .L457
 10870 115e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10871 1160 1B04     		lsls	r3, r3, #16
 10872 1162 1943     		orrs	r1, r1, r3
 10873 1164 494B     		ldr	r3, .L457
 10874 1166 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10875 1168 1B02     		lsls	r3, r3, #8
 10876 116a 0B43     		orrs	r3, r3, r1
 10877 116c 4749     		ldr	r1, .L457
 10878 116e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10879 1170 1943     		orrs	r1, r1, r3
 10880 1172 4748     		ldr	r0, .L457+4
 10881 1174 1346     		mov	r3, r2
 10882 1176 DB00     		lsls	r3, r3, #3
 10883 1178 9B1A     		subs	r3, r3, r2
 10884 117a 1B01     		lsls	r3, r3, #4
 10885 117c 0344     		add	r3, r3, r0
 10886 117e E433     		adds	r3, r3, #228
 10887 1180 1960     		str	r1, [r3]
1454:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 10888              		.loc 1 1454 0
 10889 1182 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10890 1184 414B     		ldr	r3, .L457
 10891 1186 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10892 1188 1906     		lsls	r1, r3, #24
 10893 118a 404B     		ldr	r3, .L457
 10894 118c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10895 118e 1B04     		lsls	r3, r3, #16
 10896 1190 1943     		orrs	r1, r1, r3
 10897 1192 3E4B     		ldr	r3, .L457
 10898 1194 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10899 1196 1B02     		lsls	r3, r3, #8
 10900 1198 0B43     		orrs	r3, r3, r1
 10901 119a 3C49     		ldr	r1, .L457
 10902 119c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10903 119e 1943     		orrs	r1, r1, r3
 10904 11a0 3B48     		ldr	r0, .L457+4
 10905 11a2 1346     		mov	r3, r2
 10906 11a4 DB00     		lsls	r3, r3, #3
 10907 11a6 9B1A     		subs	r3, r3, r2
 10908 11a8 1B01     		lsls	r3, r3, #4
 10909 11aa 0344     		add	r3, r3, r0
 10910 11ac E833     		adds	r3, r3, #232
 10911 11ae 1960     		str	r1, [r3]
1455:..\src/command_processing.c **** 
1456:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 10912              		.loc 1 1456 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 247


 10913 11b0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10914 11b2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10915 11b4 3648     		ldr	r0, .L457+4
 10916 11b6 0B46     		mov	r3, r1
 10917 11b8 DB00     		lsls	r3, r3, #3
 10918 11ba 5B1A     		subs	r3, r3, r1
 10919 11bc 1B01     		lsls	r3, r3, #4
 10920 11be 0344     		add	r3, r3, r0
 10921 11c0 E433     		adds	r3, r3, #228
 10922 11c2 1868     		ldr	r0, [r3]
 10923 11c4 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10924 11c6 324C     		ldr	r4, .L457+4
 10925 11c8 0B46     		mov	r3, r1
 10926 11ca DB00     		lsls	r3, r3, #3
 10927 11cc 5B1A     		subs	r3, r3, r1
 10928 11ce 1B01     		lsls	r3, r3, #4
 10929 11d0 2344     		add	r3, r3, r4
 10930 11d2 03F58873 		add	r3, r3, #272
 10931 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10932 11d8 1C46     		mov	r4, r3
 10933 11da 2D49     		ldr	r1, .L457+4
 10934 11dc 2346     		mov	r3, r4
 10935 11de 5B00     		lsls	r3, r3, #1
 10936 11e0 2344     		add	r3, r3, r4
 10937 11e2 1B01     		lsls	r3, r3, #4
 10938 11e4 0B44     		add	r3, r3, r1
 10939 11e6 03F29513 		addw	r3, r3, #405
 10940 11ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10941 11ec 00FA03F1 		lsl	r1, r0, r3
 10942 11f0 2748     		ldr	r0, .L457+4
 10943 11f2 1346     		mov	r3, r2
 10944 11f4 DB00     		lsls	r3, r3, #3
 10945 11f6 9B1A     		subs	r3, r3, r2
 10946 11f8 1B01     		lsls	r3, r3, #4
 10947 11fa 0344     		add	r3, r3, r0
 10948 11fc E433     		adds	r3, r3, #228
 10949 11fe 1960     		str	r1, [r3]
1457:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 10950              		.loc 1 1457 0
 10951 1200 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10952 1202 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10953 1204 2248     		ldr	r0, .L457+4
 10954 1206 0B46     		mov	r3, r1
 10955 1208 DB00     		lsls	r3, r3, #3
 10956 120a 5B1A     		subs	r3, r3, r1
 10957 120c 1B01     		lsls	r3, r3, #4
 10958 120e 0344     		add	r3, r3, r0
 10959 1210 E833     		adds	r3, r3, #232
 10960 1212 1868     		ldr	r0, [r3]
 10961 1214 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10962 1216 1E4C     		ldr	r4, .L457+4
 10963 1218 0B46     		mov	r3, r1
 10964 121a DB00     		lsls	r3, r3, #3
 10965 121c 5B1A     		subs	r3, r3, r1
 10966 121e 1B01     		lsls	r3, r3, #4
 10967 1220 2344     		add	r3, r3, r4
 10968 1222 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 248


 10969 1226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10970 1228 1C46     		mov	r4, r3
 10971 122a 1949     		ldr	r1, .L457+4
 10972 122c 2346     		mov	r3, r4
 10973 122e 5B00     		lsls	r3, r3, #1
 10974 1230 2344     		add	r3, r3, r4
 10975 1232 1B01     		lsls	r3, r3, #4
 10976 1234 0B44     		add	r3, r3, r1
 10977 1236 03F29513 		addw	r3, r3, #405
 10978 123a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10979 123c 00FA03F1 		lsl	r1, r0, r3
 10980 1240 1348     		ldr	r0, .L457+4
 10981 1242 1346     		mov	r3, r2
 10982 1244 DB00     		lsls	r3, r3, #3
 10983 1246 9B1A     		subs	r3, r3, r2
 10984 1248 1B01     		lsls	r3, r3, #4
 10985 124a 0344     		add	r3, r3, r0
 10986 124c E833     		adds	r3, r3, #232
 10987 124e 1960     		str	r1, [r3]
1458:..\src/command_processing.c ****             break;
 10988              		.loc 1 1458 0
 10989 1250 DAE0     		b	.L384
 10990              	.L368:
1459:..\src/command_processing.c ****             
1460:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1461:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10991              		.loc 1 1461 0
 10992 1252 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10993 1254 0D4B     		ldr	r3, .L457
 10994 1256 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10995 1258 0D49     		ldr	r1, .L457+4
 10996 125a 1346     		mov	r3, r2
 10997 125c DB00     		lsls	r3, r3, #3
 10998 125e 9B1A     		subs	r3, r3, r2
 10999 1260 1B01     		lsls	r3, r3, #4
 11000 1262 0B44     		add	r3, r3, r1
 11001 1264 E233     		adds	r3, r3, #226
 11002 1266 0246     		mov	r2, r0
 11003 1268 1A70     		strb	r2, [r3]
1462:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11004              		.loc 1 1462 0
 11005 126a 094B     		ldr	r3, .L457+4
 11006 126c 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 11007 1270 5B00     		lsls	r3, r3, #1
 11008 1272 5AB2     		sxtb	r2, r3
 11009 1274 064B     		ldr	r3, .L457+4
 11010 1276 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 11011 127a 5BB2     		sxtb	r3, r3
 11012 127c 1343     		orrs	r3, r3, r2
 11013 127e 5BB2     		sxtb	r3, r3
 11014 1280 DBB2     		uxtb	r3, r3
 11015 1282 1846     		mov	r0, r3
 11016 1284 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1463:..\src/command_processing.c ****             break;
 11017              		.loc 1 1463 0
 11018 1288 BEE0     		b	.L384
 11019              	.L458:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 249


 11020 128a 00BF     		.align	2
 11021              	.L457:
 11022 128c 00000000 		.word	g_rx
 11023 1290 00000000 		.word	g_mem
 11024 1294 00000000 		.word	g_meas
 11025 1298 00000000 		.word	g_refNew
 11026 129c 00000000 		.word	reset_last_value_flag
 11027              	.L369:
1464:..\src/command_processing.c **** 
1465:..\src/command_processing.c ****         case 71:        // Device type
1466:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11028              		.loc 1 1466 0
 11029 12a0 5B4B     		ldr	r3, .L459
 11030 12a2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11031 12a4 5B4B     		ldr	r3, .L459+4
 11032 12a6 83F8AC20 		strb	r2, [r3, #172]
1467:..\src/command_processing.c ****             
1468:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11033              		.loc 1 1468 0
 11034 12aa 5A4B     		ldr	r3, .L459+4
 11035 12ac 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11036 12b0 002B     		cmp	r3, #0
 11037 12b2 40F0A880 		bne	.L446
1469:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11038              		.loc 1 1469 0
 11039 12b6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11040 12b8 5649     		ldr	r1, .L459+4
 11041 12ba 1346     		mov	r3, r2
 11042 12bc DB00     		lsls	r3, r3, #3
 11043 12be 9B1A     		subs	r3, r3, r2
 11044 12c0 1B01     		lsls	r3, r3, #4
 11045 12c2 0B44     		add	r3, r3, r1
 11046 12c4 03F58873 		add	r3, r3, #272
 11047 12c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11048 12ca 1946     		mov	r1, r3
 11049 12cc 514A     		ldr	r2, .L459+4
 11050 12ce 0B46     		mov	r3, r1
 11051 12d0 5B00     		lsls	r3, r3, #1
 11052 12d2 0B44     		add	r3, r3, r1
 11053 12d4 1B01     		lsls	r3, r3, #4
 11054 12d6 1344     		add	r3, r3, r2
 11055 12d8 03F5D873 		add	r3, r3, #432
 11056 12dc 0122     		movs	r2, #1
 11057 12de 1A70     		strb	r2, [r3]
1470:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11058              		.loc 1 1470 0
 11059 12e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11060 12e2 4C49     		ldr	r1, .L459+4
 11061 12e4 1346     		mov	r3, r2
 11062 12e6 DB00     		lsls	r3, r3, #3
 11063 12e8 9B1A     		subs	r3, r3, r2
 11064 12ea 1B01     		lsls	r3, r3, #4
 11065 12ec 0B44     		add	r3, r3, r1
 11066 12ee 03F58873 		add	r3, r3, #272
 11067 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11068 12f4 1946     		mov	r1, r3
 11069 12f6 474A     		ldr	r2, .L459+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 250


 11070 12f8 0B46     		mov	r3, r1
 11071 12fa 5B00     		lsls	r3, r3, #1
 11072 12fc 0B44     		add	r3, r3, r1
 11073 12fe 1B01     		lsls	r3, r3, #4
 11074 1300 1344     		add	r3, r3, r2
 11075 1302 03F2B513 		addw	r3, r3, #437
 11076 1306 2322     		movs	r2, #35
 11077 1308 1A70     		strb	r2, [r3]
1471:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11078              		.loc 1 1471 0
 11079 130a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11080 130c 4149     		ldr	r1, .L459+4
 11081 130e 1346     		mov	r3, r2
 11082 1310 DB00     		lsls	r3, r3, #3
 11083 1312 9B1A     		subs	r3, r3, r2
 11084 1314 1B01     		lsls	r3, r3, #4
 11085 1316 0B44     		add	r3, r3, r1
 11086 1318 03F58873 		add	r3, r3, #272
 11087 131c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11088 131e 1946     		mov	r1, r3
 11089 1320 3C4A     		ldr	r2, .L459+4
 11090 1322 0B46     		mov	r3, r1
 11091 1324 5B00     		lsls	r3, r3, #1
 11092 1326 0B44     		add	r3, r3, r1
 11093 1328 1B01     		lsls	r3, r3, #4
 11094 132a 1344     		add	r3, r3, r2
 11095 132c 03F5DB73 		add	r3, r3, #438
 11096 1330 0322     		movs	r2, #3
 11097 1332 1A70     		strb	r2, [r3]
1472:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11098              		.loc 1 1472 0
 11099 1334 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11100 1336 3749     		ldr	r1, .L459+4
 11101 1338 1346     		mov	r3, r2
 11102 133a DB00     		lsls	r3, r3, #3
 11103 133c 9B1A     		subs	r3, r3, r2
 11104 133e 1B01     		lsls	r3, r3, #4
 11105 1340 0B44     		add	r3, r3, r1
 11106 1342 03F58873 		add	r3, r3, #272
 11107 1346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11108 1348 1946     		mov	r1, r3
 11109 134a 324A     		ldr	r2, .L459+4
 11110 134c 0B46     		mov	r3, r1
 11111 134e 5B00     		lsls	r3, r3, #1
 11112 1350 0B44     		add	r3, r3, r1
 11113 1352 1B01     		lsls	r3, r3, #4
 11114 1354 1344     		add	r3, r3, r2
 11115 1356 03F2B713 		addw	r3, r3, #439
 11116 135a FF22     		movs	r2, #255
 11117 135c 1A70     		strb	r2, [r3]
1473:..\src/command_processing.c ****                 
1474:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1475:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11118              		.loc 1 1475 0
 11119 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11120 1360 2C4B     		ldr	r3, .L459+4
 11121 1362 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 251


 11122 1366 2B49     		ldr	r1, .L459+4
 11123 1368 1346     		mov	r3, r2
 11124 136a DB00     		lsls	r3, r3, #3
 11125 136c 9B1A     		subs	r3, r3, r2
 11126 136e 1B01     		lsls	r3, r3, #4
 11127 1370 0B44     		add	r3, r3, r1
 11128 1372 03F58873 		add	r3, r3, #272
 11129 1376 0246     		mov	r2, r0
 11130 1378 1A70     		strb	r2, [r3]
1476:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11131              		.loc 1 1476 0
 11132 137a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11133 137c 2549     		ldr	r1, .L459+4
 11134 137e 1346     		mov	r3, r2
 11135 1380 DB00     		lsls	r3, r3, #3
 11136 1382 9B1A     		subs	r3, r3, r2
 11137 1384 1B01     		lsls	r3, r3, #4
 11138 1386 0B44     		add	r3, r3, r1
 11139 1388 03F21113 		addw	r3, r3, #273
 11140 138c 0122     		movs	r2, #1
 11141 138e 1A70     		strb	r2, [r3]
1477:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11142              		.loc 1 1477 0
 11143 1390 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11144 1392 2049     		ldr	r1, .L459+4
 11145 1394 1346     		mov	r3, r2
 11146 1396 DB00     		lsls	r3, r3, #3
 11147 1398 9B1A     		subs	r3, r3, r2
 11148 139a 1B01     		lsls	r3, r3, #4
 11149 139c 0B44     		add	r3, r3, r1
 11150 139e 03F58973 		add	r3, r3, #274
 11151 13a2 0122     		movs	r2, #1
 11152 13a4 1A70     		strb	r2, [r3]
1478:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11153              		.loc 1 1478 0
 11154 13a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11155 13a8 1A49     		ldr	r1, .L459+4
 11156 13aa 1346     		mov	r3, r2
 11157 13ac DB00     		lsls	r3, r3, #3
 11158 13ae 9B1A     		subs	r3, r3, r2
 11159 13b0 1B01     		lsls	r3, r3, #4
 11160 13b2 0B44     		add	r3, r3, r1
 11161 13b4 E433     		adds	r3, r3, #228
 11162 13b6 0022     		movs	r2, #0
 11163 13b8 1A60     		str	r2, [r3]
1479:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 11164              		.loc 1 1479 0
 11165 13ba 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11166 13bc 154B     		ldr	r3, .L459+4
 11167 13be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 11168 13c2 1846     		mov	r0, r3
 11169 13c4 1349     		ldr	r1, .L459+4
 11170 13c6 0346     		mov	r3, r0
 11171 13c8 5B00     		lsls	r3, r3, #1
 11172 13ca 0344     		add	r3, r3, r0
 11173 13cc 1B01     		lsls	r3, r3, #4
 11174 13ce 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 252


 11175 13d0 03F29513 		addw	r3, r3, #405
 11176 13d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11177 13d6 1946     		mov	r1, r3
 11178 13d8 4FF47A53 		mov	r3, #16000
 11179 13dc 03FA01F1 		lsl	r1, r3, r1
 11180 13e0 0C48     		ldr	r0, .L459+4
 11181 13e2 1346     		mov	r3, r2
 11182 13e4 DB00     		lsls	r3, r3, #3
 11183 13e6 9B1A     		subs	r3, r3, r2
 11184 13e8 1B01     		lsls	r3, r3, #4
 11185 13ea 0344     		add	r3, r3, r0
 11186 13ec E833     		adds	r3, r3, #232
 11187 13ee 1960     		str	r1, [r3]
1480:..\src/command_processing.c ****             }        
1481:..\src/command_processing.c ****             break;
 11188              		.loc 1 1481 0
 11189 13f0 09E0     		b	.L446
 11190              	.L441:
1482:..\src/command_processing.c ****             
1483:..\src/command_processing.c ****         default:
1484:..\src/command_processing.c ****             break;
 11191              		.loc 1 1484 0
 11192 13f2 00BF     		nop
 11193 13f4 08E0     		b	.L384
 11194              	.L442:
1290:..\src/command_processing.c ****             
 11195              		.loc 1 1290 0
 11196 13f6 00BF     		nop
 11197 13f8 06E0     		b	.L384
 11198              	.L443:
1318:..\src/command_processing.c **** 
 11199              		.loc 1 1318 0
 11200 13fa 00BF     		nop
 11201 13fc 04E0     		b	.L384
 11202              	.L444:
1336:..\src/command_processing.c ****             
 11203              		.loc 1 1336 0
 11204 13fe 00BF     		nop
 11205 1400 02E0     		b	.L384
 11206              	.L445:
1346:..\src/command_processing.c ****            
 11207              		.loc 1 1346 0
 11208 1402 00BF     		nop
 11209 1404 00E0     		b	.L384
 11210              	.L446:
1481:..\src/command_processing.c ****             
 11211              		.loc 1 1481 0
 11212 1406 00BF     		nop
 11213              	.L384:
1485:..\src/command_processing.c ****     }
1486:..\src/command_processing.c **** }
 11214              		.loc 1 1486 0 discriminator 1
 11215 1408 00BF     		nop
 11216 140a 1C37     		adds	r7, r7, #28
 11217              		.cfi_def_cfa_offset 20
 11218 140c BD46     		mov	sp, r7
 11219              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 253


 11220              		@ sp needed
 11221 140e F0BD     		pop	{r4, r5, r6, r7, pc}
 11222              	.L460:
 11223              		.align	2
 11224              	.L459:
 11225 1410 00000000 		.word	g_rx
 11226 1414 00000000 		.word	g_mem
 11227              		.cfi_endproc
 11228              	.LFE69:
 11229              		.size	set_custom_param, .-set_custom_param
 11230              		.section	.rodata
 11231 0cea 0000     		.align	2
 11232              	.LC118:
 11233 0cec 506F7274 		.ascii	"Port %u ID:\000"
 11233      20257520 
 11233      49443A00 
 11234              		.align	2
 11235              	.LC119:
 11236 0cf8 2575202D 		.ascii	"%u - Device ID:\000"
 11236      20446576 
 11236      69636520 
 11236      49443A00 
 11237              		.align	2
 11238              	.LC120:
 11239 0d08 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 11239      20494D55 
 11239      20256420 
 11239      636F6E66 
 11239      69677572 
 11240 0d23 00       		.align	2
 11241              	.LC121:
 11242 0d24 2575202D 		.ascii	"%u - SPI read delay:\000"
 11242      20535049 
 11242      20726561 
 11242      64206465 
 11242      6C61793A 
 11243 0d39 000000   		.align	2
 11244              	.LC122:
 11245 0d3c 204E6F6E 		.ascii	" None\000"
 11245      6500
 11246 0d42 0000     		.align	2
 11247              	.LC123:
 11248 0d44 204C6F77 		.ascii	" Low\000"
 11248      00
 11249 0d49 000000   		.align	2
 11250              	.LC124:
 11251 0d4c 20486967 		.ascii	" High\000"
 11251      6800
 11252 0d52 0000     		.align	2
 11253              	.LC116:
 11254 0d54 4E756D62 		.ascii	"Number of connected IMUs:\000"
 11254      6572206F 
 11254      6620636F 
 11254      6E6E6563 
 11254      74656420 
 11255 0d6e 0000     		.align	2
 11256              	.LC117:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 254


 11257 0d70 4D616720 		.ascii	"Mag cal parameters:\000"
 11257      63616C20 
 11257      70617261 
 11257      6D657465 
 11257      72733A00 
 11258              		.section	.text.get_IMU_param_list,"ax",%progbits
 11259              		.align	2
 11260              		.global	get_IMU_param_list
 11261              		.thumb
 11262              		.thumb_func
 11263              		.type	get_IMU_param_list, %function
 11264              	get_IMU_param_list:
 11265              	.LFB70:
1487:..\src/command_processing.c **** 
1488:..\src/command_processing.c **** //==============================================================================
1489:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1490:..\src/command_processing.c **** //==============================================================================
1491:..\src/command_processing.c **** 
1492:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1493:..\src/command_processing.c **** {
 11266              		.loc 1 1493 0
 11267              		.cfi_startproc
 11268              		@ args = 0, pretend = 0, frame = 1704
 11269              		@ frame_needed = 1, uses_anonymous_args = 0
 11270 0000 B0B5     		push	{r4, r5, r7, lr}
 11271              		.cfi_def_cfa_offset 16
 11272              		.cfi_offset 4, -16
 11273              		.cfi_offset 5, -12
 11274              		.cfi_offset 7, -8
 11275              		.cfi_offset 14, -4
 11276 0002 ADF5D56D 		sub	sp, sp, #1704
 11277              		.cfi_def_cfa_offset 1720
 11278 0006 00AF     		add	r7, sp, #0
 11279              		.cfi_def_cfa_register 7
 11280 0008 0246     		mov	r2, r0
 11281 000a BB1D     		adds	r3, r7, #6
 11282 000c 1A80     		strh	r2, [r3]	@ movhi
1494:..\src/command_processing.c ****     //Package to be sent variables
1495:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 11283              		.loc 1 1495 0
 11284 000e 07F58A73 		add	r3, r7, #276
 11285 0012 0022     		movs	r2, #0
 11286 0014 1A60     		str	r2, [r3]
 11287 0016 0433     		adds	r3, r3, #4
 11288 0018 40F27552 		movw	r2, #1397
 11289 001c 0021     		movs	r1, #0
 11290 001e 1846     		mov	r0, r3
 11291 0020 FFF7FEFF 		bl	memset
1496:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1497:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1498:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1499:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1500:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1501:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1502:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 11292              		.loc 1 1502 0
 11293 0024 0723     		movs	r3, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 255


 11294 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1503:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 11295              		.loc 1 1503 0
 11296 002a 0023     		movs	r3, #0
 11297 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1504:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 11298              		.loc 1 1504 0
 11299 0030 0223     		movs	r3, #2
 11300 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1505:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11301              		.loc 1 1505 0
 11302 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 11303 003a 5A1C     		adds	r2, r3, #1
1506:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 11304              		.loc 1 1506 0
 11305 003c B7F8A636 		ldrh	r3, [r7, #1702]
 11306 0040 1344     		add	r3, r3, r2
1507:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 11307              		.loc 1 1507 0
 11308 0042 0133     		adds	r3, r3, #1
1505:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11309              		.loc 1 1505 0
 11310 0044 9AB2     		uxth	r2, r3
 11311 0046 D24B     		ldr	r3, .L507
 11312 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11313 004a 9BB2     		uxth	r3, r3
 11314 004c 1344     		add	r3, r3, r2
 11315 004e 9BB2     		uxth	r3, r3
 11316 0050 1A46     		mov	r2, r3	@ movhi
 11317 0052 9200     		lsls	r2, r2, #2
 11318 0054 1344     		add	r3, r3, r2
 11319 0056 1A46     		mov	r2, r3	@ movhi
 11320 0058 9100     		lsls	r1, r2, #2
 11321 005a 1A46     		mov	r2, r3	@ movhi
 11322 005c 0B46     		mov	r3, r1	@ movhi
 11323 005e 1344     		add	r3, r3, r2
 11324 0060 5B00     		lsls	r3, r3, #1
 11325 0062 9BB2     		uxth	r3, r3
 11326 0064 FB33     		adds	r3, r3, #251
 11327 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1508:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1509:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1510:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1511:..\src/command_processing.c **** 
1512:..\src/command_processing.c ****     //Auxiliary variables
1513:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1514:..\src/command_processing.c ****     uint16 start_byte = 0;
 11328              		.loc 1 1514 0
 11329 006a 0023     		movs	r3, #0
 11330 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1515:..\src/command_processing.c **** 
1516:..\src/command_processing.c ****     //Parameters menu string definitions
1517:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 11331              		.loc 1 1517 0
 11332 0070 07F1F803 		add	r3, r7, #248
 11333 0074 C74A     		ldr	r2, .L507+4
 11334 0076 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 256


 11335 0078 1546     		mov	r5, r2
 11336 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11337 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11338 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 11339 0082 03C4     		stmia	r4!, {r0, r1}
 11340 0084 2280     		strh	r2, [r4]	@ movhi
1518:..\src/command_processing.c ****     char ids_str[11]            = "";
 11341              		.loc 1 1518 0
 11342 0086 07F1EC03 		add	r3, r7, #236
 11343 008a 0022     		movs	r2, #0
 11344 008c 1A60     		str	r2, [r3]
 11345 008e 0433     		adds	r3, r3, #4
 11346 0090 0022     		movs	r2, #0
 11347 0092 1A60     		str	r2, [r3]
 11348 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1519:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 11349              		.loc 1 1519 0
 11350 0098 07F1D803 		add	r3, r7, #216
 11351 009c BE4A     		ldr	r2, .L507+8
 11352 009e 1C46     		mov	r4, r3
 11353 00a0 1546     		mov	r5, r2
 11354 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11355 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11356 00a6 2B68     		ldr	r3, [r5]
 11357 00a8 2360     		str	r3, [r4]
1520:..\src/command_processing.c ****     char id_str[16]             = "";
 11358              		.loc 1 1520 0
 11359 00aa 07F1C803 		add	r3, r7, #200
 11360 00ae 0022     		movs	r2, #0
 11361 00b0 1A60     		str	r2, [r3]
 11362 00b2 0433     		adds	r3, r3, #4
 11363 00b4 0022     		movs	r2, #0
 11364 00b6 1A60     		str	r2, [r3]
 11365 00b8 5A60     		str	r2, [r3, #4]
 11366 00ba 9A60     		str	r2, [r3, #8]
1521:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 11367              		.loc 1 1521 0
 11368 00bc 07F19C03 		add	r3, r7, #156
 11369 00c0 0022     		movs	r2, #0
 11370 00c2 1A60     		str	r2, [r3]
 11371 00c4 0433     		adds	r3, r3, #4
 11372 00c6 2622     		movs	r2, #38
 11373 00c8 0021     		movs	r1, #0
 11374 00ca 1846     		mov	r0, r3
 11375 00cc FFF7FEFF 		bl	memset
1522:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 11376              		.loc 1 1522 0
 11377 00d0 07F18003 		add	r3, r7, #128
 11378 00d4 0022     		movs	r2, #0
 11379 00d6 1A60     		str	r2, [r3]
 11380 00d8 0433     		adds	r3, r3, #4
 11381 00da 0022     		movs	r2, #0
 11382 00dc 1A60     		str	r2, [r3]
 11383 00de 5A60     		str	r2, [r3, #4]
 11384 00e0 9A60     		str	r2, [r3, #8]
 11385 00e2 DA60     		str	r2, [r3, #12]
 11386 00e4 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 257


 11387 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1523:..\src/command_processing.c ****     
1524:..\src/command_processing.c ****     //Strings lenghts
1525:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 11388              		.loc 1 1525 0
 11389 00e8 07F1C803 		add	r3, r7, #200
 11390 00ec 1846     		mov	r0, r3
 11391 00ee FFF7FEFF 		bl	strlen
 11392 00f2 0346     		mov	r3, r0
 11393 00f4 87F89336 		strb	r3, [r7, #1683]
1526:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 11394              		.loc 1 1526 0
 11395 00f8 07F1F803 		add	r3, r7, #248
 11396 00fc 1846     		mov	r0, r3
 11397 00fe FFF7FEFF 		bl	strlen
 11398 0102 0346     		mov	r3, r0
 11399 0104 87F89236 		strb	r3, [r7, #1682]
1527:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 11400              		.loc 1 1527 0
 11401 0108 07F1EC03 		add	r3, r7, #236
 11402 010c 1846     		mov	r0, r3
 11403 010e FFF7FEFF 		bl	strlen
 11404 0112 0346     		mov	r3, r0
 11405 0114 87F89136 		strb	r3, [r7, #1681]
1528:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 11406              		.loc 1 1528 0
 11407 0118 07F1D803 		add	r3, r7, #216
 11408 011c 1846     		mov	r0, r3
 11409 011e FFF7FEFF 		bl	strlen
 11410 0122 0346     		mov	r3, r0
 11411 0124 87F89036 		strb	r3, [r7, #1680]
1529:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 11412              		.loc 1 1529 0
 11413 0128 07F19C03 		add	r3, r7, #156
 11414 012c 1846     		mov	r0, r3
 11415 012e FFF7FEFF 		bl	strlen
 11416 0132 0346     		mov	r3, r0
 11417 0134 87F88F36 		strb	r3, [r7, #1679]
1530:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 11418              		.loc 1 1530 0
 11419 0138 07F18003 		add	r3, r7, #128
 11420 013c 1846     		mov	r0, r3
 11421 013e FFF7FEFF 		bl	strlen
 11422 0142 0346     		mov	r3, r0
 11423 0144 87F89D36 		strb	r3, [r7, #1693]
1531:..\src/command_processing.c ****     
1532:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 11424              		.loc 1 1532 0
 11425 0148 07F10803 		add	r3, r7, #8
 11426 014c 0022     		movs	r2, #0
 11427 014e 1A60     		str	r2, [r3]
 11428 0150 0433     		adds	r3, r3, #4
 11429 0152 7222     		movs	r2, #114
 11430 0154 0021     		movs	r1, #0
 11431 0156 1846     		mov	r0, r3
 11432 0158 FFF7FEFF 		bl	memset
1533:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 258


1534:..\src/command_processing.c ****  
1535:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 11433              		.loc 1 1535 0
 11434 015c 07F10800 		add	r0, r7, #8
 11435 0160 6423     		movs	r3, #100
 11436 0162 0A22     		movs	r2, #10
 11437 0164 8D49     		ldr	r1, .L507+12
 11438 0166 FFF7FEFF 		bl	sprintf
1536:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 11439              		.loc 1 1536 0
 11440 016a 07F10803 		add	r3, r7, #8
 11441 016e 1846     		mov	r0, r3
 11442 0170 FFF7FEFF 		bl	strlen
 11443 0174 0346     		mov	r3, r0
 11444 0176 87F88E36 		strb	r3, [r7, #1678]
1537:..\src/command_processing.c **** 
1538:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1539:..\src/command_processing.c ****     // update packet_length
1540:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 11445              		.loc 1 1540 0
 11446 017a 854B     		ldr	r3, .L507
 11447 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11448 017e 5B08     		lsrs	r3, r3, #1
 11449 0180 DBB2     		uxtb	r3, r3
 11450 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1541:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 11451              		.loc 1 1541 0
 11452 0186 824B     		ldr	r3, .L507
 11453 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11454 018a 1A46     		mov	r2, r3
 11455 018c B7F8A636 		ldrh	r3, [r7, #1702]
 11456 0190 5B00     		lsls	r3, r3, #1
 11457 0192 D31A     		subs	r3, r2, r3
 11458 0194 002B     		cmp	r3, #0
 11459 0196 04DD     		ble	.L462
 11460              		.loc 1 1541 0 is_stmt 0 discriminator 1
 11461 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 11462 019c 0133     		adds	r3, r3, #1
 11463 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 11464              	.L462:
1542:..\src/command_processing.c ****     
1543:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 11465              		.loc 1 1543 0 is_stmt 1
 11466 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 11467 01a6 5A1C     		adds	r2, r3, #1
1544:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11468              		.loc 1 1544 0
 11469 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 11470 01ac 1344     		add	r3, r3, r2
1545:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 11471              		.loc 1 1545 0
 11472 01ae 0133     		adds	r3, r3, #1
1543:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11473              		.loc 1 1543 0
 11474 01b0 9AB2     		uxth	r2, r3
 11475 01b2 774B     		ldr	r3, .L507
 11476 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 259


 11477 01b6 9BB2     		uxth	r3, r3
 11478 01b8 1344     		add	r3, r3, r2
 11479 01ba 9BB2     		uxth	r3, r3
 11480 01bc 1A46     		mov	r2, r3	@ movhi
 11481 01be 9200     		lsls	r2, r2, #2
 11482 01c0 1344     		add	r3, r3, r2
 11483 01c2 1A46     		mov	r2, r3	@ movhi
 11484 01c4 9100     		lsls	r1, r2, #2
 11485 01c6 1A46     		mov	r2, r3	@ movhi
 11486 01c8 0B46     		mov	r3, r1	@ movhi
 11487 01ca 1344     		add	r3, r3, r2
 11488 01cc 5B00     		lsls	r3, r3, #1
 11489 01ce 9BB2     		uxth	r3, r3
 11490 01d0 C933     		adds	r3, r3, #201
 11491 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1546:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1547:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1548:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1549:..\src/command_processing.c **** 
1550:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 11492              		.loc 1 1550 0
 11493 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 11494 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11495 01de 1344     		add	r3, r3, r2
 11496 01e0 9BB2     		uxth	r3, r3
 11497 01e2 0333     		adds	r3, r3, #3
 11498 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1551:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 11499              		.loc 1 1551 0
 11500 01e8 07F58A73 		add	r3, r7, #276
 11501 01ec A222     		movs	r2, #162
 11502 01ee 1A70     		strb	r2, [r3]
1552:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 11503              		.loc 1 1552 0
 11504 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11505 01f4 DAB2     		uxtb	r2, r3
 11506 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11507 01fa DBB2     		uxtb	r3, r3
 11508 01fc 1344     		add	r3, r3, r2
 11509 01fe DAB2     		uxtb	r2, r3
 11510 0200 634B     		ldr	r3, .L507
 11511 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11512 0204 1344     		add	r3, r3, r2
 11513 0206 DBB2     		uxtb	r3, r3
 11514 0208 0333     		adds	r3, r3, #3
 11515 020a DAB2     		uxtb	r2, r3
 11516 020c 07F58A73 		add	r3, r7, #276
 11517 0210 5A70     		strb	r2, [r3, #1]
1553:..\src/command_processing.c **** 
1554:..\src/command_processing.c ****     switch(index) {
 11518              		.loc 1 1554 0
 11519 0212 BB1D     		adds	r3, r7, #6
 11520 0214 1B88     		ldrh	r3, [r3]
 11521 0216 002B     		cmp	r3, #0
 11522 0218 40F0D084 		bne	.L505
1555:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1556:..\src/command_processing.c ****             /*-------------N IMU--------------*/
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 260


1557:..\src/command_processing.c ****             start_byte = 0;
 11523              		.loc 1 1557 0
 11524 021c 0023     		movs	r3, #0
 11525 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1558:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 11526              		.loc 1 1558 0
 11527 0222 07F58A73 		add	r3, r7, #276
 11528 0226 0222     		movs	r2, #2
 11529 0228 9A70     		strb	r2, [r3, #2]
1559:..\src/command_processing.c ****             packet_data[3] = 1;
 11530              		.loc 1 1559 0
 11531 022a 07F58A73 		add	r3, r7, #276
 11532 022e 0122     		movs	r2, #1
 11533 0230 DA70     		strb	r2, [r3, #3]
1560:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 11534              		.loc 1 1560 0
 11535 0232 574B     		ldr	r3, .L507
 11536 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11537 0236 07F58A73 		add	r3, r7, #276
 11538 023a 1A71     		strb	r2, [r3, #4]
1561:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11539              		.loc 1 1561 0
 11540 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11541 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11542 0244 15E0     		b	.L465
 11543              	.L466:
1562:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 11544              		.loc 1 1562 0 discriminator 3
 11545 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11546 024a 5A1D     		adds	r2, r3, #5
 11547 024c B7F8A436 		ldrh	r3, [r7, #1700]
 11548 0250 D31A     		subs	r3, r2, r3
 11549 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 11550 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 11551 025a 8A1A     		subs	r2, r1, r2
 11552 025c 07F1F801 		add	r1, r7, #248
 11553 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11554 0262 07F58A72 		add	r2, r7, #276
 11555 0266 D154     		strb	r1, [r2, r3]
1561:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11556              		.loc 1 1561 0 discriminator 3
 11557 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 11558 026c 013B     		subs	r3, r3, #1
 11559 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11560              	.L465:
1561:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11561              		.loc 1 1561 0 is_stmt 0 discriminator 1
 11562 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 11563 0276 002B     		cmp	r3, #0
 11564 0278 E5D1     		bne	.L466
1563:..\src/command_processing.c ****                 
1564:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1565:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11565              		.loc 1 1565 0 is_stmt 1
 11566 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11567 027e 3233     		adds	r3, r3, #50
 11568 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 261


1566:..\src/command_processing.c ****             i = 0;
 11569              		.loc 1 1566 0
 11570 0284 0023     		movs	r3, #0
 11571 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1567:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 11572              		.loc 1 1567 0
 11573 028a 0023     		movs	r3, #0
 11574 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11575 0290 B2E0     		b	.L467
 11576              	.L474:
1568:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11577              		.loc 1 1568 0
 11578 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 11579 0296 07F1EC03 		add	r3, r7, #236
 11580 029a 4149     		ldr	r1, .L507+16
 11581 029c 1846     		mov	r0, r3
 11582 029e FFF7FEFF 		bl	sprintf
1569:..\src/command_processing.c ****                 h = 4;
 11583              		.loc 1 1569 0
 11584 02a2 0423     		movs	r3, #4
 11585 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1570:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 11586              		.loc 1 1570 0
 11587 02a8 07F1EC03 		add	r3, r7, #236
 11588 02ac 1846     		mov	r0, r3
 11589 02ae FFF7FEFF 		bl	strlen
 11590 02b2 0346     		mov	r3, r0
 11591 02b4 87F89136 		strb	r3, [r7, #1681]
1571:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11592              		.loc 1 1571 0
 11593 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 11594 02bc 9A1C     		adds	r2, r3, #2
 11595 02be B7F8A036 		ldrh	r3, [r7, #1696]
 11596 02c2 3221     		movs	r1, #50
 11597 02c4 01FB03F3 		mul	r3, r1, r3
 11598 02c8 1344     		add	r3, r3, r2
 11599 02ca 07F58A72 		add	r2, r7, #276
 11600 02ce 0221     		movs	r1, #2
 11601 02d0 D154     		strb	r1, [r2, r3]
1572:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11602              		.loc 1 1572 0
 11603 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 11604 02d6 DA1C     		adds	r2, r3, #3
 11605 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 11606 02dc 3221     		movs	r1, #50
 11607 02de 01FB03F3 		mul	r3, r1, r3
 11608 02e2 1344     		add	r3, r3, r2
 11609 02e4 07F58A72 		add	r2, r7, #276
 11610 02e8 0321     		movs	r1, #3
 11611 02ea D154     		strb	r1, [r2, r3]
1573:..\src/command_processing.c ****                 
1574:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 11612              		.loc 1 1574 0
 11613 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 11614 02f0 1A46     		mov	r2, r3	@ movhi
 11615 02f2 5200     		lsls	r2, r2, #1
 11616 02f4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 262


 11617 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11618 02fa 39E0     		b	.L468
 11619              	.L471:
1575:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11620              		.loc 1 1575 0
 11621 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 11622 0300 284A     		ldr	r2, .L507+20
 11623 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11624 0304 9BB2     		uxth	r3, r3
 11625 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 11626 030a 9A42     		cmp	r2, r3
 11627 030c 17D1     		bne	.L469
1576:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 11628              		.loc 1 1576 0
 11629 030e B7F89E26 		ldrh	r2, [r7, #1694]
 11630 0312 B7F89436 		ldrh	r3, [r7, #1684]
 11631 0316 1A44     		add	r2, r2, r3
 11632 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 11633 031c 3221     		movs	r1, #50
 11634 031e 01FB03F3 		mul	r3, r1, r3
 11635 0322 1344     		add	r3, r3, r2
 11636 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 11637 0328 1E49     		ldr	r1, .L507+20
 11638 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11639 032c 07F58A72 		add	r2, r7, #276
 11640 0330 D154     		strb	r1, [r2, r3]
1577:..\src/command_processing.c ****                         i++;
 11641              		.loc 1 1577 0
 11642 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 11643 0336 0133     		adds	r3, r3, #1
 11644 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11645 033c 0EE0     		b	.L470
 11646              	.L469:
1578:..\src/command_processing.c ****                     } 
1579:..\src/command_processing.c ****                     else {
1580:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 11647              		.loc 1 1580 0
 11648 033e B7F89E26 		ldrh	r2, [r7, #1694]
 11649 0342 B7F89436 		ldrh	r3, [r7, #1684]
 11650 0346 1A44     		add	r2, r2, r3
 11651 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 11652 034c 3221     		movs	r1, #50
 11653 034e 01FB03F3 		mul	r3, r1, r3
 11654 0352 1344     		add	r3, r3, r2
 11655 0354 07F58A72 		add	r2, r7, #276
 11656 0358 FF21     		movs	r1, #255
 11657 035a D154     		strb	r1, [r2, r3]
 11658              	.L470:
1581:..\src/command_processing.c ****                     }
1582:..\src/command_processing.c ****                     h++;
 11659              		.loc 1 1582 0 discriminator 2
 11660 035c B7F89E36 		ldrh	r3, [r7, #1694]
 11661 0360 0133     		adds	r3, r3, #1
 11662 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1574:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11663              		.loc 1 1574 0 discriminator 2
 11664 0366 B7F8A236 		ldrh	r3, [r7, #1698]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 263


 11665 036a 0133     		adds	r3, r3, #1
 11666 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11667              	.L468:
1574:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11668              		.loc 1 1574 0 is_stmt 0 discriminator 1
 11669 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 11670 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 11671 0378 1346     		mov	r3, r2
 11672 037a 5B00     		lsls	r3, r3, #1
 11673 037c 1344     		add	r3, r3, r2
 11674 037e 0233     		adds	r3, r3, #2
 11675 0380 9942     		cmp	r1, r3
 11676 0382 BBDD     		ble	.L471
1583:..\src/command_processing.c ****                 }
1584:..\src/command_processing.c **** 
1585:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1586:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 11677              		.loc 1 1586 0 is_stmt 1
 11678 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11679 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11680 038c 2BE0     		b	.L472
 11681              	.L508:
 11682 038e 00BF     		.align	2
 11683              	.L507:
 11684 0390 00000000 		.word	N_IMU_Connected
 11685 0394 540D0000 		.word	.LC116
 11686 0398 700D0000 		.word	.LC117
 11687 039c 7C010000 		.word	.LC106
 11688 03a0 EC0C0000 		.word	.LC118
 11689 03a4 00000000 		.word	IMU_connected
 11690              	.L473:
1587:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11691              		.loc 1 1587 0 discriminator 3
 11692 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 11693 03ac DA1D     		adds	r2, r3, #7
 11694 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 11695 03b2 3221     		movs	r1, #50
 11696 03b4 01FB03F3 		mul	r3, r1, r3
 11697 03b8 1A44     		add	r2, r2, r3
 11698 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11699 03be 1A44     		add	r2, r2, r3
 11700 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 11701 03c4 D31A     		subs	r3, r2, r3
 11702 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 11703 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 11704 03ce 8A1A     		subs	r2, r1, r2
 11705 03d0 07F1EC01 		add	r1, r7, #236
 11706 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11707 03d6 07F58A72 		add	r2, r7, #276
 11708 03da D154     		strb	r1, [r2, r3]
1586:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11709              		.loc 1 1586 0 discriminator 3
 11710 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 11711 03e0 013B     		subs	r3, r3, #1
 11712 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11713              	.L472:
1586:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 264


 11714              		.loc 1 1586 0 is_stmt 0 discriminator 1
 11715 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 11716 03ea 002B     		cmp	r3, #0
 11717 03ec DCD1     		bne	.L473
1567:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11718              		.loc 1 1567 0 is_stmt 1 discriminator 2
 11719 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 11720 03f2 0133     		adds	r3, r3, #1
 11721 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11722              	.L467:
1567:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11723              		.loc 1 1567 0 is_stmt 0 discriminator 1
 11724 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 11725 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 11726 0400 9A42     		cmp	r2, r3
 11727 0402 FFF446AF 		bcc	.L474
1588:..\src/command_processing.c ****             }
1589:..\src/command_processing.c ****             
1590:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1591:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 11728              		.loc 1 1591 0 is_stmt 1
 11729 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11730 040a 1A46     		mov	r2, r3	@ movhi
 11731 040c 9200     		lsls	r2, r2, #2
 11732 040e 1344     		add	r3, r3, r2
 11733 0410 1A46     		mov	r2, r3	@ movhi
 11734 0412 9100     		lsls	r1, r2, #2
 11735 0414 1A46     		mov	r2, r3	@ movhi
 11736 0416 0B46     		mov	r3, r1	@ movhi
 11737 0418 1344     		add	r3, r3, r2
 11738 041a 5B00     		lsls	r3, r3, #1
 11739 041c 9AB2     		uxth	r2, r3
 11740 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11741 0422 1344     		add	r3, r3, r2
 11742 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1592:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 11743              		.loc 1 1592 0
 11744 0428 0023     		movs	r3, #0
 11745 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11746 042e 1FE1     		b	.L475
 11747              	.L482:
1593:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11748              		.loc 1 1593 0
 11749 0430 B7F89436 		ldrh	r3, [r7, #1684]
 11750 0434 9A1C     		adds	r2, r3, #2
 11751 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 11752 043a 3221     		movs	r1, #50
 11753 043c 01FB03F3 		mul	r3, r1, r3
 11754 0440 1344     		add	r3, r3, r2
 11755 0442 07F58A72 		add	r2, r7, #276
 11756 0446 0221     		movs	r1, #2
 11757 0448 D154     		strb	r1, [r2, r3]
1594:..\src/command_processing.c ****                 
1595:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11758              		.loc 1 1595 0
 11759 044a B7F89436 		ldrh	r3, [r7, #1684]
 11760 044e DA1C     		adds	r2, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 265


 11761 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 11762 0454 3221     		movs	r1, #50
 11763 0456 01FB03F3 		mul	r3, r1, r3
 11764 045a 1344     		add	r3, r3, r2
 11765 045c 07F58A72 		add	r2, r7, #276
 11766 0460 0321     		movs	r1, #3
 11767 0462 D154     		strb	r1, [r2, r3]
1596:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11768              		.loc 1 1596 0
 11769 0464 B7F89436 		ldrh	r3, [r7, #1684]
 11770 0468 1A1D     		adds	r2, r3, #4
 11771 046a B7F8A036 		ldrh	r3, [r7, #1696]
 11772 046e 3221     		movs	r1, #50
 11773 0470 01FB03F3 		mul	r3, r1, r3
 11774 0474 1A44     		add	r2, r2, r3
 11775 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 11776 047a 5B00     		lsls	r3, r3, #1
 11777 047c B249     		ldr	r1, .L509
 11778 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11779 0480 1846     		mov	r0, r3
 11780 0482 B249     		ldr	r1, .L509+4
 11781 0484 0346     		mov	r3, r0
 11782 0486 5B00     		lsls	r3, r3, #1
 11783 0488 0344     		add	r3, r3, r0
 11784 048a 0B44     		add	r3, r3, r1
 11785 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11786 048e 07F58A73 		add	r3, r7, #276
 11787 0492 9954     		strb	r1, [r3, r2]
1597:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11788              		.loc 1 1597 0
 11789 0494 B7F89436 		ldrh	r3, [r7, #1684]
 11790 0498 5A1D     		adds	r2, r3, #5
 11791 049a B7F8A036 		ldrh	r3, [r7, #1696]
 11792 049e 3221     		movs	r1, #50
 11793 04a0 01FB03F3 		mul	r3, r1, r3
 11794 04a4 1A44     		add	r2, r2, r3
 11795 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 11796 04aa 5B00     		lsls	r3, r3, #1
 11797 04ac A649     		ldr	r1, .L509
 11798 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11799 04b0 1846     		mov	r0, r3
 11800 04b2 A649     		ldr	r1, .L509+4
 11801 04b4 0346     		mov	r3, r0
 11802 04b6 5B00     		lsls	r3, r3, #1
 11803 04b8 0344     		add	r3, r3, r0
 11804 04ba 0B44     		add	r3, r3, r1
 11805 04bc 0133     		adds	r3, r3, #1
 11806 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11807 04c0 07F58A73 		add	r3, r7, #276
 11808 04c4 9954     		strb	r1, [r3, r2]
1598:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11809              		.loc 1 1598 0
 11810 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 11811 04ca 9A1D     		adds	r2, r3, #6
 11812 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 11813 04d0 3221     		movs	r1, #50
 11814 04d2 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 266


 11815 04d6 1A44     		add	r2, r2, r3
 11816 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 11817 04dc 5B00     		lsls	r3, r3, #1
 11818 04de 9A49     		ldr	r1, .L509
 11819 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11820 04e2 1846     		mov	r0, r3
 11821 04e4 9949     		ldr	r1, .L509+4
 11822 04e6 0346     		mov	r3, r0
 11823 04e8 5B00     		lsls	r3, r3, #1
 11824 04ea 0344     		add	r3, r3, r0
 11825 04ec 0B44     		add	r3, r3, r1
 11826 04ee 0233     		adds	r3, r3, #2
 11827 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11828 04f2 07F58A73 		add	r3, r7, #276
 11829 04f6 9954     		strb	r1, [r3, r2]
1599:..\src/command_processing.c ****                 
1600:..\src/command_processing.c ****                 // check if there is a second value
1601:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 11830              		.loc 1 1601 0
 11831 04f8 954B     		ldr	r3, .L509+8
 11832 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11833 04fc 1A46     		mov	r2, r3
 11834 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 11835 0502 0133     		adds	r3, r3, #1
 11836 0504 5B00     		lsls	r3, r3, #1
 11837 0506 9A42     		cmp	r2, r3
 11838 0508 28DA     		bge	.L476
1602:..\src/command_processing.c ****                     // there is only one value
1603:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 11839              		.loc 1 1603 0
 11840 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11841 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11842 0512 1EE0     		b	.L477
 11843              	.L478:
1604:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11844              		.loc 1 1604 0 discriminator 3
 11845 0514 B7F89436 		ldrh	r3, [r7, #1684]
 11846 0518 DA1D     		adds	r2, r3, #7
 11847 051a B7F8A036 		ldrh	r3, [r7, #1696]
 11848 051e 3221     		movs	r1, #50
 11849 0520 01FB03F3 		mul	r3, r1, r3
 11850 0524 1A44     		add	r2, r2, r3
 11851 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11852 052a 1A44     		add	r2, r2, r3
 11853 052c B7F8A236 		ldrh	r3, [r7, #1698]
 11854 0530 D31A     		subs	r3, r2, r3
 11855 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 11856 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 11857 053a 8A1A     		subs	r2, r1, r2
 11858 053c 07F1D801 		add	r1, r7, #216
 11859 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11860 0542 07F58A72 		add	r2, r7, #276
 11861 0546 D154     		strb	r1, [r2, r3]
1603:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11862              		.loc 1 1603 0 discriminator 3
 11863 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 11864 054c 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 267


 11865 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11866              	.L477:
1603:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11867              		.loc 1 1603 0 is_stmt 0 discriminator 1
 11868 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 11869 0556 002B     		cmp	r3, #0
 11870 0558 DCD1     		bne	.L478
 11871 055a 84E0     		b	.L479
 11872              	.L476:
1605:..\src/command_processing.c ****                 }
1606:..\src/command_processing.c ****                 else {
1607:..\src/command_processing.c ****                     // fill the second value
1608:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 11873              		.loc 1 1608 0 is_stmt 1
 11874 055c B7F89436 		ldrh	r3, [r7, #1684]
 11875 0560 DA1C     		adds	r2, r3, #3
 11876 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 11877 0566 3221     		movs	r1, #50
 11878 0568 01FB03F3 		mul	r3, r1, r3
 11879 056c 1344     		add	r3, r3, r2
 11880 056e 07F58A72 		add	r2, r7, #276
 11881 0572 0621     		movs	r1, #6
 11882 0574 D154     		strb	r1, [r2, r3]
1609:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11883              		.loc 1 1609 0
 11884 0576 B7F89436 		ldrh	r3, [r7, #1684]
 11885 057a DA1D     		adds	r2, r3, #7
 11886 057c B7F8A036 		ldrh	r3, [r7, #1696]
 11887 0580 3221     		movs	r1, #50
 11888 0582 01FB03F3 		mul	r3, r1, r3
 11889 0586 1A44     		add	r2, r2, r3
 11890 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 11891 058c 5B00     		lsls	r3, r3, #1
 11892 058e 0133     		adds	r3, r3, #1
 11893 0590 6D49     		ldr	r1, .L509
 11894 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11895 0594 1846     		mov	r0, r3
 11896 0596 6D49     		ldr	r1, .L509+4
 11897 0598 0346     		mov	r3, r0
 11898 059a 5B00     		lsls	r3, r3, #1
 11899 059c 0344     		add	r3, r3, r0
 11900 059e 0B44     		add	r3, r3, r1
 11901 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11902 05a2 07F58A73 		add	r3, r7, #276
 11903 05a6 9954     		strb	r1, [r3, r2]
1610:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11904              		.loc 1 1610 0
 11905 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 11906 05ac 03F10802 		add	r2, r3, #8
 11907 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 11908 05b4 3221     		movs	r1, #50
 11909 05b6 01FB03F3 		mul	r3, r1, r3
 11910 05ba 1A44     		add	r2, r2, r3
 11911 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 11912 05c0 5B00     		lsls	r3, r3, #1
 11913 05c2 0133     		adds	r3, r3, #1
 11914 05c4 6049     		ldr	r1, .L509
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 268


 11915 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11916 05c8 1846     		mov	r0, r3
 11917 05ca 6049     		ldr	r1, .L509+4
 11918 05cc 0346     		mov	r3, r0
 11919 05ce 5B00     		lsls	r3, r3, #1
 11920 05d0 0344     		add	r3, r3, r0
 11921 05d2 0B44     		add	r3, r3, r1
 11922 05d4 0133     		adds	r3, r3, #1
 11923 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11924 05d8 07F58A73 		add	r3, r7, #276
 11925 05dc 9954     		strb	r1, [r3, r2]
1611:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11926              		.loc 1 1611 0
 11927 05de B7F89436 		ldrh	r3, [r7, #1684]
 11928 05e2 03F10902 		add	r2, r3, #9
 11929 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 11930 05ea 3221     		movs	r1, #50
 11931 05ec 01FB03F3 		mul	r3, r1, r3
 11932 05f0 1A44     		add	r2, r2, r3
 11933 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 11934 05f6 5B00     		lsls	r3, r3, #1
 11935 05f8 0133     		adds	r3, r3, #1
 11936 05fa 5349     		ldr	r1, .L509
 11937 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11938 05fe 1846     		mov	r0, r3
 11939 0600 5249     		ldr	r1, .L509+4
 11940 0602 0346     		mov	r3, r0
 11941 0604 5B00     		lsls	r3, r3, #1
 11942 0606 0344     		add	r3, r3, r0
 11943 0608 0B44     		add	r3, r3, r1
 11944 060a 0233     		adds	r3, r3, #2
 11945 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11946 060e 07F58A73 		add	r3, r7, #276
 11947 0612 9954     		strb	r1, [r3, r2]
1612:..\src/command_processing.c ****                 
1613:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 11948              		.loc 1 1613 0
 11949 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11950 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11951 061c 1FE0     		b	.L480
 11952              	.L481:
1614:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 11953              		.loc 1 1614 0 discriminator 3
 11954 061e B7F89436 		ldrh	r3, [r7, #1684]
 11955 0622 03F10A02 		add	r2, r3, #10
 11956 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 11957 062a 3221     		movs	r1, #50
 11958 062c 01FB03F3 		mul	r3, r1, r3
 11959 0630 1A44     		add	r2, r2, r3
 11960 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11961 0636 1A44     		add	r2, r2, r3
 11962 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 11963 063c D31A     		subs	r3, r2, r3
 11964 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 11965 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 11966 0646 8A1A     		subs	r2, r1, r2
 11967 0648 07F1D801 		add	r1, r7, #216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 269


 11968 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11969 064e 07F58A72 		add	r2, r7, #276
 11970 0652 D154     		strb	r1, [r2, r3]
1613:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 11971              		.loc 1 1613 0 discriminator 3
 11972 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 11973 0658 013B     		subs	r3, r3, #1
 11974 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11975              	.L480:
1613:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 11976              		.loc 1 1613 0 is_stmt 0 discriminator 1
 11977 065e B7F8A236 		ldrh	r3, [r7, #1698]
 11978 0662 002B     		cmp	r3, #0
 11979 0664 DBD1     		bne	.L481
 11980              	.L479:
1592:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11981              		.loc 1 1592 0 is_stmt 1 discriminator 2
 11982 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 11983 066a 0133     		adds	r3, r3, #1
 11984 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11985              	.L475:
1592:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11986              		.loc 1 1592 0 is_stmt 0 discriminator 1
 11987 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 11988 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 11989 0678 9A42     		cmp	r2, r3
 11990 067a FFF4D9AE 		bcc	.L482
1615:..\src/command_processing.c ****                 }
1616:..\src/command_processing.c ****             }
1617:..\src/command_processing.c ****             
1618:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1619:..\src/command_processing.c ****             
1620:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 11991              		.loc 1 1620 0 is_stmt 1
 11992 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11993 0682 1A46     		mov	r2, r3	@ movhi
 11994 0684 9200     		lsls	r2, r2, #2
 11995 0686 1344     		add	r3, r3, r2
 11996 0688 1A46     		mov	r2, r3	@ movhi
 11997 068a 9100     		lsls	r1, r2, #2
 11998 068c 1A46     		mov	r2, r3	@ movhi
 11999 068e 0B46     		mov	r3, r1	@ movhi
 12000 0690 1344     		add	r3, r3, r2
 12001 0692 5B00     		lsls	r3, r3, #1
 12002 0694 9AB2     		uxth	r2, r3
 12003 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12004 069a 1344     		add	r3, r3, r2
 12005 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1621:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12006              		.loc 1 1621 0
 12007 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12008 06a4 5A1E     		subs	r2, r3, #1
 12009 06a6 07F1C803 		add	r3, r7, #200
 12010 06aa 2A49     		ldr	r1, .L509+12
 12011 06ac 1846     		mov	r0, r3
 12012 06ae FFF7FEFF 		bl	sprintf
1622:..\src/command_processing.c ****             id_str_len = strlen(id_str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 270


 12013              		.loc 1 1622 0
 12014 06b2 07F1C803 		add	r3, r7, #200
 12015 06b6 1846     		mov	r0, r3
 12016 06b8 FFF7FEFF 		bl	strlen
 12017 06bc 0346     		mov	r3, r0
 12018 06be 87F89336 		strb	r3, [r7, #1683]
1623:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12019              		.loc 1 1623 0
 12020 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12021 06c6 0233     		adds	r3, r3, #2
 12022 06c8 07F58A72 		add	r2, r7, #276
 12023 06cc 0221     		movs	r1, #2
 12024 06ce D154     		strb	r1, [r2, r3]
1624:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12025              		.loc 1 1624 0
 12026 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12027 06d4 0333     		adds	r3, r3, #3
 12028 06d6 07F58A72 		add	r2, r7, #276
 12029 06da 0121     		movs	r1, #1
 12030 06dc D154     		strb	r1, [r2, r3]
1625:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12031              		.loc 1 1625 0
 12032 06de B7F89436 		ldrh	r3, [r7, #1684]
 12033 06e2 0433     		adds	r3, r3, #4
 12034 06e4 1C4A     		ldr	r2, .L509+16
 12035 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12036 06ea 07F58A72 		add	r2, r7, #276
 12037 06ee D154     		strb	r1, [r2, r3]
1626:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12038              		.loc 1 1626 0
 12039 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12040 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12041 06f8 18E0     		b	.L483
 12042              	.L484:
1627:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12043              		.loc 1 1627 0 discriminator 3
 12044 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12045 06fe 5A1D     		adds	r2, r3, #5
 12046 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12047 0704 1A44     		add	r2, r2, r3
 12048 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12049 070a D31A     		subs	r3, r2, r3
 12050 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12051 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12052 0714 8A1A     		subs	r2, r1, r2
 12053 0716 07F1C801 		add	r1, r7, #200
 12054 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12055 071c 07F58A72 		add	r2, r7, #276
 12056 0720 D154     		strb	r1, [r2, r3]
1626:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12057              		.loc 1 1626 0 discriminator 3
 12058 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12059 0726 013B     		subs	r3, r3, #1
 12060 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12061              	.L483:
1626:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12062              		.loc 1 1626 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 271


 12063 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12064 0730 002B     		cmp	r3, #0
 12065 0732 E2D1     		bne	.L484
1628:..\src/command_processing.c ****                 
1629:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1630:..\src/command_processing.c ****             
1631:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12066              		.loc 1 1631 0 is_stmt 1
 12067 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12068 0738 3233     		adds	r3, r3, #50
 12069 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1632:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12070              		.loc 1 1632 0
 12071 073e 0023     		movs	r3, #0
 12072 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12073 0744 38E1     		b	.L485
 12074              	.L510:
 12075 0746 00BF     		.align	2
 12076              	.L509:
 12077 0748 00000000 		.word	IMU_connected
 12078 074c 00000000 		.word	MagCal
 12079 0750 00000000 		.word	N_IMU_Connected
 12080 0754 F80C0000 		.word	.LC119
 12081 0758 00000000 		.word	c_mem
 12082              	.L488:
1633:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12083              		.loc 1 1633 0
 12084 075c B7F89826 		ldrh	r2, [r7, #1688]
 12085 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 12086 0764 D118     		adds	r1, r2, r3
 12087 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 12088 076a D54A     		ldr	r2, .L511
 12089 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12090 076e 07F19C00 		add	r0, r7, #156
 12091 0772 0A46     		mov	r2, r1
 12092 0774 D349     		ldr	r1, .L511+4
 12093 0776 FFF7FEFF 		bl	sprintf
1634:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 12094              		.loc 1 1634 0
 12095 077a 07F19C03 		add	r3, r7, #156
 12096 077e 1846     		mov	r0, r3
 12097 0780 FFF7FEFF 		bl	strlen
 12098 0784 0346     		mov	r3, r0
 12099 0786 87F88F36 		strb	r3, [r7, #1679]
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 12100              		.loc 1 1636 0
 12101 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12102 078e 1A46     		mov	r2, r3	@ movhi
 12103 0790 9200     		lsls	r2, r2, #2
 12104 0792 1344     		add	r3, r3, r2
 12105 0794 1A46     		mov	r2, r3	@ movhi
 12106 0796 9100     		lsls	r1, r2, #2
 12107 0798 1A46     		mov	r2, r3	@ movhi
 12108 079a 0B46     		mov	r3, r1	@ movhi
 12109 079c 1344     		add	r3, r3, r2
 12110 079e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 272


 12111 07a0 9AB2     		uxth	r2, r3
 12112 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12113 07a6 1344     		add	r3, r3, r2
 12114 07a8 9BB2     		uxth	r3, r3
 12115 07aa 0233     		adds	r3, r3, #2
 12116 07ac 9BB2     		uxth	r3, r3
 12117 07ae 1A46     		mov	r2, r3
 12118 07b0 07F58A73 		add	r3, r7, #276
 12119 07b4 0221     		movs	r1, #2
 12120 07b6 9954     		strb	r1, [r3, r2]
1637:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 12121              		.loc 1 1637 0
 12122 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12123 07bc 1A46     		mov	r2, r3	@ movhi
 12124 07be 9200     		lsls	r2, r2, #2
 12125 07c0 1344     		add	r3, r3, r2
 12126 07c2 1A46     		mov	r2, r3	@ movhi
 12127 07c4 9100     		lsls	r1, r2, #2
 12128 07c6 1A46     		mov	r2, r3	@ movhi
 12129 07c8 0B46     		mov	r3, r1	@ movhi
 12130 07ca 1344     		add	r3, r3, r2
 12131 07cc 5B00     		lsls	r3, r3, #1
 12132 07ce 9AB2     		uxth	r2, r3
 12133 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12134 07d4 1344     		add	r3, r3, r2
 12135 07d6 9BB2     		uxth	r3, r3
 12136 07d8 0333     		adds	r3, r3, #3
 12137 07da 9BB2     		uxth	r3, r3
 12138 07dc 1A46     		mov	r2, r3
 12139 07de 07F58A73 		add	r3, r7, #276
 12140 07e2 0521     		movs	r1, #5
 12141 07e4 9954     		strb	r1, [r3, r2]
1638:..\src/command_processing.c ****                 
1639:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12142              		.loc 1 1639 0
 12143 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12144 07ea 1A46     		mov	r2, r3	@ movhi
 12145 07ec 9200     		lsls	r2, r2, #2
 12146 07ee 1344     		add	r3, r3, r2
 12147 07f0 1A46     		mov	r2, r3	@ movhi
 12148 07f2 9100     		lsls	r1, r2, #2
 12149 07f4 1A46     		mov	r2, r3	@ movhi
 12150 07f6 0B46     		mov	r3, r1	@ movhi
 12151 07f8 1344     		add	r3, r3, r2
 12152 07fa 5B00     		lsls	r3, r3, #1
 12153 07fc 9AB2     		uxth	r2, r3
 12154 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12155 0802 1344     		add	r3, r3, r2
 12156 0804 9BB2     		uxth	r3, r3
 12157 0806 0433     		adds	r3, r3, #4
 12158 0808 9BB2     		uxth	r3, r3
 12159 080a 1846     		mov	r0, r3
 12160 080c B7F8A436 		ldrh	r3, [r7, #1700]
 12161 0810 AB4A     		ldr	r2, .L511
 12162 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12163 0814 1946     		mov	r1, r3
 12164 0816 AC4A     		ldr	r2, .L511+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 273


 12165 0818 0B46     		mov	r3, r1
 12166 081a 9B00     		lsls	r3, r3, #2
 12167 081c 0B44     		add	r3, r3, r1
 12168 081e 1344     		add	r3, r3, r2
 12169 0820 03F20223 		addw	r3, r3, #514
 12170 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12171 0826 07F58A73 		add	r3, r7, #276
 12172 082a 1A54     		strb	r2, [r3, r0]
1640:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12173              		.loc 1 1640 0
 12174 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12175 0830 1A46     		mov	r2, r3	@ movhi
 12176 0832 9200     		lsls	r2, r2, #2
 12177 0834 1344     		add	r3, r3, r2
 12178 0836 1A46     		mov	r2, r3	@ movhi
 12179 0838 9100     		lsls	r1, r2, #2
 12180 083a 1A46     		mov	r2, r3	@ movhi
 12181 083c 0B46     		mov	r3, r1	@ movhi
 12182 083e 1344     		add	r3, r3, r2
 12183 0840 5B00     		lsls	r3, r3, #1
 12184 0842 9AB2     		uxth	r2, r3
 12185 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12186 0848 1344     		add	r3, r3, r2
 12187 084a 9BB2     		uxth	r3, r3
 12188 084c 0533     		adds	r3, r3, #5
 12189 084e 9BB2     		uxth	r3, r3
 12190 0850 1846     		mov	r0, r3
 12191 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 12192 0856 9A4A     		ldr	r2, .L511
 12193 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12194 085a 1946     		mov	r1, r3
 12195 085c 9A4A     		ldr	r2, .L511+8
 12196 085e 0B46     		mov	r3, r1
 12197 0860 9B00     		lsls	r3, r3, #2
 12198 0862 0B44     		add	r3, r3, r1
 12199 0864 1344     		add	r3, r3, r2
 12200 0866 03F20323 		addw	r3, r3, #515
 12201 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12202 086c 07F58A73 		add	r3, r7, #276
 12203 0870 1A54     		strb	r2, [r3, r0]
1641:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12204              		.loc 1 1641 0
 12205 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12206 0876 1A46     		mov	r2, r3	@ movhi
 12207 0878 9200     		lsls	r2, r2, #2
 12208 087a 1344     		add	r3, r3, r2
 12209 087c 1A46     		mov	r2, r3	@ movhi
 12210 087e 9100     		lsls	r1, r2, #2
 12211 0880 1A46     		mov	r2, r3	@ movhi
 12212 0882 0B46     		mov	r3, r1	@ movhi
 12213 0884 1344     		add	r3, r3, r2
 12214 0886 5B00     		lsls	r3, r3, #1
 12215 0888 9AB2     		uxth	r2, r3
 12216 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12217 088e 1344     		add	r3, r3, r2
 12218 0890 9BB2     		uxth	r3, r3
 12219 0892 0633     		adds	r3, r3, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 274


 12220 0894 9BB2     		uxth	r3, r3
 12221 0896 1846     		mov	r0, r3
 12222 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 12223 089c 884A     		ldr	r2, .L511
 12224 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12225 08a0 1946     		mov	r1, r3
 12226 08a2 894A     		ldr	r2, .L511+8
 12227 08a4 0B46     		mov	r3, r1
 12228 08a6 9B00     		lsls	r3, r3, #2
 12229 08a8 0B44     		add	r3, r3, r1
 12230 08aa 1344     		add	r3, r3, r2
 12231 08ac 03F50173 		add	r3, r3, #516
 12232 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12233 08b2 07F58A73 		add	r3, r7, #276
 12234 08b6 1A54     		strb	r2, [r3, r0]
1642:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12235              		.loc 1 1642 0
 12236 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12237 08bc 1A46     		mov	r2, r3	@ movhi
 12238 08be 9200     		lsls	r2, r2, #2
 12239 08c0 1344     		add	r3, r3, r2
 12240 08c2 1A46     		mov	r2, r3	@ movhi
 12241 08c4 9100     		lsls	r1, r2, #2
 12242 08c6 1A46     		mov	r2, r3	@ movhi
 12243 08c8 0B46     		mov	r3, r1	@ movhi
 12244 08ca 1344     		add	r3, r3, r2
 12245 08cc 5B00     		lsls	r3, r3, #1
 12246 08ce 9AB2     		uxth	r2, r3
 12247 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12248 08d4 1344     		add	r3, r3, r2
 12249 08d6 9BB2     		uxth	r3, r3
 12250 08d8 0733     		adds	r3, r3, #7
 12251 08da 9BB2     		uxth	r3, r3
 12252 08dc 1846     		mov	r0, r3
 12253 08de B7F8A436 		ldrh	r3, [r7, #1700]
 12254 08e2 774A     		ldr	r2, .L511
 12255 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12256 08e6 1946     		mov	r1, r3
 12257 08e8 774A     		ldr	r2, .L511+8
 12258 08ea 0B46     		mov	r3, r1
 12259 08ec 9B00     		lsls	r3, r3, #2
 12260 08ee 0B44     		add	r3, r3, r1
 12261 08f0 1344     		add	r3, r3, r2
 12262 08f2 03F20523 		addw	r3, r3, #517
 12263 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12264 08f8 07F58A73 		add	r3, r7, #276
 12265 08fc 1A54     		strb	r2, [r3, r0]
1643:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12266              		.loc 1 1643 0
 12267 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12268 0902 1A46     		mov	r2, r3	@ movhi
 12269 0904 9200     		lsls	r2, r2, #2
 12270 0906 1344     		add	r3, r3, r2
 12271 0908 1A46     		mov	r2, r3	@ movhi
 12272 090a 9100     		lsls	r1, r2, #2
 12273 090c 1A46     		mov	r2, r3	@ movhi
 12274 090e 0B46     		mov	r3, r1	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 275


 12275 0910 1344     		add	r3, r3, r2
 12276 0912 5B00     		lsls	r3, r3, #1
 12277 0914 9AB2     		uxth	r2, r3
 12278 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12279 091a 1344     		add	r3, r3, r2
 12280 091c 9BB2     		uxth	r3, r3
 12281 091e 0833     		adds	r3, r3, #8
 12282 0920 9BB2     		uxth	r3, r3
 12283 0922 1846     		mov	r0, r3
 12284 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 12285 0928 654A     		ldr	r2, .L511
 12286 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12287 092c 1946     		mov	r1, r3
 12288 092e 664A     		ldr	r2, .L511+8
 12289 0930 0B46     		mov	r3, r1
 12290 0932 9B00     		lsls	r3, r3, #2
 12291 0934 0B44     		add	r3, r3, r1
 12292 0936 1344     		add	r3, r3, r2
 12293 0938 03F20623 		addw	r3, r3, #518
 12294 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12295 093e 07F58A73 		add	r3, r7, #276
 12296 0942 1A54     		strb	r2, [r3, r0]
1644:..\src/command_processing.c **** 
1645:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 12297              		.loc 1 1645 0
 12298 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12299 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12300 094c 2BE0     		b	.L486
 12301              	.L487:
1646:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12302              		.loc 1 1646 0 discriminator 3
 12303 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12304 0952 1A46     		mov	r2, r3	@ movhi
 12305 0954 9200     		lsls	r2, r2, #2
 12306 0956 1344     		add	r3, r3, r2
 12307 0958 1A46     		mov	r2, r3	@ movhi
 12308 095a 9100     		lsls	r1, r2, #2
 12309 095c 1A46     		mov	r2, r3	@ movhi
 12310 095e 0B46     		mov	r3, r1	@ movhi
 12311 0960 1344     		add	r3, r3, r2
 12312 0962 5B00     		lsls	r3, r3, #1
 12313 0964 9AB2     		uxth	r2, r3
 12314 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12315 096a 1344     		add	r3, r3, r2
 12316 096c 9AB2     		uxth	r2, r3
 12317 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12318 0972 9BB2     		uxth	r3, r3
 12319 0974 1344     		add	r3, r3, r2
 12320 0976 9AB2     		uxth	r2, r3
 12321 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 12322 097c D31A     		subs	r3, r2, r3
 12323 097e 9BB2     		uxth	r3, r3
 12324 0980 0933     		adds	r3, r3, #9
 12325 0982 9BB2     		uxth	r3, r3
 12326 0984 1946     		mov	r1, r3
 12327 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 12328 098a B7F8A236 		ldrh	r3, [r7, #1698]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 276


 12329 098e D31A     		subs	r3, r2, r3
 12330 0990 07F19C02 		add	r2, r7, #156
 12331 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 12332 0996 07F58A73 		add	r3, r7, #276
 12333 099a 5A54     		strb	r2, [r3, r1]
1645:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12334              		.loc 1 1645 0 discriminator 3
 12335 099c B7F8A236 		ldrh	r3, [r7, #1698]
 12336 09a0 013B     		subs	r3, r3, #1
 12337 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12338              	.L486:
1645:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12339              		.loc 1 1645 0 is_stmt 0 discriminator 1
 12340 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 12341 09aa 002B     		cmp	r3, #0
 12342 09ac CFD1     		bne	.L487
1632:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12343              		.loc 1 1632 0 is_stmt 1 discriminator 2
 12344 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 12345 09b2 0133     		adds	r3, r3, #1
 12346 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12347              	.L485:
1632:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12348              		.loc 1 1632 0 is_stmt 0 discriminator 1
 12349 09b8 444B     		ldr	r3, .L511+12
 12350 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12351 09bc 9BB2     		uxth	r3, r3
 12352 09be B7F8A426 		ldrh	r2, [r7, #1700]
 12353 09c2 9A42     		cmp	r2, r3
 12354 09c4 FFF4CAAE 		bcc	.L488
1647:..\src/command_processing.c ****             }  
1648:..\src/command_processing.c ****           
1649:..\src/command_processing.c **** 
1650:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1651:..\src/command_processing.c ****             
1652:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 12355              		.loc 1 1652 0 is_stmt 1
 12356 09c8 404B     		ldr	r3, .L511+12
 12357 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12358 09cc 9BB2     		uxth	r3, r3
 12359 09ce 1A46     		mov	r2, r3	@ movhi
 12360 09d0 9200     		lsls	r2, r2, #2
 12361 09d2 1344     		add	r3, r3, r2
 12362 09d4 1A46     		mov	r2, r3	@ movhi
 12363 09d6 9100     		lsls	r1, r2, #2
 12364 09d8 1A46     		mov	r2, r3	@ movhi
 12365 09da 0B46     		mov	r3, r1	@ movhi
 12366 09dc 1344     		add	r3, r3, r2
 12367 09de 5B00     		lsls	r3, r3, #1
 12368 09e0 9AB2     		uxth	r2, r3
 12369 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12370 09e6 1344     		add	r3, r3, r2
 12371 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1653:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 12372              		.loc 1 1653 0
 12373 09ec B7F89836 		ldrh	r3, [r7, #1688]
 12374 09f0 364A     		ldr	r2, .L511+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 277


 12375 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 12376 09f4 1A44     		add	r2, r2, r3
 12377 09f6 07F18003 		add	r3, r7, #128
 12378 09fa 3549     		ldr	r1, .L511+16
 12379 09fc 1846     		mov	r0, r3
 12380 09fe FFF7FEFF 		bl	sprintf
1654:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 12381              		.loc 1 1654 0
 12382 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 12383 0a06 0233     		adds	r3, r3, #2
 12384 0a08 07F58A72 		add	r2, r7, #276
 12385 0a0c 0021     		movs	r1, #0
 12386 0a0e D154     		strb	r1, [r2, r3]
1655:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12387              		.loc 1 1655 0
 12388 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 12389 0a14 0333     		adds	r3, r3, #3
 12390 0a16 07F58A72 		add	r2, r7, #276
 12391 0a1a 0121     		movs	r1, #1
 12392 0a1c D154     		strb	r1, [r2, r3]
1656:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 12393              		.loc 1 1656 0
 12394 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 12395 0a22 0433     		adds	r3, r3, #4
 12396 0a24 284A     		ldr	r2, .L511+8
 12397 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 12398 0a2a 07F58A72 		add	r2, r7, #276
 12399 0a2e D154     		strb	r1, [r2, r3]
1657:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 12400              		.loc 1 1657 0
 12401 0a30 254B     		ldr	r3, .L511+8
 12402 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 12403 0a36 012B     		cmp	r3, #1
 12404 0a38 17D0     		beq	.L490
 12405 0a3a 022B     		cmp	r3, #2
 12406 0a3c 28D0     		beq	.L491
 12407 0a3e 002B     		cmp	r3, #0
 12408 0a40 00D0     		beq	.L492
1658:..\src/command_processing.c ****                 case 0: 
1659:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1660:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1661:..\src/command_processing.c ****                     break;
1662:..\src/command_processing.c ****                 case 1: 
1663:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1664:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1665:..\src/command_processing.c ****                     break;
1666:..\src/command_processing.c ****                 case 2: 
1667:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1668:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1669:..\src/command_processing.c ****                     break;
1670:..\src/command_processing.c ****                 default:
1671:..\src/command_processing.c ****                     break;
 12409              		.loc 1 1671 0
 12410 0a42 38E0     		b	.L493
 12411              	.L492:
1659:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12412              		.loc 1 1659 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 278


 12413 0a44 07F18003 		add	r3, r7, #128
 12414 0a48 1846     		mov	r0, r3
 12415 0a4a FFF7FEFF 		bl	strlen
 12416 0a4e 0346     		mov	r3, r0
 12417 0a50 1A46     		mov	r2, r3
 12418 0a52 07F18003 		add	r3, r7, #128
 12419 0a56 1344     		add	r3, r3, r2
 12420 0a58 1E4A     		ldr	r2, .L511+20
 12421 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 12422 0a5c 1860     		str	r0, [r3]	@ unaligned
 12423 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12424 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1660:..\src/command_processing.c ****                     break;
 12425              		.loc 1 1660 0
 12426 0a62 1A23     		movs	r3, #26
 12427 0a64 87F89D36 		strb	r3, [r7, #1693]
1661:..\src/command_processing.c ****                 case 1: 
 12428              		.loc 1 1661 0
 12429 0a68 25E0     		b	.L493
 12430              	.L490:
1663:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 12431              		.loc 1 1663 0
 12432 0a6a 07F18003 		add	r3, r7, #128
 12433 0a6e 1846     		mov	r0, r3
 12434 0a70 FFF7FEFF 		bl	strlen
 12435 0a74 0346     		mov	r3, r0
 12436 0a76 1A46     		mov	r2, r3
 12437 0a78 07F18003 		add	r3, r7, #128
 12438 0a7c 1344     		add	r3, r3, r2
 12439 0a7e 164A     		ldr	r2, .L511+24
 12440 0a80 1068     		ldr	r0, [r2]	@ unaligned
 12441 0a82 1860     		str	r0, [r3]	@ unaligned
 12442 0a84 1279     		ldrb	r2, [r2, #4]
 12443 0a86 1A71     		strb	r2, [r3, #4]
1664:..\src/command_processing.c ****                     break;
 12444              		.loc 1 1664 0
 12445 0a88 1923     		movs	r3, #25
 12446 0a8a 87F89D36 		strb	r3, [r7, #1693]
1665:..\src/command_processing.c ****                 case 2: 
 12447              		.loc 1 1665 0
 12448 0a8e 12E0     		b	.L493
 12449              	.L491:
1667:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12450              		.loc 1 1667 0
 12451 0a90 07F18003 		add	r3, r7, #128
 12452 0a94 1846     		mov	r0, r3
 12453 0a96 FFF7FEFF 		bl	strlen
 12454 0a9a 0346     		mov	r3, r0
 12455 0a9c 1A46     		mov	r2, r3
 12456 0a9e 07F18003 		add	r3, r7, #128
 12457 0aa2 1344     		add	r3, r3, r2
 12458 0aa4 0D4A     		ldr	r2, .L511+28
 12459 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 12460 0aa8 1860     		str	r0, [r3]	@ unaligned
 12461 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12462 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1668:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 279


 12463              		.loc 1 1668 0
 12464 0aae 1A23     		movs	r3, #26
 12465 0ab0 87F89D36 		strb	r3, [r7, #1693]
1669:..\src/command_processing.c ****                 default:
 12466              		.loc 1 1669 0
 12467 0ab4 00BF     		nop
 12468              	.L493:
1672:..\src/command_processing.c ****             }            
1673:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 12469              		.loc 1 1673 0
 12470 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12471 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12472 0abe 28E0     		b	.L494
 12473              	.L512:
 12474              		.align	2
 12475              	.L511:
 12476 0ac0 00000000 		.word	IMU_connected
 12477 0ac4 080D0000 		.word	.LC120
 12478 0ac8 00000000 		.word	c_mem
 12479 0acc 00000000 		.word	N_IMU_Connected
 12480 0ad0 240D0000 		.word	.LC121
 12481 0ad4 3C0D0000 		.word	.LC122
 12482 0ad8 440D0000 		.word	.LC123
 12483 0adc 4C0D0000 		.word	.LC124
 12484              	.L495:
1674:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12485              		.loc 1 1674 0 discriminator 3
 12486 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 12487 0ae4 5A1D     		adds	r2, r3, #5
 12488 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12489 0aea 1A44     		add	r2, r2, r3
 12490 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 12491 0af0 D31A     		subs	r3, r2, r3
 12492 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 12493 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 12494 0afa 8A1A     		subs	r2, r1, r2
 12495 0afc 07F18001 		add	r1, r7, #128
 12496 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12497 0b02 07F58A72 		add	r2, r7, #276
 12498 0b06 D154     		strb	r1, [r2, r3]
1673:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12499              		.loc 1 1673 0 discriminator 3
 12500 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 12501 0b0c 013B     		subs	r3, r3, #1
 12502 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12503              	.L494:
1673:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12504              		.loc 1 1673 0 is_stmt 0 discriminator 1
 12505 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 12506 0b16 002B     		cmp	r3, #0
 12507 0b18 E2D1     		bne	.L495
1675:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1676:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 12508              		.loc 1 1676 0 is_stmt 1
 12509 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 12510 0b1e 5A1D     		adds	r2, r3, #5
 12511 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 280


 12512 0b24 1344     		add	r3, r3, r2
 12513 0b26 07F58A72 		add	r2, r7, #276
 12514 0b2a 0121     		movs	r1, #1
 12515 0b2c D154     		strb	r1, [r2, r3]
1677:..\src/command_processing.c ****                   
1678:..\src/command_processing.c ****             
1679:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1680:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12516              		.loc 1 1680 0
 12517 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12518 0b32 3233     		adds	r3, r3, #50
 12519 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1681:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12520              		.loc 1 1681 0
 12521 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12522 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12523 0b40 1AE0     		b	.L496
 12524              	.L497:
1682:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 12525              		.loc 1 1682 0 discriminator 3
 12526 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12527 0b46 0233     		adds	r3, r3, #2
 12528 0b48 9BB2     		uxth	r3, r3
 12529 0b4a 1A46     		mov	r2, r3
 12530 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12531 0b50 1A44     		add	r2, r2, r3
 12532 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 12533 0b56 D31A     		subs	r3, r2, r3
 12534 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 12535 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 12536 0b60 8A1A     		subs	r2, r1, r2
 12537 0b62 07F10801 		add	r1, r7, #8
 12538 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12539 0b68 07F58A72 		add	r2, r7, #276
 12540 0b6c D154     		strb	r1, [r2, r3]
1681:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12541              		.loc 1 1681 0 discriminator 3
 12542 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 12543 0b72 013B     		subs	r3, r3, #1
 12544 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12545              	.L496:
1681:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12546              		.loc 1 1681 0 is_stmt 0 discriminator 1
 12547 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 12548 0b7c 002B     		cmp	r3, #0
 12549 0b7e E0D1     		bne	.L497
1683:..\src/command_processing.c **** 
1684:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 12550              		.loc 1 1684 0 is_stmt 1
 12551 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 12552 0b84 5C1E     		subs	r4, r3, #1
 12553 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 12554 0b8a DBB2     		uxtb	r3, r3
 12555 0b8c 013B     		subs	r3, r3, #1
 12556 0b8e DAB2     		uxtb	r2, r3
 12557 0b90 07F58A73 		add	r3, r7, #276
 12558 0b94 1146     		mov	r1, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 281


 12559 0b96 1846     		mov	r0, r3
 12560 0b98 FFF7FEFF 		bl	LCRChecksum
 12561 0b9c 0346     		mov	r3, r0
 12562 0b9e 1A46     		mov	r2, r3
 12563 0ba0 07F58A73 		add	r3, r7, #276
 12564 0ba4 1A55     		strb	r2, [r3, r4]
1685:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 12565              		.loc 1 1685 0
 12566 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 12567 0baa 07F58A73 		add	r3, r7, #276
 12568 0bae 1146     		mov	r1, r2
 12569 0bb0 1846     		mov	r0, r3
 12570 0bb2 FFF7FEFF 		bl	commWrite
1686:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 12571              		.loc 1 1686 0
 12572 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1687:..\src/command_processing.c ****         break;
 12573              		.loc 1 1687 0
 12574 0bba 09E1     		b	.L498
 12575              	.L505:
1688:..\src/command_processing.c **** 
1689:..\src/command_processing.c **** //=========================================================     other_params
1690:..\src/command_processing.c ****         default: 
1691:..\src/command_processing.c ****             
1692:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 12576              		.loc 1 1692 0
 12577 0bbc BB1D     		adds	r3, r7, #6
 12578 0bbe 1A88     		ldrh	r2, [r3]
 12579 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 12580 0bc4 013B     		subs	r3, r3, #1
 12581 0bc6 9A42     		cmp	r2, r3
 12582 0bc8 C0F20181 		blt	.L506
1693:..\src/command_processing.c ****                 break;
1694:..\src/command_processing.c ****             
1695:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 12583              		.loc 1 1695 0
 12584 0bcc BB1D     		adds	r3, r7, #6
 12585 0bce 1A88     		ldrh	r2, [r3]
 12586 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 12587 0bd4 8149     		ldr	r1, .L513
 12588 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 12589 0bd8 0B44     		add	r3, r3, r1
 12590 0bda 9A42     		cmp	r2, r3
 12591 0bdc 05D1     		bne	.L500
1696:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 12592              		.loc 1 1696 0
 12593 0bde 804B     		ldr	r3, .L513+4
 12594 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12595 0be2 804B     		ldr	r3, .L513+8
 12596 0be4 83F80122 		strb	r2, [r3, #513]
1697:..\src/command_processing.c ****                 break;
 12597              		.loc 1 1697 0
 12598 0be8 F2E0     		b	.L498
 12599              	.L500:
1698:..\src/command_processing.c ****             }
1699:..\src/command_processing.c ****             
1700:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 282


 12600              		.loc 1 1700 0
 12601 0bea BB1D     		adds	r3, r7, #6
 12602 0bec 1A88     		ldrh	r2, [r3]
 12603 0bee B7F89836 		ldrh	r3, [r7, #1688]
 12604 0bf2 013B     		subs	r3, r3, #1
 12605 0bf4 9A42     		cmp	r2, r3
 12606 0bf6 05D1     		bne	.L501
1701:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 12607              		.loc 1 1701 0
 12608 0bf8 794B     		ldr	r3, .L513+4
 12609 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12610 0bfc 794B     		ldr	r3, .L513+8
 12611 0bfe 83F8A020 		strb	r2, [r3, #160]
1702:..\src/command_processing.c ****             }
1703:..\src/command_processing.c ****             else {
1704:..\src/command_processing.c ****             
1705:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1706:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1707:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1708:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1709:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1710:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1711:..\src/command_processing.c ****                 
1712:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1713:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1714:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1715:..\src/command_processing.c ****                 {
1716:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1717:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1718:..\src/command_processing.c ****                 }
1719:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1720:..\src/command_processing.c ****             
1721:..\src/command_processing.c ****             }
1722:..\src/command_processing.c ****             
1723:..\src/command_processing.c ****         break;
 12612              		.loc 1 1723 0
 12613 0c02 E5E0     		b	.L498
 12614              	.L501:
1706:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 12615              		.loc 1 1706 0
 12616 0c04 BB1D     		adds	r3, r7, #6
 12617 0c06 1A88     		ldrh	r2, [r3]
 12618 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 12619 0c0c D31A     		subs	r3, r2, r3
 12620 0c0e 764A     		ldr	r2, .L513+12
 12621 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12622 0c12 1946     		mov	r1, r3
 12623 0c14 724B     		ldr	r3, .L513+4
 12624 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 12625 0c18 724A     		ldr	r2, .L513+8
 12626 0c1a 0B46     		mov	r3, r1
 12627 0c1c 9B00     		lsls	r3, r3, #2
 12628 0c1e 0B44     		add	r3, r3, r1
 12629 0c20 1344     		add	r3, r3, r2
 12630 0c22 03F20223 		addw	r3, r3, #514
 12631 0c26 0246     		mov	r2, r0
 12632 0c28 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 283


1707:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 12633              		.loc 1 1707 0
 12634 0c2a BB1D     		adds	r3, r7, #6
 12635 0c2c 1A88     		ldrh	r2, [r3]
 12636 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 12637 0c32 D31A     		subs	r3, r2, r3
 12638 0c34 6C4A     		ldr	r2, .L513+12
 12639 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12640 0c38 1946     		mov	r1, r3
 12641 0c3a 694B     		ldr	r3, .L513+4
 12642 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 12643 0c3e 694A     		ldr	r2, .L513+8
 12644 0c40 0B46     		mov	r3, r1
 12645 0c42 9B00     		lsls	r3, r3, #2
 12646 0c44 0B44     		add	r3, r3, r1
 12647 0c46 1344     		add	r3, r3, r2
 12648 0c48 03F20323 		addw	r3, r3, #515
 12649 0c4c 0246     		mov	r2, r0
 12650 0c4e 1A70     		strb	r2, [r3]
1708:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 12651              		.loc 1 1708 0
 12652 0c50 BB1D     		adds	r3, r7, #6
 12653 0c52 1A88     		ldrh	r2, [r3]
 12654 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 12655 0c58 D31A     		subs	r3, r2, r3
 12656 0c5a 634A     		ldr	r2, .L513+12
 12657 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12658 0c5e 1946     		mov	r1, r3
 12659 0c60 5F4B     		ldr	r3, .L513+4
 12660 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 12661 0c64 5F4A     		ldr	r2, .L513+8
 12662 0c66 0B46     		mov	r3, r1
 12663 0c68 9B00     		lsls	r3, r3, #2
 12664 0c6a 0B44     		add	r3, r3, r1
 12665 0c6c 1344     		add	r3, r3, r2
 12666 0c6e 03F50173 		add	r3, r3, #516
 12667 0c72 0246     		mov	r2, r0
 12668 0c74 1A70     		strb	r2, [r3]
1709:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 12669              		.loc 1 1709 0
 12670 0c76 BB1D     		adds	r3, r7, #6
 12671 0c78 1A88     		ldrh	r2, [r3]
 12672 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 12673 0c7e D31A     		subs	r3, r2, r3
 12674 0c80 594A     		ldr	r2, .L513+12
 12675 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12676 0c84 1946     		mov	r1, r3
 12677 0c86 564B     		ldr	r3, .L513+4
 12678 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 12679 0c8a 564A     		ldr	r2, .L513+8
 12680 0c8c 0B46     		mov	r3, r1
 12681 0c8e 9B00     		lsls	r3, r3, #2
 12682 0c90 0B44     		add	r3, r3, r1
 12683 0c92 1344     		add	r3, r3, r2
 12684 0c94 03F20523 		addw	r3, r3, #517
 12685 0c98 0246     		mov	r2, r0
 12686 0c9a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 284


1710:..\src/command_processing.c ****                 
 12687              		.loc 1 1710 0
 12688 0c9c BB1D     		adds	r3, r7, #6
 12689 0c9e 1A88     		ldrh	r2, [r3]
 12690 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 12691 0ca4 D31A     		subs	r3, r2, r3
 12692 0ca6 504A     		ldr	r2, .L513+12
 12693 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12694 0caa 1946     		mov	r1, r3
 12695 0cac 4C4B     		ldr	r3, .L513+4
 12696 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 12697 0cb0 4C4A     		ldr	r2, .L513+8
 12698 0cb2 0B46     		mov	r3, r1
 12699 0cb4 9B00     		lsls	r3, r3, #2
 12700 0cb6 0B44     		add	r3, r3, r1
 12701 0cb8 1344     		add	r3, r3, r2
 12702 0cba 03F20623 		addw	r3, r3, #518
 12703 0cbe 0246     		mov	r2, r0
 12704 0cc0 1A70     		strb	r2, [r3]
1713:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 12705              		.loc 1 1713 0
 12706 0cc2 4A4B     		ldr	r3, .L513+16
 12707 0cc4 0122     		movs	r2, #1
 12708 0cc6 1A60     		str	r2, [r3]
1714:..\src/command_processing.c ****                 {
 12709              		.loc 1 1714 0
 12710 0cc8 0023     		movs	r3, #0
 12711 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12712 0cce 71E0     		b	.L503
 12713              	.L504:
1716:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 12714              		.loc 1 1716 0 discriminator 3
 12715 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 12716 0cd4 444A     		ldr	r2, .L513+12
 12717 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12718 0cd8 1C46     		mov	r4, r3
 12719 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 12720 0cde 424A     		ldr	r2, .L513+12
 12721 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12722 0ce2 1946     		mov	r1, r3
 12723 0ce4 3F4A     		ldr	r2, .L513+8
 12724 0ce6 0B46     		mov	r3, r1
 12725 0ce8 9B00     		lsls	r3, r3, #2
 12726 0cea 0B44     		add	r3, r3, r1
 12727 0cec 1344     		add	r3, r3, r2
 12728 0cee 03F20223 		addw	r3, r3, #514
 12729 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12730 0cf4 1A46     		mov	r2, r3
 12731 0cf6 1346     		mov	r3, r2
 12732 0cf8 5B00     		lsls	r3, r3, #1
 12733 0cfa 1344     		add	r3, r3, r2
 12734 0cfc 5B00     		lsls	r3, r3, #1
 12735 0cfe 5A1C     		adds	r2, r3, #1
 12736 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 12737 0d04 3849     		ldr	r1, .L513+12
 12738 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12739 0d08 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 285


 12740 0d0a 3649     		ldr	r1, .L513+8
 12741 0d0c 0346     		mov	r3, r0
 12742 0d0e 9B00     		lsls	r3, r3, #2
 12743 0d10 0344     		add	r3, r3, r0
 12744 0d12 0B44     		add	r3, r3, r1
 12745 0d14 03F20323 		addw	r3, r3, #515
 12746 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12747 0d1a 1946     		mov	r1, r3
 12748 0d1c 0B46     		mov	r3, r1
 12749 0d1e 5B00     		lsls	r3, r3, #1
 12750 0d20 0B44     		add	r3, r3, r1
 12751 0d22 5B00     		lsls	r3, r3, #1
 12752 0d24 1A44     		add	r2, r2, r3
 12753 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 12754 0d2a 2F49     		ldr	r1, .L513+12
 12755 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12756 0d2e 1846     		mov	r0, r3
 12757 0d30 2C49     		ldr	r1, .L513+8
 12758 0d32 0346     		mov	r3, r0
 12759 0d34 9B00     		lsls	r3, r3, #2
 12760 0d36 0344     		add	r3, r3, r0
 12761 0d38 0B44     		add	r3, r3, r1
 12762 0d3a 03F50173 		add	r3, r3, #516
 12763 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12764 0d40 1946     		mov	r1, r3
 12765 0d42 0B46     		mov	r3, r1
 12766 0d44 5B00     		lsls	r3, r3, #1
 12767 0d46 0B44     		add	r3, r3, r1
 12768 0d48 5B00     		lsls	r3, r3, #1
 12769 0d4a 1A44     		add	r2, r2, r3
 12770 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 12771 0d50 2549     		ldr	r1, .L513+12
 12772 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12773 0d54 1846     		mov	r0, r3
 12774 0d56 2349     		ldr	r1, .L513+8
 12775 0d58 0346     		mov	r3, r0
 12776 0d5a 9B00     		lsls	r3, r3, #2
 12777 0d5c 0344     		add	r3, r3, r0
 12778 0d5e 0B44     		add	r3, r3, r1
 12779 0d60 03F20523 		addw	r3, r3, #517
 12780 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12781 0d66 1B01     		lsls	r3, r3, #4
 12782 0d68 1A44     		add	r2, r2, r3
 12783 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 12784 0d6e 1E49     		ldr	r1, .L513+12
 12785 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12786 0d72 1846     		mov	r0, r3
 12787 0d74 1B49     		ldr	r1, .L513+8
 12788 0d76 0346     		mov	r3, r0
 12789 0d78 9B00     		lsls	r3, r3, #2
 12790 0d7a 0344     		add	r3, r3, r0
 12791 0d7c 0B44     		add	r3, r3, r1
 12792 0d7e 03F20623 		addw	r3, r3, #518
 12793 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12794 0d84 5B00     		lsls	r3, r3, #1
 12795 0d86 1344     		add	r3, r3, r2
 12796 0d88 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 286


 12797 0d8a 194A     		ldr	r2, .L513+20
 12798 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1717:..\src/command_processing.c ****                 }
 12799              		.loc 1 1717 0 discriminator 3
 12800 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 12801 0d94 144A     		ldr	r2, .L513+12
 12802 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12803 0d98 1A46     		mov	r2, r3
 12804 0d9a 154B     		ldr	r3, .L513+20
 12805 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 12806 0da0 124B     		ldr	r3, .L513+16
 12807 0da2 1B68     		ldr	r3, [r3]
 12808 0da4 1344     		add	r3, r3, r2
 12809 0da6 114A     		ldr	r2, .L513+16
 12810 0da8 1360     		str	r3, [r2]
1714:..\src/command_processing.c ****                 {
 12811              		.loc 1 1714 0 discriminator 3
 12812 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 12813 0dae 0133     		adds	r3, r3, #1
 12814 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12815              	.L503:
1714:..\src/command_processing.c ****                 {
 12816              		.loc 1 1714 0 is_stmt 0 discriminator 1
 12817 0db4 094B     		ldr	r3, .L513
 12818 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12819 0db8 9BB2     		uxth	r3, r3
 12820 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 12821 0dbe 9A42     		cmp	r2, r3
 12822 0dc0 86D3     		bcc	.L504
1719:..\src/command_processing.c ****             
 12823              		.loc 1 1719 0 is_stmt 1
 12824 0dc2 0A4B     		ldr	r3, .L513+16
 12825 0dc4 1B68     		ldr	r3, [r3]
 12826 0dc6 0133     		adds	r3, r3, #1
 12827 0dc8 084A     		ldr	r2, .L513+16
 12828 0dca 1360     		str	r3, [r2]
 12829              		.loc 1 1723 0
 12830 0dcc 00E0     		b	.L498
 12831              	.L506:
1693:..\src/command_processing.c ****             
 12832              		.loc 1 1693 0
 12833 0dce 00BF     		nop
 12834              	.L498:
1724:..\src/command_processing.c ****     }
1725:..\src/command_processing.c **** }
 12835              		.loc 1 1725 0 discriminator 1
 12836 0dd0 00BF     		nop
 12837 0dd2 07F5D567 		add	r7, r7, #1704
 12838              		.cfi_def_cfa_offset 16
 12839 0dd6 BD46     		mov	sp, r7
 12840              		.cfi_def_cfa_register 13
 12841              		@ sp needed
 12842 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 12843              	.L514:
 12844 0dda 00BF     		.align	2
 12845              	.L513:
 12846 0ddc 00000000 		.word	N_IMU_Connected
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 287


 12847 0de0 00000000 		.word	g_rx
 12848 0de4 00000000 		.word	g_mem
 12849 0de8 00000000 		.word	IMU_connected
 12850 0dec 00000000 		.word	imus_data_size
 12851 0df0 00000000 		.word	single_imu_size
 12852              		.cfi_endproc
 12853              	.LFE70:
 12854              		.size	get_IMU_param_list, .-get_IMU_param_list
 12855              		.section	.text.setZeros,"ax",%progbits
 12856              		.align	2
 12857              		.global	setZeros
 12858              		.thumb
 12859              		.thumb_func
 12860              		.type	setZeros, %function
 12861              	setZeros:
 12862              	.LFB71:
1726:..\src/command_processing.c **** 
1727:..\src/command_processing.c **** //==============================================================================
1728:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1729:..\src/command_processing.c **** //==============================================================================
1730:..\src/command_processing.c **** 
1731:..\src/command_processing.c **** void setZeros()
1732:..\src/command_processing.c **** {
 12863              		.loc 1 1732 0
 12864              		.cfi_startproc
 12865              		@ args = 0, pretend = 0, frame = 8
 12866              		@ frame_needed = 1, uses_anonymous_args = 0
 12867 0000 90B5     		push	{r4, r7, lr}
 12868              		.cfi_def_cfa_offset 12
 12869              		.cfi_offset 4, -12
 12870              		.cfi_offset 7, -8
 12871              		.cfi_offset 14, -4
 12872 0002 83B0     		sub	sp, sp, #12
 12873              		.cfi_def_cfa_offset 24
 12874 0004 00AF     		add	r7, sp, #0
 12875              		.cfi_def_cfa_register 7
1733:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1734:..\src/command_processing.c ****     
1735:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 12876              		.loc 1 1735 0
 12877 0006 0023     		movs	r3, #0
 12878 0008 BB71     		strb	r3, [r7, #6]
 12879 000a 27E0     		b	.L516
 12880              	.L519:
1736:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12881              		.loc 1 1736 0
 12882 000c 0023     		movs	r3, #0
 12883 000e FB71     		strb	r3, [r7, #7]
 12884 0010 1EE0     		b	.L517
 12885              	.L518:
1737:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 12886              		.loc 1 1737 0 discriminator 3
 12887 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 12888 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 12889 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12890 0018 1748     		ldr	r0, .L520
 12891 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 288


 12892 001e 1C46     		mov	r4, r3
 12893 0020 1648     		ldr	r0, .L520+4
 12894 0022 1346     		mov	r3, r2
 12895 0024 5B00     		lsls	r3, r3, #1
 12896 0026 1344     		add	r3, r3, r2
 12897 0028 9B00     		lsls	r3, r3, #2
 12898 002a 0B44     		add	r3, r3, r1
 12899 002c 6633     		adds	r3, r3, #102
 12900 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1738:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 12901              		.loc 1 1738 0 discriminator 3
 12902 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 12903 0034 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 12904 0036 1248     		ldr	r0, .L520+8
 12905 0038 1346     		mov	r3, r2
 12906 003a 5B00     		lsls	r3, r3, #1
 12907 003c 1344     		add	r3, r3, r2
 12908 003e 1B01     		lsls	r3, r3, #4
 12909 0040 0344     		add	r3, r3, r0
 12910 0042 0B44     		add	r3, r3, r1
 12911 0044 1433     		adds	r3, r3, #20
 12912 0046 0022     		movs	r2, #0
 12913 0048 1A70     		strb	r2, [r3]
1736:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12914              		.loc 1 1736 0 discriminator 3
 12915 004a FB79     		ldrb	r3, [r7, #7]
 12916 004c 0133     		adds	r3, r3, #1
 12917 004e FB71     		strb	r3, [r7, #7]
 12918              	.L517:
1736:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12919              		.loc 1 1736 0 is_stmt 0 discriminator 1
 12920 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12921 0052 022B     		cmp	r3, #2
 12922 0054 DDD9     		bls	.L518
1735:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12923              		.loc 1 1735 0 is_stmt 1 discriminator 2
 12924 0056 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 12925 0058 0133     		adds	r3, r3, #1
 12926 005a BB71     		strb	r3, [r7, #6]
 12927              	.L516:
1735:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12928              		.loc 1 1735 0 is_stmt 0 discriminator 1
 12929 005c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 12930 005e 012B     		cmp	r3, #1
 12931 0060 D4D9     		bls	.L519
1739:..\src/command_processing.c ****         }
1740:..\src/command_processing.c ****     }
1741:..\src/command_processing.c ****     reset_last_value_flag = 1;
 12932              		.loc 1 1741 0 is_stmt 1
 12933 0062 084B     		ldr	r3, .L520+12
 12934 0064 0122     		movs	r2, #1
 12935 0066 1A70     		strb	r2, [r3]
1742:..\src/command_processing.c **** 
1743:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 12936              		.loc 1 1743 0
 12937 0068 0120     		movs	r0, #1
 12938 006a FFF7FEFF 		bl	sendAcknowledgment
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 289


1744:..\src/command_processing.c **** }
 12939              		.loc 1 1744 0
 12940 006e 00BF     		nop
 12941 0070 0C37     		adds	r7, r7, #12
 12942              		.cfi_def_cfa_offset 12
 12943 0072 BD46     		mov	sp, r7
 12944              		.cfi_def_cfa_register 13
 12945              		@ sp needed
 12946 0074 90BD     		pop	{r4, r7, pc}
 12947              	.L521:
 12948 0076 00BF     		.align	2
 12949              	.L520:
 12950 0078 00000000 		.word	data_encoder_raw
 12951 007c 00000000 		.word	g_mem
 12952 0080 00000000 		.word	g_meas
 12953 0084 00000000 		.word	reset_last_value_flag
 12954              		.cfi_endproc
 12955              	.LFE71:
 12956              		.size	setZeros, .-setZeros
 12957              		.section	.rodata
 12958              		.align	2
 12959              	.LC125:
 12960 0d84 0D0A00   		.ascii	"\015\012\000"
 12961 0d87 00       		.align	2
 12962              	.LC126:
 12963 0d88 4669726D 		.ascii	"Firmware version: \000"
 12963      77617265 
 12963      20766572 
 12963      73696F6E 
 12963      3A2000
 12964 0d9b 00       		.align	2
 12965              	.LC127:
 12966 0d9c 47656E65 		.ascii	"Generic firmware v. 1.7 (PSoC5)\000"
 12966      72696320 
 12966      6669726D 
 12966      77617265 
 12966      20762E20 
 12967              		.align	2
 12968              	.LC128:
 12969 0dbc 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 12969      0A00
 12970 0dc2 0000     		.align	2
 12971              	.LC129:
 12972 0dc4 44455649 		.ascii	"DEVICE INFO\015\012\000"
 12972      43452049 
 12972      4E464F0D 
 12972      0A00
 12973 0dd2 0000     		.align	2
 12974              	.LC130:
 12975 0dd4 49443A20 		.ascii	"ID: %d\015\012\000"
 12975      25640D0A 
 12975      00
 12976 0ddd 000000   		.align	2
 12977              	.LC131:
 12978 0de0 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 12978      63653A20 
 12978      534F4654 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 290


 12978      48414E44 
 12978      2050524F 
 12979 0df7 00       		.align	2
 12980              	.LC132:
 12981 0df8 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 12981      63653A20 
 12981      47454E45 
 12981      52494320 
 12981      32204D4F 
 12982 0e13 00       		.align	2
 12983              	.LC133:
 12984 0e14 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 12984      20736964 
 12984      653A2052 
 12984      49474854 
 12984      0D0A00
 12985 0e27 00       		.align	2
 12986              	.LC134:
 12987 0e28 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 12987      20736964 
 12987      653A204C 
 12987      4546540D 
 12987      0A00
 12988 0e3a 0000     		.align	2
 12989              	.LC135:
 12990 0e3c 55736572 		.ascii	"User: MARIA\015\012\000"
 12990      3A204D41 
 12990      5249410D 
 12990      0A00
 12991 0e4a 0000     		.align	2
 12992              	.LC136:
 12993 0e4c 55736572 		.ascii	"User: ROZA\015\012\000"
 12993      3A20524F 
 12993      5A410D0A 
 12993      00
 12994 0e59 000000   		.align	2
 12995              	.LC137:
 12996 0e5c 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 12996      3A204745 
 12996      4E455249 
 12996      43205553 
 12996      45520D0A 
 12997 0e71 000000   		.align	2
 12998              	.LC138:
 12999 0e74 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 12999      52202564 
 12999      20494E46 
 12999      4F0D0A00 
 13000              		.align	2
 13001              	.LC139:
 13002 0e84 4D6F746F 		.ascii	"Motor reference\000"
 13002      72207265 
 13002      66657265 
 13002      6E636500 
 13003              		.align	2
 13004              	.LC140:
 13005 0e94 202D2043 		.ascii	" - Currents: \000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 291


 13005      75727265 
 13005      6E74733A 
 13005      2000
 13006 0ea2 0000     		.align	2
 13007              	.LC141:
 13008 0ea4 202D2050 		.ascii	" - Pwm: \000"
 13008      776D3A20 
 13008      00
 13009 0ead 000000   		.align	2
 13010              	.LC142:
 13011 0eb0 202D2050 		.ascii	" - Position: \000"
 13011      6F736974 
 13011      696F6E3A 
 13011      2000
 13012 0ebe 0000     		.align	2
 13013              	.LC143:
 13014 0ec0 25642000 		.ascii	"%d \000"
 13015              		.align	2
 13016              	.LC144:
 13017 0ec4 4D6F746F 		.ascii	"Motor enabled: \000"
 13017      7220656E 
 13017      61626C65 
 13017      643A2000 
 13018              		.align	2
 13019              	.LC145:
 13020 0ed4 5945530D 		.ascii	"YES\015\012\000"
 13020      0A00
 13021 0eda 0000     		.align	2
 13022              	.LC146:
 13023 0edc 4E4F0D0A 		.ascii	"NO\015\012\000"
 13023      00
 13024 0ee1 000000   		.align	2
 13025              	.LC147:
 13026 0ee4 50574D20 		.ascii	"PWM rescaling activation: \000"
 13026      72657363 
 13026      616C696E 
 13026      67206163 
 13026      74697661 
 13027 0eff 00       		.align	2
 13028              	.LC148:
 13029 0f00 5945530A 		.ascii	"YES\012\000"
 13029      00
 13030 0f05 000000   		.align	2
 13031              	.LC149:
 13032 0f08 4E4F0A00 		.ascii	"NO\012\000"
 13033              		.align	2
 13034              	.LC150:
 13035 0f0c 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13035      4C696D69 
 13035      743A2025 
 13035      640D0A00 
 13036              		.align	2
 13037              	.LC151:
 13038 0f1c 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13038      41535552 
 13038      454D454E 
 13038      54532049 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 292


 13038      4E464F0D 
 13039 0f32 0000     		.align	2
 13040              	.LC152:
 13041 0f34 53656E73 		.ascii	"Sensor value: \000"
 13041      6F722076 
 13041      616C7565 
 13041      3A2000
 13042 0f43 00       		.align	2
 13043              	.LC153:
 13044 0f44 256400   		.ascii	"%d\000"
 13045 0f47 00       		.align	2
 13046              	.LC154:
 13047 0f48 2C2000   		.ascii	", \000"
 13048 0f4b 00       		.align	2
 13049              	.LC155:
 13050 0f4c 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13050      65727920 
 13050      25642056 
 13050      6F6C7461 
 13050      67652028 
 13051 0f69 000000   		.align	2
 13052              	.LC156:
 13053 0f6c 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 13053      20636861 
 13053      72676520 
 13053      706F7765 
 13053      72207465 
 13054 0f93 00       		.align	2
 13055              	.LC157:
 13056 0f94 43757272 		.ascii	"Current %d (mA): %ld\000"
 13056      656E7420 
 13056      25642028 
 13056      6D41293A 
 13056      20256C64 
 13057 0fa9 000000   		.align	2
 13058              	.LC158:
 13059 0fac 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13059      544F5220 
 13059      25642043 
 13059      4F4E4649 
 13059      47555241 
 13060 0fc7 00       		.align	2
 13061              	.LC159:
 13062 0fc8 50494420 		.ascii	"PID Controller: \000"
 13062      436F6E74 
 13062      726F6C6C 
 13062      65723A20 
 13062      00
 13063              		.global	__aeabi_i2d
 13064              		.global	__aeabi_ddiv
 13065 0fd9 000000   		.align	2
 13066              	.LC160:
 13067 0fdc 50202D3E 		.ascii	"P -> %f  \000"
 13067      20256620 
 13067      2000
 13068 0fe6 0000     		.align	2
 13069              	.LC161:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 293


 13070 0fe8 49202D3E 		.ascii	"I -> %f  \000"
 13070      20256620 
 13070      2000
 13071 0ff2 0000     		.align	2
 13072              	.LC162:
 13073 0ff4 44202D3E 		.ascii	"D -> %f\015\012\000"
 13073      2025660D 
 13073      0A00
 13074 0ffe 0000     		.align	2
 13075              	.LC163:
 13076 1000 43757272 		.ascii	"Current PID Controller: \000"
 13076      656E7420 
 13076      50494420 
 13076      436F6E74 
 13076      726F6C6C 
 13077 1019 000000   		.align	2
 13078              	.LC164:
 13079 101c 53746172 		.ascii	"Startup activation: YES\015\012\000"
 13079      74757020 
 13079      61637469 
 13079      76617469 
 13079      6F6E3A20 
 13080 1036 0000     		.align	2
 13081              	.LC165:
 13082 1038 53746172 		.ascii	"Startup activation: NO\015\012\000"
 13082      74757020 
 13082      61637469 
 13082      76617469 
 13082      6F6E3A20 
 13083 1051 000000   		.align	2
 13084              	.LC166:
 13085 1054 496E7075 		.ascii	"Input mode: USB\015\012\000"
 13085      74206D6F 
 13085      64653A20 
 13085      5553420D 
 13085      0A00
 13086 1066 0000     		.align	2
 13087              	.LC167:
 13088 1068 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 13088      74206D6F 
 13088      64653A20 
 13088      48616E64 
 13088      6C650D0A 
 13089 107d 000000   		.align	2
 13090              	.LC168:
 13091 1080 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 13091      74206D6F 
 13091      64653A20 
 13091      454D4720 
 13091      70726F70 
 13092 109f 00       		.align	2
 13093              	.LC169:
 13094 10a0 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 13094      74206D6F 
 13094      64653A20 
 13094      454D4720 
 13094      696E7465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 294


 13095 10bb 00       		.align	2
 13096              	.LC170:
 13097 10bc 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 13097      74206D6F 
 13097      64653A20 
 13097      454D4720 
 13097      46434653 
 13098 10d3 00       		.align	2
 13099              	.LC171:
 13100 10d4 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 13100      74206D6F 
 13100      64653A20 
 13100      454D4720 
 13100      46434653 
 13101 10ef 00       		.align	2
 13102              	.LC172:
 13103 10f0 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 13103      726F6C20 
 13103      6D6F6465 
 13103      3A20506F 
 13103      73697469 
 13104 1109 000000   		.align	2
 13105              	.LC173:
 13106 110c 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 13106      726F6C20 
 13106      6D6F6465 
 13106      3A205057 
 13106      4D0D0A00 
 13107              		.align	2
 13108              	.LC174:
 13109 1120 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 13109      726F6C20 
 13109      6D6F6465 
 13109      3A204375 
 13109      7272656E 
 13110              		.align	2
 13111              	.LC175:
 13112 1138 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 13112      726F6C20 
 13112      6D6F6465 
 13112      3A20506F 
 13112      73697469 
 13113 115d 000000   		.align	2
 13114              	.LC176:
 13115 1160 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 13115      6C757465 
 13115      20656E63 
 13115      6F646572 
 13115      20706F73 
 13116 1181 000000   		.align	2
 13117              	.LC177:
 13118 1184 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 13118      6C757465 
 13118      20656E63 
 13118      6F646572 
 13118      20706F73 
 13119              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 295


 13120              	.LC178:
 13121 11a4 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 13121      722D4861 
 13121      6E646C65 
 13121      20526174 
 13121      696F3A20 
 13122 11bd 000000   		.align	2
 13123              	.LC179:
 13124 11c0 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 13124      64657220 
 13124      696E6469 
 13124      63657320 
 13124      75736564 
 13125 11e9 000000   		.align	2
 13126              	.LC180:
 13127 11ec 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 13127      74204765 
 13127      61723A20 
 13127      25642074 
 13127      65657468 
 13128 1203 00       		.align	2
 13129              	.LC181:
 13130 1204 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 13130      6E642047 
 13130      6561723A 
 13130      20256420 
 13130      74656574 
 13131              		.align	2
 13132              	.LC182:
 13133 121c 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 13133      20696E76 
 13133      61726961 
 13133      6E743A20 
 13133      25640D0A 
 13134 1231 000000   		.align	2
 13135              	.LC183:
 13136 1234 53656E73 		.ascii	"Sensor resolution: \000"
 13136      6F722072 
 13136      65736F6C 
 13136      7574696F 
 13136      6E3A2000 
 13137              		.align	2
 13138              	.LC184:
 13139 1248 4D656173 		.ascii	"Measurement Offset: \000"
 13139      7572656D 
 13139      656E7420 
 13139      4F666673 
 13139      65743A20 
 13140 125d 000000   		.align	2
 13141              	.LC185:
 13142 1260 256C6400 		.ascii	"%ld\000"
 13143              		.align	2
 13144              	.LC186:
 13145 1264 4D656173 		.ascii	"Measurement Multiplier: \000"
 13145      7572656D 
 13145      656E7420 
 13145      4D756C74 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 296


 13145      69706C69 
 13146              		.global	__aeabi_f2d
 13147 127d 000000   		.align	2
 13148              	.LC187:
 13149 1280 256600   		.ascii	"%f\000"
 13150 1283 00       		.align	2
 13151              	.LC188:
 13152 1284 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 13152      656E7420 
 13152      6C6F6F6B 
 13152      75702074 
 13152      61626C65 
 13153 12b2 00       		.ascii	"\000"
 13154 12b3 00       		.align	2
 13155              	.LC189:
 13156 12b4 506F7369 		.ascii	"Position limit active: %d\000"
 13156      74696F6E 
 13156      206C696D 
 13156      69742061 
 13156      63746976 
 13157 12ce 0000     		.align	2
 13158              	.LC190:
 13159 12d0 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 13159      74696F6E 
 13159      206C696D 
 13159      6974206D 
 13159      6F746F72 
 13160 12f3 00       		.align	2
 13161              	.LC191:
 13162 12f4 73757020 		.ascii	"sup -> %ld\015\012\000"
 13162      2D3E2025 
 13162      6C640D0A 
 13162      00
 13163 1301 000000   		.align	2
 13164              	.LC192:
 13165 1304 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 13165      73746570 
 13165      20706F73 
 13165      20616E64 
 13165      206E6567 
 13166              		.align	2
 13167              	.LC193:
 13168 1320 43757272 		.ascii	"Current limit: %d\015\012\000"
 13168      656E7420 
 13168      6C696D69 
 13168      743A2025 
 13168      640D0A00 
 13169              		.align	2
 13170              	.LC194:
 13171 1334 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 13171      7220626F 
 13171      61726420 
 13171      6173736F 
 13171      63696174 
 13172 135e 0000     		.align	2
 13173              	.LC195:
 13174 1360 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 297


 13174      65722074 
 13174      7970653A 
 13174      204D4333 
 13174      33383837 
 13175 1382 0000     		.align	2
 13176              	.LC196:
 13177 1384 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 13177      65722074 
 13177      7970653A 
 13177      20564E48 
 13177      35303139 
 13178              		.align	2
 13179              	.LC197:
 13180 13a8 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 13180      72617465 
 13180      206C696D 
 13180      69746572 
 13180      2076616C 
 13181 13c5 000000   		.align	2
 13182              	.LC198:
 13183 13c8 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 13183      72657665 
 13183      72736962 
 13183      6C65206D 
 13183      6F746F72 
 13184              		.align	2
 13185              	.LC199:
 13186 13e4 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 13186      72657665 
 13186      72736962 
 13186      6C65206D 
 13186      6F746F72 
 13187 13ff 00       		.align	2
 13188              	.LC200:
 13189 1400 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 13189      434F4E46 
 13189      49475552 
 13189      4154494F 
 13189      4E0D0A00 
 13190              		.align	2
 13191              	.LC201:
 13192 1414 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 13192      74687265 
 13192      73686F6C 
 13192      6473205B 
 13192      30202D20 
 13193 1436 0000     		.align	2
 13194              	.LC202:
 13195 1438 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 13195      6D617820 
 13195      76616C75 
 13195      6573205B 
 13195      30202D20 
 13196              		.align	2
 13197              	.LC203:
 13198 145c 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 13198      696E7665 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 298


 13198      7273696F 
 13198      6E3A2059 
 13198      45530D0A 
 13199 1471 000000   		.align	2
 13200              	.LC204:
 13201 1474 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 13201      696E7665 
 13201      7273696F 
 13201      6E3A204E 
 13201      4F0D0A00 
 13202              		.align	2
 13203              	.LC205:
 13204 1488 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 13204      62726174 
 13204      696F6E20 
 13204      656E6162 
 13204      6C65643A 
 13205 14a3 00       		.align	2
 13206              	.LC206:
 13207 14a4 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 13207      62726174 
 13207      696F6E20 
 13207      656E6162 
 13207      6C65643A 
 13208 14be 0000     		.align	2
 13209              	.LC207:
 13210 14c0 454D4720 		.ascii	"EMG max speed: %d\000"
 13210      6D617820 
 13210      73706565 
 13210      643A2025 
 13210      6400
 13211 14d2 0000     		.align	2
 13212              	.LC208:
 13213 14d4 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 13213      74696F6E 
 13213      616C2041 
 13213      44432073 
 13213      656E736F 
 13214              		.align	2
 13215              	.LC209:
 13216 14f4 41444320 		.ascii	"ADC %d -> %d\000"
 13216      2564202D 
 13216      3E202564 
 13216      00
 13217 1501 000000   		.align	2
 13218              	.LC210:
 13219 1504 454D4720 		.ascii	"EMG input %d -> %d\000"
 13219      696E7075 
 13219      74202564 
 13219      202D3E20 
 13219      256400
 13220 1517 00       		.align	2
 13221              	.LC211:
 13222 1518 52657374 		.ascii	"Rest time delay (ms): %d\000"
 13222      2074696D 
 13222      65206465 
 13222      6C617920 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 299


 13222      286D7329 
 13223 1531 000000   		.align	2
 13224              	.LC212:
 13225 1534 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 13225      2076656C 
 13225      6F636974 
 13225      7920636C 
 13225      6F737572 
 13226 155a 0000     		.align	2
 13227              	.LC213:
 13228 155c 52657374 		.ascii	"Rest position: %d\000"
 13228      20706F73 
 13228      6974696F 
 13228      6E3A2025 
 13228      6400
 13229 156e 0000     		.align	2
 13230              	.LC214:
 13231 1570 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 13231      436F6E6E 
 13231      65637465 
 13231      643A2025 
 13231      640D0A00 
 13232              		.align	2
 13233              	.LC215:
 13234 1584 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 13234      20434F4E 
 13234      46494755 
 13234      52415449 
 13234      4F4E0D0A 
 13235 1599 000000   		.align	2
 13236              	.LC216:
 13237 159c 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 13237      2564200D 
 13237      0A094944 
 13237      3A202564 
 13237      0D0A00
 13238 15af 00       		.align	2
 13239              	.LC217:
 13240 15b0 09416363 		.ascii	"\011Accelerometers: \000"
 13240      656C6572 
 13240      6F6D6574 
 13240      6572733A 
 13240      2000
 13241 15c2 0000     		.align	2
 13242              	.LC218:
 13243 15c4 09477972 		.ascii	"\011Gyroscopes: \000"
 13243      6F73636F 
 13243      7065733A 
 13243      2000
 13244 15d2 0000     		.align	2
 13245              	.LC219:
 13246 15d4 094D6167 		.ascii	"\011Magnetometers: \000"
 13246      6E65746F 
 13246      6D657465 
 13246      72733A20 
 13246      00
 13247 15e5 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 300


 13248              	.LC220:
 13249 15e8 09517561 		.ascii	"\011Quaternion: \000"
 13249      7465726E 
 13249      696F6E3A 
 13249      2000
 13250 15f6 0000     		.align	2
 13251              	.LC221:
 13252 15f8 0954656D 		.ascii	"\011Temperature: \000"
 13252      70657261 
 13252      74757265 
 13252      3A2000
 13253 1607 00       		.align	2
 13254              	.LC222:
 13255 1608 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 13255      44455220 
 13255      434F4E46 
 13255      49475552 
 13255      4154494F 
 13256              		.align	2
 13257              	.LC223:
 13258 1620 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 13258      64657220 
 13258      436F6E6E 
 13258      65637465 
 13258      64204C69 
 13259 163e 0000     		.align	2
 13260              	.LC224:
 13261 1640 4C454654 		.ascii	"LEFT\000"
 13261      00
 13262 1645 000000   		.align	2
 13263              	.LC225:
 13264 1648 52494748 		.ascii	"RIGHT\000"
 13264      5400
 13265 164e 0000     		.align	2
 13266              	.LC226:
 13267 1650 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 13267      2048414E 
 13267      44206D61 
 13267      696E2065 
 13267      6E636F64 
 13268 166d 000000   		.align	2
 13269              	.LC227:
 13270 1670 52617720 		.ascii	"Raw value [status]:\015\012\000"
 13270      76616C75 
 13270      65205B73 
 13270      74617475 
 13270      735D3A0D 
 13271 1686 0000     		.align	2
 13272              	.LC228:
 13273 1688 4F4B00   		.ascii	"OK\000"
 13274 168b 00       		.align	2
 13275              	.LC229:
 13276 168c 5800     		.ascii	"X\000"
 13277 168e 0000     		.align	2
 13278              	.LC230:
 13279 1690 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 13279      25735D0D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 301


 13279      0A00
 13280 169a 0000     		.align	2
 13281              	.LC231:
 13282 169c 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 13282      20465720 
 13282      6379636C 
 13282      65207469 
 13282      6D653A20 
 13283              		.align	2
 13284              	.LC232:
 13285 16b8 0D0A0000 		.ascii	"\015\012\000\000"
 13286              		.section	.text.prepare_generic_info,"ax",%progbits
 13287              		.align	2
 13288              		.global	prepare_generic_info
 13289              		.thumb
 13290              		.thumb_func
 13291              		.type	prepare_generic_info, %function
 13292              	prepare_generic_info:
 13293              	.LFB72:
1745:..\src/command_processing.c **** 
1746:..\src/command_processing.c **** //==============================================================================
1747:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1748:..\src/command_processing.c **** //==============================================================================
1749:..\src/command_processing.c **** 
1750:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1751:..\src/command_processing.c **** {
 13294              		.loc 1 1751 0
 13295              		.cfi_startproc
 13296              		@ args = 0, pretend = 0, frame = 152
 13297              		@ frame_needed = 1, uses_anonymous_args = 0
 13298 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 13299              		.cfi_def_cfa_offset 36
 13300              		.cfi_offset 4, -36
 13301              		.cfi_offset 5, -32
 13302              		.cfi_offset 6, -28
 13303              		.cfi_offset 7, -24
 13304              		.cfi_offset 8, -20
 13305              		.cfi_offset 9, -16
 13306              		.cfi_offset 10, -12
 13307              		.cfi_offset 11, -8
 13308              		.cfi_offset 14, -4
 13309 0004 B1B0     		sub	sp, sp, #196
 13310              		.cfi_def_cfa_offset 232
 13311 0006 0AAF     		add	r7, sp, #40
 13312              		.cfi_def_cfa 7, 192
 13313 0008 7861     		str	r0, [r7, #20]
1752:..\src/command_processing.c ****     int i;
1753:..\src/command_processing.c **** 
1754:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 13314              		.loc 1 1754 0
 13315 000a C34B     		ldr	r3, .L632
 13316 000c C7F88830 		str	r3, [r7, #136]
1755:..\src/command_processing.c ****     
1756:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 13317              		.loc 1 1756 0
 13318 0010 C14B     		ldr	r3, .L632
 13319 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 302


 13320 0016 FA2B     		cmp	r3, #250
 13321 0018 01F0E486 		beq	.L630
 13322              	.LBB16:
1757:..\src/command_processing.c ****         char str[100];
1758:..\src/command_processing.c ****         strcpy(info_string, "");
 13323              		.loc 1 1758 0
 13324 001c 7B69     		ldr	r3, [r7, #20]
 13325 001e 0022     		movs	r2, #0
 13326 0020 1A70     		strb	r2, [r3]
1759:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 13327              		.loc 1 1759 0
 13328 0022 7869     		ldr	r0, [r7, #20]
 13329 0024 FFF7FEFF 		bl	strlen
 13330 0028 0346     		mov	r3, r0
 13331 002a 1A46     		mov	r2, r3
 13332 002c 7B69     		ldr	r3, [r7, #20]
 13333 002e 1344     		add	r3, r3, r2
 13334 0030 BA4A     		ldr	r2, .L632+4
 13335 0032 1188     		ldrh	r1, [r2]	@ unaligned
 13336 0034 9278     		ldrb	r2, [r2, #2]
 13337 0036 1980     		strh	r1, [r3]	@ unaligned
 13338 0038 9A70     		strb	r2, [r3, #2]
1760:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 13339              		.loc 1 1760 0
 13340 003a 7869     		ldr	r0, [r7, #20]
 13341 003c FFF7FEFF 		bl	strlen
 13342 0040 0346     		mov	r3, r0
 13343 0042 1A46     		mov	r2, r3
 13344 0044 7B69     		ldr	r3, [r7, #20]
 13345 0046 1344     		add	r3, r3, r2
 13346 0048 B54A     		ldr	r2, .L632+8
 13347 004a 1D46     		mov	r5, r3
 13348 004c 1446     		mov	r4, r2
 13349 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13350 0050 2860     		str	r0, [r5]	@ unaligned
 13351 0052 6960     		str	r1, [r5, #4]	@ unaligned
 13352 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 13353 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 13354 0058 2388     		ldrh	r3, [r4]	@ unaligned
 13355 005a A278     		ldrb	r2, [r4, #2]
 13356 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 13357 005e 1346     		mov	r3, r2
 13358 0060 AB74     		strb	r3, [r5, #18]
1761:..\src/command_processing.c ****         strcat(info_string, VERSION);
 13359              		.loc 1 1761 0
 13360 0062 7869     		ldr	r0, [r7, #20]
 13361 0064 FFF7FEFF 		bl	strlen
 13362 0068 0346     		mov	r3, r0
 13363 006a 1A46     		mov	r2, r3
 13364 006c 7B69     		ldr	r3, [r7, #20]
 13365 006e 1344     		add	r3, r3, r2
 13366 0070 AC4A     		ldr	r2, .L632+12
 13367 0072 1C46     		mov	r4, r3
 13368 0074 1546     		mov	r5, r2
 13369 0076 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13370 0078 2060     		str	r0, [r4]	@ unaligned
 13371 007a 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 303


 13372 007c A260     		str	r2, [r4, #8]	@ unaligned
 13373 007e E360     		str	r3, [r4, #12]	@ unaligned
 13374 0080 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13375 0082 2061     		str	r0, [r4, #16]	@ unaligned
 13376 0084 6161     		str	r1, [r4, #20]	@ unaligned
 13377 0086 A261     		str	r2, [r4, #24]	@ unaligned
 13378 0088 E361     		str	r3, [r4, #28]	@ unaligned
1762:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 13379              		.loc 1 1762 0
 13380 008a 7869     		ldr	r0, [r7, #20]
 13381 008c FFF7FEFF 		bl	strlen
 13382 0090 0346     		mov	r3, r0
 13383 0092 1A46     		mov	r2, r3
 13384 0094 7B69     		ldr	r3, [r7, #20]
 13385 0096 1344     		add	r3, r3, r2
 13386 0098 A34A     		ldr	r2, .L632+16
 13387 009a 1068     		ldr	r0, [r2]	@ unaligned
 13388 009c 1860     		str	r0, [r3]	@ unaligned
 13389 009e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13390 00a0 9A80     		strh	r2, [r3, #4]	@ unaligned
1763:..\src/command_processing.c **** 
1764:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 13391              		.loc 1 1764 0
 13392 00a2 7869     		ldr	r0, [r7, #20]
 13393 00a4 FFF7FEFF 		bl	strlen
 13394 00a8 0346     		mov	r3, r0
 13395 00aa 1A46     		mov	r2, r3
 13396 00ac 7B69     		ldr	r3, [r7, #20]
 13397 00ae 1344     		add	r3, r3, r2
 13398 00b0 9E4A     		ldr	r2, .L632+20
 13399 00b2 1C46     		mov	r4, r3
 13400 00b4 1346     		mov	r3, r2
 13401 00b6 07CB     		ldmia	r3!, {r0, r1, r2}
 13402 00b8 2060     		str	r0, [r4]	@ unaligned
 13403 00ba 6160     		str	r1, [r4, #4]	@ unaligned
 13404 00bc A260     		str	r2, [r4, #8]	@ unaligned
 13405 00be 1B88     		ldrh	r3, [r3]	@ unaligned
 13406 00c0 A381     		strh	r3, [r4, #12]	@ unaligned
1765:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 13407              		.loc 1 1765 0
 13408 00c2 D7F88830 		ldr	r3, [r7, #136]
 13409 00c6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13410 00ca 1A46     		mov	r2, r3
 13411 00cc 07F11803 		add	r3, r7, #24
 13412 00d0 9749     		ldr	r1, .L632+24
 13413 00d2 1846     		mov	r0, r3
 13414 00d4 FFF7FEFF 		bl	sprintf
1766:..\src/command_processing.c ****         strcat(info_string, str);
 13415              		.loc 1 1766 0
 13416 00d8 07F11803 		add	r3, r7, #24
 13417 00dc 1946     		mov	r1, r3
 13418 00de 7869     		ldr	r0, [r7, #20]
 13419 00e0 FFF7FEFF 		bl	strcat
1767:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 13420              		.loc 1 1767 0
 13421 00e4 D7F88830 		ldr	r3, [r7, #136]
 13422 00e8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 304


 13423 00ec 002B     		cmp	r3, #0
 13424 00ee 02D0     		beq	.L525
 13425 00f0 012B     		cmp	r3, #1
 13426 00f2 17D0     		beq	.L526
1768:..\src/command_processing.c ****             case SOFTHAND_PRO:
1769:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
1770:..\src/command_processing.c ****                 break;
1771:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1772:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
1773:..\src/command_processing.c ****                 break;
1774:..\src/command_processing.c ****             default:
1775:..\src/command_processing.c ****                 break;
 13427              		.loc 1 1775 0
 13428 00f4 2EE0     		b	.L527
 13429              	.L525:
1769:..\src/command_processing.c ****                 break;
 13430              		.loc 1 1769 0
 13431 00f6 7869     		ldr	r0, [r7, #20]
 13432 00f8 FFF7FEFF 		bl	strlen
 13433 00fc 0346     		mov	r3, r0
 13434 00fe 1A46     		mov	r2, r3
 13435 0100 7B69     		ldr	r3, [r7, #20]
 13436 0102 1344     		add	r3, r3, r2
 13437 0104 8B4A     		ldr	r2, .L632+28
 13438 0106 1C46     		mov	r4, r3
 13439 0108 1546     		mov	r5, r2
 13440 010a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13441 010c 2060     		str	r0, [r4]	@ unaligned
 13442 010e 6160     		str	r1, [r4, #4]	@ unaligned
 13443 0110 A260     		str	r2, [r4, #8]	@ unaligned
 13444 0112 E360     		str	r3, [r4, #12]	@ unaligned
 13445 0114 2868     		ldr	r0, [r5]	@ unaligned
 13446 0116 2061     		str	r0, [r4, #16]	@ unaligned
 13447 0118 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 13448 011a AA79     		ldrb	r2, [r5, #6]
 13449 011c A382     		strh	r3, [r4, #20]	@ unaligned
 13450 011e 1346     		mov	r3, r2
 13451 0120 A375     		strb	r3, [r4, #22]
1770:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
 13452              		.loc 1 1770 0
 13453 0122 17E0     		b	.L527
 13454              	.L526:
1772:..\src/command_processing.c ****                 break;
 13455              		.loc 1 1772 0
 13456 0124 7869     		ldr	r0, [r7, #20]
 13457 0126 FFF7FEFF 		bl	strlen
 13458 012a 0346     		mov	r3, r0
 13459 012c 1A46     		mov	r2, r3
 13460 012e 7B69     		ldr	r3, [r7, #20]
 13461 0130 1344     		add	r3, r3, r2
 13462 0132 814A     		ldr	r2, .L632+32
 13463 0134 1D46     		mov	r5, r3
 13464 0136 1446     		mov	r4, r2
 13465 0138 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13466 013a 2860     		str	r0, [r5]	@ unaligned
 13467 013c 6960     		str	r1, [r5, #4]	@ unaligned
 13468 013e AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 305


 13469 0140 EB60     		str	r3, [r5, #12]	@ unaligned
 13470 0142 03CC     		ldmia	r4!, {r0, r1}
 13471 0144 2861     		str	r0, [r5, #16]	@ unaligned
 13472 0146 6961     		str	r1, [r5, #20]	@ unaligned
 13473 0148 2388     		ldrh	r3, [r4]	@ unaligned
 13474 014a A278     		ldrb	r2, [r4, #2]
 13475 014c 2B83     		strh	r3, [r5, #24]	@ unaligned
 13476 014e 1346     		mov	r3, r2
 13477 0150 AB76     		strb	r3, [r5, #26]
1773:..\src/command_processing.c ****             default:
 13478              		.loc 1 1773 0
 13479 0152 00BF     		nop
 13480              	.L527:
1776:..\src/command_processing.c ****         }
1777:..\src/command_processing.c ****         
1778:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 13481              		.loc 1 1778 0
 13482 0154 D7F88830 		ldr	r3, [r7, #136]
 13483 0158 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 13484 015c 002B     		cmp	r3, #0
 13485 015e 02D0     		beq	.L529
 13486 0160 012B     		cmp	r3, #1
 13487 0162 15D0     		beq	.L530
 13488 0164 26E0     		b	.L528
 13489              	.L529:
1779:..\src/command_processing.c ****             case RIGHT_HAND:
1780:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 13490              		.loc 1 1780 0
 13491 0166 7869     		ldr	r0, [r7, #20]
 13492 0168 FFF7FEFF 		bl	strlen
 13493 016c 0346     		mov	r3, r0
 13494 016e 1A46     		mov	r2, r3
 13495 0170 7B69     		ldr	r3, [r7, #20]
 13496 0172 1344     		add	r3, r3, r2
 13497 0174 714A     		ldr	r2, .L632+36
 13498 0176 1D46     		mov	r5, r3
 13499 0178 1446     		mov	r4, r2
 13500 017a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13501 017c 2860     		str	r0, [r5]	@ unaligned
 13502 017e 6960     		str	r1, [r5, #4]	@ unaligned
 13503 0180 AA60     		str	r2, [r5, #8]	@ unaligned
 13504 0182 EB60     		str	r3, [r5, #12]	@ unaligned
 13505 0184 2388     		ldrh	r3, [r4]	@ unaligned
 13506 0186 A278     		ldrb	r2, [r4, #2]
 13507 0188 2B82     		strh	r3, [r5, #16]	@ unaligned
 13508 018a 1346     		mov	r3, r2
 13509 018c AB74     		strb	r3, [r5, #18]
1781:..\src/command_processing.c ****                 break;
 13510              		.loc 1 1781 0
 13511 018e 11E0     		b	.L528
 13512              	.L530:
1782:..\src/command_processing.c ****             case LEFT_HAND:
1783:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 13513              		.loc 1 1783 0
 13514 0190 7869     		ldr	r0, [r7, #20]
 13515 0192 FFF7FEFF 		bl	strlen
 13516 0196 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 306


 13517 0198 1A46     		mov	r2, r3
 13518 019a 7B69     		ldr	r3, [r7, #20]
 13519 019c 1344     		add	r3, r3, r2
 13520 019e 684A     		ldr	r2, .L632+40
 13521 01a0 1D46     		mov	r5, r3
 13522 01a2 1446     		mov	r4, r2
 13523 01a4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13524 01a6 2860     		str	r0, [r5]	@ unaligned
 13525 01a8 6960     		str	r1, [r5, #4]	@ unaligned
 13526 01aa AA60     		str	r2, [r5, #8]	@ unaligned
 13527 01ac EB60     		str	r3, [r5, #12]	@ unaligned
 13528 01ae 2388     		ldrh	r3, [r4]	@ unaligned
 13529 01b0 2B82     		strh	r3, [r5, #16]	@ unaligned
1784:..\src/command_processing.c ****                 break;
 13530              		.loc 1 1784 0
 13531 01b2 00BF     		nop
 13532              	.L528:
1785:..\src/command_processing.c ****         }
1786:..\src/command_processing.c **** 
1787:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 13533              		.loc 1 1787 0
 13534 01b4 D7F88830 		ldr	r3, [r7, #136]
 13535 01b8 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 13536 01bc 012B     		cmp	r3, #1
 13537 01be 02D0     		beq	.L532
 13538 01c0 022B     		cmp	r3, #2
 13539 01c2 11D0     		beq	.L533
 13540 01c4 21E0     		b	.L629
 13541              	.L532:
1788:..\src/command_processing.c ****             case MARIA:
1789:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 13542              		.loc 1 1789 0
 13543 01c6 7869     		ldr	r0, [r7, #20]
 13544 01c8 FFF7FEFF 		bl	strlen
 13545 01cc 0346     		mov	r3, r0
 13546 01ce 1A46     		mov	r2, r3
 13547 01d0 7B69     		ldr	r3, [r7, #20]
 13548 01d2 1344     		add	r3, r3, r2
 13549 01d4 5B4A     		ldr	r2, .L632+44
 13550 01d6 1C46     		mov	r4, r3
 13551 01d8 1346     		mov	r3, r2
 13552 01da 07CB     		ldmia	r3!, {r0, r1, r2}
 13553 01dc 2060     		str	r0, [r4]	@ unaligned
 13554 01de 6160     		str	r1, [r4, #4]	@ unaligned
 13555 01e0 A260     		str	r2, [r4, #8]	@ unaligned
 13556 01e2 1B88     		ldrh	r3, [r3]	@ unaligned
 13557 01e4 A381     		strh	r3, [r4, #12]	@ unaligned
1790:..\src/command_processing.c ****                 break;
 13558              		.loc 1 1790 0
 13559 01e6 24E0     		b	.L534
 13560              	.L533:
1791:..\src/command_processing.c ****             case ROZA:
1792:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 13561              		.loc 1 1792 0
 13562 01e8 7869     		ldr	r0, [r7, #20]
 13563 01ea FFF7FEFF 		bl	strlen
 13564 01ee 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 307


 13565 01f0 1A46     		mov	r2, r3
 13566 01f2 7B69     		ldr	r3, [r7, #20]
 13567 01f4 1344     		add	r3, r3, r2
 13568 01f6 544A     		ldr	r2, .L632+48
 13569 01f8 1C46     		mov	r4, r3
 13570 01fa 1346     		mov	r3, r2
 13571 01fc 07CB     		ldmia	r3!, {r0, r1, r2}
 13572 01fe 2060     		str	r0, [r4]	@ unaligned
 13573 0200 6160     		str	r1, [r4, #4]	@ unaligned
 13574 0202 A260     		str	r2, [r4, #8]	@ unaligned
 13575 0204 1B78     		ldrb	r3, [r3]
 13576 0206 2373     		strb	r3, [r4, #12]
1793:..\src/command_processing.c ****                 break;
 13577              		.loc 1 1793 0
 13578 0208 13E0     		b	.L534
 13579              	.L629:
1794:..\src/command_processing.c ****             default:
1795:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 13580              		.loc 1 1795 0
 13581 020a 7869     		ldr	r0, [r7, #20]
 13582 020c FFF7FEFF 		bl	strlen
 13583 0210 0346     		mov	r3, r0
 13584 0212 1A46     		mov	r2, r3
 13585 0214 7B69     		ldr	r3, [r7, #20]
 13586 0216 1344     		add	r3, r3, r2
 13587 0218 4C4A     		ldr	r2, .L632+52
 13588 021a 1D46     		mov	r5, r3
 13589 021c 1446     		mov	r4, r2
 13590 021e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13591 0220 2860     		str	r0, [r5]	@ unaligned
 13592 0222 6960     		str	r1, [r5, #4]	@ unaligned
 13593 0224 AA60     		str	r2, [r5, #8]	@ unaligned
 13594 0226 EB60     		str	r3, [r5, #12]	@ unaligned
 13595 0228 2068     		ldr	r0, [r4]	@ unaligned
 13596 022a 2861     		str	r0, [r5, #16]	@ unaligned
 13597 022c 2379     		ldrb	r3, [r4, #4]
 13598 022e 2B75     		strb	r3, [r5, #20]
1796:..\src/command_processing.c ****                 break;
 13599              		.loc 1 1796 0
 13600 0230 00BF     		nop
 13601              	.L534:
1797:..\src/command_processing.c ****         }
1798:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 13602              		.loc 1 1798 0
 13603 0232 7869     		ldr	r0, [r7, #20]
 13604 0234 FFF7FEFF 		bl	strlen
 13605 0238 0346     		mov	r3, r0
 13606 023a 1A46     		mov	r2, r3
 13607 023c 7B69     		ldr	r3, [r7, #20]
 13608 023e 1344     		add	r3, r3, r2
 13609 0240 364A     		ldr	r2, .L632+4
 13610 0242 1188     		ldrh	r1, [r2]	@ unaligned
 13611 0244 9278     		ldrb	r2, [r2, #2]
 13612 0246 1980     		strh	r1, [r3]	@ unaligned
 13613 0248 9A70     		strb	r2, [r3, #2]
 13614              	.LBB17:
1799:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 308


1800:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 13615              		.loc 1 1800 0
 13616 024a 0023     		movs	r3, #0
 13617 024c 87F89330 		strb	r3, [r7, #147]
 13618 0250 01F03EB9 		b	.L535
 13619              	.L595:
 13620              	.LBB18:
1801:..\src/command_processing.c ****             
1802:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 13621              		.loc 1 1802 0
 13622 0254 97F89330 		ldrb	r3, [r7, #147]
 13623 0258 87F88730 		strb	r3, [r7, #135]
1803:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 13624              		.loc 1 1803 0
 13625 025c 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 13626 0260 1346     		mov	r3, r2
 13627 0262 DB00     		lsls	r3, r3, #3
 13628 0264 9B1A     		subs	r3, r3, r2
 13629 0266 1B01     		lsls	r3, r3, #4
 13630 0268 B033     		adds	r3, r3, #176
 13631 026a D7F88820 		ldr	r2, [r7, #136]
 13632 026e 1344     		add	r3, r3, r2
 13633 0270 C7F88030 		str	r3, [r7, #128]
1804:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 13634              		.loc 1 1804 0
 13635 0274 D7F88030 		ldr	r3, [r7, #128]
 13636 0278 93F86030 		ldrb	r3, [r3, #96]
 13637 027c 87F87F30 		strb	r3, [r7, #127]
1805:..\src/command_processing.c ****                   
1806:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 13638              		.loc 1 1806 0
 13639 0280 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13640 0284 5A1C     		adds	r2, r3, #1
 13641 0286 07F11803 		add	r3, r7, #24
 13642 028a 3149     		ldr	r1, .L632+56
 13643 028c 1846     		mov	r0, r3
 13644 028e FFF7FEFF 		bl	sprintf
1807:..\src/command_processing.c ****             strcat(info_string, str);
 13645              		.loc 1 1807 0
 13646 0292 07F11803 		add	r3, r7, #24
 13647 0296 1946     		mov	r1, r3
 13648 0298 7869     		ldr	r0, [r7, #20]
 13649 029a FFF7FEFF 		bl	strcat
1808:..\src/command_processing.c ****                         
1809:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 13650              		.loc 1 1809 0
 13651 029e 7869     		ldr	r0, [r7, #20]
 13652 02a0 FFF7FEFF 		bl	strlen
 13653 02a4 0346     		mov	r3, r0
 13654 02a6 1A46     		mov	r2, r3
 13655 02a8 7B69     		ldr	r3, [r7, #20]
 13656 02aa 1344     		add	r3, r3, r2
 13657 02ac 294A     		ldr	r2, .L632+60
 13658 02ae 1C46     		mov	r4, r3
 13659 02b0 1546     		mov	r5, r2
 13660 02b2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13661 02b4 2060     		str	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 309


 13662 02b6 6160     		str	r1, [r4, #4]	@ unaligned
 13663 02b8 A260     		str	r2, [r4, #8]	@ unaligned
 13664 02ba E360     		str	r3, [r4, #12]	@ unaligned
1810:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 13665              		.loc 1 1810 0
 13666 02bc D7F88030 		ldr	r3, [r7, #128]
 13667 02c0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13668 02c4 022B     		cmp	r3, #2
 13669 02c6 10D1     		bne	.L536
1811:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 13670              		.loc 1 1811 0
 13671 02c8 7869     		ldr	r0, [r7, #20]
 13672 02ca FFF7FEFF 		bl	strlen
 13673 02ce 0346     		mov	r3, r0
 13674 02d0 1A46     		mov	r2, r3
 13675 02d2 7B69     		ldr	r3, [r7, #20]
 13676 02d4 1344     		add	r3, r3, r2
 13677 02d6 204A     		ldr	r2, .L632+64
 13678 02d8 1C46     		mov	r4, r3
 13679 02da 1346     		mov	r3, r2
 13680 02dc 07CB     		ldmia	r3!, {r0, r1, r2}
 13681 02de 2060     		str	r0, [r4]	@ unaligned
 13682 02e0 6160     		str	r1, [r4, #4]	@ unaligned
 13683 02e2 A260     		str	r2, [r4, #8]	@ unaligned
 13684 02e4 1B88     		ldrh	r3, [r3]	@ unaligned
 13685 02e6 A381     		strh	r3, [r4, #12]	@ unaligned
 13686 02e8 4AE0     		b	.L537
 13687              	.L536:
1812:..\src/command_processing.c ****             else {
1813:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 13688              		.loc 1 1813 0
 13689 02ea D7F88030 		ldr	r3, [r7, #128]
 13690 02ee 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13691 02f2 012B     		cmp	r3, #1
 13692 02f4 34D1     		bne	.L538
1814:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 13693              		.loc 1 1814 0
 13694 02f6 7869     		ldr	r0, [r7, #20]
 13695 02f8 FFF7FEFF 		bl	strlen
 13696 02fc 0346     		mov	r3, r0
 13697 02fe 1A46     		mov	r2, r3
 13698 0300 7B69     		ldr	r3, [r7, #20]
 13699 0302 1344     		add	r3, r3, r2
 13700 0304 1549     		ldr	r1, .L632+68
 13701 0306 1A46     		mov	r2, r3
 13702 0308 0B46     		mov	r3, r1
 13703 030a 03CB     		ldmia	r3!, {r0, r1}
 13704 030c 1060     		str	r0, [r2]	@ unaligned
 13705 030e 5160     		str	r1, [r2, #4]	@ unaligned
 13706 0310 1B78     		ldrb	r3, [r3]
 13707 0312 1372     		strb	r3, [r2, #8]
 13708 0314 34E0     		b	.L537
 13709              	.L633:
 13710 0316 00BF     		.align	2
 13711              	.L632:
 13712 0318 00000000 		.word	c_mem
 13713 031c 840D0000 		.word	.LC125
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 310


 13714 0320 880D0000 		.word	.LC126
 13715 0324 9C0D0000 		.word	.LC127
 13716 0328 BC0D0000 		.word	.LC128
 13717 032c C40D0000 		.word	.LC129
 13718 0330 D40D0000 		.word	.LC130
 13719 0334 E00D0000 		.word	.LC131
 13720 0338 F80D0000 		.word	.LC132
 13721 033c 140E0000 		.word	.LC133
 13722 0340 280E0000 		.word	.LC134
 13723 0344 3C0E0000 		.word	.LC135
 13724 0348 4C0E0000 		.word	.LC136
 13725 034c 5C0E0000 		.word	.LC137
 13726 0350 740E0000 		.word	.LC138
 13727 0354 840E0000 		.word	.LC139
 13728 0358 940E0000 		.word	.LC140
 13729 035c A40E0000 		.word	.LC141
 13730              	.L538:
1815:..\src/command_processing.c ****                 else
1816:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 13731              		.loc 1 1816 0
 13732 0360 7869     		ldr	r0, [r7, #20]
 13733 0362 FFF7FEFF 		bl	strlen
 13734 0366 0346     		mov	r3, r0
 13735 0368 1A46     		mov	r2, r3
 13736 036a 7B69     		ldr	r3, [r7, #20]
 13737 036c 1344     		add	r3, r3, r2
 13738 036e 874A     		ldr	r2, .L634
 13739 0370 1C46     		mov	r4, r3
 13740 0372 1346     		mov	r3, r2
 13741 0374 07CB     		ldmia	r3!, {r0, r1, r2}
 13742 0376 2060     		str	r0, [r4]	@ unaligned
 13743 0378 6160     		str	r1, [r4, #4]	@ unaligned
 13744 037a A260     		str	r2, [r4, #8]	@ unaligned
 13745 037c 1B88     		ldrh	r3, [r3]	@ unaligned
 13746 037e A381     		strh	r3, [r4, #12]	@ unaligned
 13747              	.L537:
1817:..\src/command_processing.c ****             }
1818:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 13748              		.loc 1 1818 0
 13749 0380 D7F88030 		ldr	r3, [r7, #128]
 13750 0384 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13751 0388 022B     		cmp	r3, #2
 13752 038a 13D1     		bne	.L539
1819:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 13753              		.loc 1 1819 0
 13754 038c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13755 0390 7F4A     		ldr	r2, .L634+4
 13756 0392 1B01     		lsls	r3, r3, #4
 13757 0394 1344     		add	r3, r3, r2
 13758 0396 0433     		adds	r3, r3, #4
 13759 0398 1A68     		ldr	r2, [r3]
 13760 039a 07F11803 		add	r3, r7, #24
 13761 039e 7D49     		ldr	r1, .L634+8
 13762 03a0 1846     		mov	r0, r3
 13763 03a2 FFF7FEFF 		bl	sprintf
1820:..\src/command_processing.c ****                 strcat(info_string,str);
 13764              		.loc 1 1820 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 311


 13765 03a6 07F11803 		add	r3, r7, #24
 13766 03aa 1946     		mov	r1, r3
 13767 03ac 7869     		ldr	r0, [r7, #20]
 13768 03ae FFF7FEFF 		bl	strcat
 13769 03b2 39E0     		b	.L540
 13770              	.L539:
1821:..\src/command_processing.c ****             }
1822:..\src/command_processing.c ****             else {
1823:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 13771              		.loc 1 1823 0
 13772 03b4 D7F88030 		ldr	r3, [r7, #128]
 13773 03b8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13774 03bc 012B     		cmp	r3, #1
 13775 03be 13D1     		bne	.L541
1824:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 13776              		.loc 1 1824 0
 13777 03c0 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13778 03c4 724A     		ldr	r2, .L634+4
 13779 03c6 1B01     		lsls	r3, r3, #4
 13780 03c8 1344     		add	r3, r3, r2
 13781 03ca 0833     		adds	r3, r3, #8
 13782 03cc 1A68     		ldr	r2, [r3]
 13783 03ce 07F11803 		add	r3, r7, #24
 13784 03d2 7049     		ldr	r1, .L634+8
 13785 03d4 1846     		mov	r0, r3
 13786 03d6 FFF7FEFF 		bl	sprintf
1825:..\src/command_processing.c ****                     strcat(info_string,str);
 13787              		.loc 1 1825 0
 13788 03da 07F11803 		add	r3, r7, #24
 13789 03de 1946     		mov	r1, r3
 13790 03e0 7869     		ldr	r0, [r7, #20]
 13791 03e2 FFF7FEFF 		bl	strcat
 13792 03e6 1FE0     		b	.L540
 13793              	.L541:
1826:..\src/command_processing.c ****                 }
1827:..\src/command_processing.c ****                 else {
1828:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 13794              		.loc 1 1828 0
 13795 03e8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13796 03ec 684A     		ldr	r2, .L634+4
 13797 03ee 1B01     		lsls	r3, r3, #4
 13798 03f0 1344     		add	r3, r3, r2
 13799 03f2 1968     		ldr	r1, [r3]
 13800 03f4 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 13801 03f8 D7F88800 		ldr	r0, [r7, #136]
 13802 03fc 1346     		mov	r3, r2
 13803 03fe 5B00     		lsls	r3, r3, #1
 13804 0400 1344     		add	r3, r3, r2
 13805 0402 1B01     		lsls	r3, r3, #4
 13806 0404 0344     		add	r3, r3, r0
 13807 0406 03F29513 		addw	r3, r3, #405
 13808 040a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13809 040c 41FA03F2 		asr	r2, r1, r3
 13810 0410 07F11803 		add	r3, r7, #24
 13811 0414 5F49     		ldr	r1, .L634+8
 13812 0416 1846     		mov	r0, r3
 13813 0418 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 312


1829:..\src/command_processing.c ****                     strcat(info_string,str);
 13814              		.loc 1 1829 0
 13815 041c 07F11803 		add	r3, r7, #24
 13816 0420 1946     		mov	r1, r3
 13817 0422 7869     		ldr	r0, [r7, #20]
 13818 0424 FFF7FEFF 		bl	strcat
 13819              	.L540:
1830:..\src/command_processing.c ****                 }
1831:..\src/command_processing.c ****             }
1832:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 13820              		.loc 1 1832 0
 13821 0428 7869     		ldr	r0, [r7, #20]
 13822 042a FFF7FEFF 		bl	strlen
 13823 042e 0346     		mov	r3, r0
 13824 0430 1A46     		mov	r2, r3
 13825 0432 7B69     		ldr	r3, [r7, #20]
 13826 0434 1344     		add	r3, r3, r2
 13827 0436 584A     		ldr	r2, .L634+12
 13828 0438 1188     		ldrh	r1, [r2]	@ unaligned
 13829 043a 9278     		ldrb	r2, [r2, #2]
 13830 043c 1980     		strh	r1, [r3]	@ unaligned
 13831 043e 9A70     		strb	r2, [r3, #2]
1833:..\src/command_processing.c **** 
1834:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 13832              		.loc 1 1834 0
 13833 0440 07F11803 		add	r3, r7, #24
 13834 0444 554A     		ldr	r2, .L634+16
 13835 0446 1C46     		mov	r4, r3
 13836 0448 1346     		mov	r3, r2
 13837 044a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 13838 044c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1835:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 13839              		.loc 1 1835 0
 13840 0450 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13841 0454 524A     		ldr	r2, .L634+20
 13842 0456 1B01     		lsls	r3, r3, #4
 13843 0458 1344     		add	r3, r3, r2
 13844 045a 0C33     		adds	r3, r3, #12
 13845 045c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13846 045e 03F00103 		and	r3, r3, #1
 13847 0462 002B     		cmp	r3, #0
 13848 0464 0FD0     		beq	.L542
1836:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 13849              		.loc 1 1836 0
 13850 0466 07F11803 		add	r3, r7, #24
 13851 046a 1846     		mov	r0, r3
 13852 046c FFF7FEFF 		bl	strlen
 13853 0470 0346     		mov	r3, r0
 13854 0472 1A46     		mov	r2, r3
 13855 0474 07F11803 		add	r3, r7, #24
 13856 0478 1344     		add	r3, r3, r2
 13857 047a 4A4A     		ldr	r2, .L634+24
 13858 047c 1068     		ldr	r0, [r2]	@ unaligned
 13859 047e 1860     		str	r0, [r3]	@ unaligned
 13860 0480 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13861 0482 9A80     		strh	r2, [r3, #4]	@ unaligned
 13862 0484 0EE0     		b	.L543
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 313


 13863              	.L542:
1837:..\src/command_processing.c ****             } else {
1838:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 13864              		.loc 1 1838 0
 13865 0486 07F11803 		add	r3, r7, #24
 13866 048a 1846     		mov	r0, r3
 13867 048c FFF7FEFF 		bl	strlen
 13868 0490 0346     		mov	r3, r0
 13869 0492 1A46     		mov	r2, r3
 13870 0494 07F11803 		add	r3, r7, #24
 13871 0498 1344     		add	r3, r3, r2
 13872 049a 434A     		ldr	r2, .L634+28
 13873 049c 1068     		ldr	r0, [r2]	@ unaligned
 13874 049e 1860     		str	r0, [r3]	@ unaligned
 13875 04a0 1279     		ldrb	r2, [r2, #4]
 13876 04a2 1A71     		strb	r2, [r3, #4]
 13877              	.L543:
1839:..\src/command_processing.c ****             }
1840:..\src/command_processing.c ****             strcat(info_string, str);
 13878              		.loc 1 1840 0
 13879 04a4 07F11803 		add	r3, r7, #24
 13880 04a8 1946     		mov	r1, r3
 13881 04aa 7869     		ldr	r0, [r7, #20]
 13882 04ac FFF7FEFF 		bl	strcat
1841:..\src/command_processing.c ****                         
1842:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 13883              		.loc 1 1842 0
 13884 04b0 7869     		ldr	r0, [r7, #20]
 13885 04b2 FFF7FEFF 		bl	strlen
 13886 04b6 0346     		mov	r3, r0
 13887 04b8 1A46     		mov	r2, r3
 13888 04ba 7B69     		ldr	r3, [r7, #20]
 13889 04bc 1344     		add	r3, r3, r2
 13890 04be 3B4A     		ldr	r2, .L634+32
 13891 04c0 1D46     		mov	r5, r3
 13892 04c2 1446     		mov	r4, r2
 13893 04c4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13894 04c6 2860     		str	r0, [r5]	@ unaligned
 13895 04c8 6960     		str	r1, [r5, #4]	@ unaligned
 13896 04ca AA60     		str	r2, [r5, #8]	@ unaligned
 13897 04cc EB60     		str	r3, [r5, #12]	@ unaligned
 13898 04ce 03CC     		ldmia	r4!, {r0, r1}
 13899 04d0 2861     		str	r0, [r5, #16]	@ unaligned
 13900 04d2 6961     		str	r1, [r5, #20]	@ unaligned
 13901 04d4 2388     		ldrh	r3, [r4]	@ unaligned
 13902 04d6 A278     		ldrb	r2, [r4, #2]
 13903 04d8 2B83     		strh	r3, [r5, #24]	@ unaligned
 13904 04da 1346     		mov	r3, r2
 13905 04dc AB76     		strb	r3, [r5, #26]
1843:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 13906              		.loc 1 1843 0
 13907 04de D7F88030 		ldr	r3, [r7, #128]
 13908 04e2 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 13909 04e6 012B     		cmp	r3, #1
 13910 04e8 0CD1     		bne	.L544
1844:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 13911              		.loc 1 1844 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 314


 13912 04ea 7869     		ldr	r0, [r7, #20]
 13913 04ec FFF7FEFF 		bl	strlen
 13914 04f0 0346     		mov	r3, r0
 13915 04f2 1A46     		mov	r2, r3
 13916 04f4 7B69     		ldr	r3, [r7, #20]
 13917 04f6 1344     		add	r3, r3, r2
 13918 04f8 2D4A     		ldr	r2, .L634+36
 13919 04fa 1068     		ldr	r0, [r2]	@ unaligned
 13920 04fc 1860     		str	r0, [r3]	@ unaligned
 13921 04fe 1279     		ldrb	r2, [r2, #4]
 13922 0500 1A71     		strb	r2, [r3, #4]
 13923 0502 09E0     		b	.L545
 13924              	.L544:
1845:..\src/command_processing.c ****             else
1846:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 13925              		.loc 1 1846 0
 13926 0504 7869     		ldr	r0, [r7, #20]
 13927 0506 FFF7FEFF 		bl	strlen
 13928 050a 0346     		mov	r3, r0
 13929 050c 1A46     		mov	r2, r3
 13930 050e 7B69     		ldr	r3, [r7, #20]
 13931 0510 1344     		add	r3, r3, r2
 13932 0512 284A     		ldr	r2, .L634+40
 13933 0514 1068     		ldr	r0, [r2]	@ unaligned
 13934 0516 1860     		str	r0, [r3]	@ unaligned
 13935              	.L545:
1847:..\src/command_processing.c ****             
1848:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 13936              		.loc 1 1848 0
 13937 0518 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13938 051c 264A     		ldr	r2, .L634+44
 13939 051e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13940 0520 1A46     		mov	r2, r3
 13941 0522 07F11803 		add	r3, r7, #24
 13942 0526 2549     		ldr	r1, .L634+48
 13943 0528 1846     		mov	r0, r3
 13944 052a FFF7FEFF 		bl	sprintf
1849:..\src/command_processing.c ****             strcat(info_string, str);
 13945              		.loc 1 1849 0
 13946 052e 07F11803 		add	r3, r7, #24
 13947 0532 1946     		mov	r1, r3
 13948 0534 7869     		ldr	r0, [r7, #20]
 13949 0536 FFF7FEFF 		bl	strcat
1850:..\src/command_processing.c **** 
1851:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 13950              		.loc 1 1851 0
 13951 053a 7869     		ldr	r0, [r7, #20]
 13952 053c FFF7FEFF 		bl	strlen
 13953 0540 0346     		mov	r3, r0
 13954 0542 1A46     		mov	r2, r3
 13955 0544 7B69     		ldr	r3, [r7, #20]
 13956 0546 1344     		add	r3, r3, r2
 13957 0548 1D4A     		ldr	r2, .L634+52
 13958 054a 1D46     		mov	r5, r3
 13959 054c 1446     		mov	r4, r2
 13960 054e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13961 0550 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 315


 13962 0552 6960     		str	r1, [r5, #4]	@ unaligned
 13963 0554 AA60     		str	r2, [r5, #8]	@ unaligned
 13964 0556 EB60     		str	r3, [r5, #12]	@ unaligned
 13965 0558 2068     		ldr	r0, [r4]	@ unaligned
 13966 055a 2861     		str	r0, [r5, #16]	@ unaligned
 13967 055c A388     		ldrh	r3, [r4, #4]	@ unaligned
 13968 055e AB82     		strh	r3, [r5, #20]	@ unaligned
1852:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 13969              		.loc 1 1852 0
 13970 0560 7869     		ldr	r0, [r7, #20]
 13971 0562 FFF7FEFF 		bl	strlen
 13972 0566 0346     		mov	r3, r0
 13973 0568 1A46     		mov	r2, r3
 13974 056a 7B69     		ldr	r3, [r7, #20]
 13975 056c 1344     		add	r3, r3, r2
 13976 056e 154A     		ldr	r2, .L634+56
 13977 0570 1C46     		mov	r4, r3
 13978 0572 1346     		mov	r3, r2
 13979 0574 07CB     		ldmia	r3!, {r0, r1, r2}
 13980 0576 2060     		str	r0, [r4]	@ unaligned
 13981 0578 6160     		str	r1, [r4, #4]	@ unaligned
 13982 057a A260     		str	r2, [r4, #8]	@ unaligned
 13983 057c 1A88     		ldrh	r2, [r3]	@ unaligned
 13984 057e 9B78     		ldrb	r3, [r3, #2]
 13985 0580 A281     		strh	r2, [r4, #12]	@ unaligned
 13986 0582 A373     		strb	r3, [r4, #14]
1853:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 13987              		.loc 1 1853 0
 13988 0584 0023     		movs	r3, #0
 13989 0586 C7F89430 		str	r3, [r7, #148]
 13990 058a 5BE0     		b	.L546
 13991              	.L635:
 13992              		.align	2
 13993              	.L634:
 13994 058c B00E0000 		.word	.LC142
 13995 0590 00000000 		.word	g_refOld
 13996 0594 C00E0000 		.word	.LC143
 13997 0598 840D0000 		.word	.LC125
 13998 059c C40E0000 		.word	.LC144
 13999 05a0 00000000 		.word	g_ref
 14000 05a4 D40E0000 		.word	.LC145
 14001 05a8 DC0E0000 		.word	.LC146
 14002 05ac E40E0000 		.word	.LC147
 14003 05b0 000F0000 		.word	.LC148
 14004 05b4 080F0000 		.word	.LC149
 14005 05b8 00000000 		.word	dev_pwm_limit
 14006 05bc 0C0F0000 		.word	.LC150
 14007 05c0 1C0F0000 		.word	.LC151
 14008 05c4 340F0000 		.word	.LC152
 14009              	.L548:
1854:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14010              		.loc 1 1854 0
 14011 05c8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14012 05cc 9249     		ldr	r1, .L636
 14013 05ce 1346     		mov	r3, r2
 14014 05d0 5B00     		lsls	r3, r3, #1
 14015 05d2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 316


 14016 05d4 9B00     		lsls	r3, r3, #2
 14017 05d6 D7F89420 		ldr	r2, [r7, #148]
 14018 05da 1344     		add	r3, r3, r2
 14019 05dc 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14020 05e0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14021 05e4 D7F88800 		ldr	r0, [r7, #136]
 14022 05e8 1346     		mov	r3, r2
 14023 05ea 5B00     		lsls	r3, r3, #1
 14024 05ec 1344     		add	r3, r3, r2
 14025 05ee 1B01     		lsls	r3, r3, #4
 14026 05f0 C218     		adds	r2, r0, r3
 14027 05f2 D7F89430 		ldr	r3, [r7, #148]
 14028 05f6 1344     		add	r3, r3, r2
 14029 05f8 03F29513 		addw	r3, r3, #405
 14030 05fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14031 05fe 41FA03F2 		asr	r2, r1, r3
 14032 0602 07F11803 		add	r3, r7, #24
 14033 0606 8549     		ldr	r1, .L636+4
 14034 0608 1846     		mov	r0, r3
 14035 060a FFF7FEFF 		bl	sprintf
1855:..\src/command_processing.c ****                 strcat(info_string, str);
 14036              		.loc 1 1855 0
 14037 060e 07F11803 		add	r3, r7, #24
 14038 0612 1946     		mov	r1, r3
 14039 0614 7869     		ldr	r0, [r7, #20]
 14040 0616 FFF7FEFF 		bl	strcat
1856:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14041              		.loc 1 1856 0
 14042 061a D7F89430 		ldr	r3, [r7, #148]
 14043 061e 022B     		cmp	r3, #2
 14044 0620 0BD0     		beq	.L547
1857:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14045              		.loc 1 1857 0
 14046 0622 7869     		ldr	r0, [r7, #20]
 14047 0624 FFF7FEFF 		bl	strlen
 14048 0628 0346     		mov	r3, r0
 14049 062a 1A46     		mov	r2, r3
 14050 062c 7B69     		ldr	r3, [r7, #20]
 14051 062e 1344     		add	r3, r3, r2
 14052 0630 7B4A     		ldr	r2, .L636+8
 14053 0632 1188     		ldrh	r1, [r2]	@ unaligned
 14054 0634 9278     		ldrb	r2, [r2, #2]
 14055 0636 1980     		strh	r1, [r3]	@ unaligned
 14056 0638 9A70     		strb	r2, [r3, #2]
 14057              	.L547:
1853:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14058              		.loc 1 1853 0 discriminator 2
 14059 063a D7F89430 		ldr	r3, [r7, #148]
 14060 063e 0133     		adds	r3, r3, #1
 14061 0640 C7F89430 		str	r3, [r7, #148]
 14062              	.L546:
1853:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14063              		.loc 1 1853 0 is_stmt 0 discriminator 1
 14064 0644 D7F89430 		ldr	r3, [r7, #148]
 14065 0648 022B     		cmp	r3, #2
 14066 064a BDDD     		ble	.L548
1858:..\src/command_processing.c ****                 }                
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 317


1859:..\src/command_processing.c ****             }
1860:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14067              		.loc 1 1860 0 is_stmt 1
 14068 064c 7869     		ldr	r0, [r7, #20]
 14069 064e FFF7FEFF 		bl	strlen
 14070 0652 0346     		mov	r3, r0
 14071 0654 1A46     		mov	r2, r3
 14072 0656 7B69     		ldr	r3, [r7, #20]
 14073 0658 1344     		add	r3, r3, r2
 14074 065a 724A     		ldr	r2, .L636+12
 14075 065c 1188     		ldrh	r1, [r2]	@ unaligned
 14076 065e 9278     		ldrb	r2, [r2, #2]
 14077 0660 1980     		strh	r1, [r3]	@ unaligned
 14078 0662 9A70     		strb	r2, [r3, #2]
1861:..\src/command_processing.c **** 
1862:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 14079              		.loc 1 1862 0
 14080 0664 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14081 0668 591C     		adds	r1, r3, #1
 14082 066a 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14083 066e 6E4A     		ldr	r2, .L636+16
 14084 0670 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14085 0674 07F11800 		add	r0, r7, #24
 14086 0678 0A46     		mov	r2, r1
 14087 067a 6C49     		ldr	r1, .L636+20
 14088 067c FFF7FEFF 		bl	sprintf
1863:..\src/command_processing.c ****             strcat(info_string, str);
 14089              		.loc 1 1863 0
 14090 0680 07F11803 		add	r3, r7, #24
 14091 0684 1946     		mov	r1, r3
 14092 0686 7869     		ldr	r0, [r7, #20]
 14093 0688 FFF7FEFF 		bl	strcat
1864:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14094              		.loc 1 1864 0
 14095 068c 7869     		ldr	r0, [r7, #20]
 14096 068e FFF7FEFF 		bl	strlen
 14097 0692 0346     		mov	r3, r0
 14098 0694 1A46     		mov	r2, r3
 14099 0696 7B69     		ldr	r3, [r7, #20]
 14100 0698 1344     		add	r3, r3, r2
 14101 069a 624A     		ldr	r2, .L636+12
 14102 069c 1188     		ldrh	r1, [r2]	@ unaligned
 14103 069e 9278     		ldrb	r2, [r2, #2]
 14104 06a0 1980     		strh	r1, [r3]	@ unaligned
 14105 06a2 9A70     		strb	r2, [r3, #2]
1865:..\src/command_processing.c ****             
1866:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 14106              		.loc 1 1866 0
 14107 06a4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14108 06a8 591C     		adds	r1, r3, #1
 14109 06aa 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14110 06ae 604A     		ldr	r2, .L636+24
 14111 06b0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14112 06b4 07F11800 		add	r0, r7, #24
 14113 06b8 0A46     		mov	r2, r1
 14114 06ba 5E49     		ldr	r1, .L636+28
 14115 06bc FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 318


1867:..\src/command_processing.c ****             strcat(info_string, str);
 14116              		.loc 1 1867 0
 14117 06c0 07F11803 		add	r3, r7, #24
 14118 06c4 1946     		mov	r1, r3
 14119 06c6 7869     		ldr	r0, [r7, #20]
 14120 06c8 FFF7FEFF 		bl	strcat
1868:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14121              		.loc 1 1868 0
 14122 06cc 7869     		ldr	r0, [r7, #20]
 14123 06ce FFF7FEFF 		bl	strlen
 14124 06d2 0346     		mov	r3, r0
 14125 06d4 1A46     		mov	r2, r3
 14126 06d6 7B69     		ldr	r3, [r7, #20]
 14127 06d8 1344     		add	r3, r3, r2
 14128 06da 524A     		ldr	r2, .L636+12
 14129 06dc 1188     		ldrh	r1, [r2]	@ unaligned
 14130 06de 9278     		ldrb	r2, [r2, #2]
 14131 06e0 1980     		strh	r1, [r3]	@ unaligned
 14132 06e2 9A70     		strb	r2, [r3, #2]
1869:..\src/command_processing.c **** 
1870:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 14133              		.loc 1 1870 0
 14134 06e4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14135 06e8 5C1C     		adds	r4, r3, #1
 14136 06ea 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14137 06ee 4A49     		ldr	r1, .L636
 14138 06f0 1346     		mov	r3, r2
 14139 06f2 5B00     		lsls	r3, r3, #1
 14140 06f4 1344     		add	r3, r3, r2
 14141 06f6 1B01     		lsls	r3, r3, #4
 14142 06f8 0B44     		add	r3, r3, r1
 14143 06fa 0C33     		adds	r3, r3, #12
 14144 06fc 1B68     		ldr	r3, [r3]
 14145 06fe 07F11800 		add	r0, r7, #24
 14146 0702 2246     		mov	r2, r4
 14147 0704 4C49     		ldr	r1, .L636+32
 14148 0706 FFF7FEFF 		bl	sprintf
1871:..\src/command_processing.c ****             strcat(info_string, str);
 14149              		.loc 1 1871 0
 14150 070a 07F11803 		add	r3, r7, #24
 14151 070e 1946     		mov	r1, r3
 14152 0710 7869     		ldr	r0, [r7, #20]
 14153 0712 FFF7FEFF 		bl	strcat
1872:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14154              		.loc 1 1872 0
 14155 0716 7869     		ldr	r0, [r7, #20]
 14156 0718 FFF7FEFF 		bl	strlen
 14157 071c 0346     		mov	r3, r0
 14158 071e 1A46     		mov	r2, r3
 14159 0720 7B69     		ldr	r3, [r7, #20]
 14160 0722 1344     		add	r3, r3, r2
 14161 0724 3F4A     		ldr	r2, .L636+12
 14162 0726 1188     		ldrh	r1, [r2]	@ unaligned
 14163 0728 9278     		ldrb	r2, [r2, #2]
 14164 072a 1980     		strh	r1, [r3]	@ unaligned
 14165 072c 9A70     		strb	r2, [r3, #2]
1873:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 319


1874:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 14166              		.loc 1 1874 0
 14167 072e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14168 0732 5A1C     		adds	r2, r3, #1
 14169 0734 07F11803 		add	r3, r7, #24
 14170 0738 4049     		ldr	r1, .L636+36
 14171 073a 1846     		mov	r0, r3
 14172 073c FFF7FEFF 		bl	sprintf
1875:..\src/command_processing.c ****             strcat(info_string, str);
 14173              		.loc 1 1875 0
 14174 0740 07F11803 		add	r3, r7, #24
 14175 0744 1946     		mov	r1, r3
 14176 0746 7869     		ldr	r0, [r7, #20]
 14177 0748 FFF7FEFF 		bl	strcat
1876:..\src/command_processing.c **** 
1877:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 14178              		.loc 1 1877 0
 14179 074c 7869     		ldr	r0, [r7, #20]
 14180 074e FFF7FEFF 		bl	strlen
 14181 0752 0346     		mov	r3, r0
 14182 0754 1A46     		mov	r2, r3
 14183 0756 7B69     		ldr	r3, [r7, #20]
 14184 0758 1344     		add	r3, r3, r2
 14185 075a 394A     		ldr	r2, .L636+40
 14186 075c 1D46     		mov	r5, r3
 14187 075e 1446     		mov	r4, r2
 14188 0760 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14189 0762 2860     		str	r0, [r5]	@ unaligned
 14190 0764 6960     		str	r1, [r5, #4]	@ unaligned
 14191 0766 AA60     		str	r2, [r5, #8]	@ unaligned
 14192 0768 EB60     		str	r3, [r5, #12]	@ unaligned
 14193 076a 2378     		ldrb	r3, [r4]
 14194 076c 2B74     		strb	r3, [r5, #16]
1878:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14195              		.loc 1 1878 0
 14196 076e D7F88030 		ldr	r3, [r7, #128]
 14197 0772 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14198 0776 032B     		cmp	r3, #3
 14199 0778 6CD0     		beq	.L549
1879:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 14200              		.loc 1 1879 0
 14201 077a D7F88030 		ldr	r3, [r7, #128]
 14202 077e 1B68     		ldr	r3, [r3]
 14203 0780 1846     		mov	r0, r3
 14204 0782 FFF7FEFF 		bl	__aeabi_i2d
 14205 0786 4FF00002 		mov	r2, #0
 14206 078a 2E4B     		ldr	r3, .L636+44
 14207 078c FFF7FEFF 		bl	__aeabi_ddiv
 14208 0790 0346     		mov	r3, r0
 14209 0792 0C46     		mov	r4, r1
 14210 0794 07F11800 		add	r0, r7, #24
 14211 0798 1A46     		mov	r2, r3
 14212 079a 2346     		mov	r3, r4
 14213 079c 2A49     		ldr	r1, .L636+48
 14214 079e FFF7FEFF 		bl	sprintf
1880:..\src/command_processing.c ****                 strcat(info_string, str);
 14215              		.loc 1 1880 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 320


 14216 07a2 07F11803 		add	r3, r7, #24
 14217 07a6 1946     		mov	r1, r3
 14218 07a8 7869     		ldr	r0, [r7, #20]
 14219 07aa FFF7FEFF 		bl	strcat
1881:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 14220              		.loc 1 1881 0
 14221 07ae D7F88030 		ldr	r3, [r7, #128]
 14222 07b2 5B68     		ldr	r3, [r3, #4]
 14223 07b4 1846     		mov	r0, r3
 14224 07b6 FFF7FEFF 		bl	__aeabi_i2d
 14225 07ba 4FF00002 		mov	r2, #0
 14226 07be 214B     		ldr	r3, .L636+44
 14227 07c0 FFF7FEFF 		bl	__aeabi_ddiv
 14228 07c4 0346     		mov	r3, r0
 14229 07c6 0C46     		mov	r4, r1
 14230 07c8 07F11800 		add	r0, r7, #24
 14231 07cc 1A46     		mov	r2, r3
 14232 07ce 2346     		mov	r3, r4
 14233 07d0 1E49     		ldr	r1, .L636+52
 14234 07d2 FFF7FEFF 		bl	sprintf
1882:..\src/command_processing.c ****                 strcat(info_string, str);
 14235              		.loc 1 1882 0
 14236 07d6 07F11803 		add	r3, r7, #24
 14237 07da 1946     		mov	r1, r3
 14238 07dc 7869     		ldr	r0, [r7, #20]
 14239 07de FFF7FEFF 		bl	strcat
1883:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 14240              		.loc 1 1883 0
 14241 07e2 D7F88030 		ldr	r3, [r7, #128]
 14242 07e6 9B68     		ldr	r3, [r3, #8]
 14243 07e8 1846     		mov	r0, r3
 14244 07ea FFF7FEFF 		bl	__aeabi_i2d
 14245 07ee 4FF00002 		mov	r2, #0
 14246 07f2 144B     		ldr	r3, .L636+44
 14247 07f4 FFF7FEFF 		bl	__aeabi_ddiv
 14248 07f8 0346     		mov	r3, r0
 14249 07fa 0C46     		mov	r4, r1
 14250 07fc 07F11800 		add	r0, r7, #24
 14251 0800 1A46     		mov	r2, r3
 14252 0802 2346     		mov	r3, r4
 14253 0804 1249     		ldr	r1, .L636+56
 14254 0806 FFF7FEFF 		bl	sprintf
1884:..\src/command_processing.c ****                 strcat(info_string, str);
 14255              		.loc 1 1884 0
 14256 080a 07F11803 		add	r3, r7, #24
 14257 080e 1946     		mov	r1, r3
 14258 0810 7869     		ldr	r0, [r7, #20]
 14259 0812 FFF7FEFF 		bl	strcat
 14260 0816 6BE0     		b	.L550
 14261              	.L637:
 14262              		.align	2
 14263              	.L636:
 14264 0818 00000000 		.word	g_meas
 14265 081c 440F0000 		.word	.LC153
 14266 0820 480F0000 		.word	.LC154
 14267 0824 840D0000 		.word	.LC125
 14268 0828 00000000 		.word	dev_tension
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 321


 14269 082c 4C0F0000 		.word	.LC155
 14270 0830 00000000 		.word	pow_tension
 14271 0834 6C0F0000 		.word	.LC156
 14272 0838 940F0000 		.word	.LC157
 14273 083c AC0F0000 		.word	.LC158
 14274 0840 C80F0000 		.word	.LC159
 14275 0844 0000F040 		.word	1089470464
 14276 0848 DC0F0000 		.word	.LC160
 14277 084c E80F0000 		.word	.LC161
 14278 0850 F40F0000 		.word	.LC162
 14279              	.L549:
1885:..\src/command_processing.c ****             }
1886:..\src/command_processing.c ****             else { 
1887:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 14280              		.loc 1 1887 0
 14281 0854 D7F88030 		ldr	r3, [r7, #128]
 14282 0858 9B69     		ldr	r3, [r3, #24]
 14283 085a 1846     		mov	r0, r3
 14284 085c FFF7FEFF 		bl	__aeabi_i2d
 14285 0860 4FF00002 		mov	r2, #0
 14286 0864 CC4B     		ldr	r3, .L638
 14287 0866 FFF7FEFF 		bl	__aeabi_ddiv
 14288 086a 0346     		mov	r3, r0
 14289 086c 0C46     		mov	r4, r1
 14290 086e 07F11800 		add	r0, r7, #24
 14291 0872 1A46     		mov	r2, r3
 14292 0874 2346     		mov	r3, r4
 14293 0876 C949     		ldr	r1, .L638+4
 14294 0878 FFF7FEFF 		bl	sprintf
1888:..\src/command_processing.c ****                 strcat(info_string, str);
 14295              		.loc 1 1888 0
 14296 087c 07F11803 		add	r3, r7, #24
 14297 0880 1946     		mov	r1, r3
 14298 0882 7869     		ldr	r0, [r7, #20]
 14299 0884 FFF7FEFF 		bl	strcat
1889:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 14300              		.loc 1 1889 0
 14301 0888 D7F88030 		ldr	r3, [r7, #128]
 14302 088c DB69     		ldr	r3, [r3, #28]
 14303 088e 1846     		mov	r0, r3
 14304 0890 FFF7FEFF 		bl	__aeabi_i2d
 14305 0894 4FF00002 		mov	r2, #0
 14306 0898 BF4B     		ldr	r3, .L638
 14307 089a FFF7FEFF 		bl	__aeabi_ddiv
 14308 089e 0346     		mov	r3, r0
 14309 08a0 0C46     		mov	r4, r1
 14310 08a2 07F11800 		add	r0, r7, #24
 14311 08a6 1A46     		mov	r2, r3
 14312 08a8 2346     		mov	r3, r4
 14313 08aa BD49     		ldr	r1, .L638+8
 14314 08ac FFF7FEFF 		bl	sprintf
1890:..\src/command_processing.c ****                 strcat(info_string, str);
 14315              		.loc 1 1890 0
 14316 08b0 07F11803 		add	r3, r7, #24
 14317 08b4 1946     		mov	r1, r3
 14318 08b6 7869     		ldr	r0, [r7, #20]
 14319 08b8 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 322


1891:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 14320              		.loc 1 1891 0
 14321 08bc D7F88030 		ldr	r3, [r7, #128]
 14322 08c0 1B6A     		ldr	r3, [r3, #32]
 14323 08c2 1846     		mov	r0, r3
 14324 08c4 FFF7FEFF 		bl	__aeabi_i2d
 14325 08c8 4FF00002 		mov	r2, #0
 14326 08cc B24B     		ldr	r3, .L638
 14327 08ce FFF7FEFF 		bl	__aeabi_ddiv
 14328 08d2 0346     		mov	r3, r0
 14329 08d4 0C46     		mov	r4, r1
 14330 08d6 07F11800 		add	r0, r7, #24
 14331 08da 1A46     		mov	r2, r3
 14332 08dc 2346     		mov	r3, r4
 14333 08de B149     		ldr	r1, .L638+12
 14334 08e0 FFF7FEFF 		bl	sprintf
1892:..\src/command_processing.c ****                 strcat(info_string, str);
 14335              		.loc 1 1892 0
 14336 08e4 07F11803 		add	r3, r7, #24
 14337 08e8 1946     		mov	r1, r3
 14338 08ea 7869     		ldr	r0, [r7, #20]
 14339 08ec FFF7FEFF 		bl	strcat
 14340              	.L550:
1893:..\src/command_processing.c ****             }
1894:..\src/command_processing.c **** 
1895:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 14341              		.loc 1 1895 0
 14342 08f0 7869     		ldr	r0, [r7, #20]
 14343 08f2 FFF7FEFF 		bl	strlen
 14344 08f6 0346     		mov	r3, r0
 14345 08f8 1A46     		mov	r2, r3
 14346 08fa 7B69     		ldr	r3, [r7, #20]
 14347 08fc 1344     		add	r3, r3, r2
 14348 08fe AA4A     		ldr	r2, .L638+16
 14349 0900 1D46     		mov	r5, r3
 14350 0902 1446     		mov	r4, r2
 14351 0904 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14352 0906 2860     		str	r0, [r5]	@ unaligned
 14353 0908 6960     		str	r1, [r5, #4]	@ unaligned
 14354 090a AA60     		str	r2, [r5, #8]	@ unaligned
 14355 090c EB60     		str	r3, [r5, #12]	@ unaligned
 14356 090e 03CC     		ldmia	r4!, {r0, r1}
 14357 0910 2861     		str	r0, [r5, #16]	@ unaligned
 14358 0912 6961     		str	r1, [r5, #20]	@ unaligned
 14359 0914 2378     		ldrb	r3, [r4]
 14360 0916 2B76     		strb	r3, [r5, #24]
1896:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14361              		.loc 1 1896 0
 14362 0918 D7F88030 		ldr	r3, [r7, #128]
 14363 091c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14364 0920 032B     		cmp	r3, #3
 14365 0922 4ED0     		beq	.L551
1897:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 14366              		.loc 1 1897 0
 14367 0924 D7F88030 		ldr	r3, [r7, #128]
 14368 0928 DB68     		ldr	r3, [r3, #12]
 14369 092a 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 323


 14370 092c FFF7FEFF 		bl	__aeabi_i2d
 14371 0930 4FF00002 		mov	r2, #0
 14372 0934 984B     		ldr	r3, .L638
 14373 0936 FFF7FEFF 		bl	__aeabi_ddiv
 14374 093a 0346     		mov	r3, r0
 14375 093c 0C46     		mov	r4, r1
 14376 093e 07F11800 		add	r0, r7, #24
 14377 0942 1A46     		mov	r2, r3
 14378 0944 2346     		mov	r3, r4
 14379 0946 9549     		ldr	r1, .L638+4
 14380 0948 FFF7FEFF 		bl	sprintf
1898:..\src/command_processing.c ****                 strcat(info_string, str);
 14381              		.loc 1 1898 0
 14382 094c 07F11803 		add	r3, r7, #24
 14383 0950 1946     		mov	r1, r3
 14384 0952 7869     		ldr	r0, [r7, #20]
 14385 0954 FFF7FEFF 		bl	strcat
1899:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 14386              		.loc 1 1899 0
 14387 0958 D7F88030 		ldr	r3, [r7, #128]
 14388 095c 1B69     		ldr	r3, [r3, #16]
 14389 095e 1846     		mov	r0, r3
 14390 0960 FFF7FEFF 		bl	__aeabi_i2d
 14391 0964 4FF00002 		mov	r2, #0
 14392 0968 8B4B     		ldr	r3, .L638
 14393 096a FFF7FEFF 		bl	__aeabi_ddiv
 14394 096e 0346     		mov	r3, r0
 14395 0970 0C46     		mov	r4, r1
 14396 0972 07F11800 		add	r0, r7, #24
 14397 0976 1A46     		mov	r2, r3
 14398 0978 2346     		mov	r3, r4
 14399 097a 8949     		ldr	r1, .L638+8
 14400 097c FFF7FEFF 		bl	sprintf
1900:..\src/command_processing.c ****                 strcat(info_string, str);
 14401              		.loc 1 1900 0
 14402 0980 07F11803 		add	r3, r7, #24
 14403 0984 1946     		mov	r1, r3
 14404 0986 7869     		ldr	r0, [r7, #20]
 14405 0988 FFF7FEFF 		bl	strcat
1901:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 14406              		.loc 1 1901 0
 14407 098c D7F88030 		ldr	r3, [r7, #128]
 14408 0990 5B69     		ldr	r3, [r3, #20]
 14409 0992 1846     		mov	r0, r3
 14410 0994 FFF7FEFF 		bl	__aeabi_i2d
 14411 0998 4FF00002 		mov	r2, #0
 14412 099c 7E4B     		ldr	r3, .L638
 14413 099e FFF7FEFF 		bl	__aeabi_ddiv
 14414 09a2 0346     		mov	r3, r0
 14415 09a4 0C46     		mov	r4, r1
 14416 09a6 07F11800 		add	r0, r7, #24
 14417 09aa 1A46     		mov	r2, r3
 14418 09ac 2346     		mov	r3, r4
 14419 09ae 7D49     		ldr	r1, .L638+12
 14420 09b0 FFF7FEFF 		bl	sprintf
1902:..\src/command_processing.c ****                 strcat(info_string, str);
 14421              		.loc 1 1902 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 324


 14422 09b4 07F11803 		add	r3, r7, #24
 14423 09b8 1946     		mov	r1, r3
 14424 09ba 7869     		ldr	r0, [r7, #20]
 14425 09bc FFF7FEFF 		bl	strcat
 14426 09c0 4DE0     		b	.L552
 14427              	.L551:
1903:..\src/command_processing.c **** 
1904:..\src/command_processing.c ****             }
1905:..\src/command_processing.c ****             else {
1906:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 14428              		.loc 1 1906 0
 14429 09c2 D7F88030 		ldr	r3, [r7, #128]
 14430 09c6 5B6A     		ldr	r3, [r3, #36]
 14431 09c8 1846     		mov	r0, r3
 14432 09ca FFF7FEFF 		bl	__aeabi_i2d
 14433 09ce 4FF00002 		mov	r2, #0
 14434 09d2 714B     		ldr	r3, .L638
 14435 09d4 FFF7FEFF 		bl	__aeabi_ddiv
 14436 09d8 0346     		mov	r3, r0
 14437 09da 0C46     		mov	r4, r1
 14438 09dc 07F11800 		add	r0, r7, #24
 14439 09e0 1A46     		mov	r2, r3
 14440 09e2 2346     		mov	r3, r4
 14441 09e4 6D49     		ldr	r1, .L638+4
 14442 09e6 FFF7FEFF 		bl	sprintf
1907:..\src/command_processing.c ****                 strcat(info_string, str);
 14443              		.loc 1 1907 0
 14444 09ea 07F11803 		add	r3, r7, #24
 14445 09ee 1946     		mov	r1, r3
 14446 09f0 7869     		ldr	r0, [r7, #20]
 14447 09f2 FFF7FEFF 		bl	strcat
1908:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 14448              		.loc 1 1908 0
 14449 09f6 D7F88030 		ldr	r3, [r7, #128]
 14450 09fa 9B6A     		ldr	r3, [r3, #40]
 14451 09fc 1846     		mov	r0, r3
 14452 09fe FFF7FEFF 		bl	__aeabi_i2d
 14453 0a02 4FF00002 		mov	r2, #0
 14454 0a06 644B     		ldr	r3, .L638
 14455 0a08 FFF7FEFF 		bl	__aeabi_ddiv
 14456 0a0c 0346     		mov	r3, r0
 14457 0a0e 0C46     		mov	r4, r1
 14458 0a10 07F11800 		add	r0, r7, #24
 14459 0a14 1A46     		mov	r2, r3
 14460 0a16 2346     		mov	r3, r4
 14461 0a18 6149     		ldr	r1, .L638+8
 14462 0a1a FFF7FEFF 		bl	sprintf
1909:..\src/command_processing.c ****                 strcat(info_string, str);
 14463              		.loc 1 1909 0
 14464 0a1e 07F11803 		add	r3, r7, #24
 14465 0a22 1946     		mov	r1, r3
 14466 0a24 7869     		ldr	r0, [r7, #20]
 14467 0a26 FFF7FEFF 		bl	strcat
1910:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 14468              		.loc 1 1910 0
 14469 0a2a D7F88030 		ldr	r3, [r7, #128]
 14470 0a2e DB6A     		ldr	r3, [r3, #44]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 325


 14471 0a30 1846     		mov	r0, r3
 14472 0a32 FFF7FEFF 		bl	__aeabi_i2d
 14473 0a36 4FF00002 		mov	r2, #0
 14474 0a3a 574B     		ldr	r3, .L638
 14475 0a3c FFF7FEFF 		bl	__aeabi_ddiv
 14476 0a40 0346     		mov	r3, r0
 14477 0a42 0C46     		mov	r4, r1
 14478 0a44 07F11800 		add	r0, r7, #24
 14479 0a48 1A46     		mov	r2, r3
 14480 0a4a 2346     		mov	r3, r4
 14481 0a4c 5549     		ldr	r1, .L638+12
 14482 0a4e FFF7FEFF 		bl	sprintf
1911:..\src/command_processing.c ****                 strcat(info_string, str);
 14483              		.loc 1 1911 0
 14484 0a52 07F11803 		add	r3, r7, #24
 14485 0a56 1946     		mov	r1, r3
 14486 0a58 7869     		ldr	r0, [r7, #20]
 14487 0a5a FFF7FEFF 		bl	strcat
 14488              	.L552:
1912:..\src/command_processing.c ****             }
1913:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 14489              		.loc 1 1913 0
 14490 0a5e D7F88030 		ldr	r3, [r7, #128]
 14491 0a62 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 14492 0a66 012B     		cmp	r3, #1
 14493 0a68 14D1     		bne	.L553
1914:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 14494              		.loc 1 1914 0
 14495 0a6a 7869     		ldr	r0, [r7, #20]
 14496 0a6c FFF7FEFF 		bl	strlen
 14497 0a70 0346     		mov	r3, r0
 14498 0a72 1A46     		mov	r2, r3
 14499 0a74 7B69     		ldr	r3, [r7, #20]
 14500 0a76 1344     		add	r3, r3, r2
 14501 0a78 4C4A     		ldr	r2, .L638+20
 14502 0a7a 1D46     		mov	r5, r3
 14503 0a7c 1446     		mov	r4, r2
 14504 0a7e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14505 0a80 2860     		str	r0, [r5]	@ unaligned
 14506 0a82 6960     		str	r1, [r5, #4]	@ unaligned
 14507 0a84 AA60     		str	r2, [r5, #8]	@ unaligned
 14508 0a86 EB60     		str	r3, [r5, #12]	@ unaligned
 14509 0a88 03CC     		ldmia	r4!, {r0, r1}
 14510 0a8a 2861     		str	r0, [r5, #16]	@ unaligned
 14511 0a8c 6961     		str	r1, [r5, #20]	@ unaligned
 14512 0a8e 2388     		ldrh	r3, [r4]	@ unaligned
 14513 0a90 2B83     		strh	r3, [r5, #24]	@ unaligned
 14514 0a92 13E0     		b	.L554
 14515              	.L553:
1915:..\src/command_processing.c ****             else
1916:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 14516              		.loc 1 1916 0
 14517 0a94 7869     		ldr	r0, [r7, #20]
 14518 0a96 FFF7FEFF 		bl	strlen
 14519 0a9a 0346     		mov	r3, r0
 14520 0a9c 1A46     		mov	r2, r3
 14521 0a9e 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 326


 14522 0aa0 1344     		add	r3, r3, r2
 14523 0aa2 434A     		ldr	r2, .L638+24
 14524 0aa4 1D46     		mov	r5, r3
 14525 0aa6 1446     		mov	r4, r2
 14526 0aa8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14527 0aaa 2860     		str	r0, [r5]	@ unaligned
 14528 0aac 6960     		str	r1, [r5, #4]	@ unaligned
 14529 0aae AA60     		str	r2, [r5, #8]	@ unaligned
 14530 0ab0 EB60     		str	r3, [r5, #12]	@ unaligned
 14531 0ab2 03CC     		ldmia	r4!, {r0, r1}
 14532 0ab4 2861     		str	r0, [r5, #16]	@ unaligned
 14533 0ab6 6961     		str	r1, [r5, #20]	@ unaligned
 14534 0ab8 2378     		ldrb	r3, [r4]
 14535 0aba 2B76     		strb	r3, [r5, #24]
 14536              	.L554:
1917:..\src/command_processing.c **** 
1918:..\src/command_processing.c ****             switch(MOT->input_mode) {
 14537              		.loc 1 1918 0
 14538 0abc D7F88030 		ldr	r3, [r7, #128]
 14539 0ac0 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 14540 0ac4 052B     		cmp	r3, #5
 14541 0ac6 00F2AC80 		bhi	.L555
 14542 0aca 01A2     		adr	r2, .L557
 14543 0acc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14544              		.p2align 2
 14545              	.L557:
 14546 0ad0 E90A0000 		.word	.L556+1
 14547 0ad4 0D0B0000 		.word	.L558+1
 14548 0ad8 350B0000 		.word	.L559+1
 14549 0adc 670B0000 		.word	.L560+1
 14550 0ae0 C50B0000 		.word	.L561+1
 14551 0ae4 F30B0000 		.word	.L562+1
 14552              		.p2align 1
 14553              	.L556:
1919:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
1920:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 14554              		.loc 1 1920 0
 14555 0ae8 7869     		ldr	r0, [r7, #20]
 14556 0aea FFF7FEFF 		bl	strlen
 14557 0aee 0346     		mov	r3, r0
 14558 0af0 1A46     		mov	r2, r3
 14559 0af2 7B69     		ldr	r3, [r7, #20]
 14560 0af4 1344     		add	r3, r3, r2
 14561 0af6 2F4A     		ldr	r2, .L638+28
 14562 0af8 1D46     		mov	r5, r3
 14563 0afa 1446     		mov	r4, r2
 14564 0afc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14565 0afe 2860     		str	r0, [r5]	@ unaligned
 14566 0b00 6960     		str	r1, [r5, #4]	@ unaligned
 14567 0b02 AA60     		str	r2, [r5, #8]	@ unaligned
 14568 0b04 EB60     		str	r3, [r5, #12]	@ unaligned
 14569 0b06 2388     		ldrh	r3, [r4]	@ unaligned
 14570 0b08 2B82     		strh	r3, [r5, #16]	@ unaligned
1921:..\src/command_processing.c ****                     break;
 14571              		.loc 1 1921 0
 14572 0b0a 8AE0     		b	.L555
 14573              	.L558:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 327


1922:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
1923:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 14574              		.loc 1 1923 0
 14575 0b0c 7869     		ldr	r0, [r7, #20]
 14576 0b0e FFF7FEFF 		bl	strlen
 14577 0b12 0346     		mov	r3, r0
 14578 0b14 1A46     		mov	r2, r3
 14579 0b16 7B69     		ldr	r3, [r7, #20]
 14580 0b18 1344     		add	r3, r3, r2
 14581 0b1a 274A     		ldr	r2, .L638+32
 14582 0b1c 1D46     		mov	r5, r3
 14583 0b1e 1446     		mov	r4, r2
 14584 0b20 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14585 0b22 2860     		str	r0, [r5]	@ unaligned
 14586 0b24 6960     		str	r1, [r5, #4]	@ unaligned
 14587 0b26 AA60     		str	r2, [r5, #8]	@ unaligned
 14588 0b28 EB60     		str	r3, [r5, #12]	@ unaligned
 14589 0b2a 2068     		ldr	r0, [r4]	@ unaligned
 14590 0b2c 2861     		str	r0, [r5, #16]	@ unaligned
 14591 0b2e 2379     		ldrb	r3, [r4, #4]
 14592 0b30 2B75     		strb	r3, [r5, #20]
1924:..\src/command_processing.c ****                     break;
 14593              		.loc 1 1924 0
 14594 0b32 76E0     		b	.L555
 14595              	.L559:
1925:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
1926:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 14596              		.loc 1 1926 0
 14597 0b34 7869     		ldr	r0, [r7, #20]
 14598 0b36 FFF7FEFF 		bl	strlen
 14599 0b3a 0346     		mov	r3, r0
 14600 0b3c 1A46     		mov	r2, r3
 14601 0b3e 7B69     		ldr	r3, [r7, #20]
 14602 0b40 1344     		add	r3, r3, r2
 14603 0b42 1E4A     		ldr	r2, .L638+36
 14604 0b44 1D46     		mov	r5, r3
 14605 0b46 1446     		mov	r4, r2
 14606 0b48 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14607 0b4a 2860     		str	r0, [r5]	@ unaligned
 14608 0b4c 6960     		str	r1, [r5, #4]	@ unaligned
 14609 0b4e AA60     		str	r2, [r5, #8]	@ unaligned
 14610 0b50 EB60     		str	r3, [r5, #12]	@ unaligned
 14611 0b52 07CC     		ldmia	r4!, {r0, r1, r2}
 14612 0b54 2861     		str	r0, [r5, #16]	@ unaligned
 14613 0b56 6961     		str	r1, [r5, #20]	@ unaligned
 14614 0b58 AA61     		str	r2, [r5, #24]	@ unaligned
 14615 0b5a 2388     		ldrh	r3, [r4]	@ unaligned
 14616 0b5c A278     		ldrb	r2, [r4, #2]
 14617 0b5e AB83     		strh	r3, [r5, #28]	@ unaligned
 14618 0b60 1346     		mov	r3, r2
 14619 0b62 AB77     		strb	r3, [r5, #30]
1927:..\src/command_processing.c ****                     break;
 14620              		.loc 1 1927 0
 14621 0b64 5DE0     		b	.L555
 14622              	.L560:
1928:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
1929:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 328


 14623              		.loc 1 1929 0
 14624 0b66 7869     		ldr	r0, [r7, #20]
 14625 0b68 FFF7FEFF 		bl	strlen
 14626 0b6c 0346     		mov	r3, r0
 14627 0b6e 1A46     		mov	r2, r3
 14628 0b70 7B69     		ldr	r3, [r7, #20]
 14629 0b72 1344     		add	r3, r3, r2
 14630 0b74 124A     		ldr	r2, .L638+40
 14631 0b76 1D46     		mov	r5, r3
 14632 0b78 1446     		mov	r4, r2
 14633 0b7a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14634 0b7c 2860     		str	r0, [r5]	@ unaligned
 14635 0b7e 6960     		str	r1, [r5, #4]	@ unaligned
 14636 0b80 AA60     		str	r2, [r5, #8]	@ unaligned
 14637 0b82 EB60     		str	r3, [r5, #12]	@ unaligned
 14638 0b84 03CC     		ldmia	r4!, {r0, r1}
 14639 0b86 2861     		str	r0, [r5, #16]	@ unaligned
 14640 0b88 6961     		str	r1, [r5, #20]	@ unaligned
 14641 0b8a 2388     		ldrh	r3, [r4]	@ unaligned
 14642 0b8c A278     		ldrb	r2, [r4, #2]
 14643 0b8e 2B83     		strh	r3, [r5, #24]	@ unaligned
 14644 0b90 1346     		mov	r3, r2
 14645 0b92 AB76     		strb	r3, [r5, #26]
1930:..\src/command_processing.c ****                     break;
 14646              		.loc 1 1930 0
 14647 0b94 45E0     		b	.L555
 14648              	.L639:
 14649 0b96 00BF     		.align	2
 14650              	.L638:
 14651 0b98 0000F040 		.word	1089470464
 14652 0b9c DC0F0000 		.word	.LC160
 14653 0ba0 E80F0000 		.word	.LC161
 14654 0ba4 F40F0000 		.word	.LC162
 14655 0ba8 00100000 		.word	.LC163
 14656 0bac 1C100000 		.word	.LC164
 14657 0bb0 38100000 		.word	.LC165
 14658 0bb4 54100000 		.word	.LC166
 14659 0bb8 68100000 		.word	.LC167
 14660 0bbc 80100000 		.word	.LC168
 14661 0bc0 A0100000 		.word	.LC169
 14662              	.L561:
1931:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
1932:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 14663              		.loc 1 1932 0
 14664 0bc4 7869     		ldr	r0, [r7, #20]
 14665 0bc6 FFF7FEFF 		bl	strlen
 14666 0bca 0346     		mov	r3, r0
 14667 0bcc 1A46     		mov	r2, r3
 14668 0bce 7B69     		ldr	r3, [r7, #20]
 14669 0bd0 1344     		add	r3, r3, r2
 14670 0bd2 874A     		ldr	r2, .L640
 14671 0bd4 1C46     		mov	r4, r3
 14672 0bd6 1546     		mov	r5, r2
 14673 0bd8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14674 0bda 2060     		str	r0, [r4]	@ unaligned
 14675 0bdc 6160     		str	r1, [r4, #4]	@ unaligned
 14676 0bde A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 329


 14677 0be0 E360     		str	r3, [r4, #12]	@ unaligned
 14678 0be2 2868     		ldr	r0, [r5]	@ unaligned
 14679 0be4 2061     		str	r0, [r4, #16]	@ unaligned
 14680 0be6 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14681 0be8 AA79     		ldrb	r2, [r5, #6]
 14682 0bea A382     		strh	r3, [r4, #20]	@ unaligned
 14683 0bec 1346     		mov	r3, r2
 14684 0bee A375     		strb	r3, [r4, #22]
1933:..\src/command_processing.c ****                     break;
 14685              		.loc 1 1933 0
 14686 0bf0 17E0     		b	.L555
 14687              	.L562:
1934:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
1935:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 14688              		.loc 1 1935 0
 14689 0bf2 7869     		ldr	r0, [r7, #20]
 14690 0bf4 FFF7FEFF 		bl	strlen
 14691 0bf8 0346     		mov	r3, r0
 14692 0bfa 1A46     		mov	r2, r3
 14693 0bfc 7B69     		ldr	r3, [r7, #20]
 14694 0bfe 1344     		add	r3, r3, r2
 14695 0c00 7C4A     		ldr	r2, .L640+4
 14696 0c02 1D46     		mov	r5, r3
 14697 0c04 1446     		mov	r4, r2
 14698 0c06 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14699 0c08 2860     		str	r0, [r5]	@ unaligned
 14700 0c0a 6960     		str	r1, [r5, #4]	@ unaligned
 14701 0c0c AA60     		str	r2, [r5, #8]	@ unaligned
 14702 0c0e EB60     		str	r3, [r5, #12]	@ unaligned
 14703 0c10 03CC     		ldmia	r4!, {r0, r1}
 14704 0c12 2861     		str	r0, [r5, #16]	@ unaligned
 14705 0c14 6961     		str	r1, [r5, #20]	@ unaligned
 14706 0c16 2388     		ldrh	r3, [r4]	@ unaligned
 14707 0c18 A278     		ldrb	r2, [r4, #2]
 14708 0c1a 2B83     		strh	r3, [r5, #24]	@ unaligned
 14709 0c1c 1346     		mov	r3, r2
 14710 0c1e AB76     		strb	r3, [r5, #26]
1936:..\src/command_processing.c ****                     break;
 14711              		.loc 1 1936 0
 14712 0c20 00BF     		nop
 14713              	.L555:
1937:..\src/command_processing.c ****             }
1938:..\src/command_processing.c **** 
1939:..\src/command_processing.c ****             switch(MOT->control_mode) {
 14714              		.loc 1 1939 0
 14715 0c22 D7F88030 		ldr	r3, [r7, #128]
 14716 0c26 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14717 0c2a 032B     		cmp	r3, #3
 14718 0c2c 63D8     		bhi	.L631
 14719 0c2e 01A2     		adr	r2, .L565
 14720 0c30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14721              		.p2align 2
 14722              	.L565:
 14723 0c34 450C0000 		.word	.L564+1
 14724 0c38 6F0C0000 		.word	.L566+1
 14725 0c3c 930C0000 		.word	.L567+1
 14726 0c40 B90C0000 		.word	.L568+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 330


 14727              		.p2align 1
 14728              	.L564:
1940:..\src/command_processing.c ****                 case CONTROL_ANGLE:
1941:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 14729              		.loc 1 1941 0
 14730 0c44 7869     		ldr	r0, [r7, #20]
 14731 0c46 FFF7FEFF 		bl	strlen
 14732 0c4a 0346     		mov	r3, r0
 14733 0c4c 1A46     		mov	r2, r3
 14734 0c4e 7B69     		ldr	r3, [r7, #20]
 14735 0c50 1344     		add	r3, r3, r2
 14736 0c52 694A     		ldr	r2, .L640+8
 14737 0c54 1D46     		mov	r5, r3
 14738 0c56 1446     		mov	r4, r2
 14739 0c58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14740 0c5a 2860     		str	r0, [r5]	@ unaligned
 14741 0c5c 6960     		str	r1, [r5, #4]	@ unaligned
 14742 0c5e AA60     		str	r2, [r5, #8]	@ unaligned
 14743 0c60 EB60     		str	r3, [r5, #12]	@ unaligned
 14744 0c62 03CC     		ldmia	r4!, {r0, r1}
 14745 0c64 2861     		str	r0, [r5, #16]	@ unaligned
 14746 0c66 6961     		str	r1, [r5, #20]	@ unaligned
 14747 0c68 2378     		ldrb	r3, [r4]
 14748 0c6a 2B76     		strb	r3, [r5, #24]
1942:..\src/command_processing.c ****                     break;
 14749              		.loc 1 1942 0
 14750 0c6c 44E0     		b	.L569
 14751              	.L566:
1943:..\src/command_processing.c ****                 case CONTROL_PWM:
1944:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 14752              		.loc 1 1944 0
 14753 0c6e 7869     		ldr	r0, [r7, #20]
 14754 0c70 FFF7FEFF 		bl	strlen
 14755 0c74 0346     		mov	r3, r0
 14756 0c76 1A46     		mov	r2, r3
 14757 0c78 7B69     		ldr	r3, [r7, #20]
 14758 0c7a 1344     		add	r3, r3, r2
 14759 0c7c 5F4A     		ldr	r2, .L640+12
 14760 0c7e 1D46     		mov	r5, r3
 14761 0c80 1446     		mov	r4, r2
 14762 0c82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14763 0c84 2860     		str	r0, [r5]	@ unaligned
 14764 0c86 6960     		str	r1, [r5, #4]	@ unaligned
 14765 0c88 AA60     		str	r2, [r5, #8]	@ unaligned
 14766 0c8a EB60     		str	r3, [r5, #12]	@ unaligned
 14767 0c8c 2068     		ldr	r0, [r4]	@ unaligned
 14768 0c8e 2861     		str	r0, [r5, #16]	@ unaligned
1945:..\src/command_processing.c ****                     break;
 14769              		.loc 1 1945 0
 14770 0c90 32E0     		b	.L569
 14771              	.L567:
1946:..\src/command_processing.c ****                 case CONTROL_CURRENT:
1947:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 14772              		.loc 1 1947 0
 14773 0c92 7869     		ldr	r0, [r7, #20]
 14774 0c94 FFF7FEFF 		bl	strlen
 14775 0c98 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 331


 14776 0c9a 1A46     		mov	r2, r3
 14777 0c9c 7B69     		ldr	r3, [r7, #20]
 14778 0c9e 1344     		add	r3, r3, r2
 14779 0ca0 574A     		ldr	r2, .L640+16
 14780 0ca2 1D46     		mov	r5, r3
 14781 0ca4 1446     		mov	r4, r2
 14782 0ca6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14783 0ca8 2860     		str	r0, [r5]	@ unaligned
 14784 0caa 6960     		str	r1, [r5, #4]	@ unaligned
 14785 0cac AA60     		str	r2, [r5, #8]	@ unaligned
 14786 0cae EB60     		str	r3, [r5, #12]	@ unaligned
 14787 0cb0 03CC     		ldmia	r4!, {r0, r1}
 14788 0cb2 2861     		str	r0, [r5, #16]	@ unaligned
 14789 0cb4 6961     		str	r1, [r5, #20]	@ unaligned
1948:..\src/command_processing.c ****                     break;
 14790              		.loc 1 1948 0
 14791 0cb6 1FE0     		b	.L569
 14792              	.L568:
1949:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
1950:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 14793              		.loc 1 1950 0
 14794 0cb8 7869     		ldr	r0, [r7, #20]
 14795 0cba FFF7FEFF 		bl	strlen
 14796 0cbe 0346     		mov	r3, r0
 14797 0cc0 1A46     		mov	r2, r3
 14798 0cc2 7B69     		ldr	r3, [r7, #20]
 14799 0cc4 1344     		add	r3, r3, r2
 14800 0cc6 4F4A     		ldr	r2, .L640+20
 14801 0cc8 1446     		mov	r4, r2
 14802 0cca 9E46     		mov	lr, r3
 14803 0ccc 04F1200C 		add	ip, r4, #32
 14804              	.L570:
 14805 0cd0 7546     		mov	r5, lr
 14806 0cd2 2646     		mov	r6, r4
 14807 0cd4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14808 0cd6 2860     		str	r0, [r5]	@ unaligned
 14809 0cd8 6960     		str	r1, [r5, #4]	@ unaligned
 14810 0cda AA60     		str	r2, [r5, #8]	@ unaligned
 14811 0cdc EB60     		str	r3, [r5, #12]	@ unaligned
 14812 0cde 1034     		adds	r4, r4, #16
 14813 0ce0 0EF1100E 		add	lr, lr, #16
 14814 0ce4 6445     		cmp	r4, ip
 14815 0ce6 F3D1     		bne	.L570
 14816 0ce8 7346     		mov	r3, lr
 14817 0cea 2246     		mov	r2, r4
 14818 0cec 1068     		ldr	r0, [r2]	@ unaligned
 14819 0cee 1860     		str	r0, [r3]	@ unaligned
 14820 0cf0 1279     		ldrb	r2, [r2, #4]
 14821 0cf2 1A71     		strb	r2, [r3, #4]
1951:..\src/command_processing.c ****                     break;
 14822              		.loc 1 1951 0
 14823 0cf4 00E0     		b	.L569
 14824              	.L631:
1952:..\src/command_processing.c ****                 default:
1953:..\src/command_processing.c ****                     break;
 14825              		.loc 1 1953 0
 14826 0cf6 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 332


 14827              	.L569:
1954:..\src/command_processing.c ****             }
1955:..\src/command_processing.c **** 
1956:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 14828              		.loc 1 1956 0
 14829 0cf8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14830 0cfc D7F88810 		ldr	r1, [r7, #136]
 14831 0d00 1346     		mov	r3, r2
 14832 0d02 5B00     		lsls	r3, r3, #1
 14833 0d04 1344     		add	r3, r3, r2
 14834 0d06 1B01     		lsls	r3, r3, #4
 14835 0d08 0B44     		add	r3, r3, r1
 14836 0d0a 03F5D873 		add	r3, r3, #432
 14837 0d0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14838 0d10 002B     		cmp	r3, #0
 14839 0d12 1CD0     		beq	.L571
1957:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 14840              		.loc 1 1957 0
 14841 0d14 7869     		ldr	r0, [r7, #20]
 14842 0d16 FFF7FEFF 		bl	strlen
 14843 0d1a 0346     		mov	r3, r0
 14844 0d1c 1A46     		mov	r2, r3
 14845 0d1e 7B69     		ldr	r3, [r7, #20]
 14846 0d20 1344     		add	r3, r3, r2
 14847 0d22 394A     		ldr	r2, .L640+24
 14848 0d24 1446     		mov	r4, r2
 14849 0d26 9E46     		mov	lr, r3
 14850 0d28 04F1200C 		add	ip, r4, #32
 14851              	.L572:
 14852 0d2c 7546     		mov	r5, lr
 14853 0d2e 2646     		mov	r6, r4
 14854 0d30 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14855 0d32 2860     		str	r0, [r5]	@ unaligned
 14856 0d34 6960     		str	r1, [r5, #4]	@ unaligned
 14857 0d36 AA60     		str	r2, [r5, #8]	@ unaligned
 14858 0d38 EB60     		str	r3, [r5, #12]	@ unaligned
 14859 0d3a 1034     		adds	r4, r4, #16
 14860 0d3c 0EF1100E 		add	lr, lr, #16
 14861 0d40 6445     		cmp	r4, ip
 14862 0d42 F3D1     		bne	.L572
 14863 0d44 7346     		mov	r3, lr
 14864 0d46 2246     		mov	r2, r4
 14865 0d48 1278     		ldrb	r2, [r2]
 14866 0d4a 1A70     		strb	r2, [r3]
 14867 0d4c 13E0     		b	.L573
 14868              	.L571:
1958:..\src/command_processing.c ****             else
1959:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 14869              		.loc 1 1959 0
 14870 0d4e 7869     		ldr	r0, [r7, #20]
 14871 0d50 FFF7FEFF 		bl	strlen
 14872 0d54 0346     		mov	r3, r0
 14873 0d56 1A46     		mov	r2, r3
 14874 0d58 7B69     		ldr	r3, [r7, #20]
 14875 0d5a 1344     		add	r3, r3, r2
 14876 0d5c 2B4A     		ldr	r2, .L640+28
 14877 0d5e 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 333


 14878 0d60 1546     		mov	r5, r2
 14879 0d62 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14880 0d64 2060     		str	r0, [r4]	@ unaligned
 14881 0d66 6160     		str	r1, [r4, #4]	@ unaligned
 14882 0d68 A260     		str	r2, [r4, #8]	@ unaligned
 14883 0d6a E360     		str	r3, [r4, #12]	@ unaligned
 14884 0d6c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14885 0d6e 2061     		str	r0, [r4, #16]	@ unaligned
 14886 0d70 6161     		str	r1, [r4, #20]	@ unaligned
 14887 0d72 A261     		str	r2, [r4, #24]	@ unaligned
 14888 0d74 E361     		str	r3, [r4, #28]	@ unaligned
 14889              	.L573:
1960:..\src/command_processing.c **** 
1961:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 14890              		.loc 1 1961 0
 14891 0d76 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14892 0d7a D7F88810 		ldr	r1, [r7, #136]
 14893 0d7e 1346     		mov	r3, r2
 14894 0d80 5B00     		lsls	r3, r3, #1
 14895 0d82 1344     		add	r3, r3, r2
 14896 0d84 1B01     		lsls	r3, r3, #4
 14897 0d86 0B44     		add	r3, r3, r1
 14898 0d88 03F5DA73 		add	r3, r3, #436
 14899 0d8c 93F90030 		ldrsb	r3, [r3]
 14900 0d90 1A46     		mov	r2, r3
 14901 0d92 07F11803 		add	r3, r7, #24
 14902 0d96 1E49     		ldr	r1, .L640+32
 14903 0d98 1846     		mov	r0, r3
 14904 0d9a FFF7FEFF 		bl	sprintf
1962:..\src/command_processing.c ****             strcat(info_string, str);
 14905              		.loc 1 1962 0
 14906 0d9e 07F11803 		add	r3, r7, #24
 14907 0da2 1946     		mov	r1, r3
 14908 0da4 7869     		ldr	r0, [r7, #20]
 14909 0da6 FFF7FEFF 		bl	strcat
1963:..\src/command_processing.c **** //#ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since t
1964:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 14910              		.loc 1 1964 0
 14911 0daa 7869     		ldr	r0, [r7, #20]
 14912 0dac FFF7FEFF 		bl	strlen
 14913 0db0 0346     		mov	r3, r0
 14914 0db2 1A46     		mov	r2, r3
 14915 0db4 7B69     		ldr	r3, [r7, #20]
 14916 0db6 1344     		add	r3, r3, r2
 14917 0db8 164A     		ldr	r2, .L640+36
 14918 0dba 1446     		mov	r4, r2
 14919 0dbc 9E46     		mov	lr, r3
 14920 0dbe 04F1200C 		add	ip, r4, #32
 14921              	.L574:
 14922 0dc2 7546     		mov	r5, lr
 14923 0dc4 2646     		mov	r6, r4
 14924 0dc6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14925 0dc8 2860     		str	r0, [r5]	@ unaligned
 14926 0dca 6960     		str	r1, [r5, #4]	@ unaligned
 14927 0dcc AA60     		str	r2, [r5, #8]	@ unaligned
 14928 0dce EB60     		str	r3, [r5, #12]	@ unaligned
 14929 0dd0 1034     		adds	r4, r4, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 334


 14930 0dd2 0EF1100E 		add	lr, lr, #16
 14931 0dd6 6445     		cmp	r4, ip
 14932 0dd8 F3D1     		bne	.L574
 14933 0dda 7246     		mov	r2, lr
 14934 0ddc 2346     		mov	r3, r4
 14935 0dde 03CB     		ldmia	r3!, {r0, r1}
 14936 0de0 1060     		str	r0, [r2]	@ unaligned
 14937 0de2 5160     		str	r1, [r2, #4]	@ unaligned
 14938 0de4 1B78     		ldrb	r3, [r3]
 14939 0de6 1372     		strb	r3, [r2, #8]
1965:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 14940              		.loc 1 1965 0
 14941 0de8 0023     		movs	r3, #0
 14942 0dea C7F89430 		str	r3, [r7, #148]
 14943 0dee 44E0     		b	.L575
 14944              	.L641:
 14945              		.align	2
 14946              	.L640:
 14947 0df0 BC100000 		.word	.LC170
 14948 0df4 D4100000 		.word	.LC171
 14949 0df8 F0100000 		.word	.LC172
 14950 0dfc 0C110000 		.word	.LC173
 14951 0e00 20110000 		.word	.LC174
 14952 0e04 38110000 		.word	.LC175
 14953 0e08 60110000 		.word	.LC176
 14954 0e0c 84110000 		.word	.LC177
 14955 0e10 A4110000 		.word	.LC178
 14956 0e14 C0110000 		.word	.LC179
 14957              	.L577:
1966:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 14958              		.loc 1 1966 0
 14959 0e18 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14960 0e1c D7F88810 		ldr	r1, [r7, #136]
 14961 0e20 1346     		mov	r3, r2
 14962 0e22 5B00     		lsls	r3, r3, #1
 14963 0e24 1344     		add	r3, r3, r2
 14964 0e26 1B01     		lsls	r3, r3, #4
 14965 0e28 CA18     		adds	r2, r1, r3
 14966 0e2a D7F89430 		ldr	r3, [r7, #148]
 14967 0e2e 1344     		add	r3, r3, r2
 14968 0e30 03F2B113 		addw	r3, r3, #433
 14969 0e34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14970 0e36 1A46     		mov	r2, r3
 14971 0e38 07F11803 		add	r3, r7, #24
 14972 0e3c AE49     		ldr	r1, .L642
 14973 0e3e 1846     		mov	r0, r3
 14974 0e40 FFF7FEFF 		bl	sprintf
1967:..\src/command_processing.c ****                 strcat(info_string, str);
 14975              		.loc 1 1967 0
 14976 0e44 07F11803 		add	r3, r7, #24
 14977 0e48 1946     		mov	r1, r3
 14978 0e4a 7869     		ldr	r0, [r7, #20]
 14979 0e4c FFF7FEFF 		bl	strcat
1968:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14980              		.loc 1 1968 0
 14981 0e50 D7F89430 		ldr	r3, [r7, #148]
 14982 0e54 022B     		cmp	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 335


 14983 0e56 0BD0     		beq	.L576
1969:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14984              		.loc 1 1969 0
 14985 0e58 7869     		ldr	r0, [r7, #20]
 14986 0e5a FFF7FEFF 		bl	strlen
 14987 0e5e 0346     		mov	r3, r0
 14988 0e60 1A46     		mov	r2, r3
 14989 0e62 7B69     		ldr	r3, [r7, #20]
 14990 0e64 1344     		add	r3, r3, r2
 14991 0e66 A54A     		ldr	r2, .L642+4
 14992 0e68 1188     		ldrh	r1, [r2]	@ unaligned
 14993 0e6a 9278     		ldrb	r2, [r2, #2]
 14994 0e6c 1980     		strh	r1, [r3]	@ unaligned
 14995 0e6e 9A70     		strb	r2, [r3, #2]
 14996              	.L576:
1965:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 14997              		.loc 1 1965 0 discriminator 2
 14998 0e70 D7F89430 		ldr	r3, [r7, #148]
 14999 0e74 0133     		adds	r3, r3, #1
 15000 0e76 C7F89430 		str	r3, [r7, #148]
 15001              	.L575:
1965:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15002              		.loc 1 1965 0 is_stmt 0 discriminator 1
 15003 0e7a D7F89430 		ldr	r3, [r7, #148]
 15004 0e7e 022B     		cmp	r3, #2
 15005 0e80 CADD     		ble	.L577
1970:..\src/command_processing.c ****                 }                
1971:..\src/command_processing.c ****             }
1972:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15006              		.loc 1 1972 0 is_stmt 1
 15007 0e82 7869     		ldr	r0, [r7, #20]
 15008 0e84 FFF7FEFF 		bl	strlen
 15009 0e88 0346     		mov	r3, r0
 15010 0e8a 1A46     		mov	r2, r3
 15011 0e8c 7B69     		ldr	r3, [r7, #20]
 15012 0e8e 1344     		add	r3, r3, r2
 15013 0e90 9B4A     		ldr	r2, .L642+8
 15014 0e92 1188     		ldrh	r1, [r2]	@ unaligned
 15015 0e94 9278     		ldrb	r2, [r2, #2]
 15016 0e96 1980     		strh	r1, [r3]	@ unaligned
 15017 0e98 9A70     		strb	r2, [r3, #2]
1973:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 15018              		.loc 1 1973 0
 15019 0e9a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15020 0e9e D7F88810 		ldr	r1, [r7, #136]
 15021 0ea2 1346     		mov	r3, r2
 15022 0ea4 5B00     		lsls	r3, r3, #1
 15023 0ea6 1344     		add	r3, r3, r2
 15024 0ea8 1B01     		lsls	r3, r3, #4
 15025 0eaa 0B44     		add	r3, r3, r1
 15026 0eac 03F2B513 		addw	r3, r3, #437
 15027 0eb0 93F90030 		ldrsb	r3, [r3]
 15028 0eb4 1A46     		mov	r2, r3
 15029 0eb6 07F11803 		add	r3, r7, #24
 15030 0eba 9249     		ldr	r1, .L642+12
 15031 0ebc 1846     		mov	r0, r3
 15032 0ebe FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 336


1974:..\src/command_processing.c ****             strcat(info_string, str);
 15033              		.loc 1 1974 0
 15034 0ec2 07F11803 		add	r3, r7, #24
 15035 0ec6 1946     		mov	r1, r3
 15036 0ec8 7869     		ldr	r0, [r7, #20]
 15037 0eca FFF7FEFF 		bl	strcat
1975:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 15038              		.loc 1 1975 0
 15039 0ece 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15040 0ed2 D7F88810 		ldr	r1, [r7, #136]
 15041 0ed6 1346     		mov	r3, r2
 15042 0ed8 5B00     		lsls	r3, r3, #1
 15043 0eda 1344     		add	r3, r3, r2
 15044 0edc 1B01     		lsls	r3, r3, #4
 15045 0ede 0B44     		add	r3, r3, r1
 15046 0ee0 03F5DB73 		add	r3, r3, #438
 15047 0ee4 93F90030 		ldrsb	r3, [r3]
 15048 0ee8 1A46     		mov	r2, r3
 15049 0eea 07F11803 		add	r3, r7, #24
 15050 0eee 8649     		ldr	r1, .L642+16
 15051 0ef0 1846     		mov	r0, r3
 15052 0ef2 FFF7FEFF 		bl	sprintf
1976:..\src/command_processing.c ****             strcat(info_string, str);
 15053              		.loc 1 1976 0
 15054 0ef6 07F11803 		add	r3, r7, #24
 15055 0efa 1946     		mov	r1, r3
 15056 0efc 7869     		ldr	r0, [r7, #20]
 15057 0efe FFF7FEFF 		bl	strcat
1977:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 15058              		.loc 1 1977 0
 15059 0f02 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15060 0f06 D7F88810 		ldr	r1, [r7, #136]
 15061 0f0a 1346     		mov	r3, r2
 15062 0f0c 5B00     		lsls	r3, r3, #1
 15063 0f0e 1344     		add	r3, r3, r2
 15064 0f10 1B01     		lsls	r3, r3, #4
 15065 0f12 0B44     		add	r3, r3, r1
 15066 0f14 03F2B713 		addw	r3, r3, #439
 15067 0f18 93F90030 		ldrsb	r3, [r3]
 15068 0f1c 1A46     		mov	r2, r3
 15069 0f1e 07F11803 		add	r3, r7, #24
 15070 0f22 7A49     		ldr	r1, .L642+20
 15071 0f24 1846     		mov	r0, r3
 15072 0f26 FFF7FEFF 		bl	sprintf
1978:..\src/command_processing.c ****             strcat(info_string, str);
 15073              		.loc 1 1978 0
 15074 0f2a 07F11803 		add	r3, r7, #24
 15075 0f2e 1946     		mov	r1, r3
 15076 0f30 7869     		ldr	r0, [r7, #20]
 15077 0f32 FFF7FEFF 		bl	strcat
1979:..\src/command_processing.c **** //#endif            
1980:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15078              		.loc 1 1980 0
 15079 0f36 7869     		ldr	r0, [r7, #20]
 15080 0f38 FFF7FEFF 		bl	strlen
 15081 0f3c 0346     		mov	r3, r0
 15082 0f3e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 337


 15083 0f40 7B69     		ldr	r3, [r7, #20]
 15084 0f42 1344     		add	r3, r3, r2
 15085 0f44 6E4A     		ldr	r2, .L642+8
 15086 0f46 1188     		ldrh	r1, [r2]	@ unaligned
 15087 0f48 9278     		ldrb	r2, [r2, #2]
 15088 0f4a 1980     		strh	r1, [r3]	@ unaligned
 15089 0f4c 9A70     		strb	r2, [r3, #2]
1981:..\src/command_processing.c **** 
1982:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 15090              		.loc 1 1982 0
 15091 0f4e 7869     		ldr	r0, [r7, #20]
 15092 0f50 FFF7FEFF 		bl	strlen
 15093 0f54 0346     		mov	r3, r0
 15094 0f56 1A46     		mov	r2, r3
 15095 0f58 7B69     		ldr	r3, [r7, #20]
 15096 0f5a 1344     		add	r3, r3, r2
 15097 0f5c 6C4A     		ldr	r2, .L642+24
 15098 0f5e 1D46     		mov	r5, r3
 15099 0f60 1446     		mov	r4, r2
 15100 0f62 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15101 0f64 2860     		str	r0, [r5]	@ unaligned
 15102 0f66 6960     		str	r1, [r5, #4]	@ unaligned
 15103 0f68 AA60     		str	r2, [r5, #8]	@ unaligned
 15104 0f6a EB60     		str	r3, [r5, #12]	@ unaligned
 15105 0f6c 2068     		ldr	r0, [r4]	@ unaligned
 15106 0f6e 2861     		str	r0, [r5, #16]	@ unaligned
1983:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15107              		.loc 1 1983 0
 15108 0f70 0023     		movs	r3, #0
 15109 0f72 C7F89430 		str	r3, [r7, #148]
 15110 0f76 30E0     		b	.L578
 15111              	.L580:
1984:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15112              		.loc 1 1984 0
 15113 0f78 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15114 0f7c D7F88810 		ldr	r1, [r7, #136]
 15115 0f80 1346     		mov	r3, r2
 15116 0f82 5B00     		lsls	r3, r3, #1
 15117 0f84 1344     		add	r3, r3, r2
 15118 0f86 1B01     		lsls	r3, r3, #4
 15119 0f88 CA18     		adds	r2, r1, r3
 15120 0f8a D7F89430 		ldr	r3, [r7, #148]
 15121 0f8e 1344     		add	r3, r3, r2
 15122 0f90 03F29513 		addw	r3, r3, #405
 15123 0f94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15124 0f96 1A46     		mov	r2, r3
 15125 0f98 07F11803 		add	r3, r7, #24
 15126 0f9c 5649     		ldr	r1, .L642
 15127 0f9e 1846     		mov	r0, r3
 15128 0fa0 FFF7FEFF 		bl	sprintf
1985:..\src/command_processing.c ****                 strcat(info_string, str);
 15129              		.loc 1 1985 0
 15130 0fa4 07F11803 		add	r3, r7, #24
 15131 0fa8 1946     		mov	r1, r3
 15132 0faa 7869     		ldr	r0, [r7, #20]
 15133 0fac FFF7FEFF 		bl	strcat
1986:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 338


 15134              		.loc 1 1986 0
 15135 0fb0 D7F89430 		ldr	r3, [r7, #148]
 15136 0fb4 022B     		cmp	r3, #2
 15137 0fb6 0BD0     		beq	.L579
1987:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15138              		.loc 1 1987 0
 15139 0fb8 7869     		ldr	r0, [r7, #20]
 15140 0fba FFF7FEFF 		bl	strlen
 15141 0fbe 0346     		mov	r3, r0
 15142 0fc0 1A46     		mov	r2, r3
 15143 0fc2 7B69     		ldr	r3, [r7, #20]
 15144 0fc4 1344     		add	r3, r3, r2
 15145 0fc6 4D4A     		ldr	r2, .L642+4
 15146 0fc8 1188     		ldrh	r1, [r2]	@ unaligned
 15147 0fca 9278     		ldrb	r2, [r2, #2]
 15148 0fcc 1980     		strh	r1, [r3]	@ unaligned
 15149 0fce 9A70     		strb	r2, [r3, #2]
 15150              	.L579:
1983:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15151              		.loc 1 1983 0 discriminator 2
 15152 0fd0 D7F89430 		ldr	r3, [r7, #148]
 15153 0fd4 0133     		adds	r3, r3, #1
 15154 0fd6 C7F89430 		str	r3, [r7, #148]
 15155              	.L578:
1983:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15156              		.loc 1 1983 0 is_stmt 0 discriminator 1
 15157 0fda D7F89430 		ldr	r3, [r7, #148]
 15158 0fde 022B     		cmp	r3, #2
 15159 0fe0 CADD     		ble	.L580
1988:..\src/command_processing.c ****                 }                
1989:..\src/command_processing.c ****             }
1990:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15160              		.loc 1 1990 0 is_stmt 1
 15161 0fe2 7869     		ldr	r0, [r7, #20]
 15162 0fe4 FFF7FEFF 		bl	strlen
 15163 0fe8 0346     		mov	r3, r0
 15164 0fea 1A46     		mov	r2, r3
 15165 0fec 7B69     		ldr	r3, [r7, #20]
 15166 0fee 1344     		add	r3, r3, r2
 15167 0ff0 434A     		ldr	r2, .L642+8
 15168 0ff2 1188     		ldrh	r1, [r2]	@ unaligned
 15169 0ff4 9278     		ldrb	r2, [r2, #2]
 15170 0ff6 1980     		strh	r1, [r3]	@ unaligned
 15171 0ff8 9A70     		strb	r2, [r3, #2]
1991:..\src/command_processing.c **** 
1992:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 15172              		.loc 1 1992 0
 15173 0ffa 7869     		ldr	r0, [r7, #20]
 15174 0ffc FFF7FEFF 		bl	strlen
 15175 1000 0346     		mov	r3, r0
 15176 1002 1A46     		mov	r2, r3
 15177 1004 7B69     		ldr	r3, [r7, #20]
 15178 1006 1344     		add	r3, r3, r2
 15179 1008 424A     		ldr	r2, .L642+28
 15180 100a 1D46     		mov	r5, r3
 15181 100c 1446     		mov	r4, r2
 15182 100e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 339


 15183 1010 2860     		str	r0, [r5]	@ unaligned
 15184 1012 6960     		str	r1, [r5, #4]	@ unaligned
 15185 1014 AA60     		str	r2, [r5, #8]	@ unaligned
 15186 1016 EB60     		str	r3, [r5, #12]	@ unaligned
 15187 1018 2068     		ldr	r0, [r4]	@ unaligned
 15188 101a 2861     		str	r0, [r5, #16]	@ unaligned
 15189 101c 2379     		ldrb	r3, [r4, #4]
 15190 101e 2B75     		strb	r3, [r5, #20]
1993:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15191              		.loc 1 1993 0
 15192 1020 0023     		movs	r3, #0
 15193 1022 C7F89430 		str	r3, [r7, #148]
 15194 1026 3FE0     		b	.L581
 15195              	.L583:
1994:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15196              		.loc 1 1994 0
 15197 1028 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15198 102c D7F88810 		ldr	r1, [r7, #136]
 15199 1030 1346     		mov	r3, r2
 15200 1032 5B00     		lsls	r3, r3, #1
 15201 1034 1344     		add	r3, r3, r2
 15202 1036 9B00     		lsls	r3, r3, #2
 15203 1038 D7F89420 		ldr	r2, [r7, #148]
 15204 103c 1344     		add	r3, r3, r2
 15205 103e 6633     		adds	r3, r3, #102
 15206 1040 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15207 1044 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15208 1048 D7F88800 		ldr	r0, [r7, #136]
 15209 104c 1346     		mov	r3, r2
 15210 104e 5B00     		lsls	r3, r3, #1
 15211 1050 1344     		add	r3, r3, r2
 15212 1052 1B01     		lsls	r3, r3, #4
 15213 1054 C218     		adds	r2, r0, r3
 15214 1056 D7F89430 		ldr	r3, [r7, #148]
 15215 105a 1344     		add	r3, r3, r2
 15216 105c 03F29513 		addw	r3, r3, #405
 15217 1060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15218 1062 41FA03F2 		asr	r2, r1, r3
 15219 1066 07F11803 		add	r3, r7, #24
 15220 106a 2B49     		ldr	r1, .L642+32
 15221 106c 1846     		mov	r0, r3
 15222 106e FFF7FEFF 		bl	sprintf
1995:..\src/command_processing.c ****                 strcat(info_string, str);
 15223              		.loc 1 1995 0
 15224 1072 07F11803 		add	r3, r7, #24
 15225 1076 1946     		mov	r1, r3
 15226 1078 7869     		ldr	r0, [r7, #20]
 15227 107a FFF7FEFF 		bl	strcat
1996:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15228              		.loc 1 1996 0
 15229 107e D7F89430 		ldr	r3, [r7, #148]
 15230 1082 022B     		cmp	r3, #2
 15231 1084 0BD0     		beq	.L582
1997:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15232              		.loc 1 1997 0
 15233 1086 7869     		ldr	r0, [r7, #20]
 15234 1088 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 340


 15235 108c 0346     		mov	r3, r0
 15236 108e 1A46     		mov	r2, r3
 15237 1090 7B69     		ldr	r3, [r7, #20]
 15238 1092 1344     		add	r3, r3, r2
 15239 1094 194A     		ldr	r2, .L642+4
 15240 1096 1188     		ldrh	r1, [r2]	@ unaligned
 15241 1098 9278     		ldrb	r2, [r2, #2]
 15242 109a 1980     		strh	r1, [r3]	@ unaligned
 15243 109c 9A70     		strb	r2, [r3, #2]
 15244              	.L582:
1993:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15245              		.loc 1 1993 0 discriminator 2
 15246 109e D7F89430 		ldr	r3, [r7, #148]
 15247 10a2 0133     		adds	r3, r3, #1
 15248 10a4 C7F89430 		str	r3, [r7, #148]
 15249              	.L581:
1993:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15250              		.loc 1 1993 0 is_stmt 0 discriminator 1
 15251 10a8 D7F89430 		ldr	r3, [r7, #148]
 15252 10ac 022B     		cmp	r3, #2
 15253 10ae BBDD     		ble	.L583
1998:..\src/command_processing.c ****                 }
1999:..\src/command_processing.c ****             }
2000:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15254              		.loc 1 2000 0 is_stmt 1
 15255 10b0 7869     		ldr	r0, [r7, #20]
 15256 10b2 FFF7FEFF 		bl	strlen
 15257 10b6 0346     		mov	r3, r0
 15258 10b8 1A46     		mov	r2, r3
 15259 10ba 7B69     		ldr	r3, [r7, #20]
 15260 10bc 1344     		add	r3, r3, r2
 15261 10be 104A     		ldr	r2, .L642+8
 15262 10c0 1188     		ldrh	r1, [r2]	@ unaligned
 15263 10c2 9278     		ldrb	r2, [r2, #2]
 15264 10c4 1980     		strh	r1, [r3]	@ unaligned
 15265 10c6 9A70     		strb	r2, [r3, #2]
2001:..\src/command_processing.c ****                 
2002:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 15266              		.loc 1 2002 0
 15267 10c8 7869     		ldr	r0, [r7, #20]
 15268 10ca FFF7FEFF 		bl	strlen
 15269 10ce 0346     		mov	r3, r0
 15270 10d0 1A46     		mov	r2, r3
 15271 10d2 7B69     		ldr	r3, [r7, #20]
 15272 10d4 1344     		add	r3, r3, r2
 15273 10d6 114A     		ldr	r2, .L642+36
 15274 10d8 1D46     		mov	r5, r3
 15275 10da 1446     		mov	r4, r2
 15276 10dc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15277 10de 2860     		str	r0, [r5]	@ unaligned
 15278 10e0 6960     		str	r1, [r5, #4]	@ unaligned
 15279 10e2 AA60     		str	r2, [r5, #8]	@ unaligned
 15280 10e4 EB60     		str	r3, [r5, #12]	@ unaligned
 15281 10e6 03CC     		ldmia	r4!, {r0, r1}
 15282 10e8 2861     		str	r0, [r5, #16]	@ unaligned
 15283 10ea 6961     		str	r1, [r5, #20]	@ unaligned
 15284 10ec 2378     		ldrb	r3, [r4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 341


 15285 10ee 2B76     		strb	r3, [r5, #24]
2003:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15286              		.loc 1 2003 0
 15287 10f0 0023     		movs	r3, #0
 15288 10f2 C7F89430 		str	r3, [r7, #148]
 15289 10f6 49E0     		b	.L584
 15290              	.L643:
 15291              		.align	2
 15292              	.L642:
 15293 10f8 440F0000 		.word	.LC153
 15294 10fc 480F0000 		.word	.LC154
 15295 1100 840D0000 		.word	.LC125
 15296 1104 EC110000 		.word	.LC180
 15297 1108 04120000 		.word	.LC181
 15298 110c 1C120000 		.word	.LC182
 15299 1110 34120000 		.word	.LC183
 15300 1114 48120000 		.word	.LC184
 15301 1118 60120000 		.word	.LC185
 15302 111c 64120000 		.word	.LC186
 15303              	.L586:
2004:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15304              		.loc 1 2004 0
 15305 1120 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15306 1124 D7F88810 		ldr	r1, [r7, #136]
 15307 1128 1346     		mov	r3, r2
 15308 112a 5B00     		lsls	r3, r3, #1
 15309 112c 1344     		add	r3, r3, r2
 15310 112e 9B00     		lsls	r3, r3, #2
 15311 1130 D7F89420 		ldr	r2, [r7, #148]
 15312 1134 1344     		add	r3, r3, r2
 15313 1136 6833     		adds	r3, r3, #104
 15314 1138 9B00     		lsls	r3, r3, #2
 15315 113a 0B44     		add	r3, r3, r1
 15316 113c 5B68     		ldr	r3, [r3, #4]	@ float
 15317 113e 1846     		mov	r0, r3
 15318 1140 FFF7FEFF 		bl	__aeabi_f2d
 15319 1144 0346     		mov	r3, r0
 15320 1146 0C46     		mov	r4, r1
 15321 1148 07F11800 		add	r0, r7, #24
 15322 114c 1A46     		mov	r2, r3
 15323 114e 2346     		mov	r3, r4
 15324 1150 BD49     		ldr	r1, .L644
 15325 1152 FFF7FEFF 		bl	sprintf
2005:..\src/command_processing.c ****                 strcat(info_string, str);
 15326              		.loc 1 2005 0
 15327 1156 07F11803 		add	r3, r7, #24
 15328 115a 1946     		mov	r1, r3
 15329 115c 7869     		ldr	r0, [r7, #20]
 15330 115e FFF7FEFF 		bl	strcat
2006:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15331              		.loc 1 2006 0
 15332 1162 D7F89430 		ldr	r3, [r7, #148]
 15333 1166 022B     		cmp	r3, #2
 15334 1168 0BD0     		beq	.L585
2007:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15335              		.loc 1 2007 0
 15336 116a 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 342


 15337 116c FFF7FEFF 		bl	strlen
 15338 1170 0346     		mov	r3, r0
 15339 1172 1A46     		mov	r2, r3
 15340 1174 7B69     		ldr	r3, [r7, #20]
 15341 1176 1344     		add	r3, r3, r2
 15342 1178 B44A     		ldr	r2, .L644+4
 15343 117a 1188     		ldrh	r1, [r2]	@ unaligned
 15344 117c 9278     		ldrb	r2, [r2, #2]
 15345 117e 1980     		strh	r1, [r3]	@ unaligned
 15346 1180 9A70     		strb	r2, [r3, #2]
 15347              	.L585:
2003:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15348              		.loc 1 2003 0 discriminator 2
 15349 1182 D7F89430 		ldr	r3, [r7, #148]
 15350 1186 0133     		adds	r3, r3, #1
 15351 1188 C7F89430 		str	r3, [r7, #148]
 15352              	.L584:
2003:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15353              		.loc 1 2003 0 is_stmt 0 discriminator 1
 15354 118c D7F89430 		ldr	r3, [r7, #148]
 15355 1190 022B     		cmp	r3, #2
 15356 1192 C5DD     		ble	.L586
2008:..\src/command_processing.c ****                 }
2009:..\src/command_processing.c ****             }
2010:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15357              		.loc 1 2010 0 is_stmt 1
 15358 1194 7869     		ldr	r0, [r7, #20]
 15359 1196 FFF7FEFF 		bl	strlen
 15360 119a 0346     		mov	r3, r0
 15361 119c 1A46     		mov	r2, r3
 15362 119e 7B69     		ldr	r3, [r7, #20]
 15363 11a0 1344     		add	r3, r3, r2
 15364 11a2 AB4A     		ldr	r2, .L644+8
 15365 11a4 1188     		ldrh	r1, [r2]	@ unaligned
 15366 11a6 9278     		ldrb	r2, [r2, #2]
 15367 11a8 1980     		strh	r1, [r3]	@ unaligned
 15368 11aa 9A70     		strb	r2, [r3, #2]
2011:..\src/command_processing.c ****             
2012:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2013:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15369              		.loc 1 2013 0
 15370 11ac D7F88030 		ldr	r3, [r7, #128]
 15371 11b0 5B6C     		ldr	r3, [r3, #68]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15372              		.loc 1 2012 0
 15373 11b2 1846     		mov	r0, r3
 15374 11b4 FFF7FEFF 		bl	__aeabi_f2d
 15375 11b8 C7E90201 		strd	r0, [r7, #8]
 15376              		.loc 1 2013 0
 15377 11bc D7F88030 		ldr	r3, [r7, #128]
 15378 11c0 9B6C     		ldr	r3, [r3, #72]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15379              		.loc 1 2012 0
 15380 11c2 1846     		mov	r0, r3
 15381 11c4 FFF7FEFF 		bl	__aeabi_f2d
 15382 11c8 0446     		mov	r4, r0
 15383 11ca 0D46     		mov	r5, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 343


 15384              		.loc 1 2013 0
 15385 11cc D7F88030 		ldr	r3, [r7, #128]
 15386 11d0 DB6C     		ldr	r3, [r3, #76]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15387              		.loc 1 2012 0
 15388 11d2 1846     		mov	r0, r3
 15389 11d4 FFF7FEFF 		bl	__aeabi_f2d
 15390 11d8 8046     		mov	r8, r0
 15391 11da 8946     		mov	r9, r1
2014:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 15392              		.loc 1 2014 0
 15393 11dc D7F88030 		ldr	r3, [r7, #128]
 15394 11e0 1B6D     		ldr	r3, [r3, #80]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15395              		.loc 1 2012 0
 15396 11e2 1846     		mov	r0, r3
 15397 11e4 FFF7FEFF 		bl	__aeabi_f2d
 15398 11e8 8246     		mov	r10, r0
 15399 11ea 8B46     		mov	fp, r1
 15400              		.loc 1 2014 0
 15401 11ec D7F88030 		ldr	r3, [r7, #128]
 15402 11f0 5B6D     		ldr	r3, [r3, #84]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15403              		.loc 1 2012 0
 15404 11f2 1846     		mov	r0, r3
 15405 11f4 FFF7FEFF 		bl	__aeabi_f2d
 15406 11f8 C7E90001 		strd	r0, [r7]
 15407              		.loc 1 2014 0
 15408 11fc D7F88030 		ldr	r3, [r7, #128]
 15409 1200 9B6D     		ldr	r3, [r3, #88]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15410              		.loc 1 2012 0
 15411 1202 1846     		mov	r0, r3
 15412 1204 FFF7FEFF 		bl	__aeabi_f2d
 15413 1208 0246     		mov	r2, r0
 15414 120a 0B46     		mov	r3, r1
 15415 120c 07F11800 		add	r0, r7, #24
 15416 1210 CDE90823 		strd	r2, [sp, #32]
 15417 1214 D7E90012 		ldrd	r1, [r7]
 15418 1218 CDE90612 		strd	r1, [sp, #24]
 15419 121c CDE904AB 		strd	r10, [sp, #16]
 15420 1220 CDE90289 		strd	r8, [sp, #8]
 15421 1224 CDE90045 		strd	r4, [sp]
 15422 1228 D7E90223 		ldrd	r2, [r7, #8]
 15423 122c 8949     		ldr	r1, .L644+12
 15424 122e FFF7FEFF 		bl	sprintf
2015:..\src/command_processing.c **** 		    strcat(info_string, str);       
 15425              		.loc 1 2015 0
 15426 1232 07F11803 		add	r3, r7, #24
 15427 1236 1946     		mov	r1, r3
 15428 1238 7869     		ldr	r0, [r7, #20]
 15429 123a FFF7FEFF 		bl	strcat
2016:..\src/command_processing.c **** 
2017:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 15430              		.loc 1 2017 0
 15431 123e D7F88030 		ldr	r3, [r7, #128]
 15432 1242 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 344


 15433 1246 1A46     		mov	r2, r3
 15434 1248 07F11803 		add	r3, r7, #24
 15435 124c 8249     		ldr	r1, .L644+16
 15436 124e 1846     		mov	r0, r3
 15437 1250 FFF7FEFF 		bl	sprintf
2018:..\src/command_processing.c ****             strcat(info_string, str);
 15438              		.loc 1 2018 0
 15439 1254 07F11803 		add	r3, r7, #24
 15440 1258 1946     		mov	r1, r3
 15441 125a 7869     		ldr	r0, [r7, #20]
 15442 125c FFF7FEFF 		bl	strcat
2019:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15443              		.loc 1 2019 0
 15444 1260 7869     		ldr	r0, [r7, #20]
 15445 1262 FFF7FEFF 		bl	strlen
 15446 1266 0346     		mov	r3, r0
 15447 1268 1A46     		mov	r2, r3
 15448 126a 7B69     		ldr	r3, [r7, #20]
 15449 126c 1344     		add	r3, r3, r2
 15450 126e 784A     		ldr	r2, .L644+8
 15451 1270 1188     		ldrh	r1, [r2]	@ unaligned
 15452 1272 9278     		ldrb	r2, [r2, #2]
 15453 1274 1980     		strh	r1, [r3]	@ unaligned
 15454 1276 9A70     		strb	r2, [r3, #2]
2020:..\src/command_processing.c **** 
2021:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 15455              		.loc 1 2021 0
 15456 1278 D7F88030 		ldr	r3, [r7, #128]
 15457 127c 596B     		ldr	r1, [r3, #52]
 15458 127e 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15459 1282 D7F88800 		ldr	r0, [r7, #136]
 15460 1286 1346     		mov	r3, r2
 15461 1288 5B00     		lsls	r3, r3, #1
 15462 128a 1344     		add	r3, r3, r2
 15463 128c 1B01     		lsls	r3, r3, #4
 15464 128e 0344     		add	r3, r3, r0
 15465 1290 03F29513 		addw	r3, r3, #405
 15466 1294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15467 1296 41FA03F2 		asr	r2, r1, r3
 15468 129a 07F11803 		add	r3, r7, #24
 15469 129e 6F49     		ldr	r1, .L644+20
 15470 12a0 1846     		mov	r0, r3
 15471 12a2 FFF7FEFF 		bl	sprintf
2022:..\src/command_processing.c ****             strcat(info_string, str);
 15472              		.loc 1 2022 0
 15473 12a6 07F11803 		add	r3, r7, #24
 15474 12aa 1946     		mov	r1, r3
 15475 12ac 7869     		ldr	r0, [r7, #20]
 15476 12ae FFF7FEFF 		bl	strcat
2023:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 15477              		.loc 1 2023 0
 15478 12b2 D7F88030 		ldr	r3, [r7, #128]
 15479 12b6 996B     		ldr	r1, [r3, #56]
 15480 12b8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15481 12bc D7F88800 		ldr	r0, [r7, #136]
 15482 12c0 1346     		mov	r3, r2
 15483 12c2 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 345


 15484 12c4 1344     		add	r3, r3, r2
 15485 12c6 1B01     		lsls	r3, r3, #4
 15486 12c8 0344     		add	r3, r3, r0
 15487 12ca 03F29513 		addw	r3, r3, #405
 15488 12ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15489 12d0 41FA03F2 		asr	r2, r1, r3
 15490 12d4 07F11803 		add	r3, r7, #24
 15491 12d8 6149     		ldr	r1, .L644+24
 15492 12da 1846     		mov	r0, r3
 15493 12dc FFF7FEFF 		bl	sprintf
2024:..\src/command_processing.c ****             strcat(info_string, str);
 15494              		.loc 1 2024 0
 15495 12e0 07F11803 		add	r3, r7, #24
 15496 12e4 1946     		mov	r1, r3
 15497 12e6 7869     		ldr	r0, [r7, #20]
 15498 12e8 FFF7FEFF 		bl	strcat
2025:..\src/command_processing.c **** 
2026:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 15499              		.loc 1 2026 0
 15500 12ec D7F88030 		ldr	r3, [r7, #128]
 15501 12f0 1A6C     		ldr	r2, [r3, #64]
 15502 12f2 D7F88030 		ldr	r3, [r7, #128]
 15503 12f6 DB6B     		ldr	r3, [r3, #60]
 15504 12f8 07F11800 		add	r0, r7, #24
 15505 12fc 5949     		ldr	r1, .L644+28
 15506 12fe FFF7FEFF 		bl	sprintf
2027:..\src/command_processing.c ****             strcat(info_string, str);
 15507              		.loc 1 2027 0
 15508 1302 07F11803 		add	r3, r7, #24
 15509 1306 1946     		mov	r1, r3
 15510 1308 7869     		ldr	r0, [r7, #20]
 15511 130a FFF7FEFF 		bl	strcat
2028:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15512              		.loc 1 2028 0
 15513 130e 7869     		ldr	r0, [r7, #20]
 15514 1310 FFF7FEFF 		bl	strlen
 15515 1314 0346     		mov	r3, r0
 15516 1316 1A46     		mov	r2, r3
 15517 1318 7B69     		ldr	r3, [r7, #20]
 15518 131a 1344     		add	r3, r3, r2
 15519 131c 4C4A     		ldr	r2, .L644+8
 15520 131e 1188     		ldrh	r1, [r2]	@ unaligned
 15521 1320 9278     		ldrb	r2, [r2, #2]
 15522 1322 1980     		strh	r1, [r3]	@ unaligned
 15523 1324 9A70     		strb	r2, [r3, #2]
2029:..\src/command_processing.c **** 
2030:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 15524              		.loc 1 2030 0
 15525 1326 D7F88030 		ldr	r3, [r7, #128]
 15526 132a B3F95C30 		ldrsh	r3, [r3, #92]
 15527 132e 1A46     		mov	r2, r3
 15528 1330 07F11803 		add	r3, r7, #24
 15529 1334 4C49     		ldr	r1, .L644+32
 15530 1336 1846     		mov	r0, r3
 15531 1338 FFF7FEFF 		bl	sprintf
2031:..\src/command_processing.c ****             strcat(info_string, str);
 15532              		.loc 1 2031 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 346


 15533 133c 07F11803 		add	r3, r7, #24
 15534 1340 1946     		mov	r1, r3
 15535 1342 7869     		ldr	r0, [r7, #20]
 15536 1344 FFF7FEFF 		bl	strcat
2032:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2033:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 15537              		.loc 1 2033 0
 15538 1348 D7F88030 		ldr	r3, [r7, #128]
 15539 134c 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 15540 1350 1A46     		mov	r2, r3
 15541 1352 07F11803 		add	r3, r7, #24
 15542 1356 4549     		ldr	r1, .L644+36
 15543 1358 1846     		mov	r0, r3
 15544 135a FFF7FEFF 		bl	sprintf
2034:..\src/command_processing.c ****             strcat(info_string, str);
 15545              		.loc 1 2034 0
 15546 135e 07F11803 		add	r3, r7, #24
 15547 1362 1946     		mov	r1, r3
 15548 1364 7869     		ldr	r0, [r7, #20]
 15549 1366 FFF7FEFF 		bl	strcat
2035:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 15550              		.loc 1 2035 0
 15551 136a D7F88030 		ldr	r3, [r7, #128]
 15552 136e 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 15553 1372 002B     		cmp	r3, #0
 15554 1374 02D0     		beq	.L588
 15555 1376 012B     		cmp	r3, #1
 15556 1378 1DD0     		beq	.L589
2036:..\src/command_processing.c ****                 case DRIVER_MC33887:
2037:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2038:..\src/command_processing.c ****                     break;
2039:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2040:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2041:..\src/command_processing.c ****                     break;
2042:..\src/command_processing.c ****                 default:
2043:..\src/command_processing.c ****                     break;
 15557              		.loc 1 2043 0
 15558 137a 39E0     		b	.L591
 15559              	.L588:
2037:..\src/command_processing.c ****                     break;
 15560              		.loc 1 2037 0
 15561 137c 7869     		ldr	r0, [r7, #20]
 15562 137e FFF7FEFF 		bl	strlen
 15563 1382 0346     		mov	r3, r0
 15564 1384 1A46     		mov	r2, r3
 15565 1386 7B69     		ldr	r3, [r7, #20]
 15566 1388 1344     		add	r3, r3, r2
 15567 138a 394A     		ldr	r2, .L644+40
 15568 138c 1446     		mov	r4, r2
 15569 138e 9E46     		mov	lr, r3
 15570 1390 04F1200C 		add	ip, r4, #32
 15571              	.L590:
 15572 1394 7546     		mov	r5, lr
 15573 1396 2646     		mov	r6, r4
 15574 1398 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15575 139a 2860     		str	r0, [r5]	@ unaligned
 15576 139c 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 347


 15577 139e AA60     		str	r2, [r5, #8]	@ unaligned
 15578 13a0 EB60     		str	r3, [r5, #12]	@ unaligned
 15579 13a2 1034     		adds	r4, r4, #16
 15580 13a4 0EF1100E 		add	lr, lr, #16
 15581 13a8 6445     		cmp	r4, ip
 15582 13aa F3D1     		bne	.L590
 15583 13ac 7246     		mov	r2, lr
 15584 13ae 2346     		mov	r3, r4
 15585 13b0 1B88     		ldrh	r3, [r3]	@ unaligned
 15586 13b2 1380     		strh	r3, [r2]	@ unaligned
2038:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 15587              		.loc 1 2038 0
 15588 13b4 1CE0     		b	.L591
 15589              	.L589:
2040:..\src/command_processing.c ****                     break;
 15590              		.loc 1 2040 0
 15591 13b6 7869     		ldr	r0, [r7, #20]
 15592 13b8 FFF7FEFF 		bl	strlen
 15593 13bc 0346     		mov	r3, r0
 15594 13be 1A46     		mov	r2, r3
 15595 13c0 7B69     		ldr	r3, [r7, #20]
 15596 13c2 1344     		add	r3, r3, r2
 15597 13c4 2B4A     		ldr	r2, .L644+44
 15598 13c6 1446     		mov	r4, r2
 15599 13c8 9E46     		mov	lr, r3
 15600 13ca 04F1200C 		add	ip, r4, #32
 15601              	.L592:
 15602 13ce 7546     		mov	r5, lr
 15603 13d0 2646     		mov	r6, r4
 15604 13d2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15605 13d4 2860     		str	r0, [r5]	@ unaligned
 15606 13d6 6960     		str	r1, [r5, #4]	@ unaligned
 15607 13d8 AA60     		str	r2, [r5, #8]	@ unaligned
 15608 13da EB60     		str	r3, [r5, #12]	@ unaligned
 15609 13dc 1034     		adds	r4, r4, #16
 15610 13de 0EF1100E 		add	lr, lr, #16
 15611 13e2 6445     		cmp	r4, ip
 15612 13e4 F3D1     		bne	.L592
 15613 13e6 7346     		mov	r3, lr
 15614 13e8 2246     		mov	r2, r4
 15615 13ea 1068     		ldr	r0, [r2]	@ unaligned
 15616 13ec 1860     		str	r0, [r3]	@ unaligned
2041:..\src/command_processing.c ****                 default:
 15617              		.loc 1 2041 0
 15618 13ee 00BF     		nop
 15619              	.L591:
2044:..\src/command_processing.c ****             }
2045:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 15620              		.loc 1 2045 0
 15621 13f0 D7F88030 		ldr	r3, [r7, #128]
 15622 13f4 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 15623 13f8 1A46     		mov	r2, r3
 15624 13fa 07F11803 		add	r3, r7, #24
 15625 13fe 1E49     		ldr	r1, .L644+48
 15626 1400 1846     		mov	r0, r3
 15627 1402 FFF7FEFF 		bl	sprintf
2046:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 348


 15628              		.loc 1 2046 0
 15629 1406 07F11803 		add	r3, r7, #24
 15630 140a 1946     		mov	r1, r3
 15631 140c 7869     		ldr	r0, [r7, #20]
 15632 140e FFF7FEFF 		bl	strcat
2047:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 15633              		.loc 1 2047 0
 15634 1412 D7F88030 		ldr	r3, [r7, #128]
 15635 1416 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15636 141a 002B     		cmp	r3, #0
 15637 141c 30D0     		beq	.L593
2048:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 15638              		.loc 1 2048 0
 15639 141e 7869     		ldr	r0, [r7, #20]
 15640 1420 FFF7FEFF 		bl	strlen
 15641 1424 0346     		mov	r3, r0
 15642 1426 1A46     		mov	r2, r3
 15643 1428 7B69     		ldr	r3, [r7, #20]
 15644 142a 1344     		add	r3, r3, r2
 15645 142c 134A     		ldr	r2, .L644+52
 15646 142e 1D46     		mov	r5, r3
 15647 1430 1446     		mov	r4, r2
 15648 1432 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15649 1434 2860     		str	r0, [r5]	@ unaligned
 15650 1436 6960     		str	r1, [r5, #4]	@ unaligned
 15651 1438 AA60     		str	r2, [r5, #8]	@ unaligned
 15652 143a EB60     		str	r3, [r5, #12]	@ unaligned
 15653 143c 07CC     		ldmia	r4!, {r0, r1, r2}
 15654 143e 2861     		str	r0, [r5, #16]	@ unaligned
 15655 1440 6961     		str	r1, [r5, #20]	@ unaligned
 15656 1442 AA61     		str	r2, [r5, #24]	@ unaligned
 15657 1444 33E0     		b	.L594
 15658              	.L645:
 15659 1446 00BF     		.align	2
 15660              	.L644:
 15661 1448 80120000 		.word	.LC187
 15662 144c 480F0000 		.word	.LC154
 15663 1450 840D0000 		.word	.LC125
 15664 1454 84120000 		.word	.LC188
 15665 1458 B4120000 		.word	.LC189
 15666 145c D0120000 		.word	.LC190
 15667 1460 F4120000 		.word	.LC191
 15668 1464 04130000 		.word	.LC192
 15669 1468 20130000 		.word	.LC193
 15670 146c 34130000 		.word	.LC194
 15671 1470 60130000 		.word	.LC195
 15672 1474 84130000 		.word	.LC196
 15673 1478 A8130000 		.word	.LC197
 15674 147c C8130000 		.word	.LC198
 15675              	.L593:
2049:..\src/command_processing.c ****             else
2050:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 15676              		.loc 1 2050 0
 15677 1480 7869     		ldr	r0, [r7, #20]
 15678 1482 FFF7FEFF 		bl	strlen
 15679 1486 0346     		mov	r3, r0
 15680 1488 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 349


 15681 148a 7B69     		ldr	r3, [r7, #20]
 15682 148c 1344     		add	r3, r3, r2
 15683 148e A04A     		ldr	r2, .L646
 15684 1490 1D46     		mov	r5, r3
 15685 1492 1446     		mov	r4, r2
 15686 1494 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15687 1496 2860     		str	r0, [r5]	@ unaligned
 15688 1498 6960     		str	r1, [r5, #4]	@ unaligned
 15689 149a AA60     		str	r2, [r5, #8]	@ unaligned
 15690 149c EB60     		str	r3, [r5, #12]	@ unaligned
 15691 149e 03CC     		ldmia	r4!, {r0, r1}
 15692 14a0 2861     		str	r0, [r5, #16]	@ unaligned
 15693 14a2 6961     		str	r1, [r5, #20]	@ unaligned
 15694 14a4 2388     		ldrh	r3, [r4]	@ unaligned
 15695 14a6 A278     		ldrb	r2, [r4, #2]
 15696 14a8 2B83     		strh	r3, [r5, #24]	@ unaligned
 15697 14aa 1346     		mov	r3, r2
 15698 14ac AB76     		strb	r3, [r5, #26]
 15699              	.L594:
2051:..\src/command_processing.c **** #endif                
2052:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15700              		.loc 1 2052 0 discriminator 2
 15701 14ae 7869     		ldr	r0, [r7, #20]
 15702 14b0 FFF7FEFF 		bl	strlen
 15703 14b4 0346     		mov	r3, r0
 15704 14b6 1A46     		mov	r2, r3
 15705 14b8 7B69     		ldr	r3, [r7, #20]
 15706 14ba 1344     		add	r3, r3, r2
 15707 14bc 954A     		ldr	r2, .L646+4
 15708 14be 1188     		ldrh	r1, [r2]	@ unaligned
 15709 14c0 9278     		ldrb	r2, [r2, #2]
 15710 14c2 1980     		strh	r1, [r3]	@ unaligned
 15711 14c4 9A70     		strb	r2, [r3, #2]
 15712              	.LBE18:
1800:..\src/command_processing.c ****             
 15713              		.loc 1 1800 0 discriminator 2
 15714 14c6 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 15715 14ca 0133     		adds	r3, r3, #1
 15716 14cc 87F89330 		strb	r3, [r7, #147]
 15717              	.L535:
1800:..\src/command_processing.c ****             
 15718              		.loc 1 1800 0 is_stmt 0 discriminator 1
 15719 14d0 D7F88830 		ldr	r3, [r7, #136]
 15720 14d4 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 15721 14d8 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 15722 14dc 9A42     		cmp	r2, r3
 15723 14de 7EF6B9AE 		bls	.L595
 15724              	.LBE17:
2053:..\src/command_processing.c ****         }
2054:..\src/command_processing.c ****       
2055:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 15725              		.loc 1 2055 0 is_stmt 1
 15726 14e2 7869     		ldr	r0, [r7, #20]
 15727 14e4 FFF7FEFF 		bl	strlen
 15728 14e8 0346     		mov	r3, r0
 15729 14ea 1A46     		mov	r2, r3
 15730 14ec 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 350


 15731 14ee 1344     		add	r3, r3, r2
 15732 14f0 894A     		ldr	r2, .L646+8
 15733 14f2 1D46     		mov	r5, r3
 15734 14f4 1446     		mov	r4, r2
 15735 14f6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15736 14f8 2860     		str	r0, [r5]	@ unaligned
 15737 14fa 6960     		str	r1, [r5, #4]	@ unaligned
 15738 14fc AA60     		str	r2, [r5, #8]	@ unaligned
 15739 14fe EB60     		str	r3, [r5, #12]	@ unaligned
 15740 1500 2068     		ldr	r0, [r4]	@ unaligned
 15741 1502 2861     		str	r0, [r5, #16]	@ unaligned
2056:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 15742              		.loc 1 2056 0
 15743 1504 D7F88830 		ldr	r3, [r7, #136]
 15744 1508 B3F8F031 		ldrh	r3, [r3, #496]
 15745 150c 1A46     		mov	r2, r3
 15746 150e D7F88830 		ldr	r3, [r7, #136]
 15747 1512 B3F8F231 		ldrh	r3, [r3, #498]
 15748 1516 07F11800 		add	r0, r7, #24
 15749 151a 8049     		ldr	r1, .L646+12
 15750 151c FFF7FEFF 		bl	sprintf
2057:..\src/command_processing.c ****         strcat(info_string, str);
 15751              		.loc 1 2057 0
 15752 1520 07F11803 		add	r3, r7, #24
 15753 1524 1946     		mov	r1, r3
 15754 1526 7869     		ldr	r0, [r7, #20]
 15755 1528 FFF7FEFF 		bl	strcat
2058:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15756              		.loc 1 2058 0
 15757 152c 7869     		ldr	r0, [r7, #20]
 15758 152e FFF7FEFF 		bl	strlen
 15759 1532 0346     		mov	r3, r0
 15760 1534 1A46     		mov	r2, r3
 15761 1536 7B69     		ldr	r3, [r7, #20]
 15762 1538 1344     		add	r3, r3, r2
 15763 153a 764A     		ldr	r2, .L646+4
 15764 153c 1188     		ldrh	r1, [r2]	@ unaligned
 15765 153e 9278     		ldrb	r2, [r2, #2]
 15766 1540 1980     		strh	r1, [r3]	@ unaligned
 15767 1542 9A70     		strb	r2, [r3, #2]
2059:..\src/command_processing.c **** 
2060:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 15768              		.loc 1 2060 0
 15769 1544 D7F88830 		ldr	r3, [r7, #136]
 15770 1548 D3F8F421 		ldr	r2, [r3, #500]
 15771 154c D7F88830 		ldr	r3, [r7, #136]
 15772 1550 D3F8F831 		ldr	r3, [r3, #504]
 15773 1554 07F11800 		add	r0, r7, #24
 15774 1558 7149     		ldr	r1, .L646+16
 15775 155a FFF7FEFF 		bl	sprintf
2061:..\src/command_processing.c ****         strcat(info_string, str);
 15776              		.loc 1 2061 0
 15777 155e 07F11803 		add	r3, r7, #24
 15778 1562 1946     		mov	r1, r3
 15779 1564 7869     		ldr	r0, [r7, #20]
 15780 1566 FFF7FEFF 		bl	strcat
2062:..\src/command_processing.c ****         strcat(info_string, "\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 351


 15781              		.loc 1 2062 0
 15782 156a 7869     		ldr	r0, [r7, #20]
 15783 156c FFF7FEFF 		bl	strlen
 15784 1570 0346     		mov	r3, r0
 15785 1572 1A46     		mov	r2, r3
 15786 1574 7B69     		ldr	r3, [r7, #20]
 15787 1576 1344     		add	r3, r3, r2
 15788 1578 664A     		ldr	r2, .L646+4
 15789 157a 1188     		ldrh	r1, [r2]	@ unaligned
 15790 157c 9278     		ldrb	r2, [r2, #2]
 15791 157e 1980     		strh	r1, [r3]	@ unaligned
 15792 1580 9A70     		strb	r2, [r3, #2]
2063:..\src/command_processing.c **** 
2064:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 15793              		.loc 1 2064 0
 15794 1582 D7F88830 		ldr	r3, [r7, #136]
 15795 1586 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 15796 158a 002B     		cmp	r3, #0
 15797 158c 13D0     		beq	.L596
2065:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 15798              		.loc 1 2065 0
 15799 158e 7869     		ldr	r0, [r7, #20]
 15800 1590 FFF7FEFF 		bl	strlen
 15801 1594 0346     		mov	r3, r0
 15802 1596 1A46     		mov	r2, r3
 15803 1598 7B69     		ldr	r3, [r7, #20]
 15804 159a 1344     		add	r3, r3, r2
 15805 159c 614A     		ldr	r2, .L646+20
 15806 159e 1D46     		mov	r5, r3
 15807 15a0 1446     		mov	r4, r2
 15808 15a2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15809 15a4 2860     		str	r0, [r5]	@ unaligned
 15810 15a6 6960     		str	r1, [r5, #4]	@ unaligned
 15811 15a8 AA60     		str	r2, [r5, #8]	@ unaligned
 15812 15aa EB60     		str	r3, [r5, #12]	@ unaligned
 15813 15ac 2068     		ldr	r0, [r4]	@ unaligned
 15814 15ae 2861     		str	r0, [r5, #16]	@ unaligned
 15815 15b0 2379     		ldrb	r3, [r4, #4]
 15816 15b2 2B75     		strb	r3, [r5, #20]
 15817 15b4 10E0     		b	.L597
 15818              	.L596:
2066:..\src/command_processing.c ****         else
2067:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 15819              		.loc 1 2067 0
 15820 15b6 7869     		ldr	r0, [r7, #20]
 15821 15b8 FFF7FEFF 		bl	strlen
 15822 15bc 0346     		mov	r3, r0
 15823 15be 1A46     		mov	r2, r3
 15824 15c0 7B69     		ldr	r3, [r7, #20]
 15825 15c2 1344     		add	r3, r3, r2
 15826 15c4 584A     		ldr	r2, .L646+24
 15827 15c6 1D46     		mov	r5, r3
 15828 15c8 1446     		mov	r4, r2
 15829 15ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15830 15cc 2860     		str	r0, [r5]	@ unaligned
 15831 15ce 6960     		str	r1, [r5, #4]	@ unaligned
 15832 15d0 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 352


 15833 15d2 EB60     		str	r3, [r5, #12]	@ unaligned
 15834 15d4 2068     		ldr	r0, [r4]	@ unaligned
 15835 15d6 2861     		str	r0, [r5, #16]	@ unaligned
 15836              	.L597:
2068:..\src/command_processing.c ****             
2069:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 15837              		.loc 1 2069 0
 15838 15d8 D7F88830 		ldr	r3, [r7, #136]
 15839 15dc 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 15840 15e0 002B     		cmp	r3, #0
 15841 15e2 17D0     		beq	.L598
2070:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 15842              		.loc 1 2070 0
 15843 15e4 7869     		ldr	r0, [r7, #20]
 15844 15e6 FFF7FEFF 		bl	strlen
 15845 15ea 0346     		mov	r3, r0
 15846 15ec 1A46     		mov	r2, r3
 15847 15ee 7B69     		ldr	r3, [r7, #20]
 15848 15f0 1344     		add	r3, r3, r2
 15849 15f2 4E4A     		ldr	r2, .L646+28
 15850 15f4 1D46     		mov	r5, r3
 15851 15f6 1446     		mov	r4, r2
 15852 15f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15853 15fa 2860     		str	r0, [r5]	@ unaligned
 15854 15fc 6960     		str	r1, [r5, #4]	@ unaligned
 15855 15fe AA60     		str	r2, [r5, #8]	@ unaligned
 15856 1600 EB60     		str	r3, [r5, #12]	@ unaligned
 15857 1602 03CC     		ldmia	r4!, {r0, r1}
 15858 1604 2861     		str	r0, [r5, #16]	@ unaligned
 15859 1606 6961     		str	r1, [r5, #20]	@ unaligned
 15860 1608 2388     		ldrh	r3, [r4]	@ unaligned
 15861 160a A278     		ldrb	r2, [r4, #2]
 15862 160c 2B83     		strh	r3, [r5, #24]	@ unaligned
 15863 160e 1346     		mov	r3, r2
 15864 1610 AB76     		strb	r3, [r5, #26]
 15865 1612 13E0     		b	.L599
 15866              	.L598:
2071:..\src/command_processing.c ****         else
2072:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 15867              		.loc 1 2072 0
 15868 1614 7869     		ldr	r0, [r7, #20]
 15869 1616 FFF7FEFF 		bl	strlen
 15870 161a 0346     		mov	r3, r0
 15871 161c 1A46     		mov	r2, r3
 15872 161e 7B69     		ldr	r3, [r7, #20]
 15873 1620 1344     		add	r3, r3, r2
 15874 1622 434A     		ldr	r2, .L646+32
 15875 1624 1D46     		mov	r5, r3
 15876 1626 1446     		mov	r4, r2
 15877 1628 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15878 162a 2860     		str	r0, [r5]	@ unaligned
 15879 162c 6960     		str	r1, [r5, #4]	@ unaligned
 15880 162e AA60     		str	r2, [r5, #8]	@ unaligned
 15881 1630 EB60     		str	r3, [r5, #12]	@ unaligned
 15882 1632 03CC     		ldmia	r4!, {r0, r1}
 15883 1634 2861     		str	r0, [r5, #16]	@ unaligned
 15884 1636 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 353


 15885 1638 2388     		ldrh	r3, [r4]	@ unaligned
 15886 163a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15887              	.L599:
2073:..\src/command_processing.c **** 
2074:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 15888              		.loc 1 2074 0
 15889 163c D7F88830 		ldr	r3, [r7, #136]
 15890 1640 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 15891 1644 1A46     		mov	r2, r3
 15892 1646 07F11803 		add	r3, r7, #24
 15893 164a 3A49     		ldr	r1, .L646+36
 15894 164c 1846     		mov	r0, r3
 15895 164e FFF7FEFF 		bl	sprintf
2075:..\src/command_processing.c ****         strcat(info_string, str);
 15896              		.loc 1 2075 0
 15897 1652 07F11803 		add	r3, r7, #24
 15898 1656 1946     		mov	r1, r3
 15899 1658 7869     		ldr	r0, [r7, #20]
 15900 165a FFF7FEFF 		bl	strcat
2076:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15901              		.loc 1 2076 0
 15902 165e 7869     		ldr	r0, [r7, #20]
 15903 1660 FFF7FEFF 		bl	strlen
 15904 1664 0346     		mov	r3, r0
 15905 1666 1A46     		mov	r2, r3
 15906 1668 7B69     		ldr	r3, [r7, #20]
 15907 166a 1344     		add	r3, r3, r2
 15908 166c 294A     		ldr	r2, .L646+4
 15909 166e 1188     		ldrh	r1, [r2]	@ unaligned
 15910 1670 9278     		ldrb	r2, [r2, #2]
 15911 1672 1980     		strh	r1, [r3]	@ unaligned
 15912 1674 9A70     		strb	r2, [r3, #2]
2077:..\src/command_processing.c **** 
2078:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 15913              		.loc 1 2078 0
 15914 1676 D7F88830 		ldr	r3, [r7, #136]
 15915 167a 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 15916 167e 012B     		cmp	r3, #1
 15917 1680 40F08980 		bne	.L600
2079:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 15918              		.loc 1 2079 0
 15919 1684 7869     		ldr	r0, [r7, #20]
 15920 1686 FFF7FEFF 		bl	strlen
 15921 168a 0346     		mov	r3, r0
 15922 168c 1A46     		mov	r2, r3
 15923 168e 7B69     		ldr	r3, [r7, #20]
 15924 1690 1344     		add	r3, r3, r2
 15925 1692 294A     		ldr	r2, .L646+40
 15926 1694 1C46     		mov	r4, r3
 15927 1696 1546     		mov	r5, r2
 15928 1698 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15929 169a 2060     		str	r0, [r4]	@ unaligned
 15930 169c 6160     		str	r1, [r4, #4]	@ unaligned
 15931 169e A260     		str	r2, [r4, #8]	@ unaligned
 15932 16a0 E360     		str	r3, [r4, #12]	@ unaligned
 15933 16a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15934 16a4 2061     		str	r0, [r4, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 354


 15935 16a6 6161     		str	r1, [r4, #20]	@ unaligned
 15936 16a8 A261     		str	r2, [r4, #24]	@ unaligned
 15937 16aa E361     		str	r3, [r4, #28]	@ unaligned
2080:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 15938              		.loc 1 2080 0
 15939 16ac 0023     		movs	r3, #0
 15940 16ae C7F89430 		str	r3, [r7, #148]
 15941 16b2 25E0     		b	.L601
 15942              	.L602:
2081:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 15943              		.loc 1 2081 0 discriminator 3
 15944 16b4 D7F89430 		ldr	r3, [r7, #148]
 15945 16b8 591C     		adds	r1, r3, #1
 15946 16ba 204A     		ldr	r2, .L646+44
 15947 16bc D7F89430 		ldr	r3, [r7, #148]
 15948 16c0 0233     		adds	r3, r3, #2
 15949 16c2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15950 16c6 07F11800 		add	r0, r7, #24
 15951 16ca 0A46     		mov	r2, r1
 15952 16cc 1C49     		ldr	r1, .L646+48
 15953 16ce FFF7FEFF 		bl	sprintf
2082:..\src/command_processing.c ****                 strcat(info_string, str);
 15954              		.loc 1 2082 0 discriminator 3
 15955 16d2 07F11803 		add	r3, r7, #24
 15956 16d6 1946     		mov	r1, r3
 15957 16d8 7869     		ldr	r0, [r7, #20]
 15958 16da FFF7FEFF 		bl	strcat
2083:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 15959              		.loc 1 2083 0 discriminator 3
 15960 16de 7869     		ldr	r0, [r7, #20]
 15961 16e0 FFF7FEFF 		bl	strlen
 15962 16e4 0346     		mov	r3, r0
 15963 16e6 1A46     		mov	r2, r3
 15964 16e8 7B69     		ldr	r3, [r7, #20]
 15965 16ea 1344     		add	r3, r3, r2
 15966 16ec 094A     		ldr	r2, .L646+4
 15967 16ee 1188     		ldrh	r1, [r2]	@ unaligned
 15968 16f0 9278     		ldrb	r2, [r2, #2]
 15969 16f2 1980     		strh	r1, [r3]	@ unaligned
 15970 16f4 9A70     		strb	r2, [r3, #2]
2080:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 15971              		.loc 1 2080 0 discriminator 3
 15972 16f6 D7F89430 		ldr	r3, [r7, #148]
 15973 16fa 0133     		adds	r3, r3, #1
 15974 16fc C7F89430 		str	r3, [r7, #148]
 15975              	.L601:
2080:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 15976              		.loc 1 2080 0 is_stmt 0 discriminator 1
 15977 1700 D7F89430 		ldr	r3, [r7, #148]
 15978 1704 052B     		cmp	r3, #5
 15979 1706 D5DD     		ble	.L602
2084:..\src/command_processing.c ****             }
2085:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 15980              		.loc 1 2085 0 is_stmt 1
 15981 1708 0023     		movs	r3, #0
 15982 170a C7F89430 		str	r3, [r7, #148]
 15983 170e 3EE0     		b	.L603
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 355


 15984              	.L647:
 15985              		.align	2
 15986              	.L646:
 15987 1710 E4130000 		.word	.LC199
 15988 1714 840D0000 		.word	.LC125
 15989 1718 00140000 		.word	.LC200
 15990 171c 14140000 		.word	.LC201
 15991 1720 38140000 		.word	.LC202
 15992 1724 5C140000 		.word	.LC203
 15993 1728 74140000 		.word	.LC204
 15994 172c 88140000 		.word	.LC205
 15995 1730 A4140000 		.word	.LC206
 15996 1734 C0140000 		.word	.LC207
 15997 1738 D4140000 		.word	.LC208
 15998 173c 00000000 		.word	g_emg_meas
 15999 1740 F4140000 		.word	.LC209
 16000              	.L604:
2086:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16001              		.loc 1 2086 0 discriminator 3
 16002 1744 D7F89430 		ldr	r3, [r7, #148]
 16003 1748 591C     		adds	r1, r3, #1
 16004 174a C64A     		ldr	r2, .L648
 16005 174c D7F89430 		ldr	r3, [r7, #148]
 16006 1750 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16007 1754 07F11800 		add	r0, r7, #24
 16008 1758 0A46     		mov	r2, r1
 16009 175a C349     		ldr	r1, .L648+4
 16010 175c FFF7FEFF 		bl	sprintf
2087:..\src/command_processing.c ****                 strcat(info_string, str);
 16011              		.loc 1 2087 0 discriminator 3
 16012 1760 07F11803 		add	r3, r7, #24
 16013 1764 1946     		mov	r1, r3
 16014 1766 7869     		ldr	r0, [r7, #20]
 16015 1768 FFF7FEFF 		bl	strcat
2088:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16016              		.loc 1 2088 0 discriminator 3
 16017 176c 7869     		ldr	r0, [r7, #20]
 16018 176e FFF7FEFF 		bl	strlen
 16019 1772 0346     		mov	r3, r0
 16020 1774 1A46     		mov	r2, r3
 16021 1776 7B69     		ldr	r3, [r7, #20]
 16022 1778 1344     		add	r3, r3, r2
 16023 177a BC4A     		ldr	r2, .L648+8
 16024 177c 1188     		ldrh	r1, [r2]	@ unaligned
 16025 177e 9278     		ldrb	r2, [r2, #2]
 16026 1780 1980     		strh	r1, [r3]	@ unaligned
 16027 1782 9A70     		strb	r2, [r3, #2]
2085:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16028              		.loc 1 2085 0 discriminator 3
 16029 1784 D7F89430 		ldr	r3, [r7, #148]
 16030 1788 0133     		adds	r3, r3, #1
 16031 178a C7F89430 		str	r3, [r7, #148]
 16032              	.L603:
2085:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16033              		.loc 1 2085 0 is_stmt 0 discriminator 1
 16034 178e D7F89430 		ldr	r3, [r7, #148]
 16035 1792 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 356


 16036 1794 D6DD     		ble	.L604
 16037              	.L600:
2089:..\src/command_processing.c ****             }
2090:..\src/command_processing.c ****         }
2091:..\src/command_processing.c ****         
2092:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 16038              		.loc 1 2092 0 is_stmt 1
 16039 1796 D7F88830 		ldr	r3, [r7, #136]
 16040 179a 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 16041 179e 002B     		cmp	r3, #0
 16042 17a0 63D0     		beq	.L605
2093:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 16043              		.loc 1 2093 0
 16044 17a2 D7F88830 		ldr	r3, [r7, #136]
 16045 17a6 D3F8A422 		ldr	r2, [r3, #676]
 16046 17aa 07F11803 		add	r3, r7, #24
 16047 17ae B049     		ldr	r1, .L648+12
 16048 17b0 1846     		mov	r0, r3
 16049 17b2 FFF7FEFF 		bl	sprintf
2094:..\src/command_processing.c ****             strcat(info_string, str);
 16050              		.loc 1 2094 0
 16051 17b6 07F11803 		add	r3, r7, #24
 16052 17ba 1946     		mov	r1, r3
 16053 17bc 7869     		ldr	r0, [r7, #20]
 16054 17be FFF7FEFF 		bl	strcat
2095:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16055              		.loc 1 2095 0
 16056 17c2 7869     		ldr	r0, [r7, #20]
 16057 17c4 FFF7FEFF 		bl	strlen
 16058 17c8 0346     		mov	r3, r0
 16059 17ca 1A46     		mov	r2, r3
 16060 17cc 7B69     		ldr	r3, [r7, #20]
 16061 17ce 1344     		add	r3, r3, r2
 16062 17d0 A64A     		ldr	r2, .L648+8
 16063 17d2 1188     		ldrh	r1, [r2]	@ unaligned
 16064 17d4 9278     		ldrb	r2, [r2, #2]
 16065 17d6 1980     		strh	r1, [r3]	@ unaligned
 16066 17d8 9A70     		strb	r2, [r3, #2]
2096:..\src/command_processing.c ****             
2097:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 16067              		.loc 1 2097 0
 16068 17da D7F88830 		ldr	r3, [r7, #136]
 16069 17de D3F8A822 		ldr	r2, [r3, #680]
 16070 17e2 07F11803 		add	r3, r7, #24
 16071 17e6 A349     		ldr	r1, .L648+16
 16072 17e8 1846     		mov	r0, r3
 16073 17ea FFF7FEFF 		bl	sprintf
2098:..\src/command_processing.c ****             strcat(info_string, str);
 16074              		.loc 1 2098 0
 16075 17ee 07F11803 		add	r3, r7, #24
 16076 17f2 1946     		mov	r1, r3
 16077 17f4 7869     		ldr	r0, [r7, #20]
 16078 17f6 FFF7FEFF 		bl	strcat
2099:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16079              		.loc 1 2099 0
 16080 17fa 7869     		ldr	r0, [r7, #20]
 16081 17fc FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 357


 16082 1800 0346     		mov	r3, r0
 16083 1802 1A46     		mov	r2, r3
 16084 1804 7B69     		ldr	r3, [r7, #20]
 16085 1806 1344     		add	r3, r3, r2
 16086 1808 984A     		ldr	r2, .L648+8
 16087 180a 1188     		ldrh	r1, [r2]	@ unaligned
 16088 180c 9278     		ldrb	r2, [r2, #2]
 16089 180e 1980     		strh	r1, [r3]	@ unaligned
 16090 1810 9A70     		strb	r2, [r3, #2]
2100:..\src/command_processing.c ****             
2101:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 16091              		.loc 1 2101 0
 16092 1812 D7F88830 		ldr	r3, [r7, #136]
 16093 1816 D3F8A022 		ldr	r2, [r3, #672]
 16094 181a D7F88830 		ldr	r3, [r7, #136]
 16095 181e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 16096 1822 1846     		mov	r0, r3
 16097 1824 D7F88810 		ldr	r1, [r7, #136]
 16098 1828 0346     		mov	r3, r0
 16099 182a 5B00     		lsls	r3, r3, #1
 16100 182c 0344     		add	r3, r3, r0
 16101 182e 1B01     		lsls	r3, r3, #4
 16102 1830 0B44     		add	r3, r3, r1
 16103 1832 03F29513 		addw	r3, r3, #405
 16104 1836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16105 1838 1A41     		asrs	r2, r2, r3
 16106 183a 07F11803 		add	r3, r7, #24
 16107 183e 8E49     		ldr	r1, .L648+20
 16108 1840 1846     		mov	r0, r3
 16109 1842 FFF7FEFF 		bl	sprintf
2102:..\src/command_processing.c ****             strcat(info_string, str);
 16110              		.loc 1 2102 0
 16111 1846 07F11803 		add	r3, r7, #24
 16112 184a 1946     		mov	r1, r3
 16113 184c 7869     		ldr	r0, [r7, #20]
 16114 184e FFF7FEFF 		bl	strcat
2103:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 16115              		.loc 1 2103 0
 16116 1852 7869     		ldr	r0, [r7, #20]
 16117 1854 FFF7FEFF 		bl	strlen
 16118 1858 0346     		mov	r3, r0
 16119 185a 1A46     		mov	r2, r3
 16120 185c 7B69     		ldr	r3, [r7, #20]
 16121 185e 1344     		add	r3, r3, r2
 16122 1860 824A     		ldr	r2, .L648+8
 16123 1862 1188     		ldrh	r1, [r2]	@ unaligned
 16124 1864 9278     		ldrb	r2, [r2, #2]
 16125 1866 1980     		strh	r1, [r3]	@ unaligned
 16126 1868 9A70     		strb	r2, [r3, #2]
 16127              	.L605:
2104:..\src/command_processing.c ****         }
2105:..\src/command_processing.c **** 
2106:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 16128              		.loc 1 2106 0
 16129 186a D7F88830 		ldr	r3, [r7, #136]
 16130 186e 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 16131 1872 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 358


 16132 1874 00F0CF81 		beq	.L606
2107:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 16133              		.loc 1 2107 0
 16134 1878 804B     		ldr	r3, .L648+24
 16135 187a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16136 187c 1A46     		mov	r2, r3
 16137 187e 07F11803 		add	r3, r7, #24
 16138 1882 7F49     		ldr	r1, .L648+28
 16139 1884 1846     		mov	r0, r3
 16140 1886 FFF7FEFF 		bl	sprintf
2108:..\src/command_processing.c ****             strcat(info_string, str);
 16141              		.loc 1 2108 0
 16142 188a 07F11803 		add	r3, r7, #24
 16143 188e 1946     		mov	r1, r3
 16144 1890 7869     		ldr	r0, [r7, #20]
 16145 1892 FFF7FEFF 		bl	strcat
2109:..\src/command_processing.c ****             
2110:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16146              		.loc 1 2110 0
 16147 1896 7869     		ldr	r0, [r7, #20]
 16148 1898 FFF7FEFF 		bl	strlen
 16149 189c 0346     		mov	r3, r0
 16150 189e 1A46     		mov	r2, r3
 16151 18a0 7B69     		ldr	r3, [r7, #20]
 16152 18a2 1344     		add	r3, r3, r2
 16153 18a4 714A     		ldr	r2, .L648+8
 16154 18a6 1188     		ldrh	r1, [r2]	@ unaligned
 16155 18a8 9278     		ldrb	r2, [r2, #2]
 16156 18aa 1980     		strh	r1, [r3]	@ unaligned
 16157 18ac 9A70     		strb	r2, [r3, #2]
2111:..\src/command_processing.c ****             
2112:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 16158              		.loc 1 2112 0
 16159 18ae 7869     		ldr	r0, [r7, #20]
 16160 18b0 FFF7FEFF 		bl	strlen
 16161 18b4 0346     		mov	r3, r0
 16162 18b6 1A46     		mov	r2, r3
 16163 18b8 7B69     		ldr	r3, [r7, #20]
 16164 18ba 1344     		add	r3, r3, r2
 16165 18bc 714A     		ldr	r2, .L648+32
 16166 18be 1D46     		mov	r5, r3
 16167 18c0 1446     		mov	r4, r2
 16168 18c2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16169 18c4 2860     		str	r0, [r5]	@ unaligned
 16170 18c6 6960     		str	r1, [r5, #4]	@ unaligned
 16171 18c8 AA60     		str	r2, [r5, #8]	@ unaligned
 16172 18ca EB60     		str	r3, [r5, #12]	@ unaligned
 16173 18cc 2068     		ldr	r0, [r4]	@ unaligned
 16174 18ce 2861     		str	r0, [r5, #16]	@ unaligned
 16175 18d0 2379     		ldrb	r3, [r4, #4]
 16176 18d2 2B75     		strb	r3, [r5, #20]
2113:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 16177              		.loc 1 2113 0
 16178 18d4 0023     		movs	r3, #0
 16179 18d6 C7F89430 		str	r3, [r7, #148]
 16180 18da 85E1     		b	.L607
 16181              	.L618:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 359


2114:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16182              		.loc 1 2114 0
 16183 18dc 6A4A     		ldr	r2, .L648+36
 16184 18de D7F89430 		ldr	r3, [r7, #148]
 16185 18e2 1344     		add	r3, r3, r2
 16186 18e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16187 18e6 07F11800 		add	r0, r7, #24
 16188 18ea D7F89420 		ldr	r2, [r7, #148]
 16189 18ee 6749     		ldr	r1, .L648+40
 16190 18f0 FFF7FEFF 		bl	sprintf
2115:..\src/command_processing.c ****                 strcat(info_string, str);
 16191              		.loc 1 2115 0
 16192 18f4 07F11803 		add	r3, r7, #24
 16193 18f8 1946     		mov	r1, r3
 16194 18fa 7869     		ldr	r0, [r7, #20]
 16195 18fc FFF7FEFF 		bl	strcat
2116:..\src/command_processing.c ****                 
2117:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 16196              		.loc 1 2117 0
 16197 1900 07F11803 		add	r3, r7, #24
 16198 1904 624A     		ldr	r2, .L648+44
 16199 1906 1C46     		mov	r4, r3
 16200 1908 1546     		mov	r5, r2
 16201 190a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16202 190c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16203 190e 2B68     		ldr	r3, [r5]
 16204 1910 2380     		strh	r3, [r4]	@ movhi
2118:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 16205              		.loc 1 2118 0
 16206 1912 5D4A     		ldr	r2, .L648+36
 16207 1914 D7F89430 		ldr	r3, [r7, #148]
 16208 1918 1344     		add	r3, r3, r2
 16209 191a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16210 191c 1946     		mov	r1, r3
 16211 191e D7F88820 		ldr	r2, [r7, #136]
 16212 1922 0B46     		mov	r3, r1
 16213 1924 9B00     		lsls	r3, r3, #2
 16214 1926 0B44     		add	r3, r3, r1
 16215 1928 1344     		add	r3, r3, r2
 16216 192a 03F20223 		addw	r3, r3, #514
 16217 192e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16218 1930 002B     		cmp	r3, #0
 16219 1932 0FD0     		beq	.L608
2119:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16220              		.loc 1 2119 0
 16221 1934 07F11803 		add	r3, r7, #24
 16222 1938 1846     		mov	r0, r3
 16223 193a FFF7FEFF 		bl	strlen
 16224 193e 0346     		mov	r3, r0
 16225 1940 1A46     		mov	r2, r3
 16226 1942 07F11803 		add	r3, r7, #24
 16227 1946 1344     		add	r3, r3, r2
 16228 1948 524A     		ldr	r2, .L648+48
 16229 194a 1068     		ldr	r0, [r2]	@ unaligned
 16230 194c 1860     		str	r0, [r3]	@ unaligned
 16231 194e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16232 1950 9A80     		strh	r2, [r3, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 360


 16233 1952 0EE0     		b	.L609
 16234              	.L608:
2120:..\src/command_processing.c ****                 else
2121:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16235              		.loc 1 2121 0
 16236 1954 07F11803 		add	r3, r7, #24
 16237 1958 1846     		mov	r0, r3
 16238 195a FFF7FEFF 		bl	strlen
 16239 195e 0346     		mov	r3, r0
 16240 1960 1A46     		mov	r2, r3
 16241 1962 07F11803 		add	r3, r7, #24
 16242 1966 1344     		add	r3, r3, r2
 16243 1968 4B4A     		ldr	r2, .L648+52
 16244 196a 1068     		ldr	r0, [r2]	@ unaligned
 16245 196c 1860     		str	r0, [r3]	@ unaligned
 16246 196e 1279     		ldrb	r2, [r2, #4]
 16247 1970 1A71     		strb	r2, [r3, #4]
 16248              	.L609:
2122:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 16249              		.loc 1 2122 0
 16250 1972 07F11803 		add	r3, r7, #24
 16251 1976 1846     		mov	r0, r3
 16252 1978 FFF7FEFF 		bl	strlen
 16253 197c 0346     		mov	r3, r0
 16254 197e 1A46     		mov	r2, r3
 16255 1980 07F11803 		add	r3, r7, #24
 16256 1984 1344     		add	r3, r3, r2
 16257 1986 454A     		ldr	r2, .L648+56
 16258 1988 1C46     		mov	r4, r3
 16259 198a 1346     		mov	r3, r2
 16260 198c 07CB     		ldmia	r3!, {r0, r1, r2}
 16261 198e 2060     		str	r0, [r4]	@ unaligned
 16262 1990 6160     		str	r1, [r4, #4]	@ unaligned
 16263 1992 A260     		str	r2, [r4, #8]	@ unaligned
 16264 1994 1B88     		ldrh	r3, [r3]	@ unaligned
 16265 1996 A381     		strh	r3, [r4, #12]	@ unaligned
2123:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 16266              		.loc 1 2123 0
 16267 1998 3B4A     		ldr	r2, .L648+36
 16268 199a D7F89430 		ldr	r3, [r7, #148]
 16269 199e 1344     		add	r3, r3, r2
 16270 19a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16271 19a2 1946     		mov	r1, r3
 16272 19a4 D7F88820 		ldr	r2, [r7, #136]
 16273 19a8 0B46     		mov	r3, r1
 16274 19aa 9B00     		lsls	r3, r3, #2
 16275 19ac 0B44     		add	r3, r3, r1
 16276 19ae 1344     		add	r3, r3, r2
 16277 19b0 03F20323 		addw	r3, r3, #515
 16278 19b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16279 19b6 002B     		cmp	r3, #0
 16280 19b8 0FD0     		beq	.L610
2124:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16281              		.loc 1 2124 0
 16282 19ba 07F11803 		add	r3, r7, #24
 16283 19be 1846     		mov	r0, r3
 16284 19c0 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 361


 16285 19c4 0346     		mov	r3, r0
 16286 19c6 1A46     		mov	r2, r3
 16287 19c8 07F11803 		add	r3, r7, #24
 16288 19cc 1344     		add	r3, r3, r2
 16289 19ce 314A     		ldr	r2, .L648+48
 16290 19d0 1068     		ldr	r0, [r2]	@ unaligned
 16291 19d2 1860     		str	r0, [r3]	@ unaligned
 16292 19d4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16293 19d6 9A80     		strh	r2, [r3, #4]	@ unaligned
 16294 19d8 0EE0     		b	.L611
 16295              	.L610:
2125:..\src/command_processing.c ****                 else
2126:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16296              		.loc 1 2126 0
 16297 19da 07F11803 		add	r3, r7, #24
 16298 19de 1846     		mov	r0, r3
 16299 19e0 FFF7FEFF 		bl	strlen
 16300 19e4 0346     		mov	r3, r0
 16301 19e6 1A46     		mov	r2, r3
 16302 19e8 07F11803 		add	r3, r7, #24
 16303 19ec 1344     		add	r3, r3, r2
 16304 19ee 2A4A     		ldr	r2, .L648+52
 16305 19f0 1068     		ldr	r0, [r2]	@ unaligned
 16306 19f2 1860     		str	r0, [r3]	@ unaligned
 16307 19f4 1279     		ldrb	r2, [r2, #4]
 16308 19f6 1A71     		strb	r2, [r3, #4]
 16309              	.L611:
2127:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 16310              		.loc 1 2127 0
 16311 19f8 07F11803 		add	r3, r7, #24
 16312 19fc 1846     		mov	r0, r3
 16313 19fe FFF7FEFF 		bl	strlen
 16314 1a02 0346     		mov	r3, r0
 16315 1a04 1A46     		mov	r2, r3
 16316 1a06 07F11803 		add	r3, r7, #24
 16317 1a0a 1344     		add	r3, r3, r2
 16318 1a0c 244A     		ldr	r2, .L648+60
 16319 1a0e 1D46     		mov	r5, r3
 16320 1a10 1446     		mov	r4, r2
 16321 1a12 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16322 1a14 2860     		str	r0, [r5]	@ unaligned
 16323 1a16 6960     		str	r1, [r5, #4]	@ unaligned
 16324 1a18 AA60     		str	r2, [r5, #8]	@ unaligned
 16325 1a1a EB60     		str	r3, [r5, #12]	@ unaligned
 16326 1a1c 2378     		ldrb	r3, [r4]
 16327 1a1e 2B74     		strb	r3, [r5, #16]
2128:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 16328              		.loc 1 2128 0
 16329 1a20 194A     		ldr	r2, .L648+36
 16330 1a22 D7F89430 		ldr	r3, [r7, #148]
 16331 1a26 1344     		add	r3, r3, r2
 16332 1a28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16333 1a2a 1946     		mov	r1, r3
 16334 1a2c D7F88820 		ldr	r2, [r7, #136]
 16335 1a30 0B46     		mov	r3, r1
 16336 1a32 9B00     		lsls	r3, r3, #2
 16337 1a34 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 362


 16338 1a36 1344     		add	r3, r3, r2
 16339 1a38 03F50173 		add	r3, r3, #516
 16340 1a3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16341 1a3e 002B     		cmp	r3, #0
 16342 1a40 30D0     		beq	.L612
2129:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16343              		.loc 1 2129 0
 16344 1a42 07F11803 		add	r3, r7, #24
 16345 1a46 1846     		mov	r0, r3
 16346 1a48 FFF7FEFF 		bl	strlen
 16347 1a4c 0346     		mov	r3, r0
 16348 1a4e 1A46     		mov	r2, r3
 16349 1a50 07F11803 		add	r3, r7, #24
 16350 1a54 1344     		add	r3, r3, r2
 16351 1a56 0F4A     		ldr	r2, .L648+48
 16352 1a58 1068     		ldr	r0, [r2]	@ unaligned
 16353 1a5a 1860     		str	r0, [r3]	@ unaligned
 16354 1a5c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16355 1a5e 9A80     		strh	r2, [r3, #4]	@ unaligned
 16356 1a60 2FE0     		b	.L613
 16357              	.L649:
 16358 1a62 00BF     		.align	2
 16359              	.L648:
 16360 1a64 00000000 		.word	g_emg_meas
 16361 1a68 04150000 		.word	.LC210
 16362 1a6c 840D0000 		.word	.LC125
 16363 1a70 18150000 		.word	.LC211
 16364 1a74 34150000 		.word	.LC212
 16365 1a78 5C150000 		.word	.LC213
 16366 1a7c 00000000 		.word	N_IMU_Connected
 16367 1a80 70150000 		.word	.LC214
 16368 1a84 84150000 		.word	.LC215
 16369 1a88 00000000 		.word	IMU_connected
 16370 1a8c 9C150000 		.word	.LC216
 16371 1a90 B0150000 		.word	.LC217
 16372 1a94 D40E0000 		.word	.LC145
 16373 1a98 DC0E0000 		.word	.LC146
 16374 1a9c C4150000 		.word	.LC218
 16375 1aa0 D4150000 		.word	.LC219
 16376              	.L612:
2130:..\src/command_processing.c ****                 else
2131:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16377              		.loc 1 2131 0
 16378 1aa4 07F11803 		add	r3, r7, #24
 16379 1aa8 1846     		mov	r0, r3
 16380 1aaa FFF7FEFF 		bl	strlen
 16381 1aae 0346     		mov	r3, r0
 16382 1ab0 1A46     		mov	r2, r3
 16383 1ab2 07F11803 		add	r3, r7, #24
 16384 1ab6 1344     		add	r3, r3, r2
 16385 1ab8 CD4A     		ldr	r2, .L650
 16386 1aba 1068     		ldr	r0, [r2]	@ unaligned
 16387 1abc 1860     		str	r0, [r3]	@ unaligned
 16388 1abe 1279     		ldrb	r2, [r2, #4]
 16389 1ac0 1A71     		strb	r2, [r3, #4]
 16390              	.L613:
2132:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 363


 16391              		.loc 1 2132 0
 16392 1ac2 07F11803 		add	r3, r7, #24
 16393 1ac6 1846     		mov	r0, r3
 16394 1ac8 FFF7FEFF 		bl	strlen
 16395 1acc 0346     		mov	r3, r0
 16396 1ace 1A46     		mov	r2, r3
 16397 1ad0 07F11803 		add	r3, r7, #24
 16398 1ad4 1344     		add	r3, r3, r2
 16399 1ad6 C74A     		ldr	r2, .L650+4
 16400 1ad8 1C46     		mov	r4, r3
 16401 1ada 1346     		mov	r3, r2
 16402 1adc 07CB     		ldmia	r3!, {r0, r1, r2}
 16403 1ade 2060     		str	r0, [r4]	@ unaligned
 16404 1ae0 6160     		str	r1, [r4, #4]	@ unaligned
 16405 1ae2 A260     		str	r2, [r4, #8]	@ unaligned
 16406 1ae4 1B88     		ldrh	r3, [r3]	@ unaligned
 16407 1ae6 A381     		strh	r3, [r4, #12]	@ unaligned
2133:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 16408              		.loc 1 2133 0
 16409 1ae8 C34A     		ldr	r2, .L650+8
 16410 1aea D7F89430 		ldr	r3, [r7, #148]
 16411 1aee 1344     		add	r3, r3, r2
 16412 1af0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16413 1af2 1946     		mov	r1, r3
 16414 1af4 D7F88820 		ldr	r2, [r7, #136]
 16415 1af8 0B46     		mov	r3, r1
 16416 1afa 9B00     		lsls	r3, r3, #2
 16417 1afc 0B44     		add	r3, r3, r1
 16418 1afe 1344     		add	r3, r3, r2
 16419 1b00 03F20523 		addw	r3, r3, #517
 16420 1b04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16421 1b06 002B     		cmp	r3, #0
 16422 1b08 0FD0     		beq	.L614
2134:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16423              		.loc 1 2134 0
 16424 1b0a 07F11803 		add	r3, r7, #24
 16425 1b0e 1846     		mov	r0, r3
 16426 1b10 FFF7FEFF 		bl	strlen
 16427 1b14 0346     		mov	r3, r0
 16428 1b16 1A46     		mov	r2, r3
 16429 1b18 07F11803 		add	r3, r7, #24
 16430 1b1c 1344     		add	r3, r3, r2
 16431 1b1e B74A     		ldr	r2, .L650+12
 16432 1b20 1068     		ldr	r0, [r2]	@ unaligned
 16433 1b22 1860     		str	r0, [r3]	@ unaligned
 16434 1b24 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16435 1b26 9A80     		strh	r2, [r3, #4]	@ unaligned
 16436 1b28 0EE0     		b	.L615
 16437              	.L614:
2135:..\src/command_processing.c ****                 else
2136:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16438              		.loc 1 2136 0
 16439 1b2a 07F11803 		add	r3, r7, #24
 16440 1b2e 1846     		mov	r0, r3
 16441 1b30 FFF7FEFF 		bl	strlen
 16442 1b34 0346     		mov	r3, r0
 16443 1b36 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 364


 16444 1b38 07F11803 		add	r3, r7, #24
 16445 1b3c 1344     		add	r3, r3, r2
 16446 1b3e AC4A     		ldr	r2, .L650
 16447 1b40 1068     		ldr	r0, [r2]	@ unaligned
 16448 1b42 1860     		str	r0, [r3]	@ unaligned
 16449 1b44 1279     		ldrb	r2, [r2, #4]
 16450 1b46 1A71     		strb	r2, [r3, #4]
 16451              	.L615:
2137:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 16452              		.loc 1 2137 0
 16453 1b48 07F11803 		add	r3, r7, #24
 16454 1b4c 1846     		mov	r0, r3
 16455 1b4e FFF7FEFF 		bl	strlen
 16456 1b52 0346     		mov	r3, r0
 16457 1b54 1A46     		mov	r2, r3
 16458 1b56 07F11803 		add	r3, r7, #24
 16459 1b5a 1344     		add	r3, r3, r2
 16460 1b5c A84A     		ldr	r2, .L650+16
 16461 1b5e 1C46     		mov	r4, r3
 16462 1b60 1346     		mov	r3, r2
 16463 1b62 07CB     		ldmia	r3!, {r0, r1, r2}
 16464 1b64 2060     		str	r0, [r4]	@ unaligned
 16465 1b66 6160     		str	r1, [r4, #4]	@ unaligned
 16466 1b68 A260     		str	r2, [r4, #8]	@ unaligned
 16467 1b6a 1A88     		ldrh	r2, [r3]	@ unaligned
 16468 1b6c 9B78     		ldrb	r3, [r3, #2]
 16469 1b6e A281     		strh	r2, [r4, #12]	@ unaligned
 16470 1b70 A373     		strb	r3, [r4, #14]
2138:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 16471              		.loc 1 2138 0
 16472 1b72 A14A     		ldr	r2, .L650+8
 16473 1b74 D7F89430 		ldr	r3, [r7, #148]
 16474 1b78 1344     		add	r3, r3, r2
 16475 1b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16476 1b7c 1946     		mov	r1, r3
 16477 1b7e D7F88820 		ldr	r2, [r7, #136]
 16478 1b82 0B46     		mov	r3, r1
 16479 1b84 9B00     		lsls	r3, r3, #2
 16480 1b86 0B44     		add	r3, r3, r1
 16481 1b88 1344     		add	r3, r3, r2
 16482 1b8a 03F20623 		addw	r3, r3, #518
 16483 1b8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16484 1b90 002B     		cmp	r3, #0
 16485 1b92 0FD0     		beq	.L616
2139:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16486              		.loc 1 2139 0
 16487 1b94 07F11803 		add	r3, r7, #24
 16488 1b98 1846     		mov	r0, r3
 16489 1b9a FFF7FEFF 		bl	strlen
 16490 1b9e 0346     		mov	r3, r0
 16491 1ba0 1A46     		mov	r2, r3
 16492 1ba2 07F11803 		add	r3, r7, #24
 16493 1ba6 1344     		add	r3, r3, r2
 16494 1ba8 944A     		ldr	r2, .L650+12
 16495 1baa 1068     		ldr	r0, [r2]	@ unaligned
 16496 1bac 1860     		str	r0, [r3]	@ unaligned
 16497 1bae 9288     		ldrh	r2, [r2, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 365


 16498 1bb0 9A80     		strh	r2, [r3, #4]	@ unaligned
 16499 1bb2 0EE0     		b	.L617
 16500              	.L616:
2140:..\src/command_processing.c ****                 else
2141:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16501              		.loc 1 2141 0
 16502 1bb4 07F11803 		add	r3, r7, #24
 16503 1bb8 1846     		mov	r0, r3
 16504 1bba FFF7FEFF 		bl	strlen
 16505 1bbe 0346     		mov	r3, r0
 16506 1bc0 1A46     		mov	r2, r3
 16507 1bc2 07F11803 		add	r3, r7, #24
 16508 1bc6 1344     		add	r3, r3, r2
 16509 1bc8 894A     		ldr	r2, .L650
 16510 1bca 1068     		ldr	r0, [r2]	@ unaligned
 16511 1bcc 1860     		str	r0, [r3]	@ unaligned
 16512 1bce 1279     		ldrb	r2, [r2, #4]
 16513 1bd0 1A71     		strb	r2, [r3, #4]
 16514              	.L617:
2142:..\src/command_processing.c ****                      
2143:..\src/command_processing.c ****                 strcat(info_string, str);
 16515              		.loc 1 2143 0 discriminator 2
 16516 1bd2 07F11803 		add	r3, r7, #24
 16517 1bd6 1946     		mov	r1, r3
 16518 1bd8 7869     		ldr	r0, [r7, #20]
 16519 1bda FFF7FEFF 		bl	strcat
2113:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16520              		.loc 1 2113 0 discriminator 2
 16521 1bde D7F89430 		ldr	r3, [r7, #148]
 16522 1be2 0133     		adds	r3, r3, #1
 16523 1be4 C7F89430 		str	r3, [r7, #148]
 16524              	.L607:
2113:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16525              		.loc 1 2113 0 is_stmt 0 discriminator 1
 16526 1be8 864B     		ldr	r3, .L650+20
 16527 1bea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16528 1bec 1A46     		mov	r2, r3
 16529 1bee D7F89430 		ldr	r3, [r7, #148]
 16530 1bf2 9A42     		cmp	r2, r3
 16531 1bf4 3FF772AE 		bgt	.L618
2144:..\src/command_processing.c ****             }       
2145:..\src/command_processing.c ****             
2146:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16532              		.loc 1 2146 0 is_stmt 1
 16533 1bf8 7869     		ldr	r0, [r7, #20]
 16534 1bfa FFF7FEFF 		bl	strlen
 16535 1bfe 0346     		mov	r3, r0
 16536 1c00 1A46     		mov	r2, r3
 16537 1c02 7B69     		ldr	r3, [r7, #20]
 16538 1c04 1344     		add	r3, r3, r2
 16539 1c06 804A     		ldr	r2, .L650+24
 16540 1c08 1188     		ldrh	r1, [r2]	@ unaligned
 16541 1c0a 9278     		ldrb	r2, [r2, #2]
 16542 1c0c 1980     		strh	r1, [r3]	@ unaligned
 16543 1c0e 9A70     		strb	r2, [r3, #2]
2147:..\src/command_processing.c ****           
2148:..\src/command_processing.c ****             IMU_reading_info(info_string);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 366


 16544              		.loc 1 2148 0
 16545 1c10 7869     		ldr	r0, [r7, #20]
 16546 1c12 FFF7FEFF 		bl	IMU_reading_info
 16547              	.L606:
2149:..\src/command_processing.c ****         }
2150:..\src/command_processing.c ****         
2151:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16548              		.loc 1 2151 0
 16549 1c16 7869     		ldr	r0, [r7, #20]
 16550 1c18 FFF7FEFF 		bl	strlen
 16551 1c1c 0346     		mov	r3, r0
 16552 1c1e 1A46     		mov	r2, r3
 16553 1c20 7B69     		ldr	r3, [r7, #20]
 16554 1c22 1344     		add	r3, r3, r2
 16555 1c24 784A     		ldr	r2, .L650+24
 16556 1c26 1188     		ldrh	r1, [r2]	@ unaligned
 16557 1c28 9278     		ldrb	r2, [r2, #2]
 16558 1c2a 1980     		strh	r1, [r3]	@ unaligned
 16559 1c2c 9A70     		strb	r2, [r3, #2]
2152:..\src/command_processing.c **** 
2153:..\src/command_processing.c **** #ifdef GENERIC_FW   
2154:..\src/command_processing.c ****         int j;
2155:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 16560              		.loc 1 2155 0
 16561 1c2e 7869     		ldr	r0, [r7, #20]
 16562 1c30 FFF7FEFF 		bl	strlen
 16563 1c34 0346     		mov	r3, r0
 16564 1c36 1A46     		mov	r2, r3
 16565 1c38 7B69     		ldr	r3, [r7, #20]
 16566 1c3a 1344     		add	r3, r3, r2
 16567 1c3c 734A     		ldr	r2, .L650+28
 16568 1c3e 1D46     		mov	r5, r3
 16569 1c40 1446     		mov	r4, r2
 16570 1c42 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16571 1c44 2860     		str	r0, [r5]	@ unaligned
 16572 1c46 6960     		str	r1, [r5, #4]	@ unaligned
 16573 1c48 AA60     		str	r2, [r5, #8]	@ unaligned
 16574 1c4a EB60     		str	r3, [r5, #12]	@ unaligned
 16575 1c4c 03CC     		ldmia	r4!, {r0, r1}
 16576 1c4e 2861     		str	r0, [r5, #16]	@ unaligned
 16577 1c50 6961     		str	r1, [r5, #20]	@ unaligned
2156:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 16578              		.loc 1 2156 0
 16579 1c52 0023     		movs	r3, #0
 16580 1c54 C7F89430 		str	r3, [r7, #148]
 16581 1c58 A1E0     		b	.L619
 16582              	.L628:
2157:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 16583              		.loc 1 2157 0
 16584 1c5a 6D4A     		ldr	r2, .L650+32
 16585 1c5c D7F89430 		ldr	r3, [r7, #148]
 16586 1c60 1344     		add	r3, r3, r2
 16587 1c62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16588 1c64 07F11800 		add	r0, r7, #24
 16589 1c68 D7F89420 		ldr	r2, [r7, #148]
 16590 1c6c 6949     		ldr	r1, .L650+36
 16591 1c6e FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 367


2158:..\src/command_processing.c ****             strcat(info_string, str);
 16592              		.loc 1 2158 0
 16593 1c72 07F11803 		add	r3, r7, #24
 16594 1c76 1946     		mov	r1, r3
 16595 1c78 7869     		ldr	r0, [r7, #20]
 16596 1c7a FFF7FEFF 		bl	strcat
2159:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 16597              		.loc 1 2159 0
 16598 1c7e D7F88830 		ldr	r3, [r7, #136]
 16599 1c82 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 16600 1c86 1A46     		mov	r2, r3
 16601 1c88 D7F89430 		ldr	r3, [r7, #148]
 16602 1c8c 9A42     		cmp	r2, r3
 16603 1c8e 14D1     		bne	.L620
2160:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 16604              		.loc 1 2160 0
 16605 1c90 D7F88830 		ldr	r3, [r7, #136]
 16606 1c94 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 16607 1c98 002B     		cmp	r3, #0
 16608 1c9a 01D0     		beq	.L621
 16609              		.loc 1 2160 0 is_stmt 0 discriminator 1
 16610 1c9c 5E4A     		ldr	r2, .L650+40
 16611 1c9e 00E0     		b	.L622
 16612              	.L621:
 16613              		.loc 1 2160 0 discriminator 2
 16614 1ca0 5E4A     		ldr	r2, .L650+44
 16615              	.L622:
 16616              		.loc 1 2160 0 discriminator 4
 16617 1ca2 07F11803 		add	r3, r7, #24
 16618 1ca6 5E49     		ldr	r1, .L650+48
 16619 1ca8 1846     		mov	r0, r3
 16620 1caa FFF7FEFF 		bl	sprintf
2161:..\src/command_processing.c ****                 strcat(info_string, str);
 16621              		.loc 1 2161 0 is_stmt 1 discriminator 4
 16622 1cae 07F11803 		add	r3, r7, #24
 16623 1cb2 1946     		mov	r1, r3
 16624 1cb4 7869     		ldr	r0, [r7, #20]
 16625 1cb6 FFF7FEFF 		bl	strcat
 16626              	.L620:
2162:..\src/command_processing.c ****             }
2163:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16627              		.loc 1 2163 0
 16628 1cba 7869     		ldr	r0, [r7, #20]
 16629 1cbc FFF7FEFF 		bl	strlen
 16630 1cc0 0346     		mov	r3, r0
 16631 1cc2 1A46     		mov	r2, r3
 16632 1cc4 7B69     		ldr	r3, [r7, #20]
 16633 1cc6 1344     		add	r3, r3, r2
 16634 1cc8 4F4A     		ldr	r2, .L650+24
 16635 1cca 1188     		ldrh	r1, [r2]	@ unaligned
 16636 1ccc 9278     		ldrb	r2, [r2, #2]
 16637 1cce 1980     		strh	r1, [r3]	@ unaligned
 16638 1cd0 9A70     		strb	r2, [r3, #2]
2164:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 16639              		.loc 1 2164 0
 16640 1cd2 4F4A     		ldr	r2, .L650+32
 16641 1cd4 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 368


 16642 1cd8 1344     		add	r3, r3, r2
 16643 1cda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16644 1cdc 002B     		cmp	r3, #0
 16645 1cde 59D0     		beq	.L623
2165:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 16646              		.loc 1 2165 0
 16647 1ce0 7869     		ldr	r0, [r7, #20]
 16648 1ce2 FFF7FEFF 		bl	strlen
 16649 1ce6 0346     		mov	r3, r0
 16650 1ce8 1A46     		mov	r2, r3
 16651 1cea 7B69     		ldr	r3, [r7, #20]
 16652 1cec 1344     		add	r3, r3, r2
 16653 1cee 4D4A     		ldr	r2, .L650+52
 16654 1cf0 1D46     		mov	r5, r3
 16655 1cf2 1446     		mov	r4, r2
 16656 1cf4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16657 1cf6 2860     		str	r0, [r5]	@ unaligned
 16658 1cf8 6960     		str	r1, [r5, #4]	@ unaligned
 16659 1cfa AA60     		str	r2, [r5, #8]	@ unaligned
 16660 1cfc EB60     		str	r3, [r5, #12]	@ unaligned
 16661 1cfe 2068     		ldr	r0, [r4]	@ unaligned
 16662 1d00 2861     		str	r0, [r5, #16]	@ unaligned
 16663 1d02 A388     		ldrh	r3, [r4, #4]	@ unaligned
 16664 1d04 AB82     		strh	r3, [r5, #20]	@ unaligned
2166:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16665              		.loc 1 2166 0
 16666 1d06 0023     		movs	r3, #0
 16667 1d08 C7F88C30 		str	r3, [r7, #140]
 16668 1d0c 2CE0     		b	.L624
 16669              	.L627:
2167:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 16670              		.loc 1 2167 0
 16671 1d0e 4649     		ldr	r1, .L650+56
 16672 1d10 D7F89420 		ldr	r2, [r7, #148]
 16673 1d14 1346     		mov	r3, r2
 16674 1d16 9B00     		lsls	r3, r3, #2
 16675 1d18 1344     		add	r3, r3, r2
 16676 1d1a D7F88C20 		ldr	r2, [r7, #140]
 16677 1d1e 1344     		add	r3, r3, r2
 16678 1d20 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 16679 1d24 1C46     		mov	r4, r3
 16680 1d26 4149     		ldr	r1, .L650+60
 16681 1d28 D7F89420 		ldr	r2, [r7, #148]
 16682 1d2c 1346     		mov	r3, r2
 16683 1d2e 9B00     		lsls	r3, r3, #2
 16684 1d30 1344     		add	r3, r3, r2
 16685 1d32 CA18     		adds	r2, r1, r3
 16686 1d34 D7F88C30 		ldr	r3, [r7, #140]
 16687 1d38 1344     		add	r3, r3, r2
 16688 1d3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16689 1d3c 102B     		cmp	r3, #16
 16690 1d3e 01D1     		bne	.L625
 16691              		.loc 1 2167 0 is_stmt 0 discriminator 1
 16692 1d40 3B4B     		ldr	r3, .L650+64
 16693 1d42 00E0     		b	.L626
 16694              	.L625:
 16695              		.loc 1 2167 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 369


 16696 1d44 3B4B     		ldr	r3, .L650+68
 16697              	.L626:
 16698              		.loc 1 2167 0 discriminator 4
 16699 1d46 07F11800 		add	r0, r7, #24
 16700 1d4a 2246     		mov	r2, r4
 16701 1d4c 3A49     		ldr	r1, .L650+72
 16702 1d4e FFF7FEFF 		bl	sprintf
2168:..\src/command_processing.c ****                     strcat(info_string, str);
 16703              		.loc 1 2168 0 is_stmt 1 discriminator 4
 16704 1d52 07F11803 		add	r3, r7, #24
 16705 1d56 1946     		mov	r1, r3
 16706 1d58 7869     		ldr	r0, [r7, #20]
 16707 1d5a FFF7FEFF 		bl	strcat
2166:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16708              		.loc 1 2166 0 discriminator 4
 16709 1d5e D7F88C30 		ldr	r3, [r7, #140]
 16710 1d62 0133     		adds	r3, r3, #1
 16711 1d64 C7F88C30 		str	r3, [r7, #140]
 16712              	.L624:
2166:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16713              		.loc 1 2166 0 is_stmt 0 discriminator 2
 16714 1d68 294A     		ldr	r2, .L650+32
 16715 1d6a D7F89430 		ldr	r3, [r7, #148]
 16716 1d6e 1344     		add	r3, r3, r2
 16717 1d70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16718 1d72 1A46     		mov	r2, r3
 16719 1d74 D7F88C30 		ldr	r3, [r7, #140]
 16720 1d78 9A42     		cmp	r2, r3
 16721 1d7a C8DC     		bgt	.L627
2169:..\src/command_processing.c ****                 }
2170:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 16722              		.loc 1 2170 0 is_stmt 1
 16723 1d7c 7869     		ldr	r0, [r7, #20]
 16724 1d7e FFF7FEFF 		bl	strlen
 16725 1d82 0346     		mov	r3, r0
 16726 1d84 1A46     		mov	r2, r3
 16727 1d86 7B69     		ldr	r3, [r7, #20]
 16728 1d88 1344     		add	r3, r3, r2
 16729 1d8a 1F4A     		ldr	r2, .L650+24
 16730 1d8c 1188     		ldrh	r1, [r2]	@ unaligned
 16731 1d8e 9278     		ldrb	r2, [r2, #2]
 16732 1d90 1980     		strh	r1, [r3]	@ unaligned
 16733 1d92 9A70     		strb	r2, [r3, #2]
 16734              	.L623:
2156:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 16735              		.loc 1 2156 0 discriminator 2
 16736 1d94 D7F89430 		ldr	r3, [r7, #148]
 16737 1d98 0133     		adds	r3, r3, #1
 16738 1d9a C7F89430 		str	r3, [r7, #148]
 16739              	.L619:
2156:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 16740              		.loc 1 2156 0 is_stmt 0 discriminator 1
 16741 1d9e D7F89430 		ldr	r3, [r7, #148]
 16742 1da2 012B     		cmp	r3, #1
 16743 1da4 7FF759AF 		ble	.L628
2171:..\src/command_processing.c ****             }
2172:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 370


2173:..\src/command_processing.c **** #endif   
2174:..\src/command_processing.c ****         
2175:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 16744              		.loc 1 2175 0 is_stmt 1
 16745 1da8 244B     		ldr	r3, .L650+76
 16746 1daa 1B88     		ldrh	r3, [r3]
 16747 1dac 1A46     		mov	r2, r3
 16748 1dae 244B     		ldr	r3, .L650+80
 16749 1db0 1B88     		ldrh	r3, [r3]
 16750 1db2 D21A     		subs	r2, r2, r3
 16751 1db4 07F11803 		add	r3, r7, #24
 16752 1db8 2249     		ldr	r1, .L650+84
 16753 1dba 1846     		mov	r0, r3
 16754 1dbc FFF7FEFF 		bl	sprintf
2176:..\src/command_processing.c ****         strcat(info_string, str);
 16755              		.loc 1 2176 0
 16756 1dc0 07F11803 		add	r3, r7, #24
 16757 1dc4 1946     		mov	r1, r3
 16758 1dc6 7869     		ldr	r0, [r7, #20]
 16759 1dc8 FFF7FEFF 		bl	strcat
2177:..\src/command_processing.c ****   
2178:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 16760              		.loc 1 2178 0
 16761 1dcc 7869     		ldr	r0, [r7, #20]
 16762 1dce FFF7FEFF 		bl	strlen
 16763 1dd2 0346     		mov	r3, r0
 16764 1dd4 1A46     		mov	r2, r3
 16765 1dd6 7B69     		ldr	r3, [r7, #20]
 16766 1dd8 1344     		add	r3, r3, r2
 16767 1dda 1B4A     		ldr	r2, .L650+88
 16768 1ddc 1188     		ldrh	r1, [r2]	@ unaligned
 16769 1dde 9278     		ldrb	r2, [r2, #2]
 16770 1de0 1980     		strh	r1, [r3]	@ unaligned
 16771 1de2 9A70     		strb	r2, [r3, #2]
 16772              	.L630:
 16773              	.LBE16:
2179:..\src/command_processing.c ****     }
2180:..\src/command_processing.c **** }
 16774              		.loc 1 2180 0
 16775 1de4 00BF     		nop
 16776 1de6 9C37     		adds	r7, r7, #156
 16777              		.cfi_def_cfa_offset 36
 16778 1de8 BD46     		mov	sp, r7
 16779              		.cfi_def_cfa_register 13
 16780              		@ sp needed
 16781 1dea BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16782              	.L651:
 16783 1dee 00BF     		.align	2
 16784              	.L650:
 16785 1df0 DC0E0000 		.word	.LC146
 16786 1df4 E8150000 		.word	.LC220
 16787 1df8 00000000 		.word	IMU_connected
 16788 1dfc D40E0000 		.word	.LC145
 16789 1e00 F8150000 		.word	.LC221
 16790 1e04 00000000 		.word	N_IMU_Connected
 16791 1e08 840D0000 		.word	.LC125
 16792 1e0c 08160000 		.word	.LC222
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 371


 16793 1e10 00000000 		.word	N_Encoder_Line_Connected
 16794 1e14 20160000 		.word	.LC223
 16795 1e18 40160000 		.word	.LC224
 16796 1e1c 48160000 		.word	.LC225
 16797 1e20 50160000 		.word	.LC226
 16798 1e24 70160000 		.word	.LC227
 16799 1e28 00000000 		.word	Encoder_Value
 16800 1e2c 00000000 		.word	Encoder_Check
 16801 1e30 88160000 		.word	.LC228
 16802 1e34 8C160000 		.word	.LC229
 16803 1e38 90160000 		.word	.LC230
 16804 1e3c 00000000 		.word	timer_value0
 16805 1e40 00000000 		.word	timer_value
 16806 1e44 9C160000 		.word	.LC231
 16807 1e48 B8160000 		.word	.LC232
 16808              		.cfi_endproc
 16809              	.LFE72:
 16810              		.size	prepare_generic_info, .-prepare_generic_info
 16811              		.section	.rodata
 16812              		.align	2
 16813              	.LC233:
 16814 16bc 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 16814      41474520 
 16814      53544154 
 16814      49535449 
 16814      43530D0A 
 16815 16d1 000000   		.align	2
 16816              	.LC234:
 16817 16d4 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 16817      206F6620 
 16817      4857206D 
 16817      61696E74 
 16817      656E616E 
 16818 16ff 00       		.align	2
 16819              	.LC235:
 16820 1700 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 16820      206F6620 
 16820      75736167 
 16820      65207374 
 16820      61747320 
 16821 1733 0A00     		.ascii	"\012\000"
 16822 1735 000000   		.align	2
 16823              	.LC236:
 16824 1738 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 16824      20636865 
 16824      636B6564 
 16824      2054696D 
 16824      653A2025 
 16825 176b 0A00     		.ascii	"\012\000"
 16826 176d 000000   		.align	2
 16827              	.LC237:
 16828 1770 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 16828      74696F6E 
 16828      73206869 
 16828      73746F67 
 16828      72616D20 
 16829 178f 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 372


 16830              	.LC238:
 16831 1790 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 16831      2564205B 
 16831      25642D25 
 16831      645D3A20 
 16831      256C750D 
 16832 17a6 0000     		.align	2
 16833              	.LC239:
 16834 17a8 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 16834      656E7420 
 16834      68697374 
 16834      6F677261 
 16834      6D20286D 
 16835 17c2 0000     		.align	2
 16836              	.LC240:
 16837 17c4 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 16837      73686F6C 
 16837      64202564 
 16837      205B2564 
 16837      2D25645D 
 16838              		.align	2
 16839              	.LC241:
 16840 17e0 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 16840      61637469 
 16840      76617469 
 16840      6F6E7320 
 16840      636F756E 
 16841 1802 0000     		.align	2
 16842              	.LC242:
 16843 1804 52657374 		.ascii	"Rest position occurrences: %lu\000"
 16843      20706F73 
 16843      6974696F 
 16843      6E206F63 
 16843      63757272 
 16844 1823 00       		.align	2
 16845              	.LC243:
 16846 1824 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 16846      6520746F 
 16846      74616C20 
 16846      64697370 
 16846      6C616365 
 16847 184a 0000     		.align	2
 16848              	.LC244:
 16849 184c 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 16849      6C20706F 
 16849      77657220 
 16849      6F6E2074 
 16849      696D6520 
 16850 186b 00       		.align	2
 16851              	.LC245:
 16852 186c 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 16852      6C207265 
 16852      73742070 
 16852      6F736974 
 16852      696F6E20 
 16853              		.section	.text.prepare_counter_info,"ax",%progbits
 16854              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 373


 16855              		.global	prepare_counter_info
 16856              		.thumb
 16857              		.thumb_func
 16858              		.type	prepare_counter_info, %function
 16859              	prepare_counter_info:
 16860              	.LFB73:
2181:..\src/command_processing.c **** 
2182:..\src/command_processing.c **** //==============================================================================
2183:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2184:..\src/command_processing.c **** //==============================================================================
2185:..\src/command_processing.c **** 
2186:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2187:..\src/command_processing.c **** {
 16861              		.loc 1 2187 0
 16862              		.cfi_startproc
 16863              		@ args = 0, pretend = 0, frame = 128
 16864              		@ frame_needed = 1, uses_anonymous_args = 0
 16865 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 16866              		.cfi_def_cfa_offset 20
 16867              		.cfi_offset 4, -20
 16868              		.cfi_offset 5, -16
 16869              		.cfi_offset 6, -12
 16870              		.cfi_offset 7, -8
 16871              		.cfi_offset 14, -4
 16872 0002 A5B0     		sub	sp, sp, #148
 16873              		.cfi_def_cfa_offset 168
 16874 0004 04AF     		add	r7, sp, #16
 16875              		.cfi_def_cfa 7, 152
 16876 0006 7860     		str	r0, [r7, #4]
2188:..\src/command_processing.c ****     char str[100];  
2189:..\src/command_processing.c ****     int i;
2190:..\src/command_processing.c ****     int step;
2191:..\src/command_processing.c **** 
2192:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 16877              		.loc 1 2192 0
 16878 0008 7D4B     		ldr	r3, .L658
 16879 000a BB67     		str	r3, [r7, #120]
2193:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 16880              		.loc 1 2193 0
 16881 000c BB6F     		ldr	r3, [r7, #120]
 16882 000e B033     		adds	r3, r3, #176
 16883 0010 7B67     		str	r3, [r7, #116]
2194:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 16884              		.loc 1 2194 0
 16885 0012 7B6F     		ldr	r3, [r7, #116]
 16886 0014 93F86030 		ldrb	r3, [r3, #96]
 16887 0018 87F87330 		strb	r3, [r7, #115]
2195:..\src/command_processing.c ****     
2196:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 16888              		.loc 1 2196 0
 16889 001c 7868     		ldr	r0, [r7, #4]
 16890 001e FFF7FEFF 		bl	strlen
 16891 0022 0346     		mov	r3, r0
 16892 0024 1A46     		mov	r2, r3
 16893 0026 7B68     		ldr	r3, [r7, #4]
 16894 0028 1344     		add	r3, r3, r2
 16895 002a 764A     		ldr	r2, .L658+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 374


 16896 002c 1D46     		mov	r5, r3
 16897 002e 1446     		mov	r4, r2
 16898 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16899 0032 2860     		str	r0, [r5]	@ unaligned
 16900 0034 6960     		str	r1, [r5, #4]	@ unaligned
 16901 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 16902 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 16903 003a 2068     		ldr	r0, [r4]	@ unaligned
 16904 003c 2861     		str	r0, [r5, #16]	@ unaligned
 16905 003e 2379     		ldrb	r3, [r4, #4]
 16906 0040 2B75     		strb	r3, [r5, #20]
2197:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16907              		.loc 1 2197 0
 16908 0042 7868     		ldr	r0, [r7, #4]
 16909 0044 FFF7FEFF 		bl	strlen
 16910 0048 0346     		mov	r3, r0
 16911 004a 1A46     		mov	r2, r3
 16912 004c 7B68     		ldr	r3, [r7, #4]
 16913 004e 1344     		add	r3, r3, r2
 16914 0050 6D4A     		ldr	r2, .L658+8
 16915 0052 1188     		ldrh	r1, [r2]	@ unaligned
 16916 0054 9278     		ldrb	r2, [r2, #2]
 16917 0056 1980     		strh	r1, [r3]	@ unaligned
 16918 0058 9A70     		strb	r2, [r3, #2]
2198:..\src/command_processing.c ****     
2199:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 16919              		.loc 1 2199 0
 16920 005a BB6F     		ldr	r3, [r7, #120]
 16921 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 16922 0060 1A46     		mov	r2, r3
 16923 0062 BB6F     		ldr	r3, [r7, #120]
 16924 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 16925 0068 1946     		mov	r1, r3
 16926 006a BB6F     		ldr	r3, [r7, #120]
 16927 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 16928 0070 07F10800 		add	r0, r7, #8
 16929 0074 0093     		str	r3, [sp]
 16930 0076 0B46     		mov	r3, r1
 16931 0078 6449     		ldr	r1, .L658+12
 16932 007a FFF7FEFF 		bl	sprintf
2200:..\src/command_processing.c ****     strcat(info_string, str);
 16933              		.loc 1 2200 0
 16934 007e 07F10803 		add	r3, r7, #8
 16935 0082 1946     		mov	r1, r3
 16936 0084 7868     		ldr	r0, [r7, #4]
 16937 0086 FFF7FEFF 		bl	strcat
2201:..\src/command_processing.c ****     
2202:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 16938              		.loc 1 2202 0
 16939 008a BB6F     		ldr	r3, [r7, #120]
 16940 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 16941 0090 1A46     		mov	r2, r3
 16942 0092 BB6F     		ldr	r3, [r7, #120]
 16943 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 16944 0098 1946     		mov	r1, r3
 16945 009a BB6F     		ldr	r3, [r7, #120]
 16946 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 375


 16947 00a0 07F10800 		add	r0, r7, #8
 16948 00a4 0093     		str	r3, [sp]
 16949 00a6 0B46     		mov	r3, r1
 16950 00a8 5949     		ldr	r1, .L658+16
 16951 00aa FFF7FEFF 		bl	sprintf
2203:..\src/command_processing.c ****     strcat(info_string, str);
 16952              		.loc 1 2203 0
 16953 00ae 07F10803 		add	r3, r7, #8
 16954 00b2 1946     		mov	r1, r3
 16955 00b4 7868     		ldr	r0, [r7, #4]
 16956 00b6 FFF7FEFF 		bl	strcat
2204:..\src/command_processing.c ****             
2205:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 16957              		.loc 1 2205 0
 16958 00ba BB6F     		ldr	r3, [r7, #120]
 16959 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 16960 00c0 1D46     		mov	r5, r3
 16961 00c2 BB6F     		ldr	r3, [r7, #120]
 16962 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 16963 00c8 1E46     		mov	r6, r3
 16964 00ca BB6F     		ldr	r3, [r7, #120]
 16965 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 16966 00d0 1A46     		mov	r2, r3
 16967 00d2 BB6F     		ldr	r3, [r7, #120]
 16968 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 16969 00d8 1946     		mov	r1, r3
 16970 00da BB6F     		ldr	r3, [r7, #120]
 16971 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 16972 00e0 1C46     		mov	r4, r3
 16973 00e2 BB6F     		ldr	r3, [r7, #120]
 16974 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 16975 00e8 07F10800 		add	r0, r7, #8
 16976 00ec 0393     		str	r3, [sp, #12]
 16977 00ee 0294     		str	r4, [sp, #8]
 16978 00f0 0191     		str	r1, [sp, #4]
 16979 00f2 0092     		str	r2, [sp]
 16980 00f4 3346     		mov	r3, r6
 16981 00f6 2A46     		mov	r2, r5
 16982 00f8 4649     		ldr	r1, .L658+20
 16983 00fa FFF7FEFF 		bl	sprintf
2206:..\src/command_processing.c ****     strcat(info_string, str);
 16984              		.loc 1 2206 0
 16985 00fe 07F10803 		add	r3, r7, #8
 16986 0102 1946     		mov	r1, r3
 16987 0104 7868     		ldr	r0, [r7, #4]
 16988 0106 FFF7FEFF 		bl	strcat
2207:..\src/command_processing.c ****     
2208:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 16989              		.loc 1 2208 0
 16990 010a 07F10803 		add	r3, r7, #8
 16991 010e 424A     		ldr	r2, .L658+24
 16992 0110 1C46     		mov	r4, r3
 16993 0112 1546     		mov	r5, r2
 16994 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16995 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16996 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 16997 011c 07C4     		stmia	r4!, {r0, r1, r2}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 376


 16998 011e 2380     		strh	r3, [r4]	@ movhi
 16999 0120 0234     		adds	r4, r4, #2
 17000 0122 1B0C     		lsrs	r3, r3, #16
 17001 0124 2370     		strb	r3, [r4]
2209:..\src/command_processing.c ****     strcat(info_string, str);
 17002              		.loc 1 2209 0
 17003 0126 07F10803 		add	r3, r7, #8
 17004 012a 1946     		mov	r1, r3
 17005 012c 7868     		ldr	r0, [r7, #4]
 17006 012e FFF7FEFF 		bl	strcat
2210:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 17007              		.loc 1 2210 0
 17008 0132 7B6F     		ldr	r3, [r7, #116]
 17009 0134 996B     		ldr	r1, [r3, #56]
 17010 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 17011 013a B86F     		ldr	r0, [r7, #120]
 17012 013c 1346     		mov	r3, r2
 17013 013e 5B00     		lsls	r3, r3, #1
 17014 0140 1344     		add	r3, r3, r2
 17015 0142 1B01     		lsls	r3, r3, #4
 17016 0144 0344     		add	r3, r3, r0
 17017 0146 03F29513 		addw	r3, r3, #405
 17018 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17019 014c 41FA03F3 		asr	r3, r1, r3
 17020 0150 324A     		ldr	r2, .L658+28
 17021 0152 82FB0312 		smull	r1, r2, r2, r3
 17022 0156 9210     		asrs	r2, r2, #2
 17023 0158 DB17     		asrs	r3, r3, #31
 17024 015a D31A     		subs	r3, r2, r3
 17025 015c FB66     		str	r3, [r7, #108]
2211:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17026              		.loc 1 2211 0
 17027 015e 0123     		movs	r3, #1
 17028 0160 FB67     		str	r3, [r7, #124]
 17029 0162 21E0     		b	.L653
 17030              	.L654:
2212:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 17031              		.loc 1 2212 0 discriminator 3
 17032 0164 FB6F     		ldr	r3, [r7, #124]
 17033 0166 013B     		subs	r3, r3, #1
 17034 0168 FA6E     		ldr	r2, [r7, #108]
 17035 016a 02FB03F3 		mul	r3, r2, r3
 17036 016e 5C1C     		adds	r4, r3, #1
 17037 0170 FB6E     		ldr	r3, [r7, #108]
 17038 0172 FA6F     		ldr	r2, [r7, #124]
 17039 0174 02FB03F3 		mul	r3, r2, r3
 17040 0178 FA6F     		ldr	r2, [r7, #124]
 17041 017a 511E     		subs	r1, r2, #1
 17042 017c BA6F     		ldr	r2, [r7, #120]
 17043 017e 0631     		adds	r1, r1, #6
 17044 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17045 0184 07F10800 		add	r0, r7, #8
 17046 0188 0192     		str	r2, [sp, #4]
 17047 018a 0093     		str	r3, [sp]
 17048 018c 2346     		mov	r3, r4
 17049 018e FA6F     		ldr	r2, [r7, #124]
 17050 0190 2349     		ldr	r1, .L658+32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 377


 17051 0192 FFF7FEFF 		bl	sprintf
2213:..\src/command_processing.c ****         strcat(info_string, str);
 17052              		.loc 1 2213 0 discriminator 3
 17053 0196 07F10803 		add	r3, r7, #8
 17054 019a 1946     		mov	r1, r3
 17055 019c 7868     		ldr	r0, [r7, #4]
 17056 019e FFF7FEFF 		bl	strcat
2211:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17057              		.loc 1 2211 0 discriminator 3
 17058 01a2 FB6F     		ldr	r3, [r7, #124]
 17059 01a4 0133     		adds	r3, r3, #1
 17060 01a6 FB67     		str	r3, [r7, #124]
 17061              	.L653:
2211:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17062              		.loc 1 2211 0 is_stmt 0 discriminator 1
 17063 01a8 FB6F     		ldr	r3, [r7, #124]
 17064 01aa 0A2B     		cmp	r3, #10
 17065 01ac DADD     		ble	.L654
2214:..\src/command_processing.c ****     }
2215:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17066              		.loc 1 2215 0 is_stmt 1
 17067 01ae 7868     		ldr	r0, [r7, #4]
 17068 01b0 FFF7FEFF 		bl	strlen
 17069 01b4 0346     		mov	r3, r0
 17070 01b6 1A46     		mov	r2, r3
 17071 01b8 7B68     		ldr	r3, [r7, #4]
 17072 01ba 1344     		add	r3, r3, r2
 17073 01bc 124A     		ldr	r2, .L658+8
 17074 01be 1188     		ldrh	r1, [r2]	@ unaligned
 17075 01c0 9278     		ldrb	r2, [r2, #2]
 17076 01c2 1980     		strh	r1, [r3]	@ unaligned
 17077 01c4 9A70     		strb	r2, [r3, #2]
2216:..\src/command_processing.c ****     
2217:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 17078              		.loc 1 2217 0
 17079 01c6 07F10803 		add	r3, r7, #8
 17080 01ca 164A     		ldr	r2, .L658+36
 17081 01cc 1C46     		mov	r4, r3
 17082 01ce 1546     		mov	r5, r2
 17083 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17084 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17085 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 17086 01d8 03C4     		stmia	r4!, {r0, r1}
 17087 01da 2280     		strh	r2, [r4]	@ movhi
2218:..\src/command_processing.c ****     strcat(info_string, str);
 17088              		.loc 1 2218 0
 17089 01dc 07F10803 		add	r3, r7, #8
 17090 01e0 1946     		mov	r1, r3
 17091 01e2 7868     		ldr	r0, [r7, #4]
 17092 01e4 FFF7FEFF 		bl	strcat
2219:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 17093              		.loc 1 2219 0
 17094 01e8 7B6F     		ldr	r3, [r7, #116]
 17095 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 17096 01ee 002B     		cmp	r3, #0
 17097 01f0 00DA     		bge	.L655
 17098 01f2 0333     		adds	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 378


 17099              	.L655:
 17100 01f4 9B10     		asrs	r3, r3, #2
 17101 01f6 1BB2     		sxth	r3, r3
 17102 01f8 FB66     		str	r3, [r7, #108]
2220:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17103              		.loc 1 2220 0
 17104 01fa 0123     		movs	r3, #1
 17105 01fc FB67     		str	r3, [r7, #124]
 17106 01fe 34E0     		b	.L656
 17107              	.L659:
 17108              		.align	2
 17109              	.L658:
 17110 0200 00000000 		.word	g_mem
 17111 0204 BC160000 		.word	.LC233
 17112 0208 840D0000 		.word	.LC125
 17113 020c D4160000 		.word	.LC234
 17114 0210 00170000 		.word	.LC235
 17115 0214 38170000 		.word	.LC236
 17116 0218 70170000 		.word	.LC237
 17117 021c 67666666 		.word	1717986919
 17118 0220 90170000 		.word	.LC238
 17119 0224 A8170000 		.word	.LC239
 17120              	.L657:
2221:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 17121              		.loc 1 2221 0 discriminator 3
 17122 0228 FB6F     		ldr	r3, [r7, #124]
 17123 022a 013B     		subs	r3, r3, #1
 17124 022c FA6E     		ldr	r2, [r7, #108]
 17125 022e 02FB03F4 		mul	r4, r2, r3
 17126 0232 FB6E     		ldr	r3, [r7, #108]
 17127 0234 FA6F     		ldr	r2, [r7, #124]
 17128 0236 02FB03F3 		mul	r3, r2, r3
 17129 023a FA6F     		ldr	r2, [r7, #124]
 17130 023c 511E     		subs	r1, r2, #1
 17131 023e BA6F     		ldr	r2, [r7, #120]
 17132 0240 1031     		adds	r1, r1, #16
 17133 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17134 0246 07F10800 		add	r0, r7, #8
 17135 024a 0192     		str	r2, [sp, #4]
 17136 024c 0093     		str	r3, [sp]
 17137 024e 2346     		mov	r3, r4
 17138 0250 FA6F     		ldr	r2, [r7, #124]
 17139 0252 5149     		ldr	r1, .L660
 17140 0254 FFF7FEFF 		bl	sprintf
2222:..\src/command_processing.c ****         strcat(info_string, str);
 17141              		.loc 1 2222 0 discriminator 3
 17142 0258 07F10803 		add	r3, r7, #8
 17143 025c 1946     		mov	r1, r3
 17144 025e 7868     		ldr	r0, [r7, #4]
 17145 0260 FFF7FEFF 		bl	strcat
2220:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17146              		.loc 1 2220 0 discriminator 3
 17147 0264 FB6F     		ldr	r3, [r7, #124]
 17148 0266 0133     		adds	r3, r3, #1
 17149 0268 FB67     		str	r3, [r7, #124]
 17150              	.L656:
2220:..\src/command_processing.c ****     for (i=1; i<=4;i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 379


 17151              		.loc 1 2220 0 is_stmt 0 discriminator 1
 17152 026a FB6F     		ldr	r3, [r7, #124]
 17153 026c 042B     		cmp	r3, #4
 17154 026e DBDD     		ble	.L657
2223:..\src/command_processing.c ****     }
2224:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17155              		.loc 1 2224 0 is_stmt 1
 17156 0270 7868     		ldr	r0, [r7, #4]
 17157 0272 FFF7FEFF 		bl	strlen
 17158 0276 0346     		mov	r3, r0
 17159 0278 1A46     		mov	r2, r3
 17160 027a 7B68     		ldr	r3, [r7, #4]
 17161 027c 1344     		add	r3, r3, r2
 17162 027e 474A     		ldr	r2, .L660+4
 17163 0280 1188     		ldrh	r1, [r2]	@ unaligned
 17164 0282 9278     		ldrb	r2, [r2, #2]
 17165 0284 1980     		strh	r1, [r3]	@ unaligned
 17166 0286 9A70     		strb	r2, [r3, #2]
2225:..\src/command_processing.c ****             
2226:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 17167              		.loc 1 2226 0
 17168 0288 BB6F     		ldr	r3, [r7, #120]
 17169 028a 1A69     		ldr	r2, [r3, #16]
 17170 028c BB6F     		ldr	r3, [r7, #120]
 17171 028e 5B69     		ldr	r3, [r3, #20]
 17172 0290 07F10800 		add	r0, r7, #8
 17173 0294 4249     		ldr	r1, .L660+8
 17174 0296 FFF7FEFF 		bl	sprintf
2227:..\src/command_processing.c ****     strcat(info_string, str);
 17175              		.loc 1 2227 0
 17176 029a 07F10803 		add	r3, r7, #8
 17177 029e 1946     		mov	r1, r3
 17178 02a0 7868     		ldr	r0, [r7, #4]
 17179 02a2 FFF7FEFF 		bl	strcat
2228:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17180              		.loc 1 2228 0
 17181 02a6 7868     		ldr	r0, [r7, #4]
 17182 02a8 FFF7FEFF 		bl	strlen
 17183 02ac 0346     		mov	r3, r0
 17184 02ae 1A46     		mov	r2, r3
 17185 02b0 7B68     		ldr	r3, [r7, #4]
 17186 02b2 1344     		add	r3, r3, r2
 17187 02b4 394A     		ldr	r2, .L660+4
 17188 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 17189 02b8 9278     		ldrb	r2, [r2, #2]
 17190 02ba 1980     		strh	r1, [r3]	@ unaligned
 17191 02bc 9A70     		strb	r2, [r3, #2]
2229:..\src/command_processing.c ****     
2230:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 17192              		.loc 1 2230 0
 17193 02be BB6F     		ldr	r3, [r7, #120]
 17194 02c0 1A6D     		ldr	r2, [r3, #80]
 17195 02c2 07F10803 		add	r3, r7, #8
 17196 02c6 3749     		ldr	r1, .L660+12
 17197 02c8 1846     		mov	r0, r3
 17198 02ca FFF7FEFF 		bl	sprintf
2231:..\src/command_processing.c ****     strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 380


 17199              		.loc 1 2231 0
 17200 02ce 07F10803 		add	r3, r7, #8
 17201 02d2 1946     		mov	r1, r3
 17202 02d4 7868     		ldr	r0, [r7, #4]
 17203 02d6 FFF7FEFF 		bl	strcat
2232:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17204              		.loc 1 2232 0
 17205 02da 7868     		ldr	r0, [r7, #4]
 17206 02dc FFF7FEFF 		bl	strlen
 17207 02e0 0346     		mov	r3, r0
 17208 02e2 1A46     		mov	r2, r3
 17209 02e4 7B68     		ldr	r3, [r7, #4]
 17210 02e6 1344     		add	r3, r3, r2
 17211 02e8 2C4A     		ldr	r2, .L660+4
 17212 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 17213 02ec 9278     		ldrb	r2, [r2, #2]
 17214 02ee 1980     		strh	r1, [r3]	@ unaligned
 17215 02f0 9A70     		strb	r2, [r3, #2]
2233:..\src/command_processing.c ****     
2234:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 17216              		.loc 1 2234 0
 17217 02f2 BB6F     		ldr	r3, [r7, #120]
 17218 02f4 5A6D     		ldr	r2, [r3, #84]
 17219 02f6 07F10803 		add	r3, r7, #8
 17220 02fa 2B49     		ldr	r1, .L660+16
 17221 02fc 1846     		mov	r0, r3
 17222 02fe FFF7FEFF 		bl	sprintf
2235:..\src/command_processing.c ****     strcat(info_string, str);
 17223              		.loc 1 2235 0
 17224 0302 07F10803 		add	r3, r7, #8
 17225 0306 1946     		mov	r1, r3
 17226 0308 7868     		ldr	r0, [r7, #4]
 17227 030a FFF7FEFF 		bl	strcat
2236:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17228              		.loc 1 2236 0
 17229 030e 7868     		ldr	r0, [r7, #4]
 17230 0310 FFF7FEFF 		bl	strlen
 17231 0314 0346     		mov	r3, r0
 17232 0316 1A46     		mov	r2, r3
 17233 0318 7B68     		ldr	r3, [r7, #4]
 17234 031a 1344     		add	r3, r3, r2
 17235 031c 1F4A     		ldr	r2, .L660+4
 17236 031e 1188     		ldrh	r1, [r2]	@ unaligned
 17237 0320 9278     		ldrb	r2, [r2, #2]
 17238 0322 1980     		strh	r1, [r3]	@ unaligned
 17239 0324 9A70     		strb	r2, [r3, #2]
2237:..\src/command_processing.c ****     
2238:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 17240              		.loc 1 2238 0
 17241 0326 BB6F     		ldr	r3, [r7, #120]
 17242 0328 9A6D     		ldr	r2, [r3, #88]
 17243 032a 07F10803 		add	r3, r7, #8
 17244 032e 1F49     		ldr	r1, .L660+20
 17245 0330 1846     		mov	r0, r3
 17246 0332 FFF7FEFF 		bl	sprintf
2239:..\src/command_processing.c ****     strcat(info_string, str);
 17247              		.loc 1 2239 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 381


 17248 0336 07F10803 		add	r3, r7, #8
 17249 033a 1946     		mov	r1, r3
 17250 033c 7868     		ldr	r0, [r7, #4]
 17251 033e FFF7FEFF 		bl	strcat
2240:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17252              		.loc 1 2240 0
 17253 0342 7868     		ldr	r0, [r7, #4]
 17254 0344 FFF7FEFF 		bl	strlen
 17255 0348 0346     		mov	r3, r0
 17256 034a 1A46     		mov	r2, r3
 17257 034c 7B68     		ldr	r3, [r7, #4]
 17258 034e 1344     		add	r3, r3, r2
 17259 0350 124A     		ldr	r2, .L660+4
 17260 0352 1188     		ldrh	r1, [r2]	@ unaligned
 17261 0354 9278     		ldrb	r2, [r2, #2]
 17262 0356 1980     		strh	r1, [r3]	@ unaligned
 17263 0358 9A70     		strb	r2, [r3, #2]
2241:..\src/command_processing.c ****     
2242:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 17264              		.loc 1 2242 0
 17265 035a BB6F     		ldr	r3, [r7, #120]
 17266 035c DA6D     		ldr	r2, [r3, #92]
 17267 035e 07F10803 		add	r3, r7, #8
 17268 0362 1349     		ldr	r1, .L660+24
 17269 0364 1846     		mov	r0, r3
 17270 0366 FFF7FEFF 		bl	sprintf
2243:..\src/command_processing.c ****     strcat(info_string, str);
 17271              		.loc 1 2243 0
 17272 036a 07F10803 		add	r3, r7, #8
 17273 036e 1946     		mov	r1, r3
 17274 0370 7868     		ldr	r0, [r7, #4]
 17275 0372 FFF7FEFF 		bl	strcat
2244:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17276              		.loc 1 2244 0
 17277 0376 7868     		ldr	r0, [r7, #4]
 17278 0378 FFF7FEFF 		bl	strlen
 17279 037c 0346     		mov	r3, r0
 17280 037e 1A46     		mov	r2, r3
 17281 0380 7B68     		ldr	r3, [r7, #4]
 17282 0382 1344     		add	r3, r3, r2
 17283 0384 054A     		ldr	r2, .L660+4
 17284 0386 1188     		ldrh	r1, [r2]	@ unaligned
 17285 0388 9278     		ldrb	r2, [r2, #2]
 17286 038a 1980     		strh	r1, [r3]	@ unaligned
 17287 038c 9A70     		strb	r2, [r3, #2]
2245:..\src/command_processing.c **** 
2246:..\src/command_processing.c **** }
 17288              		.loc 1 2246 0
 17289 038e 00BF     		nop
 17290 0390 8437     		adds	r7, r7, #132
 17291              		.cfi_def_cfa_offset 20
 17292 0392 BD46     		mov	sp, r7
 17293              		.cfi_def_cfa_register 13
 17294              		@ sp needed
 17295 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 17296              	.L661:
 17297 0396 00BF     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 382


 17298              	.L660:
 17299 0398 C4170000 		.word	.LC240
 17300 039c 840D0000 		.word	.LC125
 17301 03a0 E0170000 		.word	.LC241
 17302 03a4 04180000 		.word	.LC242
 17303 03a8 24180000 		.word	.LC243
 17304 03ac 4C180000 		.word	.LC244
 17305 03b0 6C180000 		.word	.LC245
 17306              		.cfi_endproc
 17307              	.LFE73:
 17308              		.size	prepare_counter_info, .-prepare_counter_info
 17309              		.section	.rodata
 17310              		.align	2
 17311              	.LC246:
 17312 1890 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 17312      77617265 
 17312      20766572 
 17312      73696F6E 
 17312      3A202573 
 17313 18a7 00       		.align	2
 17314              	.LC247:
 17315 18a8 506F7369 		.ascii	"Position PID: \000"
 17315      74696F6E 
 17315      20504944 
 17315      3A2000
 17316 18b7 00       		.align	2
 17317              	.LC248:
 17318 18b8 43757272 		.ascii	"Current PID: \000"
 17318      656E7420 
 17318      5049443A 
 17318      2000
 17319 18c6 0000     		.align	2
 17320              	.LC249:
 17321 18c8 5265736F 		.ascii	"Resolutions: \000"
 17321      6C757469 
 17321      6F6E733A 
 17321      2000
 17322 18d6 0000     		.align	2
 17323              	.LC250:
 17324 18d8 4F666673 		.ascii	"Offsets: \000"
 17324      6574733A 
 17324      2000
 17325 18e2 0000     		.align	2
 17326              	.LC251:
 17327 18e4 4D756C74 		.ascii	"Multipliers: \000"
 17327      69706C69 
 17327      6572733A 
 17327      2000
 17328 18f2 0000     		.align	2
 17329              	.LC252:
 17330 18f4 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 17330      656E7420 
 17330      6C6F6F6B 
 17330      75702074 
 17330      61626C65 
 17331 1927 662C2025 		.ascii	"f, %f\015\012\000"
 17331      660D0A00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 383


 17332 192f 00       		.align	2
 17333              	.LC253:
 17334 1930 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 17334      74696F6E 
 17334      206C696D 
 17334      69742061 
 17334      63746976 
 17335              		.align	2
 17336              	.LC254:
 17337 194c 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 17337      74696F6E 
 17337      206C696D 
 17337      6974733A 
 17337      20696E66 
 17338              		.section	.text.prepare_SD_param_info,"ax",%progbits
 17339              		.align	2
 17340              		.global	prepare_SD_param_info
 17341              		.thumb
 17342              		.thumb_func
 17343              		.type	prepare_SD_param_info, %function
 17344              	prepare_SD_param_info:
 17345              	.LFB74:
2247:..\src/command_processing.c **** 
2248:..\src/command_processing.c **** //==============================================================================
2249:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2250:..\src/command_processing.c **** //==============================================================================
2251:..\src/command_processing.c **** 
2252:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2253:..\src/command_processing.c **** {
 17346              		.loc 1 2253 0
 17347              		.cfi_startproc
 17348              		@ args = 0, pretend = 0, frame = 152
 17349              		@ frame_needed = 1, uses_anonymous_args = 0
 17350 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 17351              		.cfi_def_cfa_offset 36
 17352              		.cfi_offset 4, -36
 17353              		.cfi_offset 5, -32
 17354              		.cfi_offset 6, -28
 17355              		.cfi_offset 7, -24
 17356              		.cfi_offset 8, -20
 17357              		.cfi_offset 9, -16
 17358              		.cfi_offset 10, -12
 17359              		.cfi_offset 11, -8
 17360              		.cfi_offset 14, -4
 17361 0004 B1B0     		sub	sp, sp, #196
 17362              		.cfi_def_cfa_offset 232
 17363 0006 0AAF     		add	r7, sp, #40
 17364              		.cfi_def_cfa 7, 192
 17365 0008 7861     		str	r0, [r7, #20]
2254:..\src/command_processing.c ****     char str[100];  
2255:..\src/command_processing.c ****     int i;
2256:..\src/command_processing.c ****            
2257:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2258:..\src/command_processing.c ****     
2259:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17366              		.loc 1 2259 0
 17367 000a AB4B     		ldr	r3, .L724
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 384


 17368 000c C7F88C30 		str	r3, [r7, #140]
2260:..\src/command_processing.c ****         
2261:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 17369              		.loc 1 2261 0
 17370 0010 AA4A     		ldr	r2, .L724+4
 17371 0012 AB49     		ldr	r1, .L724+8
 17372 0014 7869     		ldr	r0, [r7, #20]
 17373 0016 FFF7FEFF 		bl	sprintf
2262:..\src/command_processing.c ****     
2263:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 17374              		.loc 1 2263 0
 17375 001a D7F88C30 		ldr	r3, [r7, #140]
 17376 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 17377 0022 1A46     		mov	r2, r3
 17378 0024 07F11C03 		add	r3, r7, #28
 17379 0028 A649     		ldr	r1, .L724+12
 17380 002a 1846     		mov	r0, r3
 17381 002c FFF7FEFF 		bl	sprintf
2264:..\src/command_processing.c ****     strcat(info_string, str);
 17382              		.loc 1 2264 0
 17383 0030 07F11C03 		add	r3, r7, #28
 17384 0034 1946     		mov	r1, r3
 17385 0036 7869     		ldr	r0, [r7, #20]
 17386 0038 FFF7FEFF 		bl	strcat
2265:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 17387              		.loc 1 2265 0
 17388 003c D7F88C30 		ldr	r3, [r7, #140]
 17389 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17390 0044 002B     		cmp	r3, #0
 17391 0046 02D0     		beq	.L664
 17392 0048 012B     		cmp	r3, #1
 17393 004a 15D0     		beq	.L665
 17394 004c 26E0     		b	.L663
 17395              	.L664:
2266:..\src/command_processing.c ****         case RIGHT_HAND:
2267:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 17396              		.loc 1 2267 0
 17397 004e 7869     		ldr	r0, [r7, #20]
 17398 0050 FFF7FEFF 		bl	strlen
 17399 0054 0346     		mov	r3, r0
 17400 0056 1A46     		mov	r2, r3
 17401 0058 7B69     		ldr	r3, [r7, #20]
 17402 005a 1344     		add	r3, r3, r2
 17403 005c 9A4A     		ldr	r2, .L724+16
 17404 005e 1D46     		mov	r5, r3
 17405 0060 1446     		mov	r4, r2
 17406 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17407 0064 2860     		str	r0, [r5]	@ unaligned
 17408 0066 6960     		str	r1, [r5, #4]	@ unaligned
 17409 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 17410 006a EB60     		str	r3, [r5, #12]	@ unaligned
 17411 006c 2388     		ldrh	r3, [r4]	@ unaligned
 17412 006e A278     		ldrb	r2, [r4, #2]
 17413 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 17414 0072 1346     		mov	r3, r2
 17415 0074 AB74     		strb	r3, [r5, #18]
2268:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 385


 17416              		.loc 1 2268 0
 17417 0076 11E0     		b	.L663
 17418              	.L665:
2269:..\src/command_processing.c ****         case LEFT_HAND:
2270:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 17419              		.loc 1 2270 0
 17420 0078 7869     		ldr	r0, [r7, #20]
 17421 007a FFF7FEFF 		bl	strlen
 17422 007e 0346     		mov	r3, r0
 17423 0080 1A46     		mov	r2, r3
 17424 0082 7B69     		ldr	r3, [r7, #20]
 17425 0084 1344     		add	r3, r3, r2
 17426 0086 914A     		ldr	r2, .L724+20
 17427 0088 1D46     		mov	r5, r3
 17428 008a 1446     		mov	r4, r2
 17429 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17430 008e 2860     		str	r0, [r5]	@ unaligned
 17431 0090 6960     		str	r1, [r5, #4]	@ unaligned
 17432 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 17433 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 17434 0096 2388     		ldrh	r3, [r4]	@ unaligned
 17435 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2271:..\src/command_processing.c ****             break;
 17436              		.loc 1 2271 0
 17437 009a 00BF     		nop
 17438              	.L663:
2272:..\src/command_processing.c ****     }
2273:..\src/command_processing.c **** 
2274:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17439              		.loc 1 2274 0
 17440 009c D7F88C30 		ldr	r3, [r7, #140]
 17441 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17442 00a4 1A46     		mov	r2, r3
 17443 00a6 D7F88C30 		ldr	r3, [r7, #140]
 17444 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17445 00ae 1946     		mov	r1, r3
 17446 00b0 D7F88C30 		ldr	r3, [r7, #140]
 17447 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17448 00b8 07F11C00 		add	r0, r7, #28
 17449 00bc 0093     		str	r3, [sp]
 17450 00be 0B46     		mov	r3, r1
 17451 00c0 8349     		ldr	r1, .L724+24
 17452 00c2 FFF7FEFF 		bl	sprintf
2275:..\src/command_processing.c ****     strcat(info_string, str);
 17453              		.loc 1 2275 0
 17454 00c6 07F11C03 		add	r3, r7, #28
 17455 00ca 1946     		mov	r1, r3
 17456 00cc 7869     		ldr	r0, [r7, #20]
 17457 00ce FFF7FEFF 		bl	strcat
2276:..\src/command_processing.c ****     
2277:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17458              		.loc 1 2277 0
 17459 00d2 D7F88C30 		ldr	r3, [r7, #140]
 17460 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17461 00da 1A46     		mov	r2, r3
 17462 00dc D7F88C30 		ldr	r3, [r7, #140]
 17463 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 386


 17464 00e4 1946     		mov	r1, r3
 17465 00e6 D7F88C30 		ldr	r3, [r7, #140]
 17466 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17467 00ee 07F11C00 		add	r0, r7, #28
 17468 00f2 0093     		str	r3, [sp]
 17469 00f4 0B46     		mov	r3, r1
 17470 00f6 7749     		ldr	r1, .L724+28
 17471 00f8 FFF7FEFF 		bl	sprintf
2278:..\src/command_processing.c ****     strcat(info_string, str);
 17472              		.loc 1 2278 0
 17473 00fc 07F11C03 		add	r3, r7, #28
 17474 0100 1946     		mov	r1, r3
 17475 0102 7869     		ldr	r0, [r7, #20]
 17476 0104 FFF7FEFF 		bl	strcat
 17477              	.LBB19:
2279:..\src/command_processing.c ****     
2280:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 17478              		.loc 1 2280 0
 17479 0108 0023     		movs	r3, #0
 17480 010a 87F89330 		strb	r3, [r7, #147]
 17481 010e 00F011BE 		b	.L666
 17482              	.L707:
 17483              	.LBB20:
2281:..\src/command_processing.c ****             
2282:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 17484              		.loc 1 2282 0
 17485 0112 97F89330 		ldrb	r3, [r7, #147]
 17486 0116 87F88B30 		strb	r3, [r7, #139]
2283:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 17487              		.loc 1 2283 0
 17488 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 17489 011e 1346     		mov	r3, r2
 17490 0120 DB00     		lsls	r3, r3, #3
 17491 0122 9B1A     		subs	r3, r3, r2
 17492 0124 1B01     		lsls	r3, r3, #4
 17493 0126 B033     		adds	r3, r3, #176
 17494 0128 D7F88C20 		ldr	r2, [r7, #140]
 17495 012c 1344     		add	r3, r3, r2
 17496 012e C7F88430 		str	r3, [r7, #132]
2284:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 17497              		.loc 1 2284 0
 17498 0132 D7F88430 		ldr	r3, [r7, #132]
 17499 0136 93F86030 		ldrb	r3, [r3, #96]
 17500 013a 87F88330 		strb	r3, [r7, #131]
2285:..\src/command_processing.c ****               
2286:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 17501              		.loc 1 2286 0
 17502 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17503 0142 5A1C     		adds	r2, r3, #1
 17504 0144 07F11C03 		add	r3, r7, #28
 17505 0148 6349     		ldr	r1, .L724+32
 17506 014a 1846     		mov	r0, r3
 17507 014c FFF7FEFF 		bl	sprintf
2287:..\src/command_processing.c ****         strcat(info_string, str);
 17508              		.loc 1 2287 0
 17509 0150 07F11C03 		add	r3, r7, #28
 17510 0154 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 387


 17511 0156 7869     		ldr	r0, [r7, #20]
 17512 0158 FFF7FEFF 		bl	strcat
2288:..\src/command_processing.c ****                     
2289:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 17513              		.loc 1 2289 0
 17514 015c 7869     		ldr	r0, [r7, #20]
 17515 015e FFF7FEFF 		bl	strlen
 17516 0162 0346     		mov	r3, r0
 17517 0164 1A46     		mov	r2, r3
 17518 0166 7B69     		ldr	r3, [r7, #20]
 17519 0168 1344     		add	r3, r3, r2
 17520 016a 5C4A     		ldr	r2, .L724+36
 17521 016c 1D46     		mov	r5, r3
 17522 016e 1446     		mov	r4, r2
 17523 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17524 0172 2860     		str	r0, [r5]	@ unaligned
 17525 0174 6960     		str	r1, [r5, #4]	@ unaligned
 17526 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 17527 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 17528 017a 03CC     		ldmia	r4!, {r0, r1}
 17529 017c 2861     		str	r0, [r5, #16]	@ unaligned
 17530 017e 6961     		str	r1, [r5, #20]	@ unaligned
 17531 0180 2388     		ldrh	r3, [r4]	@ unaligned
 17532 0182 A278     		ldrb	r2, [r4, #2]
 17533 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 17534 0186 1346     		mov	r3, r2
 17535 0188 AB76     		strb	r3, [r5, #26]
2290:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 17536              		.loc 1 2290 0
 17537 018a D7F88430 		ldr	r3, [r7, #132]
 17538 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 17539 0192 012B     		cmp	r3, #1
 17540 0194 0CD1     		bne	.L667
2291:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 17541              		.loc 1 2291 0
 17542 0196 7869     		ldr	r0, [r7, #20]
 17543 0198 FFF7FEFF 		bl	strlen
 17544 019c 0346     		mov	r3, r0
 17545 019e 1A46     		mov	r2, r3
 17546 01a0 7B69     		ldr	r3, [r7, #20]
 17547 01a2 1344     		add	r3, r3, r2
 17548 01a4 4E4A     		ldr	r2, .L724+40
 17549 01a6 1068     		ldr	r0, [r2]	@ unaligned
 17550 01a8 1860     		str	r0, [r3]	@ unaligned
 17551 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17552 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 17553 01ae 0BE0     		b	.L668
 17554              	.L667:
2292:..\src/command_processing.c ****         else
2293:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 17555              		.loc 1 2293 0
 17556 01b0 7869     		ldr	r0, [r7, #20]
 17557 01b2 FFF7FEFF 		bl	strlen
 17558 01b6 0346     		mov	r3, r0
 17559 01b8 1A46     		mov	r2, r3
 17560 01ba 7B69     		ldr	r3, [r7, #20]
 17561 01bc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 388


 17562 01be 494A     		ldr	r2, .L724+44
 17563 01c0 1068     		ldr	r0, [r2]	@ unaligned
 17564 01c2 1860     		str	r0, [r3]	@ unaligned
 17565 01c4 1279     		ldrb	r2, [r2, #4]
 17566 01c6 1A71     		strb	r2, [r3, #4]
 17567              	.L668:
2294:..\src/command_processing.c ****         
2295:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 17568              		.loc 1 2295 0
 17569 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17570 01cc 464A     		ldr	r2, .L724+48
 17571 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 17572 01d0 1A46     		mov	r2, r3
 17573 01d2 07F11C03 		add	r3, r7, #28
 17574 01d6 4549     		ldr	r1, .L724+52
 17575 01d8 1846     		mov	r0, r3
 17576 01da FFF7FEFF 		bl	sprintf
2296:..\src/command_processing.c ****         strcat(info_string, str);
 17577              		.loc 1 2296 0
 17578 01de 07F11C03 		add	r3, r7, #28
 17579 01e2 1946     		mov	r1, r3
 17580 01e4 7869     		ldr	r0, [r7, #20]
 17581 01e6 FFF7FEFF 		bl	strcat
2297:..\src/command_processing.c **** 
2298:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 17582              		.loc 1 2298 0
 17583 01ea 7869     		ldr	r0, [r7, #20]
 17584 01ec FFF7FEFF 		bl	strlen
 17585 01f0 0346     		mov	r3, r0
 17586 01f2 1A46     		mov	r2, r3
 17587 01f4 7B69     		ldr	r3, [r7, #20]
 17588 01f6 1344     		add	r3, r3, r2
 17589 01f8 3D4A     		ldr	r2, .L724+56
 17590 01fa 1C46     		mov	r4, r3
 17591 01fc 1346     		mov	r3, r2
 17592 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 17593 0200 2060     		str	r0, [r4]	@ unaligned
 17594 0202 6160     		str	r1, [r4, #4]	@ unaligned
 17595 0204 A260     		str	r2, [r4, #8]	@ unaligned
 17596 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 17597 0208 9B78     		ldrb	r3, [r3, #2]
 17598 020a A281     		strh	r2, [r4, #12]	@ unaligned
 17599 020c A373     		strb	r3, [r4, #14]
2299:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 17600              		.loc 1 2299 0
 17601 020e D7F88430 		ldr	r3, [r7, #132]
 17602 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17603 0216 032B     		cmp	r3, #3
 17604 0218 74D0     		beq	.L669
2300:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 17605              		.loc 1 2300 0
 17606 021a D7F88430 		ldr	r3, [r7, #132]
 17607 021e 1B68     		ldr	r3, [r3]
 17608 0220 1846     		mov	r0, r3
 17609 0222 FFF7FEFF 		bl	__aeabi_i2d
 17610 0226 4FF00002 		mov	r2, #0
 17611 022a 324B     		ldr	r3, .L724+60
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 389


 17612 022c FFF7FEFF 		bl	__aeabi_ddiv
 17613 0230 0346     		mov	r3, r0
 17614 0232 0C46     		mov	r4, r1
 17615 0234 07F11C00 		add	r0, r7, #28
 17616 0238 1A46     		mov	r2, r3
 17617 023a 2346     		mov	r3, r4
 17618 023c 2E49     		ldr	r1, .L724+64
 17619 023e FFF7FEFF 		bl	sprintf
2301:..\src/command_processing.c ****             strcat(info_string, str);
 17620              		.loc 1 2301 0
 17621 0242 07F11C03 		add	r3, r7, #28
 17622 0246 1946     		mov	r1, r3
 17623 0248 7869     		ldr	r0, [r7, #20]
 17624 024a FFF7FEFF 		bl	strcat
2302:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 17625              		.loc 1 2302 0
 17626 024e D7F88430 		ldr	r3, [r7, #132]
 17627 0252 5B68     		ldr	r3, [r3, #4]
 17628 0254 1846     		mov	r0, r3
 17629 0256 FFF7FEFF 		bl	__aeabi_i2d
 17630 025a 4FF00002 		mov	r2, #0
 17631 025e 254B     		ldr	r3, .L724+60
 17632 0260 FFF7FEFF 		bl	__aeabi_ddiv
 17633 0264 0346     		mov	r3, r0
 17634 0266 0C46     		mov	r4, r1
 17635 0268 07F11C00 		add	r0, r7, #28
 17636 026c 1A46     		mov	r2, r3
 17637 026e 2346     		mov	r3, r4
 17638 0270 2249     		ldr	r1, .L724+68
 17639 0272 FFF7FEFF 		bl	sprintf
2303:..\src/command_processing.c ****             strcat(info_string, str);
 17640              		.loc 1 2303 0
 17641 0276 07F11C03 		add	r3, r7, #28
 17642 027a 1946     		mov	r1, r3
 17643 027c 7869     		ldr	r0, [r7, #20]
 17644 027e FFF7FEFF 		bl	strcat
2304:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 17645              		.loc 1 2304 0
 17646 0282 D7F88430 		ldr	r3, [r7, #132]
 17647 0286 9B68     		ldr	r3, [r3, #8]
 17648 0288 1846     		mov	r0, r3
 17649 028a FFF7FEFF 		bl	__aeabi_i2d
 17650 028e 4FF00002 		mov	r2, #0
 17651 0292 184B     		ldr	r3, .L724+60
 17652 0294 FFF7FEFF 		bl	__aeabi_ddiv
 17653 0298 0346     		mov	r3, r0
 17654 029a 0C46     		mov	r4, r1
 17655 029c 07F11C00 		add	r0, r7, #28
 17656 02a0 1A46     		mov	r2, r3
 17657 02a2 2346     		mov	r3, r4
 17658 02a4 1649     		ldr	r1, .L724+72
 17659 02a6 FFF7FEFF 		bl	sprintf
2305:..\src/command_processing.c ****             strcat(info_string, str);
 17660              		.loc 1 2305 0
 17661 02aa 07F11C03 		add	r3, r7, #28
 17662 02ae 1946     		mov	r1, r3
 17663 02b0 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 390


 17664 02b2 FFF7FEFF 		bl	strcat
 17665 02b6 73E0     		b	.L670
 17666              	.L725:
 17667              		.align	2
 17668              	.L724:
 17669 02b8 00000000 		.word	g_mem
 17670 02bc 9C0D0000 		.word	.LC127
 17671 02c0 90180000 		.word	.LC246
 17672 02c4 D40D0000 		.word	.LC130
 17673 02c8 140E0000 		.word	.LC133
 17674 02cc 280E0000 		.word	.LC134
 17675 02d0 D4160000 		.word	.LC234
 17676 02d4 00170000 		.word	.LC235
 17677 02d8 740E0000 		.word	.LC138
 17678 02dc E40E0000 		.word	.LC147
 17679 02e0 D40E0000 		.word	.LC145
 17680 02e4 DC0E0000 		.word	.LC146
 17681 02e8 00000000 		.word	dev_pwm_limit
 17682 02ec 0C0F0000 		.word	.LC150
 17683 02f0 A8180000 		.word	.LC247
 17684 02f4 0000F040 		.word	1089470464
 17685 02f8 DC0F0000 		.word	.LC160
 17686 02fc E80F0000 		.word	.LC161
 17687 0300 F40F0000 		.word	.LC162
 17688              	.L669:
2306:..\src/command_processing.c ****         }
2307:..\src/command_processing.c ****         else { 
2308:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 17689              		.loc 1 2308 0
 17690 0304 D7F88430 		ldr	r3, [r7, #132]
 17691 0308 9B69     		ldr	r3, [r3, #24]
 17692 030a 1846     		mov	r0, r3
 17693 030c FFF7FEFF 		bl	__aeabi_i2d
 17694 0310 4FF00002 		mov	r2, #0
 17695 0314 CA4B     		ldr	r3, .L726
 17696 0316 FFF7FEFF 		bl	__aeabi_ddiv
 17697 031a 0346     		mov	r3, r0
 17698 031c 0C46     		mov	r4, r1
 17699 031e 07F11C00 		add	r0, r7, #28
 17700 0322 1A46     		mov	r2, r3
 17701 0324 2346     		mov	r3, r4
 17702 0326 C749     		ldr	r1, .L726+4
 17703 0328 FFF7FEFF 		bl	sprintf
2309:..\src/command_processing.c ****             strcat(info_string, str);
 17704              		.loc 1 2309 0
 17705 032c 07F11C03 		add	r3, r7, #28
 17706 0330 1946     		mov	r1, r3
 17707 0332 7869     		ldr	r0, [r7, #20]
 17708 0334 FFF7FEFF 		bl	strcat
2310:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 17709              		.loc 1 2310 0
 17710 0338 D7F88430 		ldr	r3, [r7, #132]
 17711 033c DB69     		ldr	r3, [r3, #28]
 17712 033e 1846     		mov	r0, r3
 17713 0340 FFF7FEFF 		bl	__aeabi_i2d
 17714 0344 4FF00002 		mov	r2, #0
 17715 0348 BD4B     		ldr	r3, .L726
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 391


 17716 034a FFF7FEFF 		bl	__aeabi_ddiv
 17717 034e 0346     		mov	r3, r0
 17718 0350 0C46     		mov	r4, r1
 17719 0352 07F11C00 		add	r0, r7, #28
 17720 0356 1A46     		mov	r2, r3
 17721 0358 2346     		mov	r3, r4
 17722 035a BB49     		ldr	r1, .L726+8
 17723 035c FFF7FEFF 		bl	sprintf
2311:..\src/command_processing.c ****             strcat(info_string, str);
 17724              		.loc 1 2311 0
 17725 0360 07F11C03 		add	r3, r7, #28
 17726 0364 1946     		mov	r1, r3
 17727 0366 7869     		ldr	r0, [r7, #20]
 17728 0368 FFF7FEFF 		bl	strcat
2312:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 17729              		.loc 1 2312 0
 17730 036c D7F88430 		ldr	r3, [r7, #132]
 17731 0370 1B6A     		ldr	r3, [r3, #32]
 17732 0372 1846     		mov	r0, r3
 17733 0374 FFF7FEFF 		bl	__aeabi_i2d
 17734 0378 4FF00002 		mov	r2, #0
 17735 037c B04B     		ldr	r3, .L726
 17736 037e FFF7FEFF 		bl	__aeabi_ddiv
 17737 0382 0346     		mov	r3, r0
 17738 0384 0C46     		mov	r4, r1
 17739 0386 07F11C00 		add	r0, r7, #28
 17740 038a 1A46     		mov	r2, r3
 17741 038c 2346     		mov	r3, r4
 17742 038e AF49     		ldr	r1, .L726+12
 17743 0390 FFF7FEFF 		bl	sprintf
2313:..\src/command_processing.c ****             strcat(info_string, str);
 17744              		.loc 1 2313 0
 17745 0394 07F11C03 		add	r3, r7, #28
 17746 0398 1946     		mov	r1, r3
 17747 039a 7869     		ldr	r0, [r7, #20]
 17748 039c FFF7FEFF 		bl	strcat
 17749              	.L670:
2314:..\src/command_processing.c ****         }
2315:..\src/command_processing.c **** 
2316:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 17750              		.loc 1 2316 0
 17751 03a0 7869     		ldr	r0, [r7, #20]
 17752 03a2 FFF7FEFF 		bl	strlen
 17753 03a6 0346     		mov	r3, r0
 17754 03a8 1A46     		mov	r2, r3
 17755 03aa 7B69     		ldr	r3, [r7, #20]
 17756 03ac 1344     		add	r3, r3, r2
 17757 03ae A84A     		ldr	r2, .L726+16
 17758 03b0 1C46     		mov	r4, r3
 17759 03b2 1346     		mov	r3, r2
 17760 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 17761 03b6 2060     		str	r0, [r4]	@ unaligned
 17762 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 17763 03ba A260     		str	r2, [r4, #8]	@ unaligned
 17764 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 17765 03be A381     		strh	r3, [r4, #12]	@ unaligned
2317:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 392


 17766              		.loc 1 2317 0
 17767 03c0 D7F88430 		ldr	r3, [r7, #132]
 17768 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17769 03c8 032B     		cmp	r3, #3
 17770 03ca 4ED0     		beq	.L671
2318:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 17771              		.loc 1 2318 0
 17772 03cc D7F88430 		ldr	r3, [r7, #132]
 17773 03d0 DB68     		ldr	r3, [r3, #12]
 17774 03d2 1846     		mov	r0, r3
 17775 03d4 FFF7FEFF 		bl	__aeabi_i2d
 17776 03d8 4FF00002 		mov	r2, #0
 17777 03dc 984B     		ldr	r3, .L726
 17778 03de FFF7FEFF 		bl	__aeabi_ddiv
 17779 03e2 0346     		mov	r3, r0
 17780 03e4 0C46     		mov	r4, r1
 17781 03e6 07F11C00 		add	r0, r7, #28
 17782 03ea 1A46     		mov	r2, r3
 17783 03ec 2346     		mov	r3, r4
 17784 03ee 9549     		ldr	r1, .L726+4
 17785 03f0 FFF7FEFF 		bl	sprintf
2319:..\src/command_processing.c ****             strcat(info_string, str);
 17786              		.loc 1 2319 0
 17787 03f4 07F11C03 		add	r3, r7, #28
 17788 03f8 1946     		mov	r1, r3
 17789 03fa 7869     		ldr	r0, [r7, #20]
 17790 03fc FFF7FEFF 		bl	strcat
2320:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 17791              		.loc 1 2320 0
 17792 0400 D7F88430 		ldr	r3, [r7, #132]
 17793 0404 1B69     		ldr	r3, [r3, #16]
 17794 0406 1846     		mov	r0, r3
 17795 0408 FFF7FEFF 		bl	__aeabi_i2d
 17796 040c 4FF00002 		mov	r2, #0
 17797 0410 8B4B     		ldr	r3, .L726
 17798 0412 FFF7FEFF 		bl	__aeabi_ddiv
 17799 0416 0346     		mov	r3, r0
 17800 0418 0C46     		mov	r4, r1
 17801 041a 07F11C00 		add	r0, r7, #28
 17802 041e 1A46     		mov	r2, r3
 17803 0420 2346     		mov	r3, r4
 17804 0422 8949     		ldr	r1, .L726+8
 17805 0424 FFF7FEFF 		bl	sprintf
2321:..\src/command_processing.c ****             strcat(info_string, str);
 17806              		.loc 1 2321 0
 17807 0428 07F11C03 		add	r3, r7, #28
 17808 042c 1946     		mov	r1, r3
 17809 042e 7869     		ldr	r0, [r7, #20]
 17810 0430 FFF7FEFF 		bl	strcat
2322:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 17811              		.loc 1 2322 0
 17812 0434 D7F88430 		ldr	r3, [r7, #132]
 17813 0438 5B69     		ldr	r3, [r3, #20]
 17814 043a 1846     		mov	r0, r3
 17815 043c FFF7FEFF 		bl	__aeabi_i2d
 17816 0440 4FF00002 		mov	r2, #0
 17817 0444 7E4B     		ldr	r3, .L726
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 393


 17818 0446 FFF7FEFF 		bl	__aeabi_ddiv
 17819 044a 0346     		mov	r3, r0
 17820 044c 0C46     		mov	r4, r1
 17821 044e 07F11C00 		add	r0, r7, #28
 17822 0452 1A46     		mov	r2, r3
 17823 0454 2346     		mov	r3, r4
 17824 0456 7D49     		ldr	r1, .L726+12
 17825 0458 FFF7FEFF 		bl	sprintf
2323:..\src/command_processing.c ****             strcat(info_string, str);
 17826              		.loc 1 2323 0
 17827 045c 07F11C03 		add	r3, r7, #28
 17828 0460 1946     		mov	r1, r3
 17829 0462 7869     		ldr	r0, [r7, #20]
 17830 0464 FFF7FEFF 		bl	strcat
 17831 0468 4DE0     		b	.L672
 17832              	.L671:
2324:..\src/command_processing.c **** 
2325:..\src/command_processing.c ****         }
2326:..\src/command_processing.c ****         else {
2327:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 17833              		.loc 1 2327 0
 17834 046a D7F88430 		ldr	r3, [r7, #132]
 17835 046e 5B6A     		ldr	r3, [r3, #36]
 17836 0470 1846     		mov	r0, r3
 17837 0472 FFF7FEFF 		bl	__aeabi_i2d
 17838 0476 4FF00002 		mov	r2, #0
 17839 047a 714B     		ldr	r3, .L726
 17840 047c FFF7FEFF 		bl	__aeabi_ddiv
 17841 0480 0346     		mov	r3, r0
 17842 0482 0C46     		mov	r4, r1
 17843 0484 07F11C00 		add	r0, r7, #28
 17844 0488 1A46     		mov	r2, r3
 17845 048a 2346     		mov	r3, r4
 17846 048c 6D49     		ldr	r1, .L726+4
 17847 048e FFF7FEFF 		bl	sprintf
2328:..\src/command_processing.c ****             strcat(info_string, str);
 17848              		.loc 1 2328 0
 17849 0492 07F11C03 		add	r3, r7, #28
 17850 0496 1946     		mov	r1, r3
 17851 0498 7869     		ldr	r0, [r7, #20]
 17852 049a FFF7FEFF 		bl	strcat
2329:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 17853              		.loc 1 2329 0
 17854 049e D7F88430 		ldr	r3, [r7, #132]
 17855 04a2 9B6A     		ldr	r3, [r3, #40]
 17856 04a4 1846     		mov	r0, r3
 17857 04a6 FFF7FEFF 		bl	__aeabi_i2d
 17858 04aa 4FF00002 		mov	r2, #0
 17859 04ae 644B     		ldr	r3, .L726
 17860 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 17861 04b4 0346     		mov	r3, r0
 17862 04b6 0C46     		mov	r4, r1
 17863 04b8 07F11C00 		add	r0, r7, #28
 17864 04bc 1A46     		mov	r2, r3
 17865 04be 2346     		mov	r3, r4
 17866 04c0 6149     		ldr	r1, .L726+8
 17867 04c2 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 394


2330:..\src/command_processing.c ****             strcat(info_string, str);
 17868              		.loc 1 2330 0
 17869 04c6 07F11C03 		add	r3, r7, #28
 17870 04ca 1946     		mov	r1, r3
 17871 04cc 7869     		ldr	r0, [r7, #20]
 17872 04ce FFF7FEFF 		bl	strcat
2331:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 17873              		.loc 1 2331 0
 17874 04d2 D7F88430 		ldr	r3, [r7, #132]
 17875 04d6 DB6A     		ldr	r3, [r3, #44]
 17876 04d8 1846     		mov	r0, r3
 17877 04da FFF7FEFF 		bl	__aeabi_i2d
 17878 04de 4FF00002 		mov	r2, #0
 17879 04e2 574B     		ldr	r3, .L726
 17880 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 17881 04e8 0346     		mov	r3, r0
 17882 04ea 0C46     		mov	r4, r1
 17883 04ec 07F11C00 		add	r0, r7, #28
 17884 04f0 1A46     		mov	r2, r3
 17885 04f2 2346     		mov	r3, r4
 17886 04f4 5549     		ldr	r1, .L726+12
 17887 04f6 FFF7FEFF 		bl	sprintf
2332:..\src/command_processing.c ****             strcat(info_string, str);
 17888              		.loc 1 2332 0
 17889 04fa 07F11C03 		add	r3, r7, #28
 17890 04fe 1946     		mov	r1, r3
 17891 0500 7869     		ldr	r0, [r7, #20]
 17892 0502 FFF7FEFF 		bl	strcat
 17893              	.L672:
2333:..\src/command_processing.c ****         }
2334:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 17894              		.loc 1 2334 0
 17895 0506 D7F88430 		ldr	r3, [r7, #132]
 17896 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 17897 050e 012B     		cmp	r3, #1
 17898 0510 14D1     		bne	.L673
2335:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 17899              		.loc 1 2335 0
 17900 0512 7869     		ldr	r0, [r7, #20]
 17901 0514 FFF7FEFF 		bl	strlen
 17902 0518 0346     		mov	r3, r0
 17903 051a 1A46     		mov	r2, r3
 17904 051c 7B69     		ldr	r3, [r7, #20]
 17905 051e 1344     		add	r3, r3, r2
 17906 0520 4C4A     		ldr	r2, .L726+20
 17907 0522 1D46     		mov	r5, r3
 17908 0524 1446     		mov	r4, r2
 17909 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17910 0528 2860     		str	r0, [r5]	@ unaligned
 17911 052a 6960     		str	r1, [r5, #4]	@ unaligned
 17912 052c AA60     		str	r2, [r5, #8]	@ unaligned
 17913 052e EB60     		str	r3, [r5, #12]	@ unaligned
 17914 0530 03CC     		ldmia	r4!, {r0, r1}
 17915 0532 2861     		str	r0, [r5, #16]	@ unaligned
 17916 0534 6961     		str	r1, [r5, #20]	@ unaligned
 17917 0536 2388     		ldrh	r3, [r4]	@ unaligned
 17918 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 395


 17919 053a 13E0     		b	.L674
 17920              	.L673:
2336:..\src/command_processing.c ****         else
2337:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 17921              		.loc 1 2337 0
 17922 053c 7869     		ldr	r0, [r7, #20]
 17923 053e FFF7FEFF 		bl	strlen
 17924 0542 0346     		mov	r3, r0
 17925 0544 1A46     		mov	r2, r3
 17926 0546 7B69     		ldr	r3, [r7, #20]
 17927 0548 1344     		add	r3, r3, r2
 17928 054a 434A     		ldr	r2, .L726+24
 17929 054c 1D46     		mov	r5, r3
 17930 054e 1446     		mov	r4, r2
 17931 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17932 0552 2860     		str	r0, [r5]	@ unaligned
 17933 0554 6960     		str	r1, [r5, #4]	@ unaligned
 17934 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 17935 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 17936 055a 03CC     		ldmia	r4!, {r0, r1}
 17937 055c 2861     		str	r0, [r5, #16]	@ unaligned
 17938 055e 6961     		str	r1, [r5, #20]	@ unaligned
 17939 0560 2378     		ldrb	r3, [r4]
 17940 0562 2B76     		strb	r3, [r5, #24]
 17941              	.L674:
2338:..\src/command_processing.c **** 
2339:..\src/command_processing.c ****         switch(MOT->input_mode) {
 17942              		.loc 1 2339 0
 17943 0564 D7F88430 		ldr	r3, [r7, #132]
 17944 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 17945 056c 052B     		cmp	r3, #5
 17946 056e 00F2AC80 		bhi	.L675
 17947 0572 01A2     		adr	r2, .L677
 17948 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 17949              		.p2align 2
 17950              	.L677:
 17951 0578 91050000 		.word	.L676+1
 17952 057c B5050000 		.word	.L678+1
 17953 0580 DD050000 		.word	.L679+1
 17954 0584 0F060000 		.word	.L680+1
 17955 0588 6D060000 		.word	.L681+1
 17956 058c 9B060000 		.word	.L682+1
 17957              		.p2align 1
 17958              	.L676:
2340:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2341:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 17959              		.loc 1 2341 0
 17960 0590 7869     		ldr	r0, [r7, #20]
 17961 0592 FFF7FEFF 		bl	strlen
 17962 0596 0346     		mov	r3, r0
 17963 0598 1A46     		mov	r2, r3
 17964 059a 7B69     		ldr	r3, [r7, #20]
 17965 059c 1344     		add	r3, r3, r2
 17966 059e 2F4A     		ldr	r2, .L726+28
 17967 05a0 1D46     		mov	r5, r3
 17968 05a2 1446     		mov	r4, r2
 17969 05a4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 396


 17970 05a6 2860     		str	r0, [r5]	@ unaligned
 17971 05a8 6960     		str	r1, [r5, #4]	@ unaligned
 17972 05aa AA60     		str	r2, [r5, #8]	@ unaligned
 17973 05ac EB60     		str	r3, [r5, #12]	@ unaligned
 17974 05ae 2388     		ldrh	r3, [r4]	@ unaligned
 17975 05b0 2B82     		strh	r3, [r5, #16]	@ unaligned
2342:..\src/command_processing.c ****                 break;
 17976              		.loc 1 2342 0
 17977 05b2 8AE0     		b	.L675
 17978              	.L678:
2343:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2344:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 17979              		.loc 1 2344 0
 17980 05b4 7869     		ldr	r0, [r7, #20]
 17981 05b6 FFF7FEFF 		bl	strlen
 17982 05ba 0346     		mov	r3, r0
 17983 05bc 1A46     		mov	r2, r3
 17984 05be 7B69     		ldr	r3, [r7, #20]
 17985 05c0 1344     		add	r3, r3, r2
 17986 05c2 274A     		ldr	r2, .L726+32
 17987 05c4 1D46     		mov	r5, r3
 17988 05c6 1446     		mov	r4, r2
 17989 05c8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17990 05ca 2860     		str	r0, [r5]	@ unaligned
 17991 05cc 6960     		str	r1, [r5, #4]	@ unaligned
 17992 05ce AA60     		str	r2, [r5, #8]	@ unaligned
 17993 05d0 EB60     		str	r3, [r5, #12]	@ unaligned
 17994 05d2 2068     		ldr	r0, [r4]	@ unaligned
 17995 05d4 2861     		str	r0, [r5, #16]	@ unaligned
 17996 05d6 2379     		ldrb	r3, [r4, #4]
 17997 05d8 2B75     		strb	r3, [r5, #20]
2345:..\src/command_processing.c ****                 break;
 17998              		.loc 1 2345 0
 17999 05da 76E0     		b	.L675
 18000              	.L679:
2346:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2347:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 18001              		.loc 1 2347 0
 18002 05dc 7869     		ldr	r0, [r7, #20]
 18003 05de FFF7FEFF 		bl	strlen
 18004 05e2 0346     		mov	r3, r0
 18005 05e4 1A46     		mov	r2, r3
 18006 05e6 7B69     		ldr	r3, [r7, #20]
 18007 05e8 1344     		add	r3, r3, r2
 18008 05ea 1E4A     		ldr	r2, .L726+36
 18009 05ec 1D46     		mov	r5, r3
 18010 05ee 1446     		mov	r4, r2
 18011 05f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18012 05f2 2860     		str	r0, [r5]	@ unaligned
 18013 05f4 6960     		str	r1, [r5, #4]	@ unaligned
 18014 05f6 AA60     		str	r2, [r5, #8]	@ unaligned
 18015 05f8 EB60     		str	r3, [r5, #12]	@ unaligned
 18016 05fa 07CC     		ldmia	r4!, {r0, r1, r2}
 18017 05fc 2861     		str	r0, [r5, #16]	@ unaligned
 18018 05fe 6961     		str	r1, [r5, #20]	@ unaligned
 18019 0600 AA61     		str	r2, [r5, #24]	@ unaligned
 18020 0602 2388     		ldrh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 397


 18021 0604 A278     		ldrb	r2, [r4, #2]
 18022 0606 AB83     		strh	r3, [r5, #28]	@ unaligned
 18023 0608 1346     		mov	r3, r2
 18024 060a AB77     		strb	r3, [r5, #30]
2348:..\src/command_processing.c ****                 break;
 18025              		.loc 1 2348 0
 18026 060c 5DE0     		b	.L675
 18027              	.L680:
2349:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2350:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 18028              		.loc 1 2350 0
 18029 060e 7869     		ldr	r0, [r7, #20]
 18030 0610 FFF7FEFF 		bl	strlen
 18031 0614 0346     		mov	r3, r0
 18032 0616 1A46     		mov	r2, r3
 18033 0618 7B69     		ldr	r3, [r7, #20]
 18034 061a 1344     		add	r3, r3, r2
 18035 061c 124A     		ldr	r2, .L726+40
 18036 061e 1D46     		mov	r5, r3
 18037 0620 1446     		mov	r4, r2
 18038 0622 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18039 0624 2860     		str	r0, [r5]	@ unaligned
 18040 0626 6960     		str	r1, [r5, #4]	@ unaligned
 18041 0628 AA60     		str	r2, [r5, #8]	@ unaligned
 18042 062a EB60     		str	r3, [r5, #12]	@ unaligned
 18043 062c 03CC     		ldmia	r4!, {r0, r1}
 18044 062e 2861     		str	r0, [r5, #16]	@ unaligned
 18045 0630 6961     		str	r1, [r5, #20]	@ unaligned
 18046 0632 2388     		ldrh	r3, [r4]	@ unaligned
 18047 0634 A278     		ldrb	r2, [r4, #2]
 18048 0636 2B83     		strh	r3, [r5, #24]	@ unaligned
 18049 0638 1346     		mov	r3, r2
 18050 063a AB76     		strb	r3, [r5, #26]
2351:..\src/command_processing.c ****                 break;
 18051              		.loc 1 2351 0
 18052 063c 45E0     		b	.L675
 18053              	.L727:
 18054 063e 00BF     		.align	2
 18055              	.L726:
 18056 0640 0000F040 		.word	1089470464
 18057 0644 DC0F0000 		.word	.LC160
 18058 0648 E80F0000 		.word	.LC161
 18059 064c F40F0000 		.word	.LC162
 18060 0650 B8180000 		.word	.LC248
 18061 0654 1C100000 		.word	.LC164
 18062 0658 38100000 		.word	.LC165
 18063 065c 54100000 		.word	.LC166
 18064 0660 68100000 		.word	.LC167
 18065 0664 80100000 		.word	.LC168
 18066 0668 A0100000 		.word	.LC169
 18067              	.L681:
2352:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2353:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 18068              		.loc 1 2353 0
 18069 066c 7869     		ldr	r0, [r7, #20]
 18070 066e FFF7FEFF 		bl	strlen
 18071 0672 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 398


 18072 0674 1A46     		mov	r2, r3
 18073 0676 7B69     		ldr	r3, [r7, #20]
 18074 0678 1344     		add	r3, r3, r2
 18075 067a CF4A     		ldr	r2, .L728
 18076 067c 1C46     		mov	r4, r3
 18077 067e 1546     		mov	r5, r2
 18078 0680 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18079 0682 2060     		str	r0, [r4]	@ unaligned
 18080 0684 6160     		str	r1, [r4, #4]	@ unaligned
 18081 0686 A260     		str	r2, [r4, #8]	@ unaligned
 18082 0688 E360     		str	r3, [r4, #12]	@ unaligned
 18083 068a 2868     		ldr	r0, [r5]	@ unaligned
 18084 068c 2061     		str	r0, [r4, #16]	@ unaligned
 18085 068e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 18086 0690 AA79     		ldrb	r2, [r5, #6]
 18087 0692 A382     		strh	r3, [r4, #20]	@ unaligned
 18088 0694 1346     		mov	r3, r2
 18089 0696 A375     		strb	r3, [r4, #22]
2354:..\src/command_processing.c ****                 break;
 18090              		.loc 1 2354 0
 18091 0698 17E0     		b	.L675
 18092              	.L682:
2355:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2356:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 18093              		.loc 1 2356 0
 18094 069a 7869     		ldr	r0, [r7, #20]
 18095 069c FFF7FEFF 		bl	strlen
 18096 06a0 0346     		mov	r3, r0
 18097 06a2 1A46     		mov	r2, r3
 18098 06a4 7B69     		ldr	r3, [r7, #20]
 18099 06a6 1344     		add	r3, r3, r2
 18100 06a8 C44A     		ldr	r2, .L728+4
 18101 06aa 1D46     		mov	r5, r3
 18102 06ac 1446     		mov	r4, r2
 18103 06ae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18104 06b0 2860     		str	r0, [r5]	@ unaligned
 18105 06b2 6960     		str	r1, [r5, #4]	@ unaligned
 18106 06b4 AA60     		str	r2, [r5, #8]	@ unaligned
 18107 06b6 EB60     		str	r3, [r5, #12]	@ unaligned
 18108 06b8 03CC     		ldmia	r4!, {r0, r1}
 18109 06ba 2861     		str	r0, [r5, #16]	@ unaligned
 18110 06bc 6961     		str	r1, [r5, #20]	@ unaligned
 18111 06be 2388     		ldrh	r3, [r4]	@ unaligned
 18112 06c0 A278     		ldrb	r2, [r4, #2]
 18113 06c2 2B83     		strh	r3, [r5, #24]	@ unaligned
 18114 06c4 1346     		mov	r3, r2
 18115 06c6 AB76     		strb	r3, [r5, #26]
2357:..\src/command_processing.c ****                 break;
 18116              		.loc 1 2357 0
 18117 06c8 00BF     		nop
 18118              	.L675:
2358:..\src/command_processing.c ****         }
2359:..\src/command_processing.c **** 
2360:..\src/command_processing.c ****         switch(MOT->control_mode) {
 18119              		.loc 1 2360 0
 18120 06ca D7F88430 		ldr	r3, [r7, #132]
 18121 06ce 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 399


 18122 06d2 032B     		cmp	r3, #3
 18123 06d4 63D8     		bhi	.L722
 18124 06d6 01A2     		adr	r2, .L685
 18125 06d8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 18126              		.p2align 2
 18127              	.L685:
 18128 06dc ED060000 		.word	.L684+1
 18129 06e0 17070000 		.word	.L686+1
 18130 06e4 3B070000 		.word	.L687+1
 18131 06e8 61070000 		.word	.L688+1
 18132              		.p2align 1
 18133              	.L684:
2361:..\src/command_processing.c ****             case CONTROL_ANGLE:
2362:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 18134              		.loc 1 2362 0
 18135 06ec 7869     		ldr	r0, [r7, #20]
 18136 06ee FFF7FEFF 		bl	strlen
 18137 06f2 0346     		mov	r3, r0
 18138 06f4 1A46     		mov	r2, r3
 18139 06f6 7B69     		ldr	r3, [r7, #20]
 18140 06f8 1344     		add	r3, r3, r2
 18141 06fa B14A     		ldr	r2, .L728+8
 18142 06fc 1D46     		mov	r5, r3
 18143 06fe 1446     		mov	r4, r2
 18144 0700 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18145 0702 2860     		str	r0, [r5]	@ unaligned
 18146 0704 6960     		str	r1, [r5, #4]	@ unaligned
 18147 0706 AA60     		str	r2, [r5, #8]	@ unaligned
 18148 0708 EB60     		str	r3, [r5, #12]	@ unaligned
 18149 070a 03CC     		ldmia	r4!, {r0, r1}
 18150 070c 2861     		str	r0, [r5, #16]	@ unaligned
 18151 070e 6961     		str	r1, [r5, #20]	@ unaligned
 18152 0710 2378     		ldrb	r3, [r4]
 18153 0712 2B76     		strb	r3, [r5, #24]
2363:..\src/command_processing.c ****                 break;
 18154              		.loc 1 2363 0
 18155 0714 44E0     		b	.L689
 18156              	.L686:
2364:..\src/command_processing.c ****             case CONTROL_PWM:
2365:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 18157              		.loc 1 2365 0
 18158 0716 7869     		ldr	r0, [r7, #20]
 18159 0718 FFF7FEFF 		bl	strlen
 18160 071c 0346     		mov	r3, r0
 18161 071e 1A46     		mov	r2, r3
 18162 0720 7B69     		ldr	r3, [r7, #20]
 18163 0722 1344     		add	r3, r3, r2
 18164 0724 A74A     		ldr	r2, .L728+12
 18165 0726 1D46     		mov	r5, r3
 18166 0728 1446     		mov	r4, r2
 18167 072a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18168 072c 2860     		str	r0, [r5]	@ unaligned
 18169 072e 6960     		str	r1, [r5, #4]	@ unaligned
 18170 0730 AA60     		str	r2, [r5, #8]	@ unaligned
 18171 0732 EB60     		str	r3, [r5, #12]	@ unaligned
 18172 0734 2068     		ldr	r0, [r4]	@ unaligned
 18173 0736 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 400


2366:..\src/command_processing.c ****                 break;
 18174              		.loc 1 2366 0
 18175 0738 32E0     		b	.L689
 18176              	.L687:
2367:..\src/command_processing.c ****             case CONTROL_CURRENT:
2368:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 18177              		.loc 1 2368 0
 18178 073a 7869     		ldr	r0, [r7, #20]
 18179 073c FFF7FEFF 		bl	strlen
 18180 0740 0346     		mov	r3, r0
 18181 0742 1A46     		mov	r2, r3
 18182 0744 7B69     		ldr	r3, [r7, #20]
 18183 0746 1344     		add	r3, r3, r2
 18184 0748 9F4A     		ldr	r2, .L728+16
 18185 074a 1D46     		mov	r5, r3
 18186 074c 1446     		mov	r4, r2
 18187 074e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18188 0750 2860     		str	r0, [r5]	@ unaligned
 18189 0752 6960     		str	r1, [r5, #4]	@ unaligned
 18190 0754 AA60     		str	r2, [r5, #8]	@ unaligned
 18191 0756 EB60     		str	r3, [r5, #12]	@ unaligned
 18192 0758 03CC     		ldmia	r4!, {r0, r1}
 18193 075a 2861     		str	r0, [r5, #16]	@ unaligned
 18194 075c 6961     		str	r1, [r5, #20]	@ unaligned
2369:..\src/command_processing.c ****                 break;
 18195              		.loc 1 2369 0
 18196 075e 1FE0     		b	.L689
 18197              	.L688:
2370:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2371:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 18198              		.loc 1 2371 0
 18199 0760 7869     		ldr	r0, [r7, #20]
 18200 0762 FFF7FEFF 		bl	strlen
 18201 0766 0346     		mov	r3, r0
 18202 0768 1A46     		mov	r2, r3
 18203 076a 7B69     		ldr	r3, [r7, #20]
 18204 076c 1344     		add	r3, r3, r2
 18205 076e 974A     		ldr	r2, .L728+20
 18206 0770 1446     		mov	r4, r2
 18207 0772 9E46     		mov	lr, r3
 18208 0774 04F1200C 		add	ip, r4, #32
 18209              	.L690:
 18210 0778 7546     		mov	r5, lr
 18211 077a 2646     		mov	r6, r4
 18212 077c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18213 077e 2860     		str	r0, [r5]	@ unaligned
 18214 0780 6960     		str	r1, [r5, #4]	@ unaligned
 18215 0782 AA60     		str	r2, [r5, #8]	@ unaligned
 18216 0784 EB60     		str	r3, [r5, #12]	@ unaligned
 18217 0786 1034     		adds	r4, r4, #16
 18218 0788 0EF1100E 		add	lr, lr, #16
 18219 078c 6445     		cmp	r4, ip
 18220 078e F3D1     		bne	.L690
 18221 0790 7346     		mov	r3, lr
 18222 0792 2246     		mov	r2, r4
 18223 0794 1068     		ldr	r0, [r2]	@ unaligned
 18224 0796 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 401


 18225 0798 1279     		ldrb	r2, [r2, #4]
 18226 079a 1A71     		strb	r2, [r3, #4]
2372:..\src/command_processing.c ****                 break;
 18227              		.loc 1 2372 0
 18228 079c 00E0     		b	.L689
 18229              	.L722:
2373:..\src/command_processing.c ****             default:
2374:..\src/command_processing.c ****                 break;
 18230              		.loc 1 2374 0
 18231 079e 00BF     		nop
 18232              	.L689:
2375:..\src/command_processing.c ****         }
2376:..\src/command_processing.c **** 
2377:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 18233              		.loc 1 2377 0
 18234 07a0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18235 07a4 D7F88C10 		ldr	r1, [r7, #140]
 18236 07a8 1346     		mov	r3, r2
 18237 07aa 5B00     		lsls	r3, r3, #1
 18238 07ac 1344     		add	r3, r3, r2
 18239 07ae 1B01     		lsls	r3, r3, #4
 18240 07b0 0B44     		add	r3, r3, r1
 18241 07b2 03F5D873 		add	r3, r3, #432
 18242 07b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18243 07b8 002B     		cmp	r3, #0
 18244 07ba 1CD0     		beq	.L691
2378:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 18245              		.loc 1 2378 0
 18246 07bc 7869     		ldr	r0, [r7, #20]
 18247 07be FFF7FEFF 		bl	strlen
 18248 07c2 0346     		mov	r3, r0
 18249 07c4 1A46     		mov	r2, r3
 18250 07c6 7B69     		ldr	r3, [r7, #20]
 18251 07c8 1344     		add	r3, r3, r2
 18252 07ca 814A     		ldr	r2, .L728+24
 18253 07cc 1446     		mov	r4, r2
 18254 07ce 9E46     		mov	lr, r3
 18255 07d0 04F1200C 		add	ip, r4, #32
 18256              	.L692:
 18257 07d4 7546     		mov	r5, lr
 18258 07d6 2646     		mov	r6, r4
 18259 07d8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18260 07da 2860     		str	r0, [r5]	@ unaligned
 18261 07dc 6960     		str	r1, [r5, #4]	@ unaligned
 18262 07de AA60     		str	r2, [r5, #8]	@ unaligned
 18263 07e0 EB60     		str	r3, [r5, #12]	@ unaligned
 18264 07e2 1034     		adds	r4, r4, #16
 18265 07e4 0EF1100E 		add	lr, lr, #16
 18266 07e8 6445     		cmp	r4, ip
 18267 07ea F3D1     		bne	.L692
 18268 07ec 7346     		mov	r3, lr
 18269 07ee 2246     		mov	r2, r4
 18270 07f0 1278     		ldrb	r2, [r2]
 18271 07f2 1A70     		strb	r2, [r3]
 18272 07f4 13E0     		b	.L693
 18273              	.L691:
2379:..\src/command_processing.c ****         else
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 402


2380:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 18274              		.loc 1 2380 0
 18275 07f6 7869     		ldr	r0, [r7, #20]
 18276 07f8 FFF7FEFF 		bl	strlen
 18277 07fc 0346     		mov	r3, r0
 18278 07fe 1A46     		mov	r2, r3
 18279 0800 7B69     		ldr	r3, [r7, #20]
 18280 0802 1344     		add	r3, r3, r2
 18281 0804 734A     		ldr	r2, .L728+28
 18282 0806 1C46     		mov	r4, r3
 18283 0808 1546     		mov	r5, r2
 18284 080a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18285 080c 2060     		str	r0, [r4]	@ unaligned
 18286 080e 6160     		str	r1, [r4, #4]	@ unaligned
 18287 0810 A260     		str	r2, [r4, #8]	@ unaligned
 18288 0812 E360     		str	r3, [r4, #12]	@ unaligned
 18289 0814 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18290 0816 2061     		str	r0, [r4, #16]	@ unaligned
 18291 0818 6161     		str	r1, [r4, #20]	@ unaligned
 18292 081a A261     		str	r2, [r4, #24]	@ unaligned
 18293 081c E361     		str	r3, [r4, #28]	@ unaligned
 18294              	.L693:
2381:..\src/command_processing.c **** 
2382:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 18295              		.loc 1 2382 0
 18296 081e 7869     		ldr	r0, [r7, #20]
 18297 0820 FFF7FEFF 		bl	strlen
 18298 0824 0346     		mov	r3, r0
 18299 0826 1A46     		mov	r2, r3
 18300 0828 7B69     		ldr	r3, [r7, #20]
 18301 082a 1344     		add	r3, r3, r2
 18302 082c 6A4A     		ldr	r2, .L728+32
 18303 082e 1C46     		mov	r4, r3
 18304 0830 1346     		mov	r3, r2
 18305 0832 07CB     		ldmia	r3!, {r0, r1, r2}
 18306 0834 2060     		str	r0, [r4]	@ unaligned
 18307 0836 6160     		str	r1, [r4, #4]	@ unaligned
 18308 0838 A260     		str	r2, [r4, #8]	@ unaligned
 18309 083a 1B88     		ldrh	r3, [r3]	@ unaligned
 18310 083c A381     		strh	r3, [r4, #12]	@ unaligned
2383:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18311              		.loc 1 2383 0
 18312 083e 0023     		movs	r3, #0
 18313 0840 C7F89430 		str	r3, [r7, #148]
 18314 0844 30E0     		b	.L694
 18315              	.L696:
2384:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18316              		.loc 1 2384 0
 18317 0846 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18318 084a D7F88C10 		ldr	r1, [r7, #140]
 18319 084e 1346     		mov	r3, r2
 18320 0850 5B00     		lsls	r3, r3, #1
 18321 0852 1344     		add	r3, r3, r2
 18322 0854 1B01     		lsls	r3, r3, #4
 18323 0856 CA18     		adds	r2, r1, r3
 18324 0858 D7F89430 		ldr	r3, [r7, #148]
 18325 085c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 403


 18326 085e 03F29513 		addw	r3, r3, #405
 18327 0862 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18328 0864 1A46     		mov	r2, r3
 18329 0866 07F11C03 		add	r3, r7, #28
 18330 086a 5C49     		ldr	r1, .L728+36
 18331 086c 1846     		mov	r0, r3
 18332 086e FFF7FEFF 		bl	sprintf
2385:..\src/command_processing.c ****             strcat(info_string, str);
 18333              		.loc 1 2385 0
 18334 0872 07F11C03 		add	r3, r7, #28
 18335 0876 1946     		mov	r1, r3
 18336 0878 7869     		ldr	r0, [r7, #20]
 18337 087a FFF7FEFF 		bl	strcat
2386:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18338              		.loc 1 2386 0
 18339 087e D7F89430 		ldr	r3, [r7, #148]
 18340 0882 022B     		cmp	r3, #2
 18341 0884 0BD0     		beq	.L695
2387:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18342              		.loc 1 2387 0
 18343 0886 7869     		ldr	r0, [r7, #20]
 18344 0888 FFF7FEFF 		bl	strlen
 18345 088c 0346     		mov	r3, r0
 18346 088e 1A46     		mov	r2, r3
 18347 0890 7B69     		ldr	r3, [r7, #20]
 18348 0892 1344     		add	r3, r3, r2
 18349 0894 524A     		ldr	r2, .L728+40
 18350 0896 1188     		ldrh	r1, [r2]	@ unaligned
 18351 0898 9278     		ldrb	r2, [r2, #2]
 18352 089a 1980     		strh	r1, [r3]	@ unaligned
 18353 089c 9A70     		strb	r2, [r3, #2]
 18354              	.L695:
2383:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18355              		.loc 1 2383 0 discriminator 2
 18356 089e D7F89430 		ldr	r3, [r7, #148]
 18357 08a2 0133     		adds	r3, r3, #1
 18358 08a4 C7F89430 		str	r3, [r7, #148]
 18359              	.L694:
2383:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18360              		.loc 1 2383 0 is_stmt 0 discriminator 1
 18361 08a8 D7F89430 		ldr	r3, [r7, #148]
 18362 08ac 022B     		cmp	r3, #2
 18363 08ae CADD     		ble	.L696
2388:..\src/command_processing.c ****             }                
2389:..\src/command_processing.c ****         }
2390:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18364              		.loc 1 2390 0 is_stmt 1
 18365 08b0 7869     		ldr	r0, [r7, #20]
 18366 08b2 FFF7FEFF 		bl	strlen
 18367 08b6 0346     		mov	r3, r0
 18368 08b8 1A46     		mov	r2, r3
 18369 08ba 7B69     		ldr	r3, [r7, #20]
 18370 08bc 1344     		add	r3, r3, r2
 18371 08be 494A     		ldr	r2, .L728+44
 18372 08c0 1188     		ldrh	r1, [r2]	@ unaligned
 18373 08c2 9278     		ldrb	r2, [r2, #2]
 18374 08c4 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 404


 18375 08c6 9A70     		strb	r2, [r3, #2]
2391:..\src/command_processing.c **** 
2392:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 18376              		.loc 1 2392 0
 18377 08c8 7869     		ldr	r0, [r7, #20]
 18378 08ca FFF7FEFF 		bl	strlen
 18379 08ce 0346     		mov	r3, r0
 18380 08d0 1A46     		mov	r2, r3
 18381 08d2 7B69     		ldr	r3, [r7, #20]
 18382 08d4 1344     		add	r3, r3, r2
 18383 08d6 4449     		ldr	r1, .L728+48
 18384 08d8 1A46     		mov	r2, r3
 18385 08da 0B46     		mov	r3, r1
 18386 08dc 03CB     		ldmia	r3!, {r0, r1}
 18387 08de 1060     		str	r0, [r2]	@ unaligned
 18388 08e0 5160     		str	r1, [r2, #4]	@ unaligned
 18389 08e2 1B88     		ldrh	r3, [r3]	@ unaligned
 18390 08e4 1381     		strh	r3, [r2, #8]	@ unaligned
2393:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18391              		.loc 1 2393 0
 18392 08e6 0023     		movs	r3, #0
 18393 08e8 C7F89430 		str	r3, [r7, #148]
 18394 08ec 3FE0     		b	.L697
 18395              	.L699:
2394:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18396              		.loc 1 2394 0
 18397 08ee 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18398 08f2 D7F88C10 		ldr	r1, [r7, #140]
 18399 08f6 1346     		mov	r3, r2
 18400 08f8 5B00     		lsls	r3, r3, #1
 18401 08fa 1344     		add	r3, r3, r2
 18402 08fc 9B00     		lsls	r3, r3, #2
 18403 08fe D7F89420 		ldr	r2, [r7, #148]
 18404 0902 1344     		add	r3, r3, r2
 18405 0904 6633     		adds	r3, r3, #102
 18406 0906 51F82310 		ldr	r1, [r1, r3, lsl #2]
 18407 090a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18408 090e D7F88C00 		ldr	r0, [r7, #140]
 18409 0912 1346     		mov	r3, r2
 18410 0914 5B00     		lsls	r3, r3, #1
 18411 0916 1344     		add	r3, r3, r2
 18412 0918 1B01     		lsls	r3, r3, #4
 18413 091a C218     		adds	r2, r0, r3
 18414 091c D7F89430 		ldr	r3, [r7, #148]
 18415 0920 1344     		add	r3, r3, r2
 18416 0922 03F29513 		addw	r3, r3, #405
 18417 0926 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18418 0928 41FA03F2 		asr	r2, r1, r3
 18419 092c 07F11C03 		add	r3, r7, #28
 18420 0930 2E49     		ldr	r1, .L728+52
 18421 0932 1846     		mov	r0, r3
 18422 0934 FFF7FEFF 		bl	sprintf
2395:..\src/command_processing.c ****             strcat(info_string, str);
 18423              		.loc 1 2395 0
 18424 0938 07F11C03 		add	r3, r7, #28
 18425 093c 1946     		mov	r1, r3
 18426 093e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 405


 18427 0940 FFF7FEFF 		bl	strcat
2396:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18428              		.loc 1 2396 0
 18429 0944 D7F89430 		ldr	r3, [r7, #148]
 18430 0948 022B     		cmp	r3, #2
 18431 094a 0BD0     		beq	.L698
2397:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18432              		.loc 1 2397 0
 18433 094c 7869     		ldr	r0, [r7, #20]
 18434 094e FFF7FEFF 		bl	strlen
 18435 0952 0346     		mov	r3, r0
 18436 0954 1A46     		mov	r2, r3
 18437 0956 7B69     		ldr	r3, [r7, #20]
 18438 0958 1344     		add	r3, r3, r2
 18439 095a 214A     		ldr	r2, .L728+40
 18440 095c 1188     		ldrh	r1, [r2]	@ unaligned
 18441 095e 9278     		ldrb	r2, [r2, #2]
 18442 0960 1980     		strh	r1, [r3]	@ unaligned
 18443 0962 9A70     		strb	r2, [r3, #2]
 18444              	.L698:
2393:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18445              		.loc 1 2393 0 discriminator 2
 18446 0964 D7F89430 		ldr	r3, [r7, #148]
 18447 0968 0133     		adds	r3, r3, #1
 18448 096a C7F89430 		str	r3, [r7, #148]
 18449              	.L697:
2393:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18450              		.loc 1 2393 0 is_stmt 0 discriminator 1
 18451 096e D7F89430 		ldr	r3, [r7, #148]
 18452 0972 022B     		cmp	r3, #2
 18453 0974 BBDD     		ble	.L699
2398:..\src/command_processing.c ****             }
2399:..\src/command_processing.c ****         }
2400:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18454              		.loc 1 2400 0 is_stmt 1
 18455 0976 7869     		ldr	r0, [r7, #20]
 18456 0978 FFF7FEFF 		bl	strlen
 18457 097c 0346     		mov	r3, r0
 18458 097e 1A46     		mov	r2, r3
 18459 0980 7B69     		ldr	r3, [r7, #20]
 18460 0982 1344     		add	r3, r3, r2
 18461 0984 174A     		ldr	r2, .L728+44
 18462 0986 1188     		ldrh	r1, [r2]	@ unaligned
 18463 0988 9278     		ldrb	r2, [r2, #2]
 18464 098a 1980     		strh	r1, [r3]	@ unaligned
 18465 098c 9A70     		strb	r2, [r3, #2]
2401:..\src/command_processing.c ****             
2402:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 18466              		.loc 1 2402 0
 18467 098e 7869     		ldr	r0, [r7, #20]
 18468 0990 FFF7FEFF 		bl	strlen
 18469 0994 0346     		mov	r3, r0
 18470 0996 1A46     		mov	r2, r3
 18471 0998 7B69     		ldr	r3, [r7, #20]
 18472 099a 1344     		add	r3, r3, r2
 18473 099c 144A     		ldr	r2, .L728+56
 18474 099e 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 406


 18475 09a0 1346     		mov	r3, r2
 18476 09a2 07CB     		ldmia	r3!, {r0, r1, r2}
 18477 09a4 2060     		str	r0, [r4]	@ unaligned
 18478 09a6 6160     		str	r1, [r4, #4]	@ unaligned
 18479 09a8 A260     		str	r2, [r4, #8]	@ unaligned
 18480 09aa 1B88     		ldrh	r3, [r3]	@ unaligned
 18481 09ac A381     		strh	r3, [r4, #12]	@ unaligned
2403:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18482              		.loc 1 2403 0
 18483 09ae 0023     		movs	r3, #0
 18484 09b0 C7F89430 		str	r3, [r7, #148]
 18485 09b4 54E0     		b	.L700
 18486              	.L729:
 18487 09b6 00BF     		.align	2
 18488              	.L728:
 18489 09b8 BC100000 		.word	.LC170
 18490 09bc D4100000 		.word	.LC171
 18491 09c0 F0100000 		.word	.LC172
 18492 09c4 0C110000 		.word	.LC173
 18493 09c8 20110000 		.word	.LC174
 18494 09cc 38110000 		.word	.LC175
 18495 09d0 60110000 		.word	.LC176
 18496 09d4 84110000 		.word	.LC177
 18497 09d8 C8180000 		.word	.LC249
 18498 09dc 440F0000 		.word	.LC153
 18499 09e0 480F0000 		.word	.LC154
 18500 09e4 840D0000 		.word	.LC125
 18501 09e8 D8180000 		.word	.LC250
 18502 09ec 60120000 		.word	.LC185
 18503 09f0 E4180000 		.word	.LC251
 18504              	.L702:
2404:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18505              		.loc 1 2404 0
 18506 09f4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18507 09f8 D7F88C10 		ldr	r1, [r7, #140]
 18508 09fc 1346     		mov	r3, r2
 18509 09fe 5B00     		lsls	r3, r3, #1
 18510 0a00 1344     		add	r3, r3, r2
 18511 0a02 9B00     		lsls	r3, r3, #2
 18512 0a04 D7F89420 		ldr	r2, [r7, #148]
 18513 0a08 1344     		add	r3, r3, r2
 18514 0a0a 6833     		adds	r3, r3, #104
 18515 0a0c 9B00     		lsls	r3, r3, #2
 18516 0a0e 0B44     		add	r3, r3, r1
 18517 0a10 5B68     		ldr	r3, [r3, #4]	@ float
 18518 0a12 1846     		mov	r0, r3
 18519 0a14 FFF7FEFF 		bl	__aeabi_f2d
 18520 0a18 0346     		mov	r3, r0
 18521 0a1a 0C46     		mov	r4, r1
 18522 0a1c 07F11C00 		add	r0, r7, #28
 18523 0a20 1A46     		mov	r2, r3
 18524 0a22 2346     		mov	r3, r4
 18525 0a24 9E49     		ldr	r1, .L730
 18526 0a26 FFF7FEFF 		bl	sprintf
2405:..\src/command_processing.c ****             strcat(info_string, str);
 18527              		.loc 1 2405 0
 18528 0a2a 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 407


 18529 0a2e 1946     		mov	r1, r3
 18530 0a30 7869     		ldr	r0, [r7, #20]
 18531 0a32 FFF7FEFF 		bl	strcat
2406:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18532              		.loc 1 2406 0
 18533 0a36 D7F89430 		ldr	r3, [r7, #148]
 18534 0a3a 022B     		cmp	r3, #2
 18535 0a3c 0BD0     		beq	.L701
2407:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18536              		.loc 1 2407 0
 18537 0a3e 7869     		ldr	r0, [r7, #20]
 18538 0a40 FFF7FEFF 		bl	strlen
 18539 0a44 0346     		mov	r3, r0
 18540 0a46 1A46     		mov	r2, r3
 18541 0a48 7B69     		ldr	r3, [r7, #20]
 18542 0a4a 1344     		add	r3, r3, r2
 18543 0a4c 954A     		ldr	r2, .L730+4
 18544 0a4e 1188     		ldrh	r1, [r2]	@ unaligned
 18545 0a50 9278     		ldrb	r2, [r2, #2]
 18546 0a52 1980     		strh	r1, [r3]	@ unaligned
 18547 0a54 9A70     		strb	r2, [r3, #2]
 18548              	.L701:
2403:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18549              		.loc 1 2403 0 discriminator 2
 18550 0a56 D7F89430 		ldr	r3, [r7, #148]
 18551 0a5a 0133     		adds	r3, r3, #1
 18552 0a5c C7F89430 		str	r3, [r7, #148]
 18553              	.L700:
2403:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18554              		.loc 1 2403 0 is_stmt 0 discriminator 1
 18555 0a60 D7F89430 		ldr	r3, [r7, #148]
 18556 0a64 022B     		cmp	r3, #2
 18557 0a66 C5DD     		ble	.L702
2408:..\src/command_processing.c ****             }
2409:..\src/command_processing.c ****         }
2410:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 18558              		.loc 1 2410 0 is_stmt 1
 18559 0a68 7869     		ldr	r0, [r7, #20]
 18560 0a6a FFF7FEFF 		bl	strlen
 18561 0a6e 0346     		mov	r3, r0
 18562 0a70 1A46     		mov	r2, r3
 18563 0a72 7B69     		ldr	r3, [r7, #20]
 18564 0a74 1344     		add	r3, r3, r2
 18565 0a76 8C4A     		ldr	r2, .L730+8
 18566 0a78 1188     		ldrh	r1, [r2]	@ unaligned
 18567 0a7a 9278     		ldrb	r2, [r2, #2]
 18568 0a7c 1980     		strh	r1, [r3]	@ unaligned
 18569 0a7e 9A70     		strb	r2, [r3, #2]
2411:..\src/command_processing.c **** 
2412:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 18570              		.loc 1 2412 0
 18571 0a80 D7F88430 		ldr	r3, [r7, #132]
 18572 0a84 5B6C     		ldr	r3, [r3, #68]	@ float
 18573 0a86 1846     		mov	r0, r3
 18574 0a88 FFF7FEFF 		bl	__aeabi_f2d
 18575 0a8c C7E90201 		strd	r0, [r7, #8]
 18576 0a90 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 408


 18577 0a94 9B6C     		ldr	r3, [r3, #72]	@ float
 18578 0a96 1846     		mov	r0, r3
 18579 0a98 FFF7FEFF 		bl	__aeabi_f2d
 18580 0a9c 0446     		mov	r4, r0
 18581 0a9e 0D46     		mov	r5, r1
 18582 0aa0 D7F88430 		ldr	r3, [r7, #132]
 18583 0aa4 DB6C     		ldr	r3, [r3, #76]	@ float
 18584 0aa6 1846     		mov	r0, r3
 18585 0aa8 FFF7FEFF 		bl	__aeabi_f2d
 18586 0aac 8046     		mov	r8, r0
 18587 0aae 8946     		mov	r9, r1
 18588 0ab0 D7F88430 		ldr	r3, [r7, #132]
 18589 0ab4 1B6D     		ldr	r3, [r3, #80]	@ float
 18590 0ab6 1846     		mov	r0, r3
 18591 0ab8 FFF7FEFF 		bl	__aeabi_f2d
 18592 0abc 8246     		mov	r10, r0
 18593 0abe 8B46     		mov	fp, r1
 18594 0ac0 D7F88430 		ldr	r3, [r7, #132]
 18595 0ac4 5B6D     		ldr	r3, [r3, #84]	@ float
 18596 0ac6 1846     		mov	r0, r3
 18597 0ac8 FFF7FEFF 		bl	__aeabi_f2d
 18598 0acc C7E90001 		strd	r0, [r7]
 18599 0ad0 D7F88430 		ldr	r3, [r7, #132]
 18600 0ad4 9B6D     		ldr	r3, [r3, #88]	@ float
 18601 0ad6 1846     		mov	r0, r3
 18602 0ad8 FFF7FEFF 		bl	__aeabi_f2d
 18603 0adc 0246     		mov	r2, r0
 18604 0ade 0B46     		mov	r3, r1
 18605 0ae0 07F11C00 		add	r0, r7, #28
 18606 0ae4 CDE90823 		strd	r2, [sp, #32]
 18607 0ae8 D7E90012 		ldrd	r1, [r7]
 18608 0aec CDE90612 		strd	r1, [sp, #24]
 18609 0af0 CDE904AB 		strd	r10, [sp, #16]
 18610 0af4 CDE90289 		strd	r8, [sp, #8]
 18611 0af8 CDE90045 		strd	r4, [sp]
 18612 0afc D7E90223 		ldrd	r2, [r7, #8]
 18613 0b00 6A49     		ldr	r1, .L730+12
 18614 0b02 FFF7FEFF 		bl	sprintf
2413:..\src/command_processing.c **** 		strcat(info_string, str);
 18615              		.loc 1 2413 0
 18616 0b06 07F11C03 		add	r3, r7, #28
 18617 0b0a 1946     		mov	r1, r3
 18618 0b0c 7869     		ldr	r0, [r7, #20]
 18619 0b0e FFF7FEFF 		bl	strcat
2414:..\src/command_processing.c **** 
2415:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 18620              		.loc 1 2415 0
 18621 0b12 D7F88430 		ldr	r3, [r7, #132]
 18622 0b16 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 18623 0b1a 1A46     		mov	r2, r3
 18624 0b1c 07F11C03 		add	r3, r7, #28
 18625 0b20 6349     		ldr	r1, .L730+16
 18626 0b22 1846     		mov	r0, r3
 18627 0b24 FFF7FEFF 		bl	sprintf
2416:..\src/command_processing.c **** 		strcat(info_string, str);
 18628              		.loc 1 2416 0
 18629 0b28 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 409


 18630 0b2c 1946     		mov	r1, r3
 18631 0b2e 7869     		ldr	r0, [r7, #20]
 18632 0b30 FFF7FEFF 		bl	strcat
2417:..\src/command_processing.c **** 
2418:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 18633              		.loc 1 2418 0
 18634 0b34 D7F88430 		ldr	r3, [r7, #132]
 18635 0b38 596B     		ldr	r1, [r3, #52]
 18636 0b3a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18637 0b3e D7F88C00 		ldr	r0, [r7, #140]
 18638 0b42 1346     		mov	r3, r2
 18639 0b44 5B00     		lsls	r3, r3, #1
 18640 0b46 1344     		add	r3, r3, r2
 18641 0b48 1B01     		lsls	r3, r3, #4
 18642 0b4a 0344     		add	r3, r3, r0
 18643 0b4c 03F29513 		addw	r3, r3, #405
 18644 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18645 0b52 41FA03F4 		asr	r4, r1, r3
 18646 0b56 D7F88430 		ldr	r3, [r7, #132]
 18647 0b5a 996B     		ldr	r1, [r3, #56]
 18648 0b5c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18649 0b60 D7F88C00 		ldr	r0, [r7, #140]
 18650 0b64 1346     		mov	r3, r2
 18651 0b66 5B00     		lsls	r3, r3, #1
 18652 0b68 1344     		add	r3, r3, r2
 18653 0b6a 1B01     		lsls	r3, r3, #4
 18654 0b6c 0344     		add	r3, r3, r0
 18655 0b6e 03F29513 		addw	r3, r3, #405
 18656 0b72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18657 0b74 41FA03F3 		asr	r3, r1, r3
 18658 0b78 07F11C00 		add	r0, r7, #28
 18659 0b7c 2246     		mov	r2, r4
 18660 0b7e 4D49     		ldr	r1, .L730+20
 18661 0b80 FFF7FEFF 		bl	sprintf
2419:..\src/command_processing.c **** 		strcat(info_string, str);
 18662              		.loc 1 2419 0
 18663 0b84 07F11C03 		add	r3, r7, #28
 18664 0b88 1946     		mov	r1, r3
 18665 0b8a 7869     		ldr	r0, [r7, #20]
 18666 0b8c FFF7FEFF 		bl	strcat
2420:..\src/command_processing.c **** 
2421:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 18667              		.loc 1 2421 0
 18668 0b90 D7F88430 		ldr	r3, [r7, #132]
 18669 0b94 B3F95C30 		ldrsh	r3, [r3, #92]
 18670 0b98 1A46     		mov	r2, r3
 18671 0b9a 07F11C03 		add	r3, r7, #28
 18672 0b9e 4649     		ldr	r1, .L730+24
 18673 0ba0 1846     		mov	r0, r3
 18674 0ba2 FFF7FEFF 		bl	sprintf
2422:..\src/command_processing.c **** 		strcat(info_string, str);
 18675              		.loc 1 2422 0
 18676 0ba6 07F11C03 		add	r3, r7, #28
 18677 0baa 1946     		mov	r1, r3
 18678 0bac 7869     		ldr	r0, [r7, #20]
 18679 0bae FFF7FEFF 		bl	strcat
2423:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 410


2424:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 18680              		.loc 1 2424 0
 18681 0bb2 D7F88430 		ldr	r3, [r7, #132]
 18682 0bb6 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 18683 0bba 022B     		cmp	r3, #2
 18684 0bbc 12D0     		beq	.L703
2425:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18685              		.loc 1 2425 0 discriminator 1
 18686 0bbe D7F88430 		ldr	r3, [r7, #132]
 18687 0bc2 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2424:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18688              		.loc 1 2424 0 discriminator 1
 18689 0bc6 032B     		cmp	r3, #3
 18690 0bc8 0CD0     		beq	.L703
2426:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 18691              		.loc 1 2426 0
 18692 0bca D7F88430 		ldr	r3, [r7, #132]
 18693 0bce 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2425:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18694              		.loc 1 2425 0
 18695 0bd2 042B     		cmp	r3, #4
 18696 0bd4 06D0     		beq	.L703
2427:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 18697              		.loc 1 2427 0
 18698 0bd6 D7F88430 		ldr	r3, [r7, #132]
 18699 0bda 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2426:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 18700              		.loc 1 2426 0
 18701 0bde 052B     		cmp	r3, #5
 18702 0be0 40F0A380 		bne	.L704
 18703              	.L703:
2428:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 18704              		.loc 1 2428 0
 18705 0be4 D7F88C30 		ldr	r3, [r7, #140]
 18706 0be8 B3F8F031 		ldrh	r3, [r3, #496]
 18707 0bec 1A46     		mov	r2, r3
 18708 0bee D7F88C30 		ldr	r3, [r7, #140]
 18709 0bf2 B3F8F231 		ldrh	r3, [r3, #498]
 18710 0bf6 07F11C00 		add	r0, r7, #28
 18711 0bfa 3049     		ldr	r1, .L730+28
 18712 0bfc FFF7FEFF 		bl	sprintf
2429:..\src/command_processing.c **** 			strcat(info_string, str);
 18713              		.loc 1 2429 0
 18714 0c00 07F11C03 		add	r3, r7, #28
 18715 0c04 1946     		mov	r1, r3
 18716 0c06 7869     		ldr	r0, [r7, #20]
 18717 0c08 FFF7FEFF 		bl	strcat
2430:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18718              		.loc 1 2430 0
 18719 0c0c 7869     		ldr	r0, [r7, #20]
 18720 0c0e FFF7FEFF 		bl	strlen
 18721 0c12 0346     		mov	r3, r0
 18722 0c14 1A46     		mov	r2, r3
 18723 0c16 7B69     		ldr	r3, [r7, #20]
 18724 0c18 1344     		add	r3, r3, r2
 18725 0c1a 234A     		ldr	r2, .L730+8
 18726 0c1c 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 411


 18727 0c1e 9278     		ldrb	r2, [r2, #2]
 18728 0c20 1980     		strh	r1, [r3]	@ unaligned
 18729 0c22 9A70     		strb	r2, [r3, #2]
2431:..\src/command_processing.c **** 
2432:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 18730              		.loc 1 2432 0
 18731 0c24 D7F88C30 		ldr	r3, [r7, #140]
 18732 0c28 D3F8F421 		ldr	r2, [r3, #500]
 18733 0c2c D7F88C30 		ldr	r3, [r7, #140]
 18734 0c30 D3F8F831 		ldr	r3, [r3, #504]
 18735 0c34 07F11C00 		add	r0, r7, #28
 18736 0c38 2149     		ldr	r1, .L730+32
 18737 0c3a FFF7FEFF 		bl	sprintf
2433:..\src/command_processing.c **** 			strcat(info_string, str);
 18738              		.loc 1 2433 0
 18739 0c3e 07F11C03 		add	r3, r7, #28
 18740 0c42 1946     		mov	r1, r3
 18741 0c44 7869     		ldr	r0, [r7, #20]
 18742 0c46 FFF7FEFF 		bl	strcat
2434:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18743              		.loc 1 2434 0
 18744 0c4a 7869     		ldr	r0, [r7, #20]
 18745 0c4c FFF7FEFF 		bl	strlen
 18746 0c50 0346     		mov	r3, r0
 18747 0c52 1A46     		mov	r2, r3
 18748 0c54 7B69     		ldr	r3, [r7, #20]
 18749 0c56 1344     		add	r3, r3, r2
 18750 0c58 134A     		ldr	r2, .L730+8
 18751 0c5a 1188     		ldrh	r1, [r2]	@ unaligned
 18752 0c5c 9278     		ldrb	r2, [r2, #2]
 18753 0c5e 1980     		strh	r1, [r3]	@ unaligned
 18754 0c60 9A70     		strb	r2, [r3, #2]
2435:..\src/command_processing.c **** 
2436:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 18755              		.loc 1 2436 0
 18756 0c62 D7F88C30 		ldr	r3, [r7, #140]
 18757 0c66 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 18758 0c6a 002B     		cmp	r3, #0
 18759 0c6c 2CD0     		beq	.L705
2437:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 18760              		.loc 1 2437 0
 18761 0c6e 7869     		ldr	r0, [r7, #20]
 18762 0c70 FFF7FEFF 		bl	strlen
 18763 0c74 0346     		mov	r3, r0
 18764 0c76 1A46     		mov	r2, r3
 18765 0c78 7B69     		ldr	r3, [r7, #20]
 18766 0c7a 1344     		add	r3, r3, r2
 18767 0c7c 114A     		ldr	r2, .L730+36
 18768 0c7e 1D46     		mov	r5, r3
 18769 0c80 1446     		mov	r4, r2
 18770 0c82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18771 0c84 2860     		str	r0, [r5]	@ unaligned
 18772 0c86 6960     		str	r1, [r5, #4]	@ unaligned
 18773 0c88 AA60     		str	r2, [r5, #8]	@ unaligned
 18774 0c8a EB60     		str	r3, [r5, #12]	@ unaligned
 18775 0c8c 03CC     		ldmia	r4!, {r0, r1}
 18776 0c8e 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 412


 18777 0c90 6961     		str	r1, [r5, #20]	@ unaligned
 18778 0c92 2388     		ldrh	r3, [r4]	@ unaligned
 18779 0c94 A278     		ldrb	r2, [r4, #2]
 18780 0c96 2B83     		strh	r3, [r5, #24]	@ unaligned
 18781 0c98 1346     		mov	r3, r2
 18782 0c9a AB76     		strb	r3, [r5, #26]
 18783 0c9c 28E0     		b	.L706
 18784              	.L731:
 18785 0c9e 00BF     		.align	2
 18786              	.L730:
 18787 0ca0 80120000 		.word	.LC187
 18788 0ca4 480F0000 		.word	.LC154
 18789 0ca8 840D0000 		.word	.LC125
 18790 0cac F4180000 		.word	.LC252
 18791 0cb0 30190000 		.word	.LC253
 18792 0cb4 4C190000 		.word	.LC254
 18793 0cb8 20130000 		.word	.LC193
 18794 0cbc 14140000 		.word	.LC201
 18795 0cc0 38140000 		.word	.LC202
 18796 0cc4 88140000 		.word	.LC205
 18797              	.L705:
2438:..\src/command_processing.c **** 			else
2439:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 18798              		.loc 1 2439 0
 18799 0cc8 7869     		ldr	r0, [r7, #20]
 18800 0cca FFF7FEFF 		bl	strlen
 18801 0cce 0346     		mov	r3, r0
 18802 0cd0 1A46     		mov	r2, r3
 18803 0cd2 7B69     		ldr	r3, [r7, #20]
 18804 0cd4 1344     		add	r3, r3, r2
 18805 0cd6 CF4A     		ldr	r2, .L732
 18806 0cd8 1D46     		mov	r5, r3
 18807 0cda 1446     		mov	r4, r2
 18808 0cdc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18809 0cde 2860     		str	r0, [r5]	@ unaligned
 18810 0ce0 6960     		str	r1, [r5, #4]	@ unaligned
 18811 0ce2 AA60     		str	r2, [r5, #8]	@ unaligned
 18812 0ce4 EB60     		str	r3, [r5, #12]	@ unaligned
 18813 0ce6 03CC     		ldmia	r4!, {r0, r1}
 18814 0ce8 2861     		str	r0, [r5, #16]	@ unaligned
 18815 0cea 6961     		str	r1, [r5, #20]	@ unaligned
 18816 0cec 2388     		ldrh	r3, [r4]	@ unaligned
 18817 0cee 2B83     		strh	r3, [r5, #24]	@ unaligned
 18818              	.L706:
2440:..\src/command_processing.c **** 
2441:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 18819              		.loc 1 2441 0
 18820 0cf0 D7F88C30 		ldr	r3, [r7, #140]
 18821 0cf4 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 18822 0cf8 1A46     		mov	r2, r3
 18823 0cfa 07F11C03 		add	r3, r7, #28
 18824 0cfe C649     		ldr	r1, .L732+4
 18825 0d00 1846     		mov	r0, r3
 18826 0d02 FFF7FEFF 		bl	sprintf
2442:..\src/command_processing.c **** 			strcat(info_string, str);
 18827              		.loc 1 2442 0
 18828 0d06 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 413


 18829 0d0a 1946     		mov	r1, r3
 18830 0d0c 7869     		ldr	r0, [r7, #20]
 18831 0d0e FFF7FEFF 		bl	strcat
2443:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18832              		.loc 1 2443 0
 18833 0d12 7869     		ldr	r0, [r7, #20]
 18834 0d14 FFF7FEFF 		bl	strlen
 18835 0d18 0346     		mov	r3, r0
 18836 0d1a 1A46     		mov	r2, r3
 18837 0d1c 7B69     		ldr	r3, [r7, #20]
 18838 0d1e 1344     		add	r3, r3, r2
 18839 0d20 BE4A     		ldr	r2, .L732+8
 18840 0d22 1188     		ldrh	r1, [r2]	@ unaligned
 18841 0d24 9278     		ldrb	r2, [r2, #2]
 18842 0d26 1980     		strh	r1, [r3]	@ unaligned
 18843 0d28 9A70     		strb	r2, [r3, #2]
 18844              	.L704:
 18845              	.LBE20:
2280:..\src/command_processing.c ****             
 18846              		.loc 1 2280 0 discriminator 2
 18847 0d2a 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 18848 0d2e 0133     		adds	r3, r3, #1
 18849 0d30 87F89330 		strb	r3, [r7, #147]
 18850              	.L666:
2280:..\src/command_processing.c ****             
 18851              		.loc 1 2280 0 is_stmt 0 discriminator 1
 18852 0d34 D7F88C30 		ldr	r3, [r7, #140]
 18853 0d38 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 18854 0d3c 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 18855 0d40 9A42     		cmp	r2, r3
 18856 0d42 7FF6E6A9 		bls	.L707
 18857              	.LBE19:
2444:..\src/command_processing.c **** 		}
2445:..\src/command_processing.c **** 	}
2446:..\src/command_processing.c **** 	 
2447:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 18858              		.loc 1 2447 0 is_stmt 1
 18859 0d46 D7F88C30 		ldr	r3, [r7, #140]
 18860 0d4a 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 18861 0d4e 002B     		cmp	r3, #0
 18862 0d50 63D0     		beq	.L708
2448:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 18863              		.loc 1 2448 0
 18864 0d52 D7F88C30 		ldr	r3, [r7, #140]
 18865 0d56 D3F8A422 		ldr	r2, [r3, #676]
 18866 0d5a 07F11C03 		add	r3, r7, #28
 18867 0d5e B049     		ldr	r1, .L732+12
 18868 0d60 1846     		mov	r0, r3
 18869 0d62 FFF7FEFF 		bl	sprintf
2449:..\src/command_processing.c ****         strcat(info_string, str);
 18870              		.loc 1 2449 0
 18871 0d66 07F11C03 		add	r3, r7, #28
 18872 0d6a 1946     		mov	r1, r3
 18873 0d6c 7869     		ldr	r0, [r7, #20]
 18874 0d6e FFF7FEFF 		bl	strcat
2450:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18875              		.loc 1 2450 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 414


 18876 0d72 7869     		ldr	r0, [r7, #20]
 18877 0d74 FFF7FEFF 		bl	strlen
 18878 0d78 0346     		mov	r3, r0
 18879 0d7a 1A46     		mov	r2, r3
 18880 0d7c 7B69     		ldr	r3, [r7, #20]
 18881 0d7e 1344     		add	r3, r3, r2
 18882 0d80 A64A     		ldr	r2, .L732+8
 18883 0d82 1188     		ldrh	r1, [r2]	@ unaligned
 18884 0d84 9278     		ldrb	r2, [r2, #2]
 18885 0d86 1980     		strh	r1, [r3]	@ unaligned
 18886 0d88 9A70     		strb	r2, [r3, #2]
2451:..\src/command_processing.c ****         
2452:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 18887              		.loc 1 2452 0
 18888 0d8a D7F88C30 		ldr	r3, [r7, #140]
 18889 0d8e D3F8A822 		ldr	r2, [r3, #680]
 18890 0d92 07F11C03 		add	r3, r7, #28
 18891 0d96 A349     		ldr	r1, .L732+16
 18892 0d98 1846     		mov	r0, r3
 18893 0d9a FFF7FEFF 		bl	sprintf
2453:..\src/command_processing.c ****         strcat(info_string, str);
 18894              		.loc 1 2453 0
 18895 0d9e 07F11C03 		add	r3, r7, #28
 18896 0da2 1946     		mov	r1, r3
 18897 0da4 7869     		ldr	r0, [r7, #20]
 18898 0da6 FFF7FEFF 		bl	strcat
2454:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18899              		.loc 1 2454 0
 18900 0daa 7869     		ldr	r0, [r7, #20]
 18901 0dac FFF7FEFF 		bl	strlen
 18902 0db0 0346     		mov	r3, r0
 18903 0db2 1A46     		mov	r2, r3
 18904 0db4 7B69     		ldr	r3, [r7, #20]
 18905 0db6 1344     		add	r3, r3, r2
 18906 0db8 984A     		ldr	r2, .L732+8
 18907 0dba 1188     		ldrh	r1, [r2]	@ unaligned
 18908 0dbc 9278     		ldrb	r2, [r2, #2]
 18909 0dbe 1980     		strh	r1, [r3]	@ unaligned
 18910 0dc0 9A70     		strb	r2, [r3, #2]
2455:..\src/command_processing.c ****         
2456:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 18911              		.loc 1 2456 0
 18912 0dc2 D7F88C30 		ldr	r3, [r7, #140]
 18913 0dc6 D3F8A022 		ldr	r2, [r3, #672]
 18914 0dca D7F88C30 		ldr	r3, [r7, #140]
 18915 0dce 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 18916 0dd2 1846     		mov	r0, r3
 18917 0dd4 D7F88C10 		ldr	r1, [r7, #140]
 18918 0dd8 0346     		mov	r3, r0
 18919 0dda 5B00     		lsls	r3, r3, #1
 18920 0ddc 0344     		add	r3, r3, r0
 18921 0dde 1B01     		lsls	r3, r3, #4
 18922 0de0 0B44     		add	r3, r3, r1
 18923 0de2 03F29513 		addw	r3, r3, #405
 18924 0de6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18925 0de8 1A41     		asrs	r2, r2, r3
 18926 0dea 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 415


 18927 0dee 8E49     		ldr	r1, .L732+20
 18928 0df0 1846     		mov	r0, r3
 18929 0df2 FFF7FEFF 		bl	sprintf
2457:..\src/command_processing.c ****         strcat(info_string, str);
 18930              		.loc 1 2457 0
 18931 0df6 07F11C03 		add	r3, r7, #28
 18932 0dfa 1946     		mov	r1, r3
 18933 0dfc 7869     		ldr	r0, [r7, #20]
 18934 0dfe FFF7FEFF 		bl	strcat
2458:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 18935              		.loc 1 2458 0
 18936 0e02 7869     		ldr	r0, [r7, #20]
 18937 0e04 FFF7FEFF 		bl	strlen
 18938 0e08 0346     		mov	r3, r0
 18939 0e0a 1A46     		mov	r2, r3
 18940 0e0c 7B69     		ldr	r3, [r7, #20]
 18941 0e0e 1344     		add	r3, r3, r2
 18942 0e10 824A     		ldr	r2, .L732+8
 18943 0e12 1188     		ldrh	r1, [r2]	@ unaligned
 18944 0e14 9278     		ldrb	r2, [r2, #2]
 18945 0e16 1980     		strh	r1, [r3]	@ unaligned
 18946 0e18 9A70     		strb	r2, [r3, #2]
 18947              	.L708:
2459:..\src/command_processing.c ****     }
2460:..\src/command_processing.c **** 	
2461:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 18948              		.loc 1 2461 0
 18949 0e1a D7F88C30 		ldr	r3, [r7, #140]
 18950 0e1e 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 18951 0e22 002B     		cmp	r3, #0
 18952 0e24 00F0CC81 		beq	.L723
2462:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 18953              		.loc 1 2462 0
 18954 0e28 804B     		ldr	r3, .L732+24
 18955 0e2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18956 0e2c 1A46     		mov	r2, r3
 18957 0e2e 07F11C03 		add	r3, r7, #28
 18958 0e32 7F49     		ldr	r1, .L732+28
 18959 0e34 1846     		mov	r0, r3
 18960 0e36 FFF7FEFF 		bl	sprintf
2463:..\src/command_processing.c **** 		strcat(info_string, str);
 18961              		.loc 1 2463 0
 18962 0e3a 07F11C03 		add	r3, r7, #28
 18963 0e3e 1946     		mov	r1, r3
 18964 0e40 7869     		ldr	r0, [r7, #20]
 18965 0e42 FFF7FEFF 		bl	strcat
2464:..\src/command_processing.c **** 		
2465:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 18966              		.loc 1 2465 0
 18967 0e46 7869     		ldr	r0, [r7, #20]
 18968 0e48 FFF7FEFF 		bl	strlen
 18969 0e4c 0346     		mov	r3, r0
 18970 0e4e 1A46     		mov	r2, r3
 18971 0e50 7B69     		ldr	r3, [r7, #20]
 18972 0e52 1344     		add	r3, r3, r2
 18973 0e54 714A     		ldr	r2, .L732+8
 18974 0e56 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 416


 18975 0e58 9278     		ldrb	r2, [r2, #2]
 18976 0e5a 1980     		strh	r1, [r3]	@ unaligned
 18977 0e5c 9A70     		strb	r2, [r3, #2]
2466:..\src/command_processing.c **** 		
2467:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 18978              		.loc 1 2467 0
 18979 0e5e 7869     		ldr	r0, [r7, #20]
 18980 0e60 FFF7FEFF 		bl	strlen
 18981 0e64 0346     		mov	r3, r0
 18982 0e66 1A46     		mov	r2, r3
 18983 0e68 7B69     		ldr	r3, [r7, #20]
 18984 0e6a 1344     		add	r3, r3, r2
 18985 0e6c 714A     		ldr	r2, .L732+32
 18986 0e6e 1D46     		mov	r5, r3
 18987 0e70 1446     		mov	r4, r2
 18988 0e72 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18989 0e74 2860     		str	r0, [r5]	@ unaligned
 18990 0e76 6960     		str	r1, [r5, #4]	@ unaligned
 18991 0e78 AA60     		str	r2, [r5, #8]	@ unaligned
 18992 0e7a EB60     		str	r3, [r5, #12]	@ unaligned
 18993 0e7c 2068     		ldr	r0, [r4]	@ unaligned
 18994 0e7e 2861     		str	r0, [r5, #16]	@ unaligned
 18995 0e80 2379     		ldrb	r3, [r4, #4]
 18996 0e82 2B75     		strb	r3, [r5, #20]
2468:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 18997              		.loc 1 2468 0
 18998 0e84 0023     		movs	r3, #0
 18999 0e86 C7F89430 		str	r3, [r7, #148]
 19000 0e8a 85E1     		b	.L710
 19001              	.L721:
2469:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19002              		.loc 1 2469 0
 19003 0e8c 6A4A     		ldr	r2, .L732+36
 19004 0e8e D7F89430 		ldr	r3, [r7, #148]
 19005 0e92 1344     		add	r3, r3, r2
 19006 0e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19007 0e96 07F11C00 		add	r0, r7, #28
 19008 0e9a D7F89420 		ldr	r2, [r7, #148]
 19009 0e9e 6749     		ldr	r1, .L732+40
 19010 0ea0 FFF7FEFF 		bl	sprintf
2470:..\src/command_processing.c **** 			strcat(info_string, str);
 19011              		.loc 1 2470 0
 19012 0ea4 07F11C03 		add	r3, r7, #28
 19013 0ea8 1946     		mov	r1, r3
 19014 0eaa 7869     		ldr	r0, [r7, #20]
 19015 0eac FFF7FEFF 		bl	strcat
2471:..\src/command_processing.c **** 			
2472:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 19016              		.loc 1 2472 0
 19017 0eb0 07F11C03 		add	r3, r7, #28
 19018 0eb4 624A     		ldr	r2, .L732+44
 19019 0eb6 1C46     		mov	r4, r3
 19020 0eb8 1546     		mov	r5, r2
 19021 0eba 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19022 0ebc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 19023 0ebe 2B68     		ldr	r3, [r5]
 19024 0ec0 2380     		strh	r3, [r4]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 417


2473:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 19025              		.loc 1 2473 0
 19026 0ec2 5D4A     		ldr	r2, .L732+36
 19027 0ec4 D7F89430 		ldr	r3, [r7, #148]
 19028 0ec8 1344     		add	r3, r3, r2
 19029 0eca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19030 0ecc 1946     		mov	r1, r3
 19031 0ece D7F88C20 		ldr	r2, [r7, #140]
 19032 0ed2 0B46     		mov	r3, r1
 19033 0ed4 9B00     		lsls	r3, r3, #2
 19034 0ed6 0B44     		add	r3, r3, r1
 19035 0ed8 1344     		add	r3, r3, r2
 19036 0eda 03F20223 		addw	r3, r3, #514
 19037 0ede 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19038 0ee0 002B     		cmp	r3, #0
 19039 0ee2 0FD0     		beq	.L711
2474:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19040              		.loc 1 2474 0
 19041 0ee4 07F11C03 		add	r3, r7, #28
 19042 0ee8 1846     		mov	r0, r3
 19043 0eea FFF7FEFF 		bl	strlen
 19044 0eee 0346     		mov	r3, r0
 19045 0ef0 1A46     		mov	r2, r3
 19046 0ef2 07F11C03 		add	r3, r7, #28
 19047 0ef6 1344     		add	r3, r3, r2
 19048 0ef8 524A     		ldr	r2, .L732+48
 19049 0efa 1068     		ldr	r0, [r2]	@ unaligned
 19050 0efc 1860     		str	r0, [r3]	@ unaligned
 19051 0efe 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19052 0f00 9A80     		strh	r2, [r3, #4]	@ unaligned
 19053 0f02 0EE0     		b	.L712
 19054              	.L711:
2475:..\src/command_processing.c **** 			else
2476:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 19055              		.loc 1 2476 0
 19056 0f04 07F11C03 		add	r3, r7, #28
 19057 0f08 1846     		mov	r0, r3
 19058 0f0a FFF7FEFF 		bl	strlen
 19059 0f0e 0346     		mov	r3, r0
 19060 0f10 1A46     		mov	r2, r3
 19061 0f12 07F11C03 		add	r3, r7, #28
 19062 0f16 1344     		add	r3, r3, r2
 19063 0f18 4B4A     		ldr	r2, .L732+52
 19064 0f1a 1068     		ldr	r0, [r2]	@ unaligned
 19065 0f1c 1860     		str	r0, [r3]	@ unaligned
 19066 0f1e 1279     		ldrb	r2, [r2, #4]
 19067 0f20 1A71     		strb	r2, [r3, #4]
 19068              	.L712:
2477:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 19069              		.loc 1 2477 0
 19070 0f22 07F11C03 		add	r3, r7, #28
 19071 0f26 1846     		mov	r0, r3
 19072 0f28 FFF7FEFF 		bl	strlen
 19073 0f2c 0346     		mov	r3, r0
 19074 0f2e 1A46     		mov	r2, r3
 19075 0f30 07F11C03 		add	r3, r7, #28
 19076 0f34 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 418


 19077 0f36 454A     		ldr	r2, .L732+56
 19078 0f38 1C46     		mov	r4, r3
 19079 0f3a 1346     		mov	r3, r2
 19080 0f3c 07CB     		ldmia	r3!, {r0, r1, r2}
 19081 0f3e 2060     		str	r0, [r4]	@ unaligned
 19082 0f40 6160     		str	r1, [r4, #4]	@ unaligned
 19083 0f42 A260     		str	r2, [r4, #8]	@ unaligned
 19084 0f44 1B88     		ldrh	r3, [r3]	@ unaligned
 19085 0f46 A381     		strh	r3, [r4, #12]	@ unaligned
2478:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 19086              		.loc 1 2478 0
 19087 0f48 3B4A     		ldr	r2, .L732+36
 19088 0f4a D7F89430 		ldr	r3, [r7, #148]
 19089 0f4e 1344     		add	r3, r3, r2
 19090 0f50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19091 0f52 1946     		mov	r1, r3
 19092 0f54 D7F88C20 		ldr	r2, [r7, #140]
 19093 0f58 0B46     		mov	r3, r1
 19094 0f5a 9B00     		lsls	r3, r3, #2
 19095 0f5c 0B44     		add	r3, r3, r1
 19096 0f5e 1344     		add	r3, r3, r2
 19097 0f60 03F20323 		addw	r3, r3, #515
 19098 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19099 0f66 002B     		cmp	r3, #0
 19100 0f68 0FD0     		beq	.L713
2479:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19101              		.loc 1 2479 0
 19102 0f6a 07F11C03 		add	r3, r7, #28
 19103 0f6e 1846     		mov	r0, r3
 19104 0f70 FFF7FEFF 		bl	strlen
 19105 0f74 0346     		mov	r3, r0
 19106 0f76 1A46     		mov	r2, r3
 19107 0f78 07F11C03 		add	r3, r7, #28
 19108 0f7c 1344     		add	r3, r3, r2
 19109 0f7e 314A     		ldr	r2, .L732+48
 19110 0f80 1068     		ldr	r0, [r2]	@ unaligned
 19111 0f82 1860     		str	r0, [r3]	@ unaligned
 19112 0f84 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19113 0f86 9A80     		strh	r2, [r3, #4]	@ unaligned
 19114 0f88 0EE0     		b	.L714
 19115              	.L713:
2480:..\src/command_processing.c **** 			else
2481:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 19116              		.loc 1 2481 0
 19117 0f8a 07F11C03 		add	r3, r7, #28
 19118 0f8e 1846     		mov	r0, r3
 19119 0f90 FFF7FEFF 		bl	strlen
 19120 0f94 0346     		mov	r3, r0
 19121 0f96 1A46     		mov	r2, r3
 19122 0f98 07F11C03 		add	r3, r7, #28
 19123 0f9c 1344     		add	r3, r3, r2
 19124 0f9e 2A4A     		ldr	r2, .L732+52
 19125 0fa0 1068     		ldr	r0, [r2]	@ unaligned
 19126 0fa2 1860     		str	r0, [r3]	@ unaligned
 19127 0fa4 1279     		ldrb	r2, [r2, #4]
 19128 0fa6 1A71     		strb	r2, [r3, #4]
 19129              	.L714:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 419


2482:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 19130              		.loc 1 2482 0
 19131 0fa8 07F11C03 		add	r3, r7, #28
 19132 0fac 1846     		mov	r0, r3
 19133 0fae FFF7FEFF 		bl	strlen
 19134 0fb2 0346     		mov	r3, r0
 19135 0fb4 1A46     		mov	r2, r3
 19136 0fb6 07F11C03 		add	r3, r7, #28
 19137 0fba 1344     		add	r3, r3, r2
 19138 0fbc 244A     		ldr	r2, .L732+60
 19139 0fbe 1D46     		mov	r5, r3
 19140 0fc0 1446     		mov	r4, r2
 19141 0fc2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19142 0fc4 2860     		str	r0, [r5]	@ unaligned
 19143 0fc6 6960     		str	r1, [r5, #4]	@ unaligned
 19144 0fc8 AA60     		str	r2, [r5, #8]	@ unaligned
 19145 0fca EB60     		str	r3, [r5, #12]	@ unaligned
 19146 0fcc 2378     		ldrb	r3, [r4]
 19147 0fce 2B74     		strb	r3, [r5, #16]
2483:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 19148              		.loc 1 2483 0
 19149 0fd0 194A     		ldr	r2, .L732+36
 19150 0fd2 D7F89430 		ldr	r3, [r7, #148]
 19151 0fd6 1344     		add	r3, r3, r2
 19152 0fd8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19153 0fda 1946     		mov	r1, r3
 19154 0fdc D7F88C20 		ldr	r2, [r7, #140]
 19155 0fe0 0B46     		mov	r3, r1
 19156 0fe2 9B00     		lsls	r3, r3, #2
 19157 0fe4 0B44     		add	r3, r3, r1
 19158 0fe6 1344     		add	r3, r3, r2
 19159 0fe8 03F50173 		add	r3, r3, #516
 19160 0fec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19161 0fee 002B     		cmp	r3, #0
 19162 0ff0 30D0     		beq	.L715
2484:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19163              		.loc 1 2484 0
 19164 0ff2 07F11C03 		add	r3, r7, #28
 19165 0ff6 1846     		mov	r0, r3
 19166 0ff8 FFF7FEFF 		bl	strlen
 19167 0ffc 0346     		mov	r3, r0
 19168 0ffe 1A46     		mov	r2, r3
 19169 1000 07F11C03 		add	r3, r7, #28
 19170 1004 1344     		add	r3, r3, r2
 19171 1006 0F4A     		ldr	r2, .L732+48
 19172 1008 1068     		ldr	r0, [r2]	@ unaligned
 19173 100a 1860     		str	r0, [r3]	@ unaligned
 19174 100c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19175 100e 9A80     		strh	r2, [r3, #4]	@ unaligned
 19176 1010 2FE0     		b	.L716
 19177              	.L733:
 19178 1012 00BF     		.align	2
 19179              	.L732:
 19180 1014 A4140000 		.word	.LC206
 19181 1018 C0140000 		.word	.LC207
 19182 101c 840D0000 		.word	.LC125
 19183 1020 18150000 		.word	.LC211
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 420


 19184 1024 34150000 		.word	.LC212
 19185 1028 5C150000 		.word	.LC213
 19186 102c 00000000 		.word	N_IMU_Connected
 19187 1030 70150000 		.word	.LC214
 19188 1034 84150000 		.word	.LC215
 19189 1038 00000000 		.word	IMU_connected
 19190 103c 9C150000 		.word	.LC216
 19191 1040 B0150000 		.word	.LC217
 19192 1044 D40E0000 		.word	.LC145
 19193 1048 DC0E0000 		.word	.LC146
 19194 104c C4150000 		.word	.LC218
 19195 1050 D4150000 		.word	.LC219
 19196              	.L715:
2485:..\src/command_processing.c **** 			else
2486:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19197              		.loc 1 2486 0
 19198 1054 07F11C03 		add	r3, r7, #28
 19199 1058 1846     		mov	r0, r3
 19200 105a FFF7FEFF 		bl	strlen
 19201 105e 0346     		mov	r3, r0
 19202 1060 1A46     		mov	r2, r3
 19203 1062 07F11C03 		add	r3, r7, #28
 19204 1066 1344     		add	r3, r3, r2
 19205 1068 584A     		ldr	r2, .L734
 19206 106a 1068     		ldr	r0, [r2]	@ unaligned
 19207 106c 1860     		str	r0, [r3]	@ unaligned
 19208 106e 1279     		ldrb	r2, [r2, #4]
 19209 1070 1A71     		strb	r2, [r3, #4]
 19210              	.L716:
2487:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 19211              		.loc 1 2487 0
 19212 1072 07F11C03 		add	r3, r7, #28
 19213 1076 1846     		mov	r0, r3
 19214 1078 FFF7FEFF 		bl	strlen
 19215 107c 0346     		mov	r3, r0
 19216 107e 1A46     		mov	r2, r3
 19217 1080 07F11C03 		add	r3, r7, #28
 19218 1084 1344     		add	r3, r3, r2
 19219 1086 524A     		ldr	r2, .L734+4
 19220 1088 1C46     		mov	r4, r3
 19221 108a 1346     		mov	r3, r2
 19222 108c 07CB     		ldmia	r3!, {r0, r1, r2}
 19223 108e 2060     		str	r0, [r4]	@ unaligned
 19224 1090 6160     		str	r1, [r4, #4]	@ unaligned
 19225 1092 A260     		str	r2, [r4, #8]	@ unaligned
 19226 1094 1B88     		ldrh	r3, [r3]	@ unaligned
 19227 1096 A381     		strh	r3, [r4, #12]	@ unaligned
2488:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 19228              		.loc 1 2488 0
 19229 1098 4E4A     		ldr	r2, .L734+8
 19230 109a D7F89430 		ldr	r3, [r7, #148]
 19231 109e 1344     		add	r3, r3, r2
 19232 10a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19233 10a2 1946     		mov	r1, r3
 19234 10a4 D7F88C20 		ldr	r2, [r7, #140]
 19235 10a8 0B46     		mov	r3, r1
 19236 10aa 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 421


 19237 10ac 0B44     		add	r3, r3, r1
 19238 10ae 1344     		add	r3, r3, r2
 19239 10b0 03F20523 		addw	r3, r3, #517
 19240 10b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19241 10b6 002B     		cmp	r3, #0
 19242 10b8 0FD0     		beq	.L717
2489:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19243              		.loc 1 2489 0
 19244 10ba 07F11C03 		add	r3, r7, #28
 19245 10be 1846     		mov	r0, r3
 19246 10c0 FFF7FEFF 		bl	strlen
 19247 10c4 0346     		mov	r3, r0
 19248 10c6 1A46     		mov	r2, r3
 19249 10c8 07F11C03 		add	r3, r7, #28
 19250 10cc 1344     		add	r3, r3, r2
 19251 10ce 424A     		ldr	r2, .L734+12
 19252 10d0 1068     		ldr	r0, [r2]	@ unaligned
 19253 10d2 1860     		str	r0, [r3]	@ unaligned
 19254 10d4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19255 10d6 9A80     		strh	r2, [r3, #4]	@ unaligned
 19256 10d8 0EE0     		b	.L718
 19257              	.L717:
2490:..\src/command_processing.c **** 			else
2491:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19258              		.loc 1 2491 0
 19259 10da 07F11C03 		add	r3, r7, #28
 19260 10de 1846     		mov	r0, r3
 19261 10e0 FFF7FEFF 		bl	strlen
 19262 10e4 0346     		mov	r3, r0
 19263 10e6 1A46     		mov	r2, r3
 19264 10e8 07F11C03 		add	r3, r7, #28
 19265 10ec 1344     		add	r3, r3, r2
 19266 10ee 374A     		ldr	r2, .L734
 19267 10f0 1068     		ldr	r0, [r2]	@ unaligned
 19268 10f2 1860     		str	r0, [r3]	@ unaligned
 19269 10f4 1279     		ldrb	r2, [r2, #4]
 19270 10f6 1A71     		strb	r2, [r3, #4]
 19271              	.L718:
2492:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 19272              		.loc 1 2492 0
 19273 10f8 07F11C03 		add	r3, r7, #28
 19274 10fc 1846     		mov	r0, r3
 19275 10fe FFF7FEFF 		bl	strlen
 19276 1102 0346     		mov	r3, r0
 19277 1104 1A46     		mov	r2, r3
 19278 1106 07F11C03 		add	r3, r7, #28
 19279 110a 1344     		add	r3, r3, r2
 19280 110c 334A     		ldr	r2, .L734+16
 19281 110e 1C46     		mov	r4, r3
 19282 1110 1346     		mov	r3, r2
 19283 1112 07CB     		ldmia	r3!, {r0, r1, r2}
 19284 1114 2060     		str	r0, [r4]	@ unaligned
 19285 1116 6160     		str	r1, [r4, #4]	@ unaligned
 19286 1118 A260     		str	r2, [r4, #8]	@ unaligned
 19287 111a 1A88     		ldrh	r2, [r3]	@ unaligned
 19288 111c 9B78     		ldrb	r3, [r3, #2]
 19289 111e A281     		strh	r2, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 422


 19290 1120 A373     		strb	r3, [r4, #14]
2493:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 19291              		.loc 1 2493 0
 19292 1122 2C4A     		ldr	r2, .L734+8
 19293 1124 D7F89430 		ldr	r3, [r7, #148]
 19294 1128 1344     		add	r3, r3, r2
 19295 112a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19296 112c 1946     		mov	r1, r3
 19297 112e D7F88C20 		ldr	r2, [r7, #140]
 19298 1132 0B46     		mov	r3, r1
 19299 1134 9B00     		lsls	r3, r3, #2
 19300 1136 0B44     		add	r3, r3, r1
 19301 1138 1344     		add	r3, r3, r2
 19302 113a 03F20623 		addw	r3, r3, #518
 19303 113e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19304 1140 002B     		cmp	r3, #0
 19305 1142 0FD0     		beq	.L719
2494:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19306              		.loc 1 2494 0
 19307 1144 07F11C03 		add	r3, r7, #28
 19308 1148 1846     		mov	r0, r3
 19309 114a FFF7FEFF 		bl	strlen
 19310 114e 0346     		mov	r3, r0
 19311 1150 1A46     		mov	r2, r3
 19312 1152 07F11C03 		add	r3, r7, #28
 19313 1156 1344     		add	r3, r3, r2
 19314 1158 1F4A     		ldr	r2, .L734+12
 19315 115a 1068     		ldr	r0, [r2]	@ unaligned
 19316 115c 1860     		str	r0, [r3]	@ unaligned
 19317 115e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19318 1160 9A80     		strh	r2, [r3, #4]	@ unaligned
 19319 1162 0EE0     		b	.L720
 19320              	.L719:
2495:..\src/command_processing.c **** 			else
2496:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19321              		.loc 1 2496 0
 19322 1164 07F11C03 		add	r3, r7, #28
 19323 1168 1846     		mov	r0, r3
 19324 116a FFF7FEFF 		bl	strlen
 19325 116e 0346     		mov	r3, r0
 19326 1170 1A46     		mov	r2, r3
 19327 1172 07F11C03 		add	r3, r7, #28
 19328 1176 1344     		add	r3, r3, r2
 19329 1178 144A     		ldr	r2, .L734
 19330 117a 1068     		ldr	r0, [r2]	@ unaligned
 19331 117c 1860     		str	r0, [r3]	@ unaligned
 19332 117e 1279     		ldrb	r2, [r2, #4]
 19333 1180 1A71     		strb	r2, [r3, #4]
 19334              	.L720:
2497:..\src/command_processing.c **** 				 
2498:..\src/command_processing.c **** 			strcat(info_string, str);
 19335              		.loc 1 2498 0 discriminator 2
 19336 1182 07F11C03 		add	r3, r7, #28
 19337 1186 1946     		mov	r1, r3
 19338 1188 7869     		ldr	r0, [r7, #20]
 19339 118a FFF7FEFF 		bl	strcat
2468:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 423


 19340              		.loc 1 2468 0 discriminator 2
 19341 118e D7F89430 		ldr	r3, [r7, #148]
 19342 1192 0133     		adds	r3, r3, #1
 19343 1194 C7F89430 		str	r3, [r7, #148]
 19344              	.L710:
2468:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19345              		.loc 1 2468 0 is_stmt 0 discriminator 1
 19346 1198 114B     		ldr	r3, .L734+20
 19347 119a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19348 119c 1A46     		mov	r2, r3
 19349 119e D7F89430 		ldr	r3, [r7, #148]
 19350 11a2 9A42     		cmp	r2, r3
 19351 11a4 3FF772AE 		bgt	.L721
2499:..\src/command_processing.c **** 		}       
2500:..\src/command_processing.c **** 		
2501:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 19352              		.loc 1 2501 0 is_stmt 1
 19353 11a8 7869     		ldr	r0, [r7, #20]
 19354 11aa FFF7FEFF 		bl	strlen
 19355 11ae 0346     		mov	r3, r0
 19356 11b0 1A46     		mov	r2, r3
 19357 11b2 7B69     		ldr	r3, [r7, #20]
 19358 11b4 1344     		add	r3, r3, r2
 19359 11b6 0B4A     		ldr	r2, .L734+24
 19360 11b8 1188     		ldrh	r1, [r2]	@ unaligned
 19361 11ba 9278     		ldrb	r2, [r2, #2]
 19362 11bc 1980     		strh	r1, [r3]	@ unaligned
 19363 11be 9A70     		strb	r2, [r3, #2]
 19364              	.L723:
2502:..\src/command_processing.c **** 	}
2503:..\src/command_processing.c **** }
 19365              		.loc 1 2503 0
 19366 11c0 00BF     		nop
 19367 11c2 9C37     		adds	r7, r7, #156
 19368              		.cfi_def_cfa_offset 36
 19369 11c4 BD46     		mov	sp, r7
 19370              		.cfi_def_cfa_register 13
 19371              		@ sp needed
 19372 11c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 19373              	.L735:
 19374 11ca 00BF     		.align	2
 19375              	.L734:
 19376 11cc DC0E0000 		.word	.LC146
 19377 11d0 E8150000 		.word	.LC220
 19378 11d4 00000000 		.word	IMU_connected
 19379 11d8 D40E0000 		.word	.LC145
 19380 11dc F8150000 		.word	.LC221
 19381 11e0 00000000 		.word	N_IMU_Connected
 19382 11e4 840D0000 		.word	.LC125
 19383              		.cfi_endproc
 19384              	.LFE74:
 19385              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 19386              		.section	.rodata
 19387 1976 0000     		.align	2
 19388              	.LC255:
 19389 1978 486F7572 		.ascii	"Hour,Min,Sec,\000"
 19389      2C4D696E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 424


 19389      2C536563 
 19389      2C00
 19390 1986 0000     		.align	2
 19391              	.LC256:
 19392 1988 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 19392      25645F50 
 19392      6F732C00 
 19393              		.align	2
 19394              	.LC257:
 19395 1994 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 19395      25645F43 
 19395      7572722C 
 19395      00
 19396 19a1 000000   		.align	2
 19397              	.LC258:
 19398 19a4 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 19398      315F6163 
 19398      742C454D 
 19398      475F325F 
 19398      6163742C 
 19399 19d7 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 19399      5F74696D 
 19399      652C546F 
 19399      74616C5F 
 19399      72657374 
 19400              		.section	.text.prepare_SD_legend,"ax",%progbits
 19401              		.align	2
 19402              		.global	prepare_SD_legend
 19403              		.thumb
 19404              		.thumb_func
 19405              		.type	prepare_SD_legend, %function
 19406              	prepare_SD_legend:
 19407              	.LFB75:
2504:..\src/command_processing.c **** 
2505:..\src/command_processing.c **** 
2506:..\src/command_processing.c **** //==============================================================================
2507:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2508:..\src/command_processing.c **** //==============================================================================
2509:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2510:..\src/command_processing.c **** {
 19408              		.loc 1 2510 0
 19409              		.cfi_startproc
 19410              		@ args = 0, pretend = 0, frame = 112
 19411              		@ frame_needed = 1, uses_anonymous_args = 0
 19412 0000 90B5     		push	{r4, r7, lr}
 19413              		.cfi_def_cfa_offset 12
 19414              		.cfi_offset 4, -12
 19415              		.cfi_offset 7, -8
 19416              		.cfi_offset 14, -4
 19417 0002 9DB0     		sub	sp, sp, #116
 19418              		.cfi_def_cfa_offset 128
 19419 0004 00AF     		add	r7, sp, #0
 19420              		.cfi_def_cfa_register 7
 19421 0006 7860     		str	r0, [r7, #4]
2511:..\src/command_processing.c ****     char str[100];  
2512:..\src/command_processing.c ****     int i;
2513:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 425


2514:..\src/command_processing.c ****     // Legend
2515:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 19422              		.loc 1 2515 0
 19423 0008 7B68     		ldr	r3, [r7, #4]
 19424 000a 2A4A     		ldr	r2, .L741
 19425 000c 1C46     		mov	r4, r3
 19426 000e 1346     		mov	r3, r2
 19427 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 19428 0012 2060     		str	r0, [r4]	@ unaligned
 19429 0014 6160     		str	r1, [r4, #4]	@ unaligned
 19430 0016 A260     		str	r2, [r4, #8]	@ unaligned
 19431 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 19432 001a A381     		strh	r3, [r4, #12]	@ unaligned
2516:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19433              		.loc 1 2516 0
 19434 001c 0123     		movs	r3, #1
 19435 001e FB66     		str	r3, [r7, #108]
 19436 0020 0FE0     		b	.L737
 19437              	.L738:
2517:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 19438              		.loc 1 2517 0 discriminator 3
 19439 0022 07F10803 		add	r3, r7, #8
 19440 0026 FA6E     		ldr	r2, [r7, #108]
 19441 0028 2349     		ldr	r1, .L741+4
 19442 002a 1846     		mov	r0, r3
 19443 002c FFF7FEFF 		bl	sprintf
2518:..\src/command_processing.c ****         strcat(info_string, str);
 19444              		.loc 1 2518 0 discriminator 3
 19445 0030 07F10803 		add	r3, r7, #8
 19446 0034 1946     		mov	r1, r3
 19447 0036 7868     		ldr	r0, [r7, #4]
 19448 0038 FFF7FEFF 		bl	strcat
2516:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19449              		.loc 1 2516 0 discriminator 3
 19450 003c FB6E     		ldr	r3, [r7, #108]
 19451 003e 0133     		adds	r3, r3, #1
 19452 0040 FB66     		str	r3, [r7, #108]
 19453              	.L737:
2516:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19454              		.loc 1 2516 0 is_stmt 0 discriminator 1
 19455 0042 FB6E     		ldr	r3, [r7, #108]
 19456 0044 0A2B     		cmp	r3, #10
 19457 0046 ECDD     		ble	.L738
2519:..\src/command_processing.c ****     }
2520:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 19458              		.loc 1 2520 0 is_stmt 1
 19459 0048 0123     		movs	r3, #1
 19460 004a FB66     		str	r3, [r7, #108]
 19461 004c 0FE0     		b	.L739
 19462              	.L740:
2521:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19463              		.loc 1 2521 0 discriminator 3
 19464 004e 07F10803 		add	r3, r7, #8
 19465 0052 FA6E     		ldr	r2, [r7, #108]
 19466 0054 1949     		ldr	r1, .L741+8
 19467 0056 1846     		mov	r0, r3
 19468 0058 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 426


2522:..\src/command_processing.c ****         strcat(info_string, str);
 19469              		.loc 1 2522 0 discriminator 3
 19470 005c 07F10803 		add	r3, r7, #8
 19471 0060 1946     		mov	r1, r3
 19472 0062 7868     		ldr	r0, [r7, #4]
 19473 0064 FFF7FEFF 		bl	strcat
2520:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19474              		.loc 1 2520 0 discriminator 3
 19475 0068 FB6E     		ldr	r3, [r7, #108]
 19476 006a 0133     		adds	r3, r3, #1
 19477 006c FB66     		str	r3, [r7, #108]
 19478              	.L739:
2520:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19479              		.loc 1 2520 0 is_stmt 0 discriminator 1
 19480 006e FB6E     		ldr	r3, [r7, #108]
 19481 0070 042B     		cmp	r3, #4
 19482 0072 ECDD     		ble	.L740
2523:..\src/command_processing.c ****     }
2524:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 19483              		.loc 1 2524 0 is_stmt 1
 19484 0074 07F10803 		add	r3, r7, #8
 19485 0078 114A     		ldr	r2, .L741+12
 19486 007a 1846     		mov	r0, r3
 19487 007c 1146     		mov	r1, r2
 19488 007e 4D23     		movs	r3, #77
 19489 0080 1A46     		mov	r2, r3
 19490 0082 FFF7FEFF 		bl	memcpy
2525:..\src/command_processing.c ****     strcat(info_string, str);
 19491              		.loc 1 2525 0
 19492 0086 07F10803 		add	r3, r7, #8
 19493 008a 1946     		mov	r1, r3
 19494 008c 7868     		ldr	r0, [r7, #4]
 19495 008e FFF7FEFF 		bl	strcat
2526:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19496              		.loc 1 2526 0
 19497 0092 7868     		ldr	r0, [r7, #4]
 19498 0094 FFF7FEFF 		bl	strlen
 19499 0098 0346     		mov	r3, r0
 19500 009a 1A46     		mov	r2, r3
 19501 009c 7B68     		ldr	r3, [r7, #4]
 19502 009e 1344     		add	r3, r3, r2
 19503 00a0 084A     		ldr	r2, .L741+16
 19504 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 19505 00a4 9278     		ldrb	r2, [r2, #2]
 19506 00a6 1980     		strh	r1, [r3]	@ unaligned
 19507 00a8 9A70     		strb	r2, [r3, #2]
2527:..\src/command_processing.c **** }
 19508              		.loc 1 2527 0
 19509 00aa 00BF     		nop
 19510 00ac 7437     		adds	r7, r7, #116
 19511              		.cfi_def_cfa_offset 12
 19512 00ae BD46     		mov	sp, r7
 19513              		.cfi_def_cfa_register 13
 19514              		@ sp needed
 19515 00b0 90BD     		pop	{r4, r7, pc}
 19516              	.L742:
 19517 00b2 00BF     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 427


 19518              	.L741:
 19519 00b4 78190000 		.word	.LC255
 19520 00b8 88190000 		.word	.LC256
 19521 00bc 94190000 		.word	.LC257
 19522 00c0 A4190000 		.word	.LC258
 19523 00c4 840D0000 		.word	.LC125
 19524              		.cfi_endproc
 19525              	.LFE75:
 19526              		.size	prepare_SD_legend, .-prepare_SD_legend
 19527              		.section	.rodata
 19528 19f1 000000   		.align	2
 19529              	.LC259:
 19530 19f4 25303264 		.ascii	"%02d,%02d,%02d,\000"
 19530      2C253032 
 19530      642C2530 
 19530      32642C00 
 19531              		.align	2
 19532              	.LC260:
 19533 1a04 256C752C 		.ascii	"%lu,\000"
 19533      00
 19534 1a09 000000   		.align	2
 19535              	.LC261:
 19536 1a0c 256C752C 		.ascii	"%lu,%lu,\000"
 19536      256C752C 
 19536      00
 19537 1a15 000000   		.align	2
 19538              	.LC262:
 19539 1a18 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 19539      256C752C 
 19539      256C752C 
 19539      256C7500 
 19540              		.section	.text.prepare_SD_info,"ax",%progbits
 19541              		.align	2
 19542              		.global	prepare_SD_info
 19543              		.thumb
 19544              		.thumb_func
 19545              		.type	prepare_SD_info, %function
 19546              	prepare_SD_info:
 19547              	.LFB76:
2528:..\src/command_processing.c **** 
2529:..\src/command_processing.c **** //==============================================================================
2530:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2531:..\src/command_processing.c **** //==============================================================================
2532:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2533:..\src/command_processing.c **** {
 19548              		.loc 1 2533 0
 19549              		.cfi_startproc
 19550              		@ args = 0, pretend = 0, frame = 112
 19551              		@ frame_needed = 1, uses_anonymous_args = 0
 19552 0000 90B5     		push	{r4, r7, lr}
 19553              		.cfi_def_cfa_offset 12
 19554              		.cfi_offset 4, -12
 19555              		.cfi_offset 7, -8
 19556              		.cfi_offset 14, -4
 19557 0002 9FB0     		sub	sp, sp, #124
 19558              		.cfi_def_cfa_offset 136
 19559 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 428


 19560              		.cfi_def_cfa 7, 128
 19561 0006 7860     		str	r0, [r7, #4]
2534:..\src/command_processing.c ****     char str[100];  
2535:..\src/command_processing.c ****     int i;
2536:..\src/command_processing.c ****             
2537:..\src/command_processing.c ****     strcpy(info_string, "");
 19562              		.loc 1 2537 0
 19563 0008 7B68     		ldr	r3, [r7, #4]
 19564 000a 0022     		movs	r2, #0
 19565 000c 1A70     		strb	r2, [r3]
2538:..\src/command_processing.c ****     
2539:..\src/command_processing.c ****     // Time
2540:..\src/command_processing.c ****     strcat(info_string, "");
2541:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 19566              		.loc 1 2541 0
 19567 000e 424B     		ldr	r3, .L748
 19568 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 19569 0014 1A46     		mov	r2, r3
 19570 0016 404B     		ldr	r3, .L748
 19571 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 19572 001c 1946     		mov	r1, r3
 19573 001e 3E4B     		ldr	r3, .L748
 19574 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 19575 0024 07F10800 		add	r0, r7, #8
 19576 0028 0093     		str	r3, [sp]
 19577 002a 0B46     		mov	r3, r1
 19578 002c 3B49     		ldr	r1, .L748+4
 19579 002e FFF7FEFF 		bl	sprintf
2542:..\src/command_processing.c ****     strcat(info_string, str);
 19580              		.loc 1 2542 0
 19581 0032 07F10803 		add	r3, r7, #8
 19582 0036 1946     		mov	r1, r3
 19583 0038 7868     		ldr	r0, [r7, #4]
 19584 003a FFF7FEFF 		bl	strcat
2543:..\src/command_processing.c **** 
2544:..\src/command_processing.c ****     // Pos_Bin
2545:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 19585              		.loc 1 2545 0
 19586 003e 0123     		movs	r3, #1
 19587 0040 FB66     		str	r3, [r7, #108]
 19588 0042 14E0     		b	.L744
 19589              	.L745:
2546:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19590              		.loc 1 2546 0 discriminator 3
 19591 0044 FB6E     		ldr	r3, [r7, #108]
 19592 0046 013B     		subs	r3, r3, #1
 19593 0048 334A     		ldr	r2, .L748
 19594 004a 0633     		adds	r3, r3, #6
 19595 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19596 0050 07F10803 		add	r3, r7, #8
 19597 0054 3249     		ldr	r1, .L748+8
 19598 0056 1846     		mov	r0, r3
 19599 0058 FFF7FEFF 		bl	sprintf
2547:..\src/command_processing.c ****         strcat(info_string, str);
 19600              		.loc 1 2547 0 discriminator 3
 19601 005c 07F10803 		add	r3, r7, #8
 19602 0060 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 429


 19603 0062 7868     		ldr	r0, [r7, #4]
 19604 0064 FFF7FEFF 		bl	strcat
2545:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19605              		.loc 1 2545 0 discriminator 3
 19606 0068 FB6E     		ldr	r3, [r7, #108]
 19607 006a 0133     		adds	r3, r3, #1
 19608 006c FB66     		str	r3, [r7, #108]
 19609              	.L744:
2545:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19610              		.loc 1 2545 0 is_stmt 0 discriminator 1
 19611 006e FB6E     		ldr	r3, [r7, #108]
 19612 0070 0A2B     		cmp	r3, #10
 19613 0072 E7DD     		ble	.L745
2548:..\src/command_processing.c ****     }
2549:..\src/command_processing.c ****     
2550:..\src/command_processing.c ****     // Curr_Bin
2551:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 19614              		.loc 1 2551 0 is_stmt 1
 19615 0074 0123     		movs	r3, #1
 19616 0076 FB66     		str	r3, [r7, #108]
 19617 0078 14E0     		b	.L746
 19618              	.L747:
2552:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19619              		.loc 1 2552 0 discriminator 3
 19620 007a FB6E     		ldr	r3, [r7, #108]
 19621 007c 013B     		subs	r3, r3, #1
 19622 007e 264A     		ldr	r2, .L748
 19623 0080 1033     		adds	r3, r3, #16
 19624 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19625 0086 07F10803 		add	r3, r7, #8
 19626 008a 2549     		ldr	r1, .L748+8
 19627 008c 1846     		mov	r0, r3
 19628 008e FFF7FEFF 		bl	sprintf
2553:..\src/command_processing.c ****         strcat(info_string, str);
 19629              		.loc 1 2553 0 discriminator 3
 19630 0092 07F10803 		add	r3, r7, #8
 19631 0096 1946     		mov	r1, r3
 19632 0098 7868     		ldr	r0, [r7, #4]
 19633 009a FFF7FEFF 		bl	strcat
2551:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19634              		.loc 1 2551 0 discriminator 3
 19635 009e FB6E     		ldr	r3, [r7, #108]
 19636 00a0 0133     		adds	r3, r3, #1
 19637 00a2 FB66     		str	r3, [r7, #108]
 19638              	.L746:
2551:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19639              		.loc 1 2551 0 is_stmt 0 discriminator 1
 19640 00a4 FB6E     		ldr	r3, [r7, #108]
 19641 00a6 042B     		cmp	r3, #4
 19642 00a8 E7DD     		ble	.L747
2554:..\src/command_processing.c ****     }
2555:..\src/command_processing.c ****        
2556:..\src/command_processing.c ****     // EMG_1, EMG_2
2557:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 19643              		.loc 1 2557 0 is_stmt 1
 19644 00aa 1B4B     		ldr	r3, .L748
 19645 00ac 1A69     		ldr	r2, [r3, #16]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 430


 19646 00ae 1A4B     		ldr	r3, .L748
 19647 00b0 5B69     		ldr	r3, [r3, #20]
 19648 00b2 07F10800 		add	r0, r7, #8
 19649 00b6 1B49     		ldr	r1, .L748+12
 19650 00b8 FFF7FEFF 		bl	sprintf
2558:..\src/command_processing.c ****     strcat(info_string, str);
 19651              		.loc 1 2558 0
 19652 00bc 07F10803 		add	r3, r7, #8
 19653 00c0 1946     		mov	r1, r3
 19654 00c2 7868     		ldr	r0, [r7, #4]
 19655 00c4 FFF7FEFF 		bl	strcat
2559:..\src/command_processing.c ****     
2560:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2561:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 19656              		.loc 1 2561 0
 19657 00c8 134B     		ldr	r3, .L748
 19658 00ca 196D     		ldr	r1, [r3, #80]
 19659 00cc 124B     		ldr	r3, .L748
 19660 00ce 5C6D     		ldr	r4, [r3, #84]
 19661 00d0 114B     		ldr	r3, .L748
 19662 00d2 9B6D     		ldr	r3, [r3, #88]
 19663 00d4 104A     		ldr	r2, .L748
 19664 00d6 D26D     		ldr	r2, [r2, #92]
 19665 00d8 07F10800 		add	r0, r7, #8
 19666 00dc 0192     		str	r2, [sp, #4]
 19667 00de 0093     		str	r3, [sp]
 19668 00e0 2346     		mov	r3, r4
 19669 00e2 0A46     		mov	r2, r1
 19670 00e4 1049     		ldr	r1, .L748+16
 19671 00e6 FFF7FEFF 		bl	sprintf
2562:..\src/command_processing.c ****     strcat(info_string, str);
 19672              		.loc 1 2562 0
 19673 00ea 07F10803 		add	r3, r7, #8
 19674 00ee 1946     		mov	r1, r3
 19675 00f0 7868     		ldr	r0, [r7, #4]
 19676 00f2 FFF7FEFF 		bl	strcat
2563:..\src/command_processing.c ****     
2564:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19677              		.loc 1 2564 0
 19678 00f6 7868     		ldr	r0, [r7, #4]
 19679 00f8 FFF7FEFF 		bl	strlen
 19680 00fc 0346     		mov	r3, r0
 19681 00fe 1A46     		mov	r2, r3
 19682 0100 7B68     		ldr	r3, [r7, #4]
 19683 0102 1344     		add	r3, r3, r2
 19684 0104 094A     		ldr	r2, .L748+20
 19685 0106 1188     		ldrh	r1, [r2]	@ unaligned
 19686 0108 9278     		ldrb	r2, [r2, #2]
 19687 010a 1980     		strh	r1, [r3]	@ unaligned
 19688 010c 9A70     		strb	r2, [r3, #2]
2565:..\src/command_processing.c **** }
 19689              		.loc 1 2565 0
 19690 010e 00BF     		nop
 19691 0110 7437     		adds	r7, r7, #116
 19692              		.cfi_def_cfa_offset 12
 19693 0112 BD46     		mov	sp, r7
 19694              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 431


 19695              		@ sp needed
 19696 0114 90BD     		pop	{r4, r7, pc}
 19697              	.L749:
 19698 0116 00BF     		.align	2
 19699              	.L748:
 19700 0118 00000000 		.word	g_mem
 19701 011c F4190000 		.word	.LC259
 19702 0120 041A0000 		.word	.LC260
 19703 0124 0C1A0000 		.word	.LC261
 19704 0128 181A0000 		.word	.LC262
 19705 012c 840D0000 		.word	.LC125
 19706              		.cfi_endproc
 19707              	.LFE76:
 19708              		.size	prepare_SD_info, .-prepare_SD_info
 19709              		.section	.rodata
 19710              		.align	2
 19711              	.LC263:
 19712 1a28 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 19712      4F525320 
 19712      494E464F 
 19712      0D0A00
 19713 1a37 00       		.align	2
 19714              	.LC264:
 19715 1a38 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 19715      3A202564 
 19715      09256409 
 19715      25640D0A 
 19715      00
 19716 1a49 000000   		.align	2
 19717              	.LC265:
 19718 1a4c 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 19718      6F3A2025 
 19718      64092564 
 19718      0925640D 
 19718      0A00
 19719 1a5e 0000     		.align	2
 19720              	.LC266:
 19721 1a60 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 19721      3A202564 
 19721      09256409 
 19721      25640D0A 
 19721      00
 19722 1a71 000000   		.align	2
 19723              	.LC267:
 19724 1a74 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 19724      743A2025 
 19724      2E336609 
 19724      252E3366 
 19724      09252E33 
 19725 1a91 000000   		.align	2
 19726              	.LC268:
 19727 1a94 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 19727      70657261 
 19727      74757265 
 19727      3A202564 
 19727      0D0A00
 19728              		.section	.text.IMU_reading_info,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 432


 19729              		.align	2
 19730              		.global	IMU_reading_info
 19731              		.thumb
 19732              		.thumb_func
 19733              		.type	IMU_reading_info, %function
 19734              	IMU_reading_info:
 19735              	.LFB77:
2566:..\src/command_processing.c **** 
2567:..\src/command_processing.c **** //==============================================================================
2568:..\src/command_processing.c **** //                                                              IMU READING INFO
2569:..\src/command_processing.c **** //==============================================================================
2570:..\src/command_processing.c **** 
2571:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2572:..\src/command_processing.c **** {
 19736              		.loc 1 2572 0
 19737              		.cfi_startproc
 19738              		@ args = 0, pretend = 0, frame = 312
 19739              		@ frame_needed = 1, uses_anonymous_args = 0
 19740 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 19741              		.cfi_def_cfa_offset 32
 19742              		.cfi_offset 4, -32
 19743              		.cfi_offset 5, -28
 19744              		.cfi_offset 7, -24
 19745              		.cfi_offset 8, -20
 19746              		.cfi_offset 9, -16
 19747              		.cfi_offset 10, -12
 19748              		.cfi_offset 11, -8
 19749              		.cfi_offset 14, -4
 19750 0004 D4B0     		sub	sp, sp, #336
 19751              		.cfi_def_cfa_offset 368
 19752 0006 06AF     		add	r7, sp, #24
 19753              		.cfi_def_cfa 7, 344
 19754 0008 3B1D     		adds	r3, r7, #4
 19755 000a 1860     		str	r0, [r3]
2573:..\src/command_processing.c ****     char str[300];  
2574:..\src/command_processing.c ****     int i;
2575:..\src/command_processing.c ****                  
2576:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 19756              		.loc 1 2576 0
 19757 000c 3B1D     		adds	r3, r7, #4
 19758 000e 1868     		ldr	r0, [r3]
 19759 0010 FFF7FEFF 		bl	strlen
 19760 0014 0346     		mov	r3, r0
 19761 0016 1A46     		mov	r2, r3
 19762 0018 3B1D     		adds	r3, r7, #4
 19763 001a 1B68     		ldr	r3, [r3]
 19764 001c 1344     		add	r3, r3, r2
 19765 001e C94A     		ldr	r2, .L758
 19766 0020 1C46     		mov	r4, r3
 19767 0022 1346     		mov	r3, r2
 19768 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 19769 0026 2060     		str	r0, [r4]	@ unaligned
 19770 0028 6160     		str	r1, [r4, #4]	@ unaligned
 19771 002a A260     		str	r2, [r4, #8]	@ unaligned
 19772 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 19773 002e 9B78     		ldrb	r3, [r3, #2]
 19774 0030 A281     		strh	r2, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 433


 19775 0032 A373     		strb	r3, [r4, #14]
2577:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 19776              		.loc 1 2577 0
 19777 0034 0023     		movs	r3, #0
 19778 0036 C7F83431 		str	r3, [r7, #308]
 19779 003a 66E1     		b	.L751
 19780              	.L757:
2578:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19781              		.loc 1 2578 0
 19782 003c C24A     		ldr	r2, .L758+4
 19783 003e D7F83431 		ldr	r3, [r7, #308]
 19784 0042 1344     		add	r3, r3, r2
 19785 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19786 0046 07F10800 		add	r0, r7, #8
 19787 004a D7F83421 		ldr	r2, [r7, #308]
 19788 004e BF49     		ldr	r1, .L758+8
 19789 0050 FFF7FEFF 		bl	sprintf
2579:..\src/command_processing.c ****         strcat(info_string, str);
 19790              		.loc 1 2579 0
 19791 0054 07F10802 		add	r2, r7, #8
 19792 0058 3B1D     		adds	r3, r7, #4
 19793 005a 1146     		mov	r1, r2
 19794 005c 1868     		ldr	r0, [r3]
 19795 005e FFF7FEFF 		bl	strcat
2580:..\src/command_processing.c ****         
2581:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 19796              		.loc 1 2581 0
 19797 0062 B94A     		ldr	r2, .L758+4
 19798 0064 D7F83431 		ldr	r3, [r7, #308]
 19799 0068 1344     		add	r3, r3, r2
 19800 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19801 006c 1946     		mov	r1, r3
 19802 006e B84A     		ldr	r2, .L758+12
 19803 0070 0B46     		mov	r3, r1
 19804 0072 9B00     		lsls	r3, r3, #2
 19805 0074 0B44     		add	r3, r3, r1
 19806 0076 1344     		add	r3, r3, r2
 19807 0078 03F20223 		addw	r3, r3, #514
 19808 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19809 007e 002B     		cmp	r3, #0
 19810 0080 31D0     		beq	.L752
2582:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 19811              		.loc 1 2582 0
 19812 0082 B449     		ldr	r1, .L758+16
 19813 0084 D7F83421 		ldr	r2, [r7, #308]
 19814 0088 1346     		mov	r3, r2
 19815 008a 9B00     		lsls	r3, r3, #2
 19816 008c 1344     		add	r3, r3, r2
 19817 008e DB00     		lsls	r3, r3, #3
 19818 0090 0B44     		add	r3, r3, r1
 19819 0092 0233     		adds	r3, r3, #2
 19820 0094 B3F90030 		ldrsh	r3, [r3]
 19821 0098 1C46     		mov	r4, r3
 19822 009a AE49     		ldr	r1, .L758+16
 19823 009c D7F83421 		ldr	r2, [r7, #308]
 19824 00a0 1346     		mov	r3, r2
 19825 00a2 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 434


 19826 00a4 1344     		add	r3, r3, r2
 19827 00a6 DB00     		lsls	r3, r3, #3
 19828 00a8 0B44     		add	r3, r3, r1
 19829 00aa 0433     		adds	r3, r3, #4
 19830 00ac B3F90030 		ldrsh	r3, [r3]
 19831 00b0 1D46     		mov	r5, r3
 19832 00b2 A849     		ldr	r1, .L758+16
 19833 00b4 D7F83421 		ldr	r2, [r7, #308]
 19834 00b8 1346     		mov	r3, r2
 19835 00ba 9B00     		lsls	r3, r3, #2
 19836 00bc 1344     		add	r3, r3, r2
 19837 00be DB00     		lsls	r3, r3, #3
 19838 00c0 0B44     		add	r3, r3, r1
 19839 00c2 0633     		adds	r3, r3, #6
 19840 00c4 B3F90030 		ldrsh	r3, [r3]
 19841 00c8 07F10800 		add	r0, r7, #8
 19842 00cc 0093     		str	r3, [sp]
 19843 00ce 2B46     		mov	r3, r5
 19844 00d0 2246     		mov	r2, r4
 19845 00d2 A149     		ldr	r1, .L758+20
 19846 00d4 FFF7FEFF 		bl	sprintf
2583:..\src/command_processing.c ****             strcat(info_string, str);
 19847              		.loc 1 2583 0
 19848 00d8 07F10802 		add	r2, r7, #8
 19849 00dc 3B1D     		adds	r3, r7, #4
 19850 00de 1146     		mov	r1, r2
 19851 00e0 1868     		ldr	r0, [r3]
 19852 00e2 FFF7FEFF 		bl	strcat
 19853              	.L752:
2584:..\src/command_processing.c ****         }
2585:..\src/command_processing.c **** 
2586:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 19854              		.loc 1 2586 0
 19855 00e6 984A     		ldr	r2, .L758+4
 19856 00e8 D7F83431 		ldr	r3, [r7, #308]
 19857 00ec 1344     		add	r3, r3, r2
 19858 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19859 00f0 1946     		mov	r1, r3
 19860 00f2 974A     		ldr	r2, .L758+12
 19861 00f4 0B46     		mov	r3, r1
 19862 00f6 9B00     		lsls	r3, r3, #2
 19863 00f8 0B44     		add	r3, r3, r1
 19864 00fa 1344     		add	r3, r3, r2
 19865 00fc 03F20323 		addw	r3, r3, #515
 19866 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19867 0102 002B     		cmp	r3, #0
 19868 0104 31D0     		beq	.L753
2587:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 19869              		.loc 1 2587 0
 19870 0106 9349     		ldr	r1, .L758+16
 19871 0108 D7F83421 		ldr	r2, [r7, #308]
 19872 010c 1346     		mov	r3, r2
 19873 010e 9B00     		lsls	r3, r3, #2
 19874 0110 1344     		add	r3, r3, r2
 19875 0112 DB00     		lsls	r3, r3, #3
 19876 0114 0B44     		add	r3, r3, r1
 19877 0116 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 435


 19878 0118 B3F90030 		ldrsh	r3, [r3]
 19879 011c 1C46     		mov	r4, r3
 19880 011e 8D49     		ldr	r1, .L758+16
 19881 0120 D7F83421 		ldr	r2, [r7, #308]
 19882 0124 1346     		mov	r3, r2
 19883 0126 9B00     		lsls	r3, r3, #2
 19884 0128 1344     		add	r3, r3, r2
 19885 012a DB00     		lsls	r3, r3, #3
 19886 012c 0B44     		add	r3, r3, r1
 19887 012e 0A33     		adds	r3, r3, #10
 19888 0130 B3F90030 		ldrsh	r3, [r3]
 19889 0134 1D46     		mov	r5, r3
 19890 0136 8749     		ldr	r1, .L758+16
 19891 0138 D7F83421 		ldr	r2, [r7, #308]
 19892 013c 1346     		mov	r3, r2
 19893 013e 9B00     		lsls	r3, r3, #2
 19894 0140 1344     		add	r3, r3, r2
 19895 0142 DB00     		lsls	r3, r3, #3
 19896 0144 0B44     		add	r3, r3, r1
 19897 0146 0C33     		adds	r3, r3, #12
 19898 0148 B3F90030 		ldrsh	r3, [r3]
 19899 014c 07F10800 		add	r0, r7, #8
 19900 0150 0093     		str	r3, [sp]
 19901 0152 2B46     		mov	r3, r5
 19902 0154 2246     		mov	r2, r4
 19903 0156 8149     		ldr	r1, .L758+24
 19904 0158 FFF7FEFF 		bl	sprintf
2588:..\src/command_processing.c ****             strcat(info_string, str);
 19905              		.loc 1 2588 0
 19906 015c 07F10802 		add	r2, r7, #8
 19907 0160 3B1D     		adds	r3, r7, #4
 19908 0162 1146     		mov	r1, r2
 19909 0164 1868     		ldr	r0, [r3]
 19910 0166 FFF7FEFF 		bl	strcat
 19911              	.L753:
2589:..\src/command_processing.c ****         }
2590:..\src/command_processing.c **** 
2591:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 19912              		.loc 1 2591 0
 19913 016a 774A     		ldr	r2, .L758+4
 19914 016c D7F83431 		ldr	r3, [r7, #308]
 19915 0170 1344     		add	r3, r3, r2
 19916 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19917 0174 1946     		mov	r1, r3
 19918 0176 764A     		ldr	r2, .L758+12
 19919 0178 0B46     		mov	r3, r1
 19920 017a 9B00     		lsls	r3, r3, #2
 19921 017c 0B44     		add	r3, r3, r1
 19922 017e 1344     		add	r3, r3, r2
 19923 0180 03F50173 		add	r3, r3, #516
 19924 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19925 0186 002B     		cmp	r3, #0
 19926 0188 31D0     		beq	.L754
2592:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 19927              		.loc 1 2592 0
 19928 018a 7249     		ldr	r1, .L758+16
 19929 018c D7F83421 		ldr	r2, [r7, #308]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 436


 19930 0190 1346     		mov	r3, r2
 19931 0192 9B00     		lsls	r3, r3, #2
 19932 0194 1344     		add	r3, r3, r2
 19933 0196 DB00     		lsls	r3, r3, #3
 19934 0198 0B44     		add	r3, r3, r1
 19935 019a 0E33     		adds	r3, r3, #14
 19936 019c B3F90030 		ldrsh	r3, [r3]
 19937 01a0 1C46     		mov	r4, r3
 19938 01a2 6C49     		ldr	r1, .L758+16
 19939 01a4 D7F83421 		ldr	r2, [r7, #308]
 19940 01a8 1346     		mov	r3, r2
 19941 01aa 9B00     		lsls	r3, r3, #2
 19942 01ac 1344     		add	r3, r3, r2
 19943 01ae DB00     		lsls	r3, r3, #3
 19944 01b0 0B44     		add	r3, r3, r1
 19945 01b2 1033     		adds	r3, r3, #16
 19946 01b4 B3F90030 		ldrsh	r3, [r3]
 19947 01b8 1D46     		mov	r5, r3
 19948 01ba 6649     		ldr	r1, .L758+16
 19949 01bc D7F83421 		ldr	r2, [r7, #308]
 19950 01c0 1346     		mov	r3, r2
 19951 01c2 9B00     		lsls	r3, r3, #2
 19952 01c4 1344     		add	r3, r3, r2
 19953 01c6 DB00     		lsls	r3, r3, #3
 19954 01c8 0B44     		add	r3, r3, r1
 19955 01ca 1233     		adds	r3, r3, #18
 19956 01cc B3F90030 		ldrsh	r3, [r3]
 19957 01d0 07F10800 		add	r0, r7, #8
 19958 01d4 0093     		str	r3, [sp]
 19959 01d6 2B46     		mov	r3, r5
 19960 01d8 2246     		mov	r2, r4
 19961 01da 6149     		ldr	r1, .L758+28
 19962 01dc FFF7FEFF 		bl	sprintf
2593:..\src/command_processing.c ****             strcat(info_string, str);
 19963              		.loc 1 2593 0
 19964 01e0 07F10802 		add	r2, r7, #8
 19965 01e4 3B1D     		adds	r3, r7, #4
 19966 01e6 1146     		mov	r1, r2
 19967 01e8 1868     		ldr	r0, [r3]
 19968 01ea FFF7FEFF 		bl	strcat
 19969              	.L754:
2594:..\src/command_processing.c ****         }
2595:..\src/command_processing.c ****         
2596:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 19970              		.loc 1 2596 0
 19971 01ee 564A     		ldr	r2, .L758+4
 19972 01f0 D7F83431 		ldr	r3, [r7, #308]
 19973 01f4 1344     		add	r3, r3, r2
 19974 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19975 01f8 1946     		mov	r1, r3
 19976 01fa 554A     		ldr	r2, .L758+12
 19977 01fc 0B46     		mov	r3, r1
 19978 01fe 9B00     		lsls	r3, r3, #2
 19979 0200 0B44     		add	r3, r3, r1
 19980 0202 1344     		add	r3, r3, r2
 19981 0204 03F20523 		addw	r3, r3, #517
 19982 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 437


 19983 020a 002B     		cmp	r3, #0
 19984 020c 4FD0     		beq	.L755
2597:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 19985              		.loc 1 2597 0
 19986 020e 5149     		ldr	r1, .L758+16
 19987 0210 D7F83421 		ldr	r2, [r7, #308]
 19988 0214 1346     		mov	r3, r2
 19989 0216 9B00     		lsls	r3, r3, #2
 19990 0218 1344     		add	r3, r3, r2
 19991 021a DB00     		lsls	r3, r3, #3
 19992 021c 0B44     		add	r3, r3, r1
 19993 021e 1433     		adds	r3, r3, #20
 19994 0220 1B68     		ldr	r3, [r3]	@ float
 19995 0222 1846     		mov	r0, r3
 19996 0224 FFF7FEFF 		bl	__aeabi_f2d
 19997 0228 8246     		mov	r10, r0
 19998 022a 8B46     		mov	fp, r1
 19999 022c 4949     		ldr	r1, .L758+16
 20000 022e D7F83421 		ldr	r2, [r7, #308]
 20001 0232 1346     		mov	r3, r2
 20002 0234 9B00     		lsls	r3, r3, #2
 20003 0236 1344     		add	r3, r3, r2
 20004 0238 DB00     		lsls	r3, r3, #3
 20005 023a 0B44     		add	r3, r3, r1
 20006 023c 1833     		adds	r3, r3, #24
 20007 023e 1B68     		ldr	r3, [r3]	@ float
 20008 0240 1846     		mov	r0, r3
 20009 0242 FFF7FEFF 		bl	__aeabi_f2d
 20010 0246 0446     		mov	r4, r0
 20011 0248 0D46     		mov	r5, r1
 20012 024a 4249     		ldr	r1, .L758+16
 20013 024c D7F83421 		ldr	r2, [r7, #308]
 20014 0250 1346     		mov	r3, r2
 20015 0252 9B00     		lsls	r3, r3, #2
 20016 0254 1344     		add	r3, r3, r2
 20017 0256 DB00     		lsls	r3, r3, #3
 20018 0258 0B44     		add	r3, r3, r1
 20019 025a 1C33     		adds	r3, r3, #28
 20020 025c 1B68     		ldr	r3, [r3]	@ float
 20021 025e 1846     		mov	r0, r3
 20022 0260 FFF7FEFF 		bl	__aeabi_f2d
 20023 0264 8046     		mov	r8, r0
 20024 0266 8946     		mov	r9, r1
 20025 0268 3A49     		ldr	r1, .L758+16
 20026 026a D7F83421 		ldr	r2, [r7, #308]
 20027 026e 1346     		mov	r3, r2
 20028 0270 9B00     		lsls	r3, r3, #2
 20029 0272 1344     		add	r3, r3, r2
 20030 0274 DB00     		lsls	r3, r3, #3
 20031 0276 0B44     		add	r3, r3, r1
 20032 0278 2033     		adds	r3, r3, #32
 20033 027a 1B68     		ldr	r3, [r3]	@ float
 20034 027c 1846     		mov	r0, r3
 20035 027e FFF7FEFF 		bl	__aeabi_f2d
 20036 0282 0246     		mov	r2, r0
 20037 0284 0B46     		mov	r3, r1
 20038 0286 07F10800 		add	r0, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 438


 20039 028a CDE90423 		strd	r2, [sp, #16]
 20040 028e CDE90289 		strd	r8, [sp, #8]
 20041 0292 CDE90045 		strd	r4, [sp]
 20042 0296 5246     		mov	r2, r10
 20043 0298 5B46     		mov	r3, fp
 20044 029a 3249     		ldr	r1, .L758+32
 20045 029c FFF7FEFF 		bl	sprintf
2598:..\src/command_processing.c ****             strcat(info_string, str);
 20046              		.loc 1 2598 0
 20047 02a0 07F10802 		add	r2, r7, #8
 20048 02a4 3B1D     		adds	r3, r7, #4
 20049 02a6 1146     		mov	r1, r2
 20050 02a8 1868     		ldr	r0, [r3]
 20051 02aa FFF7FEFF 		bl	strcat
 20052              	.L755:
2599:..\src/command_processing.c ****         }
2600:..\src/command_processing.c ****         
2601:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 20053              		.loc 1 2601 0
 20054 02ae 264A     		ldr	r2, .L758+4
 20055 02b0 D7F83431 		ldr	r3, [r7, #308]
 20056 02b4 1344     		add	r3, r3, r2
 20057 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20058 02b8 1946     		mov	r1, r3
 20059 02ba 254A     		ldr	r2, .L758+12
 20060 02bc 0B46     		mov	r3, r1
 20061 02be 9B00     		lsls	r3, r3, #2
 20062 02c0 0B44     		add	r3, r3, r1
 20063 02c2 1344     		add	r3, r3, r2
 20064 02c4 03F20623 		addw	r3, r3, #518
 20065 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20066 02ca 002B     		cmp	r3, #0
 20067 02cc 18D0     		beq	.L756
2602:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 20068              		.loc 1 2602 0
 20069 02ce 2149     		ldr	r1, .L758+16
 20070 02d0 D7F83421 		ldr	r2, [r7, #308]
 20071 02d4 1346     		mov	r3, r2
 20072 02d6 9B00     		lsls	r3, r3, #2
 20073 02d8 1344     		add	r3, r3, r2
 20074 02da DB00     		lsls	r3, r3, #3
 20075 02dc 0B44     		add	r3, r3, r1
 20076 02de 2433     		adds	r3, r3, #36
 20077 02e0 B3F90030 		ldrsh	r3, [r3]
 20078 02e4 1A46     		mov	r2, r3
 20079 02e6 07F10803 		add	r3, r7, #8
 20080 02ea 1F49     		ldr	r1, .L758+36
 20081 02ec 1846     		mov	r0, r3
 20082 02ee FFF7FEFF 		bl	sprintf
2603:..\src/command_processing.c ****             strcat(info_string, str);
 20083              		.loc 1 2603 0
 20084 02f2 07F10802 		add	r2, r7, #8
 20085 02f6 3B1D     		adds	r3, r7, #4
 20086 02f8 1146     		mov	r1, r2
 20087 02fa 1868     		ldr	r0, [r3]
 20088 02fc FFF7FEFF 		bl	strcat
 20089              	.L756:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 439


2577:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20090              		.loc 1 2577 0 discriminator 2
 20091 0300 D7F83431 		ldr	r3, [r7, #308]
 20092 0304 0133     		adds	r3, r3, #1
 20093 0306 C7F83431 		str	r3, [r7, #308]
 20094              	.L751:
2577:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20095              		.loc 1 2577 0 is_stmt 0 discriminator 1
 20096 030a 184B     		ldr	r3, .L758+40
 20097 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20098 030e 1A46     		mov	r2, r3
 20099 0310 D7F83431 		ldr	r3, [r7, #308]
 20100 0314 9A42     		cmp	r2, r3
 20101 0316 3FF791AE 		bgt	.L757
2604:..\src/command_processing.c ****         }
2605:..\src/command_processing.c ****         
2606:..\src/command_processing.c ****     }
2607:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20102              		.loc 1 2607 0 is_stmt 1
 20103 031a 3B1D     		adds	r3, r7, #4
 20104 031c 1868     		ldr	r0, [r3]
 20105 031e FFF7FEFF 		bl	strlen
 20106 0322 0346     		mov	r3, r0
 20107 0324 1A46     		mov	r2, r3
 20108 0326 3B1D     		adds	r3, r7, #4
 20109 0328 1B68     		ldr	r3, [r3]
 20110 032a 1344     		add	r3, r3, r2
 20111 032c 104A     		ldr	r2, .L758+44
 20112 032e 1188     		ldrh	r1, [r2]	@ unaligned
 20113 0330 9278     		ldrb	r2, [r2, #2]
 20114 0332 1980     		strh	r1, [r3]	@ unaligned
 20115 0334 9A70     		strb	r2, [r3, #2]
2608:..\src/command_processing.c **** }
 20116              		.loc 1 2608 0
 20117 0336 00BF     		nop
 20118 0338 07F59C77 		add	r7, r7, #312
 20119              		.cfi_def_cfa_offset 32
 20120 033c BD46     		mov	sp, r7
 20121              		.cfi_def_cfa_register 13
 20122              		@ sp needed
 20123 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 20124              	.L759:
 20125 0342 00BF     		.align	2
 20126              	.L758:
 20127 0344 281A0000 		.word	.LC263
 20128 0348 00000000 		.word	IMU_connected
 20129 034c 9C150000 		.word	.LC216
 20130 0350 00000000 		.word	c_mem
 20131 0354 00000000 		.word	g_imu
 20132 0358 381A0000 		.word	.LC264
 20133 035c 4C1A0000 		.word	.LC265
 20134 0360 601A0000 		.word	.LC266
 20135 0364 741A0000 		.word	.LC267
 20136 0368 941A0000 		.word	.LC268
 20137 036c 00000000 		.word	N_IMU_Connected
 20138 0370 840D0000 		.word	.LC125
 20139              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 440


 20140              	.LFE77:
 20141              		.size	IMU_reading_info, .-IMU_reading_info
 20142              		.section	.text.commWrite_old_id,"ax",%progbits
 20143              		.align	2
 20144              		.global	commWrite_old_id
 20145              		.thumb
 20146              		.thumb_func
 20147              		.type	commWrite_old_id, %function
 20148              	commWrite_old_id:
 20149              	.LFB78:
2609:..\src/command_processing.c **** 
2610:..\src/command_processing.c **** //==============================================================================
2611:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2612:..\src/command_processing.c **** //==============================================================================
2613:..\src/command_processing.c **** 
2614:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2615:..\src/command_processing.c **** {
 20150              		.loc 1 2615 0
 20151              		.cfi_startproc
 20152              		@ args = 0, pretend = 0, frame = 16
 20153              		@ frame_needed = 1, uses_anonymous_args = 0
 20154 0000 80B5     		push	{r7, lr}
 20155              		.cfi_def_cfa_offset 8
 20156              		.cfi_offset 7, -8
 20157              		.cfi_offset 14, -4
 20158 0002 84B0     		sub	sp, sp, #16
 20159              		.cfi_def_cfa_offset 24
 20160 0004 00AF     		add	r7, sp, #0
 20161              		.cfi_def_cfa_register 7
 20162 0006 7860     		str	r0, [r7, #4]
 20163 0008 0B46     		mov	r3, r1
 20164 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20165 000c 1346     		mov	r3, r2
 20166 000e 7B70     		strb	r3, [r7, #1]
2616:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2617:..\src/command_processing.c **** 
2618:..\src/command_processing.c ****     // frame - start
2619:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20167              		.loc 1 2619 0
 20168 0010 3A20     		movs	r0, #58
 20169 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2620:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20170              		.loc 1 2620 0
 20171 0016 3A20     		movs	r0, #58
 20172 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2621:..\src/command_processing.c ****     // frame - ID
2622:..\src/command_processing.c ****     //if(old_id)
2623:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 20173              		.loc 1 2623 0
 20174 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20175 001e 1846     		mov	r0, r3
 20176 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2624:..\src/command_processing.c ****     //else
2625:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2626:..\src/command_processing.c ****         
2627:..\src/command_processing.c ****     // frame - length
2628:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 441


 20177              		.loc 1 2628 0
 20178 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20179 0026 DBB2     		uxtb	r3, r3
 20180 0028 1846     		mov	r0, r3
 20181 002a FFF7FEFF 		bl	UART_RS485_PutChar
2629:..\src/command_processing.c ****     // frame - packet data
2630:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20182              		.loc 1 2630 0
 20183 002e 0023     		movs	r3, #0
 20184 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20185 0032 09E0     		b	.L761
 20186              	.L762:
2631:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20187              		.loc 1 2631 0 discriminator 3
 20188 0034 FB89     		ldrh	r3, [r7, #14]
 20189 0036 7A68     		ldr	r2, [r7, #4]
 20190 0038 1344     		add	r3, r3, r2
 20191 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20192 003c 1846     		mov	r0, r3
 20193 003e FFF7FEFF 		bl	UART_RS485_PutChar
2630:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20194              		.loc 1 2630 0 discriminator 3
 20195 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20196 0044 0133     		adds	r3, r3, #1
 20197 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20198              	.L761:
2630:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20199              		.loc 1 2630 0 is_stmt 0 discriminator 1
 20200 0048 FA89     		ldrh	r2, [r7, #14]
 20201 004a 7B88     		ldrh	r3, [r7, #2]
 20202 004c 9A42     		cmp	r2, r3
 20203 004e F1D3     		bcc	.L762
2632:..\src/command_processing.c ****     }
2633:..\src/command_processing.c **** 
2634:..\src/command_processing.c ****     index = 0;
 20204              		.loc 1 2634 0 is_stmt 1
 20205 0050 0023     		movs	r3, #0
 20206 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2635:..\src/command_processing.c **** 
2636:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20207              		.loc 1 2636 0
 20208 0054 00BF     		nop
 20209              	.L764:
 20210              		.loc 1 2636 0 is_stmt 0 discriminator 2
 20211 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20212 005a 0346     		mov	r3, r0
 20213 005c 03F00103 		and	r3, r3, #1
 20214 0060 002B     		cmp	r3, #0
 20215 0062 05D1     		bne	.L763
 20216              		.loc 1 2636 0 discriminator 1
 20217 0064 FB89     		ldrh	r3, [r7, #14]
 20218 0066 5A1C     		adds	r2, r3, #1
 20219 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20220 006a B3F57A7F 		cmp	r3, #1000
 20221 006e F2D9     		bls	.L764
 20222              	.L763:
2637:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 442


2638:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20223              		.loc 1 2638 0 is_stmt 1
 20224 0070 0120     		movs	r0, #1
 20225 0072 FFF7FEFF 		bl	RS485_CTS_Write
2639:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20226              		.loc 1 2639 0
 20227 0076 0020     		movs	r0, #0
 20228 0078 FFF7FEFF 		bl	RS485_CTS_Write
2640:..\src/command_processing.c **** }
 20229              		.loc 1 2640 0
 20230 007c 00BF     		nop
 20231 007e 1037     		adds	r7, r7, #16
 20232              		.cfi_def_cfa_offset 8
 20233 0080 BD46     		mov	sp, r7
 20234              		.cfi_def_cfa_register 13
 20235              		@ sp needed
 20236 0082 80BD     		pop	{r7, pc}
 20237              		.cfi_endproc
 20238              	.LFE78:
 20239              		.size	commWrite_old_id, .-commWrite_old_id
 20240              		.section	.text.commWrite,"ax",%progbits
 20241              		.align	2
 20242              		.global	commWrite
 20243              		.thumb
 20244              		.thumb_func
 20245              		.type	commWrite, %function
 20246              	commWrite:
 20247              	.LFB79:
2641:..\src/command_processing.c **** 
2642:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2643:..\src/command_processing.c **** {
 20248              		.loc 1 2643 0
 20249              		.cfi_startproc
 20250              		@ args = 0, pretend = 0, frame = 16
 20251              		@ frame_needed = 1, uses_anonymous_args = 0
 20252 0000 80B5     		push	{r7, lr}
 20253              		.cfi_def_cfa_offset 8
 20254              		.cfi_offset 7, -8
 20255              		.cfi_offset 14, -4
 20256 0002 84B0     		sub	sp, sp, #16
 20257              		.cfi_def_cfa_offset 24
 20258 0004 00AF     		add	r7, sp, #0
 20259              		.cfi_def_cfa_register 7
 20260 0006 7860     		str	r0, [r7, #4]
 20261 0008 0B46     		mov	r3, r1
 20262 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2644:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2645:..\src/command_processing.c **** 
2646:..\src/command_processing.c ****     // frame - start
2647:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20263              		.loc 1 2647 0
 20264 000c 3A20     		movs	r0, #58
 20265 000e FFF7FEFF 		bl	UART_RS485_PutChar
2648:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20266              		.loc 1 2648 0
 20267 0012 3A20     		movs	r0, #58
 20268 0014 FFF7FEFF 		bl	UART_RS485_PutChar
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 443


2649:..\src/command_processing.c ****     // frame - ID
2650:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 20269              		.loc 1 2650 0
 20270 0018 1A4B     		ldr	r3, .L770
 20271 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 20272 001e 1846     		mov	r0, r3
 20273 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2651:..\src/command_processing.c ****     // frame - length
2652:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20274              		.loc 1 2652 0
 20275 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20276 0026 DBB2     		uxtb	r3, r3
 20277 0028 1846     		mov	r0, r3
 20278 002a FFF7FEFF 		bl	UART_RS485_PutChar
2653:..\src/command_processing.c ****     // frame - packet data
2654:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20279              		.loc 1 2654 0
 20280 002e 0023     		movs	r3, #0
 20281 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20282 0032 09E0     		b	.L766
 20283              	.L767:
2655:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20284              		.loc 1 2655 0 discriminator 3
 20285 0034 FB89     		ldrh	r3, [r7, #14]
 20286 0036 7A68     		ldr	r2, [r7, #4]
 20287 0038 1344     		add	r3, r3, r2
 20288 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20289 003c 1846     		mov	r0, r3
 20290 003e FFF7FEFF 		bl	UART_RS485_PutChar
2654:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20291              		.loc 1 2654 0 discriminator 3
 20292 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20293 0044 0133     		adds	r3, r3, #1
 20294 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20295              	.L766:
2654:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20296              		.loc 1 2654 0 is_stmt 0 discriminator 1
 20297 0048 FA89     		ldrh	r2, [r7, #14]
 20298 004a 7B88     		ldrh	r3, [r7, #2]
 20299 004c 9A42     		cmp	r2, r3
 20300 004e F1D3     		bcc	.L767
2656:..\src/command_processing.c ****     }
2657:..\src/command_processing.c **** 
2658:..\src/command_processing.c ****     index = 0;
 20301              		.loc 1 2658 0 is_stmt 1
 20302 0050 0023     		movs	r3, #0
 20303 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2659:..\src/command_processing.c **** 
2660:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20304              		.loc 1 2660 0
 20305 0054 00BF     		nop
 20306              	.L769:
 20307              		.loc 1 2660 0 is_stmt 0 discriminator 2
 20308 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20309 005a 0346     		mov	r3, r0
 20310 005c 03F00103 		and	r3, r3, #1
 20311 0060 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 444


 20312 0062 05D1     		bne	.L768
 20313              		.loc 1 2660 0 discriminator 1
 20314 0064 FB89     		ldrh	r3, [r7, #14]
 20315 0066 5A1C     		adds	r2, r3, #1
 20316 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20317 006a B3F57A7F 		cmp	r3, #1000
 20318 006e F2D9     		bls	.L769
 20319              	.L768:
2661:..\src/command_processing.c **** 
2662:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20320              		.loc 1 2662 0 is_stmt 1
 20321 0070 0120     		movs	r0, #1
 20322 0072 FFF7FEFF 		bl	RS485_CTS_Write
2663:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20323              		.loc 1 2663 0
 20324 0076 0020     		movs	r0, #0
 20325 0078 FFF7FEFF 		bl	RS485_CTS_Write
2664:..\src/command_processing.c **** }
 20326              		.loc 1 2664 0
 20327 007c 00BF     		nop
 20328 007e 1037     		adds	r7, r7, #16
 20329              		.cfi_def_cfa_offset 8
 20330 0080 BD46     		mov	sp, r7
 20331              		.cfi_def_cfa_register 13
 20332              		@ sp needed
 20333 0082 80BD     		pop	{r7, pc}
 20334              	.L771:
 20335              		.align	2
 20336              	.L770:
 20337 0084 00000000 		.word	g_mem
 20338              		.cfi_endproc
 20339              	.LFE79:
 20340              		.size	commWrite, .-commWrite
 20341              		.section	.text.commWrite_to_cuff,"ax",%progbits
 20342              		.align	2
 20343              		.global	commWrite_to_cuff
 20344              		.thumb
 20345              		.thumb_func
 20346              		.type	commWrite_to_cuff, %function
 20347              	commWrite_to_cuff:
 20348              	.LFB80:
2665:..\src/command_processing.c **** 
2666:..\src/command_processing.c **** void commWrite_to_cuff(uint8 *packet_data, uint16 packet_lenght)
2667:..\src/command_processing.c **** {
 20349              		.loc 1 2667 0
 20350              		.cfi_startproc
 20351              		@ args = 0, pretend = 0, frame = 16
 20352              		@ frame_needed = 1, uses_anonymous_args = 0
 20353 0000 80B5     		push	{r7, lr}
 20354              		.cfi_def_cfa_offset 8
 20355              		.cfi_offset 7, -8
 20356              		.cfi_offset 14, -4
 20357 0002 84B0     		sub	sp, sp, #16
 20358              		.cfi_def_cfa_offset 24
 20359 0004 00AF     		add	r7, sp, #0
 20360              		.cfi_def_cfa_register 7
 20361 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 445


 20362 0008 0B46     		mov	r3, r1
 20363 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2668:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2669:..\src/command_processing.c **** 
2670:..\src/command_processing.c ****     // frame - start
2671:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20364              		.loc 1 2671 0
 20365 000c 3A20     		movs	r0, #58
 20366 000e FFF7FEFF 		bl	UART_RS485_PutChar
2672:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20367              		.loc 1 2672 0
 20368 0012 3A20     		movs	r0, #58
 20369 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2673:..\src/command_processing.c ****     // frame - ID
2674:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id - 1);
 20370              		.loc 1 2674 0
 20371 0018 184B     		ldr	r3, .L778
 20372 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 20373 001e 013B     		subs	r3, r3, #1
 20374 0020 DBB2     		uxtb	r3, r3
 20375 0022 1846     		mov	r0, r3
 20376 0024 FFF7FEFF 		bl	UART_RS485_PutChar
2675:..\src/command_processing.c ****     // frame - length
2676:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20377              		.loc 1 2676 0
 20378 0028 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20379 002a DBB2     		uxtb	r3, r3
 20380 002c 1846     		mov	r0, r3
 20381 002e FFF7FEFF 		bl	UART_RS485_PutChar
2677:..\src/command_processing.c ****     // frame - packet data
2678:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20382              		.loc 1 2678 0
 20383 0032 0023     		movs	r3, #0
 20384 0034 FB81     		strh	r3, [r7, #14]	@ movhi
 20385 0036 09E0     		b	.L773
 20386              	.L774:
2679:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20387              		.loc 1 2679 0 discriminator 3
 20388 0038 FB89     		ldrh	r3, [r7, #14]
 20389 003a 7A68     		ldr	r2, [r7, #4]
 20390 003c 1344     		add	r3, r3, r2
 20391 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20392 0040 1846     		mov	r0, r3
 20393 0042 FFF7FEFF 		bl	UART_RS485_PutChar
2678:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20394              		.loc 1 2678 0 discriminator 3
 20395 0046 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20396 0048 0133     		adds	r3, r3, #1
 20397 004a FB81     		strh	r3, [r7, #14]	@ movhi
 20398              	.L773:
2678:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20399              		.loc 1 2678 0 is_stmt 0 discriminator 1
 20400 004c FA89     		ldrh	r2, [r7, #14]
 20401 004e 7B88     		ldrh	r3, [r7, #2]
 20402 0050 9A42     		cmp	r2, r3
 20403 0052 F1D3     		bcc	.L774
2680:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 446


2681:..\src/command_processing.c **** 
2682:..\src/command_processing.c ****     index = 0;
 20404              		.loc 1 2682 0 is_stmt 1
 20405 0054 0023     		movs	r3, #0
 20406 0056 FB81     		strh	r3, [r7, #14]	@ movhi
2683:..\src/command_processing.c **** 
2684:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20407              		.loc 1 2684 0
 20408 0058 00BF     		nop
 20409              	.L776:
 20410              		.loc 1 2684 0 is_stmt 0 discriminator 2
 20411 005a FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20412 005e 0346     		mov	r3, r0
 20413 0060 03F00103 		and	r3, r3, #1
 20414 0064 002B     		cmp	r3, #0
 20415 0066 05D1     		bne	.L777
 20416              		.loc 1 2684 0 discriminator 1
 20417 0068 FB89     		ldrh	r3, [r7, #14]
 20418 006a 5A1C     		adds	r2, r3, #1
 20419 006c FA81     		strh	r2, [r7, #14]	@ movhi
 20420 006e B3F57A7F 		cmp	r3, #1000
 20421 0072 F2D9     		bls	.L776
 20422              	.L777:
2685:..\src/command_processing.c **** }
 20423              		.loc 1 2685 0 is_stmt 1
 20424 0074 00BF     		nop
 20425 0076 1037     		adds	r7, r7, #16
 20426              		.cfi_def_cfa_offset 8
 20427 0078 BD46     		mov	sp, r7
 20428              		.cfi_def_cfa_register 13
 20429              		@ sp needed
 20430 007a 80BD     		pop	{r7, pc}
 20431              	.L779:
 20432              		.align	2
 20433              	.L778:
 20434 007c 00000000 		.word	g_mem
 20435              		.cfi_endproc
 20436              	.LFE80:
 20437              		.size	commWrite_to_cuff, .-commWrite_to_cuff
 20438              		.section	.text.LCRChecksum,"ax",%progbits
 20439              		.align	2
 20440              		.global	LCRChecksum
 20441              		.thumb
 20442              		.thumb_func
 20443              		.type	LCRChecksum, %function
 20444              	LCRChecksum:
 20445              	.LFB81:
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c **** //==============================================================================
2688:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2689:..\src/command_processing.c **** //==============================================================================
2690:..\src/command_processing.c **** 
2691:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2692:..\src/command_processing.c **** 
2693:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 20446              		.loc 1 2693 0
 20447              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 447


 20448              		@ args = 0, pretend = 0, frame = 16
 20449              		@ frame_needed = 1, uses_anonymous_args = 0
 20450              		@ link register save eliminated.
 20451 0000 80B4     		push	{r7}
 20452              		.cfi_def_cfa_offset 4
 20453              		.cfi_offset 7, -4
 20454 0002 85B0     		sub	sp, sp, #20
 20455              		.cfi_def_cfa_offset 24
 20456 0004 00AF     		add	r7, sp, #0
 20457              		.cfi_def_cfa_register 7
 20458 0006 7860     		str	r0, [r7, #4]
 20459 0008 0B46     		mov	r3, r1
 20460 000a FB70     		strb	r3, [r7, #3]
2694:..\src/command_processing.c ****     
2695:..\src/command_processing.c ****     uint8 CYDATA i;
2696:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 20461              		.loc 1 2696 0
 20462 000c 0023     		movs	r3, #0
 20463 000e BB73     		strb	r3, [r7, #14]
2697:..\src/command_processing.c ****     
2698:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 20464              		.loc 1 2698 0
 20465 0010 0023     		movs	r3, #0
 20466 0012 FB73     		strb	r3, [r7, #15]
 20467 0014 09E0     		b	.L781
 20468              	.L782:
2699:..\src/command_processing.c ****        checksum ^= data_array[i];
 20469              		.loc 1 2699 0 discriminator 3
 20470 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20471 0018 7A68     		ldr	r2, [r7, #4]
 20472 001a 1344     		add	r3, r3, r2
 20473 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 20474 001e BB7B     		ldrb	r3, [r7, #14]
 20475 0020 5340     		eors	r3, r3, r2
 20476 0022 BB73     		strb	r3, [r7, #14]
2698:..\src/command_processing.c ****        checksum ^= data_array[i];
 20477              		.loc 1 2698 0 discriminator 3
 20478 0024 FB7B     		ldrb	r3, [r7, #15]
 20479 0026 0133     		adds	r3, r3, #1
 20480 0028 FB73     		strb	r3, [r7, #15]
 20481              	.L781:
2698:..\src/command_processing.c ****        checksum ^= data_array[i];
 20482              		.loc 1 2698 0 is_stmt 0 discriminator 1
 20483 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 20484 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20485 002e 9A42     		cmp	r2, r3
 20486 0030 F1D3     		bcc	.L782
2700:..\src/command_processing.c ****   
2701:..\src/command_processing.c ****     return checksum;
 20487              		.loc 1 2701 0 is_stmt 1
 20488 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2702:..\src/command_processing.c **** }
 20489              		.loc 1 2702 0
 20490 0034 1846     		mov	r0, r3
 20491 0036 1437     		adds	r7, r7, #20
 20492              		.cfi_def_cfa_offset 4
 20493 0038 BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 448


 20494              		.cfi_def_cfa_register 13
 20495              		@ sp needed
 20496 003a 80BC     		pop	{r7}
 20497              		.cfi_restore 7
 20498              		.cfi_def_cfa_offset 0
 20499 003c 7047     		bx	lr
 20500              		.cfi_endproc
 20501              	.LFE81:
 20502              		.size	LCRChecksum, .-LCRChecksum
 20503 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 20504              		.align	2
 20505              		.global	sendAcknowledgment
 20506              		.thumb
 20507              		.thumb_func
 20508              		.type	sendAcknowledgment, %function
 20509              	sendAcknowledgment:
 20510              	.LFB82:
2703:..\src/command_processing.c **** 
2704:..\src/command_processing.c **** 
2705:..\src/command_processing.c **** //==============================================================================
2706:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2707:..\src/command_processing.c **** //==============================================================================
2708:..\src/command_processing.c **** 
2709:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 20511              		.loc 1 2709 0
 20512              		.cfi_startproc
 20513              		@ args = 0, pretend = 0, frame = 16
 20514              		@ frame_needed = 1, uses_anonymous_args = 0
 20515 0000 80B5     		push	{r7, lr}
 20516              		.cfi_def_cfa_offset 8
 20517              		.cfi_offset 7, -8
 20518              		.cfi_offset 14, -4
 20519 0002 84B0     		sub	sp, sp, #16
 20520              		.cfi_def_cfa_offset 24
 20521 0004 00AF     		add	r7, sp, #0
 20522              		.cfi_def_cfa_register 7
 20523 0006 0346     		mov	r3, r0
 20524 0008 FB71     		strb	r3, [r7, #7]
2710:..\src/command_processing.c ****     int packet_lenght = 2;
 20525              		.loc 1 2710 0
 20526 000a 0223     		movs	r3, #2
 20527 000c FB60     		str	r3, [r7, #12]
2711:..\src/command_processing.c ****     uint8 packet_data[2];
2712:..\src/command_processing.c **** 
2713:..\src/command_processing.c ****     packet_data[0] = value;
 20528              		.loc 1 2713 0
 20529 000e FB79     		ldrb	r3, [r7, #7]
 20530 0010 3B72     		strb	r3, [r7, #8]
2714:..\src/command_processing.c ****     packet_data[1] = value;
 20531              		.loc 1 2714 0
 20532 0012 FB79     		ldrb	r3, [r7, #7]
 20533 0014 7B72     		strb	r3, [r7, #9]
2715:..\src/command_processing.c **** 
2716:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 20534              		.loc 1 2716 0
 20535 0016 FB68     		ldr	r3, [r7, #12]
 20536 0018 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 449


 20537 001a 07F10803 		add	r3, r7, #8
 20538 001e 1146     		mov	r1, r2
 20539 0020 1846     		mov	r0, r3
 20540 0022 FFF7FEFF 		bl	commWrite
2717:..\src/command_processing.c **** }
 20541              		.loc 1 2717 0
 20542 0026 00BF     		nop
 20543 0028 1037     		adds	r7, r7, #16
 20544              		.cfi_def_cfa_offset 8
 20545 002a BD46     		mov	sp, r7
 20546              		.cfi_def_cfa_register 13
 20547              		@ sp needed
 20548 002c 80BD     		pop	{r7, pc}
 20549              		.cfi_endproc
 20550              	.LFE82:
 20551              		.size	sendAcknowledgment, .-sendAcknowledgment
 20552 002e 00BF     		.section	.text.memStore,"ax",%progbits
 20553              		.align	2
 20554              		.global	memStore
 20555              		.thumb
 20556              		.thumb_func
 20557              		.type	memStore, %function
 20558              	memStore:
 20559              	.LFB83:
2718:..\src/command_processing.c **** 
2719:..\src/command_processing.c **** //==============================================================================
2720:..\src/command_processing.c **** //                                                                  STORE MEMORY
2721:..\src/command_processing.c **** //==============================================================================
2722:..\src/command_processing.c **** 
2723:..\src/command_processing.c **** 
2724:..\src/command_processing.c **** uint8 memStore(int displacement)
2725:..\src/command_processing.c **** {
 20560              		.loc 1 2725 0
 20561              		.cfi_startproc
 20562              		@ args = 0, pretend = 0, frame = 24
 20563              		@ frame_needed = 1, uses_anonymous_args = 0
 20564 0000 80B5     		push	{r7, lr}
 20565              		.cfi_def_cfa_offset 8
 20566              		.cfi_offset 7, -8
 20567              		.cfi_offset 14, -4
 20568 0002 86B0     		sub	sp, sp, #24
 20569              		.cfi_def_cfa_offset 32
 20570 0004 00AF     		add	r7, sp, #0
 20571              		.cfi_def_cfa_register 7
 20572 0006 7860     		str	r0, [r7, #4]
2726:..\src/command_processing.c ****     int i;  // iterator
2727:..\src/command_processing.c ****     uint8 writeStatus;
2728:..\src/command_processing.c ****     int pages;
2729:..\src/command_processing.c ****     uint8 ret_val = 1;
 20573              		.loc 1 2729 0
 20574 0008 0123     		movs	r3, #1
 20575 000a FB74     		strb	r3, [r7, #19]
2730:..\src/command_processing.c **** 
2731:..\src/command_processing.c ****     // Disable Interrupt
2732:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 20576              		.loc 1 2732 0
 20577 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 450


2733:..\src/command_processing.c **** 
2734:..\src/command_processing.c ****     // Stop motor
2735:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 20578              		.loc 1 2735 0
 20579 0010 0020     		movs	r0, #0
 20580 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2736:..\src/command_processing.c **** 
2737:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2738:..\src/command_processing.c ****     CySetTemp();
 20581              		.loc 1 2738 0
 20582 0016 FFF7FEFF 		bl	CySetTemp
2739:..\src/command_processing.c **** 
2740:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 20583              		.loc 1 2740 0
 20584 001a 1D4A     		ldr	r2, .L791
 20585 001c 1D4B     		ldr	r3, .L791+4
 20586 001e 1046     		mov	r0, r2
 20587 0020 1946     		mov	r1, r3
 20588 0022 4FF42C73 		mov	r3, #688
 20589 0026 1A46     		mov	r2, r3
 20590 0028 FFF7FEFF 		bl	memcpy
2741:..\src/command_processing.c **** 
2742:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 20591              		.loc 1 2742 0
 20592 002c 2B23     		movs	r3, #43
 20593 002e FB60     		str	r3, [r7, #12]
2743:..\src/command_processing.c **** 
2744:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 20594              		.loc 1 2744 0
 20595 0030 0023     		movs	r3, #0
 20596 0032 7B61     		str	r3, [r7, #20]
 20597 0034 18E0     		b	.L786
 20598              	.L789:
2745:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20599              		.loc 1 2745 0
 20600 0036 7B69     		ldr	r3, [r7, #20]
 20601 0038 1B01     		lsls	r3, r3, #4
 20602 003a 1A46     		mov	r2, r3
 20603 003c 154B     		ldr	r3, .L791+4
 20604 003e D018     		adds	r0, r2, r3
 20605 0040 7B69     		ldr	r3, [r7, #20]
 20606 0042 DAB2     		uxtb	r2, r3
 20607 0044 7B68     		ldr	r3, [r7, #4]
 20608 0046 DBB2     		uxtb	r3, r3
 20609 0048 1344     		add	r3, r3, r2
 20610 004a DBB2     		uxtb	r3, r3
 20611 004c 1946     		mov	r1, r3
 20612 004e FFF7FEFF 		bl	EEPROM_Write
 20613 0052 0346     		mov	r3, r0
 20614 0054 FB72     		strb	r3, [r7, #11]
2746:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 20615              		.loc 1 2746 0
 20616 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20617 0058 002B     		cmp	r3, #0
 20618 005a 02D0     		beq	.L787
2747:..\src/command_processing.c ****             ret_val = 0;
 20619              		.loc 1 2747 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 451


 20620 005c 0023     		movs	r3, #0
 20621 005e FB74     		strb	r3, [r7, #19]
2748:..\src/command_processing.c ****             break;
 20622              		.loc 1 2748 0
 20623 0060 06E0     		b	.L788
 20624              	.L787:
2744:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20625              		.loc 1 2744 0 discriminator 2
 20626 0062 7B69     		ldr	r3, [r7, #20]
 20627 0064 0133     		adds	r3, r3, #1
 20628 0066 7B61     		str	r3, [r7, #20]
 20629              	.L786:
2744:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20630              		.loc 1 2744 0 is_stmt 0 discriminator 1
 20631 0068 7A69     		ldr	r2, [r7, #20]
 20632 006a FB68     		ldr	r3, [r7, #12]
 20633 006c 9A42     		cmp	r2, r3
 20634 006e E2DB     		blt	.L789
 20635              	.L788:
2749:..\src/command_processing.c ****         }
2750:..\src/command_processing.c ****     }
2751:..\src/command_processing.c **** 
2752:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 20636              		.loc 1 2752 0 is_stmt 1
 20637 0070 084A     		ldr	r2, .L791+4
 20638 0072 074B     		ldr	r3, .L791
 20639 0074 1046     		mov	r0, r2
 20640 0076 1946     		mov	r1, r3
 20641 0078 4FF42C73 		mov	r3, #688
 20642 007c 1A46     		mov	r2, r3
 20643 007e FFF7FEFF 		bl	memcpy
2753:..\src/command_processing.c **** 
2754:..\src/command_processing.c ****     // Re-Enable Interrupt
2755:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 20644              		.loc 1 2755 0
 20645 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2756:..\src/command_processing.c **** 
2757:..\src/command_processing.c ****     return ret_val;
 20646              		.loc 1 2757 0
 20647 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2758:..\src/command_processing.c **** }
 20648              		.loc 1 2758 0
 20649 0088 1846     		mov	r0, r3
 20650 008a 1837     		adds	r7, r7, #24
 20651              		.cfi_def_cfa_offset 8
 20652 008c BD46     		mov	sp, r7
 20653              		.cfi_def_cfa_register 13
 20654              		@ sp needed
 20655 008e 80BD     		pop	{r7, pc}
 20656              	.L792:
 20657              		.align	2
 20658              	.L791:
 20659 0090 00000000 		.word	c_mem
 20660 0094 00000000 		.word	g_mem
 20661              		.cfi_endproc
 20662              	.LFE83:
 20663              		.size	memStore, .-memStore
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 452


 20664              		.section	.text.memRecall,"ax",%progbits
 20665              		.align	2
 20666              		.global	memRecall
 20667              		.thumb
 20668              		.thumb_func
 20669              		.type	memRecall, %function
 20670              	memRecall:
 20671              	.LFB84:
2759:..\src/command_processing.c **** 
2760:..\src/command_processing.c **** 
2761:..\src/command_processing.c **** //==============================================================================
2762:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2763:..\src/command_processing.c **** //==============================================================================
2764:..\src/command_processing.c **** 
2765:..\src/command_processing.c **** 
2766:..\src/command_processing.c **** void memRecall(void)
2767:..\src/command_processing.c **** {
 20672              		.loc 1 2767 0
 20673              		.cfi_startproc
 20674              		@ args = 0, pretend = 0, frame = 8
 20675              		@ frame_needed = 1, uses_anonymous_args = 0
 20676 0000 80B5     		push	{r7, lr}
 20677              		.cfi_def_cfa_offset 8
 20678              		.cfi_offset 7, -8
 20679              		.cfi_offset 14, -4
 20680 0002 82B0     		sub	sp, sp, #8
 20681              		.cfi_def_cfa_offset 16
 20682 0004 00AF     		add	r7, sp, #0
 20683              		.cfi_def_cfa_register 7
2768:..\src/command_processing.c ****     uint16 i;
2769:..\src/command_processing.c **** 
2770:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 20684              		.loc 1 2770 0
 20685 0006 0023     		movs	r3, #0
 20686 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 20687 000a 0CE0     		b	.L794
 20688              	.L795:
2771:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20689              		.loc 1 2771 0 discriminator 3
 20690 000c FB88     		ldrh	r3, [r7, #6]
 20691 000e 184A     		ldr	r2, .L799
 20692 0010 1344     		add	r3, r3, r2
 20693 0012 184A     		ldr	r2, .L799+4
 20694 0014 1168     		ldr	r1, [r2]
 20695 0016 FA88     		ldrh	r2, [r7, #6]
 20696 0018 0A44     		add	r2, r2, r1
 20697 001a 1278     		ldrb	r2, [r2]
 20698 001c D2B2     		uxtb	r2, r2
 20699 001e 1A70     		strb	r2, [r3]
2770:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20700              		.loc 1 2770 0 discriminator 3
 20701 0020 FB88     		ldrh	r3, [r7, #6]
 20702 0022 0133     		adds	r3, r3, #1
 20703 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 20704              	.L794:
2770:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20705              		.loc 1 2770 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 453


 20706 0026 FB88     		ldrh	r3, [r7, #6]
 20707 0028 B3F52C7F 		cmp	r3, #688
 20708 002c EED3     		bcc	.L795
2772:..\src/command_processing.c ****     }
2773:..\src/command_processing.c ****     
2774:..\src/command_processing.c ****     // Recall saved user_emg structure
2775:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 20709              		.loc 1 2775 0 is_stmt 1
 20710 002e 104B     		ldr	r3, .L799
 20711 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 20712 0034 5B01     		lsls	r3, r3, #5
 20713 0036 03F51273 		add	r3, r3, #584
 20714 003a 0D4A     		ldr	r2, .L799
 20715 003c 1344     		add	r3, r3, r2
 20716 003e 1022     		movs	r2, #16
 20717 0040 1946     		mov	r1, r3
 20718 0042 0D48     		ldr	r0, .L799+8
 20719 0044 FFF7FEFF 		bl	memcpy
2776:..\src/command_processing.c **** 
2777:..\src/command_processing.c ****     //check for initialization
2778:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 20720              		.loc 1 2778 0
 20721 0048 094B     		ldr	r3, .L799
 20722 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20723 004c 002B     		cmp	r3, #0
 20724 004e 02D1     		bne	.L796
2779:..\src/command_processing.c ****         memRestore();
 20725              		.loc 1 2779 0
 20726 0050 FFF7FEFF 		bl	memRestore
2780:..\src/command_processing.c ****     } else {
2781:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2782:..\src/command_processing.c ****     }        
2783:..\src/command_processing.c **** }
 20727              		.loc 1 2783 0
 20728 0054 08E0     		b	.L798
 20729              	.L796:
2781:..\src/command_processing.c ****     }        
 20730              		.loc 1 2781 0
 20731 0056 094A     		ldr	r2, .L799+12
 20732 0058 054B     		ldr	r3, .L799
 20733 005a 1046     		mov	r0, r2
 20734 005c 1946     		mov	r1, r3
 20735 005e 4FF42C73 		mov	r3, #688
 20736 0062 1A46     		mov	r2, r3
 20737 0064 FFF7FEFF 		bl	memcpy
 20738              	.L798:
 20739              		.loc 1 2783 0
 20740 0068 00BF     		nop
 20741 006a 0837     		adds	r7, r7, #8
 20742              		.cfi_def_cfa_offset 8
 20743 006c BD46     		mov	sp, r7
 20744              		.cfi_def_cfa_register 13
 20745              		@ sp needed
 20746 006e 80BD     		pop	{r7, pc}
 20747              	.L800:
 20748              		.align	2
 20749              	.L799:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 454


 20750 0070 00000000 		.word	g_mem
 20751 0074 00000000 		.word	EEPROM_ADDR
 20752 0078 F0010000 		.word	g_mem+496
 20753 007c 00000000 		.word	c_mem
 20754              		.cfi_endproc
 20755              	.LFE84:
 20756              		.size	memRecall, .-memRecall
 20757              		.section	.text.memRestore,"ax",%progbits
 20758              		.align	2
 20759              		.global	memRestore
 20760              		.thumb
 20761              		.thumb_func
 20762              		.type	memRestore, %function
 20763              	memRestore:
 20764              	.LFB85:
2784:..\src/command_processing.c **** 
2785:..\src/command_processing.c **** 
2786:..\src/command_processing.c **** //==============================================================================
2787:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2788:..\src/command_processing.c **** //==============================================================================
2789:..\src/command_processing.c **** 
2790:..\src/command_processing.c **** 
2791:..\src/command_processing.c **** uint8 memRestore(void) {
 20765              		.loc 1 2791 0
 20766              		.cfi_startproc
 20767              		@ args = 0, pretend = 0, frame = 8
 20768              		@ frame_needed = 1, uses_anonymous_args = 0
 20769 0000 80B5     		push	{r7, lr}
 20770              		.cfi_def_cfa_offset 8
 20771              		.cfi_offset 7, -8
 20772              		.cfi_offset 14, -4
 20773 0002 82B0     		sub	sp, sp, #8
 20774              		.cfi_def_cfa_offset 16
 20775 0004 00AF     		add	r7, sp, #0
 20776              		.cfi_def_cfa_register 7
2792:..\src/command_processing.c ****     uint16 i;
2793:..\src/command_processing.c **** 
2794:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 20777              		.loc 1 2794 0
 20778 0006 0023     		movs	r3, #0
 20779 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 20780 000a 0EE0     		b	.L802
 20781              	.L803:
2795:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20782              		.loc 1 2795 0 discriminator 3
 20783 000c FB88     		ldrh	r3, [r7, #6]
 20784 000e 114A     		ldr	r2, .L806
 20785 0010 1344     		add	r3, r3, r2
 20786 0012 114A     		ldr	r2, .L806+4
 20787 0014 1168     		ldr	r1, [r2]
 20788 0016 FA88     		ldrh	r2, [r7, #6]
 20789 0018 02F54872 		add	r2, r2, #800
 20790 001c 0A44     		add	r2, r2, r1
 20791 001e 1278     		ldrb	r2, [r2]
 20792 0020 D2B2     		uxtb	r2, r2
 20793 0022 1A70     		strb	r2, [r3]
2794:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 455


 20794              		.loc 1 2794 0 discriminator 3
 20795 0024 FB88     		ldrh	r3, [r7, #6]
 20796 0026 0133     		adds	r3, r3, #1
 20797 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 20798              	.L802:
2794:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20799              		.loc 1 2794 0 is_stmt 0 discriminator 1
 20800 002a FB88     		ldrh	r3, [r7, #6]
 20801 002c B3F52C7F 		cmp	r3, #688
 20802 0030 ECD3     		bcc	.L803
2796:..\src/command_processing.c ****     }
2797:..\src/command_processing.c **** 
2798:..\src/command_processing.c ****     //check for initialization
2799:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 20803              		.loc 1 2799 0 is_stmt 1
 20804 0032 084B     		ldr	r3, .L806
 20805 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20806 0036 002B     		cmp	r3, #0
 20807 0038 03D1     		bne	.L804
2800:..\src/command_processing.c ****         return memInit();
 20808              		.loc 1 2800 0
 20809 003a FFF7FEFF 		bl	memInit
 20810 003e 0346     		mov	r3, r0
 20811 0040 03E0     		b	.L805
 20812              	.L804:
2801:..\src/command_processing.c ****     } else {
2802:..\src/command_processing.c ****         return memStore(0);
 20813              		.loc 1 2802 0
 20814 0042 0020     		movs	r0, #0
 20815 0044 FFF7FEFF 		bl	memStore
 20816 0048 0346     		mov	r3, r0
 20817              	.L805:
2803:..\src/command_processing.c ****     }  
2804:..\src/command_processing.c **** }
 20818              		.loc 1 2804 0
 20819 004a 1846     		mov	r0, r3
 20820 004c 0837     		adds	r7, r7, #8
 20821              		.cfi_def_cfa_offset 8
 20822 004e BD46     		mov	sp, r7
 20823              		.cfi_def_cfa_register 13
 20824              		@ sp needed
 20825 0050 80BD     		pop	{r7, pc}
 20826              	.L807:
 20827 0052 00BF     		.align	2
 20828              	.L806:
 20829 0054 00000000 		.word	g_mem
 20830 0058 00000000 		.word	EEPROM_ADDR
 20831              		.cfi_endproc
 20832              	.LFE85:
 20833              		.size	memRestore, .-memRestore
 20834              		.section	.rodata
 20835 1aa7 00       		.align	2
 20836              	.LC269:
 20837 1aa8 47454E30 		.ascii	"GEN001\000"
 20837      303100
 20838              		.section	.text.memInit,"ax",%progbits
 20839              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 456


 20840              		.global	memInit
 20841              		.thumb
 20842              		.thumb_func
 20843              		.type	memInit, %function
 20844              	memInit:
 20845              	.LFB86:
2805:..\src/command_processing.c **** 
2806:..\src/command_processing.c **** //==============================================================================
2807:..\src/command_processing.c **** //                                                                   MEMORY INIT
2808:..\src/command_processing.c **** //==============================================================================
2809:..\src/command_processing.c **** 
2810:..\src/command_processing.c **** uint8 memInit(void)
2811:..\src/command_processing.c **** {
 20846              		.loc 1 2811 0
 20847              		.cfi_startproc
 20848              		@ args = 0, pretend = 0, frame = 8
 20849              		@ frame_needed = 1, uses_anonymous_args = 0
 20850 0000 80B5     		push	{r7, lr}
 20851              		.cfi_def_cfa_offset 8
 20852              		.cfi_offset 7, -8
 20853              		.cfi_offset 14, -4
 20854 0002 82B0     		sub	sp, sp, #8
 20855              		.cfi_def_cfa_offset 16
 20856 0004 00AF     		add	r7, sp, #0
 20857              		.cfi_def_cfa_register 7
2812:..\src/command_processing.c ****     uint8 i, j;
2813:..\src/command_processing.c **** 
2814:..\src/command_processing.c ****     //initialize memory settings
2815:..\src/command_processing.c ****     for (i=0; i<15; i++){
 20858              		.loc 1 2815 0
 20859 0006 0023     		movs	r3, #0
 20860 0008 FB71     		strb	r3, [r7, #7]
 20861 000a 07E0     		b	.L809
 20862              	.L810:
2816:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20863              		.loc 1 2816 0 discriminator 3
 20864 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20865 000e B44A     		ldr	r2, .L835
 20866 0010 1344     		add	r3, r3, r2
 20867 0012 0022     		movs	r2, #0
 20868 0014 5A70     		strb	r2, [r3, #1]
2815:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20869              		.loc 1 2815 0 discriminator 3
 20870 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20871 0018 0133     		adds	r3, r3, #1
 20872 001a FB71     		strb	r3, [r7, #7]
 20873              	.L809:
2815:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20874              		.loc 1 2815 0 is_stmt 0 discriminator 1
 20875 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20876 001e 0E2B     		cmp	r3, #14
 20877 0020 F4D9     		bls	.L810
2817:..\src/command_processing.c ****     }
2818:..\src/command_processing.c ****         
2819:..\src/command_processing.c ****     // DEV STRUCT
2820:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 20878              		.loc 1 2820 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 457


 20879 0022 AF4B     		ldr	r3, .L835
 20880 0024 0122     		movs	r2, #1
 20881 0026 83F8A020 		strb	r2, [r3, #160]
2821:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 20882              		.loc 1 2821 0
 20883 002a AD4B     		ldr	r3, .L835
 20884 002c 0022     		movs	r2, #0
 20885 002e 83F8A720 		strb	r2, [r3, #167]
2822:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 20886              		.loc 1 2822 0
 20887 0032 AB4B     		ldr	r3, .L835
 20888 0034 0122     		movs	r2, #1
 20889 0036 83F8AC20 		strb	r2, [r3, #172]
2823:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 20890              		.loc 1 2823 0
 20891 003a A94B     		ldr	r3, .L835
 20892 003c 0022     		movs	r2, #0
 20893 003e 83F8A820 		strb	r2, [r3, #168]
2824:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 20894              		.loc 1 2824 0
 20895 0042 FFF7FEFF 		bl	reset_counters
2825:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 20896              		.loc 1 2825 0
 20897 0046 0023     		movs	r3, #0
 20898 0048 FB71     		strb	r3, [r7, #7]
 20899 004a 08E0     		b	.L811
 20900              	.L812:
2826:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 20901              		.loc 1 2826 0 discriminator 3
 20902 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20903 004e A44A     		ldr	r2, .L835
 20904 0050 1344     		add	r3, r3, r2
 20905 0052 0022     		movs	r2, #0
 20906 0054 83F86020 		strb	r2, [r3, #96]
2825:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 20907              		.loc 1 2825 0 discriminator 3
 20908 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20909 005a 0133     		adds	r3, r3, #1
 20910 005c FB71     		strb	r3, [r7, #7]
 20911              	.L811:
2825:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 20912              		.loc 1 2825 0 is_stmt 0 discriminator 1
 20913 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20914 0060 3F2B     		cmp	r3, #63
 20915 0062 F3D9     		bls	.L812
2827:..\src/command_processing.c ****     }
2828:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 20916              		.loc 1 2828 0 is_stmt 1
 20917 0064 9E4B     		ldr	r3, .L835
 20918 0066 0022     		movs	r2, #0
 20919 0068 83F8A920 		strb	r2, [r3, #169]
2829:..\src/command_processing.c **** 
2830:..\src/command_processing.c ****     // MOTOR STRUCT
2831:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 20920              		.loc 1 2831 0
 20921 006c 0023     		movs	r3, #0
 20922 006e FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 458


 20923 0070 15E1     		b	.L813
 20924              	.L816:
2832:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 20925              		.loc 1 2832 0
 20926 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20927 0074 9A49     		ldr	r1, .L835
 20928 0076 1346     		mov	r3, r2
 20929 0078 DB00     		lsls	r3, r3, #3
 20930 007a 9B1A     		subs	r3, r3, r2
 20931 007c 1B01     		lsls	r3, r3, #4
 20932 007e 0B44     		add	r3, r3, r1
 20933 0080 B033     		adds	r3, r3, #176
 20934 0082 40F23942 		movw	r2, #1081
 20935 0086 1A60     		str	r2, [r3]
2833:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 20936              		.loc 1 2833 0
 20937 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20938 008a 9549     		ldr	r1, .L835
 20939 008c 1346     		mov	r3, r2
 20940 008e DB00     		lsls	r3, r3, #3
 20941 0090 9B1A     		subs	r3, r3, r2
 20942 0092 1B01     		lsls	r3, r3, #4
 20943 0094 0B44     		add	r3, r3, r1
 20944 0096 B433     		adds	r3, r3, #180
 20945 0098 0022     		movs	r2, #0
 20946 009a 1A60     		str	r2, [r3]
2834:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 20947              		.loc 1 2834 0
 20948 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20949 009e 9049     		ldr	r1, .L835
 20950 00a0 1346     		mov	r3, r2
 20951 00a2 DB00     		lsls	r3, r3, #3
 20952 00a4 9B1A     		subs	r3, r3, r2
 20953 00a6 1B01     		lsls	r3, r3, #4
 20954 00a8 0B44     		add	r3, r3, r1
 20955 00aa B833     		adds	r3, r3, #184
 20956 00ac 4FF4E572 		mov	r2, #458
 20957 00b0 1A60     		str	r2, [r3]
2835:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 20958              		.loc 1 2835 0
 20959 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20960 00b4 8A49     		ldr	r1, .L835
 20961 00b6 1346     		mov	r3, r2
 20962 00b8 DB00     		lsls	r3, r3, #3
 20963 00ba 9B1A     		subs	r3, r3, r2
 20964 00bc 1B01     		lsls	r3, r3, #4
 20965 00be 0B44     		add	r3, r3, r1
 20966 00c0 BC33     		adds	r3, r3, #188
 20967 00c2 4FF48032 		mov	r2, #65536
 20968 00c6 1A60     		str	r2, [r3]
2836:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 20969              		.loc 1 2836 0
 20970 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20971 00ca 8549     		ldr	r1, .L835
 20972 00cc 1346     		mov	r3, r2
 20973 00ce DB00     		lsls	r3, r3, #3
 20974 00d0 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 459


 20975 00d2 1B01     		lsls	r3, r3, #4
 20976 00d4 0B44     		add	r3, r3, r1
 20977 00d6 C033     		adds	r3, r3, #192
 20978 00d8 4122     		movs	r2, #65
 20979 00da 1A60     		str	r2, [r3]
2837:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 20980              		.loc 1 2837 0
 20981 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20982 00de 8049     		ldr	r1, .L835
 20983 00e0 1346     		mov	r3, r2
 20984 00e2 DB00     		lsls	r3, r3, #3
 20985 00e4 9B1A     		subs	r3, r3, r2
 20986 00e6 1B01     		lsls	r3, r3, #4
 20987 00e8 0B44     		add	r3, r3, r1
 20988 00ea C433     		adds	r3, r3, #196
 20989 00ec 0022     		movs	r2, #0
 20990 00ee 1A60     		str	r2, [r3]
2838:..\src/command_processing.c **** 
2839:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 20991              		.loc 1 2839 0
 20992 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20993 00f2 7B49     		ldr	r1, .L835
 20994 00f4 1346     		mov	r3, r2
 20995 00f6 DB00     		lsls	r3, r3, #3
 20996 00f8 9B1A     		subs	r3, r3, r2
 20997 00fa 1B01     		lsls	r3, r3, #4
 20998 00fc 0B44     		add	r3, r3, r1
 20999 00fe C833     		adds	r3, r3, #200
 21000 0100 41F69912 		movw	r2, #6553
 21001 0104 1A60     		str	r2, [r3]
2840:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 21002              		.loc 1 2840 0
 21003 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21004 0108 7549     		ldr	r1, .L835
 21005 010a 1346     		mov	r3, r2
 21006 010c DB00     		lsls	r3, r3, #3
 21007 010e 9B1A     		subs	r3, r3, r2
 21008 0110 1B01     		lsls	r3, r3, #4
 21009 0112 0B44     		add	r3, r3, r1
 21010 0114 CC33     		adds	r3, r3, #204
 21011 0116 0022     		movs	r2, #0
 21012 0118 1A60     		str	r2, [r3]
2841:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 21013              		.loc 1 2841 0
 21014 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21015 011c 7049     		ldr	r1, .L835
 21016 011e 1346     		mov	r3, r2
 21017 0120 DB00     		lsls	r3, r3, #3
 21018 0122 9B1A     		subs	r3, r3, r2
 21019 0124 1B01     		lsls	r3, r3, #4
 21020 0126 0B44     		add	r3, r3, r1
 21021 0128 D033     		adds	r3, r3, #208
 21022 012a 0022     		movs	r2, #0
 21023 012c 1A60     		str	r2, [r3]
2842:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 21024              		.loc 1 2842 0
 21025 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 460


 21026 0130 6B49     		ldr	r1, .L835
 21027 0132 1346     		mov	r3, r2
 21028 0134 DB00     		lsls	r3, r3, #3
 21029 0136 9B1A     		subs	r3, r3, r2
 21030 0138 1B01     		lsls	r3, r3, #4
 21031 013a 0B44     		add	r3, r3, r1
 21032 013c D433     		adds	r3, r3, #212
 21033 013e 44F6CC42 		movw	r2, #19660
 21034 0142 1A60     		str	r2, [r3]
2843:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 21035              		.loc 1 2843 0
 21036 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21037 0146 6649     		ldr	r1, .L835
 21038 0148 1346     		mov	r3, r2
 21039 014a DB00     		lsls	r3, r3, #3
 21040 014c 9B1A     		subs	r3, r3, r2
 21041 014e 1B01     		lsls	r3, r3, #4
 21042 0150 0B44     		add	r3, r3, r1
 21043 0152 D833     		adds	r3, r3, #216
 21044 0154 0D22     		movs	r2, #13
 21045 0156 1A60     		str	r2, [r3]
2844:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 21046              		.loc 1 2844 0
 21047 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21048 015a 6149     		ldr	r1, .L835
 21049 015c 1346     		mov	r3, r2
 21050 015e DB00     		lsls	r3, r3, #3
 21051 0160 9B1A     		subs	r3, r3, r2
 21052 0162 1B01     		lsls	r3, r3, #4
 21053 0164 0B44     		add	r3, r3, r1
 21054 0166 DC33     		adds	r3, r3, #220
 21055 0168 0022     		movs	r2, #0
 21056 016a 1A60     		str	r2, [r3]
2845:..\src/command_processing.c **** 
2846:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 21057              		.loc 1 2846 0
 21058 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21059 016e 5C49     		ldr	r1, .L835
 21060 0170 1346     		mov	r3, r2
 21061 0172 DB00     		lsls	r3, r3, #3
 21062 0174 9B1A     		subs	r3, r3, r2
 21063 0176 1B01     		lsls	r3, r3, #4
 21064 0178 0B44     		add	r3, r3, r1
 21065 017a E033     		adds	r3, r3, #224
 21066 017c 0122     		movs	r2, #1
 21067 017e 1A70     		strb	r2, [r3]
2847:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 21068              		.loc 1 2847 0
 21069 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21070 0182 5749     		ldr	r1, .L835
 21071 0184 1346     		mov	r3, r2
 21072 0186 DB00     		lsls	r3, r3, #3
 21073 0188 9B1A     		subs	r3, r3, r2
 21074 018a 1B01     		lsls	r3, r3, #4
 21075 018c 0B44     		add	r3, r3, r1
 21076 018e E133     		adds	r3, r3, #225
 21077 0190 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 461


 21078 0192 1A70     		strb	r2, [r3]
2848:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 21079              		.loc 1 2848 0
 21080 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21081 0196 5249     		ldr	r1, .L835
 21082 0198 1346     		mov	r3, r2
 21083 019a DB00     		lsls	r3, r3, #3
 21084 019c 9B1A     		subs	r3, r3, r2
 21085 019e 1B01     		lsls	r3, r3, #4
 21086 01a0 0B44     		add	r3, r3, r1
 21087 01a2 E233     		adds	r3, r3, #226
 21088 01a4 0022     		movs	r2, #0
 21089 01a6 1A70     		strb	r2, [r3]
2849:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 21090              		.loc 1 2849 0
 21091 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21092 01aa 4D49     		ldr	r1, .L835
 21093 01ac 1346     		mov	r3, r2
 21094 01ae DB00     		lsls	r3, r3, #3
 21095 01b0 9B1A     		subs	r3, r3, r2
 21096 01b2 1B01     		lsls	r3, r3, #4
 21097 01b4 0B44     		add	r3, r3, r1
 21098 01b6 03F58773 		add	r3, r3, #270
 21099 01ba 0022     		movs	r2, #0
 21100 01bc 1A70     		strb	r2, [r3]
2850:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 21101              		.loc 1 2850 0
 21102 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21103 01c0 4749     		ldr	r1, .L835
 21104 01c2 1346     		mov	r3, r2
 21105 01c4 DB00     		lsls	r3, r3, #3
 21106 01c6 9B1A     		subs	r3, r3, r2
 21107 01c8 1B01     		lsls	r3, r3, #4
 21108 01ca 0B44     		add	r3, r3, r1
 21109 01cc 03F20F13 		addw	r3, r3, #271
 21110 01d0 0022     		movs	r2, #0
 21111 01d2 1A70     		strb	r2, [r3]
2851:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 21112              		.loc 1 2851 0
 21113 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21114 01d6 4249     		ldr	r1, .L835
 21115 01d8 1346     		mov	r3, r2
 21116 01da DB00     		lsls	r3, r3, #3
 21117 01dc 9B1A     		subs	r3, r3, r2
 21118 01de 1B01     		lsls	r3, r3, #4
 21119 01e0 0B44     		add	r3, r3, r1
 21120 01e2 F033     		adds	r3, r3, #240
 21121 01e4 0022     		movs	r2, #0
 21122 01e6 1A60     		str	r2, [r3]
2852:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 21123              		.loc 1 2852 0
 21124 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21125 01ea 3D49     		ldr	r1, .L835
 21126 01ec 1346     		mov	r3, r2
 21127 01ee DB00     		lsls	r3, r3, #3
 21128 01f0 9B1A     		subs	r3, r3, r2
 21129 01f2 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 462


 21130 01f4 0B44     		add	r3, r3, r1
 21131 01f6 EC33     		adds	r3, r3, #236
 21132 01f8 0022     		movs	r2, #0
 21133 01fa 1A60     		str	r2, [r3]
2853:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21134              		.loc 1 2853 0
 21135 01fc 0023     		movs	r3, #0
 21136 01fe BB71     		strb	r3, [r7, #6]
 21137 0200 10E0     		b	.L814
 21138              	.L815:
2854:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 21139              		.loc 1 2854 0 discriminator 3
 21140 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21141 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21142 0206 3648     		ldr	r0, .L835
 21143 0208 1346     		mov	r3, r2
 21144 020a DB00     		lsls	r3, r3, #3
 21145 020c 9B1A     		subs	r3, r3, r2
 21146 020e 9B00     		lsls	r3, r3, #2
 21147 0210 0B44     		add	r3, r3, r1
 21148 0212 3C33     		adds	r3, r3, #60
 21149 0214 9B00     		lsls	r3, r3, #2
 21150 0216 0344     		add	r3, r3, r0
 21151 0218 4FF00002 		mov	r2, #0
 21152 021c 5A60     		str	r2, [r3, #4]	@ float
2853:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21153              		.loc 1 2853 0 discriminator 3
 21154 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21155 0220 0133     		adds	r3, r3, #1
 21156 0222 BB71     		strb	r3, [r7, #6]
 21157              	.L814:
2853:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21158              		.loc 1 2853 0 is_stmt 0 discriminator 1
 21159 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21160 0226 052B     		cmp	r3, #5
 21161 0228 EBD9     		bls	.L815
2855:..\src/command_processing.c ****         }
2856:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 21162              		.loc 1 2856 0 is_stmt 1 discriminator 2
 21163 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21164 022c 2C49     		ldr	r1, .L835
 21165 022e 1346     		mov	r3, r2
 21166 0230 DB00     		lsls	r3, r3, #3
 21167 0232 9B1A     		subs	r3, r3, r2
 21168 0234 1B01     		lsls	r3, r3, #4
 21169 0236 0B44     		add	r3, r3, r1
 21170 0238 03F58673 		add	r3, r3, #268
 21171 023c 40F2DC52 		movw	r2, #1500
 21172 0240 1A80     		strh	r2, [r3]	@ movhi
2857:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 21173              		.loc 1 2857 0 discriminator 2
 21174 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21175 0244 2649     		ldr	r1, .L835
 21176 0246 1346     		mov	r3, r2
 21177 0248 DB00     		lsls	r3, r3, #3
 21178 024a 9B1A     		subs	r3, r3, r2
 21179 024c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 463


 21180 024e 0B44     		add	r3, r3, r1
 21181 0250 03F58873 		add	r3, r3, #272
 21182 0254 FA79     		ldrb	r2, [r7, #7]
 21183 0256 1A70     		strb	r2, [r3]
2858:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 21184              		.loc 1 2858 0 discriminator 2
 21185 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21186 025a 2149     		ldr	r1, .L835
 21187 025c 1346     		mov	r3, r2
 21188 025e DB00     		lsls	r3, r3, #3
 21189 0260 9B1A     		subs	r3, r3, r2
 21190 0262 1B01     		lsls	r3, r3, #4
 21191 0264 0B44     		add	r3, r3, r1
 21192 0266 E333     		adds	r3, r3, #227
 21193 0268 0122     		movs	r2, #1
 21194 026a 1A70     		strb	r2, [r3]
2859:..\src/command_processing.c ****         
2860:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21195              		.loc 1 2860 0 discriminator 2
 21196 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21197 026e 1C49     		ldr	r1, .L835
 21198 0270 1346     		mov	r3, r2
 21199 0272 DB00     		lsls	r3, r3, #3
 21200 0274 9B1A     		subs	r3, r3, r2
 21201 0276 1B01     		lsls	r3, r3, #4
 21202 0278 0B44     		add	r3, r3, r1
 21203 027a 03F21113 		addw	r3, r3, #273
 21204 027e 0122     		movs	r2, #1
 21205 0280 1A70     		strb	r2, [r3]
2861:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 21206              		.loc 1 2861 0 discriminator 2
 21207 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21208 0284 1649     		ldr	r1, .L835
 21209 0286 1346     		mov	r3, r2
 21210 0288 DB00     		lsls	r3, r3, #3
 21211 028a 9B1A     		subs	r3, r3, r2
 21212 028c 1B01     		lsls	r3, r3, #4
 21213 028e 0B44     		add	r3, r3, r1
 21214 0290 03F58973 		add	r3, r3, #274
 21215 0294 0022     		movs	r2, #0
 21216 0296 1A70     		strb	r2, [r3]
2831:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21217              		.loc 1 2831 0 discriminator 2
 21218 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21219 029a 0133     		adds	r3, r3, #1
 21220 029c FB71     		strb	r3, [r7, #7]
 21221              	.L813:
2831:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21222              		.loc 1 2831 0 is_stmt 0 discriminator 1
 21223 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21224 02a0 012B     		cmp	r3, #1
 21225 02a2 7FF6E6AE 		bls	.L816
2862:..\src/command_processing.c ****     }
2863:..\src/command_processing.c ****     
2864:..\src/command_processing.c ****     // ENC STRUCT
2865:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 21226              		.loc 1 2865 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 464


 21227 02a6 0023     		movs	r3, #0
 21228 02a8 FB71     		strb	r3, [r7, #7]
 21229 02aa 98E0     		b	.L817
 21230              	.L824:
2866:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21231              		.loc 1 2866 0
 21232 02ac 0023     		movs	r3, #0
 21233 02ae BB71     		strb	r3, [r7, #6]
 21234 02b0 0FE0     		b	.L818
 21235              	.L819:
2867:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 21236              		.loc 1 2867 0 discriminator 3
 21237 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21238 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21239 02b6 0A48     		ldr	r0, .L835
 21240 02b8 1346     		mov	r3, r2
 21241 02ba 5B00     		lsls	r3, r3, #1
 21242 02bc 1344     		add	r3, r3, r2
 21243 02be 1B01     		lsls	r3, r3, #4
 21244 02c0 0344     		add	r3, r3, r0
 21245 02c2 0B44     		add	r3, r3, r1
 21246 02c4 03F5C873 		add	r3, r3, #400
 21247 02c8 0022     		movs	r2, #0
 21248 02ca 1A70     		strb	r2, [r3]
2866:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21249              		.loc 1 2866 0 discriminator 3
 21250 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21251 02ce 0133     		adds	r3, r3, #1
 21252 02d0 BB71     		strb	r3, [r7, #6]
 21253              	.L818:
2866:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21254              		.loc 1 2866 0 is_stmt 0 discriminator 1
 21255 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21256 02d4 042B     		cmp	r3, #4
 21257 02d6 ECD9     		bls	.L819
2868:..\src/command_processing.c ****         }
2869:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21258              		.loc 1 2869 0 is_stmt 1
 21259 02d8 0023     		movs	r3, #0
 21260 02da BB71     		strb	r3, [r7, #6]
 21261 02dc 2CE0     		b	.L820
 21262              	.L836:
 21263 02de 00BF     		.align	2
 21264              	.L835:
 21265 02e0 00000000 		.word	g_mem
 21266              	.L821:
2870:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21267              		.loc 1 2870 0 discriminator 3
 21268 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21269 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21270 02e8 B648     		ldr	r0, .L837
 21271 02ea 1346     		mov	r3, r2
 21272 02ec 5B00     		lsls	r3, r3, #1
 21273 02ee 1344     		add	r3, r3, r2
 21274 02f0 1B01     		lsls	r3, r3, #4
 21275 02f2 0344     		add	r3, r3, r0
 21276 02f4 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 465


 21277 02f6 03F29513 		addw	r3, r3, #405
 21278 02fa 0322     		movs	r2, #3
 21279 02fc 1A70     		strb	r2, [r3]
2871:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 21280              		.loc 1 2871 0 discriminator 3
 21281 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21282 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21283 0302 B048     		ldr	r0, .L837
 21284 0304 1346     		mov	r3, r2
 21285 0306 5B00     		lsls	r3, r3, #1
 21286 0308 1344     		add	r3, r3, r2
 21287 030a 9B00     		lsls	r3, r3, #2
 21288 030c 0B44     		add	r3, r3, r1
 21289 030e 6833     		adds	r3, r3, #104
 21290 0310 9B00     		lsls	r3, r3, #2
 21291 0312 0344     		add	r3, r3, r0
 21292 0314 4FF07E52 		mov	r2, #1065353216
 21293 0318 5A60     		str	r2, [r3, #4]	@ float
2872:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 21294              		.loc 1 2872 0 discriminator 3
 21295 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21296 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21297 031e A948     		ldr	r0, .L837
 21298 0320 1346     		mov	r3, r2
 21299 0322 5B00     		lsls	r3, r3, #1
 21300 0324 1344     		add	r3, r3, r2
 21301 0326 9B00     		lsls	r3, r3, #2
 21302 0328 0B44     		add	r3, r3, r1
 21303 032a 6633     		adds	r3, r3, #102
 21304 032c 0022     		movs	r2, #0
 21305 032e 40F82320 		str	r2, [r0, r3, lsl #2]
2869:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21306              		.loc 1 2869 0 discriminator 3
 21307 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21308 0334 0133     		adds	r3, r3, #1
 21309 0336 BB71     		strb	r3, [r7, #6]
 21310              	.L820:
2869:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21311              		.loc 1 2869 0 is_stmt 0 discriminator 1
 21312 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21313 033a 022B     		cmp	r3, #2
 21314 033c D2D9     		bls	.L821
2873:..\src/command_processing.c ****         }
2874:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 21315              		.loc 1 2874 0 is_stmt 1
 21316 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21317 0340 A049     		ldr	r1, .L837
 21318 0342 1346     		mov	r3, r2
 21319 0344 5B00     		lsls	r3, r3, #1
 21320 0346 1344     		add	r3, r3, r2
 21321 0348 1B01     		lsls	r3, r3, #4
 21322 034a 0B44     		add	r3, r3, r1
 21323 034c 03F5D873 		add	r3, r3, #432
 21324 0350 0022     		movs	r2, #0
 21325 0352 1A70     		strb	r2, [r3]
2875:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 21326              		.loc 1 2875 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 466


 21327 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21328 0356 9B49     		ldr	r1, .L837
 21329 0358 1346     		mov	r3, r2
 21330 035a 5B00     		lsls	r3, r3, #1
 21331 035c 1344     		add	r3, r3, r2
 21332 035e 1B01     		lsls	r3, r3, #4
 21333 0360 0B44     		add	r3, r3, r1
 21334 0362 03F5DA73 		add	r3, r3, #436
 21335 0366 1622     		movs	r2, #22
 21336 0368 1A70     		strb	r2, [r3]
2876:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21337              		.loc 1 2876 0
 21338 036a 0023     		movs	r3, #0
 21339 036c BB71     		strb	r3, [r7, #6]
 21340 036e 0FE0     		b	.L822
 21341              	.L823:
2877:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 21342              		.loc 1 2877 0 discriminator 3
 21343 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21344 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21345 0374 9348     		ldr	r0, .L837
 21346 0376 1346     		mov	r3, r2
 21347 0378 5B00     		lsls	r3, r3, #1
 21348 037a 1344     		add	r3, r3, r2
 21349 037c 1B01     		lsls	r3, r3, #4
 21350 037e 0344     		add	r3, r3, r0
 21351 0380 0B44     		add	r3, r3, r1
 21352 0382 03F2B113 		addw	r3, r3, #433
 21353 0386 BA79     		ldrb	r2, [r7, #6]
 21354 0388 1A70     		strb	r2, [r3]
2876:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21355              		.loc 1 2876 0 discriminator 3
 21356 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21357 038c 0133     		adds	r3, r3, #1
 21358 038e BB71     		strb	r3, [r7, #6]
 21359              	.L822:
2876:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21360              		.loc 1 2876 0 is_stmt 0 discriminator 1
 21361 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21362 0392 022B     		cmp	r3, #2
 21363 0394 ECD9     		bls	.L823
2878:..\src/command_processing.c ****         }
2879:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 21364              		.loc 1 2879 0 is_stmt 1 discriminator 2
 21365 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21366 0398 8A49     		ldr	r1, .L837
 21367 039a 1346     		mov	r3, r2
 21368 039c 5B00     		lsls	r3, r3, #1
 21369 039e 1344     		add	r3, r3, r2
 21370 03a0 1B01     		lsls	r3, r3, #4
 21371 03a2 0B44     		add	r3, r3, r1
 21372 03a4 03F2B513 		addw	r3, r3, #437
 21373 03a8 0F22     		movs	r2, #15
 21374 03aa 1A70     		strb	r2, [r3]
2880:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 21375              		.loc 1 2880 0 discriminator 2
 21376 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 467


 21377 03ae 8549     		ldr	r1, .L837
 21378 03b0 1346     		mov	r3, r2
 21379 03b2 5B00     		lsls	r3, r3, #1
 21380 03b4 1344     		add	r3, r3, r2
 21381 03b6 1B01     		lsls	r3, r3, #4
 21382 03b8 0B44     		add	r3, r3, r1
 21383 03ba 03F5DB73 		add	r3, r3, #438
 21384 03be 0E22     		movs	r2, #14
 21385 03c0 1A70     		strb	r2, [r3]
2881:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 21386              		.loc 1 2881 0 discriminator 2
 21387 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21388 03c4 7F49     		ldr	r1, .L837
 21389 03c6 1346     		mov	r3, r2
 21390 03c8 5B00     		lsls	r3, r3, #1
 21391 03ca 1344     		add	r3, r3, r2
 21392 03cc 1B01     		lsls	r3, r3, #4
 21393 03ce 0B44     		add	r3, r3, r1
 21394 03d0 03F2B713 		addw	r3, r3, #439
 21395 03d4 0122     		movs	r2, #1
 21396 03d6 1A70     		strb	r2, [r3]
2865:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21397              		.loc 1 2865 0 discriminator 2
 21398 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21399 03da 0133     		adds	r3, r3, #1
 21400 03dc FB71     		strb	r3, [r7, #7]
 21401              	.L817:
2865:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21402              		.loc 1 2865 0 is_stmt 0 discriminator 1
 21403 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21404 03e0 012B     		cmp	r3, #1
 21405 03e2 7FF663AF 		bls	.L824
2882:..\src/command_processing.c ****     }
2883:..\src/command_processing.c ****     
2884:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21406              		.loc 1 2884 0 is_stmt 1
 21407 03e6 0023     		movs	r3, #0
 21408 03e8 FB71     		strb	r3, [r7, #7]
 21409 03ea 2EE0     		b	.L825
 21410              	.L826:
2885:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21411              		.loc 1 2885 0 discriminator 3
 21412 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21413 03ee 7549     		ldr	r1, .L837
 21414 03f0 1346     		mov	r3, r2
 21415 03f2 DB00     		lsls	r3, r3, #3
 21416 03f4 9B1A     		subs	r3, r3, r2
 21417 03f6 1B01     		lsls	r3, r3, #4
 21418 03f8 0B44     		add	r3, r3, r1
 21419 03fa E433     		adds	r3, r3, #228
 21420 03fc 0022     		movs	r2, #0
 21421 03fe 1A60     		str	r2, [r3]
2886:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 21422              		.loc 1 2886 0 discriminator 3
 21423 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21424 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 21425 0404 6F48     		ldr	r0, .L837
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 468


 21426 0406 0B46     		mov	r3, r1
 21427 0408 DB00     		lsls	r3, r3, #3
 21428 040a 5B1A     		subs	r3, r3, r1
 21429 040c 1B01     		lsls	r3, r3, #4
 21430 040e 0344     		add	r3, r3, r0
 21431 0410 03F58873 		add	r3, r3, #272
 21432 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21433 0416 1846     		mov	r0, r3
 21434 0418 6A49     		ldr	r1, .L837
 21435 041a 0346     		mov	r3, r0
 21436 041c 5B00     		lsls	r3, r3, #1
 21437 041e 0344     		add	r3, r3, r0
 21438 0420 1B01     		lsls	r3, r3, #4
 21439 0422 0B44     		add	r3, r3, r1
 21440 0424 03F29513 		addw	r3, r3, #405
 21441 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21442 042a 1946     		mov	r1, r3
 21443 042c 44F63823 		movw	r3, #19000
 21444 0430 03FA01F1 		lsl	r1, r3, r1
 21445 0434 6348     		ldr	r0, .L837
 21446 0436 1346     		mov	r3, r2
 21447 0438 DB00     		lsls	r3, r3, #3
 21448 043a 9B1A     		subs	r3, r3, r2
 21449 043c 1B01     		lsls	r3, r3, #4
 21450 043e 0344     		add	r3, r3, r0
 21451 0440 E833     		adds	r3, r3, #232
 21452 0442 1960     		str	r1, [r3]
2884:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21453              		.loc 1 2884 0 discriminator 3
 21454 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21455 0446 0133     		adds	r3, r3, #1
 21456 0448 FB71     		strb	r3, [r7, #7]
 21457              	.L825:
2884:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21458              		.loc 1 2884 0 is_stmt 0 discriminator 1
 21459 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21460 044c 012B     		cmp	r3, #1
 21461 044e CDD9     		bls	.L826
2887:..\src/command_processing.c ****     }
2888:..\src/command_processing.c ****     
2889:..\src/command_processing.c ****     // EMG STRUCT     
2890:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 21462              		.loc 1 2890 0 is_stmt 1
 21463 0450 5C4B     		ldr	r3, .L837
 21464 0452 C822     		movs	r2, #200
 21465 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2891:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 21466              		.loc 1 2891 0
 21467 0458 5A4B     		ldr	r3, .L837
 21468 045a C822     		movs	r2, #200
 21469 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2892:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 21470              		.loc 1 2892 0
 21471 0460 584B     		ldr	r3, .L837
 21472 0462 4FF48062 		mov	r2, #1024
 21473 0466 C3F8F421 		str	r2, [r3, #500]
2893:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 469


 21474              		.loc 1 2893 0
 21475 046a 564B     		ldr	r3, .L837
 21476 046c 4FF48062 		mov	r2, #1024
 21477 0470 C3F8F821 		str	r2, [r3, #504]
2894:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;   
 21478              		.loc 1 2894 0
 21479 0474 534B     		ldr	r3, .L837
 21480 0476 6422     		movs	r2, #100
 21481 0478 83F8FC21 		strb	r2, [r3, #508]
2895:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 21482              		.loc 1 2895 0
 21483 047c 514B     		ldr	r3, .L837
 21484 047e 0022     		movs	r2, #0
 21485 0480 83F8FD21 		strb	r2, [r3, #509]
2896:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 21486              		.loc 1 2896 0
 21487 0484 4F4B     		ldr	r3, .L837
 21488 0486 0022     		movs	r2, #0
 21489 0488 83F8FE21 		strb	r2, [r3, #510]
2897:..\src/command_processing.c **** 
2898:..\src/command_processing.c ****     // IMU STRUCT
2899:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 21490              		.loc 1 2899 0
 21491 048c 4D4B     		ldr	r3, .L837
 21492 048e 0022     		movs	r2, #0
 21493 0490 83F80022 		strb	r2, [r3, #512]
2900:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 21494              		.loc 1 2900 0
 21495 0494 4B4B     		ldr	r3, .L837
 21496 0496 0022     		movs	r2, #0
 21497 0498 83F80122 		strb	r2, [r3, #513]
2901:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 21498              		.loc 1 2901 0
 21499 049c 0023     		movs	r3, #0
 21500 049e FB71     		strb	r3, [r7, #7]
 21501 04a0 34E0     		b	.L827
 21502              	.L828:
2902:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21503              		.loc 1 2902 0 discriminator 3
 21504 04a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21505 04a4 4749     		ldr	r1, .L837
 21506 04a6 1346     		mov	r3, r2
 21507 04a8 9B00     		lsls	r3, r3, #2
 21508 04aa 1344     		add	r3, r3, r2
 21509 04ac 0B44     		add	r3, r3, r1
 21510 04ae 03F20223 		addw	r3, r3, #514
 21511 04b2 0122     		movs	r2, #1
 21512 04b4 1A70     		strb	r2, [r3]
2903:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 21513              		.loc 1 2903 0 discriminator 3
 21514 04b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21515 04b8 4249     		ldr	r1, .L837
 21516 04ba 1346     		mov	r3, r2
 21517 04bc 9B00     		lsls	r3, r3, #2
 21518 04be 1344     		add	r3, r3, r2
 21519 04c0 0B44     		add	r3, r3, r1
 21520 04c2 03F20323 		addw	r3, r3, #515
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 470


 21521 04c6 0122     		movs	r2, #1
 21522 04c8 1A70     		strb	r2, [r3]
2904:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 21523              		.loc 1 2904 0 discriminator 3
 21524 04ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21525 04cc 3D49     		ldr	r1, .L837
 21526 04ce 1346     		mov	r3, r2
 21527 04d0 9B00     		lsls	r3, r3, #2
 21528 04d2 1344     		add	r3, r3, r2
 21529 04d4 0B44     		add	r3, r3, r1
 21530 04d6 03F50173 		add	r3, r3, #516
 21531 04da 0022     		movs	r2, #0
 21532 04dc 1A70     		strb	r2, [r3]
2905:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 21533              		.loc 1 2905 0 discriminator 3
 21534 04de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21535 04e0 3849     		ldr	r1, .L837
 21536 04e2 1346     		mov	r3, r2
 21537 04e4 9B00     		lsls	r3, r3, #2
 21538 04e6 1344     		add	r3, r3, r2
 21539 04e8 0B44     		add	r3, r3, r1
 21540 04ea 03F20523 		addw	r3, r3, #517
 21541 04ee 0022     		movs	r2, #0
 21542 04f0 1A70     		strb	r2, [r3]
2906:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 21543              		.loc 1 2906 0 discriminator 3
 21544 04f2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21545 04f4 3349     		ldr	r1, .L837
 21546 04f6 1346     		mov	r3, r2
 21547 04f8 9B00     		lsls	r3, r3, #2
 21548 04fa 1344     		add	r3, r3, r2
 21549 04fc 0B44     		add	r3, r3, r1
 21550 04fe 03F20623 		addw	r3, r3, #518
 21551 0502 0022     		movs	r2, #0
 21552 0504 1A70     		strb	r2, [r3]
2901:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21553              		.loc 1 2901 0 discriminator 3
 21554 0506 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21555 0508 0133     		adds	r3, r3, #1
 21556 050a FB71     		strb	r3, [r7, #7]
 21557              	.L827:
2901:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21558              		.loc 1 2901 0 is_stmt 0 discriminator 1
 21559 050c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21560 050e 042B     		cmp	r3, #4
 21561 0510 C7D9     		bls	.L828
2907:..\src/command_processing.c ****     }
2908:..\src/command_processing.c ****      
2909:..\src/command_processing.c ****     // EXP STRUCT
2910:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 21562              		.loc 1 2910 0 is_stmt 1
 21563 0512 2C4B     		ldr	r3, .L837
 21564 0514 0022     		movs	r2, #0
 21565 0516 83F82622 		strb	r2, [r3, #550]
2911:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 21566              		.loc 1 2911 0
 21567 051a 2A4B     		ldr	r3, .L837
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 471


 21568 051c 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21569 0520 1233     		adds	r3, r3, #18
 21570 0522 5B01     		lsls	r3, r3, #5
 21571 0524 274A     		ldr	r2, .L837
 21572 0526 1344     		add	r3, r3, r2
 21573 0528 274A     		ldr	r2, .L837+4
 21574 052a 1068     		ldr	r0, [r2]	@ unaligned
 21575 052c 1860     		str	r0, [r3]	@ unaligned
 21576 052e 9188     		ldrh	r1, [r2, #4]	@ unaligned
 21577 0530 9279     		ldrb	r2, [r2, #6]
 21578 0532 9980     		strh	r1, [r3, #4]	@ unaligned
 21579 0534 9A71     		strb	r2, [r3, #6]
2912:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 21580              		.loc 1 2912 0
 21581 0536 234B     		ldr	r3, .L837
 21582 0538 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 21583 053c 012B     		cmp	r3, #1
 21584 053e 13D1     		bne	.L829
2913:..\src/command_processing.c ****         // Set date of maintenance from RTC
2914:..\src/command_processing.c ****         store_RTC_current_time();
 21585              		.loc 1 2914 0
 21586 0540 FFF7FEFF 		bl	store_RTC_current_time
2915:..\src/command_processing.c ****         
2916:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 21587              		.loc 1 2916 0
 21588 0544 1F4B     		ldr	r3, .L837
 21589 0546 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 21590 054a 1E4B     		ldr	r3, .L837
 21591 054c 83F8A420 		strb	r2, [r3, #164]
2917:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 21592              		.loc 1 2917 0
 21593 0550 1C4B     		ldr	r3, .L837
 21594 0552 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 21595 0556 1B4B     		ldr	r3, .L837
 21596 0558 83F8A520 		strb	r2, [r3, #165]
2918:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 21597              		.loc 1 2918 0
 21598 055c 194B     		ldr	r3, .L837
 21599 055e 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 21600 0562 184B     		ldr	r3, .L837
 21601 0564 83F8A620 		strb	r2, [r3, #166]
 21602              	.L829:
2919:..\src/command_processing.c ****     }
2920:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 21603              		.loc 1 2920 0
 21604 0568 164B     		ldr	r3, .L837
 21605 056a 0022     		movs	r2, #0
 21606 056c 83F82722 		strb	r2, [r3, #551]
2921:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21607              		.loc 1 2921 0
 21608 0570 0023     		movs	r3, #0
 21609 0572 FB71     		strb	r3, [r7, #7]
 21610 0574 08E0     		b	.L830
 21611              	.L831:
2922:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 21612              		.loc 1 2922 0 discriminator 3
 21613 0576 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 472


 21614 0578 124A     		ldr	r2, .L837
 21615 057a 1344     		add	r3, r3, r2
 21616 057c 0022     		movs	r2, #0
 21617 057e 83F82822 		strb	r2, [r3, #552]
2921:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21618              		.loc 1 2921 0 discriminator 3
 21619 0582 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21620 0584 0133     		adds	r3, r3, #1
 21621 0586 FB71     		strb	r3, [r7, #7]
 21622              	.L830:
2921:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21623              		.loc 1 2921 0 is_stmt 0 discriminator 1
 21624 0588 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21625 058a 0B2B     		cmp	r3, #11
 21626 058c F3D9     		bls	.L831
2923:..\src/command_processing.c ****     }
2924:..\src/command_processing.c **** 
2925:..\src/command_processing.c **** #ifdef SOFTHAND_FW
2926:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
2927:..\src/command_processing.c ****     memInit_SoftHandPro();
2928:..\src/command_processing.c **** #endif    
2929:..\src/command_processing.c **** 
2930:..\src/command_processing.c ****     // Default generic user_id
2931:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 21627              		.loc 1 2931 0 is_stmt 1
 21628 058e 0D4B     		ldr	r3, .L837
 21629 0590 0022     		movs	r2, #0
 21630 0592 83F8AB20 		strb	r2, [r3, #171]
2932:..\src/command_processing.c **** 
2933:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2934:..\src/command_processing.c ****     g_mem.flag = TRUE;
 21631              		.loc 1 2934 0
 21632 0596 0B4B     		ldr	r3, .L837
 21633 0598 0122     		movs	r2, #1
 21634 059a 1A70     		strb	r2, [r3]
2935:..\src/command_processing.c ****     
2936:..\src/command_processing.c ****     //write that configuration to EEPROM
2937:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 21635              		.loc 1 2937 0
 21636 059c 0020     		movs	r0, #0
 21637 059e FFF7FEFF 		bl	memStore
 21638 05a2 0346     		mov	r3, r0
 21639 05a4 002B     		cmp	r3, #0
 21640 05a6 07D0     		beq	.L832
 21641              		.loc 1 2937 0 is_stmt 0 discriminator 1
 21642 05a8 3220     		movs	r0, #50
 21643 05aa FFF7FEFF 		bl	memStore
 21644 05ae 0346     		mov	r3, r0
 21645 05b0 002B     		cmp	r3, #0
 21646 05b2 01D0     		beq	.L832
 21647              		.loc 1 2937 0 discriminator 3
 21648 05b4 0123     		movs	r3, #1
 21649 05b6 00E0     		b	.L833
 21650              	.L832:
 21651              		.loc 1 2937 0 discriminator 4
 21652 05b8 0023     		movs	r3, #0
 21653              	.L833:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 473


 21654              		.loc 1 2937 0 discriminator 6
 21655 05ba DBB2     		uxtb	r3, r3
2938:..\src/command_processing.c **** }
 21656              		.loc 1 2938 0 is_stmt 1 discriminator 6
 21657 05bc 1846     		mov	r0, r3
 21658 05be 0837     		adds	r7, r7, #8
 21659              		.cfi_def_cfa_offset 8
 21660 05c0 BD46     		mov	sp, r7
 21661              		.cfi_def_cfa_register 13
 21662              		@ sp needed
 21663 05c2 80BD     		pop	{r7, pc}
 21664              	.L838:
 21665              		.align	2
 21666              	.L837:
 21667 05c4 00000000 		.word	g_mem
 21668 05c8 A81A0000 		.word	.LC269
 21669              		.cfi_endproc
 21670              	.LFE86:
 21671              		.size	memInit, .-memInit
 21672              		.section	.rodata
 21673 1aaf 00       		.align	2
 21674              	.LC270:
 21675 1ab0 55535230 		.ascii	"USR001\000"
 21675      303100
 21676              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 21677              		.align	2
 21678              		.global	memInit_SoftHandPro
 21679              		.thumb
 21680              		.thumb_func
 21681              		.type	memInit_SoftHandPro, %function
 21682              	memInit_SoftHandPro:
 21683              	.LFB87:
2939:..\src/command_processing.c **** 
2940:..\src/command_processing.c **** //==============================================================================
2941:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
2942:..\src/command_processing.c **** //==============================================================================
2943:..\src/command_processing.c **** void memInit_SoftHandPro(void)
2944:..\src/command_processing.c **** {
 21684              		.loc 1 2944 0
 21685              		.cfi_startproc
 21686              		@ args = 0, pretend = 0, frame = 8
 21687              		@ frame_needed = 1, uses_anonymous_args = 0
 21688              		@ link register save eliminated.
 21689 0000 80B4     		push	{r7}
 21690              		.cfi_def_cfa_offset 4
 21691              		.cfi_offset 7, -4
 21692 0002 83B0     		sub	sp, sp, #12
 21693              		.cfi_def_cfa_offset 16
 21694 0004 00AF     		add	r7, sp, #0
 21695              		.cfi_def_cfa_register 7
2945:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 21696              		.loc 1 2945 0
 21697 0006 0023     		movs	r3, #0
 21698 0008 FB70     		strb	r3, [r7, #3]
2946:..\src/command_processing.c ****     
2947:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
2948:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 474


 21699              		.loc 1 2948 0
 21700 000a 874B     		ldr	r3, .L842
 21701 000c 0122     		movs	r2, #1
 21702 000e 83F8A720 		strb	r2, [r3, #167]
2949:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 21703              		.loc 1 2949 0
 21704 0012 854B     		ldr	r3, .L842
 21705 0014 0022     		movs	r2, #0
 21706 0016 83F8AC20 		strb	r2, [r3, #172]
2950:..\src/command_processing.c ****     
2951:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 21707              		.loc 1 2951 0
 21708 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21709 001c 8249     		ldr	r1, .L842
 21710 001e 1346     		mov	r3, r2
 21711 0020 DB00     		lsls	r3, r3, #3
 21712 0022 9B1A     		subs	r3, r3, r2
 21713 0024 1B01     		lsls	r3, r3, #4
 21714 0026 0B44     		add	r3, r3, r1
 21715 0028 E033     		adds	r3, r3, #224
 21716 002a 0122     		movs	r2, #1
 21717 002c 1A70     		strb	r2, [r3]
2952:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 21718              		.loc 1 2952 0
 21719 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21720 0030 7D49     		ldr	r1, .L842
 21721 0032 1346     		mov	r3, r2
 21722 0034 DB00     		lsls	r3, r3, #3
 21723 0036 9B1A     		subs	r3, r3, r2
 21724 0038 1B01     		lsls	r3, r3, #4
 21725 003a 0B44     		add	r3, r3, r1
 21726 003c 03F58773 		add	r3, r3, #270
 21727 0040 0022     		movs	r2, #0
 21728 0042 1A70     		strb	r2, [r3]
2953:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 21729              		.loc 1 2953 0
 21730 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21731 0046 7849     		ldr	r1, .L842
 21732 0048 1346     		mov	r3, r2
 21733 004a DB00     		lsls	r3, r3, #3
 21734 004c 9B1A     		subs	r3, r3, r2
 21735 004e 1B01     		lsls	r3, r3, #4
 21736 0050 0B44     		add	r3, r3, r1
 21737 0052 03F20F13 		addw	r3, r3, #271
 21738 0056 0022     		movs	r2, #0
 21739 0058 1A70     		strb	r2, [r3]
2954:..\src/command_processing.c ****     
2955:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
2956:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 21740              		.loc 1 2956 0
 21741 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21742 005c 724B     		ldr	r3, .L842
 21743 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 21744 0062 7149     		ldr	r1, .L842
 21745 0064 1346     		mov	r3, r2
 21746 0066 DB00     		lsls	r3, r3, #3
 21747 0068 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 475


 21748 006a 1B01     		lsls	r3, r3, #4
 21749 006c 0B44     		add	r3, r3, r1
 21750 006e 03F58873 		add	r3, r3, #272
 21751 0072 0246     		mov	r2, r0
 21752 0074 1A70     		strb	r2, [r3]
2957:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21753              		.loc 1 2957 0
 21754 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21755 0078 6B49     		ldr	r1, .L842
 21756 007a 1346     		mov	r3, r2
 21757 007c DB00     		lsls	r3, r3, #3
 21758 007e 9B1A     		subs	r3, r3, r2
 21759 0080 1B01     		lsls	r3, r3, #4
 21760 0082 0B44     		add	r3, r3, r1
 21761 0084 03F21113 		addw	r3, r3, #273
 21762 0088 0122     		movs	r2, #1
 21763 008a 1A70     		strb	r2, [r3]
2958:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 21764              		.loc 1 2958 0
 21765 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21766 008e 6649     		ldr	r1, .L842
 21767 0090 1346     		mov	r3, r2
 21768 0092 DB00     		lsls	r3, r3, #3
 21769 0094 9B1A     		subs	r3, r3, r2
 21770 0096 1B01     		lsls	r3, r3, #4
 21771 0098 0B44     		add	r3, r3, r1
 21772 009a 03F58973 		add	r3, r3, #274
 21773 009e 0122     		movs	r2, #1
 21774 00a0 1A70     		strb	r2, [r3]
2959:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 21775              		.loc 1 2959 0
 21776 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21777 00a4 6049     		ldr	r1, .L842
 21778 00a6 1346     		mov	r3, r2
 21779 00a8 DB00     		lsls	r3, r3, #3
 21780 00aa 9B1A     		subs	r3, r3, r2
 21781 00ac 1B01     		lsls	r3, r3, #4
 21782 00ae 0B44     		add	r3, r3, r1
 21783 00b0 E433     		adds	r3, r3, #228
 21784 00b2 0022     		movs	r2, #0
 21785 00b4 1A60     		str	r2, [r3]
2960:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 21786              		.loc 1 2960 0
 21787 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21788 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 21789 00ba 5B48     		ldr	r0, .L842
 21790 00bc 0B46     		mov	r3, r1
 21791 00be DB00     		lsls	r3, r3, #3
 21792 00c0 5B1A     		subs	r3, r3, r1
 21793 00c2 1B01     		lsls	r3, r3, #4
 21794 00c4 0344     		add	r3, r3, r0
 21795 00c6 03F58873 		add	r3, r3, #272
 21796 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21797 00cc 1846     		mov	r0, r3
 21798 00ce 5649     		ldr	r1, .L842
 21799 00d0 0346     		mov	r3, r0
 21800 00d2 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 476


 21801 00d4 0344     		add	r3, r3, r0
 21802 00d6 1B01     		lsls	r3, r3, #4
 21803 00d8 0B44     		add	r3, r3, r1
 21804 00da 03F29513 		addw	r3, r3, #405
 21805 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21806 00e0 1946     		mov	r1, r3
 21807 00e2 4FF47A53 		mov	r3, #16000
 21808 00e6 03FA01F1 		lsl	r1, r3, r1
 21809 00ea 4F48     		ldr	r0, .L842
 21810 00ec 1346     		mov	r3, r2
 21811 00ee DB00     		lsls	r3, r3, #3
 21812 00f0 9B1A     		subs	r3, r3, r2
 21813 00f2 1B01     		lsls	r3, r3, #4
 21814 00f4 0344     		add	r3, r3, r0
 21815 00f6 E833     		adds	r3, r3, #232
 21816 00f8 1960     		str	r1, [r3]
 21817              	.LBB21:
2961:..\src/command_processing.c ****     
2962:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 21818              		.loc 1 2962 0
 21819 00fa 0023     		movs	r3, #0
 21820 00fc 7B60     		str	r3, [r7, #4]
 21821 00fe 2EE0     		b	.L840
 21822              	.L841:
2963:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
2964:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 21823              		.loc 1 2964 0 discriminator 3
 21824 0100 4949     		ldr	r1, .L842
 21825 0102 7A68     		ldr	r2, [r7, #4]
 21826 0104 1346     		mov	r3, r2
 21827 0106 5B00     		lsls	r3, r3, #1
 21828 0108 1344     		add	r3, r3, r2
 21829 010a 1B01     		lsls	r3, r3, #4
 21830 010c 0B44     		add	r3, r3, r1
 21831 010e 03F5D873 		add	r3, r3, #432
 21832 0112 0122     		movs	r2, #1
 21833 0114 1A70     		strb	r2, [r3]
2965:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 21834              		.loc 1 2965 0 discriminator 3
 21835 0116 4449     		ldr	r1, .L842
 21836 0118 7A68     		ldr	r2, [r7, #4]
 21837 011a 1346     		mov	r3, r2
 21838 011c 5B00     		lsls	r3, r3, #1
 21839 011e 1344     		add	r3, r3, r2
 21840 0120 1B01     		lsls	r3, r3, #4
 21841 0122 0B44     		add	r3, r3, r1
 21842 0124 03F2B513 		addw	r3, r3, #437
 21843 0128 2322     		movs	r2, #35
 21844 012a 1A70     		strb	r2, [r3]
2966:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 21845              		.loc 1 2966 0 discriminator 3
 21846 012c 3E49     		ldr	r1, .L842
 21847 012e 7A68     		ldr	r2, [r7, #4]
 21848 0130 1346     		mov	r3, r2
 21849 0132 5B00     		lsls	r3, r3, #1
 21850 0134 1344     		add	r3, r3, r2
 21851 0136 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 477


 21852 0138 0B44     		add	r3, r3, r1
 21853 013a 03F5DB73 		add	r3, r3, #438
 21854 013e 0322     		movs	r2, #3
 21855 0140 1A70     		strb	r2, [r3]
2967:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 21856              		.loc 1 2967 0 discriminator 3
 21857 0142 3949     		ldr	r1, .L842
 21858 0144 7A68     		ldr	r2, [r7, #4]
 21859 0146 1346     		mov	r3, r2
 21860 0148 5B00     		lsls	r3, r3, #1
 21861 014a 1344     		add	r3, r3, r2
 21862 014c 1B01     		lsls	r3, r3, #4
 21863 014e 0B44     		add	r3, r3, r1
 21864 0150 03F2B713 		addw	r3, r3, #439
 21865 0154 FF22     		movs	r2, #255
 21866 0156 1A70     		strb	r2, [r3]
2962:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 21867              		.loc 1 2962 0 discriminator 3
 21868 0158 7B68     		ldr	r3, [r7, #4]
 21869 015a 0133     		adds	r3, r3, #1
 21870 015c 7B60     		str	r3, [r7, #4]
 21871              	.L840:
2962:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 21872              		.loc 1 2962 0 is_stmt 0 discriminator 1
 21873 015e 7B68     		ldr	r3, [r7, #4]
 21874 0160 012B     		cmp	r3, #1
 21875 0162 CDDD     		ble	.L841
 21876              	.LBE21:
2968:..\src/command_processing.c ****     }
2969:..\src/command_processing.c ****     
2970:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;
 21877              		.loc 1 2970 0 is_stmt 1
 21878 0164 304B     		ldr	r3, .L842
 21879 0166 0022     		movs	r2, #0
 21880 0168 83F8FD21 		strb	r2, [r3, #509]
2971:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 21881              		.loc 1 2971 0
 21882 016c 2E4B     		ldr	r3, .L842
 21883 016e 4FF48062 		mov	r2, #1024
 21884 0172 C3F8F421 		str	r2, [r3, #500]
2972:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 21885              		.loc 1 2972 0
 21886 0176 2C4B     		ldr	r3, .L842
 21887 0178 4FF48062 		mov	r2, #1024
 21888 017c C3F8F821 		str	r2, [r3, #504]
2973:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 21889              		.loc 1 2973 0
 21890 0180 294B     		ldr	r3, .L842
 21891 0182 C822     		movs	r2, #200
 21892 0184 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2974:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 21893              		.loc 1 2974 0
 21894 0188 274B     		ldr	r3, .L842
 21895 018a C822     		movs	r2, #200
 21896 018c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2975:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;
 21897              		.loc 1 2975 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 478


 21898 0190 254B     		ldr	r3, .L842
 21899 0192 6422     		movs	r2, #100
 21900 0194 83F8FC21 		strb	r2, [r3, #508]
2976:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 21901              		.loc 1 2976 0
 21902 0198 234B     		ldr	r3, .L842
 21903 019a 0022     		movs	r2, #0
 21904 019c 83F8FE21 		strb	r2, [r3, #510]
2977:..\src/command_processing.c ****     
2978:..\src/command_processing.c ****     //Initialize rest position parameters  
2979:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 21905              		.loc 1 2979 0
 21906 01a0 214B     		ldr	r3, .L842
 21907 01a2 0022     		movs	r2, #0
 21908 01a4 83F8AC22 		strb	r2, [r3, #684]
2980:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 21909              		.loc 1 2980 0
 21910 01a8 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21911 01aa 1F49     		ldr	r1, .L842
 21912 01ac 1346     		mov	r3, r2
 21913 01ae DB00     		lsls	r3, r3, #3
 21914 01b0 9B1A     		subs	r3, r3, r2
 21915 01b2 1B01     		lsls	r3, r3, #4
 21916 01b4 0B44     		add	r3, r3, r1
 21917 01b6 03F58873 		add	r3, r3, #272
 21918 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21919 01bc 1946     		mov	r1, r3
 21920 01be 1A4A     		ldr	r2, .L842
 21921 01c0 0B46     		mov	r3, r1
 21922 01c2 5B00     		lsls	r3, r3, #1
 21923 01c4 0B44     		add	r3, r3, r1
 21924 01c6 1B01     		lsls	r3, r3, #4
 21925 01c8 1344     		add	r3, r3, r2
 21926 01ca 03F29513 		addw	r3, r3, #405
 21927 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21928 01d0 1A46     		mov	r2, r3
 21929 01d2 41F65833 		movw	r3, #7000
 21930 01d6 9340     		lsls	r3, r3, r2
 21931 01d8 134A     		ldr	r2, .L842
 21932 01da C2F8A032 		str	r3, [r2, #672]
2981:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 21933              		.loc 1 2981 0
 21934 01de 124B     		ldr	r3, .L842
 21935 01e0 0A22     		movs	r2, #10
 21936 01e2 C3F8A422 		str	r2, [r3, #676]
2982:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 21937              		.loc 1 2982 0
 21938 01e6 104B     		ldr	r3, .L842
 21939 01e8 42F21072 		movw	r2, #10000
 21940 01ec C3F8A822 		str	r2, [r3, #680]
2983:..\src/command_processing.c **** 	
2984:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 21941              		.loc 1 2984 0
 21942 01f0 0D4B     		ldr	r3, .L842
 21943 01f2 0022     		movs	r2, #0
 21944 01f4 83F80022 		strb	r2, [r3, #512]
2985:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 479


 21945              		.loc 1 2985 0
 21946 01f8 0B4B     		ldr	r3, .L842
 21947 01fa 0022     		movs	r2, #0
 21948 01fc 83F82622 		strb	r2, [r3, #550]
2986:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 21949              		.loc 1 2986 0
 21950 0200 094B     		ldr	r3, .L842
 21951 0202 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21952 0206 1233     		adds	r3, r3, #18
 21953 0208 5B01     		lsls	r3, r3, #5
 21954 020a 074A     		ldr	r2, .L842
 21955 020c 1344     		add	r3, r3, r2
 21956 020e 074A     		ldr	r2, .L842+4
 21957 0210 1068     		ldr	r0, [r2]	@ unaligned
 21958 0212 1860     		str	r0, [r3]	@ unaligned
 21959 0214 9188     		ldrh	r1, [r2, #4]	@ unaligned
 21960 0216 9279     		ldrb	r2, [r2, #6]
 21961 0218 9980     		strh	r1, [r3, #4]	@ unaligned
 21962 021a 9A71     		strb	r2, [r3, #6]
2987:..\src/command_processing.c **** }
 21963              		.loc 1 2987 0
 21964 021c 00BF     		nop
 21965 021e 0C37     		adds	r7, r7, #12
 21966              		.cfi_def_cfa_offset 4
 21967 0220 BD46     		mov	sp, r7
 21968              		.cfi_def_cfa_register 13
 21969              		@ sp needed
 21970 0222 80BC     		pop	{r7}
 21971              		.cfi_restore 7
 21972              		.cfi_def_cfa_offset 0
 21973 0224 7047     		bx	lr
 21974              	.L843:
 21975 0226 00BF     		.align	2
 21976              	.L842:
 21977 0228 00000000 		.word	g_mem
 21978 022c B01A0000 		.word	.LC270
 21979              		.cfi_endproc
 21980              	.LFE87:
 21981              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 21982              		.section	.text.cmd_get_measurements,"ax",%progbits
 21983              		.align	2
 21984              		.global	cmd_get_measurements
 21985              		.thumb
 21986              		.thumb_func
 21987              		.type	cmd_get_measurements, %function
 21988              	cmd_get_measurements:
 21989              	.LFB88:
2988:..\src/command_processing.c **** 
2989:..\src/command_processing.c **** //==============================================================================
2990:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
2991:..\src/command_processing.c **** //==============================================================================
2992:..\src/command_processing.c **** /**
2993:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
2994:..\src/command_processing.c **** **/
2995:..\src/command_processing.c **** 
2996:..\src/command_processing.c **** void cmd_get_measurements(){
 21990              		.loc 1 2996 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 480


 21991              		.cfi_startproc
 21992              		@ args = 0, pretend = 0, frame = 16
 21993              		@ frame_needed = 1, uses_anonymous_args = 0
 21994 0000 90B5     		push	{r4, r7, lr}
 21995              		.cfi_def_cfa_offset 12
 21996              		.cfi_offset 4, -12
 21997              		.cfi_offset 7, -8
 21998              		.cfi_offset 14, -4
 21999 0002 85B0     		sub	sp, sp, #20
 22000              		.cfi_def_cfa_offset 32
 22001 0004 00AF     		add	r7, sp, #0
 22002              		.cfi_def_cfa_register 7
2997:..\src/command_processing.c ****  
2998:..\src/command_processing.c ****     uint8 CYDATA index;
2999:..\src/command_processing.c ****     int16 aux_int16;
3000:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3001:..\src/command_processing.c ****     
3002:..\src/command_processing.c ****     uint8 packet_data[8]; 
3003:..\src/command_processing.c ****     
3004:..\src/command_processing.c ****     //Header package
3005:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 22003              		.loc 1 3005 0
 22004 0006 8423     		movs	r3, #132
 22005 0008 3B71     		strb	r3, [r7, #4]
3006:..\src/command_processing.c ****     
3007:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22006              		.loc 1 3007 0
 22007 000a 0323     		movs	r3, #3
 22008 000c FB73     		strb	r3, [r7, #15]
 22009 000e 37E0     		b	.L845
 22010              	.L846:
3008:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22011              		.loc 1 3008 0
 22012 0010 264B     		ldr	r3, .L847
 22013 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22014 0016 1846     		mov	r0, r3
 22015 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22016 001a 2549     		ldr	r1, .L847+4
 22017 001c 0346     		mov	r3, r0
 22018 001e 5B00     		lsls	r3, r3, #1
 22019 0020 0344     		add	r3, r3, r0
 22020 0022 9B00     		lsls	r3, r3, #2
 22021 0024 1344     		add	r3, r3, r2
 22022 0026 51F82320 		ldr	r2, [r1, r3, lsl #2]
 22023 002a 204B     		ldr	r3, .L847
 22024 002c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22025 0030 1C46     		mov	r4, r3
 22026 0032 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22027 0034 1D48     		ldr	r0, .L847
 22028 0036 2346     		mov	r3, r4
 22029 0038 5B00     		lsls	r3, r3, #1
 22030 003a 2344     		add	r3, r3, r4
 22031 003c 1B01     		lsls	r3, r3, #4
 22032 003e 0344     		add	r3, r3, r0
 22033 0040 0B44     		add	r3, r3, r1
 22034 0042 03F29513 		addw	r3, r3, #405
 22035 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 481


 22036 0048 42FA03F3 		asr	r3, r2, r3
 22037 004c 1BB2     		sxth	r3, r3
 22038 004e BB81     		strh	r3, [r7, #12]	@ movhi
3009:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22039              		.loc 1 3009 0
 22040 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22041 0052 5B00     		lsls	r3, r3, #1
 22042 0054 0233     		adds	r3, r3, #2
 22043 0056 07F10C02 		add	r2, r7, #12
 22044 005a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22045 005c 07F11001 		add	r1, r7, #16
 22046 0060 0B44     		add	r3, r3, r1
 22047 0062 03F80C2C 		strb	r2, [r3, #-12]
3010:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22048              		.loc 1 3010 0
 22049 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22050 0068 5B00     		lsls	r3, r3, #1
 22051 006a 5A1C     		adds	r2, r3, #1
 22052 006c 07F10C03 		add	r3, r7, #12
 22053 0070 0133     		adds	r3, r3, #1
 22054 0072 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22055 0074 07F11003 		add	r3, r7, #16
 22056 0078 1344     		add	r3, r3, r2
 22057 007a 0A46     		mov	r2, r1
 22058 007c 03F80C2C 		strb	r2, [r3, #-12]
 22059              	.L845:
3007:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22060              		.loc 1 3007 0 discriminator 1
 22061 0080 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22062 0082 5A1E     		subs	r2, r3, #1
 22063 0084 FA73     		strb	r2, [r7, #15]
 22064 0086 002B     		cmp	r3, #0
 22065 0088 C2D1     		bne	.L846
3011:..\src/command_processing.c ****     }
3012:..\src/command_processing.c **** 
3013:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3014:..\src/command_processing.c **** 
3015:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22066              		.loc 1 3015 0
 22067 008a 3B1D     		adds	r3, r7, #4
 22068 008c 0721     		movs	r1, #7
 22069 008e 1846     		mov	r0, r3
 22070 0090 FFF7FEFF 		bl	LCRChecksum
 22071 0094 0346     		mov	r3, r0
 22072 0096 FB72     		strb	r3, [r7, #11]
3016:..\src/command_processing.c **** 
3017:..\src/command_processing.c ****     commWrite(packet_data, 8);
 22073              		.loc 1 3017 0
 22074 0098 3B1D     		adds	r3, r7, #4
 22075 009a 0821     		movs	r1, #8
 22076 009c 1846     		mov	r0, r3
 22077 009e FFF7FEFF 		bl	commWrite
3018:..\src/command_processing.c ****    
3019:..\src/command_processing.c **** }
 22078              		.loc 1 3019 0
 22079 00a2 00BF     		nop
 22080 00a4 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 482


 22081              		.cfi_def_cfa_offset 12
 22082 00a6 BD46     		mov	sp, r7
 22083              		.cfi_def_cfa_register 13
 22084              		@ sp needed
 22085 00a8 90BD     		pop	{r4, r7, pc}
 22086              	.L848:
 22087 00aa 00BF     		.align	2
 22088              	.L847:
 22089 00ac 00000000 		.word	g_mem
 22090 00b0 00000000 		.word	g_measOld
 22091              		.cfi_endproc
 22092              	.LFE88:
 22093              		.size	cmd_get_measurements, .-cmd_get_measurements
 22094              		.section	.text.cmd_get_velocities,"ax",%progbits
 22095              		.align	2
 22096              		.global	cmd_get_velocities
 22097              		.thumb
 22098              		.thumb_func
 22099              		.type	cmd_get_velocities, %function
 22100              	cmd_get_velocities:
 22101              	.LFB89:
3020:..\src/command_processing.c **** 
3021:..\src/command_processing.c **** void cmd_get_velocities(){
 22102              		.loc 1 3021 0
 22103              		.cfi_startproc
 22104              		@ args = 0, pretend = 0, frame = 16
 22105              		@ frame_needed = 1, uses_anonymous_args = 0
 22106 0000 90B5     		push	{r4, r7, lr}
 22107              		.cfi_def_cfa_offset 12
 22108              		.cfi_offset 4, -12
 22109              		.cfi_offset 7, -8
 22110              		.cfi_offset 14, -4
 22111 0002 85B0     		sub	sp, sp, #20
 22112              		.cfi_def_cfa_offset 32
 22113 0004 00AF     		add	r7, sp, #0
 22114              		.cfi_def_cfa_register 7
3022:..\src/command_processing.c ****  
3023:..\src/command_processing.c ****     uint8 CYDATA index;
3024:..\src/command_processing.c ****     int16 aux_int16;
3025:..\src/command_processing.c ****    
3026:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3027:..\src/command_processing.c ****     
3028:..\src/command_processing.c ****     uint8 packet_data[8]; 
3029:..\src/command_processing.c ****     
3030:..\src/command_processing.c ****     //Header package
3031:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 22115              		.loc 1 3031 0
 22116 0006 8923     		movs	r3, #137
 22117 0008 3B71     		strb	r3, [r7, #4]
3032:..\src/command_processing.c ****     
3033:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22118              		.loc 1 3033 0
 22119 000a 0323     		movs	r3, #3
 22120 000c FB73     		strb	r3, [r7, #15]
 22121 000e 38E0     		b	.L850
 22122              	.L851:
3034:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 483


 22123              		.loc 1 3034 0
 22124 0010 264B     		ldr	r3, .L852
 22125 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22126 0016 1846     		mov	r0, r3
 22127 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22128 001a 2549     		ldr	r1, .L852+4
 22129 001c 0346     		mov	r3, r0
 22130 001e 5B00     		lsls	r3, r3, #1
 22131 0020 0344     		add	r3, r3, r0
 22132 0022 9B00     		lsls	r3, r3, #2
 22133 0024 1344     		add	r3, r3, r2
 22134 0026 0633     		adds	r3, r3, #6
 22135 0028 51F82320 		ldr	r2, [r1, r3, lsl #2]
 22136 002c 1F4B     		ldr	r3, .L852
 22137 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22138 0032 1C46     		mov	r4, r3
 22139 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22140 0036 1D48     		ldr	r0, .L852
 22141 0038 2346     		mov	r3, r4
 22142 003a 5B00     		lsls	r3, r3, #1
 22143 003c 2344     		add	r3, r3, r4
 22144 003e 1B01     		lsls	r3, r3, #4
 22145 0040 0344     		add	r3, r3, r0
 22146 0042 0B44     		add	r3, r3, r1
 22147 0044 03F29513 		addw	r3, r3, #405
 22148 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22149 004a 42FA03F3 		asr	r3, r2, r3
 22150 004e 1BB2     		sxth	r3, r3
 22151 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3035:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22152              		.loc 1 3035 0
 22153 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22154 0054 5B00     		lsls	r3, r3, #1
 22155 0056 0233     		adds	r3, r3, #2
 22156 0058 07F10C02 		add	r2, r7, #12
 22157 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22158 005e 07F11001 		add	r1, r7, #16
 22159 0062 0B44     		add	r3, r3, r1
 22160 0064 03F80C2C 		strb	r2, [r3, #-12]
3036:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22161              		.loc 1 3036 0
 22162 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22163 006a 5B00     		lsls	r3, r3, #1
 22164 006c 5A1C     		adds	r2, r3, #1
 22165 006e 07F10C03 		add	r3, r7, #12
 22166 0072 0133     		adds	r3, r3, #1
 22167 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22168 0076 07F11003 		add	r3, r7, #16
 22169 007a 1344     		add	r3, r3, r2
 22170 007c 0A46     		mov	r2, r1
 22171 007e 03F80C2C 		strb	r2, [r3, #-12]
 22172              	.L850:
3033:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22173              		.loc 1 3033 0 discriminator 1
 22174 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22175 0084 5A1E     		subs	r2, r3, #1
 22176 0086 FA73     		strb	r2, [r7, #15]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 484


 22177 0088 002B     		cmp	r3, #0
 22178 008a C1D1     		bne	.L851
3037:..\src/command_processing.c ****     }
3038:..\src/command_processing.c ****             
3039:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3040:..\src/command_processing.c **** 
3041:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22179              		.loc 1 3041 0
 22180 008c 3B1D     		adds	r3, r7, #4
 22181 008e 0721     		movs	r1, #7
 22182 0090 1846     		mov	r0, r3
 22183 0092 FFF7FEFF 		bl	LCRChecksum
 22184 0096 0346     		mov	r3, r0
 22185 0098 FB72     		strb	r3, [r7, #11]
3042:..\src/command_processing.c **** 
3043:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22186              		.loc 1 3043 0
 22187 009a 3B1D     		adds	r3, r7, #4
 22188 009c 0821     		movs	r1, #8
 22189 009e 1846     		mov	r0, r3
 22190 00a0 FFF7FEFF 		bl	commWrite
3044:..\src/command_processing.c **** }
 22191              		.loc 1 3044 0
 22192 00a4 00BF     		nop
 22193 00a6 1437     		adds	r7, r7, #20
 22194              		.cfi_def_cfa_offset 12
 22195 00a8 BD46     		mov	sp, r7
 22196              		.cfi_def_cfa_register 13
 22197              		@ sp needed
 22198 00aa 90BD     		pop	{r4, r7, pc}
 22199              	.L853:
 22200              		.align	2
 22201              	.L852:
 22202 00ac 00000000 		.word	g_mem
 22203 00b0 00000000 		.word	g_measOld
 22204              		.cfi_endproc
 22205              	.LFE89:
 22206              		.size	cmd_get_velocities, .-cmd_get_velocities
 22207              		.section	.text.cmd_get_accelerations,"ax",%progbits
 22208              		.align	2
 22209              		.global	cmd_get_accelerations
 22210              		.thumb
 22211              		.thumb_func
 22212              		.type	cmd_get_accelerations, %function
 22213              	cmd_get_accelerations:
 22214              	.LFB90:
3045:..\src/command_processing.c **** 
3046:..\src/command_processing.c **** void cmd_get_accelerations(){
 22215              		.loc 1 3046 0
 22216              		.cfi_startproc
 22217              		@ args = 0, pretend = 0, frame = 16
 22218              		@ frame_needed = 1, uses_anonymous_args = 0
 22219 0000 90B5     		push	{r4, r7, lr}
 22220              		.cfi_def_cfa_offset 12
 22221              		.cfi_offset 4, -12
 22222              		.cfi_offset 7, -8
 22223              		.cfi_offset 14, -4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 485


 22224 0002 85B0     		sub	sp, sp, #20
 22225              		.cfi_def_cfa_offset 32
 22226 0004 00AF     		add	r7, sp, #0
 22227              		.cfi_def_cfa_register 7
3047:..\src/command_processing.c ****  
3048:..\src/command_processing.c ****     uint8 CYDATA index;
3049:..\src/command_processing.c ****     int16 aux_int16;
3050:..\src/command_processing.c ****     
3051:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3052:..\src/command_processing.c ****     
3053:..\src/command_processing.c ****     uint8 packet_data[8]; 
3054:..\src/command_processing.c ****     
3055:..\src/command_processing.c ****     //Header package
3056:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 22228              		.loc 1 3056 0
 22229 0006 8B23     		movs	r3, #139
 22230 0008 3B71     		strb	r3, [r7, #4]
3057:..\src/command_processing.c ****     
3058:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22231              		.loc 1 3058 0
 22232 000a 0323     		movs	r3, #3
 22233 000c FB73     		strb	r3, [r7, #15]
 22234 000e 39E0     		b	.L855
 22235              	.L856:
3059:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22236              		.loc 1 3059 0
 22237 0010 274B     		ldr	r3, .L857
 22238 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22239 0016 1846     		mov	r0, r3
 22240 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22241 001a 2649     		ldr	r1, .L857+4
 22242 001c 0346     		mov	r3, r0
 22243 001e 5B00     		lsls	r3, r3, #1
 22244 0020 0344     		add	r3, r3, r0
 22245 0022 9B00     		lsls	r3, r3, #2
 22246 0024 1344     		add	r3, r3, r2
 22247 0026 0833     		adds	r3, r3, #8
 22248 0028 9B00     		lsls	r3, r3, #2
 22249 002a 0B44     		add	r3, r3, r1
 22250 002c 5A68     		ldr	r2, [r3, #4]
 22251 002e 204B     		ldr	r3, .L857
 22252 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22253 0034 1C46     		mov	r4, r3
 22254 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22255 0038 1D48     		ldr	r0, .L857
 22256 003a 2346     		mov	r3, r4
 22257 003c 5B00     		lsls	r3, r3, #1
 22258 003e 2344     		add	r3, r3, r4
 22259 0040 1B01     		lsls	r3, r3, #4
 22260 0042 0344     		add	r3, r3, r0
 22261 0044 0B44     		add	r3, r3, r1
 22262 0046 03F29513 		addw	r3, r3, #405
 22263 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22264 004c 42FA03F3 		asr	r3, r2, r3
 22265 0050 1BB2     		sxth	r3, r3
 22266 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3060:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 486


 22267              		.loc 1 3060 0
 22268 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22269 0056 5B00     		lsls	r3, r3, #1
 22270 0058 0233     		adds	r3, r3, #2
 22271 005a 07F10C02 		add	r2, r7, #12
 22272 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22273 0060 07F11001 		add	r1, r7, #16
 22274 0064 0B44     		add	r3, r3, r1
 22275 0066 03F80C2C 		strb	r2, [r3, #-12]
3061:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22276              		.loc 1 3061 0
 22277 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22278 006c 5B00     		lsls	r3, r3, #1
 22279 006e 5A1C     		adds	r2, r3, #1
 22280 0070 07F10C03 		add	r3, r7, #12
 22281 0074 0133     		adds	r3, r3, #1
 22282 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22283 0078 07F11003 		add	r3, r7, #16
 22284 007c 1344     		add	r3, r3, r2
 22285 007e 0A46     		mov	r2, r1
 22286 0080 03F80C2C 		strb	r2, [r3, #-12]
 22287              	.L855:
3058:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22288              		.loc 1 3058 0 discriminator 1
 22289 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22290 0086 5A1E     		subs	r2, r3, #1
 22291 0088 FA73     		strb	r2, [r7, #15]
 22292 008a 002B     		cmp	r3, #0
 22293 008c C0D1     		bne	.L856
3062:..\src/command_processing.c ****     }
3063:..\src/command_processing.c ****     
3064:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3065:..\src/command_processing.c **** 
3066:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22294              		.loc 1 3066 0
 22295 008e 3B1D     		adds	r3, r7, #4
 22296 0090 0721     		movs	r1, #7
 22297 0092 1846     		mov	r0, r3
 22298 0094 FFF7FEFF 		bl	LCRChecksum
 22299 0098 0346     		mov	r3, r0
 22300 009a FB72     		strb	r3, [r7, #11]
3067:..\src/command_processing.c **** 
3068:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22301              		.loc 1 3068 0
 22302 009c 3B1D     		adds	r3, r7, #4
 22303 009e 0821     		movs	r1, #8
 22304 00a0 1846     		mov	r0, r3
 22305 00a2 FFF7FEFF 		bl	commWrite
3069:..\src/command_processing.c **** }
 22306              		.loc 1 3069 0
 22307 00a6 00BF     		nop
 22308 00a8 1437     		adds	r7, r7, #20
 22309              		.cfi_def_cfa_offset 12
 22310 00aa BD46     		mov	sp, r7
 22311              		.cfi_def_cfa_register 13
 22312              		@ sp needed
 22313 00ac 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 487


 22314              	.L858:
 22315 00ae 00BF     		.align	2
 22316              	.L857:
 22317 00b0 00000000 		.word	g_mem
 22318 00b4 00000000 		.word	g_measOld
 22319              		.cfi_endproc
 22320              	.LFE90:
 22321              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 22322              		.section	.text.cmd_set_inputs,"ax",%progbits
 22323              		.align	2
 22324              		.global	cmd_set_inputs
 22325              		.thumb
 22326              		.thumb_func
 22327              		.type	cmd_set_inputs, %function
 22328              	cmd_set_inputs:
 22329              	.LFB91:
3070:..\src/command_processing.c **** 
3071:..\src/command_processing.c **** void cmd_set_inputs(){
 22330              		.loc 1 3071 0
 22331              		.cfi_startproc
 22332              		@ args = 0, pretend = 0, frame = 8
 22333              		@ frame_needed = 1, uses_anonymous_args = 0
 22334              		@ link register save eliminated.
 22335 0000 90B4     		push	{r4, r7}
 22336              		.cfi_def_cfa_offset 8
 22337              		.cfi_offset 4, -8
 22338              		.cfi_offset 7, -4
 22339 0002 82B0     		sub	sp, sp, #8
 22340              		.cfi_def_cfa_offset 16
 22341 0004 00AF     		add	r7, sp, #0
 22342              		.cfi_def_cfa_register 7
3072:..\src/command_processing.c ****     
3073:..\src/command_processing.c ****     // Store position setted in right variables
3074:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3075:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3076:..\src/command_processing.c ****     
3077:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 22343              		.loc 1 3077 0
 22344 0006 894B     		ldr	r3, .L873
 22345 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 22346 000a 1B02     		lsls	r3, r3, #8
 22347 000c 1AB2     		sxth	r2, r3
 22348 000e 874B     		ldr	r3, .L873
 22349 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 22350 0012 1BB2     		sxth	r3, r3
 22351 0014 1343     		orrs	r3, r3, r2
 22352 0016 1BB2     		sxth	r3, r3
 22353 0018 3B80     		strh	r3, [r7]	@ movhi
3078:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 22354              		.loc 1 3078 0
 22355 001a 844B     		ldr	r3, .L873
 22356 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 22357 001e 1B02     		lsls	r3, r3, #8
 22358 0020 1AB2     		sxth	r2, r3
 22359 0022 824B     		ldr	r3, .L873
 22360 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22361 0026 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 488


 22362 0028 1343     		orrs	r3, r3, r2
 22363 002a 1BB2     		sxth	r3, r3
 22364 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 22365              	.LBB22:
3079:..\src/command_processing.c ****     
3080:..\src/command_processing.c ****     // Check if last command received was the same as this 
3081:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3082:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 22366              		.loc 1 3082 0
 22367 002e 0023     		movs	r3, #0
 22368 0030 FB71     		strb	r3, [r7, #7]
 22369 0032 1DE0     		b	.L860
 22370              	.L862:
3083:..\src/command_processing.c ****         if(last_aux_int16[i] != aux_int16[i]){
 22371              		.loc 1 3083 0
 22372 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22373 0036 7E4A     		ldr	r2, .L873+4
 22374 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 22375 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22376 003e 5B00     		lsls	r3, r3, #1
 22377 0040 07F10801 		add	r1, r7, #8
 22378 0044 0B44     		add	r3, r3, r1
 22379 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 22380 004a 9A42     		cmp	r2, r3
 22381 004c 02D0     		beq	.L861
3084:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 22382              		.loc 1 3084 0
 22383 004e 794B     		ldr	r3, .L873+8
 22384 0050 0122     		movs	r2, #1
 22385 0052 1A70     		strb	r2, [r3]
 22386              	.L861:
3085:..\src/command_processing.c ****         }
3086:..\src/command_processing.c ****         // Update last command
3087:..\src/command_processing.c ****         last_aux_int16[i] = aux_int16[i];
 22387              		.loc 1 3087 0 discriminator 2
 22388 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22389 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22390 0058 5B00     		lsls	r3, r3, #1
 22391 005a 07F10801 		add	r1, r7, #8
 22392 005e 0B44     		add	r3, r3, r1
 22393 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 22394 0064 724B     		ldr	r3, .L873+4
 22395 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3082:..\src/command_processing.c ****         if(last_aux_int16[i] != aux_int16[i]){
 22396              		.loc 1 3082 0 discriminator 2
 22397 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22398 006c 0133     		adds	r3, r3, #1
 22399 006e FB71     		strb	r3, [r7, #7]
 22400              	.L860:
3082:..\src/command_processing.c ****         if(last_aux_int16[i] != aux_int16[i]){
 22401              		.loc 1 3082 0 is_stmt 0 discriminator 1
 22402 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22403 0072 714B     		ldr	r3, .L873+12
 22404 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22405 0078 0133     		adds	r3, r3, #1
 22406 007a 9A42     		cmp	r2, r3
 22407 007c DADB     		blt	.L862
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 489


 22408              	.LBE22:
3088:..\src/command_processing.c ****     }
3089:..\src/command_processing.c ****     
3090:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3091:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 22409              		.loc 1 3091 0 is_stmt 1
 22410 007e 6D4B     		ldr	r3, .L873+8
 22411 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22412 0082 002B     		cmp	r3, #0
 22413 0084 00F0CC80 		beq	.L872
 22414              	.LBB23:
3092:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 22415              		.loc 1 3092 0
 22416 0088 0023     		movs	r3, #0
 22417 008a BB71     		strb	r3, [r7, #6]
 22418 008c C4E0     		b	.L864
 22419              	.L871:
3093:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22420              		.loc 1 3093 0
 22421 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22422 0090 6A49     		ldr	r1, .L873+16
 22423 0092 1346     		mov	r3, r2
 22424 0094 DB00     		lsls	r3, r3, #3
 22425 0096 9B1A     		subs	r3, r3, r2
 22426 0098 1B01     		lsls	r3, r3, #4
 22427 009a 0B44     		add	r3, r3, r1
 22428 009c 03F20F13 		addw	r3, r3, #271
 22429 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22430 00a2 022B     		cmp	r3, #2
 22431 00a4 0ED1     		bne	.L865
3094:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 22432              		.loc 1 3094 0
 22433 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22434 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22435 00aa 5B00     		lsls	r3, r3, #1
 22436 00ac 07F10801 		add	r1, r7, #8
 22437 00b0 0B44     		add	r3, r3, r1
 22438 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 22439 00b6 1846     		mov	r0, r3
 22440 00b8 6149     		ldr	r1, .L873+20
 22441 00ba 1301     		lsls	r3, r2, #4
 22442 00bc 0B44     		add	r3, r3, r1
 22443 00be 0433     		adds	r3, r3, #4
 22444 00c0 1860     		str	r0, [r3]
 22445 00c2 47E0     		b	.L866
 22446              	.L865:
3095:..\src/command_processing.c ****             }
3096:..\src/command_processing.c ****             else {
3097:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 22447              		.loc 1 3097 0
 22448 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22449 00c6 5D49     		ldr	r1, .L873+16
 22450 00c8 1346     		mov	r3, r2
 22451 00ca DB00     		lsls	r3, r3, #3
 22452 00cc 9B1A     		subs	r3, r3, r2
 22453 00ce 1B01     		lsls	r3, r3, #4
 22454 00d0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 490


 22455 00d2 03F20F13 		addw	r3, r3, #271
 22456 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22457 00d8 012B     		cmp	r3, #1
 22458 00da 0ED1     		bne	.L867
3098:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 22459              		.loc 1 3098 0
 22460 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22461 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22462 00e0 5B00     		lsls	r3, r3, #1
 22463 00e2 07F10801 		add	r1, r7, #8
 22464 00e6 0B44     		add	r3, r3, r1
 22465 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 22466 00ec 1846     		mov	r0, r3
 22467 00ee 5449     		ldr	r1, .L873+20
 22468 00f0 1301     		lsls	r3, r2, #4
 22469 00f2 0B44     		add	r3, r3, r1
 22470 00f4 0833     		adds	r3, r3, #8
 22471 00f6 1860     		str	r0, [r3]
 22472 00f8 2CE0     		b	.L866
 22473              	.L867:
3099:..\src/command_processing.c ****                 }
3100:..\src/command_processing.c ****                 else {
3101:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 22474              		.loc 1 3101 0
 22475 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22476 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22477 00fe 5B00     		lsls	r3, r3, #1
 22478 0100 07F10801 		add	r1, r7, #8
 22479 0104 0B44     		add	r3, r3, r1
 22480 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 22481 010a 1846     		mov	r0, r3
 22482 010c 4C49     		ldr	r1, .L873+20
 22483 010e 1301     		lsls	r3, r2, #4
 22484 0110 0B44     		add	r3, r3, r1
 22485 0112 1860     		str	r0, [r3]
3102:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 22486              		.loc 1 3102 0
 22487 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22488 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22489 0118 494A     		ldr	r2, .L873+20
 22490 011a 1B01     		lsls	r3, r3, #4
 22491 011c 1344     		add	r3, r3, r2
 22492 011e 1868     		ldr	r0, [r3]
 22493 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22494 0122 454C     		ldr	r4, .L873+12
 22495 0124 1346     		mov	r3, r2
 22496 0126 DB00     		lsls	r3, r3, #3
 22497 0128 9B1A     		subs	r3, r3, r2
 22498 012a 1B01     		lsls	r3, r3, #4
 22499 012c 2344     		add	r3, r3, r4
 22500 012e 03F58873 		add	r3, r3, #272
 22501 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22502 0134 1C46     		mov	r4, r3
 22503 0136 414A     		ldr	r2, .L873+16
 22504 0138 2346     		mov	r3, r4
 22505 013a 5B00     		lsls	r3, r3, #1
 22506 013c 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 491


 22507 013e 1B01     		lsls	r3, r3, #4
 22508 0140 1344     		add	r3, r3, r2
 22509 0142 03F29513 		addw	r3, r3, #405
 22510 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22511 0148 00FA03F2 		lsl	r2, r0, r3
 22512 014c 3C48     		ldr	r0, .L873+20
 22513 014e 0B01     		lsls	r3, r1, #4
 22514 0150 0344     		add	r3, r3, r0
 22515 0152 1A60     		str	r2, [r3]
 22516              	.L866:
3103:..\src/command_processing.c ****                 }
3104:..\src/command_processing.c ****             }  
3105:..\src/command_processing.c ****                
3106:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3107:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 22517              		.loc 1 3107 0
 22518 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22519 0156 3849     		ldr	r1, .L873+12
 22520 0158 1346     		mov	r3, r2
 22521 015a DB00     		lsls	r3, r3, #3
 22522 015c 9B1A     		subs	r3, r3, r2
 22523 015e 1B01     		lsls	r3, r3, #4
 22524 0160 0B44     		add	r3, r3, r1
 22525 0162 E333     		adds	r3, r3, #227
 22526 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22527 0166 002B     		cmp	r3, #0
 22528 0168 53D0     		beq	.L868
 22529              		.loc 1 3107 0 is_stmt 0 discriminator 1
 22530 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22531 016c 3349     		ldr	r1, .L873+16
 22532 016e 1346     		mov	r3, r2
 22533 0170 DB00     		lsls	r3, r3, #3
 22534 0172 9B1A     		subs	r3, r3, r2
 22535 0174 1B01     		lsls	r3, r3, #4
 22536 0176 0B44     		add	r3, r3, r1
 22537 0178 03F20F13 		addw	r3, r3, #271
 22538 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22539 017e 032B     		cmp	r3, #3
 22540 0180 0BD0     		beq	.L869
 22541              		.loc 1 3107 0 discriminator 2
 22542 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22543 0184 2D49     		ldr	r1, .L873+16
 22544 0186 1346     		mov	r3, r2
 22545 0188 DB00     		lsls	r3, r3, #3
 22546 018a 9B1A     		subs	r3, r3, r2
 22547 018c 1B01     		lsls	r3, r3, #4
 22548 018e 0B44     		add	r3, r3, r1
 22549 0190 03F20F13 		addw	r3, r3, #271
 22550 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22551 0196 002B     		cmp	r3, #0
 22552 0198 3BD1     		bne	.L868
 22553              	.L869:
3108:..\src/command_processing.c ****                 
3109:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 22554              		.loc 1 3109 0 is_stmt 1
 22555 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22556 019c 284A     		ldr	r2, .L873+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 492


 22557 019e 1B01     		lsls	r3, r3, #4
 22558 01a0 1344     		add	r3, r3, r2
 22559 01a2 1968     		ldr	r1, [r3]
 22560 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22561 01a6 2448     		ldr	r0, .L873+12
 22562 01a8 1346     		mov	r3, r2
 22563 01aa DB00     		lsls	r3, r3, #3
 22564 01ac 9B1A     		subs	r3, r3, r2
 22565 01ae 1B01     		lsls	r3, r3, #4
 22566 01b0 0344     		add	r3, r3, r0
 22567 01b2 E433     		adds	r3, r3, #228
 22568 01b4 1B68     		ldr	r3, [r3]
 22569 01b6 9942     		cmp	r1, r3
 22570 01b8 0DDA     		bge	.L870
3110:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 22571              		.loc 1 3110 0
 22572 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22573 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22574 01be 1E48     		ldr	r0, .L873+12
 22575 01c0 1346     		mov	r3, r2
 22576 01c2 DB00     		lsls	r3, r3, #3
 22577 01c4 9B1A     		subs	r3, r3, r2
 22578 01c6 1B01     		lsls	r3, r3, #4
 22579 01c8 0344     		add	r3, r3, r0
 22580 01ca E433     		adds	r3, r3, #228
 22581 01cc 1A68     		ldr	r2, [r3]
 22582 01ce 1C48     		ldr	r0, .L873+20
 22583 01d0 0B01     		lsls	r3, r1, #4
 22584 01d2 0344     		add	r3, r3, r0
 22585 01d4 1A60     		str	r2, [r3]
 22586              	.L870:
3111:..\src/command_processing.c **** 
3112:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 22587              		.loc 1 3112 0
 22588 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22589 01d8 194A     		ldr	r2, .L873+20
 22590 01da 1B01     		lsls	r3, r3, #4
 22591 01dc 1344     		add	r3, r3, r2
 22592 01de 1968     		ldr	r1, [r3]
 22593 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22594 01e2 1548     		ldr	r0, .L873+12
 22595 01e4 1346     		mov	r3, r2
 22596 01e6 DB00     		lsls	r3, r3, #3
 22597 01e8 9B1A     		subs	r3, r3, r2
 22598 01ea 1B01     		lsls	r3, r3, #4
 22599 01ec 0344     		add	r3, r3, r0
 22600 01ee E833     		adds	r3, r3, #232
 22601 01f0 1B68     		ldr	r3, [r3]
 22602 01f2 9942     		cmp	r1, r3
 22603 01f4 0DDD     		ble	.L868
3113:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 22604              		.loc 1 3113 0
 22605 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22606 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22607 01fa 0F48     		ldr	r0, .L873+12
 22608 01fc 1346     		mov	r3, r2
 22609 01fe DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 493


 22610 0200 9B1A     		subs	r3, r3, r2
 22611 0202 1B01     		lsls	r3, r3, #4
 22612 0204 0344     		add	r3, r3, r0
 22613 0206 E833     		adds	r3, r3, #232
 22614 0208 1A68     		ldr	r2, [r3]
 22615 020a 0D48     		ldr	r0, .L873+20
 22616 020c 0B01     		lsls	r3, r1, #4
 22617 020e 0344     		add	r3, r3, r0
 22618 0210 1A60     		str	r2, [r3]
 22619              	.L868:
3092:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22620              		.loc 1 3092 0 discriminator 2
 22621 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22622 0214 0133     		adds	r3, r3, #1
 22623 0216 BB71     		strb	r3, [r7, #6]
 22624              	.L864:
3092:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22625              		.loc 1 3092 0 is_stmt 0 discriminator 1
 22626 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22627 021a 012B     		cmp	r3, #1
 22628 021c 7FF637AF 		bls	.L871
 22629              	.L872:
 22630              	.LBE23:
3114:..\src/command_processing.c ****             }
3115:..\src/command_processing.c ****         }  
3116:..\src/command_processing.c ****     }
3117:..\src/command_processing.c **** }
 22631              		.loc 1 3117 0 is_stmt 1
 22632 0220 00BF     		nop
 22633 0222 0837     		adds	r7, r7, #8
 22634              		.cfi_def_cfa_offset 8
 22635 0224 BD46     		mov	sp, r7
 22636              		.cfi_def_cfa_register 13
 22637              		@ sp needed
 22638 0226 90BC     		pop	{r4, r7}
 22639              		.cfi_restore 7
 22640              		.cfi_restore 4
 22641              		.cfi_def_cfa_offset 0
 22642 0228 7047     		bx	lr
 22643              	.L874:
 22644 022a 00BF     		.align	2
 22645              	.L873:
 22646 022c 00000000 		.word	g_rx
 22647 0230 00000000 		.word	last_aux_int16.11241
 22648 0234 00000000 		.word	change_ext_ref_flag
 22649 0238 00000000 		.word	c_mem
 22650 023c 00000000 		.word	g_mem
 22651 0240 00000000 		.word	g_refNew
 22652              		.cfi_endproc
 22653              	.LFE91:
 22654              		.size	cmd_set_inputs, .-cmd_set_inputs
 22655              		.section	.text.cmd_activate,"ax",%progbits
 22656              		.align	2
 22657              		.global	cmd_activate
 22658              		.thumb
 22659              		.thumb_func
 22660              		.type	cmd_activate, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 494


 22661              	cmd_activate:
 22662              	.LFB92:
3118:..\src/command_processing.c **** 
3119:..\src/command_processing.c **** void cmd_activate(){
 22663              		.loc 1 3119 0
 22664              		.cfi_startproc
 22665              		@ args = 0, pretend = 0, frame = 8
 22666              		@ frame_needed = 1, uses_anonymous_args = 0
 22667 0000 80B5     		push	{r7, lr}
 22668              		.cfi_def_cfa_offset 8
 22669              		.cfi_offset 7, -8
 22670              		.cfi_offset 14, -4
 22671 0002 82B0     		sub	sp, sp, #8
 22672              		.cfi_def_cfa_offset 16
 22673 0004 00AF     		add	r7, sp, #0
 22674              		.cfi_def_cfa_register 7
3120:..\src/command_processing.c ****     
3121:..\src/command_processing.c ****     // Store new value reads
3122:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 22675              		.loc 1 3122 0
 22676 0006 2A4B     		ldr	r3, .L882
 22677 0008 5B78     		ldrb	r3, [r3, #1]
 22678 000a FB71     		strb	r3, [r7, #7]
3123:..\src/command_processing.c ****     
3124:..\src/command_processing.c ****     // Check type of control mode enabled
3125:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 22679              		.loc 1 3125 0
 22680 000c 294B     		ldr	r3, .L882+4
 22681 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 22682 0012 002B     		cmp	r3, #0
 22683 0014 04D0     		beq	.L876
 22684              		.loc 1 3125 0 is_stmt 0 discriminator 1
 22685 0016 274B     		ldr	r3, .L882+4
 22686 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 22687 001c 032B     		cmp	r3, #3
 22688 001e 0CD1     		bne	.L877
 22689              	.L876:
3126:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 22690              		.loc 1 3126 0 is_stmt 1
 22691 0020 244B     		ldr	r3, .L882+4
 22692 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22693 0026 1946     		mov	r1, r3
 22694 0028 234A     		ldr	r2, .L882+8
 22695 002a 0B46     		mov	r3, r1
 22696 002c 5B00     		lsls	r3, r3, #1
 22697 002e 0B44     		add	r3, r3, r1
 22698 0030 1B01     		lsls	r3, r3, #4
 22699 0032 1344     		add	r3, r3, r2
 22700 0034 1B68     		ldr	r3, [r3]
 22701 0036 214A     		ldr	r2, .L882+12
 22702 0038 1360     		str	r3, [r2]
 22703              	.L877:
3127:..\src/command_processing.c ****     }
3128:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 22704              		.loc 1 3128 0
 22705 003a FB79     		ldrb	r3, [r7, #7]
 22706 003c 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 495


 22707 0040 DAB2     		uxtb	r2, r3
 22708 0042 1E4B     		ldr	r3, .L882+12
 22709 0044 1A73     		strb	r2, [r3, #12]
3129:..\src/command_processing.c ****     // Activate/Deactivate motor
3130:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 22710              		.loc 1 3130 0
 22711 0046 1D4B     		ldr	r3, .L882+12
 22712 0048 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22713 004a 1946     		mov	r1, r3
 22714 004c 0020     		movs	r0, #0
 22715 004e FFF7FEFF 		bl	enable_motor
3131:..\src/command_processing.c ****     
3132:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 22716              		.loc 1 3132 0
 22717 0052 184B     		ldr	r3, .L882+4
 22718 0054 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22719 0058 012B     		cmp	r3, #1
 22720 005a 24D1     		bne	.L881
3133:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 22721              		.loc 1 3133 0
 22722 005c 154B     		ldr	r3, .L882+4
 22723 005e 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 22724 0062 002B     		cmp	r3, #0
 22725 0064 04D0     		beq	.L879
 22726              		.loc 1 3133 0 is_stmt 0 discriminator 1
 22727 0066 134B     		ldr	r3, .L882+4
 22728 0068 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 22729 006c 032B     		cmp	r3, #3
 22730 006e 0CD1     		bne	.L880
 22731              	.L879:
3134:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 22732              		.loc 1 3134 0 is_stmt 1
 22733 0070 104B     		ldr	r3, .L882+4
 22734 0072 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22735 0076 1946     		mov	r1, r3
 22736 0078 0F4A     		ldr	r2, .L882+8
 22737 007a 0B46     		mov	r3, r1
 22738 007c 5B00     		lsls	r3, r3, #1
 22739 007e 0B44     		add	r3, r3, r1
 22740 0080 1B01     		lsls	r3, r3, #4
 22741 0082 1344     		add	r3, r3, r2
 22742 0084 1B68     		ldr	r3, [r3]
 22743 0086 0D4A     		ldr	r2, .L882+12
 22744 0088 1361     		str	r3, [r2, #16]
 22745              	.L880:
3135:..\src/command_processing.c ****         }
3136:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 22746              		.loc 1 3136 0
 22747 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22748 008c 5B08     		lsrs	r3, r3, #1
 22749 008e DBB2     		uxtb	r3, r3
 22750 0090 03F00103 		and	r3, r3, #1
 22751 0094 DAB2     		uxtb	r2, r3
 22752 0096 094B     		ldr	r3, .L882+12
 22753 0098 1A77     		strb	r2, [r3, #28]
3137:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 22754              		.loc 1 3137 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 496


 22755 009a 084B     		ldr	r3, .L882+12
 22756 009c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 22757 009e 1946     		mov	r1, r3
 22758 00a0 0120     		movs	r0, #1
 22759 00a2 FFF7FEFF 		bl	enable_motor
 22760              	.L881:
3138:..\src/command_processing.c ****     }
3139:..\src/command_processing.c ****     
3140:..\src/command_processing.c **** }
 22761              		.loc 1 3140 0
 22762 00a6 00BF     		nop
 22763 00a8 0837     		adds	r7, r7, #8
 22764              		.cfi_def_cfa_offset 8
 22765 00aa BD46     		mov	sp, r7
 22766              		.cfi_def_cfa_register 13
 22767              		@ sp needed
 22768 00ac 80BD     		pop	{r7, pc}
 22769              	.L883:
 22770 00ae 00BF     		.align	2
 22771              	.L882:
 22772 00b0 00000000 		.word	g_rx
 22773 00b4 00000000 		.word	g_mem
 22774 00b8 00000000 		.word	g_meas
 22775 00bc 00000000 		.word	g_refNew
 22776              		.cfi_endproc
 22777              	.LFE92:
 22778              		.size	cmd_activate, .-cmd_activate
 22779              		.section	.text.cmd_get_activate,"ax",%progbits
 22780              		.align	2
 22781              		.global	cmd_get_activate
 22782              		.thumb
 22783              		.thumb_func
 22784              		.type	cmd_get_activate, %function
 22785              	cmd_get_activate:
 22786              	.LFB93:
3141:..\src/command_processing.c **** 
3142:..\src/command_processing.c **** void cmd_get_activate(){
 22787              		.loc 1 3142 0
 22788              		.cfi_startproc
 22789              		@ args = 0, pretend = 0, frame = 8
 22790              		@ frame_needed = 1, uses_anonymous_args = 0
 22791 0000 80B5     		push	{r7, lr}
 22792              		.cfi_def_cfa_offset 8
 22793              		.cfi_offset 7, -8
 22794              		.cfi_offset 14, -4
 22795 0002 82B0     		sub	sp, sp, #8
 22796              		.cfi_def_cfa_offset 16
 22797 0004 00AF     		add	r7, sp, #0
 22798              		.cfi_def_cfa_register 7
3143:..\src/command_processing.c ****     
3144:..\src/command_processing.c ****     uint8 packet_data[3];
3145:..\src/command_processing.c **** 
3146:..\src/command_processing.c ****     // Header        
3147:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 22799              		.loc 1 3147 0
 22800 0006 8123     		movs	r3, #129
 22801 0008 3B71     		strb	r3, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 497


3148:..\src/command_processing.c ****     
3149:..\src/command_processing.c ****     // Fill payload
3150:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 22802              		.loc 1 3150 0
 22803 000a 124B     		ldr	r3, .L887
 22804 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22805 0010 012B     		cmp	r3, #1
 22806 0012 0BD1     		bne	.L885
3151:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 22807              		.loc 1 3151 0
 22808 0014 104B     		ldr	r3, .L887+4
 22809 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 22810 0018 5B00     		lsls	r3, r3, #1
 22811 001a 5AB2     		sxtb	r2, r3
 22812 001c 0E4B     		ldr	r3, .L887+4
 22813 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22814 0020 5BB2     		sxtb	r3, r3
 22815 0022 1343     		orrs	r3, r3, r2
 22816 0024 5BB2     		sxtb	r3, r3
 22817 0026 DBB2     		uxtb	r3, r3
 22818 0028 7B71     		strb	r3, [r7, #5]
 22819 002a 02E0     		b	.L886
 22820              	.L885:
3152:..\src/command_processing.c ****     } 
3153:..\src/command_processing.c ****     else {
3154:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 22821              		.loc 1 3154 0
 22822 002c 0A4B     		ldr	r3, .L887+4
 22823 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22824 0030 7B71     		strb	r3, [r7, #5]
 22825              	.L886:
3155:..\src/command_processing.c ****     }
3156:..\src/command_processing.c ****     
3157:..\src/command_processing.c ****     // Calculate checksum
3158:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 22826              		.loc 1 3158 0
 22827 0032 3B1D     		adds	r3, r7, #4
 22828 0034 0221     		movs	r1, #2
 22829 0036 1846     		mov	r0, r3
 22830 0038 FFF7FEFF 		bl	LCRChecksum
 22831 003c 0346     		mov	r3, r0
 22832 003e BB71     		strb	r3, [r7, #6]
3159:..\src/command_processing.c ****     
3160:..\src/command_processing.c ****     // Send package to UART
3161:..\src/command_processing.c ****     commWrite(packet_data, 3);
 22833              		.loc 1 3161 0
 22834 0040 3B1D     		adds	r3, r7, #4
 22835 0042 0321     		movs	r1, #3
 22836 0044 1846     		mov	r0, r3
 22837 0046 FFF7FEFF 		bl	commWrite
3162:..\src/command_processing.c **** 
3163:..\src/command_processing.c **** }
 22838              		.loc 1 3163 0
 22839 004a 00BF     		nop
 22840 004c 0837     		adds	r7, r7, #8
 22841              		.cfi_def_cfa_offset 8
 22842 004e BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 498


 22843              		.cfi_def_cfa_register 13
 22844              		@ sp needed
 22845 0050 80BD     		pop	{r7, pc}
 22846              	.L888:
 22847 0052 00BF     		.align	2
 22848              	.L887:
 22849 0054 00000000 		.word	g_mem
 22850 0058 00000000 		.word	g_ref
 22851              		.cfi_endproc
 22852              	.LFE93:
 22853              		.size	cmd_get_activate, .-cmd_get_activate
 22854              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 22855              		.align	2
 22856              		.global	cmd_get_curr_and_meas
 22857              		.thumb
 22858              		.thumb_func
 22859              		.type	cmd_get_curr_and_meas, %function
 22860              	cmd_get_curr_and_meas:
 22861              	.LFB94:
3164:..\src/command_processing.c **** 
3165:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 22862              		.loc 1 3165 0
 22863              		.cfi_startproc
 22864              		@ args = 0, pretend = 0, frame = 16
 22865              		@ frame_needed = 1, uses_anonymous_args = 0
 22866 0000 90B5     		push	{r4, r7, lr}
 22867              		.cfi_def_cfa_offset 12
 22868              		.cfi_offset 4, -12
 22869              		.cfi_offset 7, -8
 22870              		.cfi_offset 14, -4
 22871 0002 85B0     		sub	sp, sp, #20
 22872              		.cfi_def_cfa_offset 32
 22873 0004 00AF     		add	r7, sp, #0
 22874              		.cfi_def_cfa_register 7
3166:..\src/command_processing.c ****     
3167:..\src/command_processing.c ****     uint8 CYDATA index;
3168:..\src/command_processing.c ****     int16 aux_int16;
3169:..\src/command_processing.c ****    
3170:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3171:..\src/command_processing.c ****     
3172:..\src/command_processing.c ****     uint8 packet_data[12]; 
3173:..\src/command_processing.c **** 
3174:..\src/command_processing.c ****     //Header package
3175:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 22875              		.loc 1 3175 0
 22876 0006 8623     		movs	r3, #134
 22877 0008 3B70     		strb	r3, [r7]
3176:..\src/command_processing.c **** 
3177:..\src/command_processing.c ****     // Currents
3178:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 22878              		.loc 1 3178 0
 22879 000a 494B     		ldr	r3, .L894
 22880 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22881 0010 1946     		mov	r1, r3
 22882 0012 484A     		ldr	r2, .L894+4
 22883 0014 0B46     		mov	r3, r1
 22884 0016 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 499


 22885 0018 0B44     		add	r3, r3, r1
 22886 001a 1B01     		lsls	r3, r3, #4
 22887 001c 1344     		add	r3, r3, r2
 22888 001e 0C33     		adds	r3, r3, #12
 22889 0020 1B68     		ldr	r3, [r3]
 22890 0022 1BB2     		sxth	r3, r3
 22891 0024 BB81     		strh	r3, [r7, #12]	@ movhi
3179:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 22892              		.loc 1 3179 0
 22893 0026 07F10C03 		add	r3, r7, #12
 22894 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22895 002c BB70     		strb	r3, [r7, #2]
3180:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 22896              		.loc 1 3180 0
 22897 002e 07F10C03 		add	r3, r7, #12
 22898 0032 0133     		adds	r3, r3, #1
 22899 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22900 0036 7B70     		strb	r3, [r7, #1]
3181:..\src/command_processing.c ****     
3182:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 22901              		.loc 1 3182 0
 22902 0038 3F4B     		ldr	r3, .L894+8
 22903 003a 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22904 003e 012B     		cmp	r3, #1
 22905 0040 0ED1     		bne	.L890
3183:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 22906              		.loc 1 3183 0
 22907 0042 3B4B     		ldr	r3, .L894
 22908 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22909 0048 1946     		mov	r1, r3
 22910 004a 3A4A     		ldr	r2, .L894+4
 22911 004c 0B46     		mov	r3, r1
 22912 004e 5B00     		lsls	r3, r3, #1
 22913 0050 0B44     		add	r3, r3, r1
 22914 0052 1B01     		lsls	r3, r3, #4
 22915 0054 1344     		add	r3, r3, r2
 22916 0056 0C33     		adds	r3, r3, #12
 22917 0058 1B68     		ldr	r3, [r3]
 22918 005a 1BB2     		sxth	r3, r3
 22919 005c BB81     		strh	r3, [r7, #12]	@ movhi
 22920 005e 0DE0     		b	.L891
 22921              	.L890:
3184:..\src/command_processing.c ****     }
3185:..\src/command_processing.c ****     else {
3186:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 22922              		.loc 1 3186 0
 22923 0060 334B     		ldr	r3, .L894
 22924 0062 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22925 0066 1946     		mov	r1, r3
 22926 0068 324A     		ldr	r2, .L894+4
 22927 006a 0B46     		mov	r3, r1
 22928 006c 5B00     		lsls	r3, r3, #1
 22929 006e 0B44     		add	r3, r3, r1
 22930 0070 1B01     		lsls	r3, r3, #4
 22931 0072 1344     		add	r3, r3, r2
 22932 0074 1033     		adds	r3, r3, #16
 22933 0076 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 500


 22934 0078 1BB2     		sxth	r3, r3
 22935 007a BB81     		strh	r3, [r7, #12]	@ movhi
 22936              	.L891:
3187:..\src/command_processing.c ****     }
3188:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 22937              		.loc 1 3188 0
 22938 007c 07F10C03 		add	r3, r7, #12
 22939 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22940 0082 3B71     		strb	r3, [r7, #4]
3189:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 22941              		.loc 1 3189 0
 22942 0084 07F10C03 		add	r3, r7, #12
 22943 0088 0133     		adds	r3, r3, #1
 22944 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22945 008c FB70     		strb	r3, [r7, #3]
3190:..\src/command_processing.c **** 
3191:..\src/command_processing.c ****     // Positions
3192:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22946              		.loc 1 3192 0
 22947 008e 0323     		movs	r3, #3
 22948 0090 FB73     		strb	r3, [r7, #15]
 22949 0092 37E0     		b	.L892
 22950              	.L893:
3193:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22951              		.loc 1 3193 0
 22952 0094 264B     		ldr	r3, .L894
 22953 0096 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22954 009a 1846     		mov	r0, r3
 22955 009c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22956 009e 2549     		ldr	r1, .L894+4
 22957 00a0 0346     		mov	r3, r0
 22958 00a2 5B00     		lsls	r3, r3, #1
 22959 00a4 0344     		add	r3, r3, r0
 22960 00a6 9B00     		lsls	r3, r3, #2
 22961 00a8 1344     		add	r3, r3, r2
 22962 00aa 51F82320 		ldr	r2, [r1, r3, lsl #2]
 22963 00ae 204B     		ldr	r3, .L894
 22964 00b0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22965 00b4 1C46     		mov	r4, r3
 22966 00b6 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22967 00b8 1D48     		ldr	r0, .L894
 22968 00ba 2346     		mov	r3, r4
 22969 00bc 5B00     		lsls	r3, r3, #1
 22970 00be 2344     		add	r3, r3, r4
 22971 00c0 1B01     		lsls	r3, r3, #4
 22972 00c2 0344     		add	r3, r3, r0
 22973 00c4 0B44     		add	r3, r3, r1
 22974 00c6 03F29513 		addw	r3, r3, #405
 22975 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22976 00cc 42FA03F3 		asr	r3, r2, r3
 22977 00d0 1BB2     		sxth	r3, r3
 22978 00d2 BB81     		strh	r3, [r7, #12]	@ movhi
3194:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 22979              		.loc 1 3194 0
 22980 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22981 00d6 5B00     		lsls	r3, r3, #1
 22982 00d8 0633     		adds	r3, r3, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 501


 22983 00da 07F10C02 		add	r2, r7, #12
 22984 00de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22985 00e0 07F11001 		add	r1, r7, #16
 22986 00e4 0B44     		add	r3, r3, r1
 22987 00e6 03F8102C 		strb	r2, [r3, #-16]
3195:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 22988              		.loc 1 3195 0
 22989 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22990 00ec 5B00     		lsls	r3, r3, #1
 22991 00ee 5A1D     		adds	r2, r3, #5
 22992 00f0 07F10C03 		add	r3, r7, #12
 22993 00f4 0133     		adds	r3, r3, #1
 22994 00f6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22995 00f8 07F11003 		add	r3, r7, #16
 22996 00fc 1344     		add	r3, r3, r2
 22997 00fe 0A46     		mov	r2, r1
 22998 0100 03F8102C 		strb	r2, [r3, #-16]
 22999              	.L892:
3192:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23000              		.loc 1 3192 0 discriminator 1
 23001 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23002 0106 5A1E     		subs	r2, r3, #1
 23003 0108 FA73     		strb	r2, [r7, #15]
 23004 010a 002B     		cmp	r3, #0
 23005 010c C2D1     		bne	.L893
3196:..\src/command_processing.c ****     }
3197:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3198:..\src/command_processing.c ****         
3199:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 23006              		.loc 1 3199 0
 23007 010e 3B46     		mov	r3, r7
 23008 0110 0B21     		movs	r1, #11
 23009 0112 1846     		mov	r0, r3
 23010 0114 FFF7FEFF 		bl	LCRChecksum
 23011 0118 0346     		mov	r3, r0
 23012 011a FB72     		strb	r3, [r7, #11]
3200:..\src/command_processing.c ****     commWrite(packet_data, 12);
 23013              		.loc 1 3200 0
 23014 011c 3B46     		mov	r3, r7
 23015 011e 0C21     		movs	r1, #12
 23016 0120 1846     		mov	r0, r3
 23017 0122 FFF7FEFF 		bl	commWrite
3201:..\src/command_processing.c ****    
3202:..\src/command_processing.c **** }
 23018              		.loc 1 3202 0
 23019 0126 00BF     		nop
 23020 0128 1437     		adds	r7, r7, #20
 23021              		.cfi_def_cfa_offset 12
 23022 012a BD46     		mov	sp, r7
 23023              		.cfi_def_cfa_register 13
 23024              		@ sp needed
 23025 012c 90BD     		pop	{r4, r7, pc}
 23026              	.L895:
 23027 012e 00BF     		.align	2
 23028              	.L894:
 23029 0130 00000000 		.word	g_mem
 23030 0134 00000000 		.word	g_measOld
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 502


 23031 0138 00000000 		.word	c_mem
 23032              		.cfi_endproc
 23033              	.LFE94:
 23034              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 23035              		.section	.text.cmd_get_currents,"ax",%progbits
 23036              		.align	2
 23037              		.global	cmd_get_currents
 23038              		.thumb
 23039              		.thumb_func
 23040              		.type	cmd_get_currents, %function
 23041              	cmd_get_currents:
 23042              	.LFB95:
3203:..\src/command_processing.c **** 
3204:..\src/command_processing.c **** void cmd_get_currents(){
 23043              		.loc 1 3204 0
 23044              		.cfi_startproc
 23045              		@ args = 0, pretend = 0, frame = 16
 23046              		@ frame_needed = 1, uses_anonymous_args = 0
 23047 0000 80B5     		push	{r7, lr}
 23048              		.cfi_def_cfa_offset 8
 23049              		.cfi_offset 7, -8
 23050              		.cfi_offset 14, -4
 23051 0002 84B0     		sub	sp, sp, #16
 23052              		.cfi_def_cfa_offset 24
 23053 0004 00AF     		add	r7, sp, #0
 23054              		.cfi_def_cfa_register 7
3205:..\src/command_processing.c ****     
3206:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3207:..\src/command_processing.c ****     
3208:..\src/command_processing.c ****     uint8 packet_data[6]; 
3209:..\src/command_processing.c ****     int16 aux_int16;
3210:..\src/command_processing.c ****     
3211:..\src/command_processing.c ****     //Header package
3212:..\src/command_processing.c **** 
3213:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 23055              		.loc 1 3213 0
 23056 0006 8523     		movs	r3, #133
 23057 0008 3B72     		strb	r3, [r7, #8]
3214:..\src/command_processing.c **** 
3215:..\src/command_processing.c ****     // Currents
3216:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 23058              		.loc 1 3216 0
 23059 000a 284B     		ldr	r3, .L899
 23060 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23061 0010 1946     		mov	r1, r3
 23062 0012 274A     		ldr	r2, .L899+4
 23063 0014 0B46     		mov	r3, r1
 23064 0016 5B00     		lsls	r3, r3, #1
 23065 0018 0B44     		add	r3, r3, r1
 23066 001a 1B01     		lsls	r3, r3, #4
 23067 001c 1344     		add	r3, r3, r2
 23068 001e 0C33     		adds	r3, r3, #12
 23069 0020 1B68     		ldr	r3, [r3]
 23070 0022 1BB2     		sxth	r3, r3
 23071 0024 FB80     		strh	r3, [r7, #6]	@ movhi
3217:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23072              		.loc 1 3217 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 503


 23073 0026 BB1D     		adds	r3, r7, #6
 23074 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23075 002a BB72     		strb	r3, [r7, #10]
3218:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23076              		.loc 1 3218 0
 23077 002c BB1D     		adds	r3, r7, #6
 23078 002e 0133     		adds	r3, r3, #1
 23079 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23080 0032 7B72     		strb	r3, [r7, #9]
3219:..\src/command_processing.c ****     
3220:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23081              		.loc 1 3220 0
 23082 0034 1F4B     		ldr	r3, .L899+8
 23083 0036 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23084 003a 012B     		cmp	r3, #1
 23085 003c 0ED1     		bne	.L897
3221:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 23086              		.loc 1 3221 0
 23087 003e 1B4B     		ldr	r3, .L899
 23088 0040 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23089 0044 1946     		mov	r1, r3
 23090 0046 1A4A     		ldr	r2, .L899+4
 23091 0048 0B46     		mov	r3, r1
 23092 004a 5B00     		lsls	r3, r3, #1
 23093 004c 0B44     		add	r3, r3, r1
 23094 004e 1B01     		lsls	r3, r3, #4
 23095 0050 1344     		add	r3, r3, r2
 23096 0052 0C33     		adds	r3, r3, #12
 23097 0054 1B68     		ldr	r3, [r3]
 23098 0056 1BB2     		sxth	r3, r3
 23099 0058 FB80     		strh	r3, [r7, #6]	@ movhi
 23100 005a 0DE0     		b	.L898
 23101              	.L897:
3222:..\src/command_processing.c ****     }
3223:..\src/command_processing.c ****     else {
3224:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23102              		.loc 1 3224 0
 23103 005c 134B     		ldr	r3, .L899
 23104 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23105 0062 1946     		mov	r1, r3
 23106 0064 124A     		ldr	r2, .L899+4
 23107 0066 0B46     		mov	r3, r1
 23108 0068 5B00     		lsls	r3, r3, #1
 23109 006a 0B44     		add	r3, r3, r1
 23110 006c 1B01     		lsls	r3, r3, #4
 23111 006e 1344     		add	r3, r3, r2
 23112 0070 1033     		adds	r3, r3, #16
 23113 0072 1B68     		ldr	r3, [r3]
 23114 0074 1BB2     		sxth	r3, r3
 23115 0076 FB80     		strh	r3, [r7, #6]	@ movhi
 23116              	.L898:
3225:..\src/command_processing.c ****     }
3226:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23117              		.loc 1 3226 0
 23118 0078 BB1D     		adds	r3, r7, #6
 23119 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23120 007c 3B73     		strb	r3, [r7, #12]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 504


3227:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23121              		.loc 1 3227 0
 23122 007e BB1D     		adds	r3, r7, #6
 23123 0080 0133     		adds	r3, r3, #1
 23124 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23125 0084 FB72     		strb	r3, [r7, #11]
3228:..\src/command_processing.c **** 
3229:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3230:..\src/command_processing.c **** 
3231:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23126              		.loc 1 3231 0
 23127 0086 07F10803 		add	r3, r7, #8
 23128 008a 0521     		movs	r1, #5
 23129 008c 1846     		mov	r0, r3
 23130 008e FFF7FEFF 		bl	LCRChecksum
 23131 0092 0346     		mov	r3, r0
 23132 0094 7B73     		strb	r3, [r7, #13]
3232:..\src/command_processing.c ****     
3233:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23133              		.loc 1 3233 0
 23134 0096 07F10803 		add	r3, r7, #8
 23135 009a 0621     		movs	r1, #6
 23136 009c 1846     		mov	r0, r3
 23137 009e FFF7FEFF 		bl	commWrite
3234:..\src/command_processing.c **** }
 23138              		.loc 1 3234 0
 23139 00a2 00BF     		nop
 23140 00a4 1037     		adds	r7, r7, #16
 23141              		.cfi_def_cfa_offset 8
 23142 00a6 BD46     		mov	sp, r7
 23143              		.cfi_def_cfa_register 13
 23144              		@ sp needed
 23145 00a8 80BD     		pop	{r7, pc}
 23146              	.L900:
 23147 00aa 00BF     		.align	2
 23148              	.L899:
 23149 00ac 00000000 		.word	g_mem
 23150 00b0 00000000 		.word	g_measOld
 23151 00b4 00000000 		.word	c_mem
 23152              		.cfi_endproc
 23153              	.LFE95:
 23154              		.size	cmd_get_currents, .-cmd_get_currents
 23155              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 23156              		.align	2
 23157              		.global	cmd_get_currents_for_cuff
 23158              		.thumb
 23159              		.thumb_func
 23160              		.type	cmd_get_currents_for_cuff, %function
 23161              	cmd_get_currents_for_cuff:
 23162              	.LFB96:
3235:..\src/command_processing.c **** 
3236:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 23163              		.loc 1 3236 0
 23164              		.cfi_startproc
 23165              		@ args = 0, pretend = 0, frame = 8
 23166              		@ frame_needed = 1, uses_anonymous_args = 0
 23167 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 505


 23168              		.cfi_def_cfa_offset 8
 23169              		.cfi_offset 7, -8
 23170              		.cfi_offset 14, -4
 23171 0002 82B0     		sub	sp, sp, #8
 23172              		.cfi_def_cfa_offset 16
 23173 0004 00AF     		add	r7, sp, #0
 23174              		.cfi_def_cfa_register 7
3237:..\src/command_processing.c ****     
3238:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3239:..\src/command_processing.c ****     
3240:..\src/command_processing.c ****     uint8 packet_data[4]; 
3241:..\src/command_processing.c ****     int16 aux_int16;
3242:..\src/command_processing.c ****     
3243:..\src/command_processing.c ****     //Header package
3244:..\src/command_processing.c **** 
3245:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 23175              		.loc 1 3245 0
 23176 0006 8E23     		movs	r3, #142
 23177 0008 3B71     		strb	r3, [r7, #4]
3246:..\src/command_processing.c **** 
3247:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 23178              		.loc 1 3247 0
 23179 000a 124B     		ldr	r3, .L902
 23180 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23181 0010 1946     		mov	r1, r3
 23182 0012 114A     		ldr	r2, .L902+4
 23183 0014 0B46     		mov	r3, r1
 23184 0016 5B00     		lsls	r3, r3, #1
 23185 0018 0B44     		add	r3, r3, r1
 23186 001a 1B01     		lsls	r3, r3, #4
 23187 001c 1344     		add	r3, r3, r2
 23188 001e 1033     		adds	r3, r3, #16
 23189 0020 1B68     		ldr	r3, [r3]
 23190 0022 1BB2     		sxth	r3, r3
 23191 0024 7B80     		strh	r3, [r7, #2]	@ movhi
3248:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23192              		.loc 1 3248 0
 23193 0026 BB1C     		adds	r3, r7, #2
 23194 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23195 002a BB71     		strb	r3, [r7, #6]
3249:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23196              		.loc 1 3249 0
 23197 002c BB1C     		adds	r3, r7, #2
 23198 002e 0133     		adds	r3, r3, #1
 23199 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23200 0032 7B71     		strb	r3, [r7, #5]
3250:..\src/command_processing.c **** 
3251:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3252:..\src/command_processing.c **** 
3253:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 23201              		.loc 1 3253 0
 23202 0034 3B1D     		adds	r3, r7, #4
 23203 0036 0321     		movs	r1, #3
 23204 0038 1846     		mov	r0, r3
 23205 003a FFF7FEFF 		bl	LCRChecksum
 23206 003e 0346     		mov	r3, r0
 23207 0040 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 506


3254:..\src/command_processing.c ****     
3255:..\src/command_processing.c ****     commWrite_to_cuff(packet_data, 4);
 23208              		.loc 1 3255 0
 23209 0042 3B1D     		adds	r3, r7, #4
 23210 0044 0421     		movs	r1, #4
 23211 0046 1846     		mov	r0, r3
 23212 0048 FFF7FEFF 		bl	commWrite_to_cuff
3256:..\src/command_processing.c **** }
 23213              		.loc 1 3256 0
 23214 004c 00BF     		nop
 23215 004e 0837     		adds	r7, r7, #8
 23216              		.cfi_def_cfa_offset 8
 23217 0050 BD46     		mov	sp, r7
 23218              		.cfi_def_cfa_register 13
 23219              		@ sp needed
 23220 0052 80BD     		pop	{r7, pc}
 23221              	.L903:
 23222              		.align	2
 23223              	.L902:
 23224 0054 00000000 		.word	g_mem
 23225 0058 00000000 		.word	g_measOld
 23226              		.cfi_endproc
 23227              	.LFE96:
 23228              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 23229              		.section	.text.cmd_set_baudrate,"ax",%progbits
 23230              		.align	2
 23231              		.global	cmd_set_baudrate
 23232              		.thumb
 23233              		.thumb_func
 23234              		.type	cmd_set_baudrate, %function
 23235              	cmd_set_baudrate:
 23236              	.LFB97:
3257:..\src/command_processing.c **** 
3258:..\src/command_processing.c **** void cmd_set_baudrate(){
 23237              		.loc 1 3258 0
 23238              		.cfi_startproc
 23239              		@ args = 0, pretend = 0, frame = 0
 23240              		@ frame_needed = 1, uses_anonymous_args = 0
 23241 0000 80B5     		push	{r7, lr}
 23242              		.cfi_def_cfa_offset 8
 23243              		.cfi_offset 7, -8
 23244              		.cfi_offset 14, -4
 23245 0002 00AF     		add	r7, sp, #0
 23246              		.cfi_def_cfa_register 7
3259:..\src/command_processing.c ****     
3260:..\src/command_processing.c ****     // Set BaudRate
3261:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 23247              		.loc 1 3261 0
 23248 0004 094B     		ldr	r3, .L909
 23249 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 23250 0008 094B     		ldr	r3, .L909+4
 23251 000a 83F8AA20 		strb	r2, [r3, #170]
3262:..\src/command_processing.c ****     
3263:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 23252              		.loc 1 3263 0
 23253 000e 074B     		ldr	r3, .L909
 23254 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 507


 23255 0012 0D2B     		cmp	r3, #13
 23256 0014 04D1     		bne	.L908
3264:..\src/command_processing.c ****         case 13:
3265:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 23257              		.loc 1 3265 0
 23258 0016 0121     		movs	r1, #1
 23259 0018 0C20     		movs	r0, #12
 23260 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3266:..\src/command_processing.c ****             break;
 23261              		.loc 1 3266 0
 23262 001e 03E0     		b	.L907
 23263              	.L908:
3267:..\src/command_processing.c ****         default:
3268:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 23264              		.loc 1 3268 0
 23265 0020 0121     		movs	r1, #1
 23266 0022 0220     		movs	r0, #2
 23267 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 23268              	.L907:
3269:..\src/command_processing.c ****     }
3270:..\src/command_processing.c **** }
 23269              		.loc 1 3270 0
 23270 0028 00BF     		nop
 23271 002a 80BD     		pop	{r7, pc}
 23272              	.L910:
 23273              		.align	2
 23274              	.L909:
 23275 002c 00000000 		.word	g_rx
 23276 0030 00000000 		.word	c_mem
 23277              		.cfi_endproc
 23278              	.LFE97:
 23279              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 23280              		.section	.text.cmd_ping,"ax",%progbits
 23281              		.align	2
 23282              		.global	cmd_ping
 23283              		.thumb
 23284              		.thumb_func
 23285              		.type	cmd_ping, %function
 23286              	cmd_ping:
 23287              	.LFB98:
3271:..\src/command_processing.c **** 
3272:..\src/command_processing.c **** void cmd_ping(){
 23288              		.loc 1 3272 0
 23289              		.cfi_startproc
 23290              		@ args = 0, pretend = 0, frame = 8
 23291              		@ frame_needed = 1, uses_anonymous_args = 0
 23292 0000 80B5     		push	{r7, lr}
 23293              		.cfi_def_cfa_offset 8
 23294              		.cfi_offset 7, -8
 23295              		.cfi_offset 14, -4
 23296 0002 82B0     		sub	sp, sp, #8
 23297              		.cfi_def_cfa_offset 16
 23298 0004 00AF     		add	r7, sp, #0
 23299              		.cfi_def_cfa_register 7
3273:..\src/command_processing.c **** 
3274:..\src/command_processing.c ****     uint8 packet_data[2];
3275:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 508


3276:..\src/command_processing.c ****     // Header
3277:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 23300              		.loc 1 3277 0
 23301 0006 0023     		movs	r3, #0
 23302 0008 3B71     		strb	r3, [r7, #4]
3278:..\src/command_processing.c ****     
3279:..\src/command_processing.c ****     // Load Payload
3280:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 23303              		.loc 1 3280 0
 23304 000a 0023     		movs	r3, #0
 23305 000c 7B71     		strb	r3, [r7, #5]
3281:..\src/command_processing.c **** 
3282:..\src/command_processing.c ****     // Send Package to uart
3283:..\src/command_processing.c ****     commWrite(packet_data, 2);
 23306              		.loc 1 3283 0
 23307 000e 3B1D     		adds	r3, r7, #4
 23308 0010 0221     		movs	r1, #2
 23309 0012 1846     		mov	r0, r3
 23310 0014 FFF7FEFF 		bl	commWrite
3284:..\src/command_processing.c **** }
 23311              		.loc 1 3284 0
 23312 0018 00BF     		nop
 23313 001a 0837     		adds	r7, r7, #8
 23314              		.cfi_def_cfa_offset 8
 23315 001c BD46     		mov	sp, r7
 23316              		.cfi_def_cfa_register 13
 23317              		@ sp needed
 23318 001e 80BD     		pop	{r7, pc}
 23319              		.cfi_endproc
 23320              	.LFE98:
 23321              		.size	cmd_ping, .-cmd_ping
 23322              		.section	.text.cmd_get_inputs,"ax",%progbits
 23323              		.align	2
 23324              		.global	cmd_get_inputs
 23325              		.thumb
 23326              		.thumb_func
 23327              		.type	cmd_get_inputs, %function
 23328              	cmd_get_inputs:
 23329              	.LFB99:
3285:..\src/command_processing.c **** 
3286:..\src/command_processing.c **** void cmd_get_inputs(){
 23330              		.loc 1 3286 0
 23331              		.cfi_startproc
 23332              		@ args = 0, pretend = 0, frame = 16
 23333              		@ frame_needed = 1, uses_anonymous_args = 0
 23334 0000 80B5     		push	{r7, lr}
 23335              		.cfi_def_cfa_offset 8
 23336              		.cfi_offset 7, -8
 23337              		.cfi_offset 14, -4
 23338 0002 84B0     		sub	sp, sp, #16
 23339              		.cfi_def_cfa_offset 24
 23340 0004 00AF     		add	r7, sp, #0
 23341              		.cfi_def_cfa_register 7
3287:..\src/command_processing.c **** 
3288:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3289:..\src/command_processing.c **** 
3290:..\src/command_processing.c ****     uint8 packet_data[6]; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 509


3291:..\src/command_processing.c ****     int16 aux_int16;
3292:..\src/command_processing.c ****     
3293:..\src/command_processing.c ****     //Header package
3294:..\src/command_processing.c **** 
3295:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 23342              		.loc 1 3295 0
 23343 0006 8323     		movs	r3, #131
 23344 0008 3B72     		strb	r3, [r7, #8]
3296:..\src/command_processing.c ****         
3297:..\src/command_processing.c ****     aux_int16 = (int16) (g_refOld[0].pos  >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 23345              		.loc 1 3297 0
 23346 000a 164B     		ldr	r3, .L913
 23347 000c 1A68     		ldr	r2, [r3]
 23348 000e 164B     		ldr	r3, .L913+4
 23349 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23350 0014 1846     		mov	r0, r3
 23351 0016 1449     		ldr	r1, .L913+4
 23352 0018 0346     		mov	r3, r0
 23353 001a 5B00     		lsls	r3, r3, #1
 23354 001c 0344     		add	r3, r3, r0
 23355 001e 1B01     		lsls	r3, r3, #4
 23356 0020 0B44     		add	r3, r3, r1
 23357 0022 03F29513 		addw	r3, r3, #405
 23358 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23359 0028 42FA03F3 		asr	r3, r2, r3
 23360 002c 1BB2     		sxth	r3, r3
 23361 002e FB80     		strh	r3, [r7, #6]	@ movhi
3298:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23362              		.loc 1 3298 0
 23363 0030 BB1D     		adds	r3, r7, #6
 23364 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23365 0034 BB72     		strb	r3, [r7, #10]
3299:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23366              		.loc 1 3299 0
 23367 0036 BB1D     		adds	r3, r7, #6
 23368 0038 0133     		adds	r3, r3, #1
 23369 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23370 003c 7B72     		strb	r3, [r7, #9]
3300:..\src/command_processing.c ****     
3301:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3302:..\src/command_processing.c **** 
3303:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 23371              		.loc 1 3303 0
 23372 003e 07F10803 		add	r3, r7, #8
 23373 0042 0521     		movs	r1, #5
 23374 0044 1846     		mov	r0, r3
 23375 0046 FFF7FEFF 		bl	LCRChecksum
 23376 004a 0346     		mov	r3, r0
 23377 004c 7B73     		strb	r3, [r7, #13]
3304:..\src/command_processing.c **** 
3305:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23378              		.loc 1 3305 0
 23379 004e 07F10803 		add	r3, r7, #8
 23380 0052 0621     		movs	r1, #6
 23381 0054 1846     		mov	r0, r3
 23382 0056 FFF7FEFF 		bl	commWrite
3306:..\src/command_processing.c **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 510


 23383              		.loc 1 3306 0
 23384 005a 00BF     		nop
 23385 005c 1037     		adds	r7, r7, #16
 23386              		.cfi_def_cfa_offset 8
 23387 005e BD46     		mov	sp, r7
 23388              		.cfi_def_cfa_register 13
 23389              		@ sp needed
 23390 0060 80BD     		pop	{r7, pc}
 23391              	.L914:
 23392 0062 00BF     		.align	2
 23393              	.L913:
 23394 0064 00000000 		.word	g_refOld
 23395 0068 00000000 		.word	g_mem
 23396              		.cfi_endproc
 23397              	.LFE99:
 23398              		.size	cmd_get_inputs, .-cmd_get_inputs
 23399              		.section	.text.cmd_store_params,"ax",%progbits
 23400              		.align	2
 23401              		.global	cmd_store_params
 23402              		.thumb
 23403              		.thumb_func
 23404              		.type	cmd_store_params, %function
 23405              	cmd_store_params:
 23406              	.LFB100:
3307:..\src/command_processing.c **** 
3308:..\src/command_processing.c **** void cmd_store_params(){
 23407              		.loc 1 3308 0
 23408              		.cfi_startproc
 23409              		@ args = 0, pretend = 0, frame = 16
 23410              		@ frame_needed = 1, uses_anonymous_args = 0
 23411 0000 80B5     		push	{r7, lr}
 23412              		.cfi_def_cfa_offset 8
 23413              		.cfi_offset 7, -8
 23414              		.cfi_offset 14, -4
 23415 0002 84B0     		sub	sp, sp, #16
 23416              		.cfi_def_cfa_offset 24
 23417 0004 00AF     		add	r7, sp, #0
 23418              		.cfi_def_cfa_register 7
3309:..\src/command_processing.c ****     
3310:..\src/command_processing.c ****     // Check input mode enabled
3311:..\src/command_processing.c ****     uint32 off_1;
3312:..\src/command_processing.c ****     float mult_1;
3313:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 23419              		.loc 1 3313 0
 23420 0006 0223     		movs	r3, #2
 23421 0008 FB73     		strb	r3, [r7, #15]
3314:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3315:..\src/command_processing.c ****     uint8 CYDATA old_id;
3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 23422              		.loc 1 3317 0
 23423 000a 674B     		ldr	r3, .L926
 23424 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 23425 0010 002B     		cmp	r3, #0
 23426 0012 7CD1     		bne	.L916
3318:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 23427              		.loc 1 3318 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 511


 23428 0014 644B     		ldr	r3, .L926
 23429 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23430 001a 1946     		mov	r1, r3
 23431 001c 624A     		ldr	r2, .L926
 23432 001e 0B46     		mov	r3, r1
 23433 0020 5B00     		lsls	r3, r3, #1
 23434 0022 0B44     		add	r3, r3, r1
 23435 0024 1B01     		lsls	r3, r3, #4
 23436 0026 1344     		add	r3, r3, r2
 23437 0028 03F5CC73 		add	r3, r3, #408
 23438 002c 1B68     		ldr	r3, [r3]
 23439 002e BB60     		str	r3, [r7, #8]
3319:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 23440              		.loc 1 3319 0
 23441 0030 5D4B     		ldr	r3, .L926
 23442 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23443 0036 1946     		mov	r1, r3
 23444 0038 5B4A     		ldr	r2, .L926
 23445 003a 0B46     		mov	r3, r1
 23446 003c 5B00     		lsls	r3, r3, #1
 23447 003e 0B44     		add	r3, r3, r1
 23448 0040 1B01     		lsls	r3, r3, #4
 23449 0042 1344     		add	r3, r3, r2
 23450 0044 03F5D273 		add	r3, r3, #420
 23451 0048 1B68     		ldr	r3, [r3]	@ float
 23452 004a 7B60     		str	r3, [r7, #4]	@ float
3320:..\src/command_processing.c **** 
3321:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 23453              		.loc 1 3321 0
 23454 004c 574B     		ldr	r3, .L926+4
 23455 004e 1B68     		ldr	r3, [r3]
 23456 0050 1846     		mov	r0, r3
 23457 0052 FFF7FEFF 		bl	__aeabi_i2f
 23458 0056 0346     		mov	r3, r0
 23459 0058 7968     		ldr	r1, [r7, #4]	@ float
 23460 005a 1846     		mov	r0, r3
 23461 005c FFF7FEFF 		bl	__aeabi_fdiv
 23462 0060 0346     		mov	r3, r0
 23463 0062 1846     		mov	r0, r3
 23464 0064 FFF7FEFF 		bl	__aeabi_f2iz
 23465 0068 0246     		mov	r2, r0
 23466 006a 504B     		ldr	r3, .L926+4
 23467 006c 1A60     		str	r2, [r3]
3322:..\src/command_processing.c **** 
3323:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 23468              		.loc 1 3323 0
 23469 006e 4F4B     		ldr	r3, .L926+4
 23470 0070 1B68     		ldr	r3, [r3]
 23471 0072 1846     		mov	r0, r3
 23472 0074 FFF7FEFF 		bl	__aeabi_i2f
 23473 0078 4B4B     		ldr	r3, .L926
 23474 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23475 007e 1946     		mov	r1, r3
 23476 0080 4B4A     		ldr	r2, .L926+8
 23477 0082 0B46     		mov	r3, r1
 23478 0084 5B00     		lsls	r3, r3, #1
 23479 0086 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 512


 23480 0088 1B01     		lsls	r3, r3, #4
 23481 008a 1344     		add	r3, r3, r2
 23482 008c 03F5D273 		add	r3, r3, #420
 23483 0090 1B68     		ldr	r3, [r3]	@ float
 23484 0092 1946     		mov	r1, r3
 23485 0094 FFF7FEFF 		bl	__aeabi_fmul
 23486 0098 0346     		mov	r3, r0
 23487 009a 1846     		mov	r0, r3
 23488 009c FFF7FEFF 		bl	__aeabi_f2iz
 23489 00a0 0246     		mov	r2, r0
 23490 00a2 424B     		ldr	r3, .L926+4
 23491 00a4 1A60     		str	r2, [r3]
3324:..\src/command_processing.c **** 
3325:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 23492              		.loc 1 3325 0
 23493 00a6 414B     		ldr	r3, .L926+4
 23494 00a8 1B68     		ldr	r3, [r3]
 23495 00aa 1846     		mov	r0, r3
 23496 00ac 3E4B     		ldr	r3, .L926
 23497 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23498 00b2 1946     		mov	r1, r3
 23499 00b4 3E4A     		ldr	r2, .L926+8
 23500 00b6 0B46     		mov	r3, r1
 23501 00b8 5B00     		lsls	r3, r3, #1
 23502 00ba 0B44     		add	r3, r3, r1
 23503 00bc 1B01     		lsls	r3, r3, #4
 23504 00be 1344     		add	r3, r3, r2
 23505 00c0 03F5CC73 		add	r3, r3, #408
 23506 00c4 1B68     		ldr	r3, [r3]
 23507 00c6 1A46     		mov	r2, r3
 23508 00c8 BB68     		ldr	r3, [r7, #8]
 23509 00ca D31A     		subs	r3, r2, r3
 23510 00cc 0344     		add	r3, r3, r0
 23511 00ce 1A46     		mov	r2, r3
 23512 00d0 364B     		ldr	r3, .L926+4
 23513 00d2 1A60     		str	r2, [r3]
3326:..\src/command_processing.c ****         
3327:..\src/command_processing.c ****         // Check position Limits
3328:..\src/command_processing.c **** 
3329:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 23514              		.loc 1 3329 0
 23515 00d4 344B     		ldr	r3, .L926
 23516 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 23517 00da 002B     		cmp	r3, #0
 23518 00dc 17D0     		beq	.L916
3330:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 23519              		.loc 1 3330 0
 23520 00de 334B     		ldr	r3, .L926+4
 23521 00e0 1A68     		ldr	r2, [r3]
 23522 00e2 314B     		ldr	r3, .L926
 23523 00e4 D3F8E430 		ldr	r3, [r3, #228]
 23524 00e8 9A42     		cmp	r2, r3
 23525 00ea 04DA     		bge	.L917
3331:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 23526              		.loc 1 3331 0
 23527 00ec 2E4B     		ldr	r3, .L926
 23528 00ee D3F8E430 		ldr	r3, [r3, #228]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 513


 23529 00f2 2E4A     		ldr	r2, .L926+4
 23530 00f4 1360     		str	r3, [r2]
 23531              	.L917:
3332:..\src/command_processing.c **** 
3333:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 23532              		.loc 1 3333 0
 23533 00f6 2D4B     		ldr	r3, .L926+4
 23534 00f8 1A68     		ldr	r2, [r3]
 23535 00fa 2B4B     		ldr	r3, .L926
 23536 00fc D3F8E830 		ldr	r3, [r3, #232]
 23537 0100 9A42     		cmp	r2, r3
 23538 0102 04DD     		ble	.L916
3334:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 23539              		.loc 1 3334 0
 23540 0104 284B     		ldr	r3, .L926
 23541 0106 D3F8E830 		ldr	r3, [r3, #232]
 23542 010a 284A     		ldr	r2, .L926+4
 23543 010c 1360     		str	r3, [r2]
 23544              	.L916:
3335:..\src/command_processing.c ****         }
3336:..\src/command_processing.c ****     }
3337:..\src/command_processing.c ****     
3338:..\src/command_processing.c ****     // If SD is used, create new param and data file
3339:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23545              		.loc 1 3339 0
 23546 010e 264B     		ldr	r3, .L926
 23547 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23548 0114 012B     		cmp	r3, #1
 23549 0116 06D1     		bne	.L918
3340:..\src/command_processing.c ****         FS_FClose(pFile);
 23550              		.loc 1 3340 0
 23551 0118 264B     		ldr	r3, .L926+12
 23552 011a 1B68     		ldr	r3, [r3]
 23553 011c 1846     		mov	r0, r3
 23554 011e FFF7FEFF 		bl	FS_FClose
3341:..\src/command_processing.c ****         
3342:..\src/command_processing.c ****         InitSD_FS();
 23555              		.loc 1 3342 0
 23556 0122 FFF7FEFF 		bl	InitSD_FS
 23557              	.L918:
3343:..\src/command_processing.c ****     }
3344:..\src/command_processing.c ****    
3345:..\src/command_processing.c ****     // Store params 
3346:..\src/command_processing.c **** 
3347:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 23558              		.loc 1 3347 0
 23559 0126 204B     		ldr	r3, .L926
 23560 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 23561 012c 204B     		ldr	r3, .L926+8
 23562 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 23563 0132 9A42     		cmp	r2, r3
 23564 0134 21D0     		beq	.L919
3348:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 23565              		.loc 1 3348 0
 23566 0136 1C4B     		ldr	r3, .L926
 23567 0138 93F8A030 		ldrb	r3, [r3, #160]
 23568 013c FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 514


3349:..\src/command_processing.c ****         if(memStore(0)) {
 23569              		.loc 1 3349 0
 23570 013e 0020     		movs	r0, #0
 23571 0140 FFF7FEFF 		bl	memStore
 23572 0144 0346     		mov	r3, r0
 23573 0146 002B     		cmp	r3, #0
 23574 0148 0BD0     		beq	.L920
3350:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 23575              		.loc 1 3350 0
 23576 014a 0123     		movs	r3, #1
 23577 014c 3B70     		strb	r3, [r7]
3351:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 23578              		.loc 1 3351 0
 23579 014e 0123     		movs	r3, #1
 23580 0150 7B70     		strb	r3, [r7, #1]
3352:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 23581              		.loc 1 3352 0
 23582 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23583 0154 99B2     		uxth	r1, r3
 23584 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23585 0158 3B46     		mov	r3, r7
 23586 015a 1846     		mov	r0, r3
 23587 015c FFF7FEFF 		bl	commWrite_old_id
 23588 0160 18E0     		b	.L922
 23589              	.L920:
3353:..\src/command_processing.c ****         }    
3354:..\src/command_processing.c ****         else{
3355:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 23590              		.loc 1 3355 0
 23591 0162 0023     		movs	r3, #0
 23592 0164 3B70     		strb	r3, [r7]
3356:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 23593              		.loc 1 3356 0
 23594 0166 0023     		movs	r3, #0
 23595 0168 7B70     		strb	r3, [r7, #1]
3357:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 23596              		.loc 1 3357 0
 23597 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23598 016c 99B2     		uxth	r1, r3
 23599 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23600 0170 3B46     		mov	r3, r7
 23601 0172 1846     		mov	r0, r3
 23602 0174 FFF7FEFF 		bl	commWrite_old_id
 23603 0178 0CE0     		b	.L922
 23604              	.L919:
3358:..\src/command_processing.c ****         }
3359:..\src/command_processing.c ****     }    
3360:..\src/command_processing.c ****     else {
3361:..\src/command_processing.c ****         if(memStore(0))
 23605              		.loc 1 3361 0
 23606 017a 0020     		movs	r0, #0
 23607 017c FFF7FEFF 		bl	memStore
 23608 0180 0346     		mov	r3, r0
 23609 0182 002B     		cmp	r3, #0
 23610 0184 03D0     		beq	.L923
3362:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 23611              		.loc 1 3362 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 515


 23612 0186 0120     		movs	r0, #1
 23613 0188 FFF7FEFF 		bl	sendAcknowledgment
 23614 018c 02E0     		b	.L922
 23615              	.L923:
3363:..\src/command_processing.c ****         else
3364:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 23616              		.loc 1 3364 0
 23617 018e 0020     		movs	r0, #0
 23618 0190 FFF7FEFF 		bl	sendAcknowledgment
 23619              	.L922:
3365:..\src/command_processing.c ****     }
3366:..\src/command_processing.c ****     
3367:..\src/command_processing.c ****     // FW reset (if necessary)
3368:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 23620              		.loc 1 3368 0
 23621 0194 084B     		ldr	r3, .L926+16
 23622 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23623 0198 012B     		cmp	r3, #1
 23624 019a 01D1     		bne	.L925
3369:..\src/command_processing.c ****         CySoftwareReset();
 23625              		.loc 1 3369 0
 23626 019c FFF7FEFF 		bl	CySoftwareReset
 23627              	.L925:
3370:..\src/command_processing.c ****     }
3371:..\src/command_processing.c **** }
 23628              		.loc 1 3371 0
 23629 01a0 00BF     		nop
 23630 01a2 1037     		adds	r7, r7, #16
 23631              		.cfi_def_cfa_offset 8
 23632 01a4 BD46     		mov	sp, r7
 23633              		.cfi_def_cfa_register 13
 23634              		@ sp needed
 23635 01a6 80BD     		pop	{r7, pc}
 23636              	.L927:
 23637              		.align	2
 23638              	.L926:
 23639 01a8 00000000 		.word	c_mem
 23640 01ac 00000000 		.word	g_refNew
 23641 01b0 00000000 		.word	g_mem
 23642 01b4 00000000 		.word	pFile
 23643 01b8 00000000 		.word	reset_PSoC_flag
 23644              		.cfi_endproc
 23645              	.LFE100:
 23646              		.size	cmd_store_params, .-cmd_store_params
 23647              		.section	.text.cmd_get_emg,"ax",%progbits
 23648              		.align	2
 23649              		.global	cmd_get_emg
 23650              		.thumb
 23651              		.thumb_func
 23652              		.type	cmd_get_emg, %function
 23653              	cmd_get_emg:
 23654              	.LFB101:
3372:..\src/command_processing.c **** 
3373:..\src/command_processing.c **** void cmd_get_emg(){
 23655              		.loc 1 3373 0
 23656              		.cfi_startproc
 23657              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 516


 23658              		@ frame_needed = 1, uses_anonymous_args = 0
 23659 0000 80B5     		push	{r7, lr}
 23660              		.cfi_def_cfa_offset 8
 23661              		.cfi_offset 7, -8
 23662              		.cfi_offset 14, -4
 23663 0002 84B0     		sub	sp, sp, #16
 23664              		.cfi_def_cfa_offset 24
 23665 0004 00AF     		add	r7, sp, #0
 23666              		.cfi_def_cfa_register 7
3374:..\src/command_processing.c ****     
3375:..\src/command_processing.c ****     uint8 packet_data[6];
3376:..\src/command_processing.c ****     int16 aux_int16;
3377:..\src/command_processing.c ****     
3378:..\src/command_processing.c ****     // Header        
3379:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 23667              		.loc 1 3379 0
 23668 0006 8823     		movs	r3, #136
 23669 0008 3B72     		strb	r3, [r7, #8]
3380:..\src/command_processing.c ****     
3381:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[0];
 23670              		.loc 1 3381 0
 23671 000a 144B     		ldr	r3, .L929
 23672 000c 1B68     		ldr	r3, [r3]
 23673 000e 1BB2     		sxth	r3, r3
 23674 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3382:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23675              		.loc 1 3382 0
 23676 0012 BB1D     		adds	r3, r7, #6
 23677 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23678 0016 BB72     		strb	r3, [r7, #10]
3383:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23679              		.loc 1 3383 0
 23680 0018 BB1D     		adds	r3, r7, #6
 23681 001a 0133     		adds	r3, r3, #1
 23682 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23683 001e 7B72     		strb	r3, [r7, #9]
3384:..\src/command_processing.c ****     
3385:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[1];
 23684              		.loc 1 3385 0
 23685 0020 0E4B     		ldr	r3, .L929
 23686 0022 5B68     		ldr	r3, [r3, #4]
 23687 0024 1BB2     		sxth	r3, r3
 23688 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3386:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23689              		.loc 1 3386 0
 23690 0028 BB1D     		adds	r3, r7, #6
 23691 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23692 002c 3B73     		strb	r3, [r7, #12]
3387:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23693              		.loc 1 3387 0
 23694 002e BB1D     		adds	r3, r7, #6
 23695 0030 0133     		adds	r3, r3, #1
 23696 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23697 0034 FB72     		strb	r3, [r7, #11]
3388:..\src/command_processing.c **** 
3389:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23698              		.loc 1 3389 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 517


 23699 0036 07F10803 		add	r3, r7, #8
 23700 003a 0521     		movs	r1, #5
 23701 003c 1846     		mov	r0, r3
 23702 003e FFF7FEFF 		bl	LCRChecksum
 23703 0042 0346     		mov	r3, r0
 23704 0044 7B73     		strb	r3, [r7, #13]
3390:..\src/command_processing.c **** 
3391:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23705              		.loc 1 3391 0
 23706 0046 07F10803 		add	r3, r7, #8
 23707 004a 0621     		movs	r1, #6
 23708 004c 1846     		mov	r0, r3
 23709 004e FFF7FEFF 		bl	commWrite
3392:..\src/command_processing.c **** 
3393:..\src/command_processing.c **** }
 23710              		.loc 1 3393 0
 23711 0052 00BF     		nop
 23712 0054 1037     		adds	r7, r7, #16
 23713              		.cfi_def_cfa_offset 8
 23714 0056 BD46     		mov	sp, r7
 23715              		.cfi_def_cfa_register 13
 23716              		@ sp needed
 23717 0058 80BD     		pop	{r7, pc}
 23718              	.L930:
 23719 005a 00BF     		.align	2
 23720              	.L929:
 23721 005c 00000000 		.word	g_emg_measOld
 23722              		.cfi_endproc
 23723              	.LFE101:
 23724              		.size	cmd_get_emg, .-cmd_get_emg
 23725              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 23726              		.align	2
 23727              		.global	cmd_get_imu_readings
 23728              		.thumb
 23729              		.thumb_func
 23730              		.type	cmd_get_imu_readings, %function
 23731              	cmd_get_imu_readings:
 23732              	.LFB102:
3394:..\src/command_processing.c **** 
3395:..\src/command_processing.c **** void cmd_get_imu_readings(){
 23733              		.loc 1 3395 0
 23734              		.cfi_startproc
 23735              		@ args = 0, pretend = 0, frame = 400
 23736              		@ frame_needed = 1, uses_anonymous_args = 0
 23737 0000 90B5     		push	{r4, r7, lr}
 23738              		.cfi_def_cfa_offset 12
 23739              		.cfi_offset 4, -12
 23740              		.cfi_offset 7, -8
 23741              		.cfi_offset 14, -4
 23742 0002 E5B0     		sub	sp, sp, #404
 23743              		.cfi_def_cfa_offset 416
 23744 0004 00AF     		add	r7, sp, #0
 23745              		.cfi_def_cfa_register 7
3396:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3397:..\src/command_processing.c ****     
3398:..\src/command_processing.c ****     uint8 k_imu;
3399:..\src/command_processing.c ****     uint16 c = 1;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 518


 23746              		.loc 1 3399 0
 23747 0006 0123     		movs	r3, #1
 23748 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3400:..\src/command_processing.c ****     uint8 k = 0;
 23749              		.loc 1 3400 0
 23750 000c 0023     		movs	r3, #0
 23751 000e 87F88B31 		strb	r3, [r7, #395]
3401:..\src/command_processing.c ****     uint16 gl_c = 1;
 23752              		.loc 1 3401 0
 23753 0012 0123     		movs	r3, #1
 23754 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3402:..\src/command_processing.c ****     int16 aux_int16;
3403:..\src/command_processing.c ****     float aux_float;
3404:..\src/command_processing.c ****     
3405:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3406:..\src/command_processing.c ****     uint8 packet_data[350];
3407:..\src/command_processing.c ****     uint8 single_packet[32];
3408:..\src/command_processing.c ****     
3409:..\src/command_processing.c ****     //Header package 
3410:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 23755              		.loc 1 3410 0
 23756 0018 07F12003 		add	r3, r7, #32
 23757 001c A122     		movs	r2, #161
 23758 001e 1A70     		strb	r2, [r3]
3411:..\src/command_processing.c ****  
3412:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 23759              		.loc 1 3412 0
 23760 0020 0023     		movs	r3, #0
 23761 0022 87F88F31 		strb	r3, [r7, #399]
 23762 0026 82E2     		b	.L932
 23763              	.L948:
3413:..\src/command_processing.c ****     {	
3414:..\src/command_processing.c ****             
3415:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 23764              		.loc 1 3415 0
 23765 0028 3B46     		mov	r3, r7
 23766 002a 3A22     		movs	r2, #58
 23767 002c 1A70     		strb	r2, [r3]
3416:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 23768              		.loc 1 3416 0
 23769 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23770 0032 DB4A     		ldr	r2, .L949
 23771 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23772 0036 1946     		mov	r1, r3
 23773 0038 DA4A     		ldr	r2, .L949+4
 23774 003a 0B46     		mov	r3, r1
 23775 003c 9B00     		lsls	r3, r3, #2
 23776 003e 0B44     		add	r3, r3, r1
 23777 0040 1344     		add	r3, r3, r2
 23778 0042 03F20223 		addw	r3, r3, #514
 23779 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23780 0048 002B     		cmp	r3, #0
 23781 004a 5DD0     		beq	.L933
3417:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 23782              		.loc 1 3417 0
 23783 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23784 0050 D549     		ldr	r1, .L949+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 519


 23785 0052 1346     		mov	r3, r2
 23786 0054 9B00     		lsls	r3, r3, #2
 23787 0056 1344     		add	r3, r3, r2
 23788 0058 DB00     		lsls	r3, r3, #3
 23789 005a 0B44     		add	r3, r3, r1
 23790 005c 0233     		adds	r3, r3, #2
 23791 005e B3F90030 		ldrsh	r3, [r3]
 23792 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3418:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 23793              		.loc 1 3418 0
 23794 0066 B7F88C31 		ldrh	r3, [r7, #396]
 23795 006a 0133     		adds	r3, r3, #1
 23796 006c 07F5C372 		add	r2, r7, #390
 23797 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23798 0072 3A46     		mov	r2, r7
 23799 0074 D154     		strb	r1, [r2, r3]
3419:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 23800              		.loc 1 3419 0
 23801 0076 B7F88C21 		ldrh	r2, [r7, #396]
 23802 007a 07F5C373 		add	r3, r7, #390
 23803 007e 0133     		adds	r3, r3, #1
 23804 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23805 0082 3B46     		mov	r3, r7
 23806 0084 9954     		strb	r1, [r3, r2]
3420:..\src/command_processing.c **** 
3421:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 23807              		.loc 1 3421 0
 23808 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23809 008a C749     		ldr	r1, .L949+8
 23810 008c 1346     		mov	r3, r2
 23811 008e 9B00     		lsls	r3, r3, #2
 23812 0090 1344     		add	r3, r3, r2
 23813 0092 DB00     		lsls	r3, r3, #3
 23814 0094 0B44     		add	r3, r3, r1
 23815 0096 0433     		adds	r3, r3, #4
 23816 0098 B3F90030 		ldrsh	r3, [r3]
 23817 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3422:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 23818              		.loc 1 3422 0
 23819 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 23820 00a4 0333     		adds	r3, r3, #3
 23821 00a6 07F5C372 		add	r2, r7, #390
 23822 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23823 00ac 3A46     		mov	r2, r7
 23824 00ae D154     		strb	r1, [r2, r3]
3423:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 23825              		.loc 1 3423 0
 23826 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 23827 00b4 9A1C     		adds	r2, r3, #2
 23828 00b6 07F5C373 		add	r3, r7, #390
 23829 00ba 0133     		adds	r3, r3, #1
 23830 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23831 00be 3B46     		mov	r3, r7
 23832 00c0 9954     		strb	r1, [r3, r2]
3424:..\src/command_processing.c **** 
3425:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 23833              		.loc 1 3425 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 520


 23834 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23835 00c6 B849     		ldr	r1, .L949+8
 23836 00c8 1346     		mov	r3, r2
 23837 00ca 9B00     		lsls	r3, r3, #2
 23838 00cc 1344     		add	r3, r3, r2
 23839 00ce DB00     		lsls	r3, r3, #3
 23840 00d0 0B44     		add	r3, r3, r1
 23841 00d2 0633     		adds	r3, r3, #6
 23842 00d4 B3F90030 		ldrsh	r3, [r3]
 23843 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3426:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 23844              		.loc 1 3426 0
 23845 00dc B7F88C31 		ldrh	r3, [r7, #396]
 23846 00e0 0533     		adds	r3, r3, #5
 23847 00e2 07F5C372 		add	r2, r7, #390
 23848 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23849 00e8 3A46     		mov	r2, r7
 23850 00ea D154     		strb	r1, [r2, r3]
3427:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 23851              		.loc 1 3427 0
 23852 00ec B7F88C31 		ldrh	r3, [r7, #396]
 23853 00f0 1A1D     		adds	r2, r3, #4
 23854 00f2 07F5C373 		add	r3, r7, #390
 23855 00f6 0133     		adds	r3, r3, #1
 23856 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23857 00fa 3B46     		mov	r3, r7
 23858 00fc 9954     		strb	r1, [r3, r2]
3428:..\src/command_processing.c **** 
3429:..\src/command_processing.c ****             c = c + 6;
 23859              		.loc 1 3429 0
 23860 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 23861 0102 0633     		adds	r3, r3, #6
 23862 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 23863              	.L933:
3430:..\src/command_processing.c ****         }
3431:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 23864              		.loc 1 3431 0
 23865 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23866 010c A44A     		ldr	r2, .L949
 23867 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23868 0110 1946     		mov	r1, r3
 23869 0112 A44A     		ldr	r2, .L949+4
 23870 0114 0B46     		mov	r3, r1
 23871 0116 9B00     		lsls	r3, r3, #2
 23872 0118 0B44     		add	r3, r3, r1
 23873 011a 1344     		add	r3, r3, r2
 23874 011c 03F20323 		addw	r3, r3, #515
 23875 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23876 0122 002B     		cmp	r3, #0
 23877 0124 5DD0     		beq	.L934
3432:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 23878              		.loc 1 3432 0
 23879 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23880 012a 9F49     		ldr	r1, .L949+8
 23881 012c 1346     		mov	r3, r2
 23882 012e 9B00     		lsls	r3, r3, #2
 23883 0130 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 521


 23884 0132 DB00     		lsls	r3, r3, #3
 23885 0134 0B44     		add	r3, r3, r1
 23886 0136 0833     		adds	r3, r3, #8
 23887 0138 B3F90030 		ldrsh	r3, [r3]
 23888 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3433:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 23889              		.loc 1 3433 0
 23890 0140 B7F88C31 		ldrh	r3, [r7, #396]
 23891 0144 0133     		adds	r3, r3, #1
 23892 0146 07F5C372 		add	r2, r7, #390
 23893 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23894 014c 3A46     		mov	r2, r7
 23895 014e D154     		strb	r1, [r2, r3]
3434:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 23896              		.loc 1 3434 0
 23897 0150 B7F88C21 		ldrh	r2, [r7, #396]
 23898 0154 07F5C373 		add	r3, r7, #390
 23899 0158 0133     		adds	r3, r3, #1
 23900 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23901 015c 3B46     		mov	r3, r7
 23902 015e 9954     		strb	r1, [r3, r2]
3435:..\src/command_processing.c **** 
3436:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 23903              		.loc 1 3436 0
 23904 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23905 0164 9049     		ldr	r1, .L949+8
 23906 0166 1346     		mov	r3, r2
 23907 0168 9B00     		lsls	r3, r3, #2
 23908 016a 1344     		add	r3, r3, r2
 23909 016c DB00     		lsls	r3, r3, #3
 23910 016e 0B44     		add	r3, r3, r1
 23911 0170 0A33     		adds	r3, r3, #10
 23912 0172 B3F90030 		ldrsh	r3, [r3]
 23913 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3437:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 23914              		.loc 1 3437 0
 23915 017a B7F88C31 		ldrh	r3, [r7, #396]
 23916 017e 0333     		adds	r3, r3, #3
 23917 0180 07F5C372 		add	r2, r7, #390
 23918 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23919 0186 3A46     		mov	r2, r7
 23920 0188 D154     		strb	r1, [r2, r3]
3438:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 23921              		.loc 1 3438 0
 23922 018a B7F88C31 		ldrh	r3, [r7, #396]
 23923 018e 9A1C     		adds	r2, r3, #2
 23924 0190 07F5C373 		add	r3, r7, #390
 23925 0194 0133     		adds	r3, r3, #1
 23926 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23927 0198 3B46     		mov	r3, r7
 23928 019a 9954     		strb	r1, [r3, r2]
3439:..\src/command_processing.c **** 
3440:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 23929              		.loc 1 3440 0
 23930 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23931 01a0 8149     		ldr	r1, .L949+8
 23932 01a2 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 522


 23933 01a4 9B00     		lsls	r3, r3, #2
 23934 01a6 1344     		add	r3, r3, r2
 23935 01a8 DB00     		lsls	r3, r3, #3
 23936 01aa 0B44     		add	r3, r3, r1
 23937 01ac 0C33     		adds	r3, r3, #12
 23938 01ae B3F90030 		ldrsh	r3, [r3]
 23939 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3441:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 23940              		.loc 1 3441 0
 23941 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 23942 01ba 0533     		adds	r3, r3, #5
 23943 01bc 07F5C372 		add	r2, r7, #390
 23944 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23945 01c2 3A46     		mov	r2, r7
 23946 01c4 D154     		strb	r1, [r2, r3]
3442:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 23947              		.loc 1 3442 0
 23948 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 23949 01ca 1A1D     		adds	r2, r3, #4
 23950 01cc 07F5C373 		add	r3, r7, #390
 23951 01d0 0133     		adds	r3, r3, #1
 23952 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23953 01d4 3B46     		mov	r3, r7
 23954 01d6 9954     		strb	r1, [r3, r2]
3443:..\src/command_processing.c **** 
3444:..\src/command_processing.c ****             c = c + 6;
 23955              		.loc 1 3444 0
 23956 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 23957 01dc 0633     		adds	r3, r3, #6
 23958 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 23959              	.L934:
3445:..\src/command_processing.c ****         }
3446:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 23960              		.loc 1 3446 0
 23961 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23962 01e6 6E4A     		ldr	r2, .L949
 23963 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23964 01ea 1946     		mov	r1, r3
 23965 01ec 6D4A     		ldr	r2, .L949+4
 23966 01ee 0B46     		mov	r3, r1
 23967 01f0 9B00     		lsls	r3, r3, #2
 23968 01f2 0B44     		add	r3, r3, r1
 23969 01f4 1344     		add	r3, r3, r2
 23970 01f6 03F50173 		add	r3, r3, #516
 23971 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23972 01fc 002B     		cmp	r3, #0
 23973 01fe 5DD0     		beq	.L935
3447:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 23974              		.loc 1 3447 0
 23975 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23976 0204 6849     		ldr	r1, .L949+8
 23977 0206 1346     		mov	r3, r2
 23978 0208 9B00     		lsls	r3, r3, #2
 23979 020a 1344     		add	r3, r3, r2
 23980 020c DB00     		lsls	r3, r3, #3
 23981 020e 0B44     		add	r3, r3, r1
 23982 0210 0E33     		adds	r3, r3, #14
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 523


 23983 0212 B3F90030 		ldrsh	r3, [r3]
 23984 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3448:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 23985              		.loc 1 3448 0
 23986 021a B7F88C31 		ldrh	r3, [r7, #396]
 23987 021e 0133     		adds	r3, r3, #1
 23988 0220 07F5C372 		add	r2, r7, #390
 23989 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23990 0226 3A46     		mov	r2, r7
 23991 0228 D154     		strb	r1, [r2, r3]
3449:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 23992              		.loc 1 3449 0
 23993 022a B7F88C21 		ldrh	r2, [r7, #396]
 23994 022e 07F5C373 		add	r3, r7, #390
 23995 0232 0133     		adds	r3, r3, #1
 23996 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23997 0236 3B46     		mov	r3, r7
 23998 0238 9954     		strb	r1, [r3, r2]
3450:..\src/command_processing.c **** 
3451:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 23999              		.loc 1 3451 0
 24000 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24001 023e 5A49     		ldr	r1, .L949+8
 24002 0240 1346     		mov	r3, r2
 24003 0242 9B00     		lsls	r3, r3, #2
 24004 0244 1344     		add	r3, r3, r2
 24005 0246 DB00     		lsls	r3, r3, #3
 24006 0248 0B44     		add	r3, r3, r1
 24007 024a 1033     		adds	r3, r3, #16
 24008 024c B3F90030 		ldrsh	r3, [r3]
 24009 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3452:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24010              		.loc 1 3452 0
 24011 0254 B7F88C31 		ldrh	r3, [r7, #396]
 24012 0258 0333     		adds	r3, r3, #3
 24013 025a 07F5C372 		add	r2, r7, #390
 24014 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24015 0260 3A46     		mov	r2, r7
 24016 0262 D154     		strb	r1, [r2, r3]
3453:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24017              		.loc 1 3453 0
 24018 0264 B7F88C31 		ldrh	r3, [r7, #396]
 24019 0268 9A1C     		adds	r2, r3, #2
 24020 026a 07F5C373 		add	r3, r7, #390
 24021 026e 0133     		adds	r3, r3, #1
 24022 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24023 0272 3B46     		mov	r3, r7
 24024 0274 9954     		strb	r1, [r3, r2]
3454:..\src/command_processing.c **** 
3455:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 24025              		.loc 1 3455 0
 24026 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24027 027a 4B49     		ldr	r1, .L949+8
 24028 027c 1346     		mov	r3, r2
 24029 027e 9B00     		lsls	r3, r3, #2
 24030 0280 1344     		add	r3, r3, r2
 24031 0282 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 524


 24032 0284 0B44     		add	r3, r3, r1
 24033 0286 1233     		adds	r3, r3, #18
 24034 0288 B3F90030 		ldrsh	r3, [r3]
 24035 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3456:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24036              		.loc 1 3456 0
 24037 0290 B7F88C31 		ldrh	r3, [r7, #396]
 24038 0294 0533     		adds	r3, r3, #5
 24039 0296 07F5C372 		add	r2, r7, #390
 24040 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24041 029c 3A46     		mov	r2, r7
 24042 029e D154     		strb	r1, [r2, r3]
3457:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24043              		.loc 1 3457 0
 24044 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 24045 02a4 1A1D     		adds	r2, r3, #4
 24046 02a6 07F5C373 		add	r3, r7, #390
 24047 02aa 0133     		adds	r3, r3, #1
 24048 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24049 02ae 3B46     		mov	r3, r7
 24050 02b0 9954     		strb	r1, [r3, r2]
3458:..\src/command_processing.c **** 
3459:..\src/command_processing.c ****             c = c + 6;
 24051              		.loc 1 3459 0
 24052 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24053 02b6 0633     		adds	r3, r3, #6
 24054 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24055              	.L935:
3460:..\src/command_processing.c ****         }
3461:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 24056              		.loc 1 3461 0
 24057 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24058 02c0 374A     		ldr	r2, .L949
 24059 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24060 02c4 1946     		mov	r1, r3
 24061 02c6 374A     		ldr	r2, .L949+4
 24062 02c8 0B46     		mov	r3, r1
 24063 02ca 9B00     		lsls	r3, r3, #2
 24064 02cc 0B44     		add	r3, r3, r1
 24065 02ce 1344     		add	r3, r3, r2
 24066 02d0 03F20523 		addw	r3, r3, #517
 24067 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24068 02d6 002B     		cmp	r3, #0
 24069 02d8 00F0AF80 		beq	.L936
3462:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 24070              		.loc 1 3462 0
 24071 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24072 02e0 3149     		ldr	r1, .L949+8
 24073 02e2 1346     		mov	r3, r2
 24074 02e4 9B00     		lsls	r3, r3, #2
 24075 02e6 1344     		add	r3, r3, r2
 24076 02e8 DB00     		lsls	r3, r3, #3
 24077 02ea 0B44     		add	r3, r3, r1
 24078 02ec 1433     		adds	r3, r3, #20
 24079 02ee 1B68     		ldr	r3, [r3]	@ float
 24080 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3463:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 525


 24081              		.loc 1 3463 0
 24082 02f4 0023     		movs	r3, #0
 24083 02f6 87F88B31 		strb	r3, [r7, #395]
 24084 02fa 13E0     		b	.L937
 24085              	.L938:
3464:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 24086              		.loc 1 3464 0 discriminator 3
 24087 02fc B7F88C31 		ldrh	r3, [r7, #396]
 24088 0300 1A1D     		adds	r2, r3, #4
 24089 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24090 0306 D31A     		subs	r3, r2, r3
 24091 0308 013B     		subs	r3, r3, #1
 24092 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24093 030e 07F5C071 		add	r1, r7, #384
 24094 0312 0A44     		add	r2, r2, r1
 24095 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24096 0316 3A46     		mov	r2, r7
 24097 0318 D154     		strb	r1, [r2, r3]
3463:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24098              		.loc 1 3463 0 discriminator 3
 24099 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24100 031e 0133     		adds	r3, r3, #1
 24101 0320 87F88B31 		strb	r3, [r7, #395]
 24102              	.L937:
3463:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24103              		.loc 1 3463 0 is_stmt 0 discriminator 1
 24104 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24105 0328 032B     		cmp	r3, #3
 24106 032a E7D9     		bls	.L938
3465:..\src/command_processing.c ****             }
3466:..\src/command_processing.c **** 
3467:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 24107              		.loc 1 3467 0 is_stmt 1
 24108 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24109 0330 1D49     		ldr	r1, .L949+8
 24110 0332 1346     		mov	r3, r2
 24111 0334 9B00     		lsls	r3, r3, #2
 24112 0336 1344     		add	r3, r3, r2
 24113 0338 DB00     		lsls	r3, r3, #3
 24114 033a 0B44     		add	r3, r3, r1
 24115 033c 1833     		adds	r3, r3, #24
 24116 033e 1B68     		ldr	r3, [r3]	@ float
 24117 0340 C7F88031 		str	r3, [r7, #384]	@ float
3468:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24118              		.loc 1 3468 0
 24119 0344 0023     		movs	r3, #0
 24120 0346 87F88B31 		strb	r3, [r7, #395]
 24121 034a 14E0     		b	.L939
 24122              	.L940:
3469:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 24123              		.loc 1 3469 0 discriminator 3
 24124 034c B7F88C31 		ldrh	r3, [r7, #396]
 24125 0350 03F10802 		add	r2, r3, #8
 24126 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24127 0358 D31A     		subs	r3, r2, r3
 24128 035a 013B     		subs	r3, r3, #1
 24129 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 526


 24130 0360 07F5C071 		add	r1, r7, #384
 24131 0364 0A44     		add	r2, r2, r1
 24132 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24133 0368 3A46     		mov	r2, r7
 24134 036a D154     		strb	r1, [r2, r3]
3468:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24135              		.loc 1 3468 0 discriminator 3
 24136 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24137 0370 0133     		adds	r3, r3, #1
 24138 0372 87F88B31 		strb	r3, [r7, #395]
 24139              	.L939:
3468:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24140              		.loc 1 3468 0 is_stmt 0 discriminator 1
 24141 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24142 037a 032B     		cmp	r3, #3
 24143 037c E6D9     		bls	.L940
3470:..\src/command_processing.c ****             }
3471:..\src/command_processing.c **** 
3472:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 24144              		.loc 1 3472 0 is_stmt 1
 24145 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24146 0382 0949     		ldr	r1, .L949+8
 24147 0384 1346     		mov	r3, r2
 24148 0386 9B00     		lsls	r3, r3, #2
 24149 0388 1344     		add	r3, r3, r2
 24150 038a DB00     		lsls	r3, r3, #3
 24151 038c 0B44     		add	r3, r3, r1
 24152 038e 1C33     		adds	r3, r3, #28
 24153 0390 1B68     		ldr	r3, [r3]	@ float
 24154 0392 C7F88031 		str	r3, [r7, #384]	@ float
3473:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24155              		.loc 1 3473 0
 24156 0396 0023     		movs	r3, #0
 24157 0398 87F88B31 		strb	r3, [r7, #395]
 24158 039c 1BE0     		b	.L941
 24159              	.L950:
 24160 039e 00BF     		.align	2
 24161              	.L949:
 24162 03a0 00000000 		.word	IMU_connected
 24163 03a4 00000000 		.word	c_mem
 24164 03a8 00000000 		.word	g_imu
 24165              	.L942:
3474:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 24166              		.loc 1 3474 0 discriminator 3
 24167 03ac B7F88C31 		ldrh	r3, [r7, #396]
 24168 03b0 03F10C02 		add	r2, r3, #12
 24169 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24170 03b8 D31A     		subs	r3, r2, r3
 24171 03ba 013B     		subs	r3, r3, #1
 24172 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24173 03c0 07F5C071 		add	r1, r7, #384
 24174 03c4 0A44     		add	r2, r2, r1
 24175 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24176 03c8 3A46     		mov	r2, r7
 24177 03ca D154     		strb	r1, [r2, r3]
3473:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24178              		.loc 1 3473 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 527


 24179 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24180 03d0 0133     		adds	r3, r3, #1
 24181 03d2 87F88B31 		strb	r3, [r7, #395]
 24182              	.L941:
3473:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24183              		.loc 1 3473 0 is_stmt 0 discriminator 1
 24184 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24185 03da 032B     		cmp	r3, #3
 24186 03dc E6D9     		bls	.L942
3475:..\src/command_processing.c ****             }
3476:..\src/command_processing.c **** 
3477:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 24187              		.loc 1 3477 0 is_stmt 1
 24188 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24189 03e2 6749     		ldr	r1, .L951
 24190 03e4 1346     		mov	r3, r2
 24191 03e6 9B00     		lsls	r3, r3, #2
 24192 03e8 1344     		add	r3, r3, r2
 24193 03ea DB00     		lsls	r3, r3, #3
 24194 03ec 0B44     		add	r3, r3, r1
 24195 03ee 2033     		adds	r3, r3, #32
 24196 03f0 1B68     		ldr	r3, [r3]	@ float
 24197 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3478:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24198              		.loc 1 3478 0
 24199 03f6 0023     		movs	r3, #0
 24200 03f8 87F88B31 		strb	r3, [r7, #395]
 24201 03fc 14E0     		b	.L943
 24202              	.L944:
3479:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 24203              		.loc 1 3479 0 discriminator 3
 24204 03fe B7F88C31 		ldrh	r3, [r7, #396]
 24205 0402 03F11002 		add	r2, r3, #16
 24206 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24207 040a D31A     		subs	r3, r2, r3
 24208 040c 013B     		subs	r3, r3, #1
 24209 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24210 0412 07F5C071 		add	r1, r7, #384
 24211 0416 0A44     		add	r2, r2, r1
 24212 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24213 041a 3A46     		mov	r2, r7
 24214 041c D154     		strb	r1, [r2, r3]
3478:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24215              		.loc 1 3478 0 discriminator 3
 24216 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24217 0422 0133     		adds	r3, r3, #1
 24218 0424 87F88B31 		strb	r3, [r7, #395]
 24219              	.L943:
3478:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24220              		.loc 1 3478 0 is_stmt 0 discriminator 1
 24221 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24222 042c 032B     		cmp	r3, #3
 24223 042e E6D9     		bls	.L944
3480:..\src/command_processing.c ****             }
3481:..\src/command_processing.c ****             c = c + 16;
 24224              		.loc 1 3481 0 is_stmt 1
 24225 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 528


 24226 0434 1033     		adds	r3, r3, #16
 24227 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24228              	.L936:
3482:..\src/command_processing.c ****         }
3483:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 24229              		.loc 1 3483 0
 24230 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24231 043e 514A     		ldr	r2, .L951+4
 24232 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24233 0442 1946     		mov	r1, r3
 24234 0444 504A     		ldr	r2, .L951+8
 24235 0446 0B46     		mov	r3, r1
 24236 0448 9B00     		lsls	r3, r3, #2
 24237 044a 0B44     		add	r3, r3, r1
 24238 044c 1344     		add	r3, r3, r2
 24239 044e 03F20623 		addw	r3, r3, #518
 24240 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24241 0454 002B     		cmp	r3, #0
 24242 0456 21D0     		beq	.L945
3484:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 24243              		.loc 1 3484 0
 24244 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24245 045c 4849     		ldr	r1, .L951
 24246 045e 1346     		mov	r3, r2
 24247 0460 9B00     		lsls	r3, r3, #2
 24248 0462 1344     		add	r3, r3, r2
 24249 0464 DB00     		lsls	r3, r3, #3
 24250 0466 0B44     		add	r3, r3, r1
 24251 0468 2433     		adds	r3, r3, #36
 24252 046a B3F90030 		ldrsh	r3, [r3]
 24253 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3485:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24254              		.loc 1 3485 0
 24255 0472 B7F88C31 		ldrh	r3, [r7, #396]
 24256 0476 0133     		adds	r3, r3, #1
 24257 0478 07F5C372 		add	r2, r7, #390
 24258 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24259 047e 3A46     		mov	r2, r7
 24260 0480 D154     		strb	r1, [r2, r3]
3486:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24261              		.loc 1 3486 0
 24262 0482 B7F88C21 		ldrh	r2, [r7, #396]
 24263 0486 07F5C373 		add	r3, r7, #390
 24264 048a 0133     		adds	r3, r3, #1
 24265 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24266 048e 3B46     		mov	r3, r7
 24267 0490 9954     		strb	r1, [r3, r2]
3487:..\src/command_processing.c ****             c = c + 2;
 24268              		.loc 1 3487 0
 24269 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24270 0496 0233     		adds	r3, r3, #2
 24271 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24272              	.L945:
3488:..\src/command_processing.c ****         }
3489:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 24273              		.loc 1 3489 0
 24274 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 529


 24275 04a0 384A     		ldr	r2, .L951+4
 24276 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24277 04a4 1A46     		mov	r2, r3
 24278 04a6 394B     		ldr	r3, .L951+12
 24279 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24280 04ac 013B     		subs	r3, r3, #1
 24281 04ae 3A46     		mov	r2, r7
 24282 04b0 3A21     		movs	r1, #58
 24283 04b2 D154     		strb	r1, [r2, r3]
3490:..\src/command_processing.c ****         c = 1;
 24284              		.loc 1 3490 0
 24285 04b4 0123     		movs	r3, #1
 24286 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3491:..\src/command_processing.c ****                
3492:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 24287              		.loc 1 3492 0
 24288 04ba 0023     		movs	r3, #0
 24289 04bc 87F88B31 		strb	r3, [r7, #395]
 24290 04c0 10E0     		b	.L946
 24291              	.L947:
3493:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24292              		.loc 1 3493 0 discriminator 3
 24293 04c2 B7F88821 		ldrh	r2, [r7, #392]
 24294 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24295 04ca 1344     		add	r3, r3, r2
 24296 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24297 04d0 3946     		mov	r1, r7
 24298 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 24299 04d4 07F12002 		add	r2, r7, #32
 24300 04d8 D154     		strb	r1, [r2, r3]
3492:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24301              		.loc 1 3492 0 discriminator 3
 24302 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24303 04de 0133     		adds	r3, r3, #1
 24304 04e0 87F88B31 		strb	r3, [r7, #395]
 24305              	.L946:
3492:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24306              		.loc 1 3492 0 is_stmt 0 discriminator 1
 24307 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24308 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24309 04ec 2549     		ldr	r1, .L951+4
 24310 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 24311 04f0 1946     		mov	r1, r3
 24312 04f2 264B     		ldr	r3, .L951+12
 24313 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 24314 04f8 9A42     		cmp	r2, r3
 24315 04fa E2DB     		blt	.L947
3494:..\src/command_processing.c ****         }
3495:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 24316              		.loc 1 3495 0 is_stmt 1 discriminator 2
 24317 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24318 0500 204A     		ldr	r2, .L951+4
 24319 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24320 0504 1A46     		mov	r2, r3
 24321 0506 214B     		ldr	r3, .L951+12
 24322 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24323 050c 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 530


 24324 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 24325 0512 1344     		add	r3, r3, r2
 24326 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3496:..\src/command_processing.c ****         
3497:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 24327              		.loc 1 3497 0 discriminator 2
 24328 0518 3B46     		mov	r3, r7
 24329 051a 2022     		movs	r2, #32
 24330 051c 0021     		movs	r1, #0
 24331 051e 1846     		mov	r0, r3
 24332 0520 FFF7FEFF 		bl	memset
3412:..\src/command_processing.c ****     {	
 24333              		.loc 1 3412 0 discriminator 2
 24334 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24335 0528 0133     		adds	r3, r3, #1
 24336 052a 87F88F31 		strb	r3, [r7, #399]
 24337              	.L932:
3412:..\src/command_processing.c ****     {	
 24338              		.loc 1 3412 0 is_stmt 0 discriminator 1
 24339 052e 184B     		ldr	r3, .L951+16
 24340 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24341 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24342 0536 9A42     		cmp	r2, r3
 24343 0538 FFF476AD 		bcc	.L948
3498:..\src/command_processing.c ****         
3499:..\src/command_processing.c ****     }
3500:..\src/command_processing.c **** 
3501:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3502:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 24344              		.loc 1 3502 0 is_stmt 1
 24345 053c 154B     		ldr	r3, .L951+20
 24346 053e 1B68     		ldr	r3, [r3]
 24347 0540 5C1E     		subs	r4, r3, #1
 24348 0542 144B     		ldr	r3, .L951+20
 24349 0544 1B68     		ldr	r3, [r3]
 24350 0546 DBB2     		uxtb	r3, r3
 24351 0548 013B     		subs	r3, r3, #1
 24352 054a DAB2     		uxtb	r2, r3
 24353 054c 07F12003 		add	r3, r7, #32
 24354 0550 1146     		mov	r1, r2
 24355 0552 1846     		mov	r0, r3
 24356 0554 FFF7FEFF 		bl	LCRChecksum
 24357 0558 0346     		mov	r3, r0
 24358 055a 1A46     		mov	r2, r3
 24359 055c 07F12003 		add	r3, r7, #32
 24360 0560 1A55     		strb	r2, [r3, r4]
3503:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 24361              		.loc 1 3503 0
 24362 0562 0C4B     		ldr	r3, .L951+20
 24363 0564 1B68     		ldr	r3, [r3]
 24364 0566 9AB2     		uxth	r2, r3
 24365 0568 07F12003 		add	r3, r7, #32
 24366 056c 1146     		mov	r1, r2
 24367 056e 1846     		mov	r0, r3
 24368 0570 FFF7FEFF 		bl	commWrite
3504:..\src/command_processing.c **** }
 24369              		.loc 1 3504 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 531


 24370 0574 00BF     		nop
 24371 0576 07F5CA77 		add	r7, r7, #404
 24372              		.cfi_def_cfa_offset 12
 24373 057a BD46     		mov	sp, r7
 24374              		.cfi_def_cfa_register 13
 24375              		@ sp needed
 24376 057c 90BD     		pop	{r4, r7, pc}
 24377              	.L952:
 24378 057e 00BF     		.align	2
 24379              	.L951:
 24380 0580 00000000 		.word	g_imu
 24381 0584 00000000 		.word	IMU_connected
 24382 0588 00000000 		.word	c_mem
 24383 058c 00000000 		.word	single_imu_size
 24384 0590 00000000 		.word	N_IMU_Connected
 24385 0594 00000000 		.word	imus_data_size
 24386              		.cfi_endproc
 24387              	.LFE102:
 24388              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 24389              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 24390              		.align	2
 24391              		.global	cmd_get_encoder_map
 24392              		.thumb
 24393              		.thumb_func
 24394              		.type	cmd_get_encoder_map, %function
 24395              	cmd_get_encoder_map:
 24396              	.LFB103:
3505:..\src/command_processing.c **** 
3506:..\src/command_processing.c **** void cmd_get_encoder_map(){
 24397              		.loc 1 3506 0
 24398              		.cfi_startproc
 24399              		@ args = 0, pretend = 0, frame = 16
 24400              		@ frame_needed = 1, uses_anonymous_args = 0
 24401 0000 90B5     		push	{r4, r7, lr}
 24402              		.cfi_def_cfa_offset 12
 24403              		.cfi_offset 4, -12
 24404              		.cfi_offset 7, -8
 24405              		.cfi_offset 14, -4
 24406 0002 85B0     		sub	sp, sp, #20
 24407              		.cfi_def_cfa_offset 32
 24408 0004 00AF     		add	r7, sp, #0
 24409              		.cfi_def_cfa_register 7
3507:..\src/command_processing.c ****     //Retrieve Encoder map
3508:..\src/command_processing.c ****     
3509:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3510:..\src/command_processing.c ****     uint8 CYDATA i, j;
3511:..\src/command_processing.c ****     
3512:..\src/command_processing.c ****     // Header        
3513:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 24410              		.loc 1 3513 0
 24411 0006 A323     		movs	r3, #163
 24412 0008 3B70     		strb	r3, [r7]
3514:..\src/command_processing.c ****     
3515:..\src/command_processing.c ****     // Fill payload
3516:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 24413              		.loc 1 3516 0
 24414 000a 0223     		movs	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 532


 24415 000c 7B70     		strb	r3, [r7, #1]
3517:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 24416              		.loc 1 3517 0
 24417 000e 0523     		movs	r3, #5
 24418 0010 BB70     		strb	r3, [r7, #2]
3518:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24419              		.loc 1 3518 0
 24420 0012 0023     		movs	r3, #0
 24421 0014 FB73     		strb	r3, [r7, #15]
 24422 0016 23E0     		b	.L954
 24423              	.L957:
3519:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24424              		.loc 1 3519 0
 24425 0018 0023     		movs	r3, #0
 24426 001a BB73     		strb	r3, [r7, #14]
 24427 001c 1AE0     		b	.L955
 24428              	.L956:
3520:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 24429              		.loc 1 3520 0 discriminator 3
 24430 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24431 0020 1346     		mov	r3, r2
 24432 0022 9B00     		lsls	r3, r3, #2
 24433 0024 1344     		add	r3, r3, r2
 24434 0026 DA1C     		adds	r2, r3, #3
 24435 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24436 002a D118     		adds	r1, r2, r3
 24437 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24438 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 24439 0030 154C     		ldr	r4, .L958
 24440 0032 1346     		mov	r3, r2
 24441 0034 5B00     		lsls	r3, r3, #1
 24442 0036 1344     		add	r3, r3, r2
 24443 0038 1B01     		lsls	r3, r3, #4
 24444 003a 2344     		add	r3, r3, r4
 24445 003c 0344     		add	r3, r3, r0
 24446 003e 03F5C873 		add	r3, r3, #400
 24447 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 24448 0044 07F11003 		add	r3, r7, #16
 24449 0048 0B44     		add	r3, r3, r1
 24450 004a 03F8102C 		strb	r2, [r3, #-16]
3519:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24451              		.loc 1 3519 0 discriminator 3
 24452 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24453 0050 0133     		adds	r3, r3, #1
 24454 0052 BB73     		strb	r3, [r7, #14]
 24455              	.L955:
3519:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24456              		.loc 1 3519 0 is_stmt 0 discriminator 1
 24457 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24458 0056 042B     		cmp	r3, #4
 24459 0058 E1D9     		bls	.L956
3518:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24460              		.loc 1 3518 0 is_stmt 1 discriminator 2
 24461 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24462 005c 0133     		adds	r3, r3, #1
 24463 005e FB73     		strb	r3, [r7, #15]
 24464              	.L954:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 533


3518:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24465              		.loc 1 3518 0 is_stmt 0 discriminator 1
 24466 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24467 0062 012B     		cmp	r3, #1
 24468 0064 D8D9     		bls	.L957
3521:..\src/command_processing.c ****         }
3522:..\src/command_processing.c ****     }
3523:..\src/command_processing.c ****     
3524:..\src/command_processing.c ****     // Calculate checksum
3525:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 24469              		.loc 1 3525 0 is_stmt 1
 24470 0066 3B46     		mov	r3, r7
 24471 0068 0D21     		movs	r1, #13
 24472 006a 1846     		mov	r0, r3
 24473 006c FFF7FEFF 		bl	LCRChecksum
 24474 0070 0346     		mov	r3, r0
 24475 0072 7B73     		strb	r3, [r7, #13]
3526:..\src/command_processing.c ****     
3527:..\src/command_processing.c ****     // Send package to UART
3528:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 24476              		.loc 1 3528 0
 24477 0074 3B46     		mov	r3, r7
 24478 0076 0E21     		movs	r1, #14
 24479 0078 1846     		mov	r0, r3
 24480 007a FFF7FEFF 		bl	commWrite
3529:..\src/command_processing.c **** }
 24481              		.loc 1 3529 0
 24482 007e 00BF     		nop
 24483 0080 1437     		adds	r7, r7, #20
 24484              		.cfi_def_cfa_offset 12
 24485 0082 BD46     		mov	sp, r7
 24486              		.cfi_def_cfa_register 13
 24487              		@ sp needed
 24488 0084 90BD     		pop	{r4, r7, pc}
 24489              	.L959:
 24490 0086 00BF     		.align	2
 24491              	.L958:
 24492 0088 00000000 		.word	c_mem
 24493              		.cfi_endproc
 24494              	.LFE103:
 24495              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 24496              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 24497              		.align	2
 24498              		.global	cmd_get_encoder_raw
 24499              		.thumb
 24500              		.thumb_func
 24501              		.type	cmd_get_encoder_raw, %function
 24502              	cmd_get_encoder_raw:
 24503              	.LFB104:
3530:..\src/command_processing.c **** 
3531:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 24504              		.loc 1 3531 0
 24505              		.cfi_startproc
 24506              		@ args = 0, pretend = 0, frame = 32
 24507              		@ frame_needed = 1, uses_anonymous_args = 0
 24508 0000 90B5     		push	{r4, r7, lr}
 24509              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 534


 24510              		.cfi_offset 4, -12
 24511              		.cfi_offset 7, -8
 24512              		.cfi_offset 14, -4
 24513 0002 89B0     		sub	sp, sp, #36
 24514              		.cfi_def_cfa_offset 48
 24515 0004 00AF     		add	r7, sp, #0
 24516              		.cfi_def_cfa_register 7
3532:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3533:..\src/command_processing.c ****     
3534:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3535:..\src/command_processing.c ****     uint8 i, j, idx;
3536:..\src/command_processing.c ****     uint16 aux_uint16;
3537:..\src/command_processing.c ****     
3538:..\src/command_processing.c ****     //Header package 
3539:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 24517              		.loc 1 3539 0
 24518 0006 A423     		movs	r3, #164
 24519 0008 3B71     		strb	r3, [r7, #4]
3540:..\src/command_processing.c ****  
3541:..\src/command_processing.c ****     // Fill payload
3542:..\src/command_processing.c ****     idx = 0;
 24520              		.loc 1 3542 0
 24521 000a 0023     		movs	r3, #0
 24522 000c 7B77     		strb	r3, [r7, #29]
3543:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24523              		.loc 1 3543 0
 24524 000e 0023     		movs	r3, #0
 24525 0010 FB77     		strb	r3, [r7, #31]
 24526 0012 3FE0     		b	.L961
 24527              	.L965:
3544:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 24528              		.loc 1 3544 0
 24529 0014 0023     		movs	r3, #0
 24530 0016 BB77     		strb	r3, [r7, #30]
 24531 0018 33E0     		b	.L962
 24532              	.L964:
3545:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 24533              		.loc 1 3545 0
 24534 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 24535 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 24536 001e 3048     		ldr	r0, .L966
 24537 0020 1346     		mov	r3, r2
 24538 0022 5B00     		lsls	r3, r3, #1
 24539 0024 1344     		add	r3, r3, r2
 24540 0026 1B01     		lsls	r3, r3, #4
 24541 0028 0344     		add	r3, r3, r0
 24542 002a 0B44     		add	r3, r3, r1
 24543 002c 03F5C873 		add	r3, r3, #400
 24544 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24545 0032 012B     		cmp	r3, #1
 24546 0034 22D1     		bne	.L963
3546:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 24547              		.loc 1 3546 0
 24548 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 24549 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 24550 003a 2A48     		ldr	r0, .L966+4
 24551 003c 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 535


 24552 003e 9B00     		lsls	r3, r3, #2
 24553 0040 1344     		add	r3, r3, r2
 24554 0042 0B44     		add	r3, r3, r1
 24555 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 24556 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3547:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 24557              		.loc 1 3547 0
 24558 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24559 004c 5B00     		lsls	r3, r3, #1
 24560 004e 0233     		adds	r3, r3, #2
 24561 0050 BA1C     		adds	r2, r7, #2
 24562 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24563 0054 07F12001 		add	r1, r7, #32
 24564 0058 0B44     		add	r3, r3, r1
 24565 005a 03F81C2C 		strb	r2, [r3, #-28]
3548:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 24566              		.loc 1 3548 0
 24567 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24568 0060 5B00     		lsls	r3, r3, #1
 24569 0062 5A1C     		adds	r2, r3, #1
 24570 0064 BB1C     		adds	r3, r7, #2
 24571 0066 0133     		adds	r3, r3, #1
 24572 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24573 006a 07F12003 		add	r3, r7, #32
 24574 006e 1344     		add	r3, r3, r2
 24575 0070 0A46     		mov	r2, r1
 24576 0072 03F81C2C 		strb	r2, [r3, #-28]
3549:..\src/command_processing.c ****                 idx++;
 24577              		.loc 1 3549 0
 24578 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24579 0078 0133     		adds	r3, r3, #1
 24580 007a 7B77     		strb	r3, [r7, #29]
 24581              	.L963:
3544:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 24582              		.loc 1 3544 0 discriminator 2
 24583 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24584 007e 0133     		adds	r3, r3, #1
 24585 0080 BB77     		strb	r3, [r7, #30]
 24586              	.L962:
3544:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 24587              		.loc 1 3544 0 is_stmt 0 discriminator 1
 24588 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24589 0084 184A     		ldr	r2, .L966+8
 24590 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24591 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 24592 008a 9A42     		cmp	r2, r3
 24593 008c C5D3     		bcc	.L964
3543:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 24594              		.loc 1 3543 0 is_stmt 1 discriminator 2
 24595 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24596 0090 0133     		adds	r3, r3, #1
 24597 0092 FB77     		strb	r3, [r7, #31]
 24598              	.L961:
3543:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 24599              		.loc 1 3543 0 is_stmt 0 discriminator 1
 24600 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24601 0096 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 536


 24602 0098 BCD9     		bls	.L965
3550:..\src/command_processing.c ****             }
3551:..\src/command_processing.c ****         }
3552:..\src/command_processing.c ****     }
3553:..\src/command_processing.c **** 
3554:..\src/command_processing.c ****     // Calculate checksum
3555:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 24603              		.loc 1 3555 0 is_stmt 1
 24604 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24605 009c 5B00     		lsls	r3, r3, #1
 24606 009e 5C1C     		adds	r4, r3, #1
 24607 00a0 7B7F     		ldrb	r3, [r7, #29]
 24608 00a2 5B00     		lsls	r3, r3, #1
 24609 00a4 DBB2     		uxtb	r3, r3
 24610 00a6 0133     		adds	r3, r3, #1
 24611 00a8 DAB2     		uxtb	r2, r3
 24612 00aa 3B1D     		adds	r3, r7, #4
 24613 00ac 1146     		mov	r1, r2
 24614 00ae 1846     		mov	r0, r3
 24615 00b0 FFF7FEFF 		bl	LCRChecksum
 24616 00b4 0346     		mov	r3, r0
 24617 00b6 1A46     		mov	r2, r3
 24618 00b8 07F12003 		add	r3, r7, #32
 24619 00bc 2344     		add	r3, r3, r4
 24620 00be 03F81C2C 		strb	r2, [r3, #-28]
3556:..\src/command_processing.c ****     
3557:..\src/command_processing.c ****     // Send package to UART
3558:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 24621              		.loc 1 3558 0
 24622 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24623 00c4 0133     		adds	r3, r3, #1
 24624 00c6 9BB2     		uxth	r3, r3
 24625 00c8 5B00     		lsls	r3, r3, #1
 24626 00ca 9AB2     		uxth	r2, r3
 24627 00cc 3B1D     		adds	r3, r7, #4
 24628 00ce 1146     		mov	r1, r2
 24629 00d0 1846     		mov	r0, r3
 24630 00d2 FFF7FEFF 		bl	commWrite
3559:..\src/command_processing.c **** }
 24631              		.loc 1 3559 0
 24632 00d6 00BF     		nop
 24633 00d8 2437     		adds	r7, r7, #36
 24634              		.cfi_def_cfa_offset 12
 24635 00da BD46     		mov	sp, r7
 24636              		.cfi_def_cfa_register 13
 24637              		@ sp needed
 24638 00dc 90BD     		pop	{r4, r7, pc}
 24639              	.L967:
 24640 00de 00BF     		.align	2
 24641              	.L966:
 24642 00e0 00000000 		.word	c_mem
 24643 00e4 00000000 		.word	Encoder_Value
 24644 00e8 00000000 		.word	N_Encoder_Line_Connected
 24645              		.cfi_endproc
 24646              	.LFE104:
 24647              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 24648              		.section	.text.cmd_get_ADC_map,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 537


 24649              		.align	2
 24650              		.global	cmd_get_ADC_map
 24651              		.thumb
 24652              		.thumb_func
 24653              		.type	cmd_get_ADC_map, %function
 24654              	cmd_get_ADC_map:
 24655              	.LFB105:
3560:..\src/command_processing.c **** 
3561:..\src/command_processing.c **** void cmd_get_ADC_map(){
 24656              		.loc 1 3561 0
 24657              		.cfi_startproc
 24658              		@ args = 0, pretend = 0, frame = 16
 24659              		@ frame_needed = 1, uses_anonymous_args = 0
 24660 0000 80B5     		push	{r7, lr}
 24661              		.cfi_def_cfa_offset 8
 24662              		.cfi_offset 7, -8
 24663              		.cfi_offset 14, -4
 24664 0002 84B0     		sub	sp, sp, #16
 24665              		.cfi_def_cfa_offset 24
 24666 0004 00AF     		add	r7, sp, #0
 24667              		.cfi_def_cfa_register 7
3562:..\src/command_processing.c ****     //Retrieve Encoder map
3563:..\src/command_processing.c ****     
3564:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3565:..\src/command_processing.c ****     uint8 CYDATA i;
3566:..\src/command_processing.c ****     
3567:..\src/command_processing.c ****     // Header        
3568:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 24668              		.loc 1 3568 0
 24669 0006 A523     		movs	r3, #165
 24670 0008 3B70     		strb	r3, [r7]
3569:..\src/command_processing.c ****     
3570:..\src/command_processing.c ****     // Fill payload
3571:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 24671              		.loc 1 3571 0
 24672 000a 0C23     		movs	r3, #12
 24673 000c 7B70     		strb	r3, [r7, #1]
3572:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24674              		.loc 1 3572 0
 24675 000e 0023     		movs	r3, #0
 24676 0010 FB73     		strb	r3, [r7, #15]
 24677 0012 0EE0     		b	.L969
 24678              	.L970:
3573:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 24679              		.loc 1 3573 0 discriminator 3
 24680 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24681 0016 0233     		adds	r3, r3, #2
 24682 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24683 001a 0F49     		ldr	r1, .L971
 24684 001c 0A44     		add	r2, r2, r1
 24685 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 24686 0022 07F11001 		add	r1, r7, #16
 24687 0026 0B44     		add	r3, r3, r1
 24688 0028 03F8102C 		strb	r2, [r3, #-16]
3572:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24689              		.loc 1 3572 0 discriminator 3
 24690 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 538


 24691 002e 0133     		adds	r3, r3, #1
 24692 0030 FB73     		strb	r3, [r7, #15]
 24693              	.L969:
3572:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24694              		.loc 1 3572 0 is_stmt 0 discriminator 1
 24695 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24696 0034 0B2B     		cmp	r3, #11
 24697 0036 EDD9     		bls	.L970
3574:..\src/command_processing.c ****     }
3575:..\src/command_processing.c ****     
3576:..\src/command_processing.c ****     // Calculate checksum
3577:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 24698              		.loc 1 3577 0 is_stmt 1
 24699 0038 3B46     		mov	r3, r7
 24700 003a 0E21     		movs	r1, #14
 24701 003c 1846     		mov	r0, r3
 24702 003e FFF7FEFF 		bl	LCRChecksum
 24703 0042 0346     		mov	r3, r0
 24704 0044 BB73     		strb	r3, [r7, #14]
3578:..\src/command_processing.c ****     
3579:..\src/command_processing.c ****     // Send package to UART
3580:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 24705              		.loc 1 3580 0
 24706 0046 3B46     		mov	r3, r7
 24707 0048 0F21     		movs	r1, #15
 24708 004a 1846     		mov	r0, r3
 24709 004c FFF7FEFF 		bl	commWrite
3581:..\src/command_processing.c ****     
3582:..\src/command_processing.c **** }
 24710              		.loc 1 3582 0
 24711 0050 00BF     		nop
 24712 0052 1037     		adds	r7, r7, #16
 24713              		.cfi_def_cfa_offset 8
 24714 0054 BD46     		mov	sp, r7
 24715              		.cfi_def_cfa_register 13
 24716              		@ sp needed
 24717 0056 80BD     		pop	{r7, pc}
 24718              	.L972:
 24719              		.align	2
 24720              	.L971:
 24721 0058 00000000 		.word	c_mem
 24722              		.cfi_endproc
 24723              	.LFE105:
 24724              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 24725              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 24726              		.align	2
 24727              		.global	cmd_get_ADC_raw
 24728              		.thumb
 24729              		.thumb_func
 24730              		.type	cmd_get_ADC_raw, %function
 24731              	cmd_get_ADC_raw:
 24732              	.LFB106:
3583:..\src/command_processing.c **** 
3584:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 24733              		.loc 1 3584 0
 24734              		.cfi_startproc
 24735              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 539


 24736              		@ frame_needed = 1, uses_anonymous_args = 0
 24737 0000 90B5     		push	{r4, r7, lr}
 24738              		.cfi_def_cfa_offset 12
 24739              		.cfi_offset 4, -12
 24740              		.cfi_offset 7, -8
 24741              		.cfi_offset 14, -4
 24742 0002 89B0     		sub	sp, sp, #36
 24743              		.cfi_def_cfa_offset 48
 24744 0004 00AF     		add	r7, sp, #0
 24745              		.cfi_def_cfa_register 7
3585:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3586:..\src/command_processing.c ****     
3587:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3588:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 24746              		.loc 1 3588 0
 24747 0006 0023     		movs	r3, #0
 24748 0008 BB77     		strb	r3, [r7, #30]
3589:..\src/command_processing.c ****     int16 aux_int16;
3590:..\src/command_processing.c ****     
3591:..\src/command_processing.c ****     // Header        
3592:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 24749              		.loc 1 3592 0
 24750 000a A623     		movs	r3, #166
 24751 000c 3B71     		strb	r3, [r7, #4]
3593:..\src/command_processing.c ****     
3594:..\src/command_processing.c ****     // Fill payload
3595:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 24752              		.loc 1 3595 0
 24753 000e 0023     		movs	r3, #0
 24754 0010 FB77     		strb	r3, [r7, #31]
 24755 0012 27E0     		b	.L974
 24756              	.L976:
3596:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24757              		.loc 1 3596 0
 24758 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24759 0016 274A     		ldr	r2, .L977
 24760 0018 1344     		add	r3, r3, r2
 24761 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 24762 001e 012B     		cmp	r3, #1
 24763 0020 1DD1     		bne	.L975
3597:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 24764              		.loc 1 3597 0
 24765 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24766 0024 244A     		ldr	r2, .L977+4
 24767 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 24768 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3598:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 24769              		.loc 1 3598 0
 24770 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24771 002e 5B00     		lsls	r3, r3, #1
 24772 0030 0233     		adds	r3, r3, #2
 24773 0032 BA1C     		adds	r2, r7, #2
 24774 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24775 0036 07F12001 		add	r1, r7, #32
 24776 003a 0B44     		add	r3, r3, r1
 24777 003c 03F81C2C 		strb	r2, [r3, #-28]
3599:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 540


 24778              		.loc 1 3599 0
 24779 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24780 0042 5B00     		lsls	r3, r3, #1
 24781 0044 5A1C     		adds	r2, r3, #1
 24782 0046 BB1C     		adds	r3, r7, #2
 24783 0048 0133     		adds	r3, r3, #1
 24784 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24785 004c 07F12003 		add	r3, r7, #32
 24786 0050 1344     		add	r3, r3, r2
 24787 0052 0A46     		mov	r2, r1
 24788 0054 03F81C2C 		strb	r2, [r3, #-28]
3600:..\src/command_processing.c ****             idx++;
 24789              		.loc 1 3600 0
 24790 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24791 005a 0133     		adds	r3, r3, #1
 24792 005c BB77     		strb	r3, [r7, #30]
 24793              	.L975:
3595:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24794              		.loc 1 3595 0 discriminator 2
 24795 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24796 0060 0133     		adds	r3, r3, #1
 24797 0062 FB77     		strb	r3, [r7, #31]
 24798              	.L974:
3595:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24799              		.loc 1 3595 0 is_stmt 0 discriminator 1
 24800 0064 154B     		ldr	r3, .L977+8
 24801 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24802 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 24803 006a 9A42     		cmp	r2, r3
 24804 006c D2D3     		bcc	.L976
3601:..\src/command_processing.c ****         }
3602:..\src/command_processing.c ****     }
3603:..\src/command_processing.c **** 
3604:..\src/command_processing.c ****     // Calculate checksum
3605:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 24805              		.loc 1 3605 0 is_stmt 1
 24806 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24807 0070 5B00     		lsls	r3, r3, #1
 24808 0072 5C1C     		adds	r4, r3, #1
 24809 0074 BB7F     		ldrb	r3, [r7, #30]
 24810 0076 5B00     		lsls	r3, r3, #1
 24811 0078 DBB2     		uxtb	r3, r3
 24812 007a 0133     		adds	r3, r3, #1
 24813 007c DAB2     		uxtb	r2, r3
 24814 007e 3B1D     		adds	r3, r7, #4
 24815 0080 1146     		mov	r1, r2
 24816 0082 1846     		mov	r0, r3
 24817 0084 FFF7FEFF 		bl	LCRChecksum
 24818 0088 0346     		mov	r3, r0
 24819 008a 1A46     		mov	r2, r3
 24820 008c 07F12003 		add	r3, r7, #32
 24821 0090 2344     		add	r3, r3, r4
 24822 0092 03F81C2C 		strb	r2, [r3, #-28]
3606:..\src/command_processing.c ****     
3607:..\src/command_processing.c ****     // Send package to UART
3608:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 24823              		.loc 1 3608 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 541


 24824 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24825 0098 0133     		adds	r3, r3, #1
 24826 009a 9BB2     		uxth	r3, r3
 24827 009c 5B00     		lsls	r3, r3, #1
 24828 009e 9AB2     		uxth	r2, r3
 24829 00a0 3B1D     		adds	r3, r7, #4
 24830 00a2 1146     		mov	r1, r2
 24831 00a4 1846     		mov	r0, r3
 24832 00a6 FFF7FEFF 		bl	commWrite
3609:..\src/command_processing.c **** }
 24833              		.loc 1 3609 0
 24834 00aa 00BF     		nop
 24835 00ac 2437     		adds	r7, r7, #36
 24836              		.cfi_def_cfa_offset 12
 24837 00ae BD46     		mov	sp, r7
 24838              		.cfi_def_cfa_register 13
 24839              		@ sp needed
 24840 00b0 90BD     		pop	{r4, r7, pc}
 24841              	.L978:
 24842 00b2 00BF     		.align	2
 24843              	.L977:
 24844 00b4 00000000 		.word	c_mem
 24845 00b8 00000000 		.word	ADC_buf
 24846 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 24847              		.cfi_endproc
 24848              	.LFE106:
 24849              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 24850              		.bss
 24851              		.align	2
 24852              	last_aux_int16.11241:
 24853 0000 00000000 		.space	4
 24854              		.text
 24855              	.Letext0:
 24856              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 24857              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 24858              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 24859              		.file 6 "..\\src\\commands.h"
 24860              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 24861              		.file 8 "..\\src\\globals.h"
 24862              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 24863              		.section	.debug_info,"",%progbits
 24864              	.Ldebug_info0:
 24865 0000 B3200000 		.4byte	0x20b3
 24866 0004 0400     		.2byte	0x4
 24867 0006 00000000 		.4byte	.Ldebug_abbrev0
 24868 000a 04       		.byte	0x4
 24869 000b 01       		.uleb128 0x1
 24870 000c B5070000 		.4byte	.LASF337
 24871 0010 0C       		.byte	0xc
 24872 0011 5D110000 		.4byte	.LASF338
 24873 0015 C8030000 		.4byte	.LASF339
 24874 0019 00000000 		.4byte	.Ldebug_ranges0+0
 24875 001d 00000000 		.4byte	0
 24876 0021 00000000 		.4byte	.Ldebug_line0
 24877 0025 02       		.uleb128 0x2
 24878 0026 01       		.byte	0x1
 24879 0027 06       		.byte	0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 542


 24880 0028 0C030000 		.4byte	.LASF0
 24881 002c 02       		.uleb128 0x2
 24882 002d 01       		.byte	0x1
 24883 002e 08       		.byte	0x8
 24884 002f 6A030000 		.4byte	.LASF1
 24885 0033 02       		.uleb128 0x2
 24886 0034 02       		.byte	0x2
 24887 0035 05       		.byte	0x5
 24888 0036 2F0E0000 		.4byte	.LASF2
 24889 003a 02       		.uleb128 0x2
 24890 003b 02       		.byte	0x2
 24891 003c 07       		.byte	0x7
 24892 003d 84100000 		.4byte	.LASF3
 24893 0041 03       		.uleb128 0x3
 24894 0042 1B110000 		.4byte	.LASF5
 24895 0046 03       		.byte	0x3
 24896 0047 3F       		.byte	0x3f
 24897 0048 4C000000 		.4byte	0x4c
 24898 004c 02       		.uleb128 0x2
 24899 004d 04       		.byte	0x4
 24900 004e 05       		.byte	0x5
 24901 004f 22020000 		.4byte	.LASF4
 24902 0053 03       		.uleb128 0x3
 24903 0054 6F080000 		.4byte	.LASF6
 24904 0058 03       		.byte	0x3
 24905 0059 41       		.byte	0x41
 24906 005a 5E000000 		.4byte	0x5e
 24907 005e 02       		.uleb128 0x2
 24908 005f 04       		.byte	0x4
 24909 0060 07       		.byte	0x7
 24910 0061 78060000 		.4byte	.LASF7
 24911 0065 02       		.uleb128 0x2
 24912 0066 08       		.byte	0x8
 24913 0067 05       		.byte	0x5
 24914 0068 7A080000 		.4byte	.LASF8
 24915 006c 02       		.uleb128 0x2
 24916 006d 08       		.byte	0x8
 24917 006e 07       		.byte	0x7
 24918 006f D10B0000 		.4byte	.LASF9
 24919 0073 04       		.uleb128 0x4
 24920 0074 04       		.byte	0x4
 24921 0075 05       		.byte	0x5
 24922 0076 696E7400 		.ascii	"int\000"
 24923 007a 02       		.uleb128 0x2
 24924 007b 04       		.byte	0x4
 24925 007c 07       		.byte	0x7
 24926 007d 65090000 		.4byte	.LASF10
 24927 0081 03       		.uleb128 0x3
 24928 0082 55000000 		.4byte	.LASF11
 24929 0086 04       		.byte	0x4
 24930 0087 2C       		.byte	0x2c
 24931 0088 41000000 		.4byte	0x41
 24932 008c 03       		.uleb128 0x3
 24933 008d FB0F0000 		.4byte	.LASF12
 24934 0091 04       		.byte	0x4
 24935 0092 30       		.byte	0x30
 24936 0093 53000000 		.4byte	0x53
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 543


 24937 0097 05       		.uleb128 0x5
 24938 0098 1D0E0000 		.4byte	.LASF13
 24939 009c 05       		.byte	0x5
 24940 009d E401     		.2byte	0x1e4
 24941 009f 2C000000 		.4byte	0x2c
 24942 00a3 05       		.uleb128 0x5
 24943 00a4 B0110000 		.4byte	.LASF14
 24944 00a8 05       		.byte	0x5
 24945 00a9 E501     		.2byte	0x1e5
 24946 00ab 3A000000 		.4byte	0x3a
 24947 00af 05       		.uleb128 0x5
 24948 00b0 81000000 		.4byte	.LASF15
 24949 00b4 05       		.byte	0x5
 24950 00b5 E601     		.2byte	0x1e6
 24951 00b7 5E000000 		.4byte	0x5e
 24952 00bb 05       		.uleb128 0x5
 24953 00bc 6A010000 		.4byte	.LASF16
 24954 00c0 05       		.byte	0x5
 24955 00c1 E701     		.2byte	0x1e7
 24956 00c3 25000000 		.4byte	0x25
 24957 00c7 05       		.uleb128 0x5
 24958 00c8 5B0F0000 		.4byte	.LASF17
 24959 00cc 05       		.byte	0x5
 24960 00cd E801     		.2byte	0x1e8
 24961 00cf 33000000 		.4byte	0x33
 24962 00d3 05       		.uleb128 0x5
 24963 00d4 BE100000 		.4byte	.LASF18
 24964 00d8 05       		.byte	0x5
 24965 00d9 E901     		.2byte	0x1e9
 24966 00db 4C000000 		.4byte	0x4c
 24967 00df 05       		.uleb128 0x5
 24968 00e0 8F020000 		.4byte	.LASF19
 24969 00e4 05       		.byte	0x5
 24970 00e5 EA01     		.2byte	0x1ea
 24971 00e7 EB000000 		.4byte	0xeb
 24972 00eb 02       		.uleb128 0x2
 24973 00ec 04       		.byte	0x4
 24974 00ed 04       		.byte	0x4
 24975 00ee 2B090000 		.4byte	.LASF20
 24976 00f2 02       		.uleb128 0x2
 24977 00f3 08       		.byte	0x8
 24978 00f4 04       		.byte	0x4
 24979 00f5 D2080000 		.4byte	.LASF21
 24980 00f9 02       		.uleb128 0x2
 24981 00fa 01       		.byte	0x1
 24982 00fb 08       		.byte	0x8
 24983 00fc 68040000 		.4byte	.LASF22
 24984 0100 05       		.uleb128 0x5
 24985 0101 B10C0000 		.4byte	.LASF23
 24986 0105 05       		.byte	0x5
 24987 0106 8E02     		.2byte	0x28e
 24988 0108 0C010000 		.4byte	0x10c
 24989 010c 06       		.uleb128 0x6
 24990 010d 97000000 		.4byte	0x97
 24991 0111 02       		.uleb128 0x2
 24992 0112 08       		.byte	0x8
 24993 0113 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 544


 24994 0114 CE0A0000 		.4byte	.LASF24
 24995 0118 02       		.uleb128 0x2
 24996 0119 04       		.byte	0x4
 24997 011a 07       		.byte	0x7
 24998 011b 10000000 		.4byte	.LASF25
 24999 011f 07       		.uleb128 0x7
 25000 0120 04       		.byte	0x4
 25001 0121 F9000000 		.4byte	0xf9
 25002 0125 07       		.uleb128 0x7
 25003 0126 04       		.byte	0x4
 25004 0127 2B010000 		.4byte	0x12b
 25005 012b 08       		.uleb128 0x8
 25006 012c F9000000 		.4byte	0xf9
 25007 0130 09       		.uleb128 0x9
 25008 0131 F9000000 		.4byte	0xf9
 25009 0135 40010000 		.4byte	0x140
 25010 0139 0A       		.uleb128 0xa
 25011 013a 18010000 		.4byte	0x118
 25012 013e 19       		.byte	0x19
 25013 013f 00       		.byte	0
 25014 0140 09       		.uleb128 0x9
 25015 0141 F9000000 		.4byte	0xf9
 25016 0145 50010000 		.4byte	0x150
 25017 0149 0A       		.uleb128 0xa
 25018 014a 18010000 		.4byte	0x118
 25019 014e 07       		.byte	0x7
 25020 014f 00       		.byte	0
 25021 0150 09       		.uleb128 0x9
 25022 0151 97000000 		.4byte	0x97
 25023 0155 60010000 		.4byte	0x160
 25024 0159 0A       		.uleb128 0xa
 25025 015a 18010000 		.4byte	0x118
 25026 015e 1B       		.byte	0x1b
 25027 015f 00       		.byte	0
 25028 0160 0B       		.uleb128 0xb
 25029 0161 9E090000 		.4byte	.LASF55
 25030 0165 01       		.byte	0x1
 25031 0166 2C000000 		.4byte	0x2c
 25032 016a 06       		.byte	0x6
 25033 016b 42       		.byte	0x42
 25034 016c 1F020000 		.4byte	0x21f
 25035 0170 0C       		.uleb128 0xc
 25036 0171 D8110000 		.4byte	.LASF26
 25037 0175 00       		.byte	0
 25038 0176 0C       		.uleb128 0xc
 25039 0177 A10E0000 		.4byte	.LASF27
 25040 017b 01       		.byte	0x1
 25041 017c 0C       		.uleb128 0xc
 25042 017d 54060000 		.4byte	.LASF28
 25043 0181 03       		.byte	0x3
 25044 0182 0C       		.uleb128 0xc
 25045 0183 A2030000 		.4byte	.LASF29
 25046 0187 04       		.byte	0x4
 25047 0188 0C       		.uleb128 0xc
 25048 0189 D90C0000 		.4byte	.LASF30
 25049 018d 05       		.byte	0x5
 25050 018e 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 545


 25051 018f 5D070000 		.4byte	.LASF31
 25052 0193 06       		.byte	0x6
 25053 0194 0C       		.uleb128 0xc
 25054 0195 98060000 		.4byte	.LASF32
 25055 0199 09       		.byte	0x9
 25056 019a 0C       		.uleb128 0xc
 25057 019b 19000000 		.4byte	.LASF33
 25058 019f 0A       		.byte	0xa
 25059 01a0 0C       		.uleb128 0xc
 25060 01a1 3D0F0000 		.4byte	.LASF34
 25061 01a5 0C       		.byte	0xc
 25062 01a6 0C       		.uleb128 0xc
 25063 01a7 330B0000 		.4byte	.LASF35
 25064 01ab 0D       		.byte	0xd
 25065 01ac 0C       		.uleb128 0xc
 25066 01ad 43000000 		.4byte	.LASF36
 25067 01b1 80       		.byte	0x80
 25068 01b2 0C       		.uleb128 0xc
 25069 01b3 57040000 		.4byte	.LASF37
 25070 01b7 81       		.byte	0x81
 25071 01b8 0C       		.uleb128 0xc
 25072 01b9 4D050000 		.4byte	.LASF38
 25073 01bd 82       		.byte	0x82
 25074 01be 0C       		.uleb128 0xc
 25075 01bf 6B0E0000 		.4byte	.LASF39
 25076 01c3 83       		.byte	0x83
 25077 01c4 0C       		.uleb128 0xc
 25078 01c5 F40D0000 		.4byte	.LASF40
 25079 01c9 84       		.byte	0x84
 25080 01ca 0C       		.uleb128 0xc
 25081 01cb A7020000 		.4byte	.LASF41
 25082 01cf 85       		.byte	0x85
 25083 01d0 0C       		.uleb128 0xc
 25084 01d1 9F070000 		.4byte	.LASF42
 25085 01d5 86       		.byte	0x86
 25086 01d6 0C       		.uleb128 0xc
 25087 01d7 3D070000 		.4byte	.LASF43
 25088 01db 88       		.byte	0x88
 25089 01dc 0C       		.uleb128 0xc
 25090 01dd 1E0F0000 		.4byte	.LASF44
 25091 01e1 89       		.byte	0x89
 25092 01e2 0C       		.uleb128 0xc
 25093 01e3 2F0C0000 		.4byte	.LASF45
 25094 01e7 8B       		.byte	0x8b
 25095 01e8 0C       		.uleb128 0xc
 25096 01e9 9F0A0000 		.4byte	.LASF46
 25097 01ed 8C       		.byte	0x8c
 25098 01ee 0C       		.uleb128 0xc
 25099 01ef 4A080000 		.4byte	.LASF47
 25100 01f3 8E       		.byte	0x8e
 25101 01f4 0C       		.uleb128 0xc
 25102 01f5 670C0000 		.4byte	.LASF48
 25103 01f9 90       		.byte	0x90
 25104 01fa 0C       		.uleb128 0xc
 25105 01fb 5D100000 		.4byte	.LASF49
 25106 01ff A1       		.byte	0xa1
 25107 0200 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 546


 25108 0201 B70D0000 		.4byte	.LASF50
 25109 0205 A2       		.byte	0xa2
 25110 0206 0C       		.uleb128 0xc
 25111 0207 F0090000 		.4byte	.LASF51
 25112 020b A3       		.byte	0xa3
 25113 020c 0C       		.uleb128 0xc
 25114 020d C90D0000 		.4byte	.LASF52
 25115 0211 A4       		.byte	0xa4
 25116 0212 0C       		.uleb128 0xc
 25117 0213 900E0000 		.4byte	.LASF53
 25118 0217 A5       		.byte	0xa5
 25119 0218 0C       		.uleb128 0xc
 25120 0219 9D0D0000 		.4byte	.LASF54
 25121 021d A6       		.byte	0xa6
 25122 021e 00       		.byte	0
 25123 021f 0B       		.uleb128 0xb
 25124 0220 87110000 		.4byte	.LASF56
 25125 0224 01       		.byte	0x1
 25126 0225 2C000000 		.4byte	0x2c
 25127 0229 06       		.byte	0x6
 25128 022a 8B       		.byte	0x8b
 25129 022b 54020000 		.4byte	0x254
 25130 022f 0C       		.uleb128 0xc
 25131 0230 D9050000 		.4byte	.LASF57
 25132 0234 00       		.byte	0
 25133 0235 0C       		.uleb128 0xc
 25134 0236 DC090000 		.4byte	.LASF58
 25135 023a 01       		.byte	0x1
 25136 023b 0C       		.uleb128 0xc
 25137 023c D9010000 		.4byte	.LASF59
 25138 0240 02       		.byte	0x2
 25139 0241 0C       		.uleb128 0xc
 25140 0242 4C010000 		.4byte	.LASF60
 25141 0246 03       		.byte	0x3
 25142 0247 0C       		.uleb128 0xc
 25143 0248 FF000000 		.4byte	.LASF61
 25144 024c 04       		.byte	0x4
 25145 024d 0C       		.uleb128 0xc
 25146 024e 2B000000 		.4byte	.LASF62
 25147 0252 05       		.byte	0x5
 25148 0253 00       		.byte	0
 25149 0254 0B       		.uleb128 0xb
 25150 0255 88080000 		.4byte	.LASF63
 25151 0259 01       		.byte	0x1
 25152 025a 2C000000 		.4byte	0x2c
 25153 025e 06       		.byte	0x6
 25154 025f 9D       		.byte	0x9d
 25155 0260 7D020000 		.4byte	0x27d
 25156 0264 0C       		.uleb128 0xc
 25157 0265 00110000 		.4byte	.LASF64
 25158 0269 00       		.byte	0
 25159 026a 0C       		.uleb128 0xc
 25160 026b 31070000 		.4byte	.LASF65
 25161 026f 01       		.byte	0x1
 25162 0270 0C       		.uleb128 0xc
 25163 0271 BE0A0000 		.4byte	.LASF66
 25164 0275 02       		.byte	0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 547


 25165 0276 0C       		.uleb128 0xc
 25166 0277 3F060000 		.4byte	.LASF67
 25167 027b 03       		.byte	0x3
 25168 027c 00       		.byte	0
 25169 027d 0B       		.uleb128 0xb
 25170 027e 4B030000 		.4byte	.LASF68
 25171 0282 01       		.byte	0x1
 25172 0283 2C000000 		.4byte	0x2c
 25173 0287 06       		.byte	0x6
 25174 0288 A7       		.byte	0xa7
 25175 0289 9A020000 		.4byte	0x29a
 25176 028d 0C       		.uleb128 0xc
 25177 028e AD0D0000 		.4byte	.LASF69
 25178 0292 00       		.byte	0
 25179 0293 0C       		.uleb128 0xc
 25180 0294 B4080000 		.4byte	.LASF70
 25181 0298 01       		.byte	0x1
 25182 0299 00       		.byte	0
 25183 029a 0B       		.uleb128 0xb
 25184 029b 800B0000 		.4byte	.LASF71
 25185 029f 01       		.byte	0x1
 25186 02a0 2C000000 		.4byte	0x2c
 25187 02a4 06       		.byte	0x6
 25188 02a5 AC       		.byte	0xac
 25189 02a6 B7020000 		.4byte	0x2b7
 25190 02aa 0C       		.uleb128 0xc
 25191 02ab BE050000 		.4byte	.LASF72
 25192 02af 00       		.byte	0
 25193 02b0 0C       		.uleb128 0xc
 25194 02b1 EE060000 		.4byte	.LASF73
 25195 02b5 01       		.byte	0x1
 25196 02b6 00       		.byte	0
 25197 02b7 0B       		.uleb128 0xb
 25198 02b8 500F0000 		.4byte	.LASF74
 25199 02bc 01       		.byte	0x1
 25200 02bd 2C000000 		.4byte	0x2c
 25201 02c1 06       		.byte	0x6
 25202 02c2 B4       		.byte	0xb4
 25203 02c3 04030000 		.4byte	0x304
 25204 02c7 0C       		.uleb128 0xc
 25205 02c8 F5060000 		.4byte	.LASF75
 25206 02cc 00       		.byte	0
 25207 02cd 0C       		.uleb128 0xc
 25208 02ce 95110000 		.4byte	.LASF76
 25209 02d2 01       		.byte	0x1
 25210 02d3 0C       		.uleb128 0xc
 25211 02d4 98080000 		.4byte	.LASF77
 25212 02d8 02       		.byte	0x2
 25213 02d9 0C       		.uleb128 0xc
 25214 02da 7B0A0000 		.4byte	.LASF78
 25215 02de 03       		.byte	0x3
 25216 02df 0C       		.uleb128 0xc
 25217 02e0 A9090000 		.4byte	.LASF79
 25218 02e4 04       		.byte	0x4
 25219 02e5 0C       		.uleb128 0xc
 25220 02e6 E80B0000 		.4byte	.LASF80
 25221 02ea 05       		.byte	0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 548


 25222 02eb 0C       		.uleb128 0xc
 25223 02ec DA0A0000 		.4byte	.LASF81
 25224 02f0 06       		.byte	0x6
 25225 02f1 0C       		.uleb128 0xc
 25226 02f2 3D0A0000 		.4byte	.LASF82
 25227 02f6 07       		.byte	0x7
 25228 02f7 0C       		.uleb128 0xc
 25229 02f8 8E050000 		.4byte	.LASF83
 25230 02fc 08       		.byte	0x8
 25231 02fd 0C       		.uleb128 0xc
 25232 02fe 33060000 		.4byte	.LASF84
 25233 0302 09       		.byte	0x9
 25234 0303 00       		.byte	0
 25235 0304 03       		.uleb128 0x3
 25236 0305 E1100000 		.4byte	.LASF85
 25237 0309 07       		.byte	0x7
 25238 030a 7E       		.byte	0x7e
 25239 030b 0F030000 		.4byte	0x30f
 25240 030f 0D       		.uleb128 0xd
 25241 0310 E1100000 		.4byte	.LASF85
 25242 0314 07       		.uleb128 0x7
 25243 0315 04       		.byte	0x4
 25244 0316 04030000 		.4byte	0x304
 25245 031a 0E       		.uleb128 0xe
 25246 031b 43080000 		.4byte	.LASF88
 25247 031f 10       		.byte	0x10
 25248 0320 08       		.byte	0x8
 25249 0321 CE       		.byte	0xce
 25250 0322 57030000 		.4byte	0x357
 25251 0326 0F       		.uleb128 0xf
 25252 0327 706F7300 		.ascii	"pos\000"
 25253 032b 08       		.byte	0x8
 25254 032c CF       		.byte	0xcf
 25255 032d D3000000 		.4byte	0xd3
 25256 0331 00       		.byte	0
 25257 0332 10       		.uleb128 0x10
 25258 0333 21070000 		.4byte	.LASF86
 25259 0337 08       		.byte	0x8
 25260 0338 D0       		.byte	0xd0
 25261 0339 D3000000 		.4byte	0xd3
 25262 033d 04       		.byte	0x4
 25263 033e 0F       		.uleb128 0xf
 25264 033f 70776D00 		.ascii	"pwm\000"
 25265 0343 08       		.byte	0x8
 25266 0344 D1       		.byte	0xd1
 25267 0345 D3000000 		.4byte	0xd3
 25268 0349 08       		.byte	0x8
 25269 034a 10       		.uleb128 0x10
 25270 034b 290C0000 		.4byte	.LASF87
 25271 034f 08       		.byte	0x8
 25272 0350 D2       		.byte	0xd2
 25273 0351 97000000 		.4byte	0x97
 25274 0355 0C       		.byte	0xc
 25275 0356 00       		.byte	0
 25276 0357 0E       		.uleb128 0xe
 25277 0358 950D0000 		.4byte	.LASF89
 25278 035c 30       		.byte	0x30
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 549


 25279 035d 08       		.byte	0x8
 25280 035e D9       		.byte	0xd9
 25281 035f AC030000 		.4byte	0x3ac
 25282 0363 0F       		.uleb128 0xf
 25283 0364 706F7300 		.ascii	"pos\000"
 25284 0368 08       		.byte	0x8
 25285 0369 DA       		.byte	0xda
 25286 036a AC030000 		.4byte	0x3ac
 25287 036e 00       		.byte	0
 25288 036f 10       		.uleb128 0x10
 25289 0370 21070000 		.4byte	.LASF86
 25290 0374 08       		.byte	0x8
 25291 0375 DB       		.byte	0xdb
 25292 0376 D3000000 		.4byte	0xd3
 25293 037a 0C       		.byte	0xc
 25294 037b 10       		.uleb128 0x10
 25295 037c 9D0F0000 		.4byte	.LASF90
 25296 0380 08       		.byte	0x8
 25297 0381 DC       		.byte	0xdc
 25298 0382 D3000000 		.4byte	0xd3
 25299 0386 10       		.byte	0x10
 25300 0387 0F       		.uleb128 0xf
 25301 0388 726F7400 		.ascii	"rot\000"
 25302 038c 08       		.byte	0x8
 25303 038d DD       		.byte	0xdd
 25304 038e BC030000 		.4byte	0x3bc
 25305 0392 14       		.byte	0x14
 25306 0393 0F       		.uleb128 0xf
 25307 0394 76656C00 		.ascii	"vel\000"
 25308 0398 08       		.byte	0x8
 25309 0399 DE       		.byte	0xde
 25310 039a AC030000 		.4byte	0x3ac
 25311 039e 18       		.byte	0x18
 25312 039f 0F       		.uleb128 0xf
 25313 03a0 61636300 		.ascii	"acc\000"
 25314 03a4 08       		.byte	0x8
 25315 03a5 DF       		.byte	0xdf
 25316 03a6 AC030000 		.4byte	0x3ac
 25317 03aa 24       		.byte	0x24
 25318 03ab 00       		.byte	0
 25319 03ac 09       		.uleb128 0x9
 25320 03ad D3000000 		.4byte	0xd3
 25321 03b1 BC030000 		.4byte	0x3bc
 25322 03b5 0A       		.uleb128 0xa
 25323 03b6 18010000 		.4byte	0x118
 25324 03ba 02       		.byte	0x2
 25325 03bb 00       		.byte	0
 25326 03bc 09       		.uleb128 0x9
 25327 03bd BB000000 		.4byte	0xbb
 25328 03c1 CC030000 		.4byte	0x3cc
 25329 03c5 0A       		.uleb128 0xa
 25330 03c6 18010000 		.4byte	0x118
 25331 03ca 02       		.byte	0x2
 25332 03cb 00       		.byte	0
 25333 03cc 0E       		.uleb128 0xe
 25334 03cd E60A0000 		.4byte	.LASF91
 25335 03d1 20       		.byte	0x20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 550


 25336 03d2 08       		.byte	0x8
 25337 03d3 E2       		.byte	0xe2
 25338 03d4 F1030000 		.4byte	0x3f1
 25339 03d8 0F       		.uleb128 0xf
 25340 03d9 656D6700 		.ascii	"emg\000"
 25341 03dd 08       		.byte	0x8
 25342 03de E3       		.byte	0xe3
 25343 03df F1030000 		.4byte	0x3f1
 25344 03e3 00       		.byte	0
 25345 03e4 10       		.uleb128 0x10
 25346 03e5 730A0000 		.4byte	.LASF92
 25347 03e9 08       		.byte	0x8
 25348 03ea E4       		.byte	0xe4
 25349 03eb 01040000 		.4byte	0x401
 25350 03ef 08       		.byte	0x8
 25351 03f0 00       		.byte	0
 25352 03f1 09       		.uleb128 0x9
 25353 03f2 D3000000 		.4byte	0xd3
 25354 03f6 01040000 		.4byte	0x401
 25355 03fa 0A       		.uleb128 0xa
 25356 03fb 18010000 		.4byte	0x118
 25357 03ff 01       		.byte	0x1
 25358 0400 00       		.byte	0
 25359 0401 09       		.uleb128 0x9
 25360 0402 D3000000 		.4byte	0xd3
 25361 0406 11040000 		.4byte	0x411
 25362 040a 0A       		.uleb128 0xa
 25363 040b 18010000 		.4byte	0x118
 25364 040f 05       		.byte	0x5
 25365 0410 00       		.byte	0
 25366 0411 0E       		.uleb128 0xe
 25367 0412 62000000 		.4byte	.LASF93
 25368 0416 86       		.byte	0x86
 25369 0417 08       		.byte	0x8
 25370 0418 EB       		.byte	0xeb
 25371 0419 4E040000 		.4byte	0x44e
 25372 041d 10       		.uleb128 0x10
 25373 041e 5C050000 		.4byte	.LASF94
 25374 0422 08       		.byte	0x8
 25375 0423 EC       		.byte	0xec
 25376 0424 4E040000 		.4byte	0x44e
 25377 0428 00       		.byte	0
 25378 0429 10       		.uleb128 0x10
 25379 042a FE0B0000 		.4byte	.LASF95
 25380 042e 08       		.byte	0x8
 25381 042f ED       		.byte	0xed
 25382 0430 C7000000 		.4byte	0xc7
 25383 0434 80       		.byte	0x80
 25384 0435 0F       		.uleb128 0xf
 25385 0436 696E6400 		.ascii	"ind\000"
 25386 043a 08       		.byte	0x8
 25387 043b EE       		.byte	0xee
 25388 043c C7000000 		.4byte	0xc7
 25389 0440 82       		.byte	0x82
 25390 0441 10       		.uleb128 0x10
 25391 0442 B1010000 		.4byte	.LASF96
 25392 0446 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 551


 25393 0447 EF       		.byte	0xef
 25394 0448 97000000 		.4byte	0x97
 25395 044c 84       		.byte	0x84
 25396 044d 00       		.byte	0
 25397 044e 09       		.uleb128 0x9
 25398 044f 97000000 		.4byte	0x97
 25399 0453 5E040000 		.4byte	0x45e
 25400 0457 0A       		.uleb128 0xa
 25401 0458 18010000 		.4byte	0x118
 25402 045c 7F       		.byte	0x7f
 25403 045d 00       		.byte	0
 25404 045e 0E       		.uleb128 0xe
 25405 045f 7D020000 		.4byte	.LASF97
 25406 0463 50       		.byte	0x50
 25407 0464 08       		.byte	0x8
 25408 0465 F7       		.byte	0xf7
 25409 0466 BF040000 		.4byte	0x4bf
 25410 046a 10       		.uleb128 0x10
 25411 046b B8020000 		.4byte	.LASF98
 25412 046f 08       		.byte	0x8
 25413 0470 F8       		.byte	0xf8
 25414 0471 BF040000 		.4byte	0x4bf
 25415 0475 00       		.byte	0
 25416 0476 10       		.uleb128 0x10
 25417 0477 91010000 		.4byte	.LASF99
 25418 047b 08       		.byte	0x8
 25419 047c F9       		.byte	0xf9
 25420 047d CF040000 		.4byte	0x4cf
 25421 0481 08       		.byte	0x8
 25422 0482 10       		.uleb128 0x10
 25423 0483 B10A0000 		.4byte	.LASF100
 25424 0487 08       		.byte	0x8
 25425 0488 FA       		.byte	0xfa
 25426 0489 DF040000 		.4byte	0x4df
 25427 048d 30       		.byte	0x30
 25428 048e 10       		.uleb128 0x10
 25429 048f 1F010000 		.4byte	.LASF101
 25430 0493 08       		.byte	0x8
 25431 0494 FB       		.byte	0xfb
 25432 0495 AF000000 		.4byte	0xaf
 25433 0499 40       		.byte	0x40
 25434 049a 10       		.uleb128 0x10
 25435 049b 34110000 		.4byte	.LASF102
 25436 049f 08       		.byte	0x8
 25437 04a0 FC       		.byte	0xfc
 25438 04a1 AF000000 		.4byte	0xaf
 25439 04a5 44       		.byte	0x44
 25440 04a6 10       		.uleb128 0x10
 25441 04a7 8A060000 		.4byte	.LASF103
 25442 04ab 08       		.byte	0x8
 25443 04ac FD       		.byte	0xfd
 25444 04ad AF000000 		.4byte	0xaf
 25445 04b1 48       		.byte	0x48
 25446 04b2 10       		.uleb128 0x10
 25447 04b3 BD060000 		.4byte	.LASF104
 25448 04b7 08       		.byte	0x8
 25449 04b8 FE       		.byte	0xfe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 552


 25450 04b9 AF000000 		.4byte	0xaf
 25451 04bd 4C       		.byte	0x4c
 25452 04be 00       		.byte	0
 25453 04bf 09       		.uleb128 0x9
 25454 04c0 AF000000 		.4byte	0xaf
 25455 04c4 CF040000 		.4byte	0x4cf
 25456 04c8 0A       		.uleb128 0xa
 25457 04c9 18010000 		.4byte	0x118
 25458 04cd 01       		.byte	0x1
 25459 04ce 00       		.byte	0
 25460 04cf 09       		.uleb128 0x9
 25461 04d0 AF000000 		.4byte	0xaf
 25462 04d4 DF040000 		.4byte	0x4df
 25463 04d8 0A       		.uleb128 0xa
 25464 04d9 18010000 		.4byte	0x118
 25465 04dd 09       		.byte	0x9
 25466 04de 00       		.byte	0
 25467 04df 09       		.uleb128 0x9
 25468 04e0 AF000000 		.4byte	0xaf
 25469 04e4 EF040000 		.4byte	0x4ef
 25470 04e8 0A       		.uleb128 0xa
 25471 04e9 18010000 		.4byte	0x118
 25472 04ed 03       		.byte	0x3
 25473 04ee 00       		.byte	0
 25474 04ef 11       		.uleb128 0x11
 25475 04f0 CF010000 		.4byte	.LASF105
 25476 04f4 10       		.byte	0x10
 25477 04f5 08       		.byte	0x8
 25478 04f6 0101     		.2byte	0x101
 25479 04f8 7E050000 		.4byte	0x57e
 25480 04fc 12       		.uleb128 0x12
 25481 04fd 696400   		.ascii	"id\000"
 25482 0500 08       		.byte	0x8
 25483 0501 0201     		.2byte	0x102
 25484 0503 97000000 		.4byte	0x97
 25485 0507 00       		.byte	0
 25486 0508 13       		.uleb128 0x13
 25487 0509 7A0E0000 		.4byte	.LASF106
 25488 050d 08       		.byte	0x8
 25489 050e 0301     		.2byte	0x103
 25490 0510 7E050000 		.4byte	0x57e
 25491 0514 01       		.byte	0x1
 25492 0515 13       		.uleb128 0x13
 25493 0516 EA0E0000 		.4byte	.LASF107
 25494 051a 08       		.byte	0x8
 25495 051b 0401     		.2byte	0x104
 25496 051d 7E050000 		.4byte	0x57e
 25497 0521 04       		.byte	0x4
 25498 0522 13       		.uleb128 0x13
 25499 0523 97030000 		.4byte	.LASF108
 25500 0527 08       		.byte	0x8
 25501 0528 0501     		.2byte	0x105
 25502 052a 97000000 		.4byte	0x97
 25503 052e 07       		.byte	0x7
 25504 052f 13       		.uleb128 0x13
 25505 0530 39020000 		.4byte	.LASF109
 25506 0534 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 553


 25507 0535 0601     		.2byte	0x106
 25508 0537 97000000 		.4byte	0x97
 25509 053b 08       		.byte	0x8
 25510 053c 13       		.uleb128 0x13
 25511 053d F5010000 		.4byte	.LASF110
 25512 0541 08       		.byte	0x8
 25513 0542 0701     		.2byte	0x107
 25514 0544 97000000 		.4byte	0x97
 25515 0548 09       		.byte	0x9
 25516 0549 13       		.uleb128 0x13
 25517 054a 2F100000 		.4byte	.LASF111
 25518 054e 08       		.byte	0x8
 25519 054f 0801     		.2byte	0x108
 25520 0551 97000000 		.4byte	0x97
 25521 0555 0A       		.byte	0xa
 25522 0556 13       		.uleb128 0x13
 25523 0557 F30F0000 		.4byte	.LASF112
 25524 055b 08       		.byte	0x8
 25525 055c 0901     		.2byte	0x109
 25526 055e 97000000 		.4byte	0x97
 25527 0562 0B       		.byte	0xb
 25528 0563 13       		.uleb128 0x13
 25529 0564 3F0D0000 		.4byte	.LASF113
 25530 0568 08       		.byte	0x8
 25531 0569 0A01     		.2byte	0x10a
 25532 056b 97000000 		.4byte	0x97
 25533 056f 0C       		.byte	0xc
 25534 0570 13       		.uleb128 0x13
 25535 0571 5A020000 		.4byte	.LASF114
 25536 0575 08       		.byte	0x8
 25537 0576 0B01     		.2byte	0x10b
 25538 0578 7E050000 		.4byte	0x57e
 25539 057c 0D       		.byte	0xd
 25540 057d 00       		.byte	0
 25541 057e 09       		.uleb128 0x9
 25542 057f 97000000 		.4byte	0x97
 25543 0583 8E050000 		.4byte	0x58e
 25544 0587 0A       		.uleb128 0xa
 25545 0588 18010000 		.4byte	0x118
 25546 058c 02       		.byte	0x2
 25547 058d 00       		.byte	0
 25548 058e 11       		.uleb128 0x11
 25549 058f 44090000 		.4byte	.LASF115
 25550 0593 70       		.byte	0x70
 25551 0594 08       		.byte	0x8
 25552 0595 0E01     		.2byte	0x10e
 25553 0597 08070000 		.4byte	0x708
 25554 059b 12       		.uleb128 0x12
 25555 059c 6B5F7000 		.ascii	"k_p\000"
 25556 05a0 08       		.byte	0x8
 25557 05a1 0F01     		.2byte	0x10f
 25558 05a3 D3000000 		.4byte	0xd3
 25559 05a7 00       		.byte	0
 25560 05a8 12       		.uleb128 0x12
 25561 05a9 6B5F6900 		.ascii	"k_i\000"
 25562 05ad 08       		.byte	0x8
 25563 05ae 1001     		.2byte	0x110
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 554


 25564 05b0 D3000000 		.4byte	0xd3
 25565 05b4 04       		.byte	0x4
 25566 05b5 12       		.uleb128 0x12
 25567 05b6 6B5F6400 		.ascii	"k_d\000"
 25568 05ba 08       		.byte	0x8
 25569 05bb 1101     		.2byte	0x111
 25570 05bd D3000000 		.4byte	0xd3
 25571 05c1 08       		.byte	0x8
 25572 05c2 13       		.uleb128 0x13
 25573 05c3 780C0000 		.4byte	.LASF116
 25574 05c7 08       		.byte	0x8
 25575 05c8 1201     		.2byte	0x112
 25576 05ca D3000000 		.4byte	0xd3
 25577 05ce 0C       		.byte	0xc
 25578 05cf 13       		.uleb128 0x13
 25579 05d0 D5040000 		.4byte	.LASF117
 25580 05d4 08       		.byte	0x8
 25581 05d5 1301     		.2byte	0x113
 25582 05d7 D3000000 		.4byte	0xd3
 25583 05db 10       		.byte	0x10
 25584 05dc 13       		.uleb128 0x13
 25585 05dd BA040000 		.4byte	.LASF118
 25586 05e1 08       		.byte	0x8
 25587 05e2 1401     		.2byte	0x114
 25588 05e4 D3000000 		.4byte	0xd3
 25589 05e8 14       		.byte	0x14
 25590 05e9 13       		.uleb128 0x13
 25591 05ea 960F0000 		.4byte	.LASF119
 25592 05ee 08       		.byte	0x8
 25593 05ef 1501     		.2byte	0x115
 25594 05f1 D3000000 		.4byte	0xd3
 25595 05f5 18       		.byte	0x18
 25596 05f6 13       		.uleb128 0x13
 25597 05f7 46050000 		.4byte	.LASF120
 25598 05fb 08       		.byte	0x8
 25599 05fc 1601     		.2byte	0x116
 25600 05fe D3000000 		.4byte	0xd3
 25601 0602 1C       		.byte	0x1c
 25602 0603 13       		.uleb128 0x13
 25603 0604 450E0000 		.4byte	.LASF121
 25604 0608 08       		.byte	0x8
 25605 0609 1701     		.2byte	0x117
 25606 060b D3000000 		.4byte	0xd3
 25607 060f 20       		.byte	0x20
 25608 0610 13       		.uleb128 0x13
 25609 0611 63050000 		.4byte	.LASF122
 25610 0615 08       		.byte	0x8
 25611 0616 1801     		.2byte	0x118
 25612 0618 D3000000 		.4byte	0xd3
 25613 061c 24       		.byte	0x24
 25614 061d 13       		.uleb128 0x13
 25615 061e 0C060000 		.4byte	.LASF123
 25616 0622 08       		.byte	0x8
 25617 0623 1901     		.2byte	0x119
 25618 0625 D3000000 		.4byte	0xd3
 25619 0629 28       		.byte	0x28
 25620 062a 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 555


 25621 062b E1110000 		.4byte	.LASF124
 25622 062f 08       		.byte	0x8
 25623 0630 1A01     		.2byte	0x11a
 25624 0632 D3000000 		.4byte	0xd3
 25625 0636 2C       		.byte	0x2c
 25626 0637 13       		.uleb128 0x13
 25627 0638 D9060000 		.4byte	.LASF125
 25628 063c 08       		.byte	0x8
 25629 063d 1B01     		.2byte	0x11b
 25630 063f 97000000 		.4byte	0x97
 25631 0643 30       		.byte	0x30
 25632 0644 13       		.uleb128 0x13
 25633 0645 7F0F0000 		.4byte	.LASF126
 25634 0649 08       		.byte	0x8
 25635 064a 1C01     		.2byte	0x11c
 25636 064c 97000000 		.4byte	0x97
 25637 0650 31       		.byte	0x31
 25638 0651 13       		.uleb128 0x13
 25639 0652 980C0000 		.4byte	.LASF127
 25640 0656 08       		.byte	0x8
 25641 0657 1D01     		.2byte	0x11d
 25642 0659 97000000 		.4byte	0x97
 25643 065d 32       		.byte	0x32
 25644 065e 13       		.uleb128 0x13
 25645 065f E9100000 		.4byte	.LASF128
 25646 0663 08       		.byte	0x8
 25647 0664 1E01     		.2byte	0x11e
 25648 0666 97000000 		.4byte	0x97
 25649 066a 33       		.byte	0x33
 25650 066b 13       		.uleb128 0x13
 25651 066c D3000000 		.4byte	.LASF129
 25652 0670 08       		.byte	0x8
 25653 0671 1F01     		.2byte	0x11f
 25654 0673 D3000000 		.4byte	0xd3
 25655 0677 34       		.byte	0x34
 25656 0678 13       		.uleb128 0x13
 25657 0679 F4040000 		.4byte	.LASF130
 25658 067d 08       		.byte	0x8
 25659 067e 2001     		.2byte	0x120
 25660 0680 D3000000 		.4byte	0xd3
 25661 0684 38       		.byte	0x38
 25662 0685 13       		.uleb128 0x13
 25663 0686 F7080000 		.4byte	.LASF131
 25664 068a 08       		.byte	0x8
 25665 068b 2101     		.2byte	0x121
 25666 068d D3000000 		.4byte	0xd3
 25667 0691 3C       		.byte	0x3c
 25668 0692 13       		.uleb128 0x13
 25669 0693 6D040000 		.4byte	.LASF132
 25670 0697 08       		.byte	0x8
 25671 0698 2201     		.2byte	0x122
 25672 069a D3000000 		.4byte	0xd3
 25673 069e 40       		.byte	0x40
 25674 069f 13       		.uleb128 0x13
 25675 06a0 13010000 		.4byte	.LASF133
 25676 06a4 08       		.byte	0x8
 25677 06a5 2301     		.2byte	0x123
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 556


 25678 06a7 08070000 		.4byte	0x708
 25679 06ab 44       		.byte	0x44
 25680 06ac 13       		.uleb128 0x13
 25681 06ad 79110000 		.4byte	.LASF134
 25682 06b1 08       		.byte	0x8
 25683 06b2 2401     		.2byte	0x124
 25684 06b4 C7000000 		.4byte	0xc7
 25685 06b8 5C       		.byte	0x5c
 25686 06b9 13       		.uleb128 0x13
 25687 06ba 26070000 		.4byte	.LASF135
 25688 06be 08       		.byte	0x8
 25689 06bf 2501     		.2byte	0x125
 25690 06c1 97000000 		.4byte	0x97
 25691 06c5 5E       		.byte	0x5e
 25692 06c6 13       		.uleb128 0x13
 25693 06c7 C9090000 		.4byte	.LASF136
 25694 06cb 08       		.byte	0x8
 25695 06cc 2601     		.2byte	0x126
 25696 06ce 97000000 		.4byte	0x97
 25697 06d2 5F       		.byte	0x5f
 25698 06d3 13       		.uleb128 0x13
 25699 06d4 BB030000 		.4byte	.LASF137
 25700 06d8 08       		.byte	0x8
 25701 06d9 2701     		.2byte	0x127
 25702 06db 97000000 		.4byte	0x97
 25703 06df 60       		.byte	0x60
 25704 06e0 13       		.uleb128 0x13
 25705 06e1 A9040000 		.4byte	.LASF138
 25706 06e5 08       		.byte	0x8
 25707 06e6 2801     		.2byte	0x128
 25708 06e8 97000000 		.4byte	0x97
 25709 06ec 61       		.byte	0x61
 25710 06ed 13       		.uleb128 0x13
 25711 06ee 78030000 		.4byte	.LASF139
 25712 06f2 08       		.byte	0x8
 25713 06f3 2901     		.2byte	0x129
 25714 06f5 97000000 		.4byte	0x97
 25715 06f9 62       		.byte	0x62
 25716 06fa 13       		.uleb128 0x13
 25717 06fb 5A020000 		.4byte	.LASF114
 25718 06ff 08       		.byte	0x8
 25719 0700 2A01     		.2byte	0x12a
 25720 0702 18070000 		.4byte	0x718
 25721 0706 63       		.byte	0x63
 25722 0707 00       		.byte	0
 25723 0708 09       		.uleb128 0x9
 25724 0709 EB000000 		.4byte	0xeb
 25725 070d 18070000 		.4byte	0x718
 25726 0711 0A       		.uleb128 0xa
 25727 0712 18010000 		.4byte	0x118
 25728 0716 05       		.byte	0x5
 25729 0717 00       		.byte	0
 25730 0718 09       		.uleb128 0x9
 25731 0719 97000000 		.4byte	0x97
 25732 071d 28070000 		.4byte	0x728
 25733 0721 0A       		.uleb128 0xa
 25734 0722 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 557


 25735 0726 0C       		.byte	0xc
 25736 0727 00       		.byte	0
 25737 0728 11       		.uleb128 0x11
 25738 0729 97100000 		.4byte	.LASF140
 25739 072d 30       		.byte	0x30
 25740 072e 08       		.byte	0x8
 25741 072f 2D01     		.2byte	0x12d
 25742 0731 AB070000 		.4byte	0x7ab
 25743 0735 13       		.uleb128 0x13
 25744 0736 D9080000 		.4byte	.LASF141
 25745 073a 08       		.byte	0x8
 25746 073b 2E01     		.2byte	0x12e
 25747 073d AB070000 		.4byte	0x7ab
 25748 0741 00       		.byte	0
 25749 0742 12       		.uleb128 0x12
 25750 0743 72657300 		.ascii	"res\000"
 25751 0747 08       		.byte	0x8
 25752 0748 2F01     		.2byte	0x12f
 25753 074a 7E050000 		.4byte	0x57e
 25754 074e 05       		.byte	0x5
 25755 074f 13       		.uleb128 0x13
 25756 0750 E8060000 		.4byte	.LASF142
 25757 0754 08       		.byte	0x8
 25758 0755 3001     		.2byte	0x130
 25759 0757 AC030000 		.4byte	0x3ac
 25760 075b 08       		.byte	0x8
 25761 075c 13       		.uleb128 0x13
 25762 075d CE040000 		.4byte	.LASF143
 25763 0761 08       		.byte	0x8
 25764 0762 3101     		.2byte	0x131
 25765 0764 BB070000 		.4byte	0x7bb
 25766 0768 14       		.byte	0x14
 25767 0769 13       		.uleb128 0x13
 25768 076a 5B0B0000 		.4byte	.LASF144
 25769 076e 08       		.byte	0x8
 25770 076f 3201     		.2byte	0x132
 25771 0771 97000000 		.4byte	0x97
 25772 0775 20       		.byte	0x20
 25773 0776 13       		.uleb128 0x13
 25774 0777 B7010000 		.4byte	.LASF145
 25775 077b 08       		.byte	0x8
 25776 077c 3301     		.2byte	0x133
 25777 077e 7E050000 		.4byte	0x57e
 25778 0782 21       		.byte	0x21
 25779 0783 13       		.uleb128 0x13
 25780 0784 0E0B0000 		.4byte	.LASF146
 25781 0788 08       		.byte	0x8
 25782 0789 3401     		.2byte	0x134
 25783 078b BB000000 		.4byte	0xbb
 25784 078f 24       		.byte	0x24
 25785 0790 13       		.uleb128 0x13
 25786 0791 660D0000 		.4byte	.LASF147
 25787 0795 08       		.byte	0x8
 25788 0796 3501     		.2byte	0x135
 25789 0798 BC030000 		.4byte	0x3bc
 25790 079c 25       		.byte	0x25
 25791 079d 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 558


 25792 079e 5A020000 		.4byte	.LASF114
 25793 07a2 08       		.byte	0x8
 25794 07a3 3601     		.2byte	0x136
 25795 07a5 CB070000 		.4byte	0x7cb
 25796 07a9 28       		.byte	0x28
 25797 07aa 00       		.byte	0
 25798 07ab 09       		.uleb128 0x9
 25799 07ac 97000000 		.4byte	0x97
 25800 07b0 BB070000 		.4byte	0x7bb
 25801 07b4 0A       		.uleb128 0xa
 25802 07b5 18010000 		.4byte	0x118
 25803 07b9 04       		.byte	0x4
 25804 07ba 00       		.byte	0
 25805 07bb 09       		.uleb128 0x9
 25806 07bc DF000000 		.4byte	0xdf
 25807 07c0 CB070000 		.4byte	0x7cb
 25808 07c4 0A       		.uleb128 0xa
 25809 07c5 18010000 		.4byte	0x118
 25810 07c9 02       		.byte	0x2
 25811 07ca 00       		.byte	0
 25812 07cb 09       		.uleb128 0x9
 25813 07cc 97000000 		.4byte	0x97
 25814 07d0 DB070000 		.4byte	0x7db
 25815 07d4 0A       		.uleb128 0xa
 25816 07d5 18010000 		.4byte	0x118
 25817 07d9 07       		.byte	0x7
 25818 07da 00       		.byte	0
 25819 07db 11       		.uleb128 0x11
 25820 07dc 8A010000 		.4byte	.LASF148
 25821 07e0 10       		.byte	0x10
 25822 07e1 08       		.byte	0x8
 25823 07e2 3901     		.2byte	0x139
 25824 07e4 37080000 		.4byte	0x837
 25825 07e8 13       		.uleb128 0x13
 25826 07e9 910A0000 		.4byte	.LASF149
 25827 07ed 08       		.byte	0x8
 25828 07ee 3A01     		.2byte	0x13a
 25829 07f0 37080000 		.4byte	0x837
 25830 07f4 00       		.byte	0
 25831 07f5 13       		.uleb128 0x13
 25832 07f6 3E110000 		.4byte	.LASF150
 25833 07fa 08       		.byte	0x8
 25834 07fb 3B01     		.2byte	0x13b
 25835 07fd BF040000 		.4byte	0x4bf
 25836 0801 04       		.byte	0x4
 25837 0802 13       		.uleb128 0x13
 25838 0803 00050000 		.4byte	.LASF151
 25839 0807 08       		.byte	0x8
 25840 0808 3C01     		.2byte	0x13c
 25841 080a 97000000 		.4byte	0x97
 25842 080e 0C       		.byte	0xc
 25843 080f 13       		.uleb128 0x13
 25844 0810 800D0000 		.4byte	.LASF152
 25845 0814 08       		.byte	0x8
 25846 0815 3D01     		.2byte	0x13d
 25847 0817 97000000 		.4byte	0x97
 25848 081b 0D       		.byte	0xd
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 559


 25849 081c 13       		.uleb128 0x13
 25850 081d 740F0000 		.4byte	.LASF153
 25851 0821 08       		.byte	0x8
 25852 0822 3E01     		.2byte	0x13e
 25853 0824 97000000 		.4byte	0x97
 25854 0828 0E       		.byte	0xe
 25855 0829 13       		.uleb128 0x13
 25856 082a 5A020000 		.4byte	.LASF114
 25857 082e 08       		.byte	0x8
 25858 082f 3F01     		.2byte	0x13f
 25859 0831 47080000 		.4byte	0x847
 25860 0835 0F       		.byte	0xf
 25861 0836 00       		.byte	0
 25862 0837 09       		.uleb128 0x9
 25863 0838 A3000000 		.4byte	0xa3
 25864 083c 47080000 		.4byte	0x847
 25865 0840 0A       		.uleb128 0xa
 25866 0841 18010000 		.4byte	0x118
 25867 0845 01       		.byte	0x1
 25868 0846 00       		.byte	0
 25869 0847 09       		.uleb128 0x9
 25870 0848 97000000 		.4byte	0x97
 25871 084c 57080000 		.4byte	0x857
 25872 0850 0A       		.uleb128 0xa
 25873 0851 18010000 		.4byte	0x118
 25874 0855 00       		.byte	0
 25875 0856 00       		.byte	0
 25876 0857 11       		.uleb128 0x11
 25877 0858 050A0000 		.4byte	.LASF154
 25878 085c 20       		.byte	0x20
 25879 085d 08       		.byte	0x8
 25880 085e 4201     		.2byte	0x142
 25881 0860 99080000 		.4byte	0x899
 25882 0864 13       		.uleb128 0x13
 25883 0865 08020000 		.4byte	.LASF155
 25884 0869 08       		.byte	0x8
 25885 086a 4301     		.2byte	0x143
 25886 086c 97000000 		.4byte	0x97
 25887 0870 00       		.byte	0
 25888 0871 13       		.uleb128 0x13
 25889 0872 710B0000 		.4byte	.LASF156
 25890 0876 08       		.byte	0x8
 25891 0877 4401     		.2byte	0x144
 25892 0879 97000000 		.4byte	0x97
 25893 087d 01       		.byte	0x1
 25894 087e 13       		.uleb128 0x13
 25895 087f 31090000 		.4byte	.LASF157
 25896 0883 08       		.byte	0x8
 25897 0884 4501     		.2byte	0x145
 25898 0886 99080000 		.4byte	0x899
 25899 088a 02       		.byte	0x2
 25900 088b 13       		.uleb128 0x13
 25901 088c 5A020000 		.4byte	.LASF114
 25902 0890 08       		.byte	0x8
 25903 0891 4601     		.2byte	0x146
 25904 0893 AB070000 		.4byte	0x7ab
 25905 0897 1B       		.byte	0x1b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 560


 25906 0898 00       		.byte	0
 25907 0899 09       		.uleb128 0x9
 25908 089a 97000000 		.4byte	0x97
 25909 089e AF080000 		.4byte	0x8af
 25910 08a2 0A       		.uleb128 0xa
 25911 08a3 18010000 		.4byte	0x118
 25912 08a7 04       		.byte	0x4
 25913 08a8 0A       		.uleb128 0xa
 25914 08a9 18010000 		.4byte	0x118
 25915 08ad 04       		.byte	0x4
 25916 08ae 00       		.byte	0
 25917 08af 11       		.uleb128 0x11
 25918 08b0 730D0000 		.4byte	.LASF158
 25919 08b4 20       		.byte	0x20
 25920 08b5 08       		.byte	0x8
 25921 08b6 4901     		.2byte	0x149
 25922 08b8 FE080000 		.4byte	0x8fe
 25923 08bc 13       		.uleb128 0x13
 25924 08bd 510B0000 		.4byte	.LASF159
 25925 08c1 08       		.byte	0x8
 25926 08c2 4A01     		.2byte	0x14a
 25927 08c4 FE080000 		.4byte	0x8fe
 25928 08c8 00       		.byte	0
 25929 08c9 13       		.uleb128 0x13
 25930 08ca 610F0000 		.4byte	.LASF160
 25931 08ce 08       		.byte	0x8
 25932 08cf 4B01     		.2byte	0x14b
 25933 08d1 97000000 		.4byte	0x97
 25934 08d5 06       		.byte	0x6
 25935 08d6 13       		.uleb128 0x13
 25936 08d7 B60F0000 		.4byte	.LASF161
 25937 08db 08       		.byte	0x8
 25938 08dc 4C01     		.2byte	0x14c
 25939 08de 97000000 		.4byte	0x97
 25940 08e2 07       		.byte	0x7
 25941 08e3 13       		.uleb128 0x13
 25942 08e4 25050000 		.4byte	.LASF162
 25943 08e8 08       		.byte	0x8
 25944 08e9 4D01     		.2byte	0x14d
 25945 08eb 0E090000 		.4byte	0x90e
 25946 08ef 08       		.byte	0x8
 25947 08f0 13       		.uleb128 0x13
 25948 08f1 5A020000 		.4byte	.LASF114
 25949 08f5 08       		.byte	0x8
 25950 08f6 4E01     		.2byte	0x14e
 25951 08f8 0E090000 		.4byte	0x90e
 25952 08fc 14       		.byte	0x14
 25953 08fd 00       		.byte	0
 25954 08fe 09       		.uleb128 0x9
 25955 08ff 97000000 		.4byte	0x97
 25956 0903 0E090000 		.4byte	0x90e
 25957 0907 0A       		.uleb128 0xa
 25958 0908 18010000 		.4byte	0x118
 25959 090c 05       		.byte	0x5
 25960 090d 00       		.byte	0
 25961 090e 09       		.uleb128 0x9
 25962 090f 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 561


 25963 0913 1E090000 		.4byte	0x91e
 25964 0917 0A       		.uleb128 0xa
 25965 0918 18010000 		.4byte	0x118
 25966 091c 0B       		.byte	0xb
 25967 091d 00       		.byte	0
 25968 091e 11       		.uleb128 0x11
 25969 091f 480D0000 		.4byte	.LASF163
 25970 0923 20       		.byte	0x20
 25971 0924 08       		.byte	0x8
 25972 0925 5101     		.2byte	0x151
 25973 0927 53090000 		.4byte	0x953
 25974 092b 13       		.uleb128 0x13
 25975 092c 18030000 		.4byte	.LASF164
 25976 0930 08       		.byte	0x8
 25977 0931 5201     		.2byte	0x152
 25978 0933 40010000 		.4byte	0x140
 25979 0937 00       		.byte	0
 25980 0938 13       		.uleb128 0x13
 25981 0939 48020000 		.4byte	.LASF165
 25982 093d 08       		.byte	0x8
 25983 093e 5301     		.2byte	0x153
 25984 0940 DB070000 		.4byte	0x7db
 25985 0944 08       		.byte	0x8
 25986 0945 13       		.uleb128 0x13
 25987 0946 5A020000 		.4byte	.LASF114
 25988 094a 08       		.byte	0x8
 25989 094b 5401     		.2byte	0x154
 25990 094d CB070000 		.4byte	0x7cb
 25991 0951 18       		.byte	0x18
 25992 0952 00       		.byte	0
 25993 0953 11       		.uleb128 0x11
 25994 0954 5E080000 		.4byte	.LASF166
 25995 0958 10       		.byte	0x10
 25996 0959 08       		.byte	0x8
 25997 095a 5701     		.2byte	0x157
 25998 095c A2090000 		.4byte	0x9a2
 25999 0960 13       		.uleb128 0x13
 26000 0961 18070000 		.4byte	.LASF167
 26001 0965 08       		.byte	0x8
 26002 0966 5801     		.2byte	0x158
 26003 0968 D3000000 		.4byte	0xd3
 26004 096c 00       		.byte	0
 26005 096d 13       		.uleb128 0x13
 26006 096e C5110000 		.4byte	.LASF168
 26007 0972 08       		.byte	0x8
 26008 0973 5901     		.2byte	0x159
 26009 0975 D3000000 		.4byte	0xd3
 26010 0979 04       		.byte	0x4
 26011 097a 13       		.uleb128 0x13
 26012 097b 0A050000 		.4byte	.LASF169
 26013 097f 08       		.byte	0x8
 26014 0980 5A01     		.2byte	0x15a
 26015 0982 D3000000 		.4byte	0xd3
 26016 0986 08       		.byte	0x8
 26017 0987 13       		.uleb128 0x13
 26018 0988 F3050000 		.4byte	.LASF170
 26019 098c 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 562


 26020 098d 5B01     		.2byte	0x15b
 26021 098f 97000000 		.4byte	0x97
 26022 0993 0C       		.byte	0xc
 26023 0994 13       		.uleb128 0x13
 26024 0995 5A020000 		.4byte	.LASF114
 26025 0999 08       		.byte	0x8
 26026 099a 5C01     		.2byte	0x15c
 26027 099c 7E050000 		.4byte	0x57e
 26028 09a0 0D       		.byte	0xd
 26029 09a1 00       		.byte	0
 26030 09a2 14       		.uleb128 0x14
 26031 09a3 A8100000 		.4byte	.LASF171
 26032 09a7 B002     		.2byte	0x2b0
 26033 09a9 08       		.byte	0x8
 26034 09aa 6101     		.2byte	0x161
 26035 09ac 520A0000 		.4byte	0xa52
 26036 09b0 13       		.uleb128 0x13
 26037 09b1 B5090000 		.4byte	.LASF172
 26038 09b5 08       		.byte	0x8
 26039 09b6 6301     		.2byte	0x163
 26040 09b8 97000000 		.4byte	0x97
 26041 09bc 00       		.byte	0
 26042 09bd 13       		.uleb128 0x13
 26043 09be 5A020000 		.4byte	.LASF114
 26044 09c2 08       		.byte	0x8
 26045 09c3 6401     		.2byte	0x164
 26046 09c5 520A0000 		.4byte	0xa52
 26047 09c9 01       		.byte	0x1
 26048 09ca 12       		.uleb128 0x12
 26049 09cb 636E7400 		.ascii	"cnt\000"
 26050 09cf 08       		.byte	0x8
 26051 09d0 6501     		.2byte	0x165
 26052 09d2 5E040000 		.4byte	0x45e
 26053 09d6 10       		.byte	0x10
 26054 09d7 13       		.uleb128 0x13
 26055 09d8 2B020000 		.4byte	.LASF173
 26056 09dc 08       		.byte	0x8
 26057 09dd 6601     		.2byte	0x166
 26058 09df 620A0000 		.4byte	0xa62
 26059 09e3 60       		.byte	0x60
 26060 09e4 12       		.uleb128 0x12
 26061 09e5 64657600 		.ascii	"dev\000"
 26062 09e9 08       		.byte	0x8
 26063 09ea 6701     		.2byte	0x167
 26064 09ec EF040000 		.4byte	0x4ef
 26065 09f0 A0       		.byte	0xa0
 26066 09f1 13       		.uleb128 0x13
 26067 09f2 550E0000 		.4byte	.LASF174
 26068 09f6 08       		.byte	0x8
 26069 09f7 6801     		.2byte	0x168
 26070 09f9 720A0000 		.4byte	0xa72
 26071 09fd B0       		.byte	0xb0
 26072 09fe 15       		.uleb128 0x15
 26073 09ff 656E6300 		.ascii	"enc\000"
 26074 0a03 08       		.byte	0x8
 26075 0a04 6901     		.2byte	0x169
 26076 0a06 820A0000 		.4byte	0xa82
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 563


 26077 0a0a 9001     		.2byte	0x190
 26078 0a0c 15       		.uleb128 0x15
 26079 0a0d 656D6700 		.ascii	"emg\000"
 26080 0a11 08       		.byte	0x8
 26081 0a12 6A01     		.2byte	0x16a
 26082 0a14 DB070000 		.4byte	0x7db
 26083 0a18 F001     		.2byte	0x1f0
 26084 0a1a 15       		.uleb128 0x15
 26085 0a1b 696D7500 		.ascii	"imu\000"
 26086 0a1f 08       		.byte	0x8
 26087 0a20 6B01     		.2byte	0x16b
 26088 0a22 57080000 		.4byte	0x857
 26089 0a26 0002     		.2byte	0x200
 26090 0a28 15       		.uleb128 0x15
 26091 0a29 65787000 		.ascii	"exp\000"
 26092 0a2d 08       		.byte	0x8
 26093 0a2e 6C01     		.2byte	0x16c
 26094 0a30 AF080000 		.4byte	0x8af
 26095 0a34 2002     		.2byte	0x220
 26096 0a36 16       		.uleb128 0x16
 26097 0a37 50000000 		.4byte	.LASF175
 26098 0a3b 08       		.byte	0x8
 26099 0a3c 6D01     		.2byte	0x16d
 26100 0a3e 920A0000 		.4byte	0xa92
 26101 0a42 4002     		.2byte	0x240
 26102 0a44 15       		.uleb128 0x15
 26103 0a45 534800   		.ascii	"SH\000"
 26104 0a48 08       		.byte	0x8
 26105 0a49 6F01     		.2byte	0x16f
 26106 0a4b 53090000 		.4byte	0x953
 26107 0a4f A002     		.2byte	0x2a0
 26108 0a51 00       		.byte	0
 26109 0a52 09       		.uleb128 0x9
 26110 0a53 97000000 		.4byte	0x97
 26111 0a57 620A0000 		.4byte	0xa62
 26112 0a5b 0A       		.uleb128 0xa
 26113 0a5c 18010000 		.4byte	0x118
 26114 0a60 0E       		.byte	0xe
 26115 0a61 00       		.byte	0
 26116 0a62 09       		.uleb128 0x9
 26117 0a63 97000000 		.4byte	0x97
 26118 0a67 720A0000 		.4byte	0xa72
 26119 0a6b 0A       		.uleb128 0xa
 26120 0a6c 18010000 		.4byte	0x118
 26121 0a70 3F       		.byte	0x3f
 26122 0a71 00       		.byte	0
 26123 0a72 09       		.uleb128 0x9
 26124 0a73 8E050000 		.4byte	0x58e
 26125 0a77 820A0000 		.4byte	0xa82
 26126 0a7b 0A       		.uleb128 0xa
 26127 0a7c 18010000 		.4byte	0x118
 26128 0a80 01       		.byte	0x1
 26129 0a81 00       		.byte	0
 26130 0a82 09       		.uleb128 0x9
 26131 0a83 28070000 		.4byte	0x728
 26132 0a87 920A0000 		.4byte	0xa92
 26133 0a8b 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 564


 26134 0a8c 18010000 		.4byte	0x118
 26135 0a90 01       		.byte	0x1
 26136 0a91 00       		.byte	0
 26137 0a92 09       		.uleb128 0x9
 26138 0a93 1E090000 		.4byte	0x91e
 26139 0a97 A20A0000 		.4byte	0xaa2
 26140 0a9b 0A       		.uleb128 0xa
 26141 0a9c 18010000 		.4byte	0x118
 26142 0aa0 02       		.byte	0x2
 26143 0aa1 00       		.byte	0
 26144 0aa2 11       		.uleb128 0x11
 26145 0aa3 130C0000 		.4byte	.LASF176
 26146 0aa7 28       		.byte	0x28
 26147 0aa8 08       		.byte	0x8
 26148 0aa9 7A01     		.2byte	0x17a
 26149 0aab FE0A0000 		.4byte	0xafe
 26150 0aaf 13       		.uleb128 0x13
 26151 0ab0 3E040000 		.4byte	.LASF177
 26152 0ab4 08       		.byte	0x8
 26153 0ab5 7B01     		.2byte	0x17b
 26154 0ab7 97000000 		.4byte	0x97
 26155 0abb 00       		.byte	0
 26156 0abc 13       		.uleb128 0x13
 26157 0abd 67020000 		.4byte	.LASF178
 26158 0ac1 08       		.byte	0x8
 26159 0ac2 7C01     		.2byte	0x17c
 26160 0ac4 FE0A0000 		.4byte	0xafe
 26161 0ac8 02       		.byte	0x2
 26162 0ac9 13       		.uleb128 0x13
 26163 0aca 460B0000 		.4byte	.LASF179
 26164 0ace 08       		.byte	0x8
 26165 0acf 7D01     		.2byte	0x17d
 26166 0ad1 FE0A0000 		.4byte	0xafe
 26167 0ad5 08       		.byte	0x8
 26168 0ad6 13       		.uleb128 0x13
 26169 0ad7 1F0C0000 		.4byte	.LASF180
 26170 0adb 08       		.byte	0x8
 26171 0adc 7E01     		.2byte	0x17e
 26172 0ade FE0A0000 		.4byte	0xafe
 26173 0ae2 0E       		.byte	0xe
 26174 0ae3 13       		.uleb128 0x13
 26175 0ae4 FF060000 		.4byte	.LASF181
 26176 0ae8 08       		.byte	0x8
 26177 0ae9 7F01     		.2byte	0x17f
 26178 0aeb 0E0B0000 		.4byte	0xb0e
 26179 0aef 14       		.byte	0x14
 26180 0af0 13       		.uleb128 0x13
 26181 0af1 9F010000 		.4byte	.LASF182
 26182 0af5 08       		.byte	0x8
 26183 0af6 8001     		.2byte	0x180
 26184 0af8 C7000000 		.4byte	0xc7
 26185 0afc 24       		.byte	0x24
 26186 0afd 00       		.byte	0
 26187 0afe 09       		.uleb128 0x9
 26188 0aff C7000000 		.4byte	0xc7
 26189 0b03 0E0B0000 		.4byte	0xb0e
 26190 0b07 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 565


 26191 0b08 18010000 		.4byte	0x118
 26192 0b0c 02       		.byte	0x2
 26193 0b0d 00       		.byte	0
 26194 0b0e 09       		.uleb128 0x9
 26195 0b0f EB000000 		.4byte	0xeb
 26196 0b13 1E0B0000 		.4byte	0xb1e
 26197 0b17 0A       		.uleb128 0xa
 26198 0b18 18010000 		.4byte	0x118
 26199 0b1c 03       		.byte	0x3
 26200 0b1d 00       		.byte	0
 26201 0b1e 11       		.uleb128 0x11
 26202 0b1f 29030000 		.4byte	.LASF183
 26203 0b23 06       		.byte	0x6
 26204 0b24 08       		.byte	0x8
 26205 0b25 9001     		.2byte	0x190
 26206 0b27 600B0000 		.4byte	0xb60
 26207 0b2b 13       		.uleb128 0x13
 26208 0b2c 70060000 		.4byte	.LASF184
 26209 0b30 08       		.byte	0x8
 26210 0b31 9101     		.2byte	0x191
 26211 0b33 97000000 		.4byte	0x97
 26212 0b37 00       		.byte	0
 26213 0b38 13       		.uleb128 0x13
 26214 0b39 EA110000 		.4byte	.LASF185
 26215 0b3d 08       		.byte	0x8
 26216 0b3e 9201     		.2byte	0x192
 26217 0b40 97000000 		.4byte	0x97
 26218 0b44 01       		.byte	0x1
 26219 0b45 13       		.uleb128 0x13
 26220 0b46 81050000 		.4byte	.LASF186
 26221 0b4a 08       		.byte	0x8
 26222 0b4b 9301     		.2byte	0x193
 26223 0b4d C7000000 		.4byte	0xc7
 26224 0b51 02       		.byte	0x2
 26225 0b52 13       		.uleb128 0x13
 26226 0b53 EB080000 		.4byte	.LASF187
 26227 0b57 08       		.byte	0x8
 26228 0b58 9401     		.2byte	0x194
 26229 0b5a C7000000 		.4byte	0xc7
 26230 0b5e 04       		.byte	0x4
 26231 0b5f 00       		.byte	0
 26232 0b60 17       		.uleb128 0x17
 26233 0b61 1E0D0000 		.4byte	.LASF340
 26234 0b65 02       		.byte	0x2
 26235 0b66 1403     		.2byte	0x314
 26236 0b68 8C000000 		.4byte	0x8c
 26237 0b6c 03       		.byte	0x3
 26238 0b6d 8A0B0000 		.4byte	0xb8a
 26239 0b71 18       		.uleb128 0x18
 26240 0b72 38040000 		.4byte	.LASF267
 26241 0b76 02       		.byte	0x2
 26242 0b77 1403     		.2byte	0x314
 26243 0b79 8C000000 		.4byte	0x8c
 26244 0b7d 19       		.uleb128 0x19
 26245 0b7e AA010000 		.4byte	.LASF341
 26246 0b82 02       		.byte	0x2
 26247 0b83 1603     		.2byte	0x316
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 566


 26248 0b85 8C000000 		.4byte	0x8c
 26249 0b89 00       		.byte	0
 26250 0b8a 1A       		.uleb128 0x1a
 26251 0b8b 230E0000 		.4byte	.LASF188
 26252 0b8f 01       		.byte	0x1
 26253 0b90 3D       		.byte	0x3d
 26254 0b91 00000000 		.4byte	.LFB64
 26255 0b95 DC040000 		.4byte	.LFE64-.LFB64
 26256 0b99 01       		.uleb128 0x1
 26257 0b9a 9C       		.byte	0x9c
 26258 0b9b 340C0000 		.4byte	0xc34
 26259 0b9f 1B       		.uleb128 0x1b
 26260 0ba0 87050000 		.4byte	.LASF190
 26261 0ba4 01       		.byte	0x1
 26262 0ba5 3F       		.byte	0x3f
 26263 0ba6 97000000 		.4byte	0x97
 26264 0baa 02       		.uleb128 0x2
 26265 0bab 91       		.byte	0x91
 26266 0bac 77       		.sleb128 -9
 26267 0bad 1C       		.uleb128 0x1c
 26268 0bae 600B0000 		.4byte	0xb60
 26269 0bb2 36030000 		.4byte	.LBB8
 26270 0bb6 08000000 		.4byte	.LBE8-.LBB8
 26271 0bba 01       		.byte	0x1
 26272 0bbb 96       		.byte	0x96
 26273 0bbc DB0B0000 		.4byte	0xbdb
 26274 0bc0 1D       		.uleb128 0x1d
 26275 0bc1 710B0000 		.4byte	0xb71
 26276 0bc5 02       		.uleb128 0x2
 26277 0bc6 91       		.byte	0x91
 26278 0bc7 68       		.sleb128 -24
 26279 0bc8 1E       		.uleb128 0x1e
 26280 0bc9 36030000 		.4byte	.LBB9
 26281 0bcd 08000000 		.4byte	.LBE9-.LBB9
 26282 0bd1 1F       		.uleb128 0x1f
 26283 0bd2 7D0B0000 		.4byte	0xb7d
 26284 0bd6 02       		.uleb128 0x2
 26285 0bd7 91       		.byte	0x91
 26286 0bd8 64       		.sleb128 -28
 26287 0bd9 00       		.byte	0
 26288 0bda 00       		.byte	0
 26289 0bdb 1C       		.uleb128 0x1c
 26290 0bdc 600B0000 		.4byte	0xb60
 26291 0be0 54030000 		.4byte	.LBB10
 26292 0be4 08000000 		.4byte	.LBE10-.LBB10
 26293 0be8 01       		.byte	0x1
 26294 0be9 A2       		.byte	0xa2
 26295 0bea 090C0000 		.4byte	0xc09
 26296 0bee 1D       		.uleb128 0x1d
 26297 0bef 710B0000 		.4byte	0xb71
 26298 0bf3 02       		.uleb128 0x2
 26299 0bf4 91       		.byte	0x91
 26300 0bf5 70       		.sleb128 -16
 26301 0bf6 1E       		.uleb128 0x1e
 26302 0bf7 54030000 		.4byte	.LBB11
 26303 0bfb 08000000 		.4byte	.LBE11-.LBB11
 26304 0bff 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 567


 26305 0c00 7D0B0000 		.4byte	0xb7d
 26306 0c04 02       		.uleb128 0x2
 26307 0c05 91       		.byte	0x91
 26308 0c06 60       		.sleb128 -32
 26309 0c07 00       		.byte	0
 26310 0c08 00       		.byte	0
 26311 0c09 20       		.uleb128 0x20
 26312 0c0a 600B0000 		.4byte	0xb60
 26313 0c0e 98040000 		.4byte	.LBB12
 26314 0c12 08000000 		.4byte	.LBE12-.LBB12
 26315 0c16 01       		.byte	0x1
 26316 0c17 FE       		.byte	0xfe
 26317 0c18 1D       		.uleb128 0x1d
 26318 0c19 710B0000 		.4byte	0xb71
 26319 0c1d 02       		.uleb128 0x2
 26320 0c1e 91       		.byte	0x91
 26321 0c1f 6C       		.sleb128 -20
 26322 0c20 1E       		.uleb128 0x1e
 26323 0c21 98040000 		.4byte	.LBB13
 26324 0c25 08000000 		.4byte	.LBE13-.LBB13
 26325 0c29 1F       		.uleb128 0x1f
 26326 0c2a 7D0B0000 		.4byte	0xb7d
 26327 0c2e 02       		.uleb128 0x2
 26328 0c2f 91       		.byte	0x91
 26329 0c30 5C       		.sleb128 -36
 26330 0c31 00       		.byte	0
 26331 0c32 00       		.byte	0
 26332 0c33 00       		.byte	0
 26333 0c34 21       		.uleb128 0x21
 26334 0c35 00000000 		.4byte	.LASF189
 26335 0c39 01       		.byte	0x1
 26336 0c3a 2501     		.2byte	0x125
 26337 0c3c 00000000 		.4byte	.LFB65
 26338 0c40 22000000 		.4byte	.LFE65-.LFB65
 26339 0c44 01       		.uleb128 0x1
 26340 0c45 9C       		.byte	0x9c
 26341 0c46 5B0C0000 		.4byte	0xc5b
 26342 0c4a 22       		.uleb128 0x22
 26343 0c4b C0040000 		.4byte	.LASF191
 26344 0c4f 01       		.byte	0x1
 26345 0c50 2601     		.2byte	0x126
 26346 0c52 5B0C0000 		.4byte	0xc5b
 26347 0c56 03       		.uleb128 0x3
 26348 0c57 91       		.byte	0x91
 26349 0c58 9C74     		.sleb128 -1508
 26350 0c5a 00       		.byte	0
 26351 0c5b 09       		.uleb128 0x9
 26352 0c5c F9000000 		.4byte	0xf9
 26353 0c60 6C0C0000 		.4byte	0xc6c
 26354 0c64 23       		.uleb128 0x23
 26355 0c65 18010000 		.4byte	0x118
 26356 0c69 DB05     		.2byte	0x5db
 26357 0c6b 00       		.byte	0
 26358 0c6c 21       		.uleb128 0x21
 26359 0c6d D9100000 		.4byte	.LASF192
 26360 0c71 01       		.byte	0x1
 26361 0c72 3101     		.2byte	0x131
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 568


 26362 0c74 00000000 		.4byte	.LFB66
 26363 0c78 02010000 		.4byte	.LFE66-.LFB66
 26364 0c7c 01       		.uleb128 0x1
 26365 0c7d 9C       		.byte	0x9c
 26366 0c7e B50C0000 		.4byte	0xcb5
 26367 0c82 24       		.uleb128 0x24
 26368 0c83 53100000 		.4byte	.LASF195
 26369 0c87 01       		.byte	0x1
 26370 0c88 3101     		.2byte	0x131
 26371 0c8a A3000000 		.4byte	0xa3
 26372 0c8e 04       		.uleb128 0x4
 26373 0c8f 91       		.byte	0x91
 26374 0c90 B6C47E   		.sleb128 -24010
 26375 0c93 22       		.uleb128 0x22
 26376 0c94 C0040000 		.4byte	.LASF191
 26377 0c98 01       		.byte	0x1
 26378 0c99 3201     		.2byte	0x132
 26379 0c9b B50C0000 		.4byte	0xcb5
 26380 0c9f 03       		.uleb128 0x3
 26381 0ca0 91       		.byte	0x91
 26382 0ca1 D860     		.sleb128 -4008
 26383 0ca3 22       		.uleb128 0x22
 26384 0ca4 CD060000 		.4byte	.LASF193
 26385 0ca8 01       		.byte	0x1
 26386 0ca9 3301     		.2byte	0x133
 26387 0cab C60C0000 		.4byte	0xcc6
 26388 0caf 04       		.uleb128 0x4
 26389 0cb0 91       		.byte	0x91
 26390 0cb1 B8C47E   		.sleb128 -24008
 26391 0cb4 00       		.byte	0
 26392 0cb5 09       		.uleb128 0x9
 26393 0cb6 F9000000 		.4byte	0xf9
 26394 0cba C60C0000 		.4byte	0xcc6
 26395 0cbe 23       		.uleb128 0x23
 26396 0cbf 18010000 		.4byte	0x118
 26397 0cc3 9F0F     		.2byte	0xf9f
 26398 0cc5 00       		.byte	0
 26399 0cc6 09       		.uleb128 0x9
 26400 0cc7 F9000000 		.4byte	0xf9
 26401 0ccb D70C0000 		.4byte	0xcd7
 26402 0ccf 23       		.uleb128 0x23
 26403 0cd0 18010000 		.4byte	0x118
 26404 0cd4 1F4E     		.2byte	0x4e1f
 26405 0cd6 00       		.byte	0
 26406 0cd7 21       		.uleb128 0x21
 26407 0cd8 6F010000 		.4byte	.LASF194
 26408 0cdc 01       		.byte	0x1
 26409 0cdd 5601     		.2byte	0x156
 26410 0cdf 00000000 		.4byte	.LFB67
 26411 0ce3 EA2E0000 		.4byte	.LFE67-.LFB67
 26412 0ce7 01       		.uleb128 0x1
 26413 0ce8 9C       		.byte	0x9c
 26414 0ce9 7B0E0000 		.4byte	0xe7b
 26415 0ced 24       		.uleb128 0x24
 26416 0cee F20A0000 		.4byte	.LASF196
 26417 0cf2 01       		.byte	0x1
 26418 0cf3 5601     		.2byte	0x156
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 569


 26419 0cf5 7B0E0000 		.4byte	0xe7b
 26420 0cf9 03       		.uleb128 0x3
 26421 0cfa 91       		.byte	0x91
 26422 0cfb A457     		.sleb128 -5212
 26423 0cfd 24       		.uleb128 0x24
 26424 0cfe B2100000 		.4byte	.LASF197
 26425 0d02 01       		.byte	0x1
 26426 0d03 5601     		.2byte	0x156
 26427 0d05 810E0000 		.4byte	0xe81
 26428 0d09 03       		.uleb128 0x3
 26429 0d0a 91       		.byte	0x91
 26430 0d0b A057     		.sleb128 -5216
 26431 0d0d 24       		.uleb128 0x24
 26432 0d0e 73020000 		.4byte	.LASF198
 26433 0d12 01       		.byte	0x1
 26434 0d13 5701     		.2byte	0x157
 26435 0d15 810E0000 		.4byte	0xe81
 26436 0d19 03       		.uleb128 0x3
 26437 0d1a 91       		.byte	0x91
 26438 0d1b 9C57     		.sleb128 -5220
 26439 0d1d 24       		.uleb128 0x24
 26440 0d1e 5E0A0000 		.4byte	.LASF199
 26441 0d22 01       		.byte	0x1
 26442 0d23 5701     		.2byte	0x157
 26443 0d25 810E0000 		.4byte	0xe81
 26444 0d29 03       		.uleb128 0x3
 26445 0d2a 91       		.byte	0x91
 26446 0d2b 9857     		.sleb128 -5224
 26447 0d2d 24       		.uleb128 0x24
 26448 0d2e 1C100000 		.4byte	.LASF200
 26449 0d32 01       		.byte	0x1
 26450 0d33 5801     		.2byte	0x158
 26451 0d35 810E0000 		.4byte	0xe81
 26452 0d39 02       		.uleb128 0x2
 26453 0d3a 91       		.byte	0x91
 26454 0d3b 00       		.sleb128 0
 26455 0d3c 24       		.uleb128 0x24
 26456 0d3d 65060000 		.4byte	.LASF201
 26457 0d41 01       		.byte	0x1
 26458 0d42 5801     		.2byte	0x158
 26459 0d44 870E0000 		.4byte	0xe87
 26460 0d48 02       		.uleb128 0x2
 26461 0d49 91       		.byte	0x91
 26462 0d4a 04       		.sleb128 4
 26463 0d4b 24       		.uleb128 0x24
 26464 0d4c 1A090000 		.4byte	.LASF202
 26465 0d50 01       		.byte	0x1
 26466 0d51 5901     		.2byte	0x159
 26467 0d53 810E0000 		.4byte	0xe81
 26468 0d57 02       		.uleb128 0x2
 26469 0d58 91       		.byte	0x91
 26470 0d59 08       		.sleb128 8
 26471 0d5a 24       		.uleb128 0x24
 26472 0d5b DF060000 		.4byte	.LASF203
 26473 0d5f 01       		.byte	0x1
 26474 0d60 5901     		.2byte	0x159
 26475 0d62 870E0000 		.4byte	0xe87
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 570


 26476 0d66 02       		.uleb128 0x2
 26477 0d67 91       		.byte	0x91
 26478 0d68 0C       		.sleb128 12
 26479 0d69 22       		.uleb128 0x22
 26480 0d6a 13050000 		.4byte	.LASF204
 26481 0d6e 01       		.byte	0x1
 26482 0d6f 5C01     		.2byte	0x15c
 26483 0d71 8D0E0000 		.4byte	0xe8d
 26484 0d75 03       		.uleb128 0x3
 26485 0d76 91       		.byte	0x91
 26486 0d77 F057     		.sleb128 -5136
 26487 0d79 22       		.uleb128 0x22
 26488 0d7a B0000000 		.4byte	.LASF205
 26489 0d7e 01       		.byte	0x1
 26490 0d7f 5D01     		.2byte	0x15d
 26491 0d81 A3000000 		.4byte	0xa3
 26492 0d85 02       		.uleb128 0x2
 26493 0d86 91       		.byte	0x91
 26494 0d87 68       		.sleb128 -24
 26495 0d88 25       		.uleb128 0x25
 26496 0d89 6900     		.ascii	"i\000"
 26497 0d8b 01       		.byte	0x1
 26498 0d8c 6001     		.2byte	0x160
 26499 0d8e 97000000 		.4byte	0x97
 26500 0d92 02       		.uleb128 0x2
 26501 0d93 91       		.byte	0x91
 26502 0d94 6F       		.sleb128 -17
 26503 0d95 25       		.uleb128 0x25
 26504 0d96 6A00     		.ascii	"j\000"
 26505 0d98 01       		.byte	0x1
 26506 0d99 6001     		.2byte	0x160
 26507 0d9b 97000000 		.4byte	0x97
 26508 0d9f 02       		.uleb128 0x2
 26509 0da0 91       		.byte	0x91
 26510 0da1 6E       		.sleb128 -18
 26511 0da2 25       		.uleb128 0x25
 26512 0da3 69647800 		.ascii	"idx\000"
 26513 0da7 01       		.byte	0x1
 26514 0da8 6101     		.2byte	0x161
 26515 0daa 97000000 		.4byte	0x97
 26516 0dae 02       		.uleb128 0x2
 26517 0daf 91       		.byte	0x91
 26518 0db0 6D       		.sleb128 -19
 26519 0db1 22       		.uleb128 0x22
 26520 0db2 4C0E0000 		.4byte	.LASF206
 26521 0db6 01       		.byte	0x1
 26522 0db7 6201     		.2byte	0x162
 26523 0db9 97000000 		.4byte	0x97
 26524 0dbd 02       		.uleb128 0x2
 26525 0dbe 91       		.byte	0x91
 26526 0dbf 6C       		.sleb128 -20
 26527 0dc0 25       		.uleb128 0x25
 26528 0dc1 736F6400 		.ascii	"sod\000"
 26529 0dc5 01       		.byte	0x1
 26530 0dc6 6301     		.2byte	0x163
 26531 0dc8 97000000 		.4byte	0x97
 26532 0dcc 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 571


 26533 0dcd 91       		.byte	0x91
 26534 0dce 6B       		.sleb128 -21
 26535 0dcf 22       		.uleb128 0x22
 26536 0dd0 2F0A0000 		.4byte	.LASF207
 26537 0dd4 01       		.byte	0x1
 26538 0dd5 6401     		.2byte	0x164
 26539 0dd7 97000000 		.4byte	0x97
 26540 0ddb 02       		.uleb128 0x2
 26541 0ddc 91       		.byte	0x91
 26542 0ddd 6A       		.sleb128 -22
 26543 0dde 22       		.uleb128 0x22
 26544 0ddf D0110000 		.4byte	.LASF208
 26545 0de3 01       		.byte	0x1
 26546 0de4 6501     		.2byte	0x165
 26547 0de6 9E0E0000 		.4byte	0xe9e
 26548 0dea 03       		.uleb128 0x3
 26549 0deb 91       		.byte	0x91
 26550 0dec BC57     		.sleb128 -5188
 26551 0dee 22       		.uleb128 0x22
 26552 0def 04100000 		.4byte	.LASF209
 26553 0df3 01       		.byte	0x1
 26554 0df4 6601     		.2byte	0x166
 26555 0df6 EB000000 		.4byte	0xeb
 26556 0dfa 03       		.uleb128 0x3
 26557 0dfb 91       		.byte	0x91
 26558 0dfc B857     		.sleb128 -5192
 26559 0dfe 22       		.uleb128 0x22
 26560 0dff D40E0000 		.4byte	.LASF210
 26561 0e03 01       		.byte	0x1
 26562 0e04 6701     		.2byte	0x167
 26563 0e06 C7000000 		.4byte	0xc7
 26564 0e0a 03       		.uleb128 0x3
 26565 0e0b 91       		.byte	0x91
 26566 0e0c B657     		.sleb128 -5194
 26567 0e0e 22       		.uleb128 0x22
 26568 0e0f 860A0000 		.4byte	.LASF211
 26569 0e13 01       		.byte	0x1
 26570 0e14 6801     		.2byte	0x168
 26571 0e16 A3000000 		.4byte	0xa3
 26572 0e1a 03       		.uleb128 0x3
 26573 0e1b 91       		.byte	0x91
 26574 0e1c B457     		.sleb128 -5196
 26575 0e1e 22       		.uleb128 0x22
 26576 0e1f 25100000 		.4byte	.LASF212
 26577 0e23 01       		.byte	0x1
 26578 0e24 6901     		.2byte	0x169
 26579 0e26 D3000000 		.4byte	0xd3
 26580 0e2a 03       		.uleb128 0x3
 26581 0e2b 91       		.byte	0x91
 26582 0e2c B057     		.sleb128 -5200
 26583 0e2e 22       		.uleb128 0x22
 26584 0e2f F30B0000 		.4byte	.LASF213
 26585 0e33 01       		.byte	0x1
 26586 0e34 6A01     		.2byte	0x16a
 26587 0e36 AF000000 		.4byte	0xaf
 26588 0e3a 03       		.uleb128 0x3
 26589 0e3b 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 572


 26590 0e3c AC57     		.sleb128 -5204
 26591 0e3e 22       		.uleb128 0x22
 26592 0e3f 960B0000 		.4byte	.LASF214
 26593 0e43 01       		.byte	0x1
 26594 0e44 6C01     		.2byte	0x16c
 26595 0e46 97000000 		.4byte	0x97
 26596 0e4a 02       		.uleb128 0x2
 26597 0e4b 91       		.byte	0x91
 26598 0e4c 67       		.sleb128 -25
 26599 0e4d 22       		.uleb128 0x22
 26600 0e4e DF000000 		.4byte	.LASF215
 26601 0e52 01       		.byte	0x1
 26602 0e53 6D01     		.2byte	0x16d
 26603 0e55 97000000 		.4byte	0x97
 26604 0e59 02       		.uleb128 0x2
 26605 0e5a 91       		.byte	0x91
 26606 0e5b 66       		.sleb128 -26
 26607 0e5c 22       		.uleb128 0x22
 26608 0e5d 4D090000 		.4byte	.LASF216
 26609 0e61 01       		.byte	0x1
 26610 0e62 6F01     		.2byte	0x16f
 26611 0e64 810E0000 		.4byte	0xe81
 26612 0e68 02       		.uleb128 0x2
 26613 0e69 91       		.byte	0x91
 26614 0e6a 60       		.sleb128 -32
 26615 0e6b 22       		.uleb128 0x22
 26616 0e6c 64010000 		.4byte	.LASF217
 26617 0e70 01       		.byte	0x1
 26618 0e71 7001     		.2byte	0x170
 26619 0e73 810E0000 		.4byte	0xe81
 26620 0e77 02       		.uleb128 0x2
 26621 0e78 91       		.byte	0x91
 26622 0e79 5C       		.sleb128 -36
 26623 0e7a 00       		.byte	0
 26624 0e7b 07       		.uleb128 0x7
 26625 0e7c 04       		.byte	0x4
 26626 0e7d 810E0000 		.4byte	0xe81
 26627 0e81 07       		.uleb128 0x7
 26628 0e82 04       		.byte	0x4
 26629 0e83 97000000 		.4byte	0x97
 26630 0e87 07       		.uleb128 0x7
 26631 0e88 04       		.byte	0x4
 26632 0e89 25010000 		.4byte	0x125
 26633 0e8d 09       		.uleb128 0x9
 26634 0e8e 97000000 		.4byte	0x97
 26635 0e92 9E0E0000 		.4byte	0xe9e
 26636 0e96 23       		.uleb128 0x23
 26637 0e97 18010000 		.4byte	0x118
 26638 0e9b EB13     		.2byte	0x13eb
 26639 0e9d 00       		.byte	0
 26640 0e9e 09       		.uleb128 0x9
 26641 0e9f F9000000 		.4byte	0xf9
 26642 0ea3 AE0E0000 		.4byte	0xeae
 26643 0ea7 0A       		.uleb128 0xa
 26644 0ea8 18010000 		.4byte	0x118
 26645 0eac 31       		.byte	0x31
 26646 0ead 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 573


 26647 0eae 21       		.uleb128 0x21
 26648 0eaf C70C0000 		.4byte	.LASF218
 26649 0eb3 01       		.byte	0x1
 26650 0eb4 2C03     		.2byte	0x32c
 26651 0eb6 00000000 		.4byte	.LFB68
 26652 0eba 08170000 		.4byte	.LFE68-.LFB68
 26653 0ebe 01       		.uleb128 0x1
 26654 0ebf 9C       		.byte	0x9c
 26655 0ec0 7C100000 		.4byte	0x107c
 26656 0ec4 24       		.uleb128 0x24
 26657 0ec5 ED050000 		.4byte	.LASF219
 26658 0ec9 01       		.byte	0x1
 26659 0eca 2C03     		.2byte	0x32c
 26660 0ecc A3000000 		.4byte	0xa3
 26661 0ed0 03       		.uleb128 0x3
 26662 0ed1 91       		.byte	0x91
 26663 0ed2 CE76     		.sleb128 -1202
 26664 0ed4 25       		.uleb128 0x25
 26665 0ed5 6900     		.ascii	"i\000"
 26666 0ed7 01       		.byte	0x1
 26667 0ed8 2D03     		.2byte	0x32d
 26668 0eda 97000000 		.4byte	0x97
 26669 0ede 02       		.uleb128 0x2
 26670 0edf 91       		.byte	0x91
 26671 0ee0 6F       		.sleb128 -17
 26672 0ee1 25       		.uleb128 0x25
 26673 0ee2 6A00     		.ascii	"j\000"
 26674 0ee4 01       		.byte	0x1
 26675 0ee5 2D03     		.2byte	0x32d
 26676 0ee7 97000000 		.4byte	0x97
 26677 0eeb 02       		.uleb128 0x2
 26678 0eec 91       		.byte	0x91
 26679 0eed 6E       		.sleb128 -18
 26680 0eee 25       		.uleb128 0x25
 26681 0eef 736F6400 		.ascii	"sod\000"
 26682 0ef3 01       		.byte	0x1
 26683 0ef4 2E03     		.2byte	0x32e
 26684 0ef6 97000000 		.4byte	0x97
 26685 0efa 02       		.uleb128 0x2
 26686 0efb 91       		.byte	0x91
 26687 0efc 6D       		.sleb128 -19
 26688 0efd 22       		.uleb128 0x22
 26689 0efe 3A090000 		.4byte	.LASF220
 26690 0f02 01       		.byte	0x1
 26691 0f03 2F03     		.2byte	0x32f
 26692 0f05 97000000 		.4byte	0x97
 26693 0f09 02       		.uleb128 0x2
 26694 0f0a 91       		.byte	0x91
 26695 0f0b 62       		.sleb128 -30
 26696 0f0c 22       		.uleb128 0x22
 26697 0f0d D40E0000 		.4byte	.LASF210
 26698 0f11 01       		.byte	0x1
 26699 0f12 3003     		.2byte	0x330
 26700 0f14 C7000000 		.4byte	0xc7
 26701 0f18 02       		.uleb128 0x2
 26702 0f19 91       		.byte	0x91
 26703 0f1a 60       		.sleb128 -32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 574


 26704 0f1b 22       		.uleb128 0x22
 26705 0f1c 860A0000 		.4byte	.LASF211
 26706 0f20 01       		.byte	0x1
 26707 0f21 3103     		.2byte	0x331
 26708 0f23 A3000000 		.4byte	0xa3
 26709 0f27 02       		.uleb128 0x2
 26710 0f28 91       		.byte	0x91
 26711 0f29 5E       		.sleb128 -34
 26712 0f2a 22       		.uleb128 0x22
 26713 0f2b 25100000 		.4byte	.LASF212
 26714 0f2f 01       		.byte	0x1
 26715 0f30 3203     		.2byte	0x332
 26716 0f32 D3000000 		.4byte	0xd3
 26717 0f36 02       		.uleb128 0x2
 26718 0f37 91       		.byte	0x91
 26719 0f38 58       		.sleb128 -40
 26720 0f39 22       		.uleb128 0x22
 26721 0f3a F30B0000 		.4byte	.LASF213
 26722 0f3e 01       		.byte	0x1
 26723 0f3f 3303     		.2byte	0x333
 26724 0f41 AF000000 		.4byte	0xaf
 26725 0f45 02       		.uleb128 0x2
 26726 0f46 91       		.byte	0x91
 26727 0f47 54       		.sleb128 -44
 26728 0f48 22       		.uleb128 0x22
 26729 0f49 04100000 		.4byte	.LASF209
 26730 0f4d 01       		.byte	0x1
 26731 0f4e 3403     		.2byte	0x334
 26732 0f50 EB000000 		.4byte	0xeb
 26733 0f54 02       		.uleb128 0x2
 26734 0f55 91       		.byte	0x91
 26735 0f56 50       		.sleb128 -48
 26736 0f57 22       		.uleb128 0x22
 26737 0f58 960B0000 		.4byte	.LASF214
 26738 0f5c 01       		.byte	0x1
 26739 0f5d 3603     		.2byte	0x336
 26740 0f5f 97000000 		.4byte	0x97
 26741 0f63 02       		.uleb128 0x2
 26742 0f64 91       		.byte	0x91
 26743 0f65 65       		.sleb128 -27
 26744 0f66 22       		.uleb128 0x22
 26745 0f67 DF000000 		.4byte	.LASF215
 26746 0f6b 01       		.byte	0x1
 26747 0f6c 3703     		.2byte	0x337
 26748 0f6e 97000000 		.4byte	0x97
 26749 0f72 02       		.uleb128 0x2
 26750 0f73 91       		.byte	0x91
 26751 0f74 64       		.sleb128 -28
 26752 0f75 22       		.uleb128 0x22
 26753 0f76 89020000 		.4byte	.LASF221
 26754 0f7a 01       		.byte	0x1
 26755 0f7b 3A03     		.2byte	0x33a
 26756 0f7d 7C100000 		.4byte	0x107c
 26757 0f81 02       		.uleb128 0x2
 26758 0f82 91       		.byte	0x91
 26759 0f83 68       		.sleb128 -24
 26760 0f84 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 575


 26761 0f85 F20A0000 		.4byte	.LASF196
 26762 0f89 01       		.byte	0x1
 26763 0f8a 4203     		.2byte	0x342
 26764 0f8c 82100000 		.4byte	0x1082
 26765 0f90 03       		.uleb128 0x3
 26766 0f91 91       		.byte	0x91
 26767 0f92 B47D     		.sleb128 -332
 26768 0f94 22       		.uleb128 0x22
 26769 0f95 B2100000 		.4byte	.LASF197
 26770 0f99 01       		.byte	0x1
 26771 0f9a 8F03     		.2byte	0x38f
 26772 0f9c 92100000 		.4byte	0x1092
 26773 0fa0 03       		.uleb128 0x3
 26774 0fa1 91       		.byte	0x91
 26775 0fa2 EC7C     		.sleb128 -404
 26776 0fa4 22       		.uleb128 0x22
 26777 0fa5 73020000 		.4byte	.LASF198
 26778 0fa9 01       		.byte	0x1
 26779 0faa A603     		.2byte	0x3a6
 26780 0fac 92100000 		.4byte	0x1092
 26781 0fb0 03       		.uleb128 0x3
 26782 0fb1 91       		.byte	0x91
 26783 0fb2 A47C     		.sleb128 -476
 26784 0fb4 22       		.uleb128 0x22
 26785 0fb5 5E0A0000 		.4byte	.LASF199
 26786 0fb9 01       		.byte	0x1
 26787 0fba BD03     		.2byte	0x3bd
 26788 0fbc 92100000 		.4byte	0x1092
 26789 0fc0 03       		.uleb128 0x3
 26790 0fc1 91       		.byte	0x91
 26791 0fc2 DC7B     		.sleb128 -548
 26792 0fc4 22       		.uleb128 0x22
 26793 0fc5 65060000 		.4byte	.LASF201
 26794 0fc9 01       		.byte	0x1
 26795 0fca D403     		.2byte	0x3d4
 26796 0fcc A2100000 		.4byte	0x10a2
 26797 0fd0 03       		.uleb128 0x3
 26798 0fd1 91       		.byte	0x91
 26799 0fd2 C079     		.sleb128 -832
 26800 0fd4 22       		.uleb128 0x22
 26801 0fd5 25110000 		.4byte	.LASF222
 26802 0fd9 01       		.byte	0x1
 26803 0fda EC03     		.2byte	0x3ec
 26804 0fdc B2100000 		.4byte	0x10b2
 26805 0fe0 03       		.uleb128 0x3
 26806 0fe1 91       		.byte	0x91
 26807 0fe2 C878     		.sleb128 -952
 26808 0fe4 22       		.uleb128 0x22
 26809 0fe5 DF060000 		.4byte	.LASF203
 26810 0fe9 01       		.byte	0x1
 26811 0fea EF03     		.2byte	0x3ef
 26812 0fec C2100000 		.4byte	0x10c2
 26813 0ff0 03       		.uleb128 0x3
 26814 0ff1 91       		.byte	0x91
 26815 0ff2 A078     		.sleb128 -992
 26816 0ff4 22       		.uleb128 0x22
 26817 0ff5 1C100000 		.4byte	.LASF200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 576


 26818 0ff9 01       		.byte	0x1
 26819 0ffa FC03     		.2byte	0x3fc
 26820 0ffc 50010000 		.4byte	0x150
 26821 1000 03       		.uleb128 0x3
 26822 1001 91       		.byte	0x91
 26823 1002 8478     		.sleb128 -1020
 26824 1004 22       		.uleb128 0x22
 26825 1005 F80A0000 		.4byte	.LASF223
 26826 1009 01       		.byte	0x1
 26827 100a FD03     		.2byte	0x3fd
 26828 100c D2100000 		.4byte	0x10d2
 26829 1010 03       		.uleb128 0x3
 26830 1011 91       		.byte	0x91
 26831 1012 F877     		.sleb128 -1032
 26832 1014 22       		.uleb128 0x22
 26833 1015 480A0000 		.4byte	.LASF224
 26834 1019 01       		.byte	0x1
 26835 101a FE03     		.2byte	0x3fe
 26836 101c E2100000 		.4byte	0x10e2
 26837 1020 03       		.uleb128 0x3
 26838 1021 91       		.byte	0x91
 26839 1022 E477     		.sleb128 -1052
 26840 1024 22       		.uleb128 0x22
 26841 1025 050C0000 		.4byte	.LASF225
 26842 1029 01       		.byte	0x1
 26843 102a FF03     		.2byte	0x3ff
 26844 102c 97000000 		.4byte	0x97
 26845 1030 02       		.uleb128 0x2
 26846 1031 91       		.byte	0x91
 26847 1032 63       		.sleb128 -29
 26848 1033 22       		.uleb128 0x22
 26849 1034 1A090000 		.4byte	.LASF202
 26850 1038 01       		.byte	0x1
 26851 1039 0804     		.2byte	0x408
 26852 103b 92100000 		.4byte	0x1092
 26853 103f 03       		.uleb128 0x3
 26854 1040 91       		.byte	0x91
 26855 1041 9C77     		.sleb128 -1124
 26856 1043 22       		.uleb128 0x22
 26857 1044 4C110000 		.4byte	.LASF226
 26858 1048 01       		.byte	0x1
 26859 1049 1304     		.2byte	0x413
 26860 104b 92100000 		.4byte	0x1092
 26861 104f 03       		.uleb128 0x3
 26862 1050 91       		.byte	0x91
 26863 1051 D476     		.sleb128 -1196
 26864 1053 1E       		.uleb128 0x1e
 26865 1054 72160000 		.4byte	.LBB14
 26866 1058 86000000 		.4byte	.LBE14-.LBB14
 26867 105c 25       		.uleb128 0x25
 26868 105d 69647800 		.ascii	"idx\000"
 26869 1061 01       		.byte	0x1
 26870 1062 7C04     		.2byte	0x47c
 26871 1064 97000000 		.4byte	0x97
 26872 1068 02       		.uleb128 0x2
 26873 1069 91       		.byte	0x91
 26874 106a 67       		.sleb128 -25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 577


 26875 106b 22       		.uleb128 0x22
 26876 106c 82040000 		.4byte	.LASF227
 26877 1070 01       		.byte	0x1
 26878 1071 7C04     		.2byte	0x47c
 26879 1073 97000000 		.4byte	0x97
 26880 1077 02       		.uleb128 0x2
 26881 1078 91       		.byte	0x91
 26882 1079 66       		.sleb128 -26
 26883 107a 00       		.byte	0
 26884 107b 00       		.byte	0
 26885 107c 07       		.uleb128 0x7
 26886 107d 04       		.byte	0x4
 26887 107e A2090000 		.4byte	0x9a2
 26888 1082 09       		.uleb128 0x9
 26889 1083 810E0000 		.4byte	0xe81
 26890 1087 92100000 		.4byte	0x1092
 26891 108b 0A       		.uleb128 0xa
 26892 108c 18010000 		.4byte	0x118
 26893 1090 46       		.byte	0x46
 26894 1091 00       		.byte	0
 26895 1092 09       		.uleb128 0x9
 26896 1093 97000000 		.4byte	0x97
 26897 1097 A2100000 		.4byte	0x10a2
 26898 109b 0A       		.uleb128 0xa
 26899 109c 18010000 		.4byte	0x118
 26900 10a0 46       		.byte	0x46
 26901 10a1 00       		.byte	0
 26902 10a2 09       		.uleb128 0x9
 26903 10a3 25010000 		.4byte	0x125
 26904 10a7 B2100000 		.4byte	0x10b2
 26905 10ab 0A       		.uleb128 0xa
 26906 10ac 18010000 		.4byte	0x118
 26907 10b0 46       		.byte	0x46
 26908 10b1 00       		.byte	0
 26909 10b2 09       		.uleb128 0x9
 26910 10b3 F9000000 		.4byte	0xf9
 26911 10b7 C2100000 		.4byte	0x10c2
 26912 10bb 0A       		.uleb128 0xa
 26913 10bc 18010000 		.4byte	0x118
 26914 10c0 75       		.byte	0x75
 26915 10c1 00       		.byte	0
 26916 10c2 09       		.uleb128 0x9
 26917 10c3 25010000 		.4byte	0x125
 26918 10c7 D2100000 		.4byte	0x10d2
 26919 10cb 0A       		.uleb128 0xa
 26920 10cc 18010000 		.4byte	0x118
 26921 10d0 09       		.byte	0x9
 26922 10d1 00       		.byte	0
 26923 10d2 09       		.uleb128 0x9
 26924 10d3 97000000 		.4byte	0x97
 26925 10d7 E2100000 		.4byte	0x10e2
 26926 10db 0A       		.uleb128 0xa
 26927 10dc 18010000 		.4byte	0x118
 26928 10e0 08       		.byte	0x8
 26929 10e1 00       		.byte	0
 26930 10e2 09       		.uleb128 0x9
 26931 10e3 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 578


 26932 10e7 F2100000 		.4byte	0x10f2
 26933 10eb 0A       		.uleb128 0xa
 26934 10ec 18010000 		.4byte	0x118
 26935 10f0 11       		.byte	0x11
 26936 10f1 00       		.byte	0
 26937 10f2 21       		.uleb128 0x21
 26938 10f3 FB020000 		.4byte	.LASF228
 26939 10f7 01       		.byte	0x1
 26940 10f8 8D04     		.2byte	0x48d
 26941 10fa 00000000 		.4byte	.LFB69
 26942 10fe 18140000 		.4byte	.LFE69-.LFB69
 26943 1102 01       		.uleb128 0x1
 26944 1103 9C       		.byte	0x9c
 26945 1104 94110000 		.4byte	0x1194
 26946 1108 24       		.uleb128 0x24
 26947 1109 ED050000 		.4byte	.LASF219
 26948 110d 01       		.byte	0x1
 26949 110e 8D04     		.2byte	0x48d
 26950 1110 A3000000 		.4byte	0xa3
 26951 1114 02       		.uleb128 0x2
 26952 1115 91       		.byte	0x91
 26953 1116 56       		.sleb128 -42
 26954 1117 25       		.uleb128 0x25
 26955 1118 6900     		.ascii	"i\000"
 26956 111a 01       		.byte	0x1
 26957 111b 8F04     		.2byte	0x48f
 26958 111d 97000000 		.4byte	0x97
 26959 1121 02       		.uleb128 0x2
 26960 1122 91       		.byte	0x91
 26961 1123 67       		.sleb128 -25
 26962 1124 25       		.uleb128 0x25
 26963 1125 6A00     		.ascii	"j\000"
 26964 1127 01       		.byte	0x1
 26965 1128 8F04     		.2byte	0x48f
 26966 112a 97000000 		.4byte	0x97
 26967 112e 02       		.uleb128 0x2
 26968 112f 91       		.byte	0x91
 26969 1130 66       		.sleb128 -26
 26970 1131 22       		.uleb128 0x22
 26971 1132 690A0000 		.4byte	.LASF229
 26972 1136 01       		.byte	0x1
 26973 1137 9004     		.2byte	0x490
 26974 1139 97000000 		.4byte	0x97
 26975 113d 02       		.uleb128 0x2
 26976 113e 91       		.byte	0x91
 26977 113f 62       		.sleb128 -30
 26978 1140 22       		.uleb128 0x22
 26979 1141 04100000 		.4byte	.LASF209
 26980 1145 01       		.byte	0x1
 26981 1146 9104     		.2byte	0x491
 26982 1148 EB000000 		.4byte	0xeb
 26983 114c 02       		.uleb128 0x2
 26984 114d 91       		.byte	0x91
 26985 114e 5C       		.sleb128 -36
 26986 114f 22       		.uleb128 0x22
 26987 1150 D4020000 		.4byte	.LASF230
 26988 1154 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 579


 26989 1155 9104     		.2byte	0x491
 26990 1157 EB000000 		.4byte	0xeb
 26991 115b 02       		.uleb128 0x2
 26992 115c 91       		.byte	0x91
 26993 115d 58       		.sleb128 -40
 26994 115e 22       		.uleb128 0x22
 26995 115f 960B0000 		.4byte	.LASF214
 26996 1163 01       		.byte	0x1
 26997 1164 9304     		.2byte	0x493
 26998 1166 97000000 		.4byte	0x97
 26999 116a 02       		.uleb128 0x2
 27000 116b 91       		.byte	0x91
 27001 116c 64       		.sleb128 -28
 27002 116d 22       		.uleb128 0x22
 27003 116e DF000000 		.4byte	.LASF215
 27004 1172 01       		.byte	0x1
 27005 1173 9404     		.2byte	0x494
 27006 1175 97000000 		.4byte	0x97
 27007 1179 02       		.uleb128 0x2
 27008 117a 91       		.byte	0x91
 27009 117b 63       		.sleb128 -29
 27010 117c 1E       		.uleb128 0x1e
 27011 117d F80A0000 		.4byte	.LBB15
 27012 1181 26000000 		.4byte	.LBE15-.LBB15
 27013 1185 25       		.uleb128 0x25
 27014 1186 6900     		.ascii	"i\000"
 27015 1188 01       		.byte	0x1
 27016 1189 3B05     		.2byte	0x53b
 27017 118b 97000000 		.4byte	0x97
 27018 118f 02       		.uleb128 0x2
 27019 1190 91       		.byte	0x91
 27020 1191 65       		.sleb128 -27
 27021 1192 00       		.byte	0
 27022 1193 00       		.byte	0
 27023 1194 21       		.uleb128 0x21
 27024 1195 6A070000 		.4byte	.LASF231
 27025 1199 01       		.byte	0x1
 27026 119a D405     		.2byte	0x5d4
 27027 119c 00000000 		.4byte	.LFB70
 27028 11a0 F40D0000 		.4byte	.LFE70-.LFB70
 27029 11a4 01       		.uleb128 0x1
 27030 11a5 9C       		.byte	0x9c
 27031 11a6 23130000 		.4byte	0x1323
 27032 11aa 24       		.uleb128 0x24
 27033 11ab ED050000 		.4byte	.LASF219
 27034 11af 01       		.byte	0x1
 27035 11b0 D405     		.2byte	0x5d4
 27036 11b2 A3000000 		.4byte	0xa3
 27037 11b6 03       		.uleb128 0x3
 27038 11b7 91       		.byte	0x91
 27039 11b8 CE72     		.sleb128 -1714
 27040 11ba 22       		.uleb128 0x22
 27041 11bb 13050000 		.4byte	.LASF204
 27042 11bf 01       		.byte	0x1
 27043 11c0 D705     		.2byte	0x5d7
 27044 11c2 23130000 		.4byte	0x1323
 27045 11c6 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 580


 27046 11c7 91       		.byte	0x91
 27047 11c8 DC74     		.sleb128 -1444
 27048 11ca 22       		.uleb128 0x22
 27049 11cb C10E0000 		.4byte	.LASF232
 27050 11cf 01       		.byte	0x1
 27051 11d0 DE05     		.2byte	0x5de
 27052 11d2 A3000000 		.4byte	0xa3
 27053 11d6 02       		.uleb128 0x2
 27054 11d7 91       		.byte	0x91
 27055 11d8 62       		.sleb128 -30
 27056 11d9 22       		.uleb128 0x22
 27057 11da 96040000 		.4byte	.LASF233
 27058 11de 01       		.byte	0x1
 27059 11df DF05     		.2byte	0x5df
 27060 11e1 A3000000 		.4byte	0xa3
 27061 11e5 02       		.uleb128 0x2
 27062 11e6 91       		.byte	0x91
 27063 11e7 6E       		.sleb128 -18
 27064 11e8 22       		.uleb128 0x22
 27065 11e9 8B070000 		.4byte	.LASF234
 27066 11ed 01       		.byte	0x1
 27067 11ee E005     		.2byte	0x5e0
 27068 11f0 A3000000 		.4byte	0xa3
 27069 11f4 02       		.uleb128 0x2
 27070 11f5 91       		.byte	0x91
 27071 11f6 60       		.sleb128 -32
 27072 11f7 22       		.uleb128 0x22
 27073 11f8 0A070000 		.4byte	.LASF235
 27074 11fc 01       		.byte	0x1
 27075 11fd E105     		.2byte	0x5e1
 27076 11ff A3000000 		.4byte	0xa3
 27077 1203 02       		.uleb128 0x2
 27078 1204 91       		.byte	0x91
 27079 1205 5E       		.sleb128 -34
 27080 1206 25       		.uleb128 0x25
 27081 1207 6900     		.ascii	"i\000"
 27082 1209 01       		.byte	0x1
 27083 120a E905     		.2byte	0x5e9
 27084 120c A3000000 		.4byte	0xa3
 27085 1210 02       		.uleb128 0x2
 27086 1211 91       		.byte	0x91
 27087 1212 6C       		.sleb128 -20
 27088 1213 25       		.uleb128 0x25
 27089 1214 6A00     		.ascii	"j\000"
 27090 1216 01       		.byte	0x1
 27091 1217 E905     		.2byte	0x5e9
 27092 1219 A3000000 		.4byte	0xa3
 27093 121d 02       		.uleb128 0x2
 27094 121e 91       		.byte	0x91
 27095 121f 6A       		.sleb128 -22
 27096 1220 25       		.uleb128 0x25
 27097 1221 6B00     		.ascii	"k\000"
 27098 1223 01       		.byte	0x1
 27099 1224 E905     		.2byte	0x5e9
 27100 1226 A3000000 		.4byte	0xa3
 27101 122a 02       		.uleb128 0x2
 27102 122b 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 581


 27103 122c 68       		.sleb128 -24
 27104 122d 25       		.uleb128 0x25
 27105 122e 6800     		.ascii	"h\000"
 27106 1230 01       		.byte	0x1
 27107 1231 E905     		.2byte	0x5e9
 27108 1233 A3000000 		.4byte	0xa3
 27109 1237 02       		.uleb128 0x2
 27110 1238 91       		.byte	0x91
 27111 1239 66       		.sleb128 -26
 27112 123a 22       		.uleb128 0x22
 27113 123b 8B040000 		.4byte	.LASF236
 27114 123f 01       		.byte	0x1
 27115 1240 EA05     		.2byte	0x5ea
 27116 1242 A3000000 		.4byte	0xa3
 27117 1246 02       		.uleb128 0x2
 27118 1247 91       		.byte	0x91
 27119 1248 5C       		.sleb128 -36
 27120 1249 22       		.uleb128 0x22
 27121 124a AB0B0000 		.4byte	.LASF237
 27122 124e 01       		.byte	0x1
 27123 124f ED05     		.2byte	0x5ed
 27124 1251 30010000 		.4byte	0x130
 27125 1255 03       		.uleb128 0x3
 27126 1256 91       		.byte	0x91
 27127 1257 C074     		.sleb128 -1472
 27128 1259 22       		.uleb128 0x22
 27129 125a 880E0000 		.4byte	.LASF238
 27130 125e 01       		.byte	0x1
 27131 125f EE05     		.2byte	0x5ee
 27132 1261 34130000 		.4byte	0x1334
 27133 1265 03       		.uleb128 0x3
 27134 1266 91       		.byte	0x91
 27135 1267 B474     		.sleb128 -1484
 27136 1269 22       		.uleb128 0x22
 27137 126a 15060000 		.4byte	.LASF239
 27138 126e 01       		.byte	0x1
 27139 126f EF05     		.2byte	0x5ef
 27140 1271 44130000 		.4byte	0x1344
 27141 1275 03       		.uleb128 0x3
 27142 1276 91       		.byte	0x91
 27143 1277 A074     		.sleb128 -1504
 27144 1279 22       		.uleb128 0x22
 27145 127a 09000000 		.4byte	.LASF240
 27146 127e 01       		.byte	0x1
 27147 127f F005     		.2byte	0x5f0
 27148 1281 54130000 		.4byte	0x1354
 27149 1285 03       		.uleb128 0x3
 27150 1286 91       		.byte	0x91
 27151 1287 9074     		.sleb128 -1520
 27152 1289 22       		.uleb128 0x22
 27153 128a 7E0C0000 		.4byte	.LASF241
 27154 128e 01       		.byte	0x1
 27155 128f F105     		.2byte	0x5f1
 27156 1291 64130000 		.4byte	0x1364
 27157 1295 03       		.uleb128 0x3
 27158 1296 91       		.byte	0x91
 27159 1297 E473     		.sleb128 -1564
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 582


 27160 1299 22       		.uleb128 0x22
 27161 129a 44040000 		.4byte	.LASF242
 27162 129e 01       		.byte	0x1
 27163 129f F205     		.2byte	0x5f2
 27164 12a1 30010000 		.4byte	0x130
 27165 12a5 03       		.uleb128 0x3
 27166 12a6 91       		.byte	0x91
 27167 12a7 C873     		.sleb128 -1592
 27168 12a9 22       		.uleb128 0x22
 27169 12aa 41010000 		.4byte	.LASF243
 27170 12ae 01       		.byte	0x1
 27171 12af F505     		.2byte	0x5f5
 27172 12b1 97000000 		.4byte	0x97
 27173 12b5 02       		.uleb128 0x2
 27174 12b6 91       		.byte	0x91
 27175 12b7 5B       		.sleb128 -37
 27176 12b8 22       		.uleb128 0x22
 27177 12b9 18040000 		.4byte	.LASF244
 27178 12bd 01       		.byte	0x1
 27179 12be F605     		.2byte	0x5f6
 27180 12c0 97000000 		.4byte	0x97
 27181 12c4 02       		.uleb128 0x2
 27182 12c5 91       		.byte	0x91
 27183 12c6 5A       		.sleb128 -38
 27184 12c7 22       		.uleb128 0x22
 27185 12c8 390E0000 		.4byte	.LASF245
 27186 12cc 01       		.byte	0x1
 27187 12cd F705     		.2byte	0x5f7
 27188 12cf 97000000 		.4byte	0x97
 27189 12d3 02       		.uleb128 0x2
 27190 12d4 91       		.byte	0x91
 27191 12d5 59       		.sleb128 -39
 27192 12d6 22       		.uleb128 0x22
 27193 12d7 AF0E0000 		.4byte	.LASF246
 27194 12db 01       		.byte	0x1
 27195 12dc F805     		.2byte	0x5f8
 27196 12de 97000000 		.4byte	0x97
 27197 12e2 02       		.uleb128 0x2
 27198 12e3 91       		.byte	0x91
 27199 12e4 58       		.sleb128 -40
 27200 12e5 22       		.uleb128 0x22
 27201 12e6 26040000 		.4byte	.LASF247
 27202 12ea 01       		.byte	0x1
 27203 12eb F905     		.2byte	0x5f9
 27204 12ed 97000000 		.4byte	0x97
 27205 12f1 02       		.uleb128 0x2
 27206 12f2 91       		.byte	0x91
 27207 12f3 57       		.sleb128 -41
 27208 12f4 22       		.uleb128 0x22
 27209 12f5 99000000 		.4byte	.LASF248
 27210 12f9 01       		.byte	0x1
 27211 12fa FA05     		.2byte	0x5fa
 27212 12fc 97000000 		.4byte	0x97
 27213 1300 02       		.uleb128 0x2
 27214 1301 91       		.byte	0x91
 27215 1302 65       		.sleb128 -27
 27216 1303 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 583


 27217 1304 25110000 		.4byte	.LASF222
 27218 1308 01       		.byte	0x1
 27219 1309 FC05     		.2byte	0x5fc
 27220 130b B2100000 		.4byte	0x10b2
 27221 130f 03       		.uleb128 0x3
 27222 1310 91       		.byte	0x91
 27223 1311 D072     		.sleb128 -1712
 27224 1313 22       		.uleb128 0x22
 27225 1314 E8020000 		.4byte	.LASF249
 27226 1318 01       		.byte	0x1
 27227 1319 FD05     		.2byte	0x5fd
 27228 131b 97000000 		.4byte	0x97
 27229 131f 02       		.uleb128 0x2
 27230 1320 91       		.byte	0x91
 27231 1321 56       		.sleb128 -42
 27232 1322 00       		.byte	0
 27233 1323 09       		.uleb128 0x9
 27234 1324 97000000 		.4byte	0x97
 27235 1328 34130000 		.4byte	0x1334
 27236 132c 23       		.uleb128 0x23
 27237 132d 18010000 		.4byte	0x118
 27238 1331 7805     		.2byte	0x578
 27239 1333 00       		.byte	0
 27240 1334 09       		.uleb128 0x9
 27241 1335 F9000000 		.4byte	0xf9
 27242 1339 44130000 		.4byte	0x1344
 27243 133d 0A       		.uleb128 0xa
 27244 133e 18010000 		.4byte	0x118
 27245 1342 0A       		.byte	0xa
 27246 1343 00       		.byte	0
 27247 1344 09       		.uleb128 0x9
 27248 1345 F9000000 		.4byte	0xf9
 27249 1349 54130000 		.4byte	0x1354
 27250 134d 0A       		.uleb128 0xa
 27251 134e 18010000 		.4byte	0x118
 27252 1352 13       		.byte	0x13
 27253 1353 00       		.byte	0
 27254 1354 09       		.uleb128 0x9
 27255 1355 F9000000 		.4byte	0xf9
 27256 1359 64130000 		.4byte	0x1364
 27257 135d 0A       		.uleb128 0xa
 27258 135e 18010000 		.4byte	0x118
 27259 1362 0F       		.byte	0xf
 27260 1363 00       		.byte	0
 27261 1364 09       		.uleb128 0x9
 27262 1365 F9000000 		.4byte	0xf9
 27263 1369 74130000 		.4byte	0x1374
 27264 136d 0A       		.uleb128 0xa
 27265 136e 18010000 		.4byte	0x118
 27266 1372 29       		.byte	0x29
 27267 1373 00       		.byte	0
 27268 1374 26       		.uleb128 0x26
 27269 1375 51020000 		.4byte	.LASF278
 27270 1379 01       		.byte	0x1
 27271 137a C306     		.2byte	0x6c3
 27272 137c 00000000 		.4byte	.LFB71
 27273 1380 88000000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 584


 27274 1384 01       		.uleb128 0x1
 27275 1385 9C       		.byte	0x9c
 27276 1386 A5130000 		.4byte	0x13a5
 27277 138a 25       		.uleb128 0x25
 27278 138b 6900     		.ascii	"i\000"
 27279 138d 01       		.byte	0x1
 27280 138e C506     		.2byte	0x6c5
 27281 1390 97000000 		.4byte	0x97
 27282 1394 02       		.uleb128 0x2
 27283 1395 91       		.byte	0x91
 27284 1396 6F       		.sleb128 -17
 27285 1397 25       		.uleb128 0x25
 27286 1398 6A00     		.ascii	"j\000"
 27287 139a 01       		.byte	0x1
 27288 139b C506     		.2byte	0x6c5
 27289 139d 97000000 		.4byte	0x97
 27290 13a1 02       		.uleb128 0x2
 27291 13a2 91       		.byte	0x91
 27292 13a3 6E       		.sleb128 -18
 27293 13a4 00       		.byte	0
 27294 13a5 21       		.uleb128 0x21
 27295 13a6 BE000000 		.4byte	.LASF250
 27296 13aa 01       		.byte	0x1
 27297 13ab D606     		.2byte	0x6d6
 27298 13ad 00000000 		.4byte	.LFB72
 27299 13b1 4C1E0000 		.4byte	.LFE72-.LFB72
 27300 13b5 01       		.uleb128 0x1
 27301 13b6 9C       		.byte	0x9c
 27302 13b7 5E140000 		.4byte	0x145e
 27303 13bb 24       		.uleb128 0x24
 27304 13bc B50B0000 		.4byte	.LASF251
 27305 13c0 01       		.byte	0x1
 27306 13c1 D606     		.2byte	0x6d6
 27307 13c3 1F010000 		.4byte	0x11f
 27308 13c7 03       		.uleb128 0x3
 27309 13c8 91       		.byte	0x91
 27310 13c9 D47E     		.sleb128 -172
 27311 13cb 25       		.uleb128 0x25
 27312 13cc 6900     		.ascii	"i\000"
 27313 13ce 01       		.byte	0x1
 27314 13cf D806     		.2byte	0x6d8
 27315 13d1 73000000 		.4byte	0x73
 27316 13d5 02       		.uleb128 0x2
 27317 13d6 91       		.byte	0x91
 27318 13d7 54       		.sleb128 -44
 27319 13d8 22       		.uleb128 0x22
 27320 13d9 89020000 		.4byte	.LASF221
 27321 13dd 01       		.byte	0x1
 27322 13de DA06     		.2byte	0x6da
 27323 13e0 7C100000 		.4byte	0x107c
 27324 13e4 02       		.uleb128 0x2
 27325 13e5 91       		.byte	0x91
 27326 13e6 48       		.sleb128 -56
 27327 13e7 1E       		.uleb128 0x1e
 27328 13e8 1C000000 		.4byte	.LBB16
 27329 13ec C81D0000 		.4byte	.LBE16-.LBB16
 27330 13f0 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 585


 27331 13f1 73747200 		.ascii	"str\000"
 27332 13f5 01       		.byte	0x1
 27333 13f6 DD06     		.2byte	0x6dd
 27334 13f8 5E140000 		.4byte	0x145e
 27335 13fc 03       		.uleb128 0x3
 27336 13fd 91       		.byte	0x91
 27337 13fe D87E     		.sleb128 -168
 27338 1400 25       		.uleb128 0x25
 27339 1401 6A00     		.ascii	"j\000"
 27340 1403 01       		.byte	0x1
 27341 1404 6A08     		.2byte	0x86a
 27342 1406 73000000 		.4byte	0x73
 27343 140a 02       		.uleb128 0x2
 27344 140b 91       		.byte	0x91
 27345 140c 4C       		.sleb128 -52
 27346 140d 1E       		.uleb128 0x1e
 27347 140e 4A020000 		.4byte	.LBB17
 27348 1412 98120000 		.4byte	.LBE17-.LBB17
 27349 1416 25       		.uleb128 0x25
 27350 1417 6B00     		.ascii	"k\000"
 27351 1419 01       		.byte	0x1
 27352 141a 0807     		.2byte	0x708
 27353 141c 97000000 		.4byte	0x97
 27354 1420 02       		.uleb128 0x2
 27355 1421 91       		.byte	0x91
 27356 1422 53       		.sleb128 -45
 27357 1423 1E       		.uleb128 0x1e
 27358 1424 54020000 		.4byte	.LBB18
 27359 1428 72120000 		.4byte	.LBE18-.LBB18
 27360 142c 22       		.uleb128 0x22
 27361 142d 960B0000 		.4byte	.LASF214
 27362 1431 01       		.byte	0x1
 27363 1432 0A07     		.2byte	0x70a
 27364 1434 97000000 		.4byte	0x97
 27365 1438 02       		.uleb128 0x2
 27366 1439 91       		.byte	0x91
 27367 143a 47       		.sleb128 -57
 27368 143b 25       		.uleb128 0x25
 27369 143c 4D4F5400 		.ascii	"MOT\000"
 27370 1440 01       		.byte	0x1
 27371 1441 0B07     		.2byte	0x70b
 27372 1443 6E140000 		.4byte	0x146e
 27373 1447 02       		.uleb128 0x2
 27374 1448 91       		.byte	0x91
 27375 1449 40       		.sleb128 -64
 27376 144a 22       		.uleb128 0x22
 27377 144b A2100000 		.4byte	.LASF252
 27378 144f 01       		.byte	0x1
 27379 1450 0C07     		.2byte	0x70c
 27380 1452 97000000 		.4byte	0x97
 27381 1456 03       		.uleb128 0x3
 27382 1457 91       		.byte	0x91
 27383 1458 BF7F     		.sleb128 -65
 27384 145a 00       		.byte	0
 27385 145b 00       		.byte	0
 27386 145c 00       		.byte	0
 27387 145d 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 586


 27388 145e 09       		.uleb128 0x9
 27389 145f F9000000 		.4byte	0xf9
 27390 1463 6E140000 		.4byte	0x146e
 27391 1467 0A       		.uleb128 0xa
 27392 1468 18010000 		.4byte	0x118
 27393 146c 63       		.byte	0x63
 27394 146d 00       		.byte	0
 27395 146e 07       		.uleb128 0x7
 27396 146f 04       		.byte	0x4
 27397 1470 8E050000 		.4byte	0x58e
 27398 1474 21       		.uleb128 0x21
 27399 1475 020D0000 		.4byte	.LASF253
 27400 1479 01       		.byte	0x1
 27401 147a 8A08     		.2byte	0x88a
 27402 147c 00000000 		.4byte	.LFB73
 27403 1480 B4030000 		.4byte	.LFE73-.LFB73
 27404 1484 01       		.uleb128 0x1
 27405 1485 9C       		.byte	0x9c
 27406 1486 F4140000 		.4byte	0x14f4
 27407 148a 24       		.uleb128 0x24
 27408 148b B50B0000 		.4byte	.LASF251
 27409 148f 01       		.byte	0x1
 27410 1490 8A08     		.2byte	0x88a
 27411 1492 1F010000 		.4byte	0x11f
 27412 1496 03       		.uleb128 0x3
 27413 1497 91       		.byte	0x91
 27414 1498 EC7E     		.sleb128 -148
 27415 149a 25       		.uleb128 0x25
 27416 149b 73747200 		.ascii	"str\000"
 27417 149f 01       		.byte	0x1
 27418 14a0 8C08     		.2byte	0x88c
 27419 14a2 5E140000 		.4byte	0x145e
 27420 14a6 03       		.uleb128 0x3
 27421 14a7 91       		.byte	0x91
 27422 14a8 F07E     		.sleb128 -144
 27423 14aa 25       		.uleb128 0x25
 27424 14ab 6900     		.ascii	"i\000"
 27425 14ad 01       		.byte	0x1
 27426 14ae 8D08     		.2byte	0x88d
 27427 14b0 73000000 		.4byte	0x73
 27428 14b4 02       		.uleb128 0x2
 27429 14b5 91       		.byte	0x91
 27430 14b6 64       		.sleb128 -28
 27431 14b7 22       		.uleb128 0x22
 27432 14b8 65030000 		.4byte	.LASF254
 27433 14bc 01       		.byte	0x1
 27434 14bd 8E08     		.2byte	0x88e
 27435 14bf 73000000 		.4byte	0x73
 27436 14c3 02       		.uleb128 0x2
 27437 14c4 91       		.byte	0x91
 27438 14c5 54       		.sleb128 -44
 27439 14c6 22       		.uleb128 0x22
 27440 14c7 89020000 		.4byte	.LASF221
 27441 14cb 01       		.byte	0x1
 27442 14cc 9008     		.2byte	0x890
 27443 14ce 7C100000 		.4byte	0x107c
 27444 14d2 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 587


 27445 14d3 91       		.byte	0x91
 27446 14d4 60       		.sleb128 -32
 27447 14d5 25       		.uleb128 0x25
 27448 14d6 4D4F5400 		.ascii	"MOT\000"
 27449 14da 01       		.byte	0x1
 27450 14db 9108     		.2byte	0x891
 27451 14dd 6E140000 		.4byte	0x146e
 27452 14e1 02       		.uleb128 0x2
 27453 14e2 91       		.byte	0x91
 27454 14e3 5C       		.sleb128 -36
 27455 14e4 22       		.uleb128 0x22
 27456 14e5 A2100000 		.4byte	.LASF252
 27457 14e9 01       		.byte	0x1
 27458 14ea 9208     		.2byte	0x892
 27459 14ec 97000000 		.4byte	0x97
 27460 14f0 02       		.uleb128 0x2
 27461 14f1 91       		.byte	0x91
 27462 14f2 5B       		.sleb128 -37
 27463 14f3 00       		.byte	0
 27464 14f4 21       		.uleb128 0x21
 27465 14f5 EC0C0000 		.4byte	.LASF255
 27466 14f9 01       		.byte	0x1
 27467 14fa CC08     		.2byte	0x8cc
 27468 14fc 00000000 		.4byte	.LFB74
 27469 1500 E8110000 		.4byte	.LFE74-.LFB74
 27470 1504 01       		.uleb128 0x1
 27471 1505 9C       		.byte	0x9c
 27472 1506 95150000 		.4byte	0x1595
 27473 150a 24       		.uleb128 0x24
 27474 150b B50B0000 		.4byte	.LASF251
 27475 150f 01       		.byte	0x1
 27476 1510 CC08     		.2byte	0x8cc
 27477 1512 1F010000 		.4byte	0x11f
 27478 1516 03       		.uleb128 0x3
 27479 1517 91       		.byte	0x91
 27480 1518 D47E     		.sleb128 -172
 27481 151a 25       		.uleb128 0x25
 27482 151b 73747200 		.ascii	"str\000"
 27483 151f 01       		.byte	0x1
 27484 1520 CE08     		.2byte	0x8ce
 27485 1522 5E140000 		.4byte	0x145e
 27486 1526 03       		.uleb128 0x3
 27487 1527 91       		.byte	0x91
 27488 1528 DC7E     		.sleb128 -164
 27489 152a 25       		.uleb128 0x25
 27490 152b 6900     		.ascii	"i\000"
 27491 152d 01       		.byte	0x1
 27492 152e CF08     		.2byte	0x8cf
 27493 1530 73000000 		.4byte	0x73
 27494 1534 02       		.uleb128 0x2
 27495 1535 91       		.byte	0x91
 27496 1536 54       		.sleb128 -44
 27497 1537 22       		.uleb128 0x22
 27498 1538 89020000 		.4byte	.LASF221
 27499 153c 01       		.byte	0x1
 27500 153d D308     		.2byte	0x8d3
 27501 153f 7C100000 		.4byte	0x107c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 588


 27502 1543 02       		.uleb128 0x2
 27503 1544 91       		.byte	0x91
 27504 1545 4C       		.sleb128 -52
 27505 1546 1E       		.uleb128 0x1e
 27506 1547 08010000 		.4byte	.LBB19
 27507 154b 3E0C0000 		.4byte	.LBE19-.LBB19
 27508 154f 25       		.uleb128 0x25
 27509 1550 6B00     		.ascii	"k\000"
 27510 1552 01       		.byte	0x1
 27511 1553 E808     		.2byte	0x8e8
 27512 1555 97000000 		.4byte	0x97
 27513 1559 02       		.uleb128 0x2
 27514 155a 91       		.byte	0x91
 27515 155b 53       		.sleb128 -45
 27516 155c 1E       		.uleb128 0x1e
 27517 155d 12010000 		.4byte	.LBB20
 27518 1561 180C0000 		.4byte	.LBE20-.LBB20
 27519 1565 22       		.uleb128 0x22
 27520 1566 960B0000 		.4byte	.LASF214
 27521 156a 01       		.byte	0x1
 27522 156b EA08     		.2byte	0x8ea
 27523 156d 97000000 		.4byte	0x97
 27524 1571 02       		.uleb128 0x2
 27525 1572 91       		.byte	0x91
 27526 1573 4B       		.sleb128 -53
 27527 1574 25       		.uleb128 0x25
 27528 1575 4D4F5400 		.ascii	"MOT\000"
 27529 1579 01       		.byte	0x1
 27530 157a EB08     		.2byte	0x8eb
 27531 157c 6E140000 		.4byte	0x146e
 27532 1580 02       		.uleb128 0x2
 27533 1581 91       		.byte	0x91
 27534 1582 44       		.sleb128 -60
 27535 1583 22       		.uleb128 0x22
 27536 1584 A2100000 		.4byte	.LASF252
 27537 1588 01       		.byte	0x1
 27538 1589 EC08     		.2byte	0x8ec
 27539 158b 97000000 		.4byte	0x97
 27540 158f 02       		.uleb128 0x2
 27541 1590 91       		.byte	0x91
 27542 1591 43       		.sleb128 -61
 27543 1592 00       		.byte	0
 27544 1593 00       		.byte	0
 27545 1594 00       		.byte	0
 27546 1595 21       		.uleb128 0x21
 27547 1596 85090000 		.4byte	.LASF256
 27548 159a 01       		.byte	0x1
 27549 159b CD09     		.2byte	0x9cd
 27550 159d 00000000 		.4byte	.LFB75
 27551 15a1 C8000000 		.4byte	.LFE75-.LFB75
 27552 15a5 01       		.uleb128 0x1
 27553 15a6 9C       		.byte	0x9c
 27554 15a7 D9150000 		.4byte	0x15d9
 27555 15ab 24       		.uleb128 0x24
 27556 15ac B50B0000 		.4byte	.LASF251
 27557 15b0 01       		.byte	0x1
 27558 15b1 CD09     		.2byte	0x9cd
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 589


 27559 15b3 1F010000 		.4byte	0x11f
 27560 15b7 03       		.uleb128 0x3
 27561 15b8 91       		.byte	0x91
 27562 15b9 847F     		.sleb128 -124
 27563 15bb 25       		.uleb128 0x25
 27564 15bc 73747200 		.ascii	"str\000"
 27565 15c0 01       		.byte	0x1
 27566 15c1 CF09     		.2byte	0x9cf
 27567 15c3 5E140000 		.4byte	0x145e
 27568 15c7 03       		.uleb128 0x3
 27569 15c8 91       		.byte	0x91
 27570 15c9 887F     		.sleb128 -120
 27571 15cb 25       		.uleb128 0x25
 27572 15cc 6900     		.ascii	"i\000"
 27573 15ce 01       		.byte	0x1
 27574 15cf D009     		.2byte	0x9d0
 27575 15d1 73000000 		.4byte	0x73
 27576 15d5 02       		.uleb128 0x2
 27577 15d6 91       		.byte	0x91
 27578 15d7 6C       		.sleb128 -20
 27579 15d8 00       		.byte	0
 27580 15d9 21       		.uleb128 0x21
 27581 15da C10B0000 		.4byte	.LASF257
 27582 15de 01       		.byte	0x1
 27583 15df E409     		.2byte	0x9e4
 27584 15e1 00000000 		.4byte	.LFB76
 27585 15e5 30010000 		.4byte	.LFE76-.LFB76
 27586 15e9 01       		.uleb128 0x1
 27587 15ea 9C       		.byte	0x9c
 27588 15eb 1D160000 		.4byte	0x161d
 27589 15ef 24       		.uleb128 0x24
 27590 15f0 B50B0000 		.4byte	.LASF251
 27591 15f4 01       		.byte	0x1
 27592 15f5 E409     		.2byte	0x9e4
 27593 15f7 1F010000 		.4byte	0x11f
 27594 15fb 03       		.uleb128 0x3
 27595 15fc 91       		.byte	0x91
 27596 15fd 847F     		.sleb128 -124
 27597 15ff 25       		.uleb128 0x25
 27598 1600 73747200 		.ascii	"str\000"
 27599 1604 01       		.byte	0x1
 27600 1605 E609     		.2byte	0x9e6
 27601 1607 5E140000 		.4byte	0x145e
 27602 160b 03       		.uleb128 0x3
 27603 160c 91       		.byte	0x91
 27604 160d 887F     		.sleb128 -120
 27605 160f 25       		.uleb128 0x25
 27606 1610 6900     		.ascii	"i\000"
 27607 1612 01       		.byte	0x1
 27608 1613 E709     		.2byte	0x9e7
 27609 1615 73000000 		.4byte	0x73
 27610 1619 02       		.uleb128 0x2
 27611 161a 91       		.byte	0x91
 27612 161b 6C       		.sleb128 -20
 27613 161c 00       		.byte	0
 27614 161d 21       		.uleb128 0x21
 27615 161e 9F110000 		.4byte	.LASF258
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 590


 27616 1622 01       		.byte	0x1
 27617 1623 0B0A     		.2byte	0xa0b
 27618 1625 00000000 		.4byte	.LFB77
 27619 1629 74030000 		.4byte	.LFE77-.LFB77
 27620 162d 01       		.uleb128 0x1
 27621 162e 9C       		.byte	0x9c
 27622 162f 61160000 		.4byte	0x1661
 27623 1633 24       		.uleb128 0x24
 27624 1634 B50B0000 		.4byte	.LASF251
 27625 1638 01       		.byte	0x1
 27626 1639 0B0A     		.2byte	0xa0b
 27627 163b 1F010000 		.4byte	0x11f
 27628 163f 03       		.uleb128 0x3
 27629 1640 91       		.byte	0x91
 27630 1641 AC7D     		.sleb128 -340
 27631 1643 25       		.uleb128 0x25
 27632 1644 73747200 		.ascii	"str\000"
 27633 1648 01       		.byte	0x1
 27634 1649 0D0A     		.2byte	0xa0d
 27635 164b 61160000 		.4byte	0x1661
 27636 164f 03       		.uleb128 0x3
 27637 1650 91       		.byte	0x91
 27638 1651 B07D     		.sleb128 -336
 27639 1653 25       		.uleb128 0x25
 27640 1654 6900     		.ascii	"i\000"
 27641 1656 01       		.byte	0x1
 27642 1657 0E0A     		.2byte	0xa0e
 27643 1659 73000000 		.4byte	0x73
 27644 165d 02       		.uleb128 0x2
 27645 165e 91       		.byte	0x91
 27646 165f 5C       		.sleb128 -36
 27647 1660 00       		.byte	0
 27648 1661 09       		.uleb128 0x9
 27649 1662 F9000000 		.4byte	0xf9
 27650 1666 72160000 		.4byte	0x1672
 27651 166a 23       		.uleb128 0x23
 27652 166b 18010000 		.4byte	0x118
 27653 166f 2B01     		.2byte	0x12b
 27654 1671 00       		.byte	0
 27655 1672 21       		.uleb128 0x21
 27656 1673 B60C0000 		.4byte	.LASF259
 27657 1677 01       		.byte	0x1
 27658 1678 360A     		.2byte	0xa36
 27659 167a 00000000 		.4byte	.LFB78
 27660 167e 84000000 		.4byte	.LFE78-.LFB78
 27661 1682 01       		.uleb128 0x1
 27662 1683 9C       		.byte	0x9c
 27663 1684 C5160000 		.4byte	0x16c5
 27664 1688 24       		.uleb128 0x24
 27665 1689 13050000 		.4byte	.LASF204
 27666 168d 01       		.byte	0x1
 27667 168e 360A     		.2byte	0xa36
 27668 1690 810E0000 		.4byte	0xe81
 27669 1694 02       		.uleb128 0x2
 27670 1695 91       		.byte	0x91
 27671 1696 6C       		.sleb128 -20
 27672 1697 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 591


 27673 1698 B0000000 		.4byte	.LASF205
 27674 169c 01       		.byte	0x1
 27675 169d 360A     		.2byte	0xa36
 27676 169f A3000000 		.4byte	0xa3
 27677 16a3 02       		.uleb128 0x2
 27678 16a4 91       		.byte	0x91
 27679 16a5 6A       		.sleb128 -22
 27680 16a6 24       		.uleb128 0x24
 27681 16a7 170D0000 		.4byte	.LASF260
 27682 16ab 01       		.byte	0x1
 27683 16ac 360A     		.2byte	0xa36
 27684 16ae 97000000 		.4byte	0x97
 27685 16b2 02       		.uleb128 0x2
 27686 16b3 91       		.byte	0x91
 27687 16b4 69       		.sleb128 -23
 27688 16b5 22       		.uleb128 0x22
 27689 16b6 ED050000 		.4byte	.LASF219
 27690 16ba 01       		.byte	0x1
 27691 16bb 380A     		.2byte	0xa38
 27692 16bd A3000000 		.4byte	0xa3
 27693 16c1 02       		.uleb128 0x2
 27694 16c2 91       		.byte	0x91
 27695 16c3 76       		.sleb128 -10
 27696 16c4 00       		.byte	0
 27697 16c5 21       		.uleb128 0x21
 27698 16c6 2E050000 		.4byte	.LASF261
 27699 16ca 01       		.byte	0x1
 27700 16cb 520A     		.2byte	0xa52
 27701 16cd 00000000 		.4byte	.LFB79
 27702 16d1 88000000 		.4byte	.LFE79-.LFB79
 27703 16d5 01       		.uleb128 0x1
 27704 16d6 9C       		.byte	0x9c
 27705 16d7 09170000 		.4byte	0x1709
 27706 16db 24       		.uleb128 0x24
 27707 16dc 13050000 		.4byte	.LASF204
 27708 16e0 01       		.byte	0x1
 27709 16e1 520A     		.2byte	0xa52
 27710 16e3 810E0000 		.4byte	0xe81
 27711 16e7 02       		.uleb128 0x2
 27712 16e8 91       		.byte	0x91
 27713 16e9 6C       		.sleb128 -20
 27714 16ea 24       		.uleb128 0x24
 27715 16eb B0000000 		.4byte	.LASF205
 27716 16ef 01       		.byte	0x1
 27717 16f0 520A     		.2byte	0xa52
 27718 16f2 A3000000 		.4byte	0xa3
 27719 16f6 02       		.uleb128 0x2
 27720 16f7 91       		.byte	0x91
 27721 16f8 6A       		.sleb128 -22
 27722 16f9 22       		.uleb128 0x22
 27723 16fa ED050000 		.4byte	.LASF219
 27724 16fe 01       		.byte	0x1
 27725 16ff 540A     		.2byte	0xa54
 27726 1701 A3000000 		.4byte	0xa3
 27727 1705 02       		.uleb128 0x2
 27728 1706 91       		.byte	0x91
 27729 1707 76       		.sleb128 -10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 592


 27730 1708 00       		.byte	0
 27731 1709 21       		.uleb128 0x21
 27732 170a 1D0A0000 		.4byte	.LASF262
 27733 170e 01       		.byte	0x1
 27734 170f 6A0A     		.2byte	0xa6a
 27735 1711 00000000 		.4byte	.LFB80
 27736 1715 80000000 		.4byte	.LFE80-.LFB80
 27737 1719 01       		.uleb128 0x1
 27738 171a 9C       		.byte	0x9c
 27739 171b 4D170000 		.4byte	0x174d
 27740 171f 24       		.uleb128 0x24
 27741 1720 13050000 		.4byte	.LASF204
 27742 1724 01       		.byte	0x1
 27743 1725 6A0A     		.2byte	0xa6a
 27744 1727 810E0000 		.4byte	0xe81
 27745 172b 02       		.uleb128 0x2
 27746 172c 91       		.byte	0x91
 27747 172d 6C       		.sleb128 -20
 27748 172e 24       		.uleb128 0x24
 27749 172f B0000000 		.4byte	.LASF205
 27750 1733 01       		.byte	0x1
 27751 1734 6A0A     		.2byte	0xa6a
 27752 1736 A3000000 		.4byte	0xa3
 27753 173a 02       		.uleb128 0x2
 27754 173b 91       		.byte	0x91
 27755 173c 6A       		.sleb128 -22
 27756 173d 22       		.uleb128 0x22
 27757 173e ED050000 		.4byte	.LASF219
 27758 1742 01       		.byte	0x1
 27759 1743 6C0A     		.2byte	0xa6c
 27760 1745 A3000000 		.4byte	0xa3
 27761 1749 02       		.uleb128 0x2
 27762 174a 91       		.byte	0x91
 27763 174b 76       		.sleb128 -10
 27764 174c 00       		.byte	0
 27765 174d 27       		.uleb128 0x27
 27766 174e 72100000 		.4byte	.LASF268
 27767 1752 01       		.byte	0x1
 27768 1753 850A     		.2byte	0xa85
 27769 1755 97000000 		.4byte	0x97
 27770 1759 00000000 		.4byte	.LFB81
 27771 175d 3E000000 		.4byte	.LFE81-.LFB81
 27772 1761 01       		.uleb128 0x1
 27773 1762 9C       		.byte	0x9c
 27774 1763 A2170000 		.4byte	0x17a2
 27775 1767 24       		.uleb128 0x24
 27776 1768 5A090000 		.4byte	.LASF263
 27777 176c 01       		.byte	0x1
 27778 176d 850A     		.2byte	0xa85
 27779 176f 810E0000 		.4byte	0xe81
 27780 1773 02       		.uleb128 0x2
 27781 1774 91       		.byte	0x91
 27782 1775 6C       		.sleb128 -20
 27783 1776 24       		.uleb128 0x24
 27784 1777 E8040000 		.4byte	.LASF264
 27785 177b 01       		.byte	0x1
 27786 177c 850A     		.2byte	0xa85
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 593


 27787 177e 97000000 		.4byte	0x97
 27788 1782 02       		.uleb128 0x2
 27789 1783 91       		.byte	0x91
 27790 1784 6B       		.sleb128 -21
 27791 1785 25       		.uleb128 0x25
 27792 1786 6900     		.ascii	"i\000"
 27793 1788 01       		.byte	0x1
 27794 1789 870A     		.2byte	0xa87
 27795 178b 97000000 		.4byte	0x97
 27796 178f 02       		.uleb128 0x2
 27797 1790 91       		.byte	0x91
 27798 1791 77       		.sleb128 -9
 27799 1792 22       		.uleb128 0x22
 27800 1793 210B0000 		.4byte	.LASF265
 27801 1797 01       		.byte	0x1
 27802 1798 880A     		.2byte	0xa88
 27803 179a 97000000 		.4byte	0x97
 27804 179e 02       		.uleb128 0x2
 27805 179f 91       		.byte	0x91
 27806 17a0 76       		.sleb128 -10
 27807 17a1 00       		.byte	0
 27808 17a2 21       		.uleb128 0x21
 27809 17a3 72090000 		.4byte	.LASF266
 27810 17a7 01       		.byte	0x1
 27811 17a8 950A     		.2byte	0xa95
 27812 17aa 00000000 		.4byte	.LFB82
 27813 17ae 2E000000 		.4byte	.LFE82-.LFB82
 27814 17b2 01       		.uleb128 0x1
 27815 17b3 9C       		.byte	0x9c
 27816 17b4 E6170000 		.4byte	0x17e6
 27817 17b8 24       		.uleb128 0x24
 27818 17b9 38040000 		.4byte	.LASF267
 27819 17bd 01       		.byte	0x1
 27820 17be 950A     		.2byte	0xa95
 27821 17c0 97000000 		.4byte	0x97
 27822 17c4 02       		.uleb128 0x2
 27823 17c5 91       		.byte	0x91
 27824 17c6 6F       		.sleb128 -17
 27825 17c7 22       		.uleb128 0x22
 27826 17c8 B0000000 		.4byte	.LASF205
 27827 17cc 01       		.byte	0x1
 27828 17cd 960A     		.2byte	0xa96
 27829 17cf 73000000 		.4byte	0x73
 27830 17d3 02       		.uleb128 0x2
 27831 17d4 91       		.byte	0x91
 27832 17d5 74       		.sleb128 -12
 27833 17d6 22       		.uleb128 0x22
 27834 17d7 13050000 		.4byte	.LASF204
 27835 17db 01       		.byte	0x1
 27836 17dc 970A     		.2byte	0xa97
 27837 17de E6170000 		.4byte	0x17e6
 27838 17e2 02       		.uleb128 0x2
 27839 17e3 91       		.byte	0x91
 27840 17e4 70       		.sleb128 -16
 27841 17e5 00       		.byte	0
 27842 17e6 09       		.uleb128 0x9
 27843 17e7 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 594


 27844 17eb F6170000 		.4byte	0x17f6
 27845 17ef 0A       		.uleb128 0xa
 27846 17f0 18010000 		.4byte	0x118
 27847 17f4 01       		.byte	0x1
 27848 17f5 00       		.byte	0
 27849 17f6 28       		.uleb128 0x28
 27850 17f7 32030000 		.4byte	.LASF269
 27851 17fb 01       		.byte	0x1
 27852 17fc A40A     		.2byte	0xaa4
 27853 17fe 97000000 		.4byte	0x97
 27854 1802 00000000 		.4byte	.LFB83
 27855 1806 98000000 		.4byte	.LFE83-.LFB83
 27856 180a 01       		.uleb128 0x1
 27857 180b 9C       		.byte	0x9c
 27858 180c 5A180000 		.4byte	0x185a
 27859 1810 24       		.uleb128 0x24
 27860 1811 DB040000 		.4byte	.LASF270
 27861 1815 01       		.byte	0x1
 27862 1816 A40A     		.2byte	0xaa4
 27863 1818 73000000 		.4byte	0x73
 27864 181c 02       		.uleb128 0x2
 27865 181d 91       		.byte	0x91
 27866 181e 64       		.sleb128 -28
 27867 181f 25       		.uleb128 0x25
 27868 1820 6900     		.ascii	"i\000"
 27869 1822 01       		.byte	0x1
 27870 1823 A60A     		.2byte	0xaa6
 27871 1825 73000000 		.4byte	0x73
 27872 1829 02       		.uleb128 0x2
 27873 182a 91       		.byte	0x91
 27874 182b 74       		.sleb128 -12
 27875 182c 22       		.uleb128 0x22
 27876 182d 75000000 		.4byte	.LASF271
 27877 1831 01       		.byte	0x1
 27878 1832 A70A     		.2byte	0xaa7
 27879 1834 97000000 		.4byte	0x97
 27880 1838 02       		.uleb128 0x2
 27881 1839 91       		.byte	0x91
 27882 183a 6B       		.sleb128 -21
 27883 183b 22       		.uleb128 0x22
 27884 183c 38050000 		.4byte	.LASF272
 27885 1840 01       		.byte	0x1
 27886 1841 A80A     		.2byte	0xaa8
 27887 1843 73000000 		.4byte	0x73
 27888 1847 02       		.uleb128 0x2
 27889 1848 91       		.byte	0x91
 27890 1849 6C       		.sleb128 -20
 27891 184a 22       		.uleb128 0x22
 27892 184b 7A040000 		.4byte	.LASF273
 27893 184f 01       		.byte	0x1
 27894 1850 A90A     		.2byte	0xaa9
 27895 1852 97000000 		.4byte	0x97
 27896 1856 02       		.uleb128 0x2
 27897 1857 91       		.byte	0x91
 27898 1858 73       		.sleb128 -13
 27899 1859 00       		.byte	0
 27900 185a 21       		.uleb128 0x21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 595


 27901 185b 500C0000 		.4byte	.LASF274
 27902 185f 01       		.byte	0x1
 27903 1860 CE0A     		.2byte	0xace
 27904 1862 00000000 		.4byte	.LFB84
 27905 1866 80000000 		.4byte	.LFE84-.LFB84
 27906 186a 01       		.uleb128 0x1
 27907 186b 9C       		.byte	0x9c
 27908 186c 7E180000 		.4byte	0x187e
 27909 1870 25       		.uleb128 0x25
 27910 1871 6900     		.ascii	"i\000"
 27911 1873 01       		.byte	0x1
 27912 1874 D00A     		.2byte	0xad0
 27913 1876 A3000000 		.4byte	0xa3
 27914 187a 02       		.uleb128 0x2
 27915 187b 91       		.byte	0x91
 27916 187c 76       		.sleb128 -10
 27917 187d 00       		.byte	0
 27918 187e 28       		.uleb128 0x28
 27919 187f A00B0000 		.4byte	.LASF275
 27920 1883 01       		.byte	0x1
 27921 1884 E70A     		.2byte	0xae7
 27922 1886 97000000 		.4byte	0x97
 27923 188a 00000000 		.4byte	.LFB85
 27924 188e 5C000000 		.4byte	.LFE85-.LFB85
 27925 1892 01       		.uleb128 0x1
 27926 1893 9C       		.byte	0x9c
 27927 1894 A6180000 		.4byte	0x18a6
 27928 1898 25       		.uleb128 0x25
 27929 1899 6900     		.ascii	"i\000"
 27930 189b 01       		.byte	0x1
 27931 189c E80A     		.2byte	0xae8
 27932 189e A3000000 		.4byte	0xa3
 27933 18a2 02       		.uleb128 0x2
 27934 18a3 91       		.byte	0x91
 27935 18a4 76       		.sleb128 -10
 27936 18a5 00       		.byte	0
 27937 18a6 28       		.uleb128 0x28
 27938 18a7 3E050000 		.4byte	.LASF276
 27939 18ab 01       		.byte	0x1
 27940 18ac FA0A     		.2byte	0xafa
 27941 18ae 97000000 		.4byte	0x97
 27942 18b2 00000000 		.4byte	.LFB86
 27943 18b6 CC050000 		.4byte	.LFE86-.LFB86
 27944 18ba 01       		.uleb128 0x1
 27945 18bb 9C       		.byte	0x9c
 27946 18bc DB180000 		.4byte	0x18db
 27947 18c0 25       		.uleb128 0x25
 27948 18c1 6900     		.ascii	"i\000"
 27949 18c3 01       		.byte	0x1
 27950 18c4 FC0A     		.2byte	0xafc
 27951 18c6 97000000 		.4byte	0x97
 27952 18ca 02       		.uleb128 0x2
 27953 18cb 91       		.byte	0x91
 27954 18cc 77       		.sleb128 -9
 27955 18cd 25       		.uleb128 0x25
 27956 18ce 6A00     		.ascii	"j\000"
 27957 18d0 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 596


 27958 18d1 FC0A     		.2byte	0xafc
 27959 18d3 97000000 		.4byte	0x97
 27960 18d7 02       		.uleb128 0x2
 27961 18d8 91       		.byte	0x91
 27962 18d9 76       		.sleb128 -10
 27963 18da 00       		.byte	0
 27964 18db 29       		.uleb128 0x29
 27965 18dc 49070000 		.4byte	.LASF277
 27966 18e0 01       		.byte	0x1
 27967 18e1 7F0B     		.2byte	0xb7f
 27968 18e3 00000000 		.4byte	.LFB87
 27969 18e7 30020000 		.4byte	.LFE87-.LFB87
 27970 18eb 01       		.uleb128 0x1
 27971 18ec 9C       		.byte	0x9c
 27972 18ed 18190000 		.4byte	0x1918
 27973 18f1 22       		.uleb128 0x22
 27974 18f2 960B0000 		.4byte	.LASF214
 27975 18f6 01       		.byte	0x1
 27976 18f7 810B     		.2byte	0xb81
 27977 18f9 97000000 		.4byte	0x97
 27978 18fd 02       		.uleb128 0x2
 27979 18fe 91       		.byte	0x91
 27980 18ff 73       		.sleb128 -13
 27981 1900 1E       		.uleb128 0x1e
 27982 1901 FA000000 		.4byte	.LBB21
 27983 1905 6A000000 		.4byte	.LBE21-.LBB21
 27984 1909 25       		.uleb128 0x25
 27985 190a 6900     		.ascii	"i\000"
 27986 190c 01       		.byte	0x1
 27987 190d 920B     		.2byte	0xb92
 27988 190f 73000000 		.4byte	0x73
 27989 1913 02       		.uleb128 0x2
 27990 1914 91       		.byte	0x91
 27991 1915 74       		.sleb128 -12
 27992 1916 00       		.byte	0
 27993 1917 00       		.byte	0
 27994 1918 26       		.uleb128 0x26
 27995 1919 6C050000 		.4byte	.LASF279
 27996 191d 01       		.byte	0x1
 27997 191e B40B     		.2byte	0xbb4
 27998 1920 00000000 		.4byte	.LFB88
 27999 1924 B4000000 		.4byte	.LFE88-.LFB88
 28000 1928 01       		.uleb128 0x1
 28001 1929 9C       		.byte	0x9c
 28002 192a 5C190000 		.4byte	0x195c
 28003 192e 22       		.uleb128 0x22
 28004 192f ED050000 		.4byte	.LASF219
 28005 1933 01       		.byte	0x1
 28006 1934 B60B     		.2byte	0xbb6
 28007 1936 97000000 		.4byte	0x97
 28008 193a 02       		.uleb128 0x2
 28009 193b 91       		.byte	0x91
 28010 193c 6F       		.sleb128 -17
 28011 193d 22       		.uleb128 0x22
 28012 193e D40E0000 		.4byte	.LASF210
 28013 1942 01       		.byte	0x1
 28014 1943 B70B     		.2byte	0xbb7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 597


 28015 1945 C7000000 		.4byte	0xc7
 28016 1949 02       		.uleb128 0x2
 28017 194a 91       		.byte	0x91
 28018 194b 6C       		.sleb128 -20
 28019 194c 22       		.uleb128 0x22
 28020 194d 13050000 		.4byte	.LASF204
 28021 1951 01       		.byte	0x1
 28022 1952 BA0B     		.2byte	0xbba
 28023 1954 CB070000 		.4byte	0x7cb
 28024 1958 02       		.uleb128 0x2
 28025 1959 91       		.byte	0x91
 28026 195a 64       		.sleb128 -28
 28027 195b 00       		.byte	0
 28028 195c 26       		.uleb128 0x26
 28029 195d 3D0C0000 		.4byte	.LASF280
 28030 1961 01       		.byte	0x1
 28031 1962 CD0B     		.2byte	0xbcd
 28032 1964 00000000 		.4byte	.LFB89
 28033 1968 B4000000 		.4byte	.LFE89-.LFB89
 28034 196c 01       		.uleb128 0x1
 28035 196d 9C       		.byte	0x9c
 28036 196e A0190000 		.4byte	0x19a0
 28037 1972 22       		.uleb128 0x22
 28038 1973 ED050000 		.4byte	.LASF219
 28039 1977 01       		.byte	0x1
 28040 1978 CF0B     		.2byte	0xbcf
 28041 197a 97000000 		.4byte	0x97
 28042 197e 02       		.uleb128 0x2
 28043 197f 91       		.byte	0x91
 28044 1980 6F       		.sleb128 -17
 28045 1981 22       		.uleb128 0x22
 28046 1982 D40E0000 		.4byte	.LASF210
 28047 1986 01       		.byte	0x1
 28048 1987 D00B     		.2byte	0xbd0
 28049 1989 C7000000 		.4byte	0xc7
 28050 198d 02       		.uleb128 0x2
 28051 198e 91       		.byte	0x91
 28052 198f 6C       		.sleb128 -20
 28053 1990 22       		.uleb128 0x22
 28054 1991 13050000 		.4byte	.LASF204
 28055 1995 01       		.byte	0x1
 28056 1996 D40B     		.2byte	0xbd4
 28057 1998 CB070000 		.4byte	0x7cb
 28058 199c 02       		.uleb128 0x2
 28059 199d 91       		.byte	0x91
 28060 199e 64       		.sleb128 -28
 28061 199f 00       		.byte	0
 28062 19a0 26       		.uleb128 0x26
 28063 19a1 A7060000 		.4byte	.LASF281
 28064 19a5 01       		.byte	0x1
 28065 19a6 E60B     		.2byte	0xbe6
 28066 19a8 00000000 		.4byte	.LFB90
 28067 19ac B8000000 		.4byte	.LFE90-.LFB90
 28068 19b0 01       		.uleb128 0x1
 28069 19b1 9C       		.byte	0x9c
 28070 19b2 E4190000 		.4byte	0x19e4
 28071 19b6 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 598


 28072 19b7 ED050000 		.4byte	.LASF219
 28073 19bb 01       		.byte	0x1
 28074 19bc E80B     		.2byte	0xbe8
 28075 19be 97000000 		.4byte	0x97
 28076 19c2 02       		.uleb128 0x2
 28077 19c3 91       		.byte	0x91
 28078 19c4 6F       		.sleb128 -17
 28079 19c5 22       		.uleb128 0x22
 28080 19c6 D40E0000 		.4byte	.LASF210
 28081 19ca 01       		.byte	0x1
 28082 19cb E90B     		.2byte	0xbe9
 28083 19cd C7000000 		.4byte	0xc7
 28084 19d1 02       		.uleb128 0x2
 28085 19d2 91       		.byte	0x91
 28086 19d3 6C       		.sleb128 -20
 28087 19d4 22       		.uleb128 0x22
 28088 19d5 13050000 		.4byte	.LASF204
 28089 19d9 01       		.byte	0x1
 28090 19da ED0B     		.2byte	0xbed
 28091 19dc CB070000 		.4byte	0x7cb
 28092 19e0 02       		.uleb128 0x2
 28093 19e1 91       		.byte	0x91
 28094 19e2 64       		.sleb128 -28
 28095 19e3 00       		.byte	0
 28096 19e4 2A       		.uleb128 0x2a
 28097 19e5 BA090000 		.4byte	.LASF282
 28098 19e9 01       		.byte	0x1
 28099 19ea FF0B     		.2byte	0xbff
 28100 19ec 00000000 		.4byte	.LFB91
 28101 19f0 44020000 		.4byte	.LFE91-.LFB91
 28102 19f4 01       		.uleb128 0x1
 28103 19f5 9C       		.byte	0x9c
 28104 19f6 4E1A0000 		.4byte	0x1a4e
 28105 19fa 22       		.uleb128 0x22
 28106 19fb D40E0000 		.4byte	.LASF210
 28107 19ff 01       		.byte	0x1
 28108 1a00 020C     		.2byte	0xc02
 28109 1a02 4E1A0000 		.4byte	0x1a4e
 28110 1a06 02       		.uleb128 0x2
 28111 1a07 91       		.byte	0x91
 28112 1a08 70       		.sleb128 -16
 28113 1a09 22       		.uleb128 0x22
 28114 1a0a AF050000 		.4byte	.LASF283
 28115 1a0e 01       		.byte	0x1
 28116 1a0f 030C     		.2byte	0xc03
 28117 1a11 4E1A0000 		.4byte	0x1a4e
 28118 1a15 05       		.uleb128 0x5
 28119 1a16 03       		.byte	0x3
 28120 1a17 00000000 		.4byte	last_aux_int16.11241
 28121 1a1b 2B       		.uleb128 0x2b
 28122 1a1c 2E000000 		.4byte	.LBB22
 28123 1a20 50000000 		.4byte	.LBE22-.LBB22
 28124 1a24 361A0000 		.4byte	0x1a36
 28125 1a28 25       		.uleb128 0x25
 28126 1a29 6900     		.ascii	"i\000"
 28127 1a2b 01       		.byte	0x1
 28128 1a2c 0A0C     		.2byte	0xc0a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 599


 28129 1a2e 97000000 		.4byte	0x97
 28130 1a32 02       		.uleb128 0x2
 28131 1a33 91       		.byte	0x91
 28132 1a34 77       		.sleb128 -9
 28133 1a35 00       		.byte	0
 28134 1a36 1E       		.uleb128 0x1e
 28135 1a37 88000000 		.4byte	.LBB23
 28136 1a3b 98010000 		.4byte	.LBE23-.LBB23
 28137 1a3f 25       		.uleb128 0x25
 28138 1a40 6900     		.ascii	"i\000"
 28139 1a42 01       		.byte	0x1
 28140 1a43 140C     		.2byte	0xc14
 28141 1a45 97000000 		.4byte	0x97
 28142 1a49 02       		.uleb128 0x2
 28143 1a4a 91       		.byte	0x91
 28144 1a4b 76       		.sleb128 -10
 28145 1a4c 00       		.byte	0
 28146 1a4d 00       		.byte	0
 28147 1a4e 09       		.uleb128 0x9
 28148 1a4f C7000000 		.4byte	0xc7
 28149 1a53 5E1A0000 		.4byte	0x1a5e
 28150 1a57 0A       		.uleb128 0xa
 28151 1a58 18010000 		.4byte	0x118
 28152 1a5c 01       		.byte	0x1
 28153 1a5d 00       		.byte	0
 28154 1a5e 26       		.uleb128 0x26
 28155 1a5f 0E110000 		.4byte	.LASF284
 28156 1a63 01       		.byte	0x1
 28157 1a64 2F0C     		.2byte	0xc2f
 28158 1a66 00000000 		.4byte	.LFB92
 28159 1a6a C0000000 		.4byte	.LFE92-.LFB92
 28160 1a6e 01       		.uleb128 0x1
 28161 1a6f 9C       		.byte	0x9c
 28162 1a70 841A0000 		.4byte	0x1a84
 28163 1a74 25       		.uleb128 0x25
 28164 1a75 61757800 		.ascii	"aux\000"
 28165 1a79 01       		.byte	0x1
 28166 1a7a 320C     		.2byte	0xc32
 28167 1a7c 97000000 		.4byte	0x97
 28168 1a80 02       		.uleb128 0x2
 28169 1a81 91       		.byte	0x91
 28170 1a82 77       		.sleb128 -9
 28171 1a83 00       		.byte	0
 28172 1a84 26       		.uleb128 0x26
 28173 1a85 0C0A0000 		.4byte	.LASF285
 28174 1a89 01       		.byte	0x1
 28175 1a8a 460C     		.2byte	0xc46
 28176 1a8c 00000000 		.4byte	.LFB93
 28177 1a90 5C000000 		.4byte	.LFE93-.LFB93
 28178 1a94 01       		.uleb128 0x1
 28179 1a95 9C       		.byte	0x9c
 28180 1a96 AA1A0000 		.4byte	0x1aaa
 28181 1a9a 22       		.uleb128 0x22
 28182 1a9b 13050000 		.4byte	.LASF204
 28183 1a9f 01       		.byte	0x1
 28184 1aa0 480C     		.2byte	0xc48
 28185 1aa2 7E050000 		.4byte	0x57e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 600


 28186 1aa6 02       		.uleb128 0x2
 28187 1aa7 91       		.byte	0x91
 28188 1aa8 74       		.sleb128 -12
 28189 1aa9 00       		.byte	0
 28190 1aaa 26       		.uleb128 0x26
 28191 1aab 500D0000 		.4byte	.LASF286
 28192 1aaf 01       		.byte	0x1
 28193 1ab0 5D0C     		.2byte	0xc5d
 28194 1ab2 00000000 		.4byte	.LFB94
 28195 1ab6 3C010000 		.4byte	.LFE94-.LFB94
 28196 1aba 01       		.uleb128 0x1
 28197 1abb 9C       		.byte	0x9c
 28198 1abc EE1A0000 		.4byte	0x1aee
 28199 1ac0 22       		.uleb128 0x22
 28200 1ac1 ED050000 		.4byte	.LASF219
 28201 1ac5 01       		.byte	0x1
 28202 1ac6 5F0C     		.2byte	0xc5f
 28203 1ac8 97000000 		.4byte	0x97
 28204 1acc 02       		.uleb128 0x2
 28205 1acd 91       		.byte	0x91
 28206 1ace 6F       		.sleb128 -17
 28207 1acf 22       		.uleb128 0x22
 28208 1ad0 D40E0000 		.4byte	.LASF210
 28209 1ad4 01       		.byte	0x1
 28210 1ad5 600C     		.2byte	0xc60
 28211 1ad7 C7000000 		.4byte	0xc7
 28212 1adb 02       		.uleb128 0x2
 28213 1adc 91       		.byte	0x91
 28214 1add 6C       		.sleb128 -20
 28215 1ade 22       		.uleb128 0x22
 28216 1adf 13050000 		.4byte	.LASF204
 28217 1ae3 01       		.byte	0x1
 28218 1ae4 640C     		.2byte	0xc64
 28219 1ae6 0E090000 		.4byte	0x90e
 28220 1aea 02       		.uleb128 0x2
 28221 1aeb 91       		.byte	0x91
 28222 1aec 60       		.sleb128 -32
 28223 1aed 00       		.byte	0
 28224 1aee 26       		.uleb128 0x26
 28225 1aef A3080000 		.4byte	.LASF287
 28226 1af3 01       		.byte	0x1
 28227 1af4 840C     		.2byte	0xc84
 28228 1af6 00000000 		.4byte	.LFB95
 28229 1afa B8000000 		.4byte	.LFE95-.LFB95
 28230 1afe 01       		.uleb128 0x1
 28231 1aff 9C       		.byte	0x9c
 28232 1b00 231B0000 		.4byte	0x1b23
 28233 1b04 22       		.uleb128 0x22
 28234 1b05 13050000 		.4byte	.LASF204
 28235 1b09 01       		.byte	0x1
 28236 1b0a 880C     		.2byte	0xc88
 28237 1b0c FE080000 		.4byte	0x8fe
 28238 1b10 02       		.uleb128 0x2
 28239 1b11 91       		.byte	0x91
 28240 1b12 70       		.sleb128 -16
 28241 1b13 22       		.uleb128 0x22
 28242 1b14 D40E0000 		.4byte	.LASF210
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 601


 28243 1b18 01       		.byte	0x1
 28244 1b19 890C     		.2byte	0xc89
 28245 1b1b C7000000 		.4byte	0xc7
 28246 1b1f 02       		.uleb128 0x2
 28247 1b20 91       		.byte	0x91
 28248 1b21 6E       		.sleb128 -18
 28249 1b22 00       		.byte	0
 28250 1b23 26       		.uleb128 0x26
 28251 1b24 39100000 		.4byte	.LASF288
 28252 1b28 01       		.byte	0x1
 28253 1b29 A40C     		.2byte	0xca4
 28254 1b2b 00000000 		.4byte	.LFB96
 28255 1b2f 5C000000 		.4byte	.LFE96-.LFB96
 28256 1b33 01       		.uleb128 0x1
 28257 1b34 9C       		.byte	0x9c
 28258 1b35 581B0000 		.4byte	0x1b58
 28259 1b39 22       		.uleb128 0x22
 28260 1b3a 13050000 		.4byte	.LASF204
 28261 1b3e 01       		.byte	0x1
 28262 1b3f A80C     		.2byte	0xca8
 28263 1b41 581B0000 		.4byte	0x1b58
 28264 1b45 02       		.uleb128 0x2
 28265 1b46 91       		.byte	0x91
 28266 1b47 74       		.sleb128 -12
 28267 1b48 22       		.uleb128 0x22
 28268 1b49 D40E0000 		.4byte	.LASF210
 28269 1b4d 01       		.byte	0x1
 28270 1b4e A90C     		.2byte	0xca9
 28271 1b50 C7000000 		.4byte	0xc7
 28272 1b54 02       		.uleb128 0x2
 28273 1b55 91       		.byte	0x91
 28274 1b56 72       		.sleb128 -14
 28275 1b57 00       		.byte	0
 28276 1b58 09       		.uleb128 0x9
 28277 1b59 97000000 		.4byte	0x97
 28278 1b5d 681B0000 		.4byte	0x1b68
 28279 1b61 0A       		.uleb128 0xa
 28280 1b62 18010000 		.4byte	0x118
 28281 1b66 03       		.byte	0x3
 28282 1b67 00       		.byte	0
 28283 1b68 2C       		.uleb128 0x2c
 28284 1b69 88000000 		.4byte	.LASF342
 28285 1b6d 01       		.byte	0x1
 28286 1b6e BA0C     		.2byte	0xcba
 28287 1b70 00000000 		.4byte	.LFB97
 28288 1b74 34000000 		.4byte	.LFE97-.LFB97
 28289 1b78 01       		.uleb128 0x1
 28290 1b79 9C       		.byte	0x9c
 28291 1b7a 26       		.uleb128 0x26
 28292 1b7b DF020000 		.4byte	.LASF289
 28293 1b7f 01       		.byte	0x1
 28294 1b80 C80C     		.2byte	0xcc8
 28295 1b82 00000000 		.4byte	.LFB98
 28296 1b86 20000000 		.4byte	.LFE98-.LFB98
 28297 1b8a 01       		.uleb128 0x1
 28298 1b8b 9C       		.byte	0x9c
 28299 1b8c A01B0000 		.4byte	0x1ba0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 602


 28300 1b90 22       		.uleb128 0x22
 28301 1b91 13050000 		.4byte	.LASF204
 28302 1b95 01       		.byte	0x1
 28303 1b96 CA0C     		.2byte	0xcca
 28304 1b98 E6170000 		.4byte	0x17e6
 28305 1b9c 02       		.uleb128 0x2
 28306 1b9d 91       		.byte	0x91
 28307 1b9e 74       		.sleb128 -12
 28308 1b9f 00       		.byte	0
 28309 1ba0 26       		.uleb128 0x26
 28310 1ba1 F0000000 		.4byte	.LASF290
 28311 1ba5 01       		.byte	0x1
 28312 1ba6 D60C     		.2byte	0xcd6
 28313 1ba8 00000000 		.4byte	.LFB99
 28314 1bac 6C000000 		.4byte	.LFE99-.LFB99
 28315 1bb0 01       		.uleb128 0x1
 28316 1bb1 9C       		.byte	0x9c
 28317 1bb2 D51B0000 		.4byte	0x1bd5
 28318 1bb6 22       		.uleb128 0x22
 28319 1bb7 13050000 		.4byte	.LASF204
 28320 1bbb 01       		.byte	0x1
 28321 1bbc DA0C     		.2byte	0xcda
 28322 1bbe FE080000 		.4byte	0x8fe
 28323 1bc2 02       		.uleb128 0x2
 28324 1bc3 91       		.byte	0x91
 28325 1bc4 70       		.sleb128 -16
 28326 1bc5 22       		.uleb128 0x22
 28327 1bc6 D40E0000 		.4byte	.LASF210
 28328 1bca 01       		.byte	0x1
 28329 1bcb DB0C     		.2byte	0xcdb
 28330 1bcd C7000000 		.4byte	0xc7
 28331 1bd1 02       		.uleb128 0x2
 28332 1bd2 91       		.byte	0x91
 28333 1bd3 6E       		.sleb128 -18
 28334 1bd4 00       		.byte	0
 28335 1bd5 26       		.uleb128 0x26
 28336 1bd6 DD0D0000 		.4byte	.LASF291
 28337 1bda 01       		.byte	0x1
 28338 1bdb EC0C     		.2byte	0xcec
 28339 1bdd 00000000 		.4byte	.LFB100
 28340 1be1 BC010000 		.4byte	.LFE100-.LFB100
 28341 1be5 01       		.uleb128 0x1
 28342 1be6 9C       		.byte	0x9c
 28343 1be7 371C0000 		.4byte	0x1c37
 28344 1beb 22       		.uleb128 0x22
 28345 1bec D6090000 		.4byte	.LASF292
 28346 1bf0 01       		.byte	0x1
 28347 1bf1 EF0C     		.2byte	0xcef
 28348 1bf3 AF000000 		.4byte	0xaf
 28349 1bf7 02       		.uleb128 0x2
 28350 1bf8 91       		.byte	0x91
 28351 1bf9 70       		.sleb128 -16
 28352 1bfa 22       		.uleb128 0x22
 28353 1bfb AA0C0000 		.4byte	.LASF293
 28354 1bff 01       		.byte	0x1
 28355 1c00 F00C     		.2byte	0xcf0
 28356 1c02 EB000000 		.4byte	0xeb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 603


 28357 1c06 02       		.uleb128 0x2
 28358 1c07 91       		.byte	0x91
 28359 1c08 6C       		.sleb128 -20
 28360 1c09 22       		.uleb128 0x22
 28361 1c0a B0000000 		.4byte	.LASF205
 28362 1c0e 01       		.byte	0x1
 28363 1c0f F10C     		.2byte	0xcf1
 28364 1c11 97000000 		.4byte	0x97
 28365 1c15 02       		.uleb128 0x2
 28366 1c16 91       		.byte	0x91
 28367 1c17 77       		.sleb128 -9
 28368 1c18 22       		.uleb128 0x22
 28369 1c19 13050000 		.4byte	.LASF204
 28370 1c1d 01       		.byte	0x1
 28371 1c1e F20C     		.2byte	0xcf2
 28372 1c20 E6170000 		.4byte	0x17e6
 28373 1c24 02       		.uleb128 0x2
 28374 1c25 91       		.byte	0x91
 28375 1c26 68       		.sleb128 -24
 28376 1c27 22       		.uleb128 0x22
 28377 1c28 170D0000 		.4byte	.LASF260
 28378 1c2c 01       		.byte	0x1
 28379 1c2d F30C     		.2byte	0xcf3
 28380 1c2f 97000000 		.4byte	0x97
 28381 1c33 02       		.uleb128 0x2
 28382 1c34 91       		.byte	0x91
 28383 1c35 6B       		.sleb128 -21
 28384 1c36 00       		.byte	0
 28385 1c37 26       		.uleb128 0x26
 28386 1c38 7E010000 		.4byte	.LASF294
 28387 1c3c 01       		.byte	0x1
 28388 1c3d 2D0D     		.2byte	0xd2d
 28389 1c3f 00000000 		.4byte	.LFB101
 28390 1c43 60000000 		.4byte	.LFE101-.LFB101
 28391 1c47 01       		.uleb128 0x1
 28392 1c48 9C       		.byte	0x9c
 28393 1c49 6C1C0000 		.4byte	0x1c6c
 28394 1c4d 22       		.uleb128 0x22
 28395 1c4e 13050000 		.4byte	.LASF204
 28396 1c52 01       		.byte	0x1
 28397 1c53 2F0D     		.2byte	0xd2f
 28398 1c55 FE080000 		.4byte	0x8fe
 28399 1c59 02       		.uleb128 0x2
 28400 1c5a 91       		.byte	0x91
 28401 1c5b 70       		.sleb128 -16
 28402 1c5c 22       		.uleb128 0x22
 28403 1c5d D40E0000 		.4byte	.LASF210
 28404 1c61 01       		.byte	0x1
 28405 1c62 300D     		.2byte	0xd30
 28406 1c64 C7000000 		.4byte	0xc7
 28407 1c68 02       		.uleb128 0x2
 28408 1c69 91       		.byte	0x91
 28409 1c6a 6E       		.sleb128 -18
 28410 1c6b 00       		.byte	0
 28411 1c6c 26       		.uleb128 0x26
 28412 1c6d 2C010000 		.4byte	.LASF295
 28413 1c71 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 604


 28414 1c72 430D     		.2byte	0xd43
 28415 1c74 00000000 		.4byte	.LFB102
 28416 1c78 98050000 		.4byte	.LFE102-.LFB102
 28417 1c7c 01       		.uleb128 0x1
 28418 1c7d 9C       		.byte	0x9c
 28419 1c7e F91C0000 		.4byte	0x1cf9
 28420 1c82 22       		.uleb128 0x22
 28421 1c83 7E100000 		.4byte	.LASF296
 28422 1c87 01       		.byte	0x1
 28423 1c88 460D     		.2byte	0xd46
 28424 1c8a 97000000 		.4byte	0x97
 28425 1c8e 02       		.uleb128 0x2
 28426 1c8f 91       		.byte	0x91
 28427 1c90 6F       		.sleb128 -17
 28428 1c91 25       		.uleb128 0x25
 28429 1c92 6300     		.ascii	"c\000"
 28430 1c94 01       		.byte	0x1
 28431 1c95 470D     		.2byte	0xd47
 28432 1c97 A3000000 		.4byte	0xa3
 28433 1c9b 02       		.uleb128 0x2
 28434 1c9c 91       		.byte	0x91
 28435 1c9d 6C       		.sleb128 -20
 28436 1c9e 25       		.uleb128 0x25
 28437 1c9f 6B00     		.ascii	"k\000"
 28438 1ca1 01       		.byte	0x1
 28439 1ca2 480D     		.2byte	0xd48
 28440 1ca4 97000000 		.4byte	0x97
 28441 1ca8 02       		.uleb128 0x2
 28442 1ca9 91       		.byte	0x91
 28443 1caa 6B       		.sleb128 -21
 28444 1cab 22       		.uleb128 0x22
 28445 1cac 26000000 		.4byte	.LASF297
 28446 1cb0 01       		.byte	0x1
 28447 1cb1 490D     		.2byte	0xd49
 28448 1cb3 A3000000 		.4byte	0xa3
 28449 1cb7 02       		.uleb128 0x2
 28450 1cb8 91       		.byte	0x91
 28451 1cb9 68       		.sleb128 -24
 28452 1cba 22       		.uleb128 0x22
 28453 1cbb D40E0000 		.4byte	.LASF210
 28454 1cbf 01       		.byte	0x1
 28455 1cc0 4A0D     		.2byte	0xd4a
 28456 1cc2 C7000000 		.4byte	0xc7
 28457 1cc6 02       		.uleb128 0x2
 28458 1cc7 91       		.byte	0x91
 28459 1cc8 66       		.sleb128 -26
 28460 1cc9 22       		.uleb128 0x22
 28461 1cca 04100000 		.4byte	.LASF209
 28462 1cce 01       		.byte	0x1
 28463 1ccf 4B0D     		.2byte	0xd4b
 28464 1cd1 EB000000 		.4byte	0xeb
 28465 1cd5 02       		.uleb128 0x2
 28466 1cd6 91       		.byte	0x91
 28467 1cd7 60       		.sleb128 -32
 28468 1cd8 22       		.uleb128 0x22
 28469 1cd9 13050000 		.4byte	.LASF204
 28470 1cdd 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 605


 28471 1cde 4E0D     		.2byte	0xd4e
 28472 1ce0 F91C0000 		.4byte	0x1cf9
 28473 1ce4 03       		.uleb128 0x3
 28474 1ce5 91       		.byte	0x91
 28475 1ce6 807D     		.sleb128 -384
 28476 1ce8 22       		.uleb128 0x22
 28477 1ce9 7D070000 		.4byte	.LASF298
 28478 1ced 01       		.byte	0x1
 28479 1cee 4F0D     		.2byte	0xd4f
 28480 1cf0 0A1D0000 		.4byte	0x1d0a
 28481 1cf4 03       		.uleb128 0x3
 28482 1cf5 91       		.byte	0x91
 28483 1cf6 E07C     		.sleb128 -416
 28484 1cf8 00       		.byte	0
 28485 1cf9 09       		.uleb128 0x9
 28486 1cfa 97000000 		.4byte	0x97
 28487 1cfe 0A1D0000 		.4byte	0x1d0a
 28488 1d02 23       		.uleb128 0x23
 28489 1d03 18010000 		.4byte	0x118
 28490 1d07 5D01     		.2byte	0x15d
 28491 1d09 00       		.byte	0
 28492 1d0a 09       		.uleb128 0x9
 28493 1d0b 97000000 		.4byte	0x97
 28494 1d0f 1A1D0000 		.4byte	0x1d1a
 28495 1d13 0A       		.uleb128 0xa
 28496 1d14 18010000 		.4byte	0x118
 28497 1d18 1F       		.byte	0x1f
 28498 1d19 00       		.byte	0
 28499 1d1a 26       		.uleb128 0x26
 28500 1d1b DF0F0000 		.4byte	.LASF299
 28501 1d1f 01       		.byte	0x1
 28502 1d20 B20D     		.2byte	0xdb2
 28503 1d22 00000000 		.4byte	.LFB103
 28504 1d26 8C000000 		.4byte	.LFE103-.LFB103
 28505 1d2a 01       		.uleb128 0x1
 28506 1d2b 9C       		.byte	0x9c
 28507 1d2c 5A1D0000 		.4byte	0x1d5a
 28508 1d30 22       		.uleb128 0x22
 28509 1d31 13050000 		.4byte	.LASF204
 28510 1d35 01       		.byte	0x1
 28511 1d36 B50D     		.2byte	0xdb5
 28512 1d38 5A1D0000 		.4byte	0x1d5a
 28513 1d3c 02       		.uleb128 0x2
 28514 1d3d 91       		.byte	0x91
 28515 1d3e 60       		.sleb128 -32
 28516 1d3f 25       		.uleb128 0x25
 28517 1d40 6900     		.ascii	"i\000"
 28518 1d42 01       		.byte	0x1
 28519 1d43 B60D     		.2byte	0xdb6
 28520 1d45 97000000 		.4byte	0x97
 28521 1d49 02       		.uleb128 0x2
 28522 1d4a 91       		.byte	0x91
 28523 1d4b 6F       		.sleb128 -17
 28524 1d4c 25       		.uleb128 0x25
 28525 1d4d 6A00     		.ascii	"j\000"
 28526 1d4f 01       		.byte	0x1
 28527 1d50 B60D     		.2byte	0xdb6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 606


 28528 1d52 97000000 		.4byte	0x97
 28529 1d56 02       		.uleb128 0x2
 28530 1d57 91       		.byte	0x91
 28531 1d58 6E       		.sleb128 -18
 28532 1d59 00       		.byte	0
 28533 1d5a 09       		.uleb128 0x9
 28534 1d5b 97000000 		.4byte	0x97
 28535 1d5f 6A1D0000 		.4byte	0x1d6a
 28536 1d63 0A       		.uleb128 0xa
 28537 1d64 18010000 		.4byte	0x118
 28538 1d68 0D       		.byte	0xd
 28539 1d69 00       		.byte	0
 28540 1d6a 26       		.uleb128 0x26
 28541 1d6b 090E0000 		.4byte	.LASF300
 28542 1d6f 01       		.byte	0x1
 28543 1d70 CB0D     		.2byte	0xdcb
 28544 1d72 00000000 		.4byte	.LFB104
 28545 1d76 EC000000 		.4byte	.LFE104-.LFB104
 28546 1d7a 01       		.uleb128 0x1
 28547 1d7b 9C       		.byte	0x9c
 28548 1d7c C81D0000 		.4byte	0x1dc8
 28549 1d80 22       		.uleb128 0x22
 28550 1d81 13050000 		.4byte	.LASF204
 28551 1d85 01       		.byte	0x1
 28552 1d86 CE0D     		.2byte	0xdce
 28553 1d88 C81D0000 		.4byte	0x1dc8
 28554 1d8c 02       		.uleb128 0x2
 28555 1d8d 91       		.byte	0x91
 28556 1d8e 54       		.sleb128 -44
 28557 1d8f 25       		.uleb128 0x25
 28558 1d90 6900     		.ascii	"i\000"
 28559 1d92 01       		.byte	0x1
 28560 1d93 CF0D     		.2byte	0xdcf
 28561 1d95 97000000 		.4byte	0x97
 28562 1d99 02       		.uleb128 0x2
 28563 1d9a 91       		.byte	0x91
 28564 1d9b 6F       		.sleb128 -17
 28565 1d9c 25       		.uleb128 0x25
 28566 1d9d 6A00     		.ascii	"j\000"
 28567 1d9f 01       		.byte	0x1
 28568 1da0 CF0D     		.2byte	0xdcf
 28569 1da2 97000000 		.4byte	0x97
 28570 1da6 02       		.uleb128 0x2
 28571 1da7 91       		.byte	0x91
 28572 1da8 6E       		.sleb128 -18
 28573 1da9 25       		.uleb128 0x25
 28574 1daa 69647800 		.ascii	"idx\000"
 28575 1dae 01       		.byte	0x1
 28576 1daf CF0D     		.2byte	0xdcf
 28577 1db1 97000000 		.4byte	0x97
 28578 1db5 02       		.uleb128 0x2
 28579 1db6 91       		.byte	0x91
 28580 1db7 6D       		.sleb128 -19
 28581 1db8 22       		.uleb128 0x22
 28582 1db9 860A0000 		.4byte	.LASF211
 28583 1dbd 01       		.byte	0x1
 28584 1dbe D00D     		.2byte	0xdd0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 607


 28585 1dc0 A3000000 		.4byte	0xa3
 28586 1dc4 02       		.uleb128 0x2
 28587 1dc5 91       		.byte	0x91
 28588 1dc6 52       		.sleb128 -46
 28589 1dc7 00       		.byte	0
 28590 1dc8 09       		.uleb128 0x9
 28591 1dc9 97000000 		.4byte	0x97
 28592 1dcd D81D0000 		.4byte	0x1dd8
 28593 1dd1 0A       		.uleb128 0xa
 28594 1dd2 18010000 		.4byte	0x118
 28595 1dd6 15       		.byte	0x15
 28596 1dd7 00       		.byte	0
 28597 1dd8 26       		.uleb128 0x26
 28598 1dd9 97020000 		.4byte	.LASF301
 28599 1ddd 01       		.byte	0x1
 28600 1dde E90D     		.2byte	0xde9
 28601 1de0 00000000 		.4byte	.LFB105
 28602 1de4 5C000000 		.4byte	.LFE105-.LFB105
 28603 1de8 01       		.uleb128 0x1
 28604 1de9 9C       		.byte	0x9c
 28605 1dea 0B1E0000 		.4byte	0x1e0b
 28606 1dee 22       		.uleb128 0x22
 28607 1def 13050000 		.4byte	.LASF204
 28608 1df3 01       		.byte	0x1
 28609 1df4 EC0D     		.2byte	0xdec
 28610 1df6 520A0000 		.4byte	0xa52
 28611 1dfa 02       		.uleb128 0x2
 28612 1dfb 91       		.byte	0x91
 28613 1dfc 68       		.sleb128 -24
 28614 1dfd 25       		.uleb128 0x25
 28615 1dfe 6900     		.ascii	"i\000"
 28616 1e00 01       		.byte	0x1
 28617 1e01 ED0D     		.2byte	0xded
 28618 1e03 97000000 		.4byte	0x97
 28619 1e07 02       		.uleb128 0x2
 28620 1e08 91       		.byte	0x91
 28621 1e09 77       		.sleb128 -9
 28622 1e0a 00       		.byte	0
 28623 1e0b 26       		.uleb128 0x26
 28624 1e0c C4020000 		.4byte	.LASF302
 28625 1e10 01       		.byte	0x1
 28626 1e11 000E     		.2byte	0xe00
 28627 1e13 00000000 		.4byte	.LFB106
 28628 1e17 C0000000 		.4byte	.LFE106-.LFB106
 28629 1e1b 01       		.uleb128 0x1
 28630 1e1c 9C       		.byte	0x9c
 28631 1e1d 5C1E0000 		.4byte	0x1e5c
 28632 1e21 22       		.uleb128 0x22
 28633 1e22 13050000 		.4byte	.LASF204
 28634 1e26 01       		.byte	0x1
 28635 1e27 030E     		.2byte	0xe03
 28636 1e29 5C1E0000 		.4byte	0x1e5c
 28637 1e2d 02       		.uleb128 0x2
 28638 1e2e 91       		.byte	0x91
 28639 1e2f 54       		.sleb128 -44
 28640 1e30 25       		.uleb128 0x25
 28641 1e31 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 608


 28642 1e33 01       		.byte	0x1
 28643 1e34 040E     		.2byte	0xe04
 28644 1e36 97000000 		.4byte	0x97
 28645 1e3a 02       		.uleb128 0x2
 28646 1e3b 91       		.byte	0x91
 28647 1e3c 6F       		.sleb128 -17
 28648 1e3d 25       		.uleb128 0x25
 28649 1e3e 69647800 		.ascii	"idx\000"
 28650 1e42 01       		.byte	0x1
 28651 1e43 040E     		.2byte	0xe04
 28652 1e45 97000000 		.4byte	0x97
 28653 1e49 02       		.uleb128 0x2
 28654 1e4a 91       		.byte	0x91
 28655 1e4b 6E       		.sleb128 -18
 28656 1e4c 22       		.uleb128 0x22
 28657 1e4d D40E0000 		.4byte	.LASF210
 28658 1e51 01       		.byte	0x1
 28659 1e52 050E     		.2byte	0xe05
 28660 1e54 C7000000 		.4byte	0xc7
 28661 1e58 02       		.uleb128 0x2
 28662 1e59 91       		.byte	0x91
 28663 1e5a 52       		.sleb128 -46
 28664 1e5b 00       		.byte	0
 28665 1e5c 09       		.uleb128 0x9
 28666 1e5d 97000000 		.4byte	0x97
 28667 1e61 6C1E0000 		.4byte	0x1e6c
 28668 1e65 0A       		.uleb128 0xa
 28669 1e66 18010000 		.4byte	0x118
 28670 1e6a 19       		.byte	0x19
 28671 1e6b 00       		.byte	0
 28672 1e6c 2D       		.uleb128 0x2d
 28673 1e6d 110F0000 		.4byte	.LASF303
 28674 1e71 09       		.byte	0x9
 28675 1e72 1207     		.2byte	0x712
 28676 1e74 781E0000 		.4byte	0x1e78
 28677 1e78 06       		.uleb128 0x6
 28678 1e79 81000000 		.4byte	0x81
 28679 1e7d 09       		.uleb128 0x9
 28680 1e7e 1A030000 		.4byte	0x31a
 28681 1e82 8D1E0000 		.4byte	0x1e8d
 28682 1e86 0A       		.uleb128 0xa
 28683 1e87 18010000 		.4byte	0x118
 28684 1e8b 01       		.byte	0x1
 28685 1e8c 00       		.byte	0
 28686 1e8d 2D       		.uleb128 0x2d
 28687 1e8e B8100000 		.4byte	.LASF304
 28688 1e92 08       		.byte	0x8
 28689 1e93 AD01     		.2byte	0x1ad
 28690 1e95 7D1E0000 		.4byte	0x1e7d
 28691 1e99 2D       		.uleb128 0x2d
 28692 1e9a 8E030000 		.4byte	.LASF305
 28693 1e9e 08       		.byte	0x8
 28694 1e9f AD01     		.2byte	0x1ad
 28695 1ea1 7D1E0000 		.4byte	0x1e7d
 28696 1ea5 2D       		.uleb128 0x2d
 28697 1ea6 2A0B0000 		.4byte	.LASF306
 28698 1eaa 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 609


 28699 1eab AD01     		.2byte	0x1ad
 28700 1ead 7D1E0000 		.4byte	0x1e7d
 28701 1eb1 09       		.uleb128 0x9
 28702 1eb2 57030000 		.4byte	0x357
 28703 1eb6 C11E0000 		.4byte	0x1ec1
 28704 1eba 0A       		.uleb128 0xa
 28705 1ebb 18010000 		.4byte	0x118
 28706 1ebf 01       		.byte	0x1
 28707 1ec0 00       		.byte	0
 28708 1ec1 2D       		.uleb128 0x2d
 28709 1ec2 9A050000 		.4byte	.LASF307
 28710 1ec6 08       		.byte	0x8
 28711 1ec7 AE01     		.2byte	0x1ae
 28712 1ec9 B11E0000 		.4byte	0x1eb1
 28713 1ecd 2D       		.uleb128 0x2d
 28714 1ece F6100000 		.4byte	.LASF308
 28715 1ed2 08       		.byte	0x8
 28716 1ed3 AE01     		.2byte	0x1ae
 28717 1ed5 B11E0000 		.4byte	0x1eb1
 28718 1ed9 2D       		.uleb128 0x2d
 28719 1eda 6A000000 		.4byte	.LASF309
 28720 1ede 08       		.byte	0x8
 28721 1edf AF01     		.2byte	0x1af
 28722 1ee1 CC030000 		.4byte	0x3cc
 28723 1ee5 2D       		.uleb128 0x2d
 28724 1ee6 B7110000 		.4byte	.LASF310
 28725 1eea 08       		.byte	0x8
 28726 1eeb AF01     		.2byte	0x1af
 28727 1eed CC030000 		.4byte	0x3cc
 28728 1ef1 2D       		.uleb128 0x2d
 28729 1ef2 5D000000 		.4byte	.LASF311
 28730 1ef6 08       		.byte	0x8
 28731 1ef7 B001     		.2byte	0x1b0
 28732 1ef9 11040000 		.4byte	0x411
 28733 1efd 2D       		.uleb128 0x2d
 28734 1efe EE0D0000 		.4byte	.LASF312
 28735 1f02 08       		.byte	0x8
 28736 1f03 B101     		.2byte	0x1b1
 28737 1f05 A2090000 		.4byte	0x9a2
 28738 1f09 2D       		.uleb128 0x2d
 28739 1f0a 54090000 		.4byte	.LASF313
 28740 1f0e 08       		.byte	0x8
 28741 1f0f B101     		.2byte	0x1b1
 28742 1f11 A2090000 		.4byte	0x9a2
 28743 1f15 2D       		.uleb128 0x2d
 28744 1f16 69080000 		.4byte	.LASF314
 28745 1f1a 08       		.byte	0x8
 28746 1f1b B201     		.2byte	0x1b2
 28747 1f1d 1E0B0000 		.4byte	0xb1e
 28748 1f21 2D       		.uleb128 0x2d
 28749 1f22 16020000 		.4byte	.LASF315
 28750 1f26 08       		.byte	0x8
 28751 1f27 B701     		.2byte	0x1b7
 28752 1f29 A3000000 		.4byte	0xa3
 28753 1f2d 2D       		.uleb128 0x2d
 28754 1f2e 5A0C0000 		.4byte	.LASF316
 28755 1f32 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 610


 28756 1f33 B801     		.2byte	0x1b8
 28757 1f35 A3000000 		.4byte	0xa3
 28758 1f39 2D       		.uleb128 0x2d
 28759 1f3a 8C0C0000 		.4byte	.LASF317
 28760 1f3e 08       		.byte	0x8
 28761 1f3f BB01     		.2byte	0x1bb
 28762 1f41 F1030000 		.4byte	0x3f1
 28763 1f45 2D       		.uleb128 0x2d
 28764 1f46 A80F0000 		.4byte	.LASF318
 28765 1f4a 08       		.byte	0x8
 28766 1f4b BC01     		.2byte	0x1bc
 28767 1f4d E6170000 		.4byte	0x17e6
 28768 1f51 2D       		.uleb128 0x2d
 28769 1f52 310F0000 		.4byte	.LASF319
 28770 1f56 08       		.byte	0x8
 28771 1f57 BF01     		.2byte	0x1bf
 28772 1f59 F1030000 		.4byte	0x3f1
 28773 1f5d 2D       		.uleb128 0x2d
 28774 1f5e 04090000 		.4byte	.LASF320
 28775 1f62 08       		.byte	0x8
 28776 1f63 C601     		.2byte	0x1c6
 28777 1f65 97000000 		.4byte	0x97
 28778 1f69 2D       		.uleb128 0x2d
 28779 1f6a BE080000 		.4byte	.LASF321
 28780 1f6e 08       		.byte	0x8
 28781 1f6f CF01     		.2byte	0x1cf
 28782 1f71 97000000 		.4byte	0x97
 28783 1f75 2D       		.uleb128 0x2d
 28784 1f76 23060000 		.4byte	.LASF322
 28785 1f7a 08       		.byte	0x8
 28786 1f7b D001     		.2byte	0x1d0
 28787 1f7d 97000000 		.4byte	0x97
 28788 1f81 09       		.uleb128 0x9
 28789 1f82 C7000000 		.4byte	0xc7
 28790 1f86 911F0000 		.4byte	0x1f91
 28791 1f8a 0A       		.uleb128 0xa
 28792 1f8b 18010000 		.4byte	0x118
 28793 1f8f 0B       		.byte	0xb
 28794 1f90 00       		.byte	0
 28795 1f91 2D       		.uleb128 0x2d
 28796 1f92 5D030000 		.4byte	.LASF323
 28797 1f96 08       		.byte	0x8
 28798 1f97 D301     		.2byte	0x1d3
 28799 1f99 811F0000 		.4byte	0x1f81
 28800 1f9d 2D       		.uleb128 0x2d
 28801 1f9e C4100000 		.4byte	.LASF324
 28802 1fa2 08       		.byte	0x8
 28803 1fa3 D401     		.2byte	0x1d4
 28804 1fa5 97000000 		.4byte	0x97
 28805 1fa9 09       		.uleb128 0x9
 28806 1faa AF000000 		.4byte	0xaf
 28807 1fae B91F0000 		.4byte	0x1fb9
 28808 1fb2 0A       		.uleb128 0xa
 28809 1fb3 18010000 		.4byte	0x118
 28810 1fb7 04       		.byte	0x4
 28811 1fb8 00       		.byte	0
 28812 1fb9 2D       		.uleb128 0x2d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 611


 28813 1fba C8050000 		.4byte	.LASF325
 28814 1fbe 08       		.byte	0x8
 28815 1fbf DA01     		.2byte	0x1da
 28816 1fc1 A91F0000 		.4byte	0x1fa9
 28817 1fc5 2D       		.uleb128 0x2d
 28818 1fc6 260D0000 		.4byte	.LASF326
 28819 1fca 08       		.byte	0x8
 28820 1fcb DB01     		.2byte	0x1db
 28821 1fcd E6170000 		.4byte	0x17e6
 28822 1fd1 09       		.uleb128 0x9
 28823 1fd2 A3000000 		.4byte	0xa3
 28824 1fd6 E71F0000 		.4byte	0x1fe7
 28825 1fda 0A       		.uleb128 0xa
 28826 1fdb 18010000 		.4byte	0x118
 28827 1fdf 01       		.byte	0x1
 28828 1fe0 0A       		.uleb128 0xa
 28829 1fe1 18010000 		.4byte	0x118
 28830 1fe5 04       		.byte	0x4
 28831 1fe6 00       		.byte	0
 28832 1fe7 2D       		.uleb128 0x2d
 28833 1fe8 D10F0000 		.4byte	.LASF327
 28834 1fec 08       		.byte	0x8
 28835 1fed DC01     		.2byte	0x1dc
 28836 1fef D11F0000 		.4byte	0x1fd1
 28837 1ff3 09       		.uleb128 0x9
 28838 1ff4 97000000 		.4byte	0x97
 28839 1ff8 09200000 		.4byte	0x2009
 28840 1ffc 0A       		.uleb128 0xa
 28841 1ffd 18010000 		.4byte	0x118
 28842 2001 01       		.byte	0x1
 28843 2002 0A       		.uleb128 0xa
 28844 2003 18010000 		.4byte	0x118
 28845 2007 04       		.byte	0x4
 28846 2008 00       		.byte	0
 28847 2009 2D       		.uleb128 0x2d
 28848 200a A1050000 		.4byte	.LASF328
 28849 200e 08       		.byte	0x8
 28850 200f DD01     		.2byte	0x1dd
 28851 2011 F31F0000 		.4byte	0x1ff3
 28852 2015 2D       		.uleb128 0x2d
 28853 2016 1F050000 		.4byte	.LASF329
 28854 201a 08       		.byte	0x8
 28855 201b E301     		.2byte	0x1e3
 28856 201d 14030000 		.4byte	0x314
 28857 2021 2D       		.uleb128 0x2d
 28858 2022 5B0E0000 		.4byte	.LASF330
 28859 2026 08       		.byte	0x8
 28860 2027 E801     		.2byte	0x1e8
 28861 2029 97000000 		.4byte	0x97
 28862 202d 2D       		.uleb128 0x2d
 28863 202e 0E100000 		.4byte	.LASF331
 28864 2032 08       		.byte	0x8
 28865 2033 E901     		.2byte	0x1e9
 28866 2035 AB070000 		.4byte	0x7ab
 28867 2039 2D       		.uleb128 0x2d
 28868 203a 020F0000 		.4byte	.LASF332
 28869 203e 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 612


 28870 203f EA01     		.2byte	0x1ea
 28871 2041 73000000 		.4byte	0x73
 28872 2045 09       		.uleb128 0x9
 28873 2046 73000000 		.4byte	0x73
 28874 204a 55200000 		.4byte	0x2055
 28875 204e 0A       		.uleb128 0xa
 28876 204f 18010000 		.4byte	0x118
 28877 2053 04       		.byte	0x4
 28878 2054 00       		.byte	0
 28879 2055 2D       		.uleb128 0x2d
 28880 2056 3B030000 		.4byte	.LASF333
 28881 205a 08       		.byte	0x8
 28882 205b EB01     		.2byte	0x1eb
 28883 205d 45200000 		.4byte	0x2045
 28884 2061 09       		.uleb128 0x9
 28885 2062 A20A0000 		.4byte	0xaa2
 28886 2066 71200000 		.4byte	0x2071
 28887 206a 0A       		.uleb128 0xa
 28888 206b 18010000 		.4byte	0x118
 28889 206f 04       		.byte	0x4
 28890 2070 00       		.byte	0
 28891 2071 2D       		.uleb128 0x2d
 28892 2072 06060000 		.4byte	.LASF334
 28893 2076 08       		.byte	0x8
 28894 2077 EC01     		.2byte	0x1ec
 28895 2079 61200000 		.4byte	0x2061
 28896 207d 09       		.uleb128 0x9
 28897 207e 97000000 		.4byte	0x97
 28898 2082 93200000 		.4byte	0x2093
 28899 2086 0A       		.uleb128 0xa
 28900 2087 18010000 		.4byte	0x118
 28901 208b 04       		.byte	0x4
 28902 208c 0A       		.uleb128 0xa
 28903 208d 18010000 		.4byte	0x118
 28904 2091 02       		.byte	0x2
 28905 2092 00       		.byte	0
 28906 2093 2D       		.uleb128 0x2d
 28907 2094 97090000 		.4byte	.LASF335
 28908 2098 08       		.byte	0x8
 28909 2099 F001     		.2byte	0x1f0
 28910 209b 7D200000 		.4byte	0x207d
 28911 209f 2E       		.uleb128 0x2e
 28912 20a0 DE0E0000 		.4byte	.LASF336
 28913 20a4 01       		.byte	0x1
 28914 20a5 33       		.byte	0x33
 28915 20a6 B0200000 		.4byte	0x20b0
 28916 20aa 05       		.uleb128 0x5
 28917 20ab 03       		.byte	0x3
 28918 20ac 00000000 		.4byte	EEPROM_ADDR
 28919 20b0 07       		.uleb128 0x7
 28920 20b1 04       		.byte	0x4
 28921 20b2 00010000 		.4byte	0x100
 28922 20b6 00       		.byte	0
 28923              		.section	.debug_abbrev,"",%progbits
 28924              	.Ldebug_abbrev0:
 28925 0000 01       		.uleb128 0x1
 28926 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 613


 28927 0002 01       		.byte	0x1
 28928 0003 25       		.uleb128 0x25
 28929 0004 0E       		.uleb128 0xe
 28930 0005 13       		.uleb128 0x13
 28931 0006 0B       		.uleb128 0xb
 28932 0007 03       		.uleb128 0x3
 28933 0008 0E       		.uleb128 0xe
 28934 0009 1B       		.uleb128 0x1b
 28935 000a 0E       		.uleb128 0xe
 28936 000b 55       		.uleb128 0x55
 28937 000c 17       		.uleb128 0x17
 28938 000d 11       		.uleb128 0x11
 28939 000e 01       		.uleb128 0x1
 28940 000f 10       		.uleb128 0x10
 28941 0010 17       		.uleb128 0x17
 28942 0011 00       		.byte	0
 28943 0012 00       		.byte	0
 28944 0013 02       		.uleb128 0x2
 28945 0014 24       		.uleb128 0x24
 28946 0015 00       		.byte	0
 28947 0016 0B       		.uleb128 0xb
 28948 0017 0B       		.uleb128 0xb
 28949 0018 3E       		.uleb128 0x3e
 28950 0019 0B       		.uleb128 0xb
 28951 001a 03       		.uleb128 0x3
 28952 001b 0E       		.uleb128 0xe
 28953 001c 00       		.byte	0
 28954 001d 00       		.byte	0
 28955 001e 03       		.uleb128 0x3
 28956 001f 16       		.uleb128 0x16
 28957 0020 00       		.byte	0
 28958 0021 03       		.uleb128 0x3
 28959 0022 0E       		.uleb128 0xe
 28960 0023 3A       		.uleb128 0x3a
 28961 0024 0B       		.uleb128 0xb
 28962 0025 3B       		.uleb128 0x3b
 28963 0026 0B       		.uleb128 0xb
 28964 0027 49       		.uleb128 0x49
 28965 0028 13       		.uleb128 0x13
 28966 0029 00       		.byte	0
 28967 002a 00       		.byte	0
 28968 002b 04       		.uleb128 0x4
 28969 002c 24       		.uleb128 0x24
 28970 002d 00       		.byte	0
 28971 002e 0B       		.uleb128 0xb
 28972 002f 0B       		.uleb128 0xb
 28973 0030 3E       		.uleb128 0x3e
 28974 0031 0B       		.uleb128 0xb
 28975 0032 03       		.uleb128 0x3
 28976 0033 08       		.uleb128 0x8
 28977 0034 00       		.byte	0
 28978 0035 00       		.byte	0
 28979 0036 05       		.uleb128 0x5
 28980 0037 16       		.uleb128 0x16
 28981 0038 00       		.byte	0
 28982 0039 03       		.uleb128 0x3
 28983 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 614


 28984 003b 3A       		.uleb128 0x3a
 28985 003c 0B       		.uleb128 0xb
 28986 003d 3B       		.uleb128 0x3b
 28987 003e 05       		.uleb128 0x5
 28988 003f 49       		.uleb128 0x49
 28989 0040 13       		.uleb128 0x13
 28990 0041 00       		.byte	0
 28991 0042 00       		.byte	0
 28992 0043 06       		.uleb128 0x6
 28993 0044 35       		.uleb128 0x35
 28994 0045 00       		.byte	0
 28995 0046 49       		.uleb128 0x49
 28996 0047 13       		.uleb128 0x13
 28997 0048 00       		.byte	0
 28998 0049 00       		.byte	0
 28999 004a 07       		.uleb128 0x7
 29000 004b 0F       		.uleb128 0xf
 29001 004c 00       		.byte	0
 29002 004d 0B       		.uleb128 0xb
 29003 004e 0B       		.uleb128 0xb
 29004 004f 49       		.uleb128 0x49
 29005 0050 13       		.uleb128 0x13
 29006 0051 00       		.byte	0
 29007 0052 00       		.byte	0
 29008 0053 08       		.uleb128 0x8
 29009 0054 26       		.uleb128 0x26
 29010 0055 00       		.byte	0
 29011 0056 49       		.uleb128 0x49
 29012 0057 13       		.uleb128 0x13
 29013 0058 00       		.byte	0
 29014 0059 00       		.byte	0
 29015 005a 09       		.uleb128 0x9
 29016 005b 01       		.uleb128 0x1
 29017 005c 01       		.byte	0x1
 29018 005d 49       		.uleb128 0x49
 29019 005e 13       		.uleb128 0x13
 29020 005f 01       		.uleb128 0x1
 29021 0060 13       		.uleb128 0x13
 29022 0061 00       		.byte	0
 29023 0062 00       		.byte	0
 29024 0063 0A       		.uleb128 0xa
 29025 0064 21       		.uleb128 0x21
 29026 0065 00       		.byte	0
 29027 0066 49       		.uleb128 0x49
 29028 0067 13       		.uleb128 0x13
 29029 0068 2F       		.uleb128 0x2f
 29030 0069 0B       		.uleb128 0xb
 29031 006a 00       		.byte	0
 29032 006b 00       		.byte	0
 29033 006c 0B       		.uleb128 0xb
 29034 006d 04       		.uleb128 0x4
 29035 006e 01       		.byte	0x1
 29036 006f 03       		.uleb128 0x3
 29037 0070 0E       		.uleb128 0xe
 29038 0071 0B       		.uleb128 0xb
 29039 0072 0B       		.uleb128 0xb
 29040 0073 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 615


 29041 0074 13       		.uleb128 0x13
 29042 0075 3A       		.uleb128 0x3a
 29043 0076 0B       		.uleb128 0xb
 29044 0077 3B       		.uleb128 0x3b
 29045 0078 0B       		.uleb128 0xb
 29046 0079 01       		.uleb128 0x1
 29047 007a 13       		.uleb128 0x13
 29048 007b 00       		.byte	0
 29049 007c 00       		.byte	0
 29050 007d 0C       		.uleb128 0xc
 29051 007e 28       		.uleb128 0x28
 29052 007f 00       		.byte	0
 29053 0080 03       		.uleb128 0x3
 29054 0081 0E       		.uleb128 0xe
 29055 0082 1C       		.uleb128 0x1c
 29056 0083 0B       		.uleb128 0xb
 29057 0084 00       		.byte	0
 29058 0085 00       		.byte	0
 29059 0086 0D       		.uleb128 0xd
 29060 0087 13       		.uleb128 0x13
 29061 0088 00       		.byte	0
 29062 0089 03       		.uleb128 0x3
 29063 008a 0E       		.uleb128 0xe
 29064 008b 3C       		.uleb128 0x3c
 29065 008c 19       		.uleb128 0x19
 29066 008d 00       		.byte	0
 29067 008e 00       		.byte	0
 29068 008f 0E       		.uleb128 0xe
 29069 0090 13       		.uleb128 0x13
 29070 0091 01       		.byte	0x1
 29071 0092 03       		.uleb128 0x3
 29072 0093 0E       		.uleb128 0xe
 29073 0094 0B       		.uleb128 0xb
 29074 0095 0B       		.uleb128 0xb
 29075 0096 3A       		.uleb128 0x3a
 29076 0097 0B       		.uleb128 0xb
 29077 0098 3B       		.uleb128 0x3b
 29078 0099 0B       		.uleb128 0xb
 29079 009a 01       		.uleb128 0x1
 29080 009b 13       		.uleb128 0x13
 29081 009c 00       		.byte	0
 29082 009d 00       		.byte	0
 29083 009e 0F       		.uleb128 0xf
 29084 009f 0D       		.uleb128 0xd
 29085 00a0 00       		.byte	0
 29086 00a1 03       		.uleb128 0x3
 29087 00a2 08       		.uleb128 0x8
 29088 00a3 3A       		.uleb128 0x3a
 29089 00a4 0B       		.uleb128 0xb
 29090 00a5 3B       		.uleb128 0x3b
 29091 00a6 0B       		.uleb128 0xb
 29092 00a7 49       		.uleb128 0x49
 29093 00a8 13       		.uleb128 0x13
 29094 00a9 38       		.uleb128 0x38
 29095 00aa 0B       		.uleb128 0xb
 29096 00ab 00       		.byte	0
 29097 00ac 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 616


 29098 00ad 10       		.uleb128 0x10
 29099 00ae 0D       		.uleb128 0xd
 29100 00af 00       		.byte	0
 29101 00b0 03       		.uleb128 0x3
 29102 00b1 0E       		.uleb128 0xe
 29103 00b2 3A       		.uleb128 0x3a
 29104 00b3 0B       		.uleb128 0xb
 29105 00b4 3B       		.uleb128 0x3b
 29106 00b5 0B       		.uleb128 0xb
 29107 00b6 49       		.uleb128 0x49
 29108 00b7 13       		.uleb128 0x13
 29109 00b8 38       		.uleb128 0x38
 29110 00b9 0B       		.uleb128 0xb
 29111 00ba 00       		.byte	0
 29112 00bb 00       		.byte	0
 29113 00bc 11       		.uleb128 0x11
 29114 00bd 13       		.uleb128 0x13
 29115 00be 01       		.byte	0x1
 29116 00bf 03       		.uleb128 0x3
 29117 00c0 0E       		.uleb128 0xe
 29118 00c1 0B       		.uleb128 0xb
 29119 00c2 0B       		.uleb128 0xb
 29120 00c3 3A       		.uleb128 0x3a
 29121 00c4 0B       		.uleb128 0xb
 29122 00c5 3B       		.uleb128 0x3b
 29123 00c6 05       		.uleb128 0x5
 29124 00c7 01       		.uleb128 0x1
 29125 00c8 13       		.uleb128 0x13
 29126 00c9 00       		.byte	0
 29127 00ca 00       		.byte	0
 29128 00cb 12       		.uleb128 0x12
 29129 00cc 0D       		.uleb128 0xd
 29130 00cd 00       		.byte	0
 29131 00ce 03       		.uleb128 0x3
 29132 00cf 08       		.uleb128 0x8
 29133 00d0 3A       		.uleb128 0x3a
 29134 00d1 0B       		.uleb128 0xb
 29135 00d2 3B       		.uleb128 0x3b
 29136 00d3 05       		.uleb128 0x5
 29137 00d4 49       		.uleb128 0x49
 29138 00d5 13       		.uleb128 0x13
 29139 00d6 38       		.uleb128 0x38
 29140 00d7 0B       		.uleb128 0xb
 29141 00d8 00       		.byte	0
 29142 00d9 00       		.byte	0
 29143 00da 13       		.uleb128 0x13
 29144 00db 0D       		.uleb128 0xd
 29145 00dc 00       		.byte	0
 29146 00dd 03       		.uleb128 0x3
 29147 00de 0E       		.uleb128 0xe
 29148 00df 3A       		.uleb128 0x3a
 29149 00e0 0B       		.uleb128 0xb
 29150 00e1 3B       		.uleb128 0x3b
 29151 00e2 05       		.uleb128 0x5
 29152 00e3 49       		.uleb128 0x49
 29153 00e4 13       		.uleb128 0x13
 29154 00e5 38       		.uleb128 0x38
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 617


 29155 00e6 0B       		.uleb128 0xb
 29156 00e7 00       		.byte	0
 29157 00e8 00       		.byte	0
 29158 00e9 14       		.uleb128 0x14
 29159 00ea 13       		.uleb128 0x13
 29160 00eb 01       		.byte	0x1
 29161 00ec 03       		.uleb128 0x3
 29162 00ed 0E       		.uleb128 0xe
 29163 00ee 0B       		.uleb128 0xb
 29164 00ef 05       		.uleb128 0x5
 29165 00f0 3A       		.uleb128 0x3a
 29166 00f1 0B       		.uleb128 0xb
 29167 00f2 3B       		.uleb128 0x3b
 29168 00f3 05       		.uleb128 0x5
 29169 00f4 01       		.uleb128 0x1
 29170 00f5 13       		.uleb128 0x13
 29171 00f6 00       		.byte	0
 29172 00f7 00       		.byte	0
 29173 00f8 15       		.uleb128 0x15
 29174 00f9 0D       		.uleb128 0xd
 29175 00fa 00       		.byte	0
 29176 00fb 03       		.uleb128 0x3
 29177 00fc 08       		.uleb128 0x8
 29178 00fd 3A       		.uleb128 0x3a
 29179 00fe 0B       		.uleb128 0xb
 29180 00ff 3B       		.uleb128 0x3b
 29181 0100 05       		.uleb128 0x5
 29182 0101 49       		.uleb128 0x49
 29183 0102 13       		.uleb128 0x13
 29184 0103 38       		.uleb128 0x38
 29185 0104 05       		.uleb128 0x5
 29186 0105 00       		.byte	0
 29187 0106 00       		.byte	0
 29188 0107 16       		.uleb128 0x16
 29189 0108 0D       		.uleb128 0xd
 29190 0109 00       		.byte	0
 29191 010a 03       		.uleb128 0x3
 29192 010b 0E       		.uleb128 0xe
 29193 010c 3A       		.uleb128 0x3a
 29194 010d 0B       		.uleb128 0xb
 29195 010e 3B       		.uleb128 0x3b
 29196 010f 05       		.uleb128 0x5
 29197 0110 49       		.uleb128 0x49
 29198 0111 13       		.uleb128 0x13
 29199 0112 38       		.uleb128 0x38
 29200 0113 05       		.uleb128 0x5
 29201 0114 00       		.byte	0
 29202 0115 00       		.byte	0
 29203 0116 17       		.uleb128 0x17
 29204 0117 2E       		.uleb128 0x2e
 29205 0118 01       		.byte	0x1
 29206 0119 03       		.uleb128 0x3
 29207 011a 0E       		.uleb128 0xe
 29208 011b 3A       		.uleb128 0x3a
 29209 011c 0B       		.uleb128 0xb
 29210 011d 3B       		.uleb128 0x3b
 29211 011e 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 618


 29212 011f 27       		.uleb128 0x27
 29213 0120 19       		.uleb128 0x19
 29214 0121 49       		.uleb128 0x49
 29215 0122 13       		.uleb128 0x13
 29216 0123 20       		.uleb128 0x20
 29217 0124 0B       		.uleb128 0xb
 29218 0125 01       		.uleb128 0x1
 29219 0126 13       		.uleb128 0x13
 29220 0127 00       		.byte	0
 29221 0128 00       		.byte	0
 29222 0129 18       		.uleb128 0x18
 29223 012a 05       		.uleb128 0x5
 29224 012b 00       		.byte	0
 29225 012c 03       		.uleb128 0x3
 29226 012d 0E       		.uleb128 0xe
 29227 012e 3A       		.uleb128 0x3a
 29228 012f 0B       		.uleb128 0xb
 29229 0130 3B       		.uleb128 0x3b
 29230 0131 05       		.uleb128 0x5
 29231 0132 49       		.uleb128 0x49
 29232 0133 13       		.uleb128 0x13
 29233 0134 00       		.byte	0
 29234 0135 00       		.byte	0
 29235 0136 19       		.uleb128 0x19
 29236 0137 34       		.uleb128 0x34
 29237 0138 00       		.byte	0
 29238 0139 03       		.uleb128 0x3
 29239 013a 0E       		.uleb128 0xe
 29240 013b 3A       		.uleb128 0x3a
 29241 013c 0B       		.uleb128 0xb
 29242 013d 3B       		.uleb128 0x3b
 29243 013e 05       		.uleb128 0x5
 29244 013f 49       		.uleb128 0x49
 29245 0140 13       		.uleb128 0x13
 29246 0141 00       		.byte	0
 29247 0142 00       		.byte	0
 29248 0143 1A       		.uleb128 0x1a
 29249 0144 2E       		.uleb128 0x2e
 29250 0145 01       		.byte	0x1
 29251 0146 3F       		.uleb128 0x3f
 29252 0147 19       		.uleb128 0x19
 29253 0148 03       		.uleb128 0x3
 29254 0149 0E       		.uleb128 0xe
 29255 014a 3A       		.uleb128 0x3a
 29256 014b 0B       		.uleb128 0xb
 29257 014c 3B       		.uleb128 0x3b
 29258 014d 0B       		.uleb128 0xb
 29259 014e 27       		.uleb128 0x27
 29260 014f 19       		.uleb128 0x19
 29261 0150 11       		.uleb128 0x11
 29262 0151 01       		.uleb128 0x1
 29263 0152 12       		.uleb128 0x12
 29264 0153 06       		.uleb128 0x6
 29265 0154 40       		.uleb128 0x40
 29266 0155 18       		.uleb128 0x18
 29267 0156 9642     		.uleb128 0x2116
 29268 0158 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 619


 29269 0159 01       		.uleb128 0x1
 29270 015a 13       		.uleb128 0x13
 29271 015b 00       		.byte	0
 29272 015c 00       		.byte	0
 29273 015d 1B       		.uleb128 0x1b
 29274 015e 34       		.uleb128 0x34
 29275 015f 00       		.byte	0
 29276 0160 03       		.uleb128 0x3
 29277 0161 0E       		.uleb128 0xe
 29278 0162 3A       		.uleb128 0x3a
 29279 0163 0B       		.uleb128 0xb
 29280 0164 3B       		.uleb128 0x3b
 29281 0165 0B       		.uleb128 0xb
 29282 0166 49       		.uleb128 0x49
 29283 0167 13       		.uleb128 0x13
 29284 0168 02       		.uleb128 0x2
 29285 0169 18       		.uleb128 0x18
 29286 016a 00       		.byte	0
 29287 016b 00       		.byte	0
 29288 016c 1C       		.uleb128 0x1c
 29289 016d 1D       		.uleb128 0x1d
 29290 016e 01       		.byte	0x1
 29291 016f 31       		.uleb128 0x31
 29292 0170 13       		.uleb128 0x13
 29293 0171 11       		.uleb128 0x11
 29294 0172 01       		.uleb128 0x1
 29295 0173 12       		.uleb128 0x12
 29296 0174 06       		.uleb128 0x6
 29297 0175 58       		.uleb128 0x58
 29298 0176 0B       		.uleb128 0xb
 29299 0177 59       		.uleb128 0x59
 29300 0178 0B       		.uleb128 0xb
 29301 0179 01       		.uleb128 0x1
 29302 017a 13       		.uleb128 0x13
 29303 017b 00       		.byte	0
 29304 017c 00       		.byte	0
 29305 017d 1D       		.uleb128 0x1d
 29306 017e 05       		.uleb128 0x5
 29307 017f 00       		.byte	0
 29308 0180 31       		.uleb128 0x31
 29309 0181 13       		.uleb128 0x13
 29310 0182 02       		.uleb128 0x2
 29311 0183 18       		.uleb128 0x18
 29312 0184 00       		.byte	0
 29313 0185 00       		.byte	0
 29314 0186 1E       		.uleb128 0x1e
 29315 0187 0B       		.uleb128 0xb
 29316 0188 01       		.byte	0x1
 29317 0189 11       		.uleb128 0x11
 29318 018a 01       		.uleb128 0x1
 29319 018b 12       		.uleb128 0x12
 29320 018c 06       		.uleb128 0x6
 29321 018d 00       		.byte	0
 29322 018e 00       		.byte	0
 29323 018f 1F       		.uleb128 0x1f
 29324 0190 34       		.uleb128 0x34
 29325 0191 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 620


 29326 0192 31       		.uleb128 0x31
 29327 0193 13       		.uleb128 0x13
 29328 0194 02       		.uleb128 0x2
 29329 0195 18       		.uleb128 0x18
 29330 0196 00       		.byte	0
 29331 0197 00       		.byte	0
 29332 0198 20       		.uleb128 0x20
 29333 0199 1D       		.uleb128 0x1d
 29334 019a 01       		.byte	0x1
 29335 019b 31       		.uleb128 0x31
 29336 019c 13       		.uleb128 0x13
 29337 019d 11       		.uleb128 0x11
 29338 019e 01       		.uleb128 0x1
 29339 019f 12       		.uleb128 0x12
 29340 01a0 06       		.uleb128 0x6
 29341 01a1 58       		.uleb128 0x58
 29342 01a2 0B       		.uleb128 0xb
 29343 01a3 59       		.uleb128 0x59
 29344 01a4 0B       		.uleb128 0xb
 29345 01a5 00       		.byte	0
 29346 01a6 00       		.byte	0
 29347 01a7 21       		.uleb128 0x21
 29348 01a8 2E       		.uleb128 0x2e
 29349 01a9 01       		.byte	0x1
 29350 01aa 3F       		.uleb128 0x3f
 29351 01ab 19       		.uleb128 0x19
 29352 01ac 03       		.uleb128 0x3
 29353 01ad 0E       		.uleb128 0xe
 29354 01ae 3A       		.uleb128 0x3a
 29355 01af 0B       		.uleb128 0xb
 29356 01b0 3B       		.uleb128 0x3b
 29357 01b1 05       		.uleb128 0x5
 29358 01b2 27       		.uleb128 0x27
 29359 01b3 19       		.uleb128 0x19
 29360 01b4 11       		.uleb128 0x11
 29361 01b5 01       		.uleb128 0x1
 29362 01b6 12       		.uleb128 0x12
 29363 01b7 06       		.uleb128 0x6
 29364 01b8 40       		.uleb128 0x40
 29365 01b9 18       		.uleb128 0x18
 29366 01ba 9642     		.uleb128 0x2116
 29367 01bc 19       		.uleb128 0x19
 29368 01bd 01       		.uleb128 0x1
 29369 01be 13       		.uleb128 0x13
 29370 01bf 00       		.byte	0
 29371 01c0 00       		.byte	0
 29372 01c1 22       		.uleb128 0x22
 29373 01c2 34       		.uleb128 0x34
 29374 01c3 00       		.byte	0
 29375 01c4 03       		.uleb128 0x3
 29376 01c5 0E       		.uleb128 0xe
 29377 01c6 3A       		.uleb128 0x3a
 29378 01c7 0B       		.uleb128 0xb
 29379 01c8 3B       		.uleb128 0x3b
 29380 01c9 05       		.uleb128 0x5
 29381 01ca 49       		.uleb128 0x49
 29382 01cb 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 621


 29383 01cc 02       		.uleb128 0x2
 29384 01cd 18       		.uleb128 0x18
 29385 01ce 00       		.byte	0
 29386 01cf 00       		.byte	0
 29387 01d0 23       		.uleb128 0x23
 29388 01d1 21       		.uleb128 0x21
 29389 01d2 00       		.byte	0
 29390 01d3 49       		.uleb128 0x49
 29391 01d4 13       		.uleb128 0x13
 29392 01d5 2F       		.uleb128 0x2f
 29393 01d6 05       		.uleb128 0x5
 29394 01d7 00       		.byte	0
 29395 01d8 00       		.byte	0
 29396 01d9 24       		.uleb128 0x24
 29397 01da 05       		.uleb128 0x5
 29398 01db 00       		.byte	0
 29399 01dc 03       		.uleb128 0x3
 29400 01dd 0E       		.uleb128 0xe
 29401 01de 3A       		.uleb128 0x3a
 29402 01df 0B       		.uleb128 0xb
 29403 01e0 3B       		.uleb128 0x3b
 29404 01e1 05       		.uleb128 0x5
 29405 01e2 49       		.uleb128 0x49
 29406 01e3 13       		.uleb128 0x13
 29407 01e4 02       		.uleb128 0x2
 29408 01e5 18       		.uleb128 0x18
 29409 01e6 00       		.byte	0
 29410 01e7 00       		.byte	0
 29411 01e8 25       		.uleb128 0x25
 29412 01e9 34       		.uleb128 0x34
 29413 01ea 00       		.byte	0
 29414 01eb 03       		.uleb128 0x3
 29415 01ec 08       		.uleb128 0x8
 29416 01ed 3A       		.uleb128 0x3a
 29417 01ee 0B       		.uleb128 0xb
 29418 01ef 3B       		.uleb128 0x3b
 29419 01f0 05       		.uleb128 0x5
 29420 01f1 49       		.uleb128 0x49
 29421 01f2 13       		.uleb128 0x13
 29422 01f3 02       		.uleb128 0x2
 29423 01f4 18       		.uleb128 0x18
 29424 01f5 00       		.byte	0
 29425 01f6 00       		.byte	0
 29426 01f7 26       		.uleb128 0x26
 29427 01f8 2E       		.uleb128 0x2e
 29428 01f9 01       		.byte	0x1
 29429 01fa 3F       		.uleb128 0x3f
 29430 01fb 19       		.uleb128 0x19
 29431 01fc 03       		.uleb128 0x3
 29432 01fd 0E       		.uleb128 0xe
 29433 01fe 3A       		.uleb128 0x3a
 29434 01ff 0B       		.uleb128 0xb
 29435 0200 3B       		.uleb128 0x3b
 29436 0201 05       		.uleb128 0x5
 29437 0202 11       		.uleb128 0x11
 29438 0203 01       		.uleb128 0x1
 29439 0204 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 622


 29440 0205 06       		.uleb128 0x6
 29441 0206 40       		.uleb128 0x40
 29442 0207 18       		.uleb128 0x18
 29443 0208 9642     		.uleb128 0x2116
 29444 020a 19       		.uleb128 0x19
 29445 020b 01       		.uleb128 0x1
 29446 020c 13       		.uleb128 0x13
 29447 020d 00       		.byte	0
 29448 020e 00       		.byte	0
 29449 020f 27       		.uleb128 0x27
 29450 0210 2E       		.uleb128 0x2e
 29451 0211 01       		.byte	0x1
 29452 0212 3F       		.uleb128 0x3f
 29453 0213 19       		.uleb128 0x19
 29454 0214 03       		.uleb128 0x3
 29455 0215 0E       		.uleb128 0xe
 29456 0216 3A       		.uleb128 0x3a
 29457 0217 0B       		.uleb128 0xb
 29458 0218 3B       		.uleb128 0x3b
 29459 0219 05       		.uleb128 0x5
 29460 021a 27       		.uleb128 0x27
 29461 021b 19       		.uleb128 0x19
 29462 021c 49       		.uleb128 0x49
 29463 021d 13       		.uleb128 0x13
 29464 021e 11       		.uleb128 0x11
 29465 021f 01       		.uleb128 0x1
 29466 0220 12       		.uleb128 0x12
 29467 0221 06       		.uleb128 0x6
 29468 0222 40       		.uleb128 0x40
 29469 0223 18       		.uleb128 0x18
 29470 0224 9742     		.uleb128 0x2117
 29471 0226 19       		.uleb128 0x19
 29472 0227 01       		.uleb128 0x1
 29473 0228 13       		.uleb128 0x13
 29474 0229 00       		.byte	0
 29475 022a 00       		.byte	0
 29476 022b 28       		.uleb128 0x28
 29477 022c 2E       		.uleb128 0x2e
 29478 022d 01       		.byte	0x1
 29479 022e 3F       		.uleb128 0x3f
 29480 022f 19       		.uleb128 0x19
 29481 0230 03       		.uleb128 0x3
 29482 0231 0E       		.uleb128 0xe
 29483 0232 3A       		.uleb128 0x3a
 29484 0233 0B       		.uleb128 0xb
 29485 0234 3B       		.uleb128 0x3b
 29486 0235 05       		.uleb128 0x5
 29487 0236 27       		.uleb128 0x27
 29488 0237 19       		.uleb128 0x19
 29489 0238 49       		.uleb128 0x49
 29490 0239 13       		.uleb128 0x13
 29491 023a 11       		.uleb128 0x11
 29492 023b 01       		.uleb128 0x1
 29493 023c 12       		.uleb128 0x12
 29494 023d 06       		.uleb128 0x6
 29495 023e 40       		.uleb128 0x40
 29496 023f 18       		.uleb128 0x18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 623


 29497 0240 9642     		.uleb128 0x2116
 29498 0242 19       		.uleb128 0x19
 29499 0243 01       		.uleb128 0x1
 29500 0244 13       		.uleb128 0x13
 29501 0245 00       		.byte	0
 29502 0246 00       		.byte	0
 29503 0247 29       		.uleb128 0x29
 29504 0248 2E       		.uleb128 0x2e
 29505 0249 01       		.byte	0x1
 29506 024a 3F       		.uleb128 0x3f
 29507 024b 19       		.uleb128 0x19
 29508 024c 03       		.uleb128 0x3
 29509 024d 0E       		.uleb128 0xe
 29510 024e 3A       		.uleb128 0x3a
 29511 024f 0B       		.uleb128 0xb
 29512 0250 3B       		.uleb128 0x3b
 29513 0251 05       		.uleb128 0x5
 29514 0252 27       		.uleb128 0x27
 29515 0253 19       		.uleb128 0x19
 29516 0254 11       		.uleb128 0x11
 29517 0255 01       		.uleb128 0x1
 29518 0256 12       		.uleb128 0x12
 29519 0257 06       		.uleb128 0x6
 29520 0258 40       		.uleb128 0x40
 29521 0259 18       		.uleb128 0x18
 29522 025a 9742     		.uleb128 0x2117
 29523 025c 19       		.uleb128 0x19
 29524 025d 01       		.uleb128 0x1
 29525 025e 13       		.uleb128 0x13
 29526 025f 00       		.byte	0
 29527 0260 00       		.byte	0
 29528 0261 2A       		.uleb128 0x2a
 29529 0262 2E       		.uleb128 0x2e
 29530 0263 01       		.byte	0x1
 29531 0264 3F       		.uleb128 0x3f
 29532 0265 19       		.uleb128 0x19
 29533 0266 03       		.uleb128 0x3
 29534 0267 0E       		.uleb128 0xe
 29535 0268 3A       		.uleb128 0x3a
 29536 0269 0B       		.uleb128 0xb
 29537 026a 3B       		.uleb128 0x3b
 29538 026b 05       		.uleb128 0x5
 29539 026c 11       		.uleb128 0x11
 29540 026d 01       		.uleb128 0x1
 29541 026e 12       		.uleb128 0x12
 29542 026f 06       		.uleb128 0x6
 29543 0270 40       		.uleb128 0x40
 29544 0271 18       		.uleb128 0x18
 29545 0272 9742     		.uleb128 0x2117
 29546 0274 19       		.uleb128 0x19
 29547 0275 01       		.uleb128 0x1
 29548 0276 13       		.uleb128 0x13
 29549 0277 00       		.byte	0
 29550 0278 00       		.byte	0
 29551 0279 2B       		.uleb128 0x2b
 29552 027a 0B       		.uleb128 0xb
 29553 027b 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 624


 29554 027c 11       		.uleb128 0x11
 29555 027d 01       		.uleb128 0x1
 29556 027e 12       		.uleb128 0x12
 29557 027f 06       		.uleb128 0x6
 29558 0280 01       		.uleb128 0x1
 29559 0281 13       		.uleb128 0x13
 29560 0282 00       		.byte	0
 29561 0283 00       		.byte	0
 29562 0284 2C       		.uleb128 0x2c
 29563 0285 2E       		.uleb128 0x2e
 29564 0286 00       		.byte	0
 29565 0287 3F       		.uleb128 0x3f
 29566 0288 19       		.uleb128 0x19
 29567 0289 03       		.uleb128 0x3
 29568 028a 0E       		.uleb128 0xe
 29569 028b 3A       		.uleb128 0x3a
 29570 028c 0B       		.uleb128 0xb
 29571 028d 3B       		.uleb128 0x3b
 29572 028e 05       		.uleb128 0x5
 29573 028f 11       		.uleb128 0x11
 29574 0290 01       		.uleb128 0x1
 29575 0291 12       		.uleb128 0x12
 29576 0292 06       		.uleb128 0x6
 29577 0293 40       		.uleb128 0x40
 29578 0294 18       		.uleb128 0x18
 29579 0295 9642     		.uleb128 0x2116
 29580 0297 19       		.uleb128 0x19
 29581 0298 00       		.byte	0
 29582 0299 00       		.byte	0
 29583 029a 2D       		.uleb128 0x2d
 29584 029b 34       		.uleb128 0x34
 29585 029c 00       		.byte	0
 29586 029d 03       		.uleb128 0x3
 29587 029e 0E       		.uleb128 0xe
 29588 029f 3A       		.uleb128 0x3a
 29589 02a0 0B       		.uleb128 0xb
 29590 02a1 3B       		.uleb128 0x3b
 29591 02a2 05       		.uleb128 0x5
 29592 02a3 49       		.uleb128 0x49
 29593 02a4 13       		.uleb128 0x13
 29594 02a5 3F       		.uleb128 0x3f
 29595 02a6 19       		.uleb128 0x19
 29596 02a7 3C       		.uleb128 0x3c
 29597 02a8 19       		.uleb128 0x19
 29598 02a9 00       		.byte	0
 29599 02aa 00       		.byte	0
 29600 02ab 2E       		.uleb128 0x2e
 29601 02ac 34       		.uleb128 0x34
 29602 02ad 00       		.byte	0
 29603 02ae 03       		.uleb128 0x3
 29604 02af 0E       		.uleb128 0xe
 29605 02b0 3A       		.uleb128 0x3a
 29606 02b1 0B       		.uleb128 0xb
 29607 02b2 3B       		.uleb128 0x3b
 29608 02b3 0B       		.uleb128 0xb
 29609 02b4 49       		.uleb128 0x49
 29610 02b5 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 625


 29611 02b6 3F       		.uleb128 0x3f
 29612 02b7 19       		.uleb128 0x19
 29613 02b8 02       		.uleb128 0x2
 29614 02b9 18       		.uleb128 0x18
 29615 02ba 00       		.byte	0
 29616 02bb 00       		.byte	0
 29617 02bc 00       		.byte	0
 29618              		.section	.debug_aranges,"",%progbits
 29619 0000 6C010000 		.4byte	0x16c
 29620 0004 0200     		.2byte	0x2
 29621 0006 00000000 		.4byte	.Ldebug_info0
 29622 000a 04       		.byte	0x4
 29623 000b 00       		.byte	0
 29624 000c 0000     		.2byte	0
 29625 000e 0000     		.2byte	0
 29626 0010 00000000 		.4byte	.LFB64
 29627 0014 DC040000 		.4byte	.LFE64-.LFB64
 29628 0018 00000000 		.4byte	.LFB65
 29629 001c 22000000 		.4byte	.LFE65-.LFB65
 29630 0020 00000000 		.4byte	.LFB66
 29631 0024 02010000 		.4byte	.LFE66-.LFB66
 29632 0028 00000000 		.4byte	.LFB67
 29633 002c EA2E0000 		.4byte	.LFE67-.LFB67
 29634 0030 00000000 		.4byte	.LFB68
 29635 0034 08170000 		.4byte	.LFE68-.LFB68
 29636 0038 00000000 		.4byte	.LFB69
 29637 003c 18140000 		.4byte	.LFE69-.LFB69
 29638 0040 00000000 		.4byte	.LFB70
 29639 0044 F40D0000 		.4byte	.LFE70-.LFB70
 29640 0048 00000000 		.4byte	.LFB71
 29641 004c 88000000 		.4byte	.LFE71-.LFB71
 29642 0050 00000000 		.4byte	.LFB72
 29643 0054 4C1E0000 		.4byte	.LFE72-.LFB72
 29644 0058 00000000 		.4byte	.LFB73
 29645 005c B4030000 		.4byte	.LFE73-.LFB73
 29646 0060 00000000 		.4byte	.LFB74
 29647 0064 E8110000 		.4byte	.LFE74-.LFB74
 29648 0068 00000000 		.4byte	.LFB75
 29649 006c C8000000 		.4byte	.LFE75-.LFB75
 29650 0070 00000000 		.4byte	.LFB76
 29651 0074 30010000 		.4byte	.LFE76-.LFB76
 29652 0078 00000000 		.4byte	.LFB77
 29653 007c 74030000 		.4byte	.LFE77-.LFB77
 29654 0080 00000000 		.4byte	.LFB78
 29655 0084 84000000 		.4byte	.LFE78-.LFB78
 29656 0088 00000000 		.4byte	.LFB79
 29657 008c 88000000 		.4byte	.LFE79-.LFB79
 29658 0090 00000000 		.4byte	.LFB80
 29659 0094 80000000 		.4byte	.LFE80-.LFB80
 29660 0098 00000000 		.4byte	.LFB81
 29661 009c 3E000000 		.4byte	.LFE81-.LFB81
 29662 00a0 00000000 		.4byte	.LFB82
 29663 00a4 2E000000 		.4byte	.LFE82-.LFB82
 29664 00a8 00000000 		.4byte	.LFB83
 29665 00ac 98000000 		.4byte	.LFE83-.LFB83
 29666 00b0 00000000 		.4byte	.LFB84
 29667 00b4 80000000 		.4byte	.LFE84-.LFB84
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 626


 29668 00b8 00000000 		.4byte	.LFB85
 29669 00bc 5C000000 		.4byte	.LFE85-.LFB85
 29670 00c0 00000000 		.4byte	.LFB86
 29671 00c4 CC050000 		.4byte	.LFE86-.LFB86
 29672 00c8 00000000 		.4byte	.LFB87
 29673 00cc 30020000 		.4byte	.LFE87-.LFB87
 29674 00d0 00000000 		.4byte	.LFB88
 29675 00d4 B4000000 		.4byte	.LFE88-.LFB88
 29676 00d8 00000000 		.4byte	.LFB89
 29677 00dc B4000000 		.4byte	.LFE89-.LFB89
 29678 00e0 00000000 		.4byte	.LFB90
 29679 00e4 B8000000 		.4byte	.LFE90-.LFB90
 29680 00e8 00000000 		.4byte	.LFB91
 29681 00ec 44020000 		.4byte	.LFE91-.LFB91
 29682 00f0 00000000 		.4byte	.LFB92
 29683 00f4 C0000000 		.4byte	.LFE92-.LFB92
 29684 00f8 00000000 		.4byte	.LFB93
 29685 00fc 5C000000 		.4byte	.LFE93-.LFB93
 29686 0100 00000000 		.4byte	.LFB94
 29687 0104 3C010000 		.4byte	.LFE94-.LFB94
 29688 0108 00000000 		.4byte	.LFB95
 29689 010c B8000000 		.4byte	.LFE95-.LFB95
 29690 0110 00000000 		.4byte	.LFB96
 29691 0114 5C000000 		.4byte	.LFE96-.LFB96
 29692 0118 00000000 		.4byte	.LFB97
 29693 011c 34000000 		.4byte	.LFE97-.LFB97
 29694 0120 00000000 		.4byte	.LFB98
 29695 0124 20000000 		.4byte	.LFE98-.LFB98
 29696 0128 00000000 		.4byte	.LFB99
 29697 012c 6C000000 		.4byte	.LFE99-.LFB99
 29698 0130 00000000 		.4byte	.LFB100
 29699 0134 BC010000 		.4byte	.LFE100-.LFB100
 29700 0138 00000000 		.4byte	.LFB101
 29701 013c 60000000 		.4byte	.LFE101-.LFB101
 29702 0140 00000000 		.4byte	.LFB102
 29703 0144 98050000 		.4byte	.LFE102-.LFB102
 29704 0148 00000000 		.4byte	.LFB103
 29705 014c 8C000000 		.4byte	.LFE103-.LFB103
 29706 0150 00000000 		.4byte	.LFB104
 29707 0154 EC000000 		.4byte	.LFE104-.LFB104
 29708 0158 00000000 		.4byte	.LFB105
 29709 015c 5C000000 		.4byte	.LFE105-.LFB105
 29710 0160 00000000 		.4byte	.LFB106
 29711 0164 C0000000 		.4byte	.LFE106-.LFB106
 29712 0168 00000000 		.4byte	0
 29713 016c 00000000 		.4byte	0
 29714              		.section	.debug_ranges,"",%progbits
 29715              	.Ldebug_ranges0:
 29716 0000 00000000 		.4byte	.LFB64
 29717 0004 DC040000 		.4byte	.LFE64
 29718 0008 00000000 		.4byte	.LFB65
 29719 000c 22000000 		.4byte	.LFE65
 29720 0010 00000000 		.4byte	.LFB66
 29721 0014 02010000 		.4byte	.LFE66
 29722 0018 00000000 		.4byte	.LFB67
 29723 001c EA2E0000 		.4byte	.LFE67
 29724 0020 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 627


 29725 0024 08170000 		.4byte	.LFE68
 29726 0028 00000000 		.4byte	.LFB69
 29727 002c 18140000 		.4byte	.LFE69
 29728 0030 00000000 		.4byte	.LFB70
 29729 0034 F40D0000 		.4byte	.LFE70
 29730 0038 00000000 		.4byte	.LFB71
 29731 003c 88000000 		.4byte	.LFE71
 29732 0040 00000000 		.4byte	.LFB72
 29733 0044 4C1E0000 		.4byte	.LFE72
 29734 0048 00000000 		.4byte	.LFB73
 29735 004c B4030000 		.4byte	.LFE73
 29736 0050 00000000 		.4byte	.LFB74
 29737 0054 E8110000 		.4byte	.LFE74
 29738 0058 00000000 		.4byte	.LFB75
 29739 005c C8000000 		.4byte	.LFE75
 29740 0060 00000000 		.4byte	.LFB76
 29741 0064 30010000 		.4byte	.LFE76
 29742 0068 00000000 		.4byte	.LFB77
 29743 006c 74030000 		.4byte	.LFE77
 29744 0070 00000000 		.4byte	.LFB78
 29745 0074 84000000 		.4byte	.LFE78
 29746 0078 00000000 		.4byte	.LFB79
 29747 007c 88000000 		.4byte	.LFE79
 29748 0080 00000000 		.4byte	.LFB80
 29749 0084 80000000 		.4byte	.LFE80
 29750 0088 00000000 		.4byte	.LFB81
 29751 008c 3E000000 		.4byte	.LFE81
 29752 0090 00000000 		.4byte	.LFB82
 29753 0094 2E000000 		.4byte	.LFE82
 29754 0098 00000000 		.4byte	.LFB83
 29755 009c 98000000 		.4byte	.LFE83
 29756 00a0 00000000 		.4byte	.LFB84
 29757 00a4 80000000 		.4byte	.LFE84
 29758 00a8 00000000 		.4byte	.LFB85
 29759 00ac 5C000000 		.4byte	.LFE85
 29760 00b0 00000000 		.4byte	.LFB86
 29761 00b4 CC050000 		.4byte	.LFE86
 29762 00b8 00000000 		.4byte	.LFB87
 29763 00bc 30020000 		.4byte	.LFE87
 29764 00c0 00000000 		.4byte	.LFB88
 29765 00c4 B4000000 		.4byte	.LFE88
 29766 00c8 00000000 		.4byte	.LFB89
 29767 00cc B4000000 		.4byte	.LFE89
 29768 00d0 00000000 		.4byte	.LFB90
 29769 00d4 B8000000 		.4byte	.LFE90
 29770 00d8 00000000 		.4byte	.LFB91
 29771 00dc 44020000 		.4byte	.LFE91
 29772 00e0 00000000 		.4byte	.LFB92
 29773 00e4 C0000000 		.4byte	.LFE92
 29774 00e8 00000000 		.4byte	.LFB93
 29775 00ec 5C000000 		.4byte	.LFE93
 29776 00f0 00000000 		.4byte	.LFB94
 29777 00f4 3C010000 		.4byte	.LFE94
 29778 00f8 00000000 		.4byte	.LFB95
 29779 00fc B8000000 		.4byte	.LFE95
 29780 0100 00000000 		.4byte	.LFB96
 29781 0104 5C000000 		.4byte	.LFE96
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 628


 29782 0108 00000000 		.4byte	.LFB97
 29783 010c 34000000 		.4byte	.LFE97
 29784 0110 00000000 		.4byte	.LFB98
 29785 0114 20000000 		.4byte	.LFE98
 29786 0118 00000000 		.4byte	.LFB99
 29787 011c 6C000000 		.4byte	.LFE99
 29788 0120 00000000 		.4byte	.LFB100
 29789 0124 BC010000 		.4byte	.LFE100
 29790 0128 00000000 		.4byte	.LFB101
 29791 012c 60000000 		.4byte	.LFE101
 29792 0130 00000000 		.4byte	.LFB102
 29793 0134 98050000 		.4byte	.LFE102
 29794 0138 00000000 		.4byte	.LFB103
 29795 013c 8C000000 		.4byte	.LFE103
 29796 0140 00000000 		.4byte	.LFB104
 29797 0144 EC000000 		.4byte	.LFE104
 29798 0148 00000000 		.4byte	.LFB105
 29799 014c 5C000000 		.4byte	.LFE105
 29800 0150 00000000 		.4byte	.LFB106
 29801 0154 C0000000 		.4byte	.LFE106
 29802 0158 00000000 		.4byte	0
 29803 015c 00000000 		.4byte	0
 29804              		.section	.debug_line,"",%progbits
 29805              	.Ldebug_line0:
 29806 0000 9A1B0000 		.section	.debug_str,"MS",%progbits,1
 29806      0200C001 
 29806      00000201 
 29806      FB0E0D00 
 29806      01010101 
 29807              	.LASF189:
 29808 0000 696E666F 		.ascii	"infoSend\000"
 29808      53656E64 
 29808      00
 29809              	.LASF240:
 29810 0009 69645F73 		.ascii	"id_str\000"
 29810      747200
 29811              	.LASF25:
 29812 0010 73697A65 		.ascii	"sizetype\000"
 29812      74797065 
 29812      00
 29813              	.LASF33:
 29814 0019 434D445F 		.ascii	"CMD_INIT_MEM\000"
 29814      494E4954 
 29814      5F4D454D 
 29814      00
 29815              	.LASF297:
 29816 0026 676C5F63 		.ascii	"gl_c\000"
 29816      00
 29817              	.LASF62:
 29818 002b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 29818      545F4D4F 
 29818      44455F45 
 29818      4D475F46 
 29818      4346535F 
 29819              	.LASF36:
 29820 0043 434D445F 		.ascii	"CMD_ACTIVATE\000"
 29820      41435449 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 629


 29820      56415445 
 29820      00
 29821              	.LASF175:
 29822 0050 75736572 		.ascii	"user\000"
 29822      00
 29823              	.LASF11:
 29824 0055 696E7433 		.ascii	"int32_t\000"
 29824      325F7400 
 29825              	.LASF311:
 29826 005d 675F7278 		.ascii	"g_rx\000"
 29826      00
 29827              	.LASF93:
 29828 0062 73745F64 		.ascii	"st_data\000"
 29828      61746100 
 29829              	.LASF309:
 29830 006a 675F656D 		.ascii	"g_emg_meas\000"
 29830      675F6D65 
 29830      617300
 29831              	.LASF271:
 29832 0075 77726974 		.ascii	"writeStatus\000"
 29832      65537461 
 29832      74757300 
 29833              	.LASF15:
 29834 0081 75696E74 		.ascii	"uint32\000"
 29834      333200
 29835              	.LASF342:
 29836 0088 636D645F 		.ascii	"cmd_set_baudrate\000"
 29836      7365745F 
 29836      62617564 
 29836      72617465 
 29836      00
 29837              	.LASF248:
 29838 0099 7370695F 		.ascii	"spi_read_delay_str_len\000"
 29838      72656164 
 29838      5F64656C 
 29838      61795F73 
 29838      74725F6C 
 29839              	.LASF205:
 29840 00b0 7061636B 		.ascii	"packet_lenght\000"
 29840      65745F6C 
 29840      656E6768 
 29840      7400
 29841              	.LASF250:
 29842 00be 70726570 		.ascii	"prepare_generic_info\000"
 29842      6172655F 
 29842      67656E65 
 29842      7269635F 
 29842      696E666F 
 29843              	.LASF129:
 29844 00d3 706F735F 		.ascii	"pos_lim_inf\000"
 29844      6C696D5F 
 29844      696E6600 
 29845              	.LASF215:
 29846 00df 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 29846      4E445F4D 
 29846      4F544F52 
 29846      5F494458 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 630


 29846      00
 29847              	.LASF290:
 29848 00f0 636D645F 		.ascii	"cmd_get_inputs\000"
 29848      6765745F 
 29848      696E7075 
 29848      747300
 29849              	.LASF61:
 29850 00ff 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 29850      545F4D4F 
 29850      44455F45 
 29850      4D475F46 
 29850      43465300 
 29851              	.LASF133:
 29852 0113 63757272 		.ascii	"curr_lookup\000"
 29852      5F6C6F6F 
 29852      6B757000 
 29853              	.LASF101:
 29854 011f 72657374 		.ascii	"rest_counter\000"
 29854      5F636F75 
 29854      6E746572 
 29854      00
 29855              	.LASF295:
 29856 012c 636D645F 		.ascii	"cmd_get_imu_readings\000"
 29856      6765745F 
 29856      696D755F 
 29856      72656164 
 29856      696E6773 
 29857              	.LASF243:
 29858 0141 69645F73 		.ascii	"id_str_len\000"
 29858      74725F6C 
 29858      656E00
 29859              	.LASF60:
 29860 014c 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 29860      545F4D4F 
 29860      44455F45 
 29860      4D475F49 
 29860      4E544547 
 29861              	.LASF217:
 29862 0164 6D5F746D 		.ascii	"m_tmp\000"
 29862      7000
 29863              	.LASF16:
 29864 016a 696E7438 		.ascii	"int8\000"
 29864      00
 29865              	.LASF194:
 29866 016f 6765745F 		.ascii	"get_param_list\000"
 29866      70617261 
 29866      6D5F6C69 
 29866      737400
 29867              	.LASF294:
 29868 017e 636D645F 		.ascii	"cmd_get_emg\000"
 29868      6765745F 
 29868      656D6700 
 29869              	.LASF148:
 29870 018a 73745F65 		.ascii	"st_emg\000"
 29870      6D6700
 29871              	.LASF99:
 29872 0191 706F7369 		.ascii	"position_hist\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 631


 29872      74696F6E 
 29872      5F686973 
 29872      7400
 29873              	.LASF182:
 29874 019f 74656D70 		.ascii	"temp_value\000"
 29874      5F76616C 
 29874      756500
 29875              	.LASF341:
 29876 01aa 72657375 		.ascii	"result\000"
 29876      6C7400
 29877              	.LASF96:
 29878 01b1 72656164 		.ascii	"ready\000"
 29878      7900
 29879              	.LASF145:
 29880 01b7 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 29880      6964785F 
 29880      7573655F 
 29880      666F725F 
 29880      636F6E74 
 29881              	.LASF105:
 29882 01cf 73745F64 		.ascii	"st_device\000"
 29882      65766963 
 29882      6500
 29883              	.LASF59:
 29884 01d9 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 29884      545F4D4F 
 29884      44455F45 
 29884      4D475F50 
 29884      524F504F 
 29885              	.LASF110:
 29886 01f5 7573655F 		.ascii	"use_2nd_motor_flag\000"
 29886      326E645F 
 29886      6D6F746F 
 29886      725F666C 
 29886      616700
 29887              	.LASF155:
 29888 0208 72656164 		.ascii	"read_imu_flag\000"
 29888      5F696D75 
 29888      5F666C61 
 29888      6700
 29889              	.LASF315:
 29890 0216 74696D65 		.ascii	"timer_value\000"
 29890      725F7661 
 29890      6C756500 
 29891              	.LASF4:
 29892 0222 6C6F6E67 		.ascii	"long int\000"
 29892      20696E74 
 29892      00
 29893              	.LASF173:
 29894 022b 756E7573 		.ascii	"unused_bytes1\000"
 29894      65645F62 
 29894      79746573 
 29894      3100
 29895              	.LASF109:
 29896 0239 72657365 		.ascii	"reset_counters\000"
 29896      745F636F 
 29896      756E7465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 632


 29896      727300
 29897              	.LASF165:
 29898 0248 75736572 		.ascii	"user_emg\000"
 29898      5F656D67 
 29898      00
 29899              	.LASF278:
 29900 0251 7365745A 		.ascii	"setZeros\000"
 29900      65726F73 
 29900      00
 29901              	.LASF114:
 29902 025a 756E7573 		.ascii	"unused_bytes\000"
 29902      65645F62 
 29902      79746573 
 29902      00
 29903              	.LASF178:
 29904 0267 61636365 		.ascii	"accel_value\000"
 29904      6C5F7661 
 29904      6C756500 
 29905              	.LASF198:
 29906 0273 4E554D5F 		.ascii	"NUM_ITEMS\000"
 29906      4954454D 
 29906      5300
 29907              	.LASF97:
 29908 027d 73745F63 		.ascii	"st_counters\000"
 29908      6F756E74 
 29908      65727300 
 29909              	.LASF221:
 29910 0289 4D454D5F 		.ascii	"MEM_P\000"
 29910      5000
 29911              	.LASF19:
 29912 028f 666C6F61 		.ascii	"float32\000"
 29912      74333200 
 29913              	.LASF301:
 29914 0297 636D645F 		.ascii	"cmd_get_ADC_map\000"
 29914      6765745F 
 29914      4144435F 
 29914      6D617000 
 29915              	.LASF41:
 29916 02a7 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 29916      4745545F 
 29916      43555252 
 29916      454E5453 
 29916      00
 29917              	.LASF98:
 29918 02b8 656D675F 		.ascii	"emg_counter\000"
 29918      636F756E 
 29918      74657200 
 29919              	.LASF302:
 29920 02c4 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 29920      6765745F 
 29920      4144435F 
 29920      72617700 
 29921              	.LASF230:
 29922 02d4 6175785F 		.ascii	"aux_float2\000"
 29922      666C6F61 
 29922      743200
 29923              	.LASF289:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 633


 29924 02df 636D645F 		.ascii	"cmd_ping\000"
 29924      70696E67 
 29924      00
 29925              	.LASF249:
 29926 02e8 7370695F 		.ascii	"spi_delay_menu_len\000"
 29926      64656C61 
 29926      795F6D65 
 29926      6E755F6C 
 29926      656E00
 29927              	.LASF228:
 29928 02fb 7365745F 		.ascii	"set_custom_param\000"
 29928      63757374 
 29928      6F6D5F70 
 29928      6172616D 
 29928      00
 29929              	.LASF0:
 29930 030c 7369676E 		.ascii	"signed char\000"
 29930      65642063 
 29930      68617200 
 29931              	.LASF164:
 29932 0318 75736572 		.ascii	"user_code_string\000"
 29932      5F636F64 
 29932      655F7374 
 29932      72696E67 
 29932      00
 29933              	.LASF183:
 29934 0329 73745F63 		.ascii	"st_calib\000"
 29934      616C6962 
 29934      00
 29935              	.LASF269:
 29936 0332 6D656D53 		.ascii	"memStore\000"
 29936      746F7265 
 29936      00
 29937              	.LASF333:
 29938 033b 73696E67 		.ascii	"single_imu_size\000"
 29938      6C655F69 
 29938      6D755F73 
 29938      697A6500 
 29939              	.LASF68:
 29940 034b 6D6F746F 		.ascii	"motor_supply_type\000"
 29940      725F7375 
 29940      70706C79 
 29940      5F747970 
 29940      6500
 29941              	.LASF323:
 29942 035d 4144435F 		.ascii	"ADC_buf\000"
 29942      62756600 
 29943              	.LASF254:
 29944 0365 73746570 		.ascii	"step\000"
 29944      00
 29945              	.LASF1:
 29946 036a 756E7369 		.ascii	"unsigned char\000"
 29946      676E6564 
 29946      20636861 
 29946      7200
 29947              	.LASF139:
 29948 0378 6E6F745F 		.ascii	"not_revers_motor_flag\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 634


 29948      72657665 
 29948      72735F6D 
 29948      6F746F72 
 29948      5F666C61 
 29949              	.LASF305:
 29950 038e 675F7265 		.ascii	"g_refNew\000"
 29950      664E6577 
 29950      00
 29951              	.LASF108:
 29952 0397 72696768 		.ascii	"right_left\000"
 29952      745F6C65 
 29952      667400
 29953              	.LASF29:
 29954 03a2 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 29954      53544F52 
 29954      455F4445 
 29954      4641554C 
 29954      545F5041 
 29955              	.LASF137:
 29956 03bb 656E636F 		.ascii	"encoder_line\000"
 29956      6465725F 
 29956      6C696E65 
 29956      00
 29957              	.LASF339:
 29958 03c8 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 29958      73657273 
 29958      5C4D6174 
 29958      7469615C 
 29958      446F6375 
 29959 03f6 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Generic.cydsn\000"
 29959      656E6572 
 29959      69632D46 
 29959      572D5053 
 29959      6F43355C 
 29960              	.LASF244:
 29961 0418 6E5F696D 		.ascii	"n_imu_str_len\000"
 29961      755F7374 
 29961      725F6C65 
 29961      6E00
 29962              	.LASF247:
 29963 0426 696D755F 		.ascii	"imu_table_str_len\000"
 29963      7461626C 
 29963      655F7374 
 29963      725F6C65 
 29963      6E00
 29964              	.LASF267:
 29965 0438 76616C75 		.ascii	"value\000"
 29965      6500
 29966              	.LASF177:
 29967 043e 666C6167 		.ascii	"flags\000"
 29967      7300
 29968              	.LASF242:
 29969 0444 7370695F 		.ascii	"spi_read_delay_str\000"
 29969      72656164 
 29969      5F64656C 
 29969      61795F73 
 29969      747200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 635


 29970              	.LASF37:
 29971 0457 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 29971      4745545F 
 29971      41435449 
 29971      56415445 
 29971      00
 29972              	.LASF22:
 29973 0468 63686172 		.ascii	"char\000"
 29973      00
 29974              	.LASF132:
 29975 046d 6D61785F 		.ascii	"max_step_pos\000"
 29975      73746570 
 29975      5F706F73 
 29975      00
 29976              	.LASF273:
 29977 047a 7265745F 		.ascii	"ret_val\000"
 29977      76616C00 
 29978              	.LASF227:
 29979 0482 6D656E75 		.ascii	"menu_idx\000"
 29979      5F696478 
 29979      00
 29980              	.LASF236:
 29981 048b 73746172 		.ascii	"start_byte\000"
 29981      745F6279 
 29981      746500
 29982              	.LASF233:
 29983 0496 6E756D5F 		.ascii	"num_mag_cal_params\000"
 29983      6D61675F 
 29983      63616C5F 
 29983      70617261 
 29983      6D7300
 29984              	.LASF138:
 29985 04a9 70776D5F 		.ascii	"pwm_rate_limiter\000"
 29985      72617465 
 29985      5F6C696D 
 29985      69746572 
 29985      00
 29986              	.LASF118:
 29987 04ba 6B5F645F 		.ascii	"k_d_c\000"
 29987      6300
 29988              	.LASF191:
 29989 04c0 7061636B 		.ascii	"packet_string\000"
 29989      65745F73 
 29989      7472696E 
 29989      6700
 29990              	.LASF143:
 29991 04ce 6D5F6D75 		.ascii	"m_mult\000"
 29991      6C7400
 29992              	.LASF117:
 29993 04d5 6B5F695F 		.ascii	"k_i_c\000"
 29993      6300
 29994              	.LASF270:
 29995 04db 64697370 		.ascii	"displacement\000"
 29995      6C616365 
 29995      6D656E74 
 29995      00
 29996              	.LASF264:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 636


 29997 04e8 64617461 		.ascii	"data_length\000"
 29997      5F6C656E 
 29997      67746800 
 29998              	.LASF130:
 29999 04f4 706F735F 		.ascii	"pos_lim_sup\000"
 29999      6C696D5F 
 29999      73757000 
 30000              	.LASF151:
 30001 0500 656D675F 		.ascii	"emg_speed\000"
 30001      73706565 
 30001      6400
 30002              	.LASF169:
 30003 050a 72657374 		.ascii	"rest_vel\000"
 30003      5F76656C 
 30003      00
 30004              	.LASF204:
 30005 0513 7061636B 		.ascii	"packet_data\000"
 30005      65745F64 
 30005      61746100 
 30006              	.LASF329:
 30007 051f 7046696C 		.ascii	"pFile\000"
 30007      6500
 30008              	.LASF162:
 30009 0525 4144435F 		.ascii	"ADC_conf\000"
 30009      636F6E66 
 30009      00
 30010              	.LASF261:
 30011 052e 636F6D6D 		.ascii	"commWrite\000"
 30011      57726974 
 30011      6500
 30012              	.LASF272:
 30013 0538 70616765 		.ascii	"pages\000"
 30013      7300
 30014              	.LASF276:
 30015 053e 6D656D49 		.ascii	"memInit\000"
 30015      6E697400 
 30016              	.LASF120:
 30017 0546 6B5F695F 		.ascii	"k_i_dl\000"
 30017      646C00
 30018              	.LASF38:
 30019 054d 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 30019      5345545F 
 30019      494E5055 
 30019      545300
 30020              	.LASF94:
 30021 055c 62756666 		.ascii	"buffer\000"
 30021      657200
 30022              	.LASF122:
 30023 0563 6B5F705F 		.ascii	"k_p_c_dl\000"
 30023      635F646C 
 30023      00
 30024              	.LASF279:
 30025 056c 636D645F 		.ascii	"cmd_get_measurements\000"
 30025      6765745F 
 30025      6D656173 
 30025      7572656D 
 30025      656E7473 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 637


 30026              	.LASF186:
 30027 0581 73706565 		.ascii	"speed\000"
 30027      6400
 30028              	.LASF190:
 30029 0587 72785F63 		.ascii	"rx_cmd\000"
 30029      6D6400
 30030              	.LASF83:
 30031 058e 54595045 		.ascii	"TYPE_DOUBLE\000"
 30031      5F444F55 
 30031      424C4500 
 30032              	.LASF307:
 30033 059a 675F6D65 		.ascii	"g_meas\000"
 30033      617300
 30034              	.LASF328:
 30035 05a1 456E636F 		.ascii	"Encoder_Check\000"
 30035      6465725F 
 30035      43686563 
 30035      6B00
 30036              	.LASF283:
 30037 05af 6C617374 		.ascii	"last_aux_int16\000"
 30037      5F617578 
 30037      5F696E74 
 30037      313600
 30038              	.LASF72:
 30039 05be 41434B5F 		.ascii	"ACK_ERROR\000"
 30039      4552524F 
 30039      5200
 30040              	.LASF325:
 30041 05c8 64617461 		.ascii	"data_encoder_raw\000"
 30041      5F656E63 
 30041      6F646572 
 30041      5F726177 
 30041      00
 30042              	.LASF57:
 30043 05d9 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 30043      545F4D4F 
 30043      44455F45 
 30043      58544552 
 30043      4E414C00 
 30044              	.LASF219:
 30045 05ed 696E6465 		.ascii	"index\000"
 30045      7800
 30046              	.LASF170:
 30047 05f3 72657374 		.ascii	"rest_position_flag\000"
 30047      5F706F73 
 30047      6974696F 
 30047      6E5F666C 
 30047      616700
 30048              	.LASF334:
 30049 0606 675F696D 		.ascii	"g_imu\000"
 30049      7500
 30050              	.LASF123:
 30051 060c 6B5F695F 		.ascii	"k_i_c_dl\000"
 30051      635F646C 
 30051      00
 30052              	.LASF239:
 30053 0615 6D61675F 		.ascii	"mag_param_str\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 638


 30053      70617261 
 30053      6D5F7374 
 30053      7200
 30054              	.LASF322:
 30055 0623 72657365 		.ascii	"reset_PSoC_flag\000"
 30055      745F5053 
 30055      6F435F66 
 30055      6C616700 
 30056              	.LASF84:
 30057 0633 54595045 		.ascii	"TYPE_STRING\000"
 30057      5F535452 
 30057      494E4700 
 30058              	.LASF67:
 30059 063f 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 30059      5F414E44 
 30059      5F504F53 
 30059      5F434F4E 
 30059      54524F4C 
 30060              	.LASF28:
 30061 0654 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 30061      53544F52 
 30061      455F5041 
 30061      52414D53 
 30061      00
 30062              	.LASF201:
 30063 0665 50415241 		.ascii	"PARAMS_STR\000"
 30063      4D535F53 
 30063      545200
 30064              	.LASF184:
 30065 0670 656E6162 		.ascii	"enabled\000"
 30065      6C656400 
 30066              	.LASF7:
 30067 0678 6C6F6E67 		.ascii	"long unsigned int\000"
 30067      20756E73 
 30067      69676E65 
 30067      6420696E 
 30067      7400
 30068              	.LASF103:
 30069 068a 746F7461 		.ascii	"total_time_on\000"
 30069      6C5F7469 
 30069      6D655F6F 
 30069      6E00
 30070              	.LASF32:
 30071 0698 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 30071      424F4F54 
 30071      4C4F4144 
 30071      455200
 30072              	.LASF281:
 30073 06a7 636D645F 		.ascii	"cmd_get_accelerations\000"
 30073      6765745F 
 30073      61636365 
 30073      6C657261 
 30073      74696F6E 
 30074              	.LASF104:
 30075 06bd 746F7461 		.ascii	"total_time_rest\000"
 30075      6C5F7469 
 30075      6D655F72 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 639


 30075      65737400 
 30076              	.LASF193:
 30077 06cd 7374725F 		.ascii	"str_sd_data\000"
 30077      73645F64 
 30077      61746100 
 30078              	.LASF125:
 30079 06d9 61637469 		.ascii	"activ\000"
 30079      7600
 30080              	.LASF203:
 30081 06df 4D454E55 		.ascii	"MENU_STR\000"
 30081      5F535452 
 30081      00
 30082              	.LASF142:
 30083 06e8 6D5F6F66 		.ascii	"m_off\000"
 30083      6600
 30084              	.LASF73:
 30085 06ee 41434B5F 		.ascii	"ACK_OK\000"
 30085      4F4B00
 30086              	.LASF75:
 30087 06f5 54595045 		.ascii	"TYPE_FLAG\000"
 30087      5F464C41 
 30087      4700
 30088              	.LASF181:
 30089 06ff 71756174 		.ascii	"quat_value\000"
 30089      5F76616C 
 30089      756500
 30090              	.LASF235:
 30091 070a 7061636B 		.ascii	"packet_length\000"
 30091      65745F6C 
 30091      656E6774 
 30091      6800
 30092              	.LASF167:
 30093 0718 72657374 		.ascii	"rest_pos\000"
 30093      5F706F73 
 30093      00
 30094              	.LASF86:
 30095 0721 63757272 		.ascii	"curr\000"
 30095      00
 30096              	.LASF135:
 30097 0726 696E7075 		.ascii	"input_mode\000"
 30097      745F6D6F 
 30097      646500
 30098              	.LASF65:
 30099 0731 434F4E54 		.ascii	"CONTROL_PWM\000"
 30099      524F4C5F 
 30099      50574D00 
 30100              	.LASF43:
 30101 073d 434D445F 		.ascii	"CMD_GET_EMG\000"
 30101      4745545F 
 30101      454D4700 
 30102              	.LASF277:
 30103 0749 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 30103      6E69745F 
 30103      536F6674 
 30103      48616E64 
 30103      50726F00 
 30104              	.LASF31:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 640


 30105 075d 434D445F 		.ascii	"CMD_GET_INFO\000"
 30105      4745545F 
 30105      494E464F 
 30105      00
 30106              	.LASF231:
 30107 076a 6765745F 		.ascii	"get_IMU_param_list\000"
 30107      494D555F 
 30107      70617261 
 30107      6D5F6C69 
 30107      737400
 30108              	.LASF298:
 30109 077d 73696E67 		.ascii	"single_packet\000"
 30109      6C655F70 
 30109      61636B65 
 30109      7400
 30110              	.LASF234:
 30111 078b 66697273 		.ascii	"first_imu_parameter\000"
 30111      745F696D 
 30111      755F7061 
 30111      72616D65 
 30111      74657200 
 30112              	.LASF42:
 30113 079f 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 30113      4745545F 
 30113      43555252 
 30113      5F414E44 
 30113      5F4D4541 
 30114              	.LASF337:
 30115 07b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 30115      43313120 
 30115      352E342E 
 30115      31203230 
 30115      31363036 
 30116 07e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 30116      20726576 
 30116      6973696F 
 30116      6E203233 
 30116      37373135 
 30117 081b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 30117      66756E63 
 30117      74696F6E 
 30117      2D736563 
 30117      74696F6E 
 30118              	.LASF88:
 30119 0843 73745F72 		.ascii	"st_ref\000"
 30119      656600
 30120              	.LASF47:
 30121 084a 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 30121      5345545F 
 30121      43554646 
 30121      5F494E50 
 30121      55545300 
 30122              	.LASF166:
 30123 085e 73745F53 		.ascii	"st_SH_spec\000"
 30123      485F7370 
 30123      656300
 30124              	.LASF314:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 641


 30125 0869 63616C69 		.ascii	"calib\000"
 30125      6200
 30126              	.LASF6:
 30127 086f 5F5F7569 		.ascii	"__uint32_t\000"
 30127      6E743332 
 30127      5F7400
 30128              	.LASF8:
 30129 087a 6C6F6E67 		.ascii	"long long int\000"
 30129      206C6F6E 
 30129      6720696E 
 30129      7400
 30130              	.LASF63:
 30131 0888 53485F63 		.ascii	"SH_control_mode\000"
 30131      6F6E7472 
 30131      6F6C5F6D 
 30131      6F646500 
 30132              	.LASF77:
 30133 0898 54595045 		.ascii	"TYPE_UINT8\000"
 30133      5F55494E 
 30133      543800
 30134              	.LASF287:
 30135 08a3 636D645F 		.ascii	"cmd_get_currents\000"
 30135      6765745F 
 30135      63757272 
 30135      656E7473 
 30135      00
 30136              	.LASF70:
 30137 08b4 4D41584F 		.ascii	"MAXON_12V\000"
 30137      4E5F3132 
 30137      5600
 30138              	.LASF321:
 30139 08be 6368616E 		.ascii	"change_ext_ref_flag\000"
 30139      67655F65 
 30139      78745F72 
 30139      65665F66 
 30139      6C616700 
 30140              	.LASF21:
 30141 08d2 646F7562 		.ascii	"double\000"
 30141      6C6500
 30142              	.LASF141:
 30143 08d9 456E635F 		.ascii	"Enc_raw_read_conf\000"
 30143      7261775F 
 30143      72656164 
 30143      5F636F6E 
 30143      6600
 30144              	.LASF187:
 30145 08eb 72657065 		.ascii	"repetitions\000"
 30145      74697469 
 30145      6F6E7300 
 30146              	.LASF131:
 30147 08f7 6D61785F 		.ascii	"max_step_neg\000"
 30147      73746570 
 30147      5F6E6567 
 30147      00
 30148              	.LASF320:
 30149 0904 72657365 		.ascii	"reset_last_value_flag\000"
 30149      745F6C61 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 642


 30149      73745F76 
 30149      616C7565 
 30149      5F666C61 
 30150              	.LASF202:
 30151 091a 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 30151      4F4D5F50 
 30151      4152414D 
 30151      5F474554 
 30151      00
 30152              	.LASF20:
 30153 092b 666C6F61 		.ascii	"float\000"
 30153      7400
 30154              	.LASF157:
 30155 0931 494D555F 		.ascii	"IMU_conf\000"
 30155      636F6E66 
 30155      00
 30156              	.LASF220:
 30157 093a 50415241 		.ascii	"PARAM_IDX\000"
 30157      4D5F4944 
 30157      5800
 30158              	.LASF115:
 30159 0944 73745F6D 		.ascii	"st_motor\000"
 30159      6F746F72 
 30159      00
 30160              	.LASF216:
 30161 094d 6D5F6164 		.ascii	"m_addr\000"
 30161      647200
 30162              	.LASF313:
 30163 0954 635F6D65 		.ascii	"c_mem\000"
 30163      6D00
 30164              	.LASF263:
 30165 095a 64617461 		.ascii	"data_array\000"
 30165      5F617272 
 30165      617900
 30166              	.LASF10:
 30167 0965 756E7369 		.ascii	"unsigned int\000"
 30167      676E6564 
 30167      20696E74 
 30167      00
 30168              	.LASF266:
 30169 0972 73656E64 		.ascii	"sendAcknowledgment\000"
 30169      41636B6E 
 30169      6F776C65 
 30169      64676D65 
 30169      6E7400
 30170              	.LASF256:
 30171 0985 70726570 		.ascii	"prepare_SD_legend\000"
 30171      6172655F 
 30171      53445F6C 
 30171      6567656E 
 30171      6400
 30172              	.LASF335:
 30173 0997 4D616743 		.ascii	"MagCal\000"
 30173      616C00
 30174              	.LASF55:
 30175 099e 53485F63 		.ascii	"SH_command\000"
 30175      6F6D6D61 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 643


 30175      6E6400
 30176              	.LASF79:
 30177 09a9 54595045 		.ascii	"TYPE_UINT16\000"
 30177      5F55494E 
 30177      54313600 
 30178              	.LASF172:
 30179 09b5 666C6167 		.ascii	"flag\000"
 30179      00
 30180              	.LASF282:
 30181 09ba 636D645F 		.ascii	"cmd_set_inputs\000"
 30181      7365745F 
 30181      696E7075 
 30181      747300
 30182              	.LASF136:
 30183 09c9 636F6E74 		.ascii	"control_mode\000"
 30183      726F6C5F 
 30183      6D6F6465 
 30183      00
 30184              	.LASF292:
 30185 09d6 6F66665F 		.ascii	"off_1\000"
 30185      3100
 30186              	.LASF58:
 30187 09dc 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 30187      545F4D4F 
 30187      44455F45 
 30187      4E434F44 
 30187      45523300 
 30188              	.LASF51:
 30189 09f0 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 30189      4745545F 
 30189      454E434F 
 30189      4445525F 
 30189      434F4E46 
 30190              	.LASF154:
 30191 0a05 73745F69 		.ascii	"st_imu\000"
 30191      6D7500
 30192              	.LASF285:
 30193 0a0c 636D645F 		.ascii	"cmd_get_activate\000"
 30193      6765745F 
 30193      61637469 
 30193      76617465 
 30193      00
 30194              	.LASF262:
 30195 0a1d 636F6D6D 		.ascii	"commWrite_to_cuff\000"
 30195      57726974 
 30195      655F746F 
 30195      5F637566 
 30195      6600
 30196              	.LASF207:
 30197 0a2f 73747269 		.ascii	"string_lenght\000"
 30197      6E675F6C 
 30197      656E6768 
 30197      7400
 30198              	.LASF82:
 30199 0a3d 54595045 		.ascii	"TYPE_FLOAT\000"
 30199      5F464C4F 
 30199      415400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 644


 30200              	.LASF224:
 30201 0a48 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 30201      4F4D5F50 
 30201      4152414D 
 30201      5F534554 
 30201      5F4C4953 
 30202              	.LASF199:
 30203 0a5e 4E554D5F 		.ascii	"NUM_STRUCT\000"
 30203      53545255 
 30203      435400
 30204              	.LASF229:
 30205 0a69 6175785F 		.ascii	"aux_uchar\000"
 30205      75636861 
 30205      7200
 30206              	.LASF92:
 30207 0a73 6164645F 		.ascii	"add_emg\000"
 30207      656D6700 
 30208              	.LASF78:
 30209 0a7b 54595045 		.ascii	"TYPE_INT16\000"
 30209      5F494E54 
 30209      313600
 30210              	.LASF211:
 30211 0a86 6175785F 		.ascii	"aux_uint16\000"
 30211      75696E74 
 30211      313600
 30212              	.LASF149:
 30213 0a91 656D675F 		.ascii	"emg_threshold\000"
 30213      74687265 
 30213      73686F6C 
 30213      6400
 30214              	.LASF46:
 30215 0a9f 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 30215      4745545F 
 30215      43555252 
 30215      5F444946 
 30215      4600
 30216              	.LASF100:
 30217 0ab1 63757272 		.ascii	"current_hist\000"
 30217      656E745F 
 30217      68697374 
 30217      00
 30218              	.LASF66:
 30219 0abe 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 30219      524F4C5F 
 30219      43555252 
 30219      454E5400 
 30220              	.LASF24:
 30221 0ace 6C6F6E67 		.ascii	"long double\000"
 30221      20646F75 
 30221      626C6500 
 30222              	.LASF81:
 30223 0ada 54595045 		.ascii	"TYPE_UINT32\000"
 30223      5F55494E 
 30223      54333200 
 30224              	.LASF91:
 30225 0ae6 73745F65 		.ascii	"st_emg_meas\000"
 30225      6D675F6D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 645


 30225      65617300 
 30226              	.LASF196:
 30227 0af2 5641525F 		.ascii	"VAR_P\000"
 30227      5000
 30228              	.LASF223:
 30229 0af8 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 30229      4F4D5F50 
 30229      4152414D 
 30229      5F474554 
 30229      5F4C4953 
 30230              	.LASF146:
 30231 0b0e 6D6F746F 		.ascii	"motor_handle_ratio\000"
 30231      725F6861 
 30231      6E646C65 
 30231      5F726174 
 30231      696F00
 30232              	.LASF265:
 30233 0b21 63686563 		.ascii	"checksum\000"
 30233      6B73756D 
 30233      00
 30234              	.LASF306:
 30235 0b2a 675F7265 		.ascii	"g_refOld\000"
 30235      664F6C64 
 30235      00
 30236              	.LASF35:
 30237 0b33 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 30237      48414E44 
 30237      5F43414C 
 30237      49425241 
 30237      544500
 30238              	.LASF179:
 30239 0b46 6779726F 		.ascii	"gyro_value\000"
 30239      5F76616C 
 30239      756500
 30240              	.LASF159:
 30241 0b51 63757272 		.ascii	"curr_time\000"
 30241      5F74696D 
 30241      6500
 30242              	.LASF144:
 30243 0b5b 646F7562 		.ascii	"double_encoder_on_off\000"
 30243      6C655F65 
 30243      6E636F64 
 30243      65725F6F 
 30243      6E5F6F66 
 30244              	.LASF156:
 30245 0b71 5350495F 		.ascii	"SPI_read_delay\000"
 30245      72656164 
 30245      5F64656C 
 30245      617900
 30246              	.LASF71:
 30247 0b80 61636B6E 		.ascii	"acknowledgment_values\000"
 30247      6F776C65 
 30247      64676D65 
 30247      6E745F76 
 30247      616C7565 
 30248              	.LASF214:
 30249 0b96 4D4F544F 		.ascii	"MOTOR_IDX\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 646


 30249      525F4944 
 30249      5800
 30250              	.LASF275:
 30251 0ba0 6D656D52 		.ascii	"memRestore\000"
 30251      6573746F 
 30251      726500
 30252              	.LASF237:
 30253 0bab 6E5F696D 		.ascii	"n_imu_str\000"
 30253      755F7374 
 30253      7200
 30254              	.LASF251:
 30255 0bb5 696E666F 		.ascii	"info_string\000"
 30255      5F737472 
 30255      696E6700 
 30256              	.LASF257:
 30257 0bc1 70726570 		.ascii	"prepare_SD_info\000"
 30257      6172655F 
 30257      53445F69 
 30257      6E666F00 
 30258              	.LASF9:
 30259 0bd1 6C6F6E67 		.ascii	"long long unsigned int\000"
 30259      206C6F6E 
 30259      6720756E 
 30259      7369676E 
 30259      65642069 
 30260              	.LASF80:
 30261 0be8 54595045 		.ascii	"TYPE_INT32\000"
 30261      5F494E54 
 30261      333200
 30262              	.LASF213:
 30263 0bf3 6175785F 		.ascii	"aux_uint32\000"
 30263      75696E74 
 30263      333200
 30264              	.LASF95:
 30265 0bfe 6C656E67 		.ascii	"length\000"
 30265      746800
 30266              	.LASF225:
 30267 0c05 55534552 		.ascii	"USER_ID_PARAM\000"
 30267      5F49445F 
 30267      50415241 
 30267      4D00
 30268              	.LASF176:
 30269 0c13 73745F69 		.ascii	"st_imu_data\000"
 30269      6D755F64 
 30269      61746100 
 30270              	.LASF180:
 30271 0c1f 6D61675F 		.ascii	"mag_value\000"
 30271      76616C75 
 30271      6500
 30272              	.LASF87:
 30273 0c29 6F6E6F66 		.ascii	"onoff\000"
 30273      6600
 30274              	.LASF45:
 30275 0c2f 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 30275      4745545F 
 30275      41434345 
 30275      4C00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 647


 30276              	.LASF280:
 30277 0c3d 636D645F 		.ascii	"cmd_get_velocities\000"
 30277      6765745F 
 30277      76656C6F 
 30277      63697469 
 30277      657300
 30278              	.LASF274:
 30279 0c50 6D656D52 		.ascii	"memRecall\000"
 30279      6563616C 
 30279      6C00
 30280              	.LASF316:
 30281 0c5a 74696D65 		.ascii	"timer_value0\000"
 30281      725F7661 
 30281      6C756530 
 30281      00
 30282              	.LASF48:
 30283 0c67 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 30283      5345545F 
 30283      42415544 
 30283      52415445 
 30283      00
 30284              	.LASF116:
 30285 0c78 6B5F705F 		.ascii	"k_p_c\000"
 30285      6300
 30286              	.LASF241:
 30287 0c7e 696D755F 		.ascii	"imu_table_str\000"
 30287      7461626C 
 30287      655F7374 
 30287      7200
 30288              	.LASF317:
 30289 0c8c 6465765F 		.ascii	"dev_tension\000"
 30289      74656E73 
 30289      696F6E00 
 30290              	.LASF127:
 30291 0c98 6D6F746F 		.ascii	"motor_driver_type\000"
 30291      725F6472 
 30291      69766572 
 30291      5F747970 
 30291      6500
 30292              	.LASF293:
 30293 0caa 6D756C74 		.ascii	"mult_1\000"
 30293      5F3100
 30294              	.LASF23:
 30295 0cb1 72656738 		.ascii	"reg8\000"
 30295      00
 30296              	.LASF259:
 30297 0cb6 636F6D6D 		.ascii	"commWrite_old_id\000"
 30297      57726974 
 30297      655F6F6C 
 30297      645F6964 
 30297      00
 30298              	.LASF218:
 30299 0cc7 6D616E61 		.ascii	"manage_param_list\000"
 30299      67655F70 
 30299      6172616D 
 30299      5F6C6973 
 30299      7400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 648


 30300              	.LASF30:
 30301 0cd9 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 30301      52455354 
 30301      4F52455F 
 30301      50415241 
 30301      4D5300
 30302              	.LASF255:
 30303 0cec 70726570 		.ascii	"prepare_SD_param_info\000"
 30303      6172655F 
 30303      53445F70 
 30303      6172616D 
 30303      5F696E66 
 30304              	.LASF253:
 30305 0d02 70726570 		.ascii	"prepare_counter_info\000"
 30305      6172655F 
 30305      636F756E 
 30305      7465725F 
 30305      696E666F 
 30306              	.LASF260:
 30307 0d17 6F6C645F 		.ascii	"old_id\000"
 30307      696400
 30308              	.LASF340:
 30309 0d1e 5F5F5245 		.ascii	"__REV16\000"
 30309      56313600 
 30310              	.LASF326:
 30311 0d26 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 30311      636F6465 
 30311      725F4C69 
 30311      6E655F43 
 30311      6F6E6E65 
 30312              	.LASF113:
 30313 0d3f 6465765F 		.ascii	"dev_type\000"
 30313      74797065 
 30313      00
 30314              	.LASF163:
 30315 0d48 73745F75 		.ascii	"st_user\000"
 30315      73657200 
 30316              	.LASF286:
 30317 0d50 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 30317      6765745F 
 30317      63757272 
 30317      5F616E64 
 30317      5F6D6561 
 30318              	.LASF147:
 30319 0d66 67656172 		.ascii	"gears_params\000"
 30319      735F7061 
 30319      72616D73 
 30319      00
 30320              	.LASF158:
 30321 0d73 73745F65 		.ascii	"st_expansion\000"
 30321      7870616E 
 30321      73696F6E 
 30321      00
 30322              	.LASF152:
 30323 0d80 656D675F 		.ascii	"emg_calibration_flag\000"
 30323      63616C69 
 30323      62726174 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 649


 30323      696F6E5F 
 30323      666C6167 
 30324              	.LASF89:
 30325 0d95 73745F6D 		.ascii	"st_meas\000"
 30325      65617300 
 30326              	.LASF54:
 30327 0d9d 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 30327      4745545F 
 30327      4144435F 
 30327      52415700 
 30328              	.LASF69:
 30329 0dad 4D41584F 		.ascii	"MAXON_24V\000"
 30329      4E5F3234 
 30329      5600
 30330              	.LASF50:
 30331 0db7 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 30331      4745545F 
 30331      494D555F 
 30331      50415241 
 30331      4D00
 30332              	.LASF52:
 30333 0dc9 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 30333      4745545F 
 30333      454E434F 
 30333      4445525F 
 30333      52415700 
 30334              	.LASF291:
 30335 0ddd 636D645F 		.ascii	"cmd_store_params\000"
 30335      73746F72 
 30335      655F7061 
 30335      72616D73 
 30335      00
 30336              	.LASF312:
 30337 0dee 675F6D65 		.ascii	"g_mem\000"
 30337      6D00
 30338              	.LASF40:
 30339 0df4 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 30339      4745545F 
 30339      4D454153 
 30339      5552454D 
 30339      454E5453 
 30340              	.LASF300:
 30341 0e09 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 30341      6765745F 
 30341      656E636F 
 30341      6465725F 
 30341      72617700 
 30342              	.LASF13:
 30343 0e1d 75696E74 		.ascii	"uint8\000"
 30343      3800
 30344              	.LASF188:
 30345 0e23 636F6D6D 		.ascii	"commProcess\000"
 30345      50726F63 
 30345      65737300 
 30346              	.LASF2:
 30347 0e2f 73686F72 		.ascii	"short int\000"
 30347      7420696E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 650


 30347      7400
 30348              	.LASF245:
 30349 0e39 6964735F 		.ascii	"ids_str_len\000"
 30349      7374725F 
 30349      6C656E00 
 30350              	.LASF121:
 30351 0e45 6B5F645F 		.ascii	"k_d_dl\000"
 30351      646C00
 30352              	.LASF206:
 30353 0e4c 6964785F 		.ascii	"idx_menu\000"
 30353      6D656E75 
 30353      00
 30354              	.LASF174:
 30355 0e55 6D6F746F 		.ascii	"motor\000"
 30355      7200
 30356              	.LASF330:
 30357 0e5b 4E5F494D 		.ascii	"N_IMU_Connected\000"
 30357      555F436F 
 30357      6E6E6563 
 30357      74656400 
 30358              	.LASF39:
 30359 0e6b 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 30359      4745545F 
 30359      494E5055 
 30359      545300
 30360              	.LASF106:
 30361 0e7a 68775F6D 		.ascii	"hw_maint_date\000"
 30361      61696E74 
 30361      5F646174 
 30361      6500
 30362              	.LASF238:
 30363 0e88 6964735F 		.ascii	"ids_str\000"
 30363      73747200 
 30364              	.LASF53:
 30365 0e90 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 30365      4745545F 
 30365      4144435F 
 30365      434F4E46 
 30365      00
 30366              	.LASF27:
 30367 0ea1 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 30367      5345545F 
 30367      5A45524F 
 30367      5300
 30368              	.LASF246:
 30369 0eaf 6D61675F 		.ascii	"mag_param_str_len\000"
 30369      70617261 
 30369      6D5F7374 
 30369      725F6C65 
 30369      6E00
 30370              	.LASF232:
 30371 0ec1 6E756D5F 		.ascii	"num_imus_id_params\000"
 30371      696D7573 
 30371      5F69645F 
 30371      70617261 
 30371      6D7300
 30372              	.LASF210:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 651


 30373 0ed4 6175785F 		.ascii	"aux_int16\000"
 30373      696E7431 
 30373      3600
 30374              	.LASF336:
 30375 0ede 45455052 		.ascii	"EEPROM_ADDR\000"
 30375      4F4D5F41 
 30375      44445200 
 30376              	.LASF107:
 30377 0eea 73746174 		.ascii	"stats_period_begin_date\000"
 30377      735F7065 
 30377      72696F64 
 30377      5F626567 
 30377      696E5F64 
 30378              	.LASF332:
 30379 0f02 696D7573 		.ascii	"imus_data_size\000"
 30379      5F646174 
 30379      615F7369 
 30379      7A6500
 30380              	.LASF303:
 30381 0f11 49544D5F 		.ascii	"ITM_RxBuffer\000"
 30381      52784275 
 30381      66666572 
 30381      00
 30382              	.LASF44:
 30383 0f1e 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 30383      4745545F 
 30383      56454C4F 
 30383      43495449 
 30383      455300
 30384              	.LASF319:
 30385 0f31 706F775F 		.ascii	"pow_tension\000"
 30385      74656E73 
 30385      696F6E00 
 30386              	.LASF34:
 30387 0f3d 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 30387      4745545F 
 30387      50415241 
 30387      4D5F4C49 
 30387      535400
 30388              	.LASF74:
 30389 0f50 64617461 		.ascii	"data_types\000"
 30389      5F747970 
 30389      657300
 30390              	.LASF17:
 30391 0f5b 696E7431 		.ascii	"int16\000"
 30391      3600
 30392              	.LASF160:
 30393 0f61 72656164 		.ascii	"read_exp_port_flag\000"
 30393      5F657870 
 30393      5F706F72 
 30393      745F666C 
 30393      616700
 30394              	.LASF153:
 30395 0f74 73776974 		.ascii	"switch_emg\000"
 30395      63685F65 
 30395      6D6700
 30396              	.LASF126:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 652


 30397 0f7f 61637469 		.ascii	"activate_pwm_rescaling\000"
 30397      76617465 
 30397      5F70776D 
 30397      5F726573 
 30397      63616C69 
 30398              	.LASF119:
 30399 0f96 6B5F705F 		.ascii	"k_p_dl\000"
 30399      646C00
 30400              	.LASF90:
 30401 0f9d 65737469 		.ascii	"estim_curr\000"
 30401      6D5F6375 
 30401      727200
 30402              	.LASF318:
 30403 0fa8 6465765F 		.ascii	"dev_pwm_limit\000"
 30403      70776D5F 
 30403      6C696D69 
 30403      7400
 30404              	.LASF161:
 30405 0fb6 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 30405      5F414443 
 30405      5F73656E 
 30405      736F7273 
 30405      5F706F72 
 30406              	.LASF327:
 30407 0fd1 456E636F 		.ascii	"Encoder_Value\000"
 30407      6465725F 
 30407      56616C75 
 30407      6500
 30408              	.LASF299:
 30409 0fdf 636D645F 		.ascii	"cmd_get_encoder_map\000"
 30409      6765745F 
 30409      656E636F 
 30409      6465725F 
 30409      6D617000 
 30410              	.LASF112:
 30411 0ff3 75736572 		.ascii	"user_id\000"
 30411      5F696400 
 30412              	.LASF12:
 30413 0ffb 75696E74 		.ascii	"uint32_t\000"
 30413      33325F74 
 30413      00
 30414              	.LASF209:
 30415 1004 6175785F 		.ascii	"aux_float\000"
 30415      666C6F61 
 30415      7400
 30416              	.LASF331:
 30417 100e 494D555F 		.ascii	"IMU_connected\000"
 30417      636F6E6E 
 30417      65637465 
 30417      6400
 30418              	.LASF200:
 30419 101c 4E554D5F 		.ascii	"NUM_MENU\000"
 30419      4D454E55 
 30419      00
 30420              	.LASF212:
 30421 1025 6175785F 		.ascii	"aux_int32\000"
 30421      696E7433 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 653


 30421      3200
 30422              	.LASF111:
 30423 102f 62617564 		.ascii	"baud_rate\000"
 30423      5F726174 
 30423      6500
 30424              	.LASF288:
 30425 1039 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 30425      6765745F 
 30425      63757272 
 30425      656E7473 
 30425      5F666F72 
 30426              	.LASF195:
 30427 1053 696E666F 		.ascii	"info_type\000"
 30427      5F747970 
 30427      6500
 30428              	.LASF49:
 30429 105d 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 30429      4745545F 
 30429      494D555F 
 30429      52454144 
 30429      494E4753 
 30430              	.LASF268:
 30431 1072 4C435243 		.ascii	"LCRChecksum\000"
 30431      6865636B 
 30431      73756D00 
 30432              	.LASF296:
 30433 107e 6B5F696D 		.ascii	"k_imu\000"
 30433      7500
 30434              	.LASF3:
 30435 1084 73686F72 		.ascii	"short unsigned int\000"
 30435      7420756E 
 30435      7369676E 
 30435      65642069 
 30435      6E7400
 30436              	.LASF140:
 30437 1097 73745F65 		.ascii	"st_encoder\000"
 30437      6E636F64 
 30437      657200
 30438              	.LASF252:
 30439 10a2 454E435F 		.ascii	"ENC_L\000"
 30439      4C00
 30440              	.LASF171:
 30441 10a8 73745F65 		.ascii	"st_eeprom\000"
 30441      6570726F 
 30441      6D00
 30442              	.LASF197:
 30443 10b2 54595045 		.ascii	"TYPES\000"
 30443      5300
 30444              	.LASF304:
 30445 10b8 675F7265 		.ascii	"g_ref\000"
 30445      6600
 30446              	.LASF18:
 30447 10be 696E7433 		.ascii	"int32\000"
 30447      3200
 30448              	.LASF324:
 30449 10c4 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 30449      4F465F41 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 654


 30449      4E414C4F 
 30449      475F494E 
 30449      50555453 
 30450              	.LASF192:
 30451 10d9 696E666F 		.ascii	"infoGet\000"
 30451      47657400 
 30452              	.LASF85:
 30453 10e1 46535F46 		.ascii	"FS_FILE\000"
 30453      494C4500 
 30454              	.LASF128:
 30455 10e9 706F735F 		.ascii	"pos_lim_flag\000"
 30455      6C696D5F 
 30455      666C6167 
 30455      00
 30456              	.LASF308:
 30457 10f6 675F6D65 		.ascii	"g_measOld\000"
 30457      61734F6C 
 30457      6400
 30458              	.LASF64:
 30459 1100 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 30459      524F4C5F 
 30459      414E474C 
 30459      4500
 30460              	.LASF284:
 30461 110e 636D645F 		.ascii	"cmd_activate\000"
 30461      61637469 
 30461      76617465 
 30461      00
 30462              	.LASF5:
 30463 111b 5F5F696E 		.ascii	"__int32_t\000"
 30463      7433325F 
 30463      7400
 30464              	.LASF222:
 30465 1125 7370695F 		.ascii	"spi_delay_menu\000"
 30465      64656C61 
 30465      795F6D65 
 30465      6E7500
 30466              	.LASF102:
 30467 1134 77697265 		.ascii	"wire_disp\000"
 30467      5F646973 
 30467      7000
 30468              	.LASF150:
 30469 113e 656D675F 		.ascii	"emg_max_value\000"
 30469      6D61785F 
 30469      76616C75 
 30469      6500
 30470              	.LASF226:
 30471 114c 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 30471      4F4D5F50 
 30471      4152414D 
 30471      5F534554 
 30471      00
 30472              	.LASF338:
 30473 115d 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 30473      72635C63 
 30473      6F6D6D61 
 30473      6E645F70 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSx6Bte.s 			page 655


 30473      726F6365 
 30474              	.LASF134:
 30475 1179 63757272 		.ascii	"current_limit\000"
 30475      656E745F 
 30475      6C696D69 
 30475      7400
 30476              	.LASF56:
 30477 1187 53485F69 		.ascii	"SH_input_mode\000"
 30477      6E707574 
 30477      5F6D6F64 
 30477      6500
 30478              	.LASF76:
 30479 1195 54595045 		.ascii	"TYPE_INT8\000"
 30479      5F494E54 
 30479      3800
 30480              	.LASF258:
 30481 119f 494D555F 		.ascii	"IMU_reading_info\000"
 30481      72656164 
 30481      696E675F 
 30481      696E666F 
 30481      00
 30482              	.LASF14:
 30483 11b0 75696E74 		.ascii	"uint16\000"
 30483      313600
 30484              	.LASF310:
 30485 11b7 675F656D 		.ascii	"g_emg_measOld\000"
 30485      675F6D65 
 30485      61734F6C 
 30485      6400
 30486              	.LASF168:
 30487 11c5 72657374 		.ascii	"rest_delay\000"
 30487      5F64656C 
 30487      617900
 30488              	.LASF208:
 30489 11d0 6175785F 		.ascii	"aux_str\000"
 30489      73747200 
 30490              	.LASF26:
 30491 11d8 434D445F 		.ascii	"CMD_PING\000"
 30491      50494E47 
 30491      00
 30492              	.LASF124:
 30493 11e1 6B5F645F 		.ascii	"k_d_c_dl\000"
 30493      635F646C 
 30493      00
 30494              	.LASF185:
 30495 11ea 64697265 		.ascii	"direction\000"
 30495      6374696F 
 30495      6E00
 30496              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
