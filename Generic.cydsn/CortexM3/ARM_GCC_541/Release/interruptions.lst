ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"interruptions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              		.type	pwm_preload_values, %object
  22              		.size	pwm_preload_values, 29
  23              	pwm_preload_values:
  24 0000 64       		.byte	100
  25 0001 53       		.byte	83
  26 0002 4E       		.byte	78
  27 0003 4C       		.byte	76
  28 0004 4A       		.byte	74
  29 0005 48       		.byte	72
  30 0006 46       		.byte	70
  31 0007 44       		.byte	68
  32 0008 43       		.byte	67
  33 0009 41       		.byte	65
  34 000a 40       		.byte	64
  35 000b 3F       		.byte	63
  36 000c 3E       		.byte	62
  37 000d 3D       		.byte	61
  38 000e 3C       		.byte	60
  39 000f 3B       		.byte	59
  40 0010 3A       		.byte	58
  41 0011 39       		.byte	57
  42 0012 38       		.byte	56
  43 0013 38       		.byte	56
  44 0014 37       		.byte	55
  45 0015 36       		.byte	54
  46 0016 36       		.byte	54
  47 0017 35       		.byte	53
  48 0018 34       		.byte	52
  49 0019 34       		.byte	52
  50 001a 34       		.byte	52
  51 001b 33       		.byte	51
  52 001c 33       		.byte	51
  53              		.section	.text.ISR_RS485_RX_ExInterrupt,"ax",%progbits
  54              		.align	2
  55              		.global	ISR_RS485_RX_ExInterrupt
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 2


  58              		.type	ISR_RS485_RX_ExInterrupt, %function
  59              	ISR_RS485_RX_ExInterrupt:
  60              	.LFB64:
  61              		.file 1 "..\\src\\interruptions.c"
   1:..\src/interruptions.c **** // ----------------------------------------------------------------------------
   2:..\src/interruptions.c **** // BSD 3-Clause License
   3:..\src/interruptions.c **** 
   4:..\src/interruptions.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/interruptions.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/interruptions.c **** // All rights reserved.
   7:..\src/interruptions.c **** 
   8:..\src/interruptions.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/interruptions.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/interruptions.c **** 
  11:..\src/interruptions.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/interruptions.c **** //   list of conditions and the following disclaimer.
  13:..\src/interruptions.c **** 
  14:..\src/interruptions.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/interruptions.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/interruptions.c **** //   and/or other materials provided with the distribution.
  17:..\src/interruptions.c **** 
  18:..\src/interruptions.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/interruptions.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/interruptions.c **** //   this software without specific prior written permission.
  21:..\src/interruptions.c **** 
  22:..\src/interruptions.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/interruptions.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:..\src/interruptions.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/interruptions.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/interruptions.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/interruptions.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/interruptions.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/interruptions.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/interruptions.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/interruptions.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/interruptions.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/interruptions.c **** // ----------------------------------------------------------------------------
  34:..\src/interruptions.c **** 
  35:..\src/interruptions.c **** /**
  36:..\src/interruptions.c **** * \file         interruptions.c
  37:..\src/interruptions.c **** *
  38:..\src/interruptions.c **** * \brief        Interruption handling and firmware core functions
  39:..\src/interruptions.c **** * \date         March 20th, 2020
  40:..\src/interruptions.c **** * \author       _Centro "E.Piaggio"_
  41:..\src/interruptions.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42:..\src/interruptions.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  43:..\src/interruptions.c **** */
  44:..\src/interruptions.c **** 
  45:..\src/interruptions.c **** 
  46:..\src/interruptions.c **** //=================================================================     includes
  47:..\src/interruptions.c **** #include "interruptions.h"
  48:..\src/interruptions.c **** 
  49:..\src/interruptions.c **** //==============================================================================
  50:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  51:..\src/interruptions.c **** //==============================================================================
  52:..\src/interruptions.c **** // Processing RS-485 data frame:
  53:..\src/interruptions.c **** //
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 3


  54:..\src/interruptions.c **** // - 0:     Waits for beginning characters
  55:..\src/interruptions.c **** // - 1:     Waits for ID;
  56:..\src/interruptions.c **** // - 2:     Data length;
  57:..\src/interruptions.c **** // - 3:     Receive all bytes;
  58:..\src/interruptions.c **** // - 4:     Wait for another device end of transmission;
  59:..\src/interruptions.c **** //
  60:..\src/interruptions.c **** //==============================================================================
  61:..\src/interruptions.c **** 
  62:..\src/interruptions.c **** // PWM values needed to obtain 11.5 V given a certain input tension
  63:..\src/interruptions.c **** // Numbers are sperimentally calculated //[index] (millivolts)
  64:..\src/interruptions.c **** static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  65:..\src/interruptions.c ****                                               83,
  66:..\src/interruptions.c ****                                               78,
  67:..\src/interruptions.c ****                                               76,
  68:..\src/interruptions.c ****                                               74,
  69:..\src/interruptions.c ****                                               72,    //5 (14000)
  70:..\src/interruptions.c ****                                               70,
  71:..\src/interruptions.c ****                                               68,
  72:..\src/interruptions.c ****                                               67,
  73:..\src/interruptions.c ****                                               65,
  74:..\src/interruptions.c ****                                               64,    //10 (16500)
  75:..\src/interruptions.c ****                                               63,
  76:..\src/interruptions.c ****                                               62,
  77:..\src/interruptions.c ****                                               61,
  78:..\src/interruptions.c ****                                               60,
  79:..\src/interruptions.c ****                                               59,    //15 (19000)
  80:..\src/interruptions.c ****                                               58,
  81:..\src/interruptions.c ****                                               57,
  82:..\src/interruptions.c ****                                               56,
  83:..\src/interruptions.c ****                                               56,
  84:..\src/interruptions.c ****                                               55,    //20 (21500)
  85:..\src/interruptions.c ****                                               54,
  86:..\src/interruptions.c ****                                               54,
  87:..\src/interruptions.c ****                                               53,
  88:..\src/interruptions.c ****                                               52,
  89:..\src/interruptions.c ****                                               52,    //25 (24000)
  90:..\src/interruptions.c ****                                               52,
  91:..\src/interruptions.c ****                                               51,
  92:..\src/interruptions.c ****                                               51};   //28 (25500)
  93:..\src/interruptions.c **** 
  94:..\src/interruptions.c **** //==============================================================================
  95:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  96:..\src/interruptions.c **** //==============================================================================
  97:..\src/interruptions.c **** 
  98:..\src/interruptions.c **** CY_ISR(ISR_RS485_RX_ExInterrupt) {
  62              		.loc 1 98 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  99:..\src/interruptions.c **** 
 100:..\src/interruptions.c ****     // Set RS485 flag
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 4


 101:..\src/interruptions.c ****     
 102:..\src/interruptions.c ****     interrupt_flag = TRUE;
  72              		.loc 1 102 0
  73 0004 034B     		ldr	r3, .L2
  74 0006 0122     		movs	r2, #1
  75 0008 1A70     		strb	r2, [r3]
 103:..\src/interruptions.c ****      
 104:..\src/interruptions.c **** }
  76              		.loc 1 104 0
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000e 80BC     		pop	{r7}
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0010 7047     		bx	lr
  85              	.L3:
  86 0012 00BF     		.align	2
  87              	.L2:
  88 0014 00000000 		.word	interrupt_flag
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	ISR_RS485_RX_ExInterrupt, .-ISR_RS485_RX_ExInterrupt
  92              		.section	.text.ISR_CYCLES_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	ISR_CYCLES_Handler
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR_CYCLES_Handler, %function
  98              	ISR_CYCLES_Handler:
  99              	.LFB65:
 105:..\src/interruptions.c **** 
 106:..\src/interruptions.c **** //==============================================================================
 107:..\src/interruptions.c **** //                                                        CYCLES TIMER INTERRUPT
 108:..\src/interruptions.c **** //==============================================================================
 109:..\src/interruptions.c **** CY_ISR(ISR_CYCLES_Handler){
 100              		.loc 1 109 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110:..\src/interruptions.c **** 
 111:..\src/interruptions.c ****     // Set cycles interrupt flag
 112:..\src/interruptions.c ****     
 113:..\src/interruptions.c ****     cycles_interrupt_flag = TRUE;
 110              		.loc 1 113 0
 111 0004 044B     		ldr	r3, .L5
 112 0006 0122     		movs	r2, #1
 113 0008 1A70     		strb	r2, [r3]
 114:..\src/interruptions.c ****     
 115:..\src/interruptions.c ****     CYCLES_TIMER_STATUS;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 5


 114              		.loc 1 115 0
 115 000a 044B     		ldr	r3, .L5+4
 116 000c 1B78     		ldrb	r3, [r3]
 116:..\src/interruptions.c **** 
 117:..\src/interruptions.c **** }
 117              		.loc 1 117 0
 118 000e 00BF     		nop
 119 0010 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0014 7047     		bx	lr
 126              	.L6:
 127 0016 00BF     		.align	2
 128              	.L5:
 129 0018 00000000 		.word	cycles_interrupt_flag
 130 001c 034F0040 		.word	1073762051
 131              		.cfi_endproc
 132              	.LFE65:
 133              		.size	ISR_CYCLES_Handler, .-ISR_CYCLES_Handler
 134              		.section	.text.interrupt_manager,"ax",%progbits
 135              		.align	2
 136              		.global	interrupt_manager
 137              		.thumb
 138              		.thumb_func
 139              		.type	interrupt_manager, %function
 140              	interrupt_manager:
 141              	.LFB66:
 118:..\src/interruptions.c **** 
 119:..\src/interruptions.c **** //==============================================================================
 120:..\src/interruptions.c **** //                                                             INTERRUPT MANAGER
 121:..\src/interruptions.c **** //==============================================================================
 122:..\src/interruptions.c **** // Manage interrupt from RS485 
 123:..\src/interruptions.c **** //==============================================================================
 124:..\src/interruptions.c **** // Processing RS-485 data frame:
 125:..\src/interruptions.c **** //
 126:..\src/interruptions.c **** // - WAIT_START:    Waits for beginning characters;
 127:..\src/interruptions.c **** // - WAIT_ID:       Waits for ID;
 128:..\src/interruptions.c **** // - WAIT_LENGTH:   Data length;
 129:..\src/interruptions.c **** // - RECEIVE:       Receive all bytes;
 130:..\src/interruptions.c **** // - UNLOAD:        Wait for another device end of transmission;
 131:..\src/interruptions.c **** //
 132:..\src/interruptions.c **** //==============================================================================
 133:..\src/interruptions.c **** 
 134:..\src/interruptions.c **** void interrupt_manager(){
 142              		.loc 1 134 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 6


 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 135:..\src/interruptions.c **** 
 136:..\src/interruptions.c ****     
 137:..\src/interruptions.c ****     //===========================================     local variables definition
 138:..\src/interruptions.c **** 
 139:..\src/interruptions.c ****     static uint8 CYDATA state = WAIT_START;                      // state
 140:..\src/interruptions.c ****     
 141:..\src/interruptions.c ****     //------------------------------------------------- local data packet
 142:..\src/interruptions.c ****     static uint8 CYDATA data_packet_index;
 143:..\src/interruptions.c ****     static uint8 CYDATA data_packet_length;
 144:..\src/interruptions.c ****     static uint8 data_packet_buffer[128];                     
 145:..\src/interruptions.c ****     static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 146:..\src/interruptions.c ****     //-------------------------------------------------
 147:..\src/interruptions.c **** 
 148:..\src/interruptions.c ****     uint8 CYDATA    rx_data;                            // RS485 UART rx data
 149:..\src/interruptions.c ****     CYBIT           rx_data_type = TRUE;                       // my id?
 154              		.loc 1 149 0
 155 0006 0123     		movs	r3, #1
 156 0008 FB71     		strb	r3, [r7, #7]
 150:..\src/interruptions.c ****     uint8 CYDATA    package_count = 0;                     
 157              		.loc 1 150 0
 158 000a 0023     		movs	r3, #0
 159 000c BB71     		strb	r3, [r7, #6]
 151:..\src/interruptions.c **** 
 152:..\src/interruptions.c ****     //======================================================     receive routine
 153:..\src/interruptions.c ****     
 154:..\src/interruptions.c ****     while(UART_RS485_GetRxBufferSize() && (package_count < 100)){
 160              		.loc 1 154 0
 161 000e D6E0     		b	.L8
 162              	.L28:
 155:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 156:..\src/interruptions.c **** 
 157:..\src/interruptions.c ****         // Get next char
 158:..\src/interruptions.c ****         rx_data = UART_RS485_GetChar();
 163              		.loc 1 158 0
 164 0010 FFF7FEFF 		bl	UART_RS485_GetChar
 165 0014 0346     		mov	r3, r0
 166 0016 7B71     		strb	r3, [r7, #5]
 159:..\src/interruptions.c ****         
 160:..\src/interruptions.c ****         switch (state) {
 167              		.loc 1 160 0
 168 0018 6F4B     		ldr	r3, .L31
 169 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 001c 042B     		cmp	r3, #4
 171 001e 00F2CE80 		bhi	.L8
 172 0022 01A2     		adr	r2, .L10
 173 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 174              		.p2align 2
 175              	.L10:
 176 0028 3D000000 		.word	.L9+1
 177 002c A3000000 		.word	.L11+1
 178 0030 CD000000 		.word	.L12+1
 179 0034 1B010000 		.word	.L13+1
 180 0038 85010000 		.word	.L14+1
 181              		.p2align 1
 182              	.L9:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 7


 161:..\src/interruptions.c ****             //-----     wait for frame start     -------------------------------
 162:..\src/interruptions.c ****             case WAIT_START:
 163:..\src/interruptions.c ****             
 164:..\src/interruptions.c ****                 rx_queue[0] = rx_queue[1];
 183              		.loc 1 164 0
 184 003c 674B     		ldr	r3, .L31+4
 185 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 186 0040 664B     		ldr	r3, .L31+4
 187 0042 1A70     		strb	r2, [r3]
 165:..\src/interruptions.c ****                 rx_queue[1] = rx_queue[2];
 188              		.loc 1 165 0
 189 0044 654B     		ldr	r3, .L31+4
 190 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 191 0048 644B     		ldr	r3, .L31+4
 192 004a 5A70     		strb	r2, [r3, #1]
 166:..\src/interruptions.c ****                 rx_queue[2] = rx_data;
 193              		.loc 1 166 0
 194 004c 634A     		ldr	r2, .L31+4
 195 004e 7B79     		ldrb	r3, [r7, #5]
 196 0050 9370     		strb	r3, [r2, #2]
 167:..\src/interruptions.c ****                 
 168:..\src/interruptions.c ****                 // Check for header configuration package
 169:..\src/interruptions.c ****                 if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 197              		.loc 1 169 0
 198 0052 624B     		ldr	r3, .L31+4
 199 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 0056 3A2B     		cmp	r3, #58
 201 0058 10D1     		bne	.L15
 202              		.loc 1 169 0 is_stmt 0 discriminator 1
 203 005a 604B     		ldr	r3, .L31+4
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 3A2B     		cmp	r3, #58
 206 0060 0CD1     		bne	.L15
 170:..\src/interruptions.c ****                     rx_queue[0] = 0;
 207              		.loc 1 170 0 is_stmt 1
 208 0062 5E4B     		ldr	r3, .L31+4
 209 0064 0022     		movs	r2, #0
 210 0066 1A70     		strb	r2, [r3]
 171:..\src/interruptions.c ****                     rx_queue[1] = 0;
 211              		.loc 1 171 0
 212 0068 5C4B     		ldr	r3, .L31+4
 213 006a 0022     		movs	r2, #0
 214 006c 5A70     		strb	r2, [r3, #1]
 172:..\src/interruptions.c ****                     rx_queue[2] = 0;
 215              		.loc 1 172 0
 216 006e 5B4B     		ldr	r3, .L31+4
 217 0070 0022     		movs	r2, #0
 218 0072 9A70     		strb	r2, [r3, #2]
 173:..\src/interruptions.c ****                     state       = WAIT_ID;                    
 219              		.loc 1 173 0
 220 0074 584B     		ldr	r3, .L31
 221 0076 0122     		movs	r2, #1
 222 0078 1A70     		strb	r2, [r3]
 223 007a 11E0     		b	.L16
 224              	.L15:
 174:..\src/interruptions.c ****                 }else
 175:..\src/interruptions.c ****                     if ((rx_queue[0] == 63) &&      //ASCII - ?
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 8


 225              		.loc 1 175 0
 226 007c 574B     		ldr	r3, .L31+4
 227 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0080 3F2B     		cmp	r3, #63
 229 0082 40F09C80 		bne	.L8
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 230              		.loc 1 176 0 discriminator 1
 231 0086 554B     		ldr	r3, .L31+4
 232 0088 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 175:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 233              		.loc 1 175 0 discriminator 1
 234 008a 0D2B     		cmp	r3, #13
 235 008c 40F09780 		bne	.L8
 177:..\src/interruptions.c ****                         (rx_queue[2] == 10))        //ASCII - LF)
 236              		.loc 1 177 0
 237 0090 524B     		ldr	r3, .L31+4
 238 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 239              		.loc 1 176 0
 240 0094 0A2B     		cmp	r3, #10
 241 0096 40F09280 		bne	.L8
 178:..\src/interruptions.c ****                         infoGet(INFO_ALL);
 242              		.loc 1 178 0
 243 009a 0020     		movs	r0, #0
 244 009c FFF7FEFF 		bl	infoGet
 245              	.L16:
 179:..\src/interruptions.c ****                 break;
 246              		.loc 1 179 0
 247 00a0 8DE0     		b	.L8
 248              	.L11:
 180:..\src/interruptions.c **** 
 181:..\src/interruptions.c ****             //-----     wait for id     ----------------------------------------
 182:..\src/interruptions.c ****             case  WAIT_ID:
 183:..\src/interruptions.c **** 
 184:..\src/interruptions.c ****                 // packet is for my ID or is broadcast
 185:..\src/interruptions.c **** #ifdef MASTER_FW
 186:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0 || (c_mem.MS.slave_comm_active && rx_da
 187:..\src/interruptions.c ****                    rx_data_type = FALSE;
 188:..\src/interruptions.c ****                 else                //packet is for others
 189:..\src/interruptions.c ****                     rx_data_type = TRUE;
 190:..\src/interruptions.c **** #else
 191:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0)
 249              		.loc 1 191 0
 250 00a2 4F4B     		ldr	r3, .L31+8
 251 00a4 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 252 00a8 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 253 00aa 9A42     		cmp	r2, r3
 254 00ac 02D0     		beq	.L17
 255              		.loc 1 191 0 is_stmt 0 discriminator 1
 256 00ae 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 257 00b0 002B     		cmp	r3, #0
 258 00b2 02D1     		bne	.L18
 259              	.L17:
 192:..\src/interruptions.c ****                     rx_data_type = FALSE;
 260              		.loc 1 192 0 is_stmt 1
 261 00b4 0023     		movs	r3, #0
 262 00b6 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 9


 263 00b8 01E0     		b	.L19
 264              	.L18:
 193:..\src/interruptions.c ****                 else                //packet is for others
 194:..\src/interruptions.c ****                     rx_data_type = TRUE;
 265              		.loc 1 194 0
 266 00ba 0123     		movs	r3, #1
 267 00bc FB71     		strb	r3, [r7, #7]
 268              	.L19:
 195:..\src/interruptions.c **** #endif                
 196:..\src/interruptions.c ****                 data_packet_length = 0;
 269              		.loc 1 196 0
 270 00be 494B     		ldr	r3, .L31+12
 271 00c0 0022     		movs	r2, #0
 272 00c2 1A70     		strb	r2, [r3]
 197:..\src/interruptions.c ****                 state = WAIT_LENGTH;
 273              		.loc 1 197 0
 274 00c4 444B     		ldr	r3, .L31
 275 00c6 0222     		movs	r2, #2
 276 00c8 1A70     		strb	r2, [r3]
 198:..\src/interruptions.c ****                 break;
 277              		.loc 1 198 0
 278 00ca 78E0     		b	.L8
 279              	.L12:
 199:..\src/interruptions.c **** 
 200:..\src/interruptions.c ****             //-----     wait for length     ------------------------------------
 201:..\src/interruptions.c ****             case  WAIT_LENGTH:
 202:..\src/interruptions.c **** 
 203:..\src/interruptions.c ****                 data_packet_length = rx_data;
 280              		.loc 1 203 0
 281 00cc 454A     		ldr	r2, .L31+12
 282 00ce 7B79     		ldrb	r3, [r7, #5]
 283 00d0 1370     		strb	r3, [r2]
 204:..\src/interruptions.c ****                 // check validity of pack length
 205:..\src/interruptions.c ****                 if (data_packet_length <= 1) {
 284              		.loc 1 205 0
 285 00d2 444B     		ldr	r3, .L31+12
 286 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 00d6 012B     		cmp	r3, #1
 288 00d8 06D8     		bhi	.L20
 206:..\src/interruptions.c ****                     data_packet_length = 0;
 289              		.loc 1 206 0
 290 00da 424B     		ldr	r3, .L31+12
 291 00dc 0022     		movs	r2, #0
 292 00de 1A70     		strb	r2, [r3]
 207:..\src/interruptions.c ****                     state = WAIT_START;
 293              		.loc 1 207 0
 294 00e0 3D4B     		ldr	r3, .L31
 295 00e2 0022     		movs	r2, #0
 296 00e4 1A70     		strb	r2, [r3]
 297 00e6 6AE0     		b	.L8
 298              	.L20:
 208:..\src/interruptions.c ****                 } else if (data_packet_length > 128) {
 299              		.loc 1 208 0
 300 00e8 3E4B     		ldr	r3, .L31+12
 301 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 00ec 802B     		cmp	r3, #128
 303 00ee 06D9     		bls	.L22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 10


 209:..\src/interruptions.c ****                     data_packet_length = 0;
 304              		.loc 1 209 0
 305 00f0 3C4B     		ldr	r3, .L31+12
 306 00f2 0022     		movs	r2, #0
 307 00f4 1A70     		strb	r2, [r3]
 210:..\src/interruptions.c ****                     state = WAIT_START;
 308              		.loc 1 210 0
 309 00f6 384B     		ldr	r3, .L31
 310 00f8 0022     		movs	r2, #0
 311 00fa 1A70     		strb	r2, [r3]
 312 00fc 5FE0     		b	.L8
 313              	.L22:
 211:..\src/interruptions.c ****                 } else {
 212:..\src/interruptions.c ****                     data_packet_index = 0;
 314              		.loc 1 212 0
 315 00fe 3A4B     		ldr	r3, .L31+16
 316 0100 0022     		movs	r2, #0
 317 0102 1A70     		strb	r2, [r3]
 213:..\src/interruptions.c ****                     
 214:..\src/interruptions.c ****                     if(rx_data_type == FALSE)
 318              		.loc 1 214 0
 319 0104 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 320 0106 002B     		cmp	r3, #0
 321 0108 03D1     		bne	.L23
 215:..\src/interruptions.c ****                         state = RECEIVE;          // packet for me or broadcast
 322              		.loc 1 215 0
 323 010a 334B     		ldr	r3, .L31
 324 010c 0322     		movs	r2, #3
 325 010e 1A70     		strb	r2, [r3]
 326 0110 55E0     		b	.L8
 327              	.L23:
 216:..\src/interruptions.c ****                     else
 217:..\src/interruptions.c ****                         state = UNLOAD;           // packet for others
 328              		.loc 1 217 0
 329 0112 314B     		ldr	r3, .L31
 330 0114 0422     		movs	r2, #4
 331 0116 1A70     		strb	r2, [r3]
 218:..\src/interruptions.c ****                 }
 219:..\src/interruptions.c ****                 break;
 332              		.loc 1 219 0
 333 0118 51E0     		b	.L8
 334              	.L13:
 220:..\src/interruptions.c **** 
 221:..\src/interruptions.c ****             //-----     receiving     -------------------------------------------
 222:..\src/interruptions.c ****             case RECEIVE:
 223:..\src/interruptions.c **** 
 224:..\src/interruptions.c ****                 data_packet_buffer[data_packet_index] = rx_data;
 335              		.loc 1 224 0
 336 011a 334B     		ldr	r3, .L31+16
 337 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 011e 1946     		mov	r1, r3
 339 0120 324A     		ldr	r2, .L31+20
 340 0122 7B79     		ldrb	r3, [r7, #5]
 341 0124 5354     		strb	r3, [r2, r1]
 225:..\src/interruptions.c ****                 data_packet_index++;
 342              		.loc 1 225 0
 343 0126 304B     		ldr	r3, .L31+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 11


 344 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 345 012a 0133     		adds	r3, r3, #1
 346 012c DAB2     		uxtb	r2, r3
 347 012e 2E4B     		ldr	r3, .L31+16
 348 0130 1A70     		strb	r2, [r3]
 226:..\src/interruptions.c ****                 
 227:..\src/interruptions.c ****                 // check end of transmission
 228:..\src/interruptions.c ****                 if (data_packet_index >= data_packet_length) {
 349              		.loc 1 228 0
 350 0132 2D4B     		ldr	r3, .L31+16
 351 0134 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 352 0136 2B4B     		ldr	r3, .L31+12
 353 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354 013a 9A42     		cmp	r2, r3
 355 013c 3FD3     		bcc	.L8
 229:..\src/interruptions.c ****                     // verify if frame ID corresponded to the device ID
 230:..\src/interruptions.c ****                     if (rx_data_type == FALSE) {
 356              		.loc 1 230 0
 357 013e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 358 0140 002B     		cmp	r3, #0
 359 0142 12D1     		bne	.L25
 231:..\src/interruptions.c ****                         // copying data from buffer to global packet
 232:..\src/interruptions.c ****                         memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 360              		.loc 1 232 0
 361 0144 274B     		ldr	r3, .L31+12
 362 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 0148 1A46     		mov	r2, r3
 364 014a 2849     		ldr	r1, .L31+20
 365 014c 2848     		ldr	r0, .L31+24
 366 014e FFF7FEFF 		bl	memcpy
 233:..\src/interruptions.c ****                         g_rx.length = data_packet_length;
 367              		.loc 1 233 0
 368 0152 244B     		ldr	r3, .L31+12
 369 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 370 0156 1AB2     		sxth	r2, r3
 371 0158 254B     		ldr	r3, .L31+24
 372 015a A3F88020 		strh	r2, [r3, #128]	@ movhi
 234:..\src/interruptions.c ****                         g_rx.ready  = 1;
 373              		.loc 1 234 0
 374 015e 244B     		ldr	r3, .L31+24
 375 0160 0122     		movs	r2, #1
 376 0162 83F88420 		strb	r2, [r3, #132]
 235:..\src/interruptions.c ****                         commProcess();
 377              		.loc 1 235 0
 378 0166 FFF7FEFF 		bl	commProcess
 379              	.L25:
 236:..\src/interruptions.c ****                     }
 237:..\src/interruptions.c ****                     
 238:..\src/interruptions.c ****                     data_packet_index  = 0;
 380              		.loc 1 238 0
 381 016a 1F4B     		ldr	r3, .L31+16
 382 016c 0022     		movs	r2, #0
 383 016e 1A70     		strb	r2, [r3]
 239:..\src/interruptions.c ****                     data_packet_length = 0;
 384              		.loc 1 239 0
 385 0170 1C4B     		ldr	r3, .L31+12
 386 0172 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 12


 387 0174 1A70     		strb	r2, [r3]
 240:..\src/interruptions.c ****                     state              = WAIT_START;
 388              		.loc 1 240 0
 389 0176 184B     		ldr	r3, .L31
 390 0178 0022     		movs	r2, #0
 391 017a 1A70     		strb	r2, [r3]
 241:..\src/interruptions.c ****                     package_count++;
 392              		.loc 1 241 0
 393 017c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 394 017e 0133     		adds	r3, r3, #1
 395 0180 BB71     		strb	r3, [r7, #6]
 242:..\src/interruptions.c ****                 
 243:..\src/interruptions.c ****                 }
 244:..\src/interruptions.c ****                 break;
 396              		.loc 1 244 0
 397 0182 1CE0     		b	.L8
 398              	.L14:
 245:..\src/interruptions.c **** 
 246:..\src/interruptions.c ****             //-----     other device is receving     ---------------------------
 247:..\src/interruptions.c ****             case UNLOAD:
 248:..\src/interruptions.c ****                 if (!(--data_packet_length)) {
 399              		.loc 1 248 0
 400 0184 174B     		ldr	r3, .L31+12
 401 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 402 0188 013B     		subs	r3, r3, #1
 403 018a DAB2     		uxtb	r2, r3
 404 018c 154B     		ldr	r3, .L31+12
 405 018e 1A70     		strb	r2, [r3]
 406 0190 144B     		ldr	r3, .L31+12
 407 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 0194 002B     		cmp	r3, #0
 409 0196 11D1     		bne	.L30
 249:..\src/interruptions.c ****                     data_packet_index  = 0;
 410              		.loc 1 249 0
 411 0198 134B     		ldr	r3, .L31+16
 412 019a 0022     		movs	r2, #0
 413 019c 1A70     		strb	r2, [r3]
 250:..\src/interruptions.c ****                     data_packet_length = 0;
 414              		.loc 1 250 0
 415 019e 114B     		ldr	r3, .L31+12
 416 01a0 0022     		movs	r2, #0
 417 01a2 1A70     		strb	r2, [r3]
 251:..\src/interruptions.c ****                     RS485_CTS_Write(1);
 418              		.loc 1 251 0
 419 01a4 0120     		movs	r0, #1
 420 01a6 FFF7FEFF 		bl	RS485_CTS_Write
 252:..\src/interruptions.c ****                     RS485_CTS_Write(0);
 421              		.loc 1 252 0
 422 01aa 0020     		movs	r0, #0
 423 01ac FFF7FEFF 		bl	RS485_CTS_Write
 253:..\src/interruptions.c ****                     state              = WAIT_START;
 424              		.loc 1 253 0
 425 01b0 094B     		ldr	r3, .L31
 426 01b2 0022     		movs	r2, #0
 427 01b4 1A70     		strb	r2, [r3]
 254:..\src/interruptions.c ****                     package_count++;
 428              		.loc 1 254 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 13


 429 01b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 430 01b8 0133     		adds	r3, r3, #1
 431 01ba BB71     		strb	r3, [r7, #6]
 432              	.L30:
 255:..\src/interruptions.c ****                 }
 256:..\src/interruptions.c ****                 break;
 433              		.loc 1 256 0
 434 01bc 00BF     		nop
 435              	.L8:
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 436              		.loc 1 154 0
 437 01be FFF7FEFF 		bl	UART_RS485_GetRxBufferSize
 438 01c2 0346     		mov	r3, r0
 439 01c4 002B     		cmp	r3, #0
 440 01c6 03D0     		beq	.L29
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 441              		.loc 1 154 0 is_stmt 0 discriminator 1
 442 01c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 443 01ca 632B     		cmp	r3, #99
 444 01cc 7FF620AF 		bls	.L28
 445              	.L29:
 257:..\src/interruptions.c ****         }
 258:..\src/interruptions.c ****     }
 259:..\src/interruptions.c **** }
 446              		.loc 1 259 0 is_stmt 1
 447 01d0 00BF     		nop
 448 01d2 0837     		adds	r7, r7, #8
 449              		.cfi_def_cfa_offset 8
 450 01d4 BD46     		mov	sp, r7
 451              		.cfi_def_cfa_register 13
 452              		@ sp needed
 453 01d6 80BD     		pop	{r7, pc}
 454              	.L32:
 455              		.align	2
 456              	.L31:
 457 01d8 00000000 		.word	state.10433
 458 01dc 04000000 		.word	rx_queue.10437
 459 01e0 00000000 		.word	c_mem
 460 01e4 07000000 		.word	data_packet_length.10435
 461 01e8 08000000 		.word	data_packet_index.10434
 462 01ec 0C000000 		.word	data_packet_buffer.10436
 463 01f0 00000000 		.word	g_rx
 464              		.cfi_endproc
 465              	.LFE66:
 466              		.size	interrupt_manager, .-interrupt_manager
 467              		.global	__aeabi_i2f
 468              		.global	__aeabi_fdiv
 469              		.section	.text.function_scheduler,"ax",%progbits
 470              		.align	2
 471              		.global	function_scheduler
 472              		.thumb
 473              		.thumb_func
 474              		.type	function_scheduler, %function
 475              	function_scheduler:
 476              	.LFB67:
 260:..\src/interruptions.c **** //==============================================================================
 261:..\src/interruptions.c **** //                                                            FUNCTION SCHEDULER
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 14


 262:..\src/interruptions.c **** //==============================================================================
 263:..\src/interruptions.c **** // Call all the function with the right frequency
 264:..\src/interruptions.c **** //==============================================================================
 265:..\src/interruptions.c **** // Base frequency 1000 Hz
 266:..\src/interruptions.c **** //==============================================================================
 267:..\src/interruptions.c **** 
 268:..\src/interruptions.c **** void function_scheduler(void) {
 477              		.loc 1 268 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 2504
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481 0000 B0B5     		push	{r4, r5, r7, lr}
 482              		.cfi_def_cfa_offset 16
 483              		.cfi_offset 4, -16
 484              		.cfi_offset 5, -12
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 ADF6C81D 		subw	sp, sp, #2504
 488              		.cfi_def_cfa_offset 2520
 489 0006 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 269:..\src/interruptions.c ****  
 270:..\src/interruptions.c ****     static uint16 counter_calibration = DIV_INIT_VALUE;
 271:..\src/interruptions.c ****     static uint16 counter_tension_func = DIV_INIT_VALUE;
 272:..\src/interruptions.c ****     char info_[2500] = "";
 491              		.loc 1 272 0
 492 0008 3B46     		mov	r3, r7
 493 000a 0022     		movs	r2, #0
 494 000c 1A60     		str	r2, [r3]
 495 000e 0433     		adds	r3, r3, #4
 496 0010 4FF41C62 		mov	r2, #2496
 497 0014 0021     		movs	r1, #0
 498 0016 1846     		mov	r0, r3
 499 0018 FFF7FEFF 		bl	memset
 273:..\src/interruptions.c ****     
 274:..\src/interruptions.c ****     uint8 MOTOR_IDX = 0;
 500              		.loc 1 274 0
 501 001c 0023     		movs	r3, #0
 502 001e 87F8C639 		strb	r3, [r7, #2502]
 275:..\src/interruptions.c ****     uint8 SECOND_MOTOR_IDX = 1;
 503              		.loc 1 275 0
 504 0022 0123     		movs	r3, #1
 505 0024 87F8C539 		strb	r3, [r7, #2501]
 276:..\src/interruptions.c ****     
 277:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x00);
 506              		.loc 1 277 0
 507 0028 0020     		movs	r0, #0
 508 002a FFF7FEFF 		bl	MY_TIMER_REG_Write
 278:..\src/interruptions.c ****     timer_value0 = (uint32)MY_TIMER_ReadCounter();
 509              		.loc 1 278 0
 510 002e FFF7FEFF 		bl	MY_TIMER_ReadCounter
 511 0032 0346     		mov	r3, r0
 512 0034 1A46     		mov	r2, r3
 513 0036 A74B     		ldr	r3, .L78
 514 0038 1A80     		strh	r2, [r3]	@ movhi
 279:..\src/interruptions.c **** 
 280:..\src/interruptions.c ****     // Start ADC Conversion, SOC = 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 15


 281:..\src/interruptions.c **** 
 282:..\src/interruptions.c ****     ADC_SOC_Write(0x01); 
 515              		.loc 1 282 0
 516 003a 0120     		movs	r0, #1
 517 003c FFF7FEFF 		bl	ADC_SOC_Write
 283:..\src/interruptions.c ****     
 284:..\src/interruptions.c ****     // Check Interrupt 
 285:..\src/interruptions.c **** 
 286:..\src/interruptions.c ****     if (interrupt_flag){
 518              		.loc 1 286 0
 519 0040 A54B     		ldr	r3, .L78+4
 520 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 521 0044 002B     		cmp	r3, #0
 522 0046 04D0     		beq	.L34
 287:..\src/interruptions.c ****         interrupt_flag = FALSE;
 523              		.loc 1 287 0
 524 0048 A34B     		ldr	r3, .L78+4
 525 004a 0022     		movs	r2, #0
 526 004c 1A70     		strb	r2, [r3]
 288:..\src/interruptions.c ****         interrupt_manager();
 527              		.loc 1 288 0
 528 004e FFF7FEFF 		bl	interrupt_manager
 529              	.L34:
 289:..\src/interruptions.c ****     }
 290:..\src/interruptions.c ****     
 291:..\src/interruptions.c ****     switch(c_mem.dev.dev_type){
 530              		.loc 1 291 0
 531 0052 A24B     		ldr	r3, .L78+8
 532 0054 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 533 0058 042B     		cmp	r3, #4
 534 005a 00F2AE81 		bhi	.L35
 535 005e 01A2     		adr	r2, .L37
 536 0060 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 537              		.p2align 2
 538              	.L37:
 539 0064 79000000 		.word	.L36+1
 540 0068 39010000 		.word	.L38+1
 541 006c AD020000 		.word	.L39+1
 542 0070 AD020000 		.word	.L39+1
 543 0074 39010000 		.word	.L38+1
 544              		.p2align 1
 545              	.L36:
 292:..\src/interruptions.c ****         case SOFTHAND_PRO:
 293:..\src/interruptions.c ****         
 294:..\src/interruptions.c ****             //---------------------------------- Get Encoders
 295:..\src/interruptions.c ****             
 296:..\src/interruptions.c ****             // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND
 297:..\src/interruptions.c ****             if (N_Encoder_Line_Connected[c_mem.motor[MOTOR_IDX].encoder_line] > 0) {
 546              		.loc 1 297 0
 547 0078 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 548 007c 9749     		ldr	r1, .L78+8
 549 007e 1346     		mov	r3, r2
 550 0080 DB00     		lsls	r3, r3, #3
 551 0082 9B1A     		subs	r3, r3, r2
 552 0084 1B01     		lsls	r3, r3, #4
 553 0086 0B44     		add	r3, r3, r1
 554 0088 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 16


 555 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 556 008e 1A46     		mov	r2, r3
 557 0090 934B     		ldr	r3, .L78+12
 558 0092 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 559 0094 002B     		cmp	r3, #0
 560 0096 25D0     		beq	.L40
 298:..\src/interruptions.c ****                 // Change CS only if there are attached encoders on the line
 299:..\src/interruptions.c ****                 Change_CS_EncoderLine(c_mem.motor[MOTOR_IDX].encoder_line);
 561              		.loc 1 299 0
 562 0098 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 563 009c 8F49     		ldr	r1, .L78+8
 564 009e 1346     		mov	r3, r2
 565 00a0 DB00     		lsls	r3, r3, #3
 566 00a2 9B1A     		subs	r3, r3, r2
 567 00a4 1B01     		lsls	r3, r3, #4
 568 00a6 0B44     		add	r3, r3, r1
 569 00a8 03F58873 		add	r3, r3, #272
 570 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 571 00ae 1846     		mov	r0, r3
 572 00b0 FFF7FEFF 		bl	Change_CS_EncoderLine
 300:..\src/interruptions.c ****                 
 301:..\src/interruptions.c ****                 encoder_reading_SPI(c_mem.motor[MOTOR_IDX].encoder_line, 0);    // assoc_motor = 0 
 573              		.loc 1 301 0
 574 00b4 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 575 00b8 8849     		ldr	r1, .L78+8
 576 00ba 1346     		mov	r3, r2
 577 00bc DB00     		lsls	r3, r3, #3
 578 00be 9B1A     		subs	r3, r3, r2
 579 00c0 1B01     		lsls	r3, r3, #4
 580 00c2 0B44     		add	r3, r3, r1
 581 00c4 03F58873 		add	r3, r3, #272
 582 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 583 00ca 0021     		movs	r1, #0
 584 00cc 1846     		mov	r0, r3
 585 00ce FFF7FEFF 		bl	encoder_reading_SPI
 302:..\src/interruptions.c **** 
 303:..\src/interruptions.c ****                 // Check Interrupt     
 304:..\src/interruptions.c ****                 
 305:..\src/interruptions.c ****                 if (interrupt_flag){
 586              		.loc 1 305 0
 587 00d2 814B     		ldr	r3, .L78+4
 588 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 589 00d6 002B     		cmp	r3, #0
 590 00d8 04D0     		beq	.L40
 306:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 591              		.loc 1 306 0
 592 00da 7F4B     		ldr	r3, .L78+4
 593 00dc 0022     		movs	r2, #0
 594 00de 1A70     		strb	r2, [r3]
 307:..\src/interruptions.c ****                     interrupt_manager();
 595              		.loc 1 307 0
 596 00e0 FFF7FEFF 		bl	interrupt_manager
 597              	.L40:
 308:..\src/interruptions.c ****                 }
 309:..\src/interruptions.c ****             }
 310:..\src/interruptions.c ****             
 311:..\src/interruptions.c ****             //---------------------------------- Control SH Motor
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 17


 312:..\src/interruptions.c ****             
 313:..\src/interruptions.c ****             motor_control_SH();
 598              		.loc 1 313 0
 599 00e4 FFF7FEFF 		bl	motor_control_SH
 314:..\src/interruptions.c ****             
 315:..\src/interruptions.c ****             // Check external reference before processing other serial data and right after motor c
 316:..\src/interruptions.c ****             if (c_mem.motor[MOTOR_IDX].not_revers_motor_flag == TRUE) {
 600              		.loc 1 316 0
 601 00e8 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 602 00ec 7B49     		ldr	r1, .L78+8
 603 00ee 1346     		mov	r3, r2
 604 00f0 DB00     		lsls	r3, r3, #3
 605 00f2 9B1A     		subs	r3, r3, r2
 606 00f4 1B01     		lsls	r3, r3, #4
 607 00f6 0B44     		add	r3, r3, r1
 608 00f8 03F58973 		add	r3, r3, #274
 609 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 610 00fe 012B     		cmp	r3, #1
 611 0100 0FD1     		bne	.L41
 317:..\src/interruptions.c ****                 if (c_mem.motor[MOTOR_IDX].input_mode == INPUT_MODE_EXTERNAL) {
 612              		.loc 1 317 0
 613 0102 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 614 0106 7549     		ldr	r1, .L78+8
 615 0108 1346     		mov	r3, r2
 616 010a DB00     		lsls	r3, r3, #3
 617 010c 9B1A     		subs	r3, r3, r2
 618 010e 1B01     		lsls	r3, r3, #4
 619 0110 0B44     		add	r3, r3, r1
 620 0112 03F58773 		add	r3, r3, #270
 621 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 622 0118 002B     		cmp	r3, #0
 623 011a 02D1     		bne	.L41
 318:..\src/interruptions.c ****                     change_ext_ref_flag = FALSE;
 624              		.loc 1 318 0
 625 011c 714B     		ldr	r3, .L78+16
 626 011e 0022     		movs	r2, #0
 627 0120 1A70     		strb	r2, [r3]
 628              	.L41:
 319:..\src/interruptions.c ****                 }   
 320:..\src/interruptions.c ****             }
 321:..\src/interruptions.c **** 
 322:..\src/interruptions.c ****             // Check Interrupt 
 323:..\src/interruptions.c **** 
 324:..\src/interruptions.c ****             if (interrupt_flag){
 629              		.loc 1 324 0
 630 0122 6D4B     		ldr	r3, .L78+4
 631 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 632 0126 002B     		cmp	r3, #0
 633 0128 00F03A81 		beq	.L75
 325:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 634              		.loc 1 325 0
 635 012c 6A4B     		ldr	r3, .L78+4
 636 012e 0022     		movs	r2, #0
 637 0130 1A70     		strb	r2, [r3]
 326:..\src/interruptions.c ****                 interrupt_manager();
 638              		.loc 1 326 0
 639 0132 FFF7FEFF 		bl	interrupt_manager
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 18


 327:..\src/interruptions.c ****             }
 328:..\src/interruptions.c ****             break;
 640              		.loc 1 328 0
 641 0136 33E1     		b	.L75
 642              	.L38:
 643              	.LBB2:
 329:..\src/interruptions.c ****             
 330:..\src/interruptions.c ****         case GENERIC_2_MOTORS: case SOFTHAND_2_MOTORS:
 331:..\src/interruptions.c ****             
 332:..\src/interruptions.c ****             //---------------------------------- Get Encoders
 333:..\src/interruptions.c ****             for (uint8 i = 0; i < N_ENCODER_LINE_MAX; i++) {
 644              		.loc 1 333 0
 645 0138 0023     		movs	r3, #0
 646 013a 87F8C739 		strb	r3, [r7, #2503]
 647 013e 53E0     		b	.L43
 648              	.L48:
 334:..\src/interruptions.c ****                 if (N_Encoder_Line_Connected[i] > 0) {
 649              		.loc 1 334 0
 650 0140 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 651 0144 664A     		ldr	r2, .L78+12
 652 0146 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 653 0148 002B     		cmp	r3, #0
 654 014a 48D0     		beq	.L44
 335:..\src/interruptions.c ****                     // Change CS only if there are attached encoders on the line
 336:..\src/interruptions.c ****                     Change_CS_EncoderLine(i);
 655              		.loc 1 336 0
 656 014c 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 657 0150 1846     		mov	r0, r3
 658 0152 FFF7FEFF 		bl	Change_CS_EncoderLine
 337:..\src/interruptions.c ****                               
 338:..\src/interruptions.c ****                     if (c_mem.motor[MOTOR_IDX].encoder_line == i) {
 659              		.loc 1 338 0
 660 0156 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 661 015a 6049     		ldr	r1, .L78+8
 662 015c 1346     		mov	r3, r2
 663 015e DB00     		lsls	r3, r3, #3
 664 0160 9B1A     		subs	r3, r3, r2
 665 0162 1B01     		lsls	r3, r3, #4
 666 0164 0B44     		add	r3, r3, r1
 667 0166 03F58873 		add	r3, r3, #272
 668 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 669 016c 97F8C729 		ldrb	r2, [r7, #2503]	@ zero_extendqisi2
 670 0170 9A42     		cmp	r2, r3
 671 0172 08D1     		bne	.L45
 339:..\src/interruptions.c ****                         // Check if the line is used to control motor or not
 340:..\src/interruptions.c ****                         encoder_reading_SPI(i, MOTOR_IDX); 
 672              		.loc 1 340 0
 673 0174 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 674 0178 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 675 017c 1146     		mov	r1, r2
 676 017e 1846     		mov	r0, r3
 677 0180 FFF7FEFF 		bl	encoder_reading_SPI
 678 0184 22E0     		b	.L46
 679              	.L45:
 341:..\src/interruptions.c ****                     }
 342:..\src/interruptions.c ****                     else {
 343:..\src/interruptions.c ****                         if (c_mem.motor[SECOND_MOTOR_IDX].encoder_line == i) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 19


 680              		.loc 1 343 0
 681 0186 97F8C529 		ldrb	r2, [r7, #2501]	@ zero_extendqisi2
 682 018a 5449     		ldr	r1, .L78+8
 683 018c 1346     		mov	r3, r2
 684 018e DB00     		lsls	r3, r3, #3
 685 0190 9B1A     		subs	r3, r3, r2
 686 0192 1B01     		lsls	r3, r3, #4
 687 0194 0B44     		add	r3, r3, r1
 688 0196 03F58873 		add	r3, r3, #272
 689 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 690 019c 97F8C729 		ldrb	r2, [r7, #2503]	@ zero_extendqisi2
 691 01a0 9A42     		cmp	r2, r3
 692 01a2 08D1     		bne	.L47
 344:..\src/interruptions.c ****                             // Check if the line is used to control motor or not
 345:..\src/interruptions.c ****                             encoder_reading_SPI(i, SECOND_MOTOR_IDX); 
 693              		.loc 1 345 0
 694 01a4 97F8C529 		ldrb	r2, [r7, #2501]	@ zero_extendqisi2
 695 01a8 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 696 01ac 1146     		mov	r1, r2
 697 01ae 1846     		mov	r0, r3
 698 01b0 FFF7FEFF 		bl	encoder_reading_SPI
 699 01b4 0AE0     		b	.L46
 700              	.L47:
 346:..\src/interruptions.c ****                         }
 347:..\src/interruptions.c ****                         else {
 348:..\src/interruptions.c ****                             // Get only raw encoder value
 349:..\src/interruptions.c ****                             ReadEncoderLine(N_Encoder_Line_Connected[i], i);
 701              		.loc 1 349 0
 702 01b6 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 703 01ba 494A     		ldr	r2, .L78+12
 704 01bc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 705 01be 1A46     		mov	r2, r3
 706 01c0 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 707 01c4 1946     		mov	r1, r3
 708 01c6 1046     		mov	r0, r2
 709 01c8 FFF7FEFF 		bl	ReadEncoderLine
 710              	.L46:
 350:..\src/interruptions.c ****                             // Values are stored in Encoder_Value[i] vector
 351:..\src/interruptions.c ****                         }
 352:..\src/interruptions.c ****                     }
 353:..\src/interruptions.c **** 
 354:..\src/interruptions.c ****                     // Check Interrupt     
 355:..\src/interruptions.c ****                     
 356:..\src/interruptions.c ****                     if (interrupt_flag){
 711              		.loc 1 356 0
 712 01cc 424B     		ldr	r3, .L78+4
 713 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 714 01d0 002B     		cmp	r3, #0
 715 01d2 04D0     		beq	.L44
 357:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 716              		.loc 1 357 0
 717 01d4 404B     		ldr	r3, .L78+4
 718 01d6 0022     		movs	r2, #0
 719 01d8 1A70     		strb	r2, [r3]
 358:..\src/interruptions.c ****                         interrupt_manager();
 720              		.loc 1 358 0
 721 01da FFF7FEFF 		bl	interrupt_manager
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 20


 722              	.L44:
 333:..\src/interruptions.c ****                 if (N_Encoder_Line_Connected[i] > 0) {
 723              		.loc 1 333 0 discriminator 2
 724 01de 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 725 01e2 0133     		adds	r3, r3, #1
 726 01e4 87F8C739 		strb	r3, [r7, #2503]
 727              	.L43:
 333:..\src/interruptions.c ****                 if (N_Encoder_Line_Connected[i] > 0) {
 728              		.loc 1 333 0 is_stmt 0 discriminator 1
 729 01e8 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 730 01ec 012B     		cmp	r3, #1
 731 01ee A7D9     		bls	.L48
 732              	.LBE2:
 359:..\src/interruptions.c ****                     }
 360:..\src/interruptions.c ****                 }
 361:..\src/interruptions.c ****             } 
 362:..\src/interruptions.c ****             
 363:..\src/interruptions.c ****             //---------------------------------- Control Motor
 364:..\src/interruptions.c ****             
 365:..\src/interruptions.c ****             // Control MOTOR_IDX motor (always active) according to motor driver type
 366:..\src/interruptions.c ****             motor_control_generic(MOTOR_IDX);
 733              		.loc 1 366 0 is_stmt 1
 734 01f0 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 735 01f4 1846     		mov	r0, r3
 736 01f6 FFF7FEFF 		bl	motor_control_generic
 367:..\src/interruptions.c ****             
 368:..\src/interruptions.c ****             // Check external reference before processing other serial data and right after motor c
 369:..\src/interruptions.c ****             if (c_mem.motor[MOTOR_IDX].not_revers_motor_flag == TRUE) {
 737              		.loc 1 369 0
 738 01fa 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 739 01fe 3749     		ldr	r1, .L78+8
 740 0200 1346     		mov	r3, r2
 741 0202 DB00     		lsls	r3, r3, #3
 742 0204 9B1A     		subs	r3, r3, r2
 743 0206 1B01     		lsls	r3, r3, #4
 744 0208 0B44     		add	r3, r3, r1
 745 020a 03F58973 		add	r3, r3, #274
 746 020e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 747 0210 012B     		cmp	r3, #1
 748 0212 0FD1     		bne	.L49
 370:..\src/interruptions.c ****                 if (c_mem.motor[MOTOR_IDX].input_mode == INPUT_MODE_EXTERNAL) {
 749              		.loc 1 370 0
 750 0214 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 751 0218 3049     		ldr	r1, .L78+8
 752 021a 1346     		mov	r3, r2
 753 021c DB00     		lsls	r3, r3, #3
 754 021e 9B1A     		subs	r3, r3, r2
 755 0220 1B01     		lsls	r3, r3, #4
 756 0222 0B44     		add	r3, r3, r1
 757 0224 03F58773 		add	r3, r3, #270
 758 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 759 022a 002B     		cmp	r3, #0
 760 022c 02D1     		bne	.L49
 371:..\src/interruptions.c ****                     change_ext_ref_flag = FALSE;
 761              		.loc 1 371 0
 762 022e 2D4B     		ldr	r3, .L78+16
 763 0230 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 21


 764 0232 1A70     		strb	r2, [r3]
 765              	.L49:
 372:..\src/interruptions.c ****                 }   
 373:..\src/interruptions.c ****             }
 374:..\src/interruptions.c ****             
 375:..\src/interruptions.c ****             // Check Interrupt 
 376:..\src/interruptions.c **** 
 377:..\src/interruptions.c ****             if (interrupt_flag){
 766              		.loc 1 377 0
 767 0234 284B     		ldr	r3, .L78+4
 768 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 769 0238 002B     		cmp	r3, #0
 770 023a 04D0     		beq	.L50
 378:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 771              		.loc 1 378 0
 772 023c 264B     		ldr	r3, .L78+4
 773 023e 0022     		movs	r2, #0
 774 0240 1A70     		strb	r2, [r3]
 379:..\src/interruptions.c ****                 interrupt_manager();
 775              		.loc 1 379 0
 776 0242 FFF7FEFF 		bl	interrupt_manager
 777              	.L50:
 380:..\src/interruptions.c ****             }
 381:..\src/interruptions.c ****             
 382:..\src/interruptions.c ****             // Control 2nd motor (if necessary) according to motor driver type
 383:..\src/interruptions.c ****             if (c_mem.dev.use_2nd_motor_flag == TRUE){
 778              		.loc 1 383 0
 779 0246 254B     		ldr	r3, .L78+8
 780 0248 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 781 024c 012B     		cmp	r3, #1
 782 024e 40F0A980 		bne	.L76
 384:..\src/interruptions.c ****                 motor_control_generic(SECOND_MOTOR_IDX);
 783              		.loc 1 384 0
 784 0252 97F8C539 		ldrb	r3, [r7, #2501]	@ zero_extendqisi2
 785 0256 1846     		mov	r0, r3
 786 0258 FFF7FEFF 		bl	motor_control_generic
 385:..\src/interruptions.c ****                 
 386:..\src/interruptions.c ****                 // Check external reference before processing other serial data and right after mot
 387:..\src/interruptions.c ****                 if (c_mem.motor[SECOND_MOTOR_IDX].not_revers_motor_flag == TRUE) {
 787              		.loc 1 387 0
 788 025c 97F8C529 		ldrb	r2, [r7, #2501]	@ zero_extendqisi2
 789 0260 1E49     		ldr	r1, .L78+8
 790 0262 1346     		mov	r3, r2
 791 0264 DB00     		lsls	r3, r3, #3
 792 0266 9B1A     		subs	r3, r3, r2
 793 0268 1B01     		lsls	r3, r3, #4
 794 026a 0B44     		add	r3, r3, r1
 795 026c 03F58973 		add	r3, r3, #274
 796 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 797 0272 012B     		cmp	r3, #1
 798 0274 0FD1     		bne	.L52
 388:..\src/interruptions.c ****                     if (c_mem.motor[SECOND_MOTOR_IDX].input_mode == INPUT_MODE_EXTERNAL) {
 799              		.loc 1 388 0
 800 0276 97F8C529 		ldrb	r2, [r7, #2501]	@ zero_extendqisi2
 801 027a 1849     		ldr	r1, .L78+8
 802 027c 1346     		mov	r3, r2
 803 027e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 22


 804 0280 9B1A     		subs	r3, r3, r2
 805 0282 1B01     		lsls	r3, r3, #4
 806 0284 0B44     		add	r3, r3, r1
 807 0286 03F58773 		add	r3, r3, #270
 808 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 809 028c 002B     		cmp	r3, #0
 810 028e 02D1     		bne	.L52
 389:..\src/interruptions.c ****                         change_ext_ref_flag = FALSE;
 811              		.loc 1 389 0
 812 0290 144B     		ldr	r3, .L78+16
 813 0292 0022     		movs	r2, #0
 814 0294 1A70     		strb	r2, [r3]
 815              	.L52:
 390:..\src/interruptions.c ****                     }   
 391:..\src/interruptions.c ****                 }
 392:..\src/interruptions.c ****                 
 393:..\src/interruptions.c ****                 // Check Interrupt 
 394:..\src/interruptions.c **** 
 395:..\src/interruptions.c ****                 if (interrupt_flag){
 816              		.loc 1 395 0
 817 0296 104B     		ldr	r3, .L78+4
 818 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 819 029a 002B     		cmp	r3, #0
 820 029c 00F08280 		beq	.L76
 396:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 821              		.loc 1 396 0
 822 02a0 0D4B     		ldr	r3, .L78+4
 823 02a2 0022     		movs	r2, #0
 824 02a4 1A70     		strb	r2, [r3]
 397:..\src/interruptions.c ****                     interrupt_manager();
 825              		.loc 1 397 0
 826 02a6 FFF7FEFF 		bl	interrupt_manager
 398:..\src/interruptions.c ****                 }
 399:..\src/interruptions.c ****             }  
 400:..\src/interruptions.c ****             break;
 827              		.loc 1 400 0
 828 02aa 7BE0     		b	.L76
 829              	.L39:
 401:..\src/interruptions.c ****             
 402:..\src/interruptions.c ****         case AIR_CHAMBERS_FB: case OTBK_ACT_WRIST_MS:
 403:..\src/interruptions.c ****             
 404:..\src/interruptions.c ****             //---------------------------------- Force Feedback control
 405:..\src/interruptions.c ****             if (master_mode && c_mem.MS.slave_comm_active) {
 830              		.loc 1 405 0
 831 02ac 0E4B     		ldr	r3, .L78+20
 832 02ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 833 02b0 002B     		cmp	r3, #0
 834 02b2 3BD0     		beq	.L53
 835              		.loc 1 405 0 is_stmt 0 discriminator 1
 836 02b4 094B     		ldr	r3, .L78+8
 837 02b6 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 838 02ba 002B     		cmp	r3, #0
 839 02bc 36D0     		beq	.L53
 406:..\src/interruptions.c ****                 
 407:..\src/interruptions.c ****                 if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
 840              		.loc 1 407 0 is_stmt 1
 841 02be 074B     		ldr	r3, .L78+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 23


 842 02c0 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 843 02c4 022B     		cmp	r3, #2
 844 02c6 11D1     		bne	.L54
 408:..\src/interruptions.c ****                     air_chambers_control(SECOND_MOTOR_IDX);
 845              		.loc 1 408 0
 846 02c8 97F8C539 		ldrb	r3, [r7, #2501]	@ zero_extendqisi2
 847 02cc 1846     		mov	r0, r3
 848 02ce FFF7FEFF 		bl	air_chambers_control
 849 02d2 10E0     		b	.L55
 850              	.L79:
 851              		.align	2
 852              	.L78:
 853 02d4 00000000 		.word	timer_value0
 854 02d8 00000000 		.word	interrupt_flag
 855 02dc 00000000 		.word	c_mem
 856 02e0 00000000 		.word	N_Encoder_Line_Connected
 857 02e4 00000000 		.word	change_ext_ref_flag
 858 02e8 00000000 		.word	master_mode
 859              	.L54:
 409:..\src/interruptions.c ****                 }
 410:..\src/interruptions.c ****                 else{ //OTBK_ACT_WRIST_MS
 411:..\src/interruptions.c ****                     otbk_act_wrist_control(SECOND_MOTOR_IDX);
 860              		.loc 1 411 0
 861 02ec 97F8C539 		ldrb	r3, [r7, #2501]	@ zero_extendqisi2
 862 02f0 1846     		mov	r0, r3
 863 02f2 FFF7FEFF 		bl	otbk_act_wrist_control
 864              	.L55:
 412:..\src/interruptions.c ****                 }
 413:..\src/interruptions.c **** 
 414:..\src/interruptions.c ****                 // Check Interrupt 
 415:..\src/interruptions.c **** 
 416:..\src/interruptions.c ****                 if (interrupt_flag){
 865              		.loc 1 416 0
 866 02f6 2C4B     		ldr	r3, .L80
 867 02f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868 02fa 002B     		cmp	r3, #0
 869 02fc 04D0     		beq	.L56
 417:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 870              		.loc 1 417 0
 871 02fe 2A4B     		ldr	r3, .L80
 872 0300 0022     		movs	r2, #0
 873 0302 1A70     		strb	r2, [r3]
 418:..\src/interruptions.c ****                     interrupt_manager();
 874              		.loc 1 418 0
 875 0304 FFF7FEFF 		bl	interrupt_manager
 876              	.L56:
 419:..\src/interruptions.c ****                 }
 420:..\src/interruptions.c ****             
 421:..\src/interruptions.c ****                 drive_slave(SECOND_MOTOR_IDX, c_mem.MS.slave_ID);
 877              		.loc 1 421 0
 878 0308 284B     		ldr	r3, .L80+4
 879 030a 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 880 030e 97F8C539 		ldrb	r3, [r7, #2501]	@ zero_extendqisi2
 881 0312 1146     		mov	r1, r2
 882 0314 1846     		mov	r0, r3
 883 0316 FFF7FEFF 		bl	drive_slave
 422:..\src/interruptions.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 24


 423:..\src/interruptions.c ****                 // Check Interrupt 
 424:..\src/interruptions.c **** 
 425:..\src/interruptions.c ****                 if (interrupt_flag){
 884              		.loc 1 425 0
 885 031a 234B     		ldr	r3, .L80
 886 031c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 887 031e 002B     		cmp	r3, #0
 888 0320 04D0     		beq	.L53
 426:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 889              		.loc 1 426 0
 890 0322 214B     		ldr	r3, .L80
 891 0324 0022     		movs	r2, #0
 892 0326 1A70     		strb	r2, [r3]
 427:..\src/interruptions.c ****                     interrupt_manager();
 893              		.loc 1 427 0
 894 0328 FFF7FEFF 		bl	interrupt_manager
 895              	.L53:
 428:..\src/interruptions.c ****                 }
 429:..\src/interruptions.c ****             }
 430:..\src/interruptions.c ****             if (!master_mode){
 896              		.loc 1 430 0
 897 032c 204B     		ldr	r3, .L80+8
 898 032e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 899 0330 002B     		cmp	r3, #0
 900 0332 11D1     		bne	.L57
 431:..\src/interruptions.c ****                 
 432:..\src/interruptions.c ****                 if (c_mem.MS.slave_comm_active) {
 901              		.loc 1 432 0
 902 0334 1D4B     		ldr	r3, .L80+4
 903 0336 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 904 033a 002B     		cmp	r3, #0
 905 033c 01D0     		beq	.L58
 433:..\src/interruptions.c ****                     // Stop feedback motors
 434:..\src/interruptions.c ****                     stop_master_device();
 906              		.loc 1 434 0
 907 033e FFF7FEFF 		bl	stop_master_device
 908              	.L58:
 435:..\src/interruptions.c ****                 }
 436:..\src/interruptions.c ****                 // Disable slave or motors
 437:..\src/interruptions.c ****                 deactivate_slaves();
 909              		.loc 1 437 0
 910 0342 FFF7FEFF 		bl	deactivate_slaves
 438:..\src/interruptions.c ****                         
 439:..\src/interruptions.c ****                 // Check Interrupt 
 440:..\src/interruptions.c ****                 if (interrupt_flag){
 911              		.loc 1 440 0
 912 0346 184B     		ldr	r3, .L80
 913 0348 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 914 034a 002B     		cmp	r3, #0
 915 034c 04D0     		beq	.L57
 441:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 916              		.loc 1 441 0
 917 034e 164B     		ldr	r3, .L80
 918 0350 0022     		movs	r2, #0
 919 0352 1A70     		strb	r2, [r3]
 442:..\src/interruptions.c ****                     interrupt_manager();
 920              		.loc 1 442 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 25


 921 0354 FFF7FEFF 		bl	interrupt_manager
 922              	.L57:
 443:..\src/interruptions.c ****                 } 
 444:..\src/interruptions.c ****             }
 445:..\src/interruptions.c ****     
 446:..\src/interruptions.c ****             // Control Master device main motor 
 447:..\src/interruptions.c ****             // (e.g. in AIR_CHAMBERS_FB device controls MOTOR_IDX motor [PUMP] with PWM control)
 448:..\src/interruptions.c ****             motor_control_generic(MOTOR_IDX);
 923              		.loc 1 448 0
 924 0358 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 925 035c 1846     		mov	r0, r3
 926 035e FFF7FEFF 		bl	motor_control_generic
 449:..\src/interruptions.c ****                         
 450:..\src/interruptions.c ****             // Always limit output voltage on the wrist
 451:..\src/interruptions.c ****              if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
 927              		.loc 1 451 0
 928 0362 124B     		ldr	r3, .L80+4
 929 0364 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 930 0368 032B     		cmp	r3, #3
 931 036a 0FD1     		bne	.L59
 452:..\src/interruptions.c ****                 if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
 932              		.loc 1 452 0
 933 036c 114B     		ldr	r3, .L80+12
 934 036e 9B68     		ldr	r3, [r3, #8]
 935 0370 432B     		cmp	r3, #67
 936 0372 02DD     		ble	.L60
 453:..\src/interruptions.c ****                     g_refNew[0].pwm = 67; // 67
 937              		.loc 1 453 0
 938 0374 0F4B     		ldr	r3, .L80+12
 939 0376 4322     		movs	r2, #67
 940 0378 9A60     		str	r2, [r3, #8]
 941              	.L60:
 454:..\src/interruptions.c ****                 if (g_refNew[0].pwm < -67)
 942              		.loc 1 454 0
 943 037a 0E4B     		ldr	r3, .L80+12
 944 037c 9B68     		ldr	r3, [r3, #8]
 945 037e 13F1430F 		cmn	r3, #67
 946 0382 03DA     		bge	.L59
 455:..\src/interruptions.c ****                     g_refNew[0].pwm = -67;
 947              		.loc 1 455 0
 948 0384 0B4B     		ldr	r3, .L80+12
 949 0386 6FF04202 		mvn	r2, #66
 950 038a 9A60     		str	r2, [r3, #8]
 951              	.L59:
 456:..\src/interruptions.c ****             }
 457:..\src/interruptions.c ****             
 458:..\src/interruptions.c ****             // Check Interrupt 
 459:..\src/interruptions.c **** 
 460:..\src/interruptions.c ****             if (interrupt_flag){
 952              		.loc 1 460 0
 953 038c 064B     		ldr	r3, .L80
 954 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 955 0390 002B     		cmp	r3, #0
 956 0392 11D0     		beq	.L77
 461:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 957              		.loc 1 461 0
 958 0394 044B     		ldr	r3, .L80
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 26


 959 0396 0022     		movs	r2, #0
 960 0398 1A70     		strb	r2, [r3]
 462:..\src/interruptions.c ****                 interrupt_manager();
 961              		.loc 1 462 0
 962 039a FFF7FEFF 		bl	interrupt_manager
 463:..\src/interruptions.c ****             }
 464:..\src/interruptions.c ****             
 465:..\src/interruptions.c ****             break;
 963              		.loc 1 465 0
 964 039e 0BE0     		b	.L77
 965              	.L75:
 328:..\src/interruptions.c ****             
 966              		.loc 1 328 0
 967 03a0 00BF     		nop
 968 03a2 0AE0     		b	.L35
 969              	.L76:
 400:..\src/interruptions.c ****             
 970              		.loc 1 400 0
 971 03a4 00BF     		nop
 972 03a6 08E0     		b	.L35
 973              	.L81:
 974              		.align	2
 975              	.L80:
 976 03a8 00000000 		.word	interrupt_flag
 977 03ac 00000000 		.word	c_mem
 978 03b0 00000000 		.word	master_mode
 979 03b4 00000000 		.word	g_refNew
 980              	.L77:
 981              		.loc 1 465 0
 982 03b8 00BF     		nop
 983              	.L35:
 466:..\src/interruptions.c ****     }
 467:..\src/interruptions.c **** 
 468:..\src/interruptions.c ****     //---------------------------------- Read conversion buffer - LOCK function
 469:..\src/interruptions.c **** 
 470:..\src/interruptions.c ****     analog_read_end();
 984              		.loc 1 470 0
 985 03ba FFF7FEFF 		bl	analog_read_end
 471:..\src/interruptions.c **** 
 472:..\src/interruptions.c ****     if (interrupt_flag){
 986              		.loc 1 472 0
 987 03be 844B     		ldr	r3, .L82
 988 03c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 03c2 002B     		cmp	r3, #0
 990 03c4 04D0     		beq	.L62
 473:..\src/interruptions.c ****         interrupt_flag = FALSE;
 991              		.loc 1 473 0
 992 03c6 824B     		ldr	r3, .L82
 993 03c8 0022     		movs	r2, #0
 994 03ca 1A70     		strb	r2, [r3]
 474:..\src/interruptions.c ****         interrupt_manager();
 995              		.loc 1 474 0
 996 03cc FFF7FEFF 		bl	interrupt_manager
 997              	.L62:
 475:..\src/interruptions.c ****     }
 476:..\src/interruptions.c **** 
 477:..\src/interruptions.c ****     //---------------------------------- Control Overcurrent
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 27


 478:..\src/interruptions.c **** 
 479:..\src/interruptions.c ****     overcurrent_control();
 998              		.loc 1 479 0
 999 03d0 FFF7FEFF 		bl	overcurrent_control
 480:..\src/interruptions.c ****     
 481:..\src/interruptions.c ****     // Check Interrupt 
 482:..\src/interruptions.c ****     
 483:..\src/interruptions.c ****     if (interrupt_flag){
 1000              		.loc 1 483 0
 1001 03d4 7E4B     		ldr	r3, .L82
 1002 03d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1003 03d8 002B     		cmp	r3, #0
 1004 03da 04D0     		beq	.L63
 484:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1005              		.loc 1 484 0
 1006 03dc 7C4B     		ldr	r3, .L82
 1007 03de 0022     		movs	r2, #0
 1008 03e0 1A70     		strb	r2, [r3]
 485:..\src/interruptions.c ****         interrupt_manager();
 1009              		.loc 1 485 0
 1010 03e2 FFF7FEFF 		bl	interrupt_manager
 1011              	.L63:
 486:..\src/interruptions.c ****     }
 487:..\src/interruptions.c **** 
 488:..\src/interruptions.c ****     //---------------------------------- Calibration 
 489:..\src/interruptions.c **** 
 490:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 491:..\src/interruptions.c ****     if (calib.enabled == TRUE) {
 1012              		.loc 1 491 0
 1013 03e6 7B4B     		ldr	r3, .L82+4
 1014 03e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 03ea 012B     		cmp	r3, #1
 1016 03ec 0ED1     		bne	.L64
 492:..\src/interruptions.c ****         if (counter_calibration == CALIBRATION_DIV) {
 1017              		.loc 1 492 0
 1018 03ee 7A4B     		ldr	r3, .L82+8
 1019 03f0 1B88     		ldrh	r3, [r3]
 1020 03f2 0A2B     		cmp	r3, #10
 1021 03f4 04D1     		bne	.L65
 493:..\src/interruptions.c ****             calibration();
 1022              		.loc 1 493 0
 1023 03f6 FFF7FEFF 		bl	calibration
 494:..\src/interruptions.c ****             counter_calibration = 0;
 1024              		.loc 1 494 0
 1025 03fa 774B     		ldr	r3, .L82+8
 1026 03fc 0022     		movs	r2, #0
 1027 03fe 1A80     		strh	r2, [r3]	@ movhi
 1028              	.L65:
 495:..\src/interruptions.c ****         }
 496:..\src/interruptions.c ****         counter_calibration++;
 1029              		.loc 1 496 0
 1030 0400 754B     		ldr	r3, .L82+8
 1031 0402 1B88     		ldrh	r3, [r3]
 1032 0404 0133     		adds	r3, r3, #1
 1033 0406 9AB2     		uxth	r2, r3
 1034 0408 734B     		ldr	r3, .L82+8
 1035 040a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 28


 1036              	.L64:
 497:..\src/interruptions.c ****     }
 498:..\src/interruptions.c **** 
 499:..\src/interruptions.c ****     // Check Interrupt 
 500:..\src/interruptions.c ****     
 501:..\src/interruptions.c ****     if (interrupt_flag){
 1037              		.loc 1 501 0
 1038 040c 704B     		ldr	r3, .L82
 1039 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1040 0410 002B     		cmp	r3, #0
 1041 0412 04D0     		beq	.L66
 502:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1042              		.loc 1 502 0
 1043 0414 6E4B     		ldr	r3, .L82
 1044 0416 0022     		movs	r2, #0
 1045 0418 1A70     		strb	r2, [r3]
 503:..\src/interruptions.c ****         interrupt_manager();
 1046              		.loc 1 503 0
 1047 041a FFF7FEFF 		bl	interrupt_manager
 1048              	.L66:
 504:..\src/interruptions.c ****     }
 505:..\src/interruptions.c ****     
 506:..\src/interruptions.c ****     if (c_mem.dev.dev_type == SOFTHAND_PRO){   
 1049              		.loc 1 506 0
 1050 041e 6F4B     		ldr	r3, .L82+12
 1051 0420 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1052 0424 002B     		cmp	r3, #0
 1053 0426 1CD1     		bne	.L67
 507:..\src/interruptions.c ****     
 508:..\src/interruptions.c ****         //---------------------------------- Rest position check
 509:..\src/interruptions.c **** 
 510:..\src/interruptions.c ****         // Divider 10, freq = 500 Hz
 511:..\src/interruptions.c ****         if (c_mem.SH.rest_position_flag == TRUE){
 1054              		.loc 1 511 0
 1055 0428 6C4B     		ldr	r3, .L82+12
 1056 042a 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 1057 042e 012B     		cmp	r3, #1
 1058 0430 17D1     		bne	.L67
 512:..\src/interruptions.c ****             if (counter_calibration == CALIBRATION_DIV) {
 1059              		.loc 1 512 0
 1060 0432 694B     		ldr	r3, .L82+8
 1061 0434 1B88     		ldrh	r3, [r3]
 1062 0436 0A2B     		cmp	r3, #10
 1063 0438 04D1     		bne	.L68
 513:..\src/interruptions.c ****                     check_rest_position();
 1064              		.loc 1 513 0
 1065 043a FFF7FEFF 		bl	check_rest_position
 514:..\src/interruptions.c ****                     counter_calibration = 0;
 1066              		.loc 1 514 0
 1067 043e 664B     		ldr	r3, .L82+8
 1068 0440 0022     		movs	r2, #0
 1069 0442 1A80     		strh	r2, [r3]	@ movhi
 1070              	.L68:
 515:..\src/interruptions.c ****             }
 516:..\src/interruptions.c ****             counter_calibration++;
 1071              		.loc 1 516 0
 1072 0444 644B     		ldr	r3, .L82+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 29


 1073 0446 1B88     		ldrh	r3, [r3]
 1074 0448 0133     		adds	r3, r3, #1
 1075 044a 9AB2     		uxth	r2, r3
 1076 044c 624B     		ldr	r3, .L82+8
 1077 044e 1A80     		strh	r2, [r3]	@ movhi
 517:..\src/interruptions.c **** 
 518:..\src/interruptions.c ****             // Check Interrupt     
 519:..\src/interruptions.c ****             if (interrupt_flag){
 1078              		.loc 1 519 0
 1079 0450 5F4B     		ldr	r3, .L82
 1080 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1081 0454 002B     		cmp	r3, #0
 1082 0456 04D0     		beq	.L67
 520:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 1083              		.loc 1 520 0
 1084 0458 5D4B     		ldr	r3, .L82
 1085 045a 0022     		movs	r2, #0
 1086 045c 1A70     		strb	r2, [r3]
 521:..\src/interruptions.c ****                 interrupt_manager();
 1087              		.loc 1 521 0
 1088 045e FFF7FEFF 		bl	interrupt_manager
 1089              	.L67:
 522:..\src/interruptions.c ****             }
 523:..\src/interruptions.c ****         }
 524:..\src/interruptions.c ****         
 525:..\src/interruptions.c ****     }
 526:..\src/interruptions.c ****     //---------------------------------- Control Cycles Counter
 527:..\src/interruptions.c **** 
 528:..\src/interruptions.c ****     cycles_counter_update();
 1090              		.loc 1 528 0
 1091 0462 FFF7FEFF 		bl	cycles_counter_update
 529:..\src/interruptions.c **** 
 530:..\src/interruptions.c ****     // Check Cycles Interrupt 
 531:..\src/interruptions.c ****     
 532:..\src/interruptions.c ****     if (cycles_interrupt_flag){
 1092              		.loc 1 532 0
 1093 0466 5E4B     		ldr	r3, .L82+16
 1094 0468 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1095 046a 002B     		cmp	r3, #0
 1096 046c 25D0     		beq	.L69
 533:..\src/interruptions.c ****         cycles_interrupt_flag = FALSE;
 1097              		.loc 1 533 0
 1098 046e 5C4B     		ldr	r3, .L82+16
 1099 0470 0022     		movs	r2, #0
 1100 0472 1A70     		strb	r2, [r3]
 534:..\src/interruptions.c **** 
 535:..\src/interruptions.c ****         // Cycles are written only every 120 seconds (CYCLES_TIMER interrupt)
 536:..\src/interruptions.c ****         // to save EEPROM writings (1M maximum)
 537:..\src/interruptions.c ****         if(can_write) {
 1101              		.loc 1 537 0
 1102 0474 5B4B     		ldr	r3, .L82+20
 1103 0476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1104 0478 002B     		cmp	r3, #0
 1105 047a 1ED0     		beq	.L69
 538:..\src/interruptions.c ****             cycles_status = PREPARE_DATA;
 1106              		.loc 1 538 0
 1107 047c 5A4B     		ldr	r3, .L82+24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 30


 1108 047e 0022     		movs	r2, #0
 1109 0480 1A70     		strb	r2, [r3]
 539:..\src/interruptions.c ****             
 540:..\src/interruptions.c ****             //Update time variable
 541:..\src/interruptions.c ****             g_mem.cnt.total_time_on = g_mem.cnt.total_time_on + 120;  // Add 120 seconds.
 1110              		.loc 1 541 0
 1111 0482 5A4B     		ldr	r3, .L82+28
 1112 0484 9B6D     		ldr	r3, [r3, #88]
 1113 0486 7833     		adds	r3, r3, #120
 1114 0488 584A     		ldr	r2, .L82+28
 1115 048a 9365     		str	r3, [r2, #88]
 542:..\src/interruptions.c ****             
 543:..\src/interruptions.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 1116              		.loc 1 543 0
 1117 048c 534B     		ldr	r3, .L82+12
 1118 048e 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 1119 0492 012B     		cmp	r3, #1
 1120 0494 11D1     		bne	.L69
 544:..\src/interruptions.c ****                 
 545:..\src/interruptions.c ****                 store_RTC_current_time();
 1121              		.loc 1 545 0
 1122 0496 FFF7FEFF 		bl	store_RTC_current_time
 546:..\src/interruptions.c ****                 
 547:..\src/interruptions.c ****                 //Write in SD card
 548:..\src/interruptions.c ****                 prepare_SD_info(info_);
 1123              		.loc 1 548 0
 1124 049a 3B46     		mov	r3, r7
 1125 049c 1846     		mov	r0, r3
 1126 049e FFF7FEFF 		bl	prepare_SD_info
 549:..\src/interruptions.c ****                 FS_Write(pFile, info_, strlen(info_));
 1127              		.loc 1 549 0
 1128 04a2 534B     		ldr	r3, .L82+32
 1129 04a4 1C68     		ldr	r4, [r3]
 1130 04a6 3B46     		mov	r3, r7
 1131 04a8 1846     		mov	r0, r3
 1132 04aa FFF7FEFF 		bl	strlen
 1133 04ae 0246     		mov	r2, r0
 1134 04b0 3B46     		mov	r3, r7
 1135 04b2 1946     		mov	r1, r3
 1136 04b4 2046     		mov	r0, r4
 1137 04b6 FFF7FEFF 		bl	FS_Write
 1138              	.L69:
 550:..\src/interruptions.c ****             }
 551:..\src/interruptions.c ****         }
 552:..\src/interruptions.c ****     }
 553:..\src/interruptions.c ****     
 554:..\src/interruptions.c ****     // Check Interrupt 
 555:..\src/interruptions.c ****     
 556:..\src/interruptions.c ****     if (interrupt_flag){
 1139              		.loc 1 556 0
 1140 04ba 454B     		ldr	r3, .L82
 1141 04bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1142 04be 002B     		cmp	r3, #0
 1143 04c0 04D0     		beq	.L70
 557:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1144              		.loc 1 557 0
 1145 04c2 434B     		ldr	r3, .L82
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 31


 1146 04c4 0022     		movs	r2, #0
 1147 04c6 1A70     		strb	r2, [r3]
 558:..\src/interruptions.c ****         interrupt_manager();
 1148              		.loc 1 558 0
 1149 04c8 FFF7FEFF 		bl	interrupt_manager
 1150              	.L70:
 559:..\src/interruptions.c ****     }
 560:..\src/interruptions.c ****     
 561:..\src/interruptions.c ****     
 562:..\src/interruptions.c ****     //---------------------------------- Check battery
 563:..\src/interruptions.c **** 
 564:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 565:..\src/interruptions.c ****     if (counter_tension_func == CALIBRATION_DIV) {
 1151              		.loc 1 565 0
 1152 04cc 494B     		ldr	r3, .L82+36
 1153 04ce 1B88     		ldrh	r3, [r3]
 1154 04d0 0A2B     		cmp	r3, #10
 1155 04d2 04D1     		bne	.L71
 566:..\src/interruptions.c ****         battery_management();   
 1156              		.loc 1 566 0
 1157 04d4 FFF7FEFF 		bl	battery_management
 567:..\src/interruptions.c ****         counter_tension_func = 0;
 1158              		.loc 1 567 0
 1159 04d8 464B     		ldr	r3, .L82+36
 1160 04da 0022     		movs	r2, #0
 1161 04dc 1A80     		strh	r2, [r3]	@ movhi
 1162              	.L71:
 568:..\src/interruptions.c ****     }
 569:..\src/interruptions.c ****     counter_tension_func++;
 1163              		.loc 1 569 0
 1164 04de 454B     		ldr	r3, .L82+36
 1165 04e0 1B88     		ldrh	r3, [r3]
 1166 04e2 0133     		adds	r3, r3, #1
 1167 04e4 9AB2     		uxth	r2, r3
 1168 04e6 434B     		ldr	r3, .L82+36
 1169 04e8 1A80     		strh	r2, [r3]	@ movhi
 570:..\src/interruptions.c **** 
 571:..\src/interruptions.c ****     // Check Interrupt 
 572:..\src/interruptions.c ****     
 573:..\src/interruptions.c ****     if (interrupt_flag){
 1170              		.loc 1 573 0
 1171 04ea 394B     		ldr	r3, .L82
 1172 04ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1173 04ee 002B     		cmp	r3, #0
 1174 04f0 04D0     		beq	.L72
 574:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1175              		.loc 1 574 0
 1176 04f2 374B     		ldr	r3, .L82
 1177 04f4 0022     		movs	r2, #0
 1178 04f6 1A70     		strb	r2, [r3]
 575:..\src/interruptions.c ****         interrupt_manager();
 1179              		.loc 1 575 0
 1180 04f8 FFF7FEFF 		bl	interrupt_manager
 1181              	.L72:
 576:..\src/interruptions.c ****     }
 577:..\src/interruptions.c ****    
 578:..\src/interruptions.c ****     //---------------------------------- Read IMUs
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 32


 579:..\src/interruptions.c ****     if (c_mem.imu.read_imu_flag) {
 1182              		.loc 1 579 0
 1183 04fc 374B     		ldr	r3, .L82+12
 1184 04fe 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 1185 0502 002B     		cmp	r3, #0
 1186 0504 0AD0     		beq	.L73
 580:..\src/interruptions.c ****         ReadAllIMUs();      // IMU reading is atomic, no RS485 request is handled
 1187              		.loc 1 580 0
 1188 0506 FFF7FEFF 		bl	ReadAllIMUs
 581:..\src/interruptions.c ****         
 582:..\src/interruptions.c ****         if (interrupt_flag){
 1189              		.loc 1 582 0
 1190 050a 314B     		ldr	r3, .L82
 1191 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1192 050e 002B     		cmp	r3, #0
 1193 0510 04D0     		beq	.L73
 583:..\src/interruptions.c ****             interrupt_flag = FALSE;
 1194              		.loc 1 583 0
 1195 0512 2F4B     		ldr	r3, .L82
 1196 0514 0022     		movs	r2, #0
 1197 0516 1A70     		strb	r2, [r3]
 584:..\src/interruptions.c ****             interrupt_manager();
 1198              		.loc 1 584 0
 1199 0518 FFF7FEFF 		bl	interrupt_manager
 1200              	.L73:
 585:..\src/interruptions.c ****         }
 586:..\src/interruptions.c ****     }
 587:..\src/interruptions.c ****    
 588:..\src/interruptions.c ****     //---------------------------------- Update States
 589:..\src/interruptions.c ****     
 590:..\src/interruptions.c ****     // Load k-1 state
 591:..\src/interruptions.c ****     memcpy( &g_adc_measOld, &g_adc_meas, sizeof(g_adc_meas) );
 1201              		.loc 1 591 0
 1202 051c 364A     		ldr	r2, .L82+40
 1203 051e 374B     		ldr	r3, .L82+44
 1204 0520 1446     		mov	r4, r2
 1205 0522 1D46     		mov	r5, r3
 1206 0524 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1207 0526 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1208 0528 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1209 052a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1210 052c 95E80300 		ldmia	r5, {r0, r1}
 1211 0530 84E80300 		stmia	r4, {r0, r1}
 592:..\src/interruptions.c ****     memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 1212              		.loc 1 592 0
 1213 0534 324A     		ldr	r2, .L82+48
 1214 0536 334B     		ldr	r3, .L82+52
 1215 0538 1046     		mov	r0, r2
 1216 053a 1946     		mov	r1, r3
 1217 053c 6823     		movs	r3, #104
 1218 053e 1A46     		mov	r2, r3
 1219 0540 FFF7FEFF 		bl	memcpy
 593:..\src/interruptions.c ****     memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 1220              		.loc 1 593 0
 1221 0544 304A     		ldr	r2, .L82+56
 1222 0546 314B     		ldr	r3, .L82+60
 1223 0548 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 33


 1224 054a 1D46     		mov	r5, r3
 1225 054c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1226 054e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1227 0550 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1228 0554 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 594:..\src/interruptions.c **** 
 595:..\src/interruptions.c ****     // Load k+1 state        
 596:..\src/interruptions.c ****     memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 1229              		.loc 1 596 0
 1230 0558 2C4A     		ldr	r2, .L82+60
 1231 055a 2D4B     		ldr	r3, .L82+64
 1232 055c 1446     		mov	r4, r2
 1233 055e 1D46     		mov	r5, r3
 1234 0560 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1235 0562 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1236 0564 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1237 0568 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 597:..\src/interruptions.c ****     memcpy( &g_imu, &g_imuNew, sizeof(g_imu) );
 1238              		.loc 1 597 0
 1239 056c 294A     		ldr	r2, .L82+68
 1240 056e 2A4B     		ldr	r3, .L82+72
 1241 0570 1046     		mov	r0, r2
 1242 0572 1946     		mov	r1, r3
 1243 0574 C823     		movs	r3, #200
 1244 0576 1A46     		mov	r2, r3
 1245 0578 FFF7FEFF 		bl	memcpy
 598:..\src/interruptions.c ****                 
 599:..\src/interruptions.c ****     if (interrupt_flag){
 1246              		.loc 1 599 0
 1247 057c 144B     		ldr	r3, .L82
 1248 057e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1249 0580 002B     		cmp	r3, #0
 1250 0582 04D0     		beq	.L74
 600:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1251              		.loc 1 600 0
 1252 0584 124B     		ldr	r3, .L82
 1253 0586 0022     		movs	r2, #0
 1254 0588 1A70     		strb	r2, [r3]
 601:..\src/interruptions.c ****         interrupt_manager();
 1255              		.loc 1 601 0
 1256 058a FFF7FEFF 		bl	interrupt_manager
 1257              	.L74:
 602:..\src/interruptions.c ****     }
 603:..\src/interruptions.c **** 
 604:..\src/interruptions.c ****     timer_value = (uint16)MY_TIMER_ReadCounter();
 1258              		.loc 1 604 0
 1259 058e FFF7FEFF 		bl	MY_TIMER_ReadCounter
 1260 0592 0346     		mov	r3, r0
 1261 0594 1A46     		mov	r2, r3
 1262 0596 214B     		ldr	r3, .L82+76
 1263 0598 1A80     		strh	r2, [r3]	@ movhi
 605:..\src/interruptions.c ****     cycle_time = ((float)(timer_value0 - timer_value)/1000000.0);
 1264              		.loc 1 605 0
 1265 059a 214B     		ldr	r3, .L82+80
 1266 059c 1B88     		ldrh	r3, [r3]
 1267 059e 1A46     		mov	r2, r3
 1268 05a0 1E4B     		ldr	r3, .L82+76
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 34


 1269 05a2 1B88     		ldrh	r3, [r3]
 1270 05a4 D31A     		subs	r3, r2, r3
 1271 05a6 1846     		mov	r0, r3
 1272 05a8 FFF7FEFF 		bl	__aeabi_i2f
 1273 05ac 0346     		mov	r3, r0
 1274 05ae 1D49     		ldr	r1, .L82+84
 1275 05b0 1846     		mov	r0, r3
 1276 05b2 FFF7FEFF 		bl	__aeabi_fdiv
 1277 05b6 0346     		mov	r3, r0
 1278 05b8 1A46     		mov	r2, r3
 1279 05ba 1B4B     		ldr	r3, .L82+88
 1280 05bc 1A60     		str	r2, [r3]	@ float
 606:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x01);   // reset timer
 1281              		.loc 1 606 0
 1282 05be 0120     		movs	r0, #1
 1283 05c0 FFF7FEFF 		bl	MY_TIMER_REG_Write
 607:..\src/interruptions.c **** 
 608:..\src/interruptions.c **** }
 1284              		.loc 1 608 0
 1285 05c4 00BF     		nop
 1286 05c6 07F6C817 		addw	r7, r7, #2504
 1287              		.cfi_def_cfa_offset 16
 1288 05ca BD46     		mov	sp, r7
 1289              		.cfi_def_cfa_register 13
 1290              		@ sp needed
 1291 05cc B0BD     		pop	{r4, r5, r7, pc}
 1292              	.L83:
 1293 05ce 00BF     		.align	2
 1294              	.L82:
 1295 05d0 00000000 		.word	interrupt_flag
 1296 05d4 00000000 		.word	calib
 1297 05d8 00000000 		.word	counter_calibration.10453
 1298 05dc 00000000 		.word	c_mem
 1299 05e0 00000000 		.word	cycles_interrupt_flag
 1300 05e4 00000000 		.word	can_write
 1301 05e8 00000000 		.word	cycles_status
 1302 05ec 00000000 		.word	g_mem
 1303 05f0 00000000 		.word	pFile
 1304 05f4 02000000 		.word	counter_tension_func.10454
 1305 05f8 00000000 		.word	g_adc_measOld
 1306 05fc 00000000 		.word	g_adc_meas
 1307 0600 00000000 		.word	g_measOld
 1308 0604 00000000 		.word	g_meas
 1309 0608 00000000 		.word	g_refOld
 1310 060c 00000000 		.word	g_ref
 1311 0610 00000000 		.word	g_refNew
 1312 0614 00000000 		.word	g_imu
 1313 0618 00000000 		.word	g_imuNew
 1314 061c 00000000 		.word	timer_value
 1315 0620 00000000 		.word	timer_value0
 1316 0624 00247449 		.word	1232348160
 1317 0628 00000000 		.word	cycle_time
 1318              		.cfi_endproc
 1319              	.LFE67:
 1320              		.size	function_scheduler, .-function_scheduler
 1321              		.section	.text.compute_reference,"ax",%progbits
 1322              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 35


 1323              		.global	compute_reference
 1324              		.thumb
 1325              		.thumb_func
 1326              		.type	compute_reference, %function
 1327              	compute_reference:
 1328              	.LFB68:
 609:..\src/interruptions.c **** 
 610:..\src/interruptions.c **** //==============================================================================
 611:..\src/interruptions.c **** //                                                       COMPUTE MOTOR REFERENCE
 612:..\src/interruptions.c **** //==============================================================================
 613:..\src/interruptions.c **** void compute_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct st_ref* st_refOld_p) {
 1329              		.loc 1 613 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 40
 1332              		@ frame_needed = 1, uses_anonymous_args = 0
 1333 0000 80B5     		push	{r7, lr}
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 7, -8
 1336              		.cfi_offset 14, -4
 1337 0002 8CB0     		sub	sp, sp, #48
 1338              		.cfi_def_cfa_offset 56
 1339 0004 02AF     		add	r7, sp, #8
 1340              		.cfi_def_cfa 7, 48
 1341 0006 0346     		mov	r3, r0
 1342 0008 B960     		str	r1, [r7, #8]
 1343 000a 7A60     		str	r2, [r7, #4]
 1344 000c FB73     		strb	r3, [r7, #15]
 614:..\src/interruptions.c ****     
 615:..\src/interruptions.c ****     int32 CYDATA handle_value;
 616:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 617:..\src/interruptions.c ****     struct st_motor* MOT = &c_mem.motor[motor_idx];      // SoftHand default motor
 1345              		.loc 1 617 0
 1346 000e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1347 0010 1346     		mov	r3, r2
 1348 0012 DB00     		lsls	r3, r3, #3
 1349 0014 9B1A     		subs	r3, r3, r2
 1350 0016 1B01     		lsls	r3, r3, #4
 1351 0018 B033     		adds	r3, r3, #176
 1352 001a A74A     		ldr	r2, .L148
 1353 001c 1344     		add	r3, r3, r2
 1354 001e 3B62     		str	r3, [r7, #32]
 618:..\src/interruptions.c ****     uint8 ENC_L = MOT->encoder_line;          // Associated encoder line
 1355              		.loc 1 618 0
 1356 0020 3B6A     		ldr	r3, [r7, #32]
 1357 0022 93F86030 		ldrb	r3, [r3, #96]
 1358 0026 FB77     		strb	r3, [r7, #31]
 619:..\src/interruptions.c ****     
 620:..\src/interruptions.c ****     static uint8 current_emg[NUM_OF_MOTORS] = {0, 0};   // 0 NONE
 621:..\src/interruptions.c ****                                                         // 1 EMG 1
 622:..\src/interruptions.c ****                                                         // 2 EMG 2
 623:..\src/interruptions.c ****                                                         // wait for both to get down
 624:..\src/interruptions.c ****     
 625:..\src/interruptions.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 1359              		.loc 1 625 0
 1360 0028 A44B     		ldr	r3, .L148+4
 1361 002a 1B68     		ldr	r3, [r3]
 1362 002c A24A     		ldr	r2, .L148
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 36


 1363 002e B2F8F021 		ldrh	r2, [r2, #496]
 1364 0032 9B1A     		subs	r3, r3, r2
 1365 0034 BB61     		str	r3, [r7, #24]
 626:..\src/interruptions.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 1366              		.loc 1 626 0
 1367 0036 A14B     		ldr	r3, .L148+4
 1368 0038 5B68     		ldr	r3, [r3, #4]
 1369 003a 9F4A     		ldr	r2, .L148
 1370 003c B2F8F221 		ldrh	r2, [r2, #498]
 1371 0040 9B1A     		subs	r3, r3, r2
 1372 0042 7B61     		str	r3, [r7, #20]
 627:..\src/interruptions.c ****     
 628:..\src/interruptions.c ****      // =========================== POSITION INPUT ==============================            
 629:..\src/interruptions.c ****     switch(MOT->input_mode) {
 1373              		.loc 1 629 0
 1374 0044 3B6A     		ldr	r3, [r7, #32]
 1375 0046 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 1376 004a 013B     		subs	r3, r3, #1
 1377 004c 062B     		cmp	r3, #6
 1378 004e 00F25182 		bhi	.L140
 1379 0052 01A2     		adr	r2, .L87
 1380 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1381              		.p2align 2
 1382              	.L87:
 1383 0058 75000000 		.word	.L86+1
 1384 005c 21020000 		.word	.L88+1
 1385 0060 C9020000 		.word	.L89+1
 1386 0064 31030000 		.word	.L90+1
 1387 0068 11040000 		.word	.L91+1
 1388 006c 4D010000 		.word	.L92+1
 1389 0070 5B020000 		.word	.L93+1
 1390              		.p2align 1
 1391              	.L86:
 630:..\src/interruptions.c ****         case INPUT_MODE_ENCODER3:
 631:..\src/interruptions.c **** 
 632:..\src/interruptions.c ****             // Calculate handle value based on position of handle in the
 633:..\src/interruptions.c ****             // sensor chain and multiplication factor between handle and motor position
 634:..\src/interruptions.c ****             if (c_mem.enc[ENC_L].double_encoder_on_off) 
 1392              		.loc 1 634 0
 1393 0074 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1394 0076 9049     		ldr	r1, .L148
 1395 0078 1346     		mov	r3, r2
 1396 007a 5B00     		lsls	r3, r3, #1
 1397 007c 1344     		add	r3, r3, r2
 1398 007e 1B01     		lsls	r3, r3, #4
 1399 0080 0B44     		add	r3, r3, r1
 1400 0082 03F5D873 		add	r3, r3, #432
 1401 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 0088 002B     		cmp	r3, #0
 1403 008a 19D0     		beq	.L94
 635:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[2] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 1404              		.loc 1 635 0
 1405 008c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1406 008e 8C4A     		ldr	r2, .L148+8
 1407 0090 3421     		movs	r1, #52
 1408 0092 01FB03F3 		mul	r3, r1, r3
 1409 0096 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 37


 1410 0098 0833     		adds	r3, r3, #8
 1411 009a 1968     		ldr	r1, [r3]
 1412 009c FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1413 009e 8648     		ldr	r0, .L148
 1414 00a0 1346     		mov	r3, r2
 1415 00a2 5B00     		lsls	r3, r3, #1
 1416 00a4 1344     		add	r3, r3, r2
 1417 00a6 1B01     		lsls	r3, r3, #4
 1418 00a8 0344     		add	r3, r3, r0
 1419 00aa 03F5DA73 		add	r3, r3, #436
 1420 00ae 93F90030 		ldrsb	r3, [r3]
 1421 00b2 03FB01F2 		mul	r2, r3, r1
 1422 00b6 3B6A     		ldr	r3, [r7, #32]
 1423 00b8 5B6B     		ldr	r3, [r3, #52]
 1424 00ba 1344     		add	r3, r3, r2
 1425 00bc 7B62     		str	r3, [r7, #36]
 1426 00be 18E0     		b	.L95
 1427              	.L94:
 636:..\src/interruptions.c ****             else
 637:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[1] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 1428              		.loc 1 637 0
 1429 00c0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1430 00c2 7F4A     		ldr	r2, .L148+8
 1431 00c4 3421     		movs	r1, #52
 1432 00c6 01FB03F3 		mul	r3, r1, r3
 1433 00ca 1344     		add	r3, r3, r2
 1434 00cc 0433     		adds	r3, r3, #4
 1435 00ce 1968     		ldr	r1, [r3]
 1436 00d0 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1437 00d2 7948     		ldr	r0, .L148
 1438 00d4 1346     		mov	r3, r2
 1439 00d6 5B00     		lsls	r3, r3, #1
 1440 00d8 1344     		add	r3, r3, r2
 1441 00da 1B01     		lsls	r3, r3, #4
 1442 00dc 0344     		add	r3, r3, r0
 1443 00de 03F5DA73 		add	r3, r3, #436
 1444 00e2 93F90030 		ldrsb	r3, [r3]
 1445 00e6 03FB01F2 		mul	r2, r3, r1
 1446 00ea 3B6A     		ldr	r3, [r7, #32]
 1447 00ec 5B6B     		ldr	r3, [r3, #52]
 1448 00ee 1344     		add	r3, r3, r2
 1449 00f0 7B62     		str	r3, [r7, #36]
 1450              	.L95:
 638:..\src/interruptions.c ****             
 639:..\src/interruptions.c **** 
 640:..\src/interruptions.c ****             // Read handle and use it as reference for the motor
 641:..\src/interruptions.c ****             if (((handle_value - st_refOld_p->pos) > MOT->max_step_pos) && (MOT->max_step_pos != 0)
 1451              		.loc 1 641 0
 1452 00f2 7B68     		ldr	r3, [r7, #4]
 1453 00f4 1B68     		ldr	r3, [r3]
 1454 00f6 7A6A     		ldr	r2, [r7, #36]
 1455 00f8 D21A     		subs	r2, r2, r3
 1456 00fa 3B6A     		ldr	r3, [r7, #32]
 1457 00fc 1B6C     		ldr	r3, [r3, #64]
 1458 00fe 9A42     		cmp	r2, r3
 1459 0100 0BDD     		ble	.L96
 1460              		.loc 1 641 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 38


 1461 0102 3B6A     		ldr	r3, [r7, #32]
 1462 0104 1B6C     		ldr	r3, [r3, #64]
 1463 0106 002B     		cmp	r3, #0
 1464 0108 07D0     		beq	.L96
 642:..\src/interruptions.c ****                 st_ref_p->pos += MOT->max_step_pos;
 1465              		.loc 1 642 0 is_stmt 1
 1466 010a BB68     		ldr	r3, [r7, #8]
 1467 010c 1A68     		ldr	r2, [r3]
 1468 010e 3B6A     		ldr	r3, [r7, #32]
 1469 0110 1B6C     		ldr	r3, [r3, #64]
 1470 0112 1A44     		add	r2, r2, r3
 1471 0114 BB68     		ldr	r3, [r7, #8]
 1472 0116 1A60     		str	r2, [r3]
 1473 0118 17E0     		b	.L97
 1474              	.L96:
 643:..\src/interruptions.c ****             else {
 644:..\src/interruptions.c ****                 if (((handle_value - st_refOld_p->pos) < MOT->max_step_neg) && (MOT->max_step_neg !
 1475              		.loc 1 644 0
 1476 011a 7B68     		ldr	r3, [r7, #4]
 1477 011c 1B68     		ldr	r3, [r3]
 1478 011e 7A6A     		ldr	r2, [r7, #36]
 1479 0120 D21A     		subs	r2, r2, r3
 1480 0122 3B6A     		ldr	r3, [r7, #32]
 1481 0124 DB6B     		ldr	r3, [r3, #60]
 1482 0126 9A42     		cmp	r2, r3
 1483 0128 0BDA     		bge	.L98
 1484              		.loc 1 644 0 is_stmt 0 discriminator 1
 1485 012a 3B6A     		ldr	r3, [r7, #32]
 1486 012c DB6B     		ldr	r3, [r3, #60]
 1487 012e 002B     		cmp	r3, #0
 1488 0130 07D0     		beq	.L98
 645:..\src/interruptions.c ****                     st_ref_p->pos += MOT->max_step_neg;
 1489              		.loc 1 645 0 is_stmt 1
 1490 0132 BB68     		ldr	r3, [r7, #8]
 1491 0134 1A68     		ldr	r2, [r3]
 1492 0136 3B6A     		ldr	r3, [r7, #32]
 1493 0138 DB6B     		ldr	r3, [r3, #60]
 1494 013a 1A44     		add	r2, r2, r3
 1495 013c BB68     		ldr	r3, [r7, #8]
 1496 013e 1A60     		str	r2, [r3]
 1497 0140 03E0     		b	.L97
 1498              	.L98:
 646:..\src/interruptions.c ****                 else
 647:..\src/interruptions.c ****                     st_ref_p->pos = handle_value;
 1499              		.loc 1 647 0
 1500 0142 BB68     		ldr	r3, [r7, #8]
 1501 0144 7A6A     		ldr	r2, [r7, #36]
 1502 0146 1A60     		str	r2, [r3]
 648:..\src/interruptions.c ****             }
 649:..\src/interruptions.c ****             break;
 1503              		.loc 1 649 0
 1504 0148 DFE1     		b	.L99
 1505              	.L97:
 1506 014a DEE1     		b	.L99
 1507              	.L92:
 650:..\src/interruptions.c ****         
 651:..\src/interruptions.c ****         case INPUT_MODE_JOYSTICK:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 39


 652:..\src/interruptions.c ****             
 653:..\src/interruptions.c ****             if (c_mem.dev.use_2nd_motor_flag == FALSE){
 1508              		.loc 1 653 0
 1509 014c 5A4B     		ldr	r3, .L148
 1510 014e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 1511 0152 002B     		cmp	r3, #0
 1512 0154 57D1     		bne	.L100
 654:..\src/interruptions.c ****                 // Code for single motor devices. Use only up/down direction to give speed referenc
 655:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos;
 1513              		.loc 1 655 0
 1514 0156 7B68     		ldr	r3, [r7, #4]
 1515 0158 1A68     		ldr	r2, [r3]
 1516 015a BB68     		ldr	r3, [r7, #8]
 1517 015c 1A60     		str	r2, [r3]
 656:..\src/interruptions.c ****                 if(!(g_adc_meas.joystick[0] > 700)) {
 1518              		.loc 1 656 0
 1519 015e 574B     		ldr	r3, .L148+4
 1520 0160 1B6A     		ldr	r3, [r3, #32]
 1521 0162 B3F52F7F 		cmp	r3, #700
 1522 0166 45DC     		bgt	.L101
 1523              	.LBB3:
 657:..\src/interruptions.c ****                     int32 CYDATA err_joy_1 = g_adc_meas.joystick[0] - c_mem.JOY_spec.joystick_thres
 1524              		.loc 1 657 0
 1525 0168 544B     		ldr	r3, .L148+4
 1526 016a 1B6A     		ldr	r3, [r3, #32]
 1527 016c 524A     		ldr	r2, .L148
 1528 016e B2F9B222 		ldrsh	r2, [r2, #690]
 1529 0172 9B1A     		subs	r3, r3, r2
 1530 0174 3B61     		str	r3, [r7, #16]
 658:..\src/interruptions.c **** 
 659:..\src/interruptions.c ****                     if(g_adc_meas.joystick[0] > c_mem.JOY_spec.joystick_threshold) {     //both mot
 1531              		.loc 1 659 0
 1532 0176 514B     		ldr	r3, .L148+4
 1533 0178 1B6A     		ldr	r3, [r3, #32]
 1534 017a 4F4A     		ldr	r2, .L148
 1535 017c B2F9B222 		ldrsh	r2, [r2, #690]
 1536 0180 9342     		cmp	r3, r2
 1537 0182 13DD     		ble	.L102
 660:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed
 1538              		.loc 1 660 0
 1539 0184 BB68     		ldr	r3, [r7, #8]
 1540 0186 1A68     		ldr	r2, [r3]
 1541 0188 4B4B     		ldr	r3, .L148
 1542 018a B3F8B032 		ldrh	r3, [r3, #688]
 1543 018e 1946     		mov	r1, r3
 1544 0190 3B69     		ldr	r3, [r7, #16]
 1545 0192 03FB01F1 		mul	r1, r3, r1
 1546 0196 484B     		ldr	r3, .L148
 1547 0198 B3F9B232 		ldrsh	r3, [r3, #690]
 1548 019c C3F58063 		rsb	r3, r3, #1024
 1549 01a0 91FBF3F3 		sdiv	r3, r1, r3
 1550 01a4 1A44     		add	r2, r2, r3
 1551 01a6 BB68     		ldr	r3, [r7, #8]
 1552 01a8 1A60     		str	r2, [r3]
 1553              	.LBE3:
 661:..\src/interruptions.c ****                     }
 662:..\src/interruptions.c ****                     else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 40


 663:..\src/interruptions.c ****                         err_joy_1 = g_adc_meas.joystick[0] + c_mem.JOY_spec.joystick_threshold;
 664:..\src/interruptions.c ****                         if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both m
 665:..\src/interruptions.c ****                             st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_s
 666:..\src/interruptions.c ****                         }
 667:..\src/interruptions.c ****                     }
 668:..\src/interruptions.c ****                 }
 669:..\src/interruptions.c ****                 else {  //The button is pressed and the motor reference is gradually set to zero 
 670:..\src/interruptions.c ****                     st_ref_p->pos -= (int32) g_mem.JOY_spec.joystick_closure_speed;
 671:..\src/interruptions.c ****                 }
 672:..\src/interruptions.c ****             }
 673:..\src/interruptions.c ****             else {
 674:..\src/interruptions.c ****                 // Code for two motors devices. Use both direction to give speed references
 675:..\src/interruptions.c ****                 if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 676:..\src/interruptions.c ****                     compute_SoftHand_2_motors_joystick_reference(motor_idx, st_ref_p, st_refOld_p);
 677:..\src/interruptions.c ****                 }
 678:..\src/interruptions.c ****             }
 679:..\src/interruptions.c ****             break;
 1554              		.loc 1 679 0
 1555 01aa A5E1     		b	.L141
 1556              	.L102:
 1557              	.LBB4:
 663:..\src/interruptions.c ****                         if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both m
 1558              		.loc 1 663 0
 1559 01ac 434B     		ldr	r3, .L148+4
 1560 01ae 1B6A     		ldr	r3, [r3, #32]
 1561 01b0 414A     		ldr	r2, .L148
 1562 01b2 B2F9B222 		ldrsh	r2, [r2, #690]
 1563 01b6 1344     		add	r3, r3, r2
 1564 01b8 3B61     		str	r3, [r7, #16]
 664:..\src/interruptions.c ****                             st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_s
 1565              		.loc 1 664 0
 1566 01ba 404B     		ldr	r3, .L148+4
 1567 01bc 1A6A     		ldr	r2, [r3, #32]
 1568 01be 3E4B     		ldr	r3, .L148
 1569 01c0 B3F9B232 		ldrsh	r3, [r3, #690]
 1570 01c4 5B42     		negs	r3, r3
 1571 01c6 9A42     		cmp	r2, r3
 1572 01c8 80F29681 		bge	.L141
 665:..\src/interruptions.c ****                         }
 1573              		.loc 1 665 0
 1574 01cc BB68     		ldr	r3, [r7, #8]
 1575 01ce 1A68     		ldr	r2, [r3]
 1576 01d0 394B     		ldr	r3, .L148
 1577 01d2 B3F8B032 		ldrh	r3, [r3, #688]
 1578 01d6 1946     		mov	r1, r3
 1579 01d8 3B69     		ldr	r3, [r7, #16]
 1580 01da 03FB01F1 		mul	r1, r3, r1
 1581 01de 364B     		ldr	r3, .L148
 1582 01e0 B3F9B232 		ldrsh	r3, [r3, #690]
 1583 01e4 C3F58063 		rsb	r3, r3, #1024
 1584 01e8 91FBF3F3 		sdiv	r3, r1, r3
 1585 01ec 1A44     		add	r2, r2, r3
 1586 01ee BB68     		ldr	r3, [r7, #8]
 1587 01f0 1A60     		str	r2, [r3]
 1588              	.LBE4:
 1589              		.loc 1 679 0
 1590 01f2 81E1     		b	.L141
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 41


 1591              	.L101:
 670:..\src/interruptions.c ****                 }
 1592              		.loc 1 670 0
 1593 01f4 BB68     		ldr	r3, [r7, #8]
 1594 01f6 1B68     		ldr	r3, [r3]
 1595 01f8 324A     		ldr	r2, .L148+12
 1596 01fa B2F8B022 		ldrh	r2, [r2, #688]
 1597 01fe 9A1A     		subs	r2, r3, r2
 1598 0200 BB68     		ldr	r3, [r7, #8]
 1599 0202 1A60     		str	r2, [r3]
 1600              		.loc 1 679 0
 1601 0204 78E1     		b	.L141
 1602              	.L100:
 675:..\src/interruptions.c ****                     compute_SoftHand_2_motors_joystick_reference(motor_idx, st_ref_p, st_refOld_p);
 1603              		.loc 1 675 0
 1604 0206 2C4B     		ldr	r3, .L148
 1605 0208 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1606 020c 042B     		cmp	r3, #4
 1607 020e 40F07381 		bne	.L141
 676:..\src/interruptions.c ****                 }
 1608              		.loc 1 676 0
 1609 0212 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1610 0214 7A68     		ldr	r2, [r7, #4]
 1611 0216 B968     		ldr	r1, [r7, #8]
 1612 0218 1846     		mov	r0, r3
 1613 021a FFF7FEFF 		bl	compute_SoftHand_2_motors_joystick_reference
 1614              		.loc 1 679 0
 1615 021e 6BE1     		b	.L141
 1616              	.L88:
 680:..\src/interruptions.c ****             
 681:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
 682:..\src/interruptions.c ****             if (err_emg_1 > 0)
 1617              		.loc 1 682 0
 1618 0220 BB69     		ldr	r3, [r7, #24]
 1619 0222 002B     		cmp	r3, #0
 1620 0224 15DD     		ble	.L106
 683:..\src/interruptions.c ****                 st_ref_p->pos = (err_emg_1 * g_mem.motor[motor_idx].pos_lim_sup) / (1024 - c_mem.em
 1621              		.loc 1 683 0
 1622 0226 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1623 0228 2649     		ldr	r1, .L148+12
 1624 022a 1346     		mov	r3, r2
 1625 022c DB00     		lsls	r3, r3, #3
 1626 022e 9B1A     		subs	r3, r3, r2
 1627 0230 1B01     		lsls	r3, r3, #4
 1628 0232 0B44     		add	r3, r3, r1
 1629 0234 E833     		adds	r3, r3, #232
 1630 0236 1B68     		ldr	r3, [r3]
 1631 0238 BA69     		ldr	r2, [r7, #24]
 1632 023a 02FB03F2 		mul	r2, r2, r3
 1633 023e 1E4B     		ldr	r3, .L148
 1634 0240 B3F8F031 		ldrh	r3, [r3, #496]
 1635 0244 C3F58063 		rsb	r3, r3, #1024
 1636 0248 92FBF3F2 		sdiv	r2, r2, r3
 1637 024c BB68     		ldr	r3, [r7, #8]
 1638 024e 1A60     		str	r2, [r3]
 684:..\src/interruptions.c ****             else
 685:..\src/interruptions.c ****                 st_ref_p->pos = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 42


 686:..\src/interruptions.c ****             break;
 1639              		.loc 1 686 0
 1640 0250 5BE1     		b	.L99
 1641              	.L106:
 685:..\src/interruptions.c ****             break;
 1642              		.loc 1 685 0
 1643 0252 BB68     		ldr	r3, [r7, #8]
 1644 0254 0022     		movs	r2, #0
 1645 0256 1A60     		str	r2, [r3]
 1646              		.loc 1 686 0
 1647 0258 57E1     		b	.L99
 1648              	.L93:
 687:..\src/interruptions.c ****         
 688:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 689:..\src/interruptions.c ****             if (err_emg_1 > 0)
 1649              		.loc 1 689 0
 1650 025a BB69     		ldr	r3, [r7, #24]
 1651 025c 002B     		cmp	r3, #0
 1652 025e 1FDD     		ble	.L108
 690:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.motor[motor_idx].pos_lim_sup - (err_emg_1 * g_mem.motor[motor
 1653              		.loc 1 690 0
 1654 0260 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1655 0262 1849     		ldr	r1, .L148+12
 1656 0264 1346     		mov	r3, r2
 1657 0266 DB00     		lsls	r3, r3, #3
 1658 0268 9B1A     		subs	r3, r3, r2
 1659 026a 1B01     		lsls	r3, r3, #4
 1660 026c 0B44     		add	r3, r3, r1
 1661 026e E833     		adds	r3, r3, #232
 1662 0270 1968     		ldr	r1, [r3]
 1663 0272 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1664 0274 1348     		ldr	r0, .L148+12
 1665 0276 1346     		mov	r3, r2
 1666 0278 DB00     		lsls	r3, r3, #3
 1667 027a 9B1A     		subs	r3, r3, r2
 1668 027c 1B01     		lsls	r3, r3, #4
 1669 027e 0344     		add	r3, r3, r0
 1670 0280 E833     		adds	r3, r3, #232
 1671 0282 1B68     		ldr	r3, [r3]
 1672 0284 BA69     		ldr	r2, [r7, #24]
 1673 0286 02FB03F2 		mul	r2, r2, r3
 1674 028a 0B4B     		ldr	r3, .L148
 1675 028c B3F8F031 		ldrh	r3, [r3, #496]
 1676 0290 C3F58063 		rsb	r3, r3, #1024
 1677 0294 92FBF3F3 		sdiv	r3, r2, r3
 1678 0298 CA1A     		subs	r2, r1, r3
 1679 029a BB68     		ldr	r3, [r7, #8]
 1680 029c 1A60     		str	r2, [r3]
 691:..\src/interruptions.c ****             else
 692:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.motor[motor_idx].pos_lim_sup;
 693:..\src/interruptions.c ****             break;
 1681              		.loc 1 693 0
 1682 029e 34E1     		b	.L99
 1683              	.L108:
 692:..\src/interruptions.c ****             break;
 1684              		.loc 1 692 0
 1685 02a0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 43


 1686 02a2 0849     		ldr	r1, .L148+12
 1687 02a4 1346     		mov	r3, r2
 1688 02a6 DB00     		lsls	r3, r3, #3
 1689 02a8 9B1A     		subs	r3, r3, r2
 1690 02aa 1B01     		lsls	r3, r3, #4
 1691 02ac 0B44     		add	r3, r3, r1
 1692 02ae E833     		adds	r3, r3, #232
 1693 02b0 1A68     		ldr	r2, [r3]
 1694 02b2 BB68     		ldr	r3, [r7, #8]
 1695 02b4 1A60     		str	r2, [r3]
 1696              		.loc 1 693 0
 1697 02b6 28E1     		b	.L99
 1698              	.L149:
 1699              		.align	2
 1700              	.L148:
 1701 02b8 00000000 		.word	c_mem
 1702 02bc 00000000 		.word	g_adc_meas
 1703 02c0 00000000 		.word	g_meas
 1704 02c4 00000000 		.word	g_mem
 1705              	.L89:
 694:..\src/interruptions.c **** 
 695:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
 696:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 1706              		.loc 1 696 0
 1707 02c8 7B68     		ldr	r3, [r7, #4]
 1708 02ca 1A68     		ldr	r2, [r3]
 1709 02cc BB68     		ldr	r3, [r7, #8]
 1710 02ce 1A60     		str	r2, [r3]
 697:..\src/interruptions.c ****             if (err_emg_1 > 0) {
 1711              		.loc 1 697 0
 1712 02d0 BB69     		ldr	r3, [r7, #24]
 1713 02d2 002B     		cmp	r3, #0
 1714 02d4 13DD     		ble	.L110
 698:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * (int)g_mem.emg.emg_speed[0] * 2) / 
 1715              		.loc 1 698 0
 1716 02d6 7B68     		ldr	r3, [r7, #4]
 1717 02d8 1A68     		ldr	r2, [r3]
 1718 02da 884B     		ldr	r3, .L150
 1719 02dc 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1720 02e0 1946     		mov	r1, r3
 1721 02e2 BB69     		ldr	r3, [r7, #24]
 1722 02e4 03FB01F3 		mul	r3, r3, r1
 1723 02e8 5900     		lsls	r1, r3, #1
 1724 02ea 854B     		ldr	r3, .L150+4
 1725 02ec B3F8F031 		ldrh	r3, [r3, #496]
 1726 02f0 C3F58063 		rsb	r3, r3, #1024
 1727 02f4 91FBF3F3 		sdiv	r3, r1, r3
 1728 02f8 1A44     		add	r2, r2, r3
 1729 02fa BB68     		ldr	r3, [r7, #8]
 1730 02fc 1A60     		str	r2, [r3]
 1731              	.L110:
 699:..\src/interruptions.c ****             }
 700:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 1732              		.loc 1 700 0
 1733 02fe 7B69     		ldr	r3, [r7, #20]
 1734 0300 002B     		cmp	r3, #0
 1735 0302 40F30181 		ble	.L142
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 44


 701:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * (int)g_mem.emg.emg_speed[1] * 2) / 
 1736              		.loc 1 701 0
 1737 0306 7B68     		ldr	r3, [r7, #4]
 1738 0308 1A68     		ldr	r2, [r3]
 1739 030a 7C4B     		ldr	r3, .L150
 1740 030c 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 1741 0310 1946     		mov	r1, r3
 1742 0312 7B69     		ldr	r3, [r7, #20]
 1743 0314 03FB01F3 		mul	r3, r3, r1
 1744 0318 5900     		lsls	r1, r3, #1
 1745 031a 794B     		ldr	r3, .L150+4
 1746 031c B3F8F231 		ldrh	r3, [r3, #498]
 1747 0320 C3F58063 		rsb	r3, r3, #1024
 1748 0324 91FBF3F3 		sdiv	r3, r1, r3
 1749 0328 D21A     		subs	r2, r2, r3
 1750 032a BB68     		ldr	r3, [r7, #8]
 1751 032c 1A60     		str	r2, [r3]
 702:..\src/interruptions.c ****             }
 703:..\src/interruptions.c ****             break;
 1752              		.loc 1 703 0
 1753 032e EBE0     		b	.L142
 1754              	.L90:
 704:..\src/interruptions.c **** 
 705:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
 706:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 1755              		.loc 1 706 0
 1756 0330 7B68     		ldr	r3, [r7, #4]
 1757 0332 1A68     		ldr	r2, [r3]
 1758 0334 BB68     		ldr	r3, [r7, #8]
 1759 0336 1A60     		str	r2, [r3]
 707:..\src/interruptions.c ****             if (c_mem.dev.dev_type != SOFTHAND_2_MOTORS){
 1760              		.loc 1 707 0
 1761 0338 714B     		ldr	r3, .L150+4
 1762 033a 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1763 033e 042B     		cmp	r3, #4
 1764 0340 5BD0     		beq	.L112
 708:..\src/interruptions.c ****                 switch (current_emg[motor_idx]) {
 1765              		.loc 1 708 0
 1766 0342 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1767 0344 6F4A     		ldr	r2, .L150+8
 1768 0346 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1769 0348 012B     		cmp	r3, #1
 1770 034a 1CD0     		beq	.L114
 1771 034c 022B     		cmp	r3, #2
 1772 034e 37D0     		beq	.L115
 1773 0350 002B     		cmp	r3, #0
 1774 0352 00D0     		beq	.L116
 709:..\src/interruptions.c ****                     case 0:
 710:..\src/interruptions.c ****                         // Look for the first EMG passing the threshold
 711:..\src/interruptions.c ****                         if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 712:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 713:..\src/interruptions.c ****                             break;
 714:..\src/interruptions.c ****                         }
 715:..\src/interruptions.c ****                         if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 716:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 717:..\src/interruptions.c ****                             break;
 718:..\src/interruptions.c ****                         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 45


 719:..\src/interruptions.c ****                         break;
 720:..\src/interruptions.c **** 
 721:..\src/interruptions.c ****                     case 1:
 722:..\src/interruptions.c ****                         // EMG 1 is first
 723:..\src/interruptions.c ****                         if (err_emg_1 < 0) {
 724:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 725:..\src/interruptions.c ****                             break;
 726:..\src/interruptions.c ****                         }
 727:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 728:..\src/interruptions.c ****                         break;
 729:..\src/interruptions.c **** 
 730:..\src/interruptions.c ****                     case 2:
 731:..\src/interruptions.c ****                         // EMG 2 is first
 732:..\src/interruptions.c ****                         if (err_emg_2 < 0) {
 733:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 734:..\src/interruptions.c ****                             break;
 735:..\src/interruptions.c ****                         }
 736:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2
 737:..\src/interruptions.c ****                         break;
 738:..\src/interruptions.c **** 
 739:..\src/interruptions.c ****                     default:
 740:..\src/interruptions.c ****                         break;
 1775              		.loc 1 740 0
 1776 0354 5BE0     		b	.L122
 1777              	.L116:
 711:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 1778              		.loc 1 711 0
 1779 0356 BB69     		ldr	r3, [r7, #24]
 1780 0358 002B     		cmp	r3, #0
 1781 035a 08DD     		ble	.L117
 711:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 1782              		.loc 1 711 0 is_stmt 0 discriminator 1
 1783 035c BA69     		ldr	r2, [r7, #24]
 1784 035e 7B69     		ldr	r3, [r7, #20]
 1785 0360 9A42     		cmp	r2, r3
 1786 0362 04DD     		ble	.L117
 712:..\src/interruptions.c ****                             break;
 1787              		.loc 1 712 0 is_stmt 1
 1788 0364 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1789 0366 674A     		ldr	r2, .L150+8
 1790 0368 0121     		movs	r1, #1
 1791 036a D154     		strb	r1, [r2, r3]
 713:..\src/interruptions.c ****                         }
 1792              		.loc 1 713 0
 1793 036c 4FE0     		b	.L122
 1794              	.L117:
 715:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 1795              		.loc 1 715 0
 1796 036e 7B69     		ldr	r3, [r7, #20]
 1797 0370 002B     		cmp	r3, #0
 1798 0372 4BDD     		ble	.L143
 715:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 1799              		.loc 1 715 0 is_stmt 0 discriminator 1
 1800 0374 7A69     		ldr	r2, [r7, #20]
 1801 0376 BB69     		ldr	r3, [r7, #24]
 1802 0378 9A42     		cmp	r2, r3
 1803 037a 47DD     		ble	.L143
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 46


 716:..\src/interruptions.c ****                             break;
 1804              		.loc 1 716 0 is_stmt 1
 1805 037c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1806 037e 614A     		ldr	r2, .L150+8
 1807 0380 0221     		movs	r1, #2
 1808 0382 D154     		strb	r1, [r2, r3]
 717:..\src/interruptions.c ****                         }
 1809              		.loc 1 717 0
 1810 0384 43E0     		b	.L122
 1811              	.L114:
 723:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 1812              		.loc 1 723 0
 1813 0386 BB69     		ldr	r3, [r7, #24]
 1814 0388 002B     		cmp	r3, #0
 1815 038a 04DA     		bge	.L120
 724:..\src/interruptions.c ****                             break;
 1816              		.loc 1 724 0
 1817 038c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1818 038e 5D4A     		ldr	r2, .L150+8
 1819 0390 0021     		movs	r1, #0
 1820 0392 D154     		strb	r1, [r2, r3]
 725:..\src/interruptions.c ****                         }
 1821              		.loc 1 725 0
 1822 0394 3BE0     		b	.L122
 1823              	.L120:
 727:..\src/interruptions.c ****                         break;
 1824              		.loc 1 727 0
 1825 0396 7B68     		ldr	r3, [r7, #4]
 1826 0398 1A68     		ldr	r2, [r3]
 1827 039a 584B     		ldr	r3, .L150
 1828 039c 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1829 03a0 1946     		mov	r1, r3
 1830 03a2 BB69     		ldr	r3, [r7, #24]
 1831 03a4 03FB01F3 		mul	r3, r3, r1
 1832 03a8 9900     		lsls	r1, r3, #2
 1833 03aa 554B     		ldr	r3, .L150+4
 1834 03ac B3F8F031 		ldrh	r3, [r3, #496]
 1835 03b0 C3F58063 		rsb	r3, r3, #1024
 1836 03b4 91FBF3F3 		sdiv	r3, r1, r3
 1837 03b8 1A44     		add	r2, r2, r3
 1838 03ba BB68     		ldr	r3, [r7, #8]
 1839 03bc 1A60     		str	r2, [r3]
 728:..\src/interruptions.c **** 
 1840              		.loc 1 728 0
 1841 03be 26E0     		b	.L122
 1842              	.L115:
 732:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 1843              		.loc 1 732 0
 1844 03c0 7B69     		ldr	r3, [r7, #20]
 1845 03c2 002B     		cmp	r3, #0
 1846 03c4 04DA     		bge	.L121
 733:..\src/interruptions.c ****                             break;
 1847              		.loc 1 733 0
 1848 03c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1849 03c8 4E4A     		ldr	r2, .L150+8
 1850 03ca 0021     		movs	r1, #0
 1851 03cc D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 47


 734:..\src/interruptions.c ****                         }
 1852              		.loc 1 734 0
 1853 03ce 1EE0     		b	.L122
 1854              	.L121:
 736:..\src/interruptions.c ****                         break;
 1855              		.loc 1 736 0
 1856 03d0 7B68     		ldr	r3, [r7, #4]
 1857 03d2 1A68     		ldr	r2, [r3]
 1858 03d4 494B     		ldr	r3, .L150
 1859 03d6 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 1860 03da 1946     		mov	r1, r3
 1861 03dc 7B69     		ldr	r3, [r7, #20]
 1862 03de 03FB01F3 		mul	r3, r3, r1
 1863 03e2 9900     		lsls	r1, r3, #2
 1864 03e4 464B     		ldr	r3, .L150+4
 1865 03e6 B3F8F231 		ldrh	r3, [r3, #498]
 1866 03ea C3F58063 		rsb	r3, r3, #1024
 1867 03ee 91FBF3F3 		sdiv	r3, r1, r3
 1868 03f2 D21A     		subs	r2, r2, r3
 1869 03f4 BB68     		ldr	r3, [r7, #8]
 1870 03f6 1A60     		str	r2, [r3]
 737:..\src/interruptions.c **** 
 1871              		.loc 1 737 0
 1872 03f8 09E0     		b	.L122
 1873              	.L112:
 741:..\src/interruptions.c ****                 }
 742:..\src/interruptions.c ****             }
 743:..\src/interruptions.c ****             else{ // case SOFTHAND_2_MOTORS
 744:..\src/interruptions.c ****                 //compute reference using a FSM for choosing the right sinergy to activate
 745:..\src/interruptions.c ****                 compute_SoftHand_2_motors_emg_reference(motor_idx, st_ref_p, st_refOld_p, err_emg_1
 1874              		.loc 1 745 0
 1875 03fa F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 1876 03fc 7B69     		ldr	r3, [r7, #20]
 1877 03fe 0093     		str	r3, [sp]
 1878 0400 BB69     		ldr	r3, [r7, #24]
 1879 0402 7A68     		ldr	r2, [r7, #4]
 1880 0404 B968     		ldr	r1, [r7, #8]
 1881 0406 FFF7FEFF 		bl	compute_SoftHand_2_motors_emg_reference
 746:..\src/interruptions.c ****             }
 747:..\src/interruptions.c ****             break;
 1882              		.loc 1 747 0
 1883 040a 7EE0     		b	.L99
 1884              	.L143:
 719:..\src/interruptions.c **** 
 1885              		.loc 1 719 0
 1886 040c 00BF     		nop
 1887              	.L122:
 1888              		.loc 1 747 0 discriminator 5
 1889 040e 7CE0     		b	.L99
 1890              	.L91:
 748:..\src/interruptions.c **** 
 749:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
 750:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 1891              		.loc 1 750 0
 1892 0410 7B68     		ldr	r3, [r7, #4]
 1893 0412 1A68     		ldr	r2, [r3]
 1894 0414 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 48


 1895 0416 1A60     		str	r2, [r3]
 751:..\src/interruptions.c ****             switch (current_emg[motor_idx]) {
 1896              		.loc 1 751 0
 1897 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1898 041a 3A4A     		ldr	r2, .L150+8
 1899 041c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1900 041e 012B     		cmp	r3, #1
 1901 0420 1CD0     		beq	.L124
 1902 0422 022B     		cmp	r3, #2
 1903 0424 3DD0     		beq	.L125
 1904 0426 002B     		cmp	r3, #0
 1905 0428 00D0     		beq	.L126
 752:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
 753:..\src/interruptions.c ****                 case 0:
 754:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 755:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 756:..\src/interruptions.c ****                         break;
 757:..\src/interruptions.c ****                     }
 758:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 759:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 760:..\src/interruptions.c ****                         break;
 761:..\src/interruptions.c ****                     }
 762:..\src/interruptions.c ****                     break;
 763:..\src/interruptions.c **** 
 764:..\src/interruptions.c ****                 // EMG 1 is first
 765:..\src/interruptions.c ****                 case 1:
 766:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 767:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 768:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 769:..\src/interruptions.c ****                         break;
 770:..\src/interruptions.c ****                     }
 771:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 772:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
 773:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 774:..\src/interruptions.c ****                     
 775:..\src/interruptions.c ****                     break;
 776:..\src/interruptions.c **** 
 777:..\src/interruptions.c ****                 // EMG 2 is first
 778:..\src/interruptions.c ****                 case 2:
 779:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 780:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 781:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 782:..\src/interruptions.c ****                         break;
 783:..\src/interruptions.c ****                     }
 784:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 785:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 786:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * c_mem.emg.emg_speed[1] << 2
 787:..\src/interruptions.c ****                     }
 788:..\src/interruptions.c ****                     break;
 789:..\src/interruptions.c **** 
 790:..\src/interruptions.c ****                 default:
 791:..\src/interruptions.c ****                     break;
 1906              		.loc 1 791 0
 1907 042a 62E0     		b	.L128
 1908              	.L126:
 754:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 1909              		.loc 1 754 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 49


 1910 042c BB69     		ldr	r3, [r7, #24]
 1911 042e 002B     		cmp	r3, #0
 1912 0430 08DD     		ble	.L127
 754:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 1913              		.loc 1 754 0 is_stmt 0 discriminator 1
 1914 0432 BA69     		ldr	r2, [r7, #24]
 1915 0434 7B69     		ldr	r3, [r7, #20]
 1916 0436 9A42     		cmp	r2, r3
 1917 0438 04DD     		ble	.L127
 755:..\src/interruptions.c ****                         break;
 1918              		.loc 1 755 0 is_stmt 1
 1919 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1920 043c 314A     		ldr	r2, .L150+8
 1921 043e 0121     		movs	r1, #1
 1922 0440 D154     		strb	r1, [r2, r3]
 756:..\src/interruptions.c ****                     }
 1923              		.loc 1 756 0
 1924 0442 56E0     		b	.L128
 1925              	.L127:
 758:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 1926              		.loc 1 758 0
 1927 0444 7B69     		ldr	r3, [r7, #20]
 1928 0446 002B     		cmp	r3, #0
 1929 0448 4EDD     		ble	.L144
 758:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 1930              		.loc 1 758 0 is_stmt 0 discriminator 1
 1931 044a 7A69     		ldr	r2, [r7, #20]
 1932 044c BB69     		ldr	r3, [r7, #24]
 1933 044e 9A42     		cmp	r2, r3
 1934 0450 4ADD     		ble	.L144
 759:..\src/interruptions.c ****                         break;
 1935              		.loc 1 759 0 is_stmt 1
 1936 0452 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1937 0454 2B4A     		ldr	r2, .L150+8
 1938 0456 0221     		movs	r1, #2
 1939 0458 D154     		strb	r1, [r2, r3]
 760:..\src/interruptions.c ****                     }
 1940              		.loc 1 760 0
 1941 045a 4AE0     		b	.L128
 1942              	.L124:
 767:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 1943              		.loc 1 767 0
 1944 045c BB69     		ldr	r3, [r7, #24]
 1945 045e 002B     		cmp	r3, #0
 1946 0460 07DA     		bge	.L130
 767:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 1947              		.loc 1 767 0 is_stmt 0 discriminator 1
 1948 0462 7B69     		ldr	r3, [r7, #20]
 1949 0464 002B     		cmp	r3, #0
 1950 0466 04DA     		bge	.L130
 768:..\src/interruptions.c ****                         break;
 1951              		.loc 1 768 0 is_stmt 1
 1952 0468 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1953 046a 264A     		ldr	r2, .L150+8
 1954 046c 0021     		movs	r1, #0
 1955 046e D154     		strb	r1, [r2, r3]
 769:..\src/interruptions.c ****                     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 50


 1956              		.loc 1 769 0
 1957 0470 3FE0     		b	.L128
 1958              	.L130:
 772:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 1959              		.loc 1 772 0
 1960 0472 BB69     		ldr	r3, [r7, #24]
 1961 0474 002B     		cmp	r3, #0
 1962 0476 39DD     		ble	.L145
 773:..\src/interruptions.c ****                     
 1963              		.loc 1 773 0
 1964 0478 7B68     		ldr	r3, [r7, #4]
 1965 047a 1A68     		ldr	r2, [r3]
 1966 047c 1F4B     		ldr	r3, .L150
 1967 047e 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1968 0482 1946     		mov	r1, r3
 1969 0484 BB69     		ldr	r3, [r7, #24]
 1970 0486 03FB01F3 		mul	r3, r3, r1
 1971 048a 9900     		lsls	r1, r3, #2
 1972 048c 1C4B     		ldr	r3, .L150+4
 1973 048e B3F8F031 		ldrh	r3, [r3, #496]
 1974 0492 C3F58063 		rsb	r3, r3, #1024
 1975 0496 91FBF3F3 		sdiv	r3, r1, r3
 1976 049a 1A44     		add	r2, r2, r3
 1977 049c BB68     		ldr	r3, [r7, #8]
 1978 049e 1A60     		str	r2, [r3]
 775:..\src/interruptions.c **** 
 1979              		.loc 1 775 0
 1980 04a0 24E0     		b	.L145
 1981              	.L125:
 780:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 1982              		.loc 1 780 0
 1983 04a2 BB69     		ldr	r3, [r7, #24]
 1984 04a4 002B     		cmp	r3, #0
 1985 04a6 07DA     		bge	.L132
 780:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 1986              		.loc 1 780 0 is_stmt 0 discriminator 1
 1987 04a8 7B69     		ldr	r3, [r7, #20]
 1988 04aa 002B     		cmp	r3, #0
 1989 04ac 04DA     		bge	.L132
 781:..\src/interruptions.c ****                         break;
 1990              		.loc 1 781 0 is_stmt 1
 1991 04ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1992 04b0 144A     		ldr	r2, .L150+8
 1993 04b2 0021     		movs	r1, #0
 1994 04b4 D154     		strb	r1, [r2, r3]
 782:..\src/interruptions.c ****                     }
 1995              		.loc 1 782 0
 1996 04b6 1CE0     		b	.L128
 1997              	.L132:
 785:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * c_mem.emg.emg_speed[1] << 2
 1998              		.loc 1 785 0
 1999 04b8 7B69     		ldr	r3, [r7, #20]
 2000 04ba 002B     		cmp	r3, #0
 2001 04bc 18DD     		ble	.L146
 786:..\src/interruptions.c ****                     }
 2002              		.loc 1 786 0
 2003 04be 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 51


 2004 04c0 1A68     		ldr	r2, [r3]
 2005 04c2 0F4B     		ldr	r3, .L150+4
 2006 04c4 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2007 04c8 1946     		mov	r1, r3
 2008 04ca 7B69     		ldr	r3, [r7, #20]
 2009 04cc 03FB01F3 		mul	r3, r3, r1
 2010 04d0 9900     		lsls	r1, r3, #2
 2011 04d2 0B4B     		ldr	r3, .L150+4
 2012 04d4 B3F8F231 		ldrh	r3, [r3, #498]
 2013 04d8 C3F58063 		rsb	r3, r3, #1024
 2014 04dc 91FBF3F3 		sdiv	r3, r1, r3
 2015 04e0 D21A     		subs	r2, r2, r3
 2016 04e2 BB68     		ldr	r3, [r7, #8]
 2017 04e4 1A60     		str	r2, [r3]
 788:..\src/interruptions.c **** 
 2018              		.loc 1 788 0
 2019 04e6 03E0     		b	.L146
 2020              	.L144:
 762:..\src/interruptions.c **** 
 2021              		.loc 1 762 0
 2022 04e8 00BF     		nop
 2023 04ea 0EE0     		b	.L99
 2024              	.L145:
 775:..\src/interruptions.c **** 
 2025              		.loc 1 775 0
 2026 04ec 00BF     		nop
 2027 04ee 0CE0     		b	.L99
 2028              	.L146:
 788:..\src/interruptions.c **** 
 2029              		.loc 1 788 0
 2030 04f0 00BF     		nop
 2031              	.L128:
 792:..\src/interruptions.c ****             }
 793:..\src/interruptions.c ****             break;
 2032              		.loc 1 793 0 discriminator 6
 2033 04f2 0AE0     		b	.L99
 2034              	.L140:
 794:..\src/interruptions.c **** 
 795:..\src/interruptions.c ****         default:
 796:..\src/interruptions.c ****             break;
 2035              		.loc 1 796 0
 2036 04f4 00BF     		nop
 2037 04f6 08E0     		b	.L99
 2038              	.L141:
 679:..\src/interruptions.c ****             
 2039              		.loc 1 679 0
 2040 04f8 00BF     		nop
 2041 04fa 06E0     		b	.L99
 2042              	.L151:
 2043              		.align	2
 2044              	.L150:
 2045 04fc 00000000 		.word	g_mem
 2046 0500 00000000 		.word	c_mem
 2047 0504 8C000000 		.word	current_emg.10478
 2048              	.L142:
 703:..\src/interruptions.c **** 
 2049              		.loc 1 703 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 52


 2050 0508 00BF     		nop
 2051              	.L99:
 797:..\src/interruptions.c ****     }
 798:..\src/interruptions.c **** 
 799:..\src/interruptions.c ****     // Position limit saturation
 800:..\src/interruptions.c ****     if (MOT->pos_lim_flag) {
 2052              		.loc 1 800 0
 2053 050a 3B6A     		ldr	r3, [r7, #32]
 2054 050c 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 2055 0510 002B     		cmp	r3, #0
 2056 0512 13D0     		beq	.L134
 801:..\src/interruptions.c ****         if (st_ref_p->pos < MOT->pos_lim_inf) 
 2057              		.loc 1 801 0
 2058 0514 BB68     		ldr	r3, [r7, #8]
 2059 0516 1A68     		ldr	r2, [r3]
 2060 0518 3B6A     		ldr	r3, [r7, #32]
 2061 051a 5B6B     		ldr	r3, [r3, #52]
 2062 051c 9A42     		cmp	r2, r3
 2063 051e 03DA     		bge	.L135
 802:..\src/interruptions.c ****             st_ref_p->pos = MOT->pos_lim_inf;
 2064              		.loc 1 802 0
 2065 0520 3B6A     		ldr	r3, [r7, #32]
 2066 0522 5A6B     		ldr	r2, [r3, #52]
 2067 0524 BB68     		ldr	r3, [r7, #8]
 2068 0526 1A60     		str	r2, [r3]
 2069              	.L135:
 803:..\src/interruptions.c ****         if (st_ref_p->pos > MOT->pos_lim_sup) 
 2070              		.loc 1 803 0
 2071 0528 BB68     		ldr	r3, [r7, #8]
 2072 052a 1A68     		ldr	r2, [r3]
 2073 052c 3B6A     		ldr	r3, [r7, #32]
 2074 052e 9B6B     		ldr	r3, [r3, #56]
 2075 0530 9A42     		cmp	r2, r3
 2076 0532 03DD     		ble	.L134
 804:..\src/interruptions.c ****             st_ref_p->pos = MOT->pos_lim_sup;
 2077              		.loc 1 804 0
 2078 0534 3B6A     		ldr	r3, [r7, #32]
 2079 0536 9A6B     		ldr	r2, [r3, #56]
 2080 0538 BB68     		ldr	r3, [r7, #8]
 2081 053a 1A60     		str	r2, [r3]
 2082              	.L134:
 805:..\src/interruptions.c ****     }
 806:..\src/interruptions.c ****     
 807:..\src/interruptions.c ****     // SAFETY
 808:..\src/interruptions.c ****     if (battery_low_SoC == TRUE) {
 2083              		.loc 1 808 0
 2084 053c 1D4B     		ldr	r3, .L152
 2085 053e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2086 0540 012B     		cmp	r3, #1
 2087 0542 02D1     		bne	.L136
 809:..\src/interruptions.c ****         //Reopen the terminal device before disabling motor
 810:..\src/interruptions.c ****         st_ref_p->pos = 0;
 2088              		.loc 1 810 0
 2089 0544 BB68     		ldr	r3, [r7, #8]
 2090 0546 0022     		movs	r2, #0
 2091 0548 1A60     		str	r2, [r3]
 2092              	.L136:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 53


 811:..\src/interruptions.c ****     }      
 812:..\src/interruptions.c ****     
 813:..\src/interruptions.c ****        
 814:..\src/interruptions.c ****     if (c_mem.SH.rest_position_flag == TRUE) {
 2093              		.loc 1 814 0
 2094 054a 1B4B     		ldr	r3, .L152+4
 2095 054c 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 2096 0550 012B     		cmp	r3, #1
 2097 0552 2AD1     		bne	.L147
 815:..\src/interruptions.c ****         if (rest_enabled == 1){
 2098              		.loc 1 815 0
 2099 0554 194B     		ldr	r3, .L152+8
 2100 0556 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2101 0558 012B     		cmp	r3, #1
 2102 055a 03D1     		bne	.L138
 816:..\src/interruptions.c ****             // Change position reference to drive motor to rest position smoothly
 817:..\src/interruptions.c ****             st_ref_p->pos = rest_pos_curr_ref;
 2103              		.loc 1 817 0
 2104 055c 184B     		ldr	r3, .L152+12
 2105 055e 1A68     		ldr	r2, [r3]
 2106 0560 BB68     		ldr	r3, [r7, #8]
 2107 0562 1A60     		str	r2, [r3]
 2108              	.L138:
 818:..\src/interruptions.c ****         }
 819:..\src/interruptions.c ****         
 820:..\src/interruptions.c ****         if (forced_open == 1) {
 2109              		.loc 1 820 0
 2110 0564 174B     		ldr	r3, .L152+16
 2111 0566 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2112 0568 012B     		cmp	r3, #1
 2113 056a 1ED1     		bne	.L147
 821:..\src/interruptions.c ****             // Open the SoftHand as EMG PROPORTIONAL input mode 
 822:..\src/interruptions.c ****             if (err_emg_2 > 0)
 2114              		.loc 1 822 0
 2115 056c 7B69     		ldr	r3, [r7, #20]
 2116 056e 002B     		cmp	r3, #0
 2117 0570 13DD     		ble	.L139
 823:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.SH.rest_pos - (err_emg_2 * g_mem.SH.rest_pos) / (1024 - c_mem
 2118              		.loc 1 823 0
 2119 0572 154B     		ldr	r3, .L152+20
 2120 0574 D3F8A022 		ldr	r2, [r3, #672]
 2121 0578 134B     		ldr	r3, .L152+20
 2122 057a D3F8A032 		ldr	r3, [r3, #672]
 2123 057e 7969     		ldr	r1, [r7, #20]
 2124 0580 01FB03F1 		mul	r1, r1, r3
 2125 0584 0C4B     		ldr	r3, .L152+4
 2126 0586 B3F8F231 		ldrh	r3, [r3, #498]
 2127 058a C3F58063 		rsb	r3, r3, #1024
 2128 058e 91FBF3F3 		sdiv	r3, r1, r3
 2129 0592 D21A     		subs	r2, r2, r3
 2130 0594 BB68     		ldr	r3, [r7, #8]
 2131 0596 1A60     		str	r2, [r3]
 824:..\src/interruptions.c ****             else {
 825:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.SH.rest_pos;
 826:..\src/interruptions.c ****                 forced_open = 0;
 827:..\src/interruptions.c ****             }
 828:..\src/interruptions.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 54


 829:..\src/interruptions.c ****     }
 830:..\src/interruptions.c **** }
 2132              		.loc 1 830 0
 2133 0598 07E0     		b	.L147
 2134              	.L139:
 825:..\src/interruptions.c ****                 forced_open = 0;
 2135              		.loc 1 825 0
 2136 059a 0B4B     		ldr	r3, .L152+20
 2137 059c D3F8A022 		ldr	r2, [r3, #672]
 2138 05a0 BB68     		ldr	r3, [r7, #8]
 2139 05a2 1A60     		str	r2, [r3]
 826:..\src/interruptions.c ****             }
 2140              		.loc 1 826 0
 2141 05a4 074B     		ldr	r3, .L152+16
 2142 05a6 0022     		movs	r2, #0
 2143 05a8 1A70     		strb	r2, [r3]
 2144              	.L147:
 2145              		.loc 1 830 0
 2146 05aa 00BF     		nop
 2147 05ac 2837     		adds	r7, r7, #40
 2148              		.cfi_def_cfa_offset 8
 2149 05ae BD46     		mov	sp, r7
 2150              		.cfi_def_cfa_register 13
 2151              		@ sp needed
 2152 05b0 80BD     		pop	{r7, pc}
 2153              	.L153:
 2154 05b2 00BF     		.align	2
 2155              	.L152:
 2156 05b4 00000000 		.word	battery_low_SoC
 2157 05b8 00000000 		.word	c_mem
 2158 05bc 00000000 		.word	rest_enabled
 2159 05c0 00000000 		.word	rest_pos_curr_ref
 2160 05c4 00000000 		.word	forced_open
 2161 05c8 00000000 		.word	g_mem
 2162              		.cfi_endproc
 2163              	.LFE68:
 2164              		.size	compute_reference, .-compute_reference
 2165              		.section	.text.compute_SoftHand_2_motors_joystick_reference,"ax",%progbits
 2166              		.align	2
 2167              		.global	compute_SoftHand_2_motors_joystick_reference
 2168              		.thumb
 2169              		.thumb_func
 2170              		.type	compute_SoftHand_2_motors_joystick_reference, %function
 2171              	compute_SoftHand_2_motors_joystick_reference:
 2172              	.LFB69:
 831:..\src/interruptions.c **** 
 832:..\src/interruptions.c **** 
 833:..\src/interruptions.c **** //==============================================================================
 834:..\src/interruptions.c **** //                                  COMPUTE SOFTHAND 2 MOTORS JOYSTICK REFERENCE
 835:..\src/interruptions.c **** //==============================================================================
 836:..\src/interruptions.c **** void compute_SoftHand_2_motors_joystick_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct 
 2173              		.loc 1 836 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 32
 2176              		@ frame_needed = 1, uses_anonymous_args = 0
 2177              		@ link register save eliminated.
 2178 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 55


 2179              		.cfi_def_cfa_offset 4
 2180              		.cfi_offset 7, -4
 2181 0002 89B0     		sub	sp, sp, #36
 2182              		.cfi_def_cfa_offset 40
 2183 0004 00AF     		add	r7, sp, #0
 2184              		.cfi_def_cfa_register 7
 2185 0006 0346     		mov	r3, r0
 2186 0008 B960     		str	r1, [r7, #8]
 2187 000a 7A60     		str	r2, [r7, #4]
 2188 000c FB73     		strb	r3, [r7, #15]
 837:..\src/interruptions.c ****     
 838:..\src/interruptions.c ****     if (c_mem.motor[0].input_mode == INPUT_MODE_JOYSTICK && c_mem.motor[1].input_mode == INPUT_MODE
 2189              		.loc 1 838 0
 2190 000e B04B     		ldr	r3, .L175
 2191 0010 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 2192 0014 062B     		cmp	r3, #6
 2193 0016 40F08581 		bne	.L173
 2194              		.loc 1 838 0 is_stmt 0 discriminator 1
 2195 001a AD4B     		ldr	r3, .L175
 2196 001c 93F87E31 		ldrb	r3, [r3, #382]	@ zero_extendqisi2
 2197 0020 062B     		cmp	r3, #6
 2198 0022 40F07F81 		bne	.L173
 839:..\src/interruptions.c ****         st_ref_p->pos = st_refOld_p->pos;
 2199              		.loc 1 839 0 is_stmt 1
 2200 0026 7B68     		ldr	r3, [r7, #4]
 2201 0028 1A68     		ldr	r2, [r3]
 2202 002a BB68     		ldr	r3, [r7, #8]
 2203 002c 1A60     		str	r2, [r3]
 840:..\src/interruptions.c ****     
 841:..\src/interruptions.c ****         if(!(g_adc_meas.joystick[0] > 700)) {
 2204              		.loc 1 841 0
 2205 002e A94B     		ldr	r3, .L175+4
 2206 0030 1B6A     		ldr	r3, [r3, #32]
 2207 0032 B3F52F7F 		cmp	r3, #700
 2208 0036 00F3C280 		bgt	.L156
 2209              	.LBB5:
 842:..\src/interruptions.c ****              
 843:..\src/interruptions.c ****             int32 CYDATA err_joy_1 = 0;
 2210              		.loc 1 843 0
 2211 003a 0023     		movs	r3, #0
 2212 003c FB61     		str	r3, [r7, #28]
 844:..\src/interruptions.c ****             int32 CYDATA err_joy_2 = 0;
 2213              		.loc 1 844 0
 2214 003e 0023     		movs	r3, #0
 2215 0040 BB61     		str	r3, [r7, #24]
 845:..\src/interruptions.c ****         
 846:..\src/interruptions.c ****             if(g_adc_meas.joystick[0] > c_mem.JOY_spec.joystick_threshold) {     //both motors wind
 2216              		.loc 1 846 0
 2217 0042 A44B     		ldr	r3, .L175+4
 2218 0044 1B6A     		ldr	r3, [r3, #32]
 2219 0046 A24A     		ldr	r2, .L175
 2220 0048 B2F9B222 		ldrsh	r2, [r2, #690]
 2221 004c 9342     		cmp	r3, r2
 2222 004e 1ADD     		ble	.L157
 847:..\src/interruptions.c ****                 err_joy_1 = g_adc_meas.joystick[0] - c_mem.JOY_spec.joystick_threshold;
 2223              		.loc 1 847 0
 2224 0050 A04B     		ldr	r3, .L175+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 56


 2225 0052 1B6A     		ldr	r3, [r3, #32]
 2226 0054 9E4A     		ldr	r2, .L175
 2227 0056 B2F9B222 		ldrsh	r2, [r2, #690]
 2228 005a 9B1A     		subs	r3, r3, r2
 2229 005c FB61     		str	r3, [r7, #28]
 848:..\src/interruptions.c ****                 st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed) / (102
 2230              		.loc 1 848 0
 2231 005e BB68     		ldr	r3, [r7, #8]
 2232 0060 1A68     		ldr	r2, [r3]
 2233 0062 9B4B     		ldr	r3, .L175
 2234 0064 B3F8B032 		ldrh	r3, [r3, #688]
 2235 0068 1946     		mov	r1, r3
 2236 006a FB69     		ldr	r3, [r7, #28]
 2237 006c 03FB01F1 		mul	r1, r3, r1
 2238 0070 974B     		ldr	r3, .L175
 2239 0072 B3F9B232 		ldrsh	r3, [r3, #690]
 2240 0076 C3F58063 		rsb	r3, r3, #1024
 2241 007a 91FBF3F3 		sdiv	r3, r1, r3
 2242 007e 1A44     		add	r2, r2, r3
 2243 0080 BB68     		ldr	r3, [r7, #8]
 2244 0082 1A60     		str	r2, [r3]
 2245 0084 21E0     		b	.L158
 2246              	.L157:
 849:..\src/interruptions.c ****             }
 850:..\src/interruptions.c ****             else {
 851:..\src/interruptions.c ****                 if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both motors un
 2247              		.loc 1 851 0
 2248 0086 934B     		ldr	r3, .L175+4
 2249 0088 1A6A     		ldr	r2, [r3, #32]
 2250 008a 914B     		ldr	r3, .L175
 2251 008c B3F9B232 		ldrsh	r3, [r3, #690]
 2252 0090 5B42     		negs	r3, r3
 2253 0092 9A42     		cmp	r2, r3
 2254 0094 19DA     		bge	.L158
 852:..\src/interruptions.c ****                     err_joy_1 = g_adc_meas.joystick[0] + c_mem.JOY_spec.joystick_threshold;
 2255              		.loc 1 852 0
 2256 0096 8F4B     		ldr	r3, .L175+4
 2257 0098 1B6A     		ldr	r3, [r3, #32]
 2258 009a 8D4A     		ldr	r2, .L175
 2259 009c B2F9B222 		ldrsh	r2, [r2, #690]
 2260 00a0 1344     		add	r3, r3, r2
 2261 00a2 FB61     		str	r3, [r7, #28]
 853:..\src/interruptions.c ****                     st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed) / 
 2262              		.loc 1 853 0
 2263 00a4 BB68     		ldr	r3, [r7, #8]
 2264 00a6 1A68     		ldr	r2, [r3]
 2265 00a8 894B     		ldr	r3, .L175
 2266 00aa B3F8B032 		ldrh	r3, [r3, #688]
 2267 00ae 1946     		mov	r1, r3
 2268 00b0 FB69     		ldr	r3, [r7, #28]
 2269 00b2 03FB01F1 		mul	r1, r3, r1
 2270 00b6 864B     		ldr	r3, .L175
 2271 00b8 B3F9B232 		ldrsh	r3, [r3, #690]
 2272 00bc C3F58063 		rsb	r3, r3, #1024
 2273 00c0 91FBF3F3 		sdiv	r3, r1, r3
 2274 00c4 1A44     		add	r2, r2, r3
 2275 00c6 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 57


 2276 00c8 1A60     		str	r2, [r3]
 2277              	.L158:
 854:..\src/interruptions.c ****                 }
 855:..\src/interruptions.c ****             }
 856:..\src/interruptions.c **** 
 857:..\src/interruptions.c ****             if(g_adc_meas.joystick[1] > c_mem.JOY_spec.joystick_threshold) {    //The wire is winde
 2278              		.loc 1 857 0
 2279 00ca 824B     		ldr	r3, .L175+4
 2280 00cc 5B6A     		ldr	r3, [r3, #36]
 2281 00ce 804A     		ldr	r2, .L175
 2282 00d0 B2F9B222 		ldrsh	r2, [r2, #690]
 2283 00d4 9342     		cmp	r3, r2
 2284 00d6 34DD     		ble	.L159
 858:..\src/interruptions.c ****                 err_joy_2 = g_adc_meas.joystick[1] - c_mem.JOY_spec.joystick_threshold;
 2285              		.loc 1 858 0
 2286 00d8 7E4B     		ldr	r3, .L175+4
 2287 00da 5B6A     		ldr	r3, [r3, #36]
 2288 00dc 7C4A     		ldr	r2, .L175
 2289 00de B2F9B222 		ldrsh	r2, [r2, #690]
 2290 00e2 9B1A     		subs	r3, r3, r2
 2291 00e4 BB61     		str	r3, [r7, #24]
 859:..\src/interruptions.c ****                 if (motor_idx == 0){
 2292              		.loc 1 859 0
 2293 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2294 00e8 002B     		cmp	r3, #0
 2295 00ea 12D1     		bne	.L160
 860:..\src/interruptions.c ****                     st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed) / 
 2296              		.loc 1 860 0
 2297 00ec BB68     		ldr	r3, [r7, #8]
 2298 00ee 1A68     		ldr	r2, [r3]
 2299 00f0 774B     		ldr	r3, .L175
 2300 00f2 B3F8B032 		ldrh	r3, [r3, #688]
 2301 00f6 1946     		mov	r1, r3
 2302 00f8 BB69     		ldr	r3, [r7, #24]
 2303 00fa 03FB01F1 		mul	r1, r3, r1
 2304 00fe 744B     		ldr	r3, .L175
 2305 0100 B3F9B232 		ldrsh	r3, [r3, #690]
 2306 0104 C3F58063 		rsb	r3, r3, #1024
 2307 0108 91FBF3F3 		sdiv	r3, r1, r3
 2308 010c 1A44     		add	r2, r2, r3
 2309 010e BB68     		ldr	r3, [r7, #8]
 2310 0110 1A60     		str	r2, [r3]
 2311              	.L160:
 861:..\src/interruptions.c ****                 }
 862:..\src/interruptions.c ****                 if (motor_idx == 1){
 2312              		.loc 1 862 0
 2313 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2314 0114 012B     		cmp	r3, #1
 2315 0116 40F00581 		bne	.L173
 863:..\src/interruptions.c ****                     st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed) / 
 2316              		.loc 1 863 0
 2317 011a BB68     		ldr	r3, [r7, #8]
 2318 011c 1A68     		ldr	r2, [r3]
 2319 011e 6C4B     		ldr	r3, .L175
 2320 0120 B3F8B032 		ldrh	r3, [r3, #688]
 2321 0124 1946     		mov	r1, r3
 2322 0126 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 58


 2323 0128 03FB01F1 		mul	r1, r3, r1
 2324 012c 684B     		ldr	r3, .L175
 2325 012e B3F9B232 		ldrsh	r3, [r3, #690]
 2326 0132 C3F58063 		rsb	r3, r3, #1024
 2327 0136 91FBF3F3 		sdiv	r3, r1, r3
 2328 013a D21A     		subs	r2, r2, r3
 2329 013c BB68     		ldr	r3, [r7, #8]
 2330 013e 1A60     		str	r2, [r3]
 2331              	.LBE5:
 864:..\src/interruptions.c ****                 }          
 865:..\src/interruptions.c ****             }
 866:..\src/interruptions.c ****             else {
 867:..\src/interruptions.c ****                 if(g_adc_meas.joystick[1] < -c_mem.JOY_spec.joystick_threshold) {  //The wire is un
 868:..\src/interruptions.c ****                     
 869:..\src/interruptions.c ****                     err_joy_2 = g_adc_meas.joystick[1] + c_mem.JOY_spec.joystick_threshold;
 870:..\src/interruptions.c ****                     if (motor_idx == 0){
 871:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 872:..\src/interruptions.c ****                     }
 873:..\src/interruptions.c ****                     if (motor_idx == 1){
 874:..\src/interruptions.c ****                         st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 875:..\src/interruptions.c ****                     }
 876:..\src/interruptions.c ****                 }
 877:..\src/interruptions.c ****             }
 878:..\src/interruptions.c ****         }
 879:..\src/interruptions.c ****         else {  //The button is pressed and the hand is opened firstly making the position differen
 880:..\src/interruptions.c ****                 //equal to zero, then the position sum is gradually set to zero 
 881:..\src/interruptions.c ****             int32 pos_diff = (g_meas[c_mem.motor[0].encoder_line].pos[0] - g_meas[c_mem.motor[0].en
 882:..\src/interruptions.c ****             int32 pos_sum = (g_meas[c_mem.motor[0].encoder_line].pos[0] + g_meas[c_mem.motor[0].enc
 883:..\src/interruptions.c **** 
 884:..\src/interruptions.c ****             if(pos_diff > 500 || pos_diff < -500) {
 885:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 886:..\src/interruptions.c ****                     if (motor_idx == 1){
 887:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 888:..\src/interruptions.c ****                     }
 889:..\src/interruptions.c ****                     if (motor_idx == 0){
 890:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 891:..\src/interruptions.c ****                     }                    
 892:..\src/interruptions.c ****                 }
 893:..\src/interruptions.c ****                 else {
 894:..\src/interruptions.c ****                     if (motor_idx == 0){
 895:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 896:..\src/interruptions.c ****                     }
 897:..\src/interruptions.c ****                     if (motor_idx == 1){
 898:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 899:..\src/interruptions.c ****                     }
 900:..\src/interruptions.c ****                 }
 901:..\src/interruptions.c ****                 
 902:..\src/interruptions.c ****             }
 903:..\src/interruptions.c ****             else {
 904:..\src/interruptions.c ****                 if(pos_sum > 0) {
 905:..\src/interruptions.c ****                     if (motor_idx == 0){
 906:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 907:..\src/interruptions.c ****                     }
 908:..\src/interruptions.c ****                     if (motor_idx == 1){
 909:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 910:..\src/interruptions.c ****                     }
 911:..\src/interruptions.c ****                     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 59


 912:..\src/interruptions.c ****                     if (st_ref_p->pos < 0){
 913:..\src/interruptions.c ****                         st_ref_p->pos = 0;
 914:..\src/interruptions.c ****                     }
 915:..\src/interruptions.c ****                 }
 916:..\src/interruptions.c ****             }
 917:..\src/interruptions.c ****         }
 918:..\src/interruptions.c ****     }           
 919:..\src/interruptions.c **** }
 2332              		.loc 1 919 0
 2333 0140 F0E0     		b	.L173
 2334              	.L159:
 2335              	.LBB6:
 867:..\src/interruptions.c ****                     
 2336              		.loc 1 867 0
 2337 0142 644B     		ldr	r3, .L175+4
 2338 0144 5A6A     		ldr	r2, [r3, #36]
 2339 0146 624B     		ldr	r3, .L175
 2340 0148 B3F9B232 		ldrsh	r3, [r3, #690]
 2341 014c 5B42     		negs	r3, r3
 2342 014e 9A42     		cmp	r2, r3
 2343 0150 80F2E880 		bge	.L173
 869:..\src/interruptions.c ****                     if (motor_idx == 0){
 2344              		.loc 1 869 0
 2345 0154 5F4B     		ldr	r3, .L175+4
 2346 0156 5B6A     		ldr	r3, [r3, #36]
 2347 0158 5D4A     		ldr	r2, .L175
 2348 015a B2F9B222 		ldrsh	r2, [r2, #690]
 2349 015e 1344     		add	r3, r3, r2
 2350 0160 BB61     		str	r3, [r7, #24]
 870:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 2351              		.loc 1 870 0
 2352 0162 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2353 0164 002B     		cmp	r3, #0
 2354 0166 12D1     		bne	.L163
 871:..\src/interruptions.c ****                     }
 2355              		.loc 1 871 0
 2356 0168 BB68     		ldr	r3, [r7, #8]
 2357 016a 1A68     		ldr	r2, [r3]
 2358 016c 584B     		ldr	r3, .L175
 2359 016e B3F8B032 		ldrh	r3, [r3, #688]
 2360 0172 1946     		mov	r1, r3
 2361 0174 BB69     		ldr	r3, [r7, #24]
 2362 0176 03FB01F1 		mul	r1, r3, r1
 2363 017a 554B     		ldr	r3, .L175
 2364 017c B3F9B232 		ldrsh	r3, [r3, #690]
 2365 0180 C3F58063 		rsb	r3, r3, #1024
 2366 0184 91FBF3F3 		sdiv	r3, r1, r3
 2367 0188 1A44     		add	r2, r2, r3
 2368 018a BB68     		ldr	r3, [r7, #8]
 2369 018c 1A60     		str	r2, [r3]
 2370              	.L163:
 873:..\src/interruptions.c ****                         st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 2371              		.loc 1 873 0
 2372 018e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2373 0190 012B     		cmp	r3, #1
 2374 0192 40F0C780 		bne	.L173
 874:..\src/interruptions.c ****                     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 60


 2375              		.loc 1 874 0
 2376 0196 BB68     		ldr	r3, [r7, #8]
 2377 0198 1A68     		ldr	r2, [r3]
 2378 019a 4D4B     		ldr	r3, .L175
 2379 019c B3F8B032 		ldrh	r3, [r3, #688]
 2380 01a0 1946     		mov	r1, r3
 2381 01a2 BB69     		ldr	r3, [r7, #24]
 2382 01a4 03FB01F1 		mul	r1, r3, r1
 2383 01a8 494B     		ldr	r3, .L175
 2384 01aa B3F9B232 		ldrsh	r3, [r3, #690]
 2385 01ae C3F58063 		rsb	r3, r3, #1024
 2386 01b2 91FBF3F3 		sdiv	r3, r1, r3
 2387 01b6 D21A     		subs	r2, r2, r3
 2388 01b8 BB68     		ldr	r3, [r7, #8]
 2389 01ba 1A60     		str	r2, [r3]
 2390              	.LBE6:
 2391              		.loc 1 919 0
 2392 01bc B2E0     		b	.L173
 2393              	.L156:
 2394              	.LBB7:
 881:..\src/interruptions.c ****             int32 pos_sum = (g_meas[c_mem.motor[0].encoder_line].pos[0] + g_meas[c_mem.motor[0].enc
 2395              		.loc 1 881 0
 2396 01be 444B     		ldr	r3, .L175
 2397 01c0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2398 01c4 1946     		mov	r1, r3
 2399 01c6 444A     		ldr	r2, .L175+8
 2400 01c8 3423     		movs	r3, #52
 2401 01ca 03FB01F3 		mul	r3, r3, r1
 2402 01ce 1344     		add	r3, r3, r2
 2403 01d0 1A68     		ldr	r2, [r3]
 2404 01d2 3F4B     		ldr	r3, .L175
 2405 01d4 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2406 01d8 1846     		mov	r0, r3
 2407 01da 3F49     		ldr	r1, .L175+8
 2408 01dc 3423     		movs	r3, #52
 2409 01de 03FB00F3 		mul	r3, r3, r0
 2410 01e2 0B44     		add	r3, r3, r1
 2411 01e4 0433     		adds	r3, r3, #4
 2412 01e6 1B68     		ldr	r3, [r3]
 2413 01e8 D21A     		subs	r2, r2, r3
 2414 01ea 394B     		ldr	r3, .L175
 2415 01ec 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2416 01f0 1846     		mov	r0, r3
 2417 01f2 3749     		ldr	r1, .L175
 2418 01f4 0346     		mov	r3, r0
 2419 01f6 5B00     		lsls	r3, r3, #1
 2420 01f8 0344     		add	r3, r3, r0
 2421 01fa 1B01     		lsls	r3, r3, #4
 2422 01fc 0B44     		add	r3, r3, r1
 2423 01fe 03F29513 		addw	r3, r3, #405
 2424 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2425 0204 42FA03F3 		asr	r3, r2, r3
 2426 0208 7B61     		str	r3, [r7, #20]
 882:..\src/interruptions.c **** 
 2427              		.loc 1 882 0
 2428 020a 314B     		ldr	r3, .L175
 2429 020c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 61


 2430 0210 1946     		mov	r1, r3
 2431 0212 314A     		ldr	r2, .L175+8
 2432 0214 3423     		movs	r3, #52
 2433 0216 03FB01F3 		mul	r3, r3, r1
 2434 021a 1344     		add	r3, r3, r2
 2435 021c 1A68     		ldr	r2, [r3]
 2436 021e 2C4B     		ldr	r3, .L175
 2437 0220 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2438 0224 1846     		mov	r0, r3
 2439 0226 2C49     		ldr	r1, .L175+8
 2440 0228 3423     		movs	r3, #52
 2441 022a 03FB00F3 		mul	r3, r3, r0
 2442 022e 0B44     		add	r3, r3, r1
 2443 0230 0433     		adds	r3, r3, #4
 2444 0232 1B68     		ldr	r3, [r3]
 2445 0234 1A44     		add	r2, r2, r3
 2446 0236 264B     		ldr	r3, .L175
 2447 0238 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2448 023c 1846     		mov	r0, r3
 2449 023e 2449     		ldr	r1, .L175
 2450 0240 0346     		mov	r3, r0
 2451 0242 5B00     		lsls	r3, r3, #1
 2452 0244 0344     		add	r3, r3, r0
 2453 0246 1B01     		lsls	r3, r3, #4
 2454 0248 0B44     		add	r3, r3, r1
 2455 024a 03F29513 		addw	r3, r3, #405
 2456 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2457 0250 42FA03F3 		asr	r3, r2, r3
 2458 0254 3B61     		str	r3, [r7, #16]
 884:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 2459              		.loc 1 884 0
 2460 0256 7B69     		ldr	r3, [r7, #20]
 2461 0258 B3F5FA7F 		cmp	r3, #500
 2462 025c 03DC     		bgt	.L164
 884:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 2463              		.loc 1 884 0 is_stmt 0 discriminator 1
 2464 025e 7B69     		ldr	r3, [r7, #20]
 2465 0260 13F5FA7F 		cmn	r3, #500
 2466 0264 3ADA     		bge	.L165
 2467              	.L164:
 885:..\src/interruptions.c ****                     if (motor_idx == 1){
 2468              		.loc 1 885 0 is_stmt 1
 2469 0266 7B69     		ldr	r3, [r7, #20]
 2470 0268 002B     		cmp	r3, #0
 2471 026a 18DB     		blt	.L166
 886:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 2472              		.loc 1 886 0
 2473 026c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2474 026e 012B     		cmp	r3, #1
 2475 0270 07D1     		bne	.L167
 887:..\src/interruptions.c ****                     }
 2476              		.loc 1 887 0
 2477 0272 BB68     		ldr	r3, [r7, #8]
 2478 0274 1B68     		ldr	r3, [r3]
 2479 0276 164A     		ldr	r2, .L175
 2480 0278 B2F8B022 		ldrh	r2, [r2, #688]
 2481 027c 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 62


 2482 027e BB68     		ldr	r3, [r7, #8]
 2483 0280 1A60     		str	r2, [r3]
 2484              	.L167:
 889:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 2485              		.loc 1 889 0
 2486 0282 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2487 0284 002B     		cmp	r3, #0
 2488 0286 4CD1     		bne	.L174
 890:..\src/interruptions.c ****                     }                    
 2489              		.loc 1 890 0
 2490 0288 BB68     		ldr	r3, [r7, #8]
 2491 028a 1B68     		ldr	r3, [r3]
 2492 028c 104A     		ldr	r2, .L175
 2493 028e B2F8B022 		ldrh	r2, [r2, #688]
 2494 0292 5208     		lsrs	r2, r2, #1
 2495 0294 92B2     		uxth	r2, r2
 2496 0296 9A1A     		subs	r2, r3, r2
 2497 0298 BB68     		ldr	r3, [r7, #8]
 2498 029a 1A60     		str	r2, [r3]
 885:..\src/interruptions.c ****                     if (motor_idx == 1){
 2499              		.loc 1 885 0
 2500 029c 41E0     		b	.L174
 2501              	.L166:
 894:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 2502              		.loc 1 894 0
 2503 029e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2504 02a0 002B     		cmp	r3, #0
 2505 02a2 07D1     		bne	.L170
 895:..\src/interruptions.c ****                     }
 2506              		.loc 1 895 0
 2507 02a4 BB68     		ldr	r3, [r7, #8]
 2508 02a6 1B68     		ldr	r3, [r3]
 2509 02a8 094A     		ldr	r2, .L175
 2510 02aa B2F8B022 		ldrh	r2, [r2, #688]
 2511 02ae 1A44     		add	r2, r2, r3
 2512 02b0 BB68     		ldr	r3, [r7, #8]
 2513 02b2 1A60     		str	r2, [r3]
 2514              	.L170:
 897:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 2515              		.loc 1 897 0
 2516 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2517 02b6 012B     		cmp	r3, #1
 2518 02b8 33D1     		bne	.L174
 898:..\src/interruptions.c ****                     }
 2519              		.loc 1 898 0
 2520 02ba BB68     		ldr	r3, [r7, #8]
 2521 02bc 1B68     		ldr	r3, [r3]
 2522 02be 044A     		ldr	r2, .L175
 2523 02c0 B2F8B022 		ldrh	r2, [r2, #688]
 2524 02c4 5208     		lsrs	r2, r2, #1
 2525 02c6 92B2     		uxth	r2, r2
 2526 02c8 9A1A     		subs	r2, r3, r2
 2527 02ca BB68     		ldr	r3, [r7, #8]
 2528 02cc 1A60     		str	r2, [r3]
 885:..\src/interruptions.c ****                     if (motor_idx == 1){
 2529              		.loc 1 885 0
 2530 02ce 28E0     		b	.L174
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 63


 2531              	.L176:
 2532              		.align	2
 2533              	.L175:
 2534 02d0 00000000 		.word	c_mem
 2535 02d4 00000000 		.word	g_adc_meas
 2536 02d8 00000000 		.word	g_meas
 2537              	.L165:
 904:..\src/interruptions.c ****                     if (motor_idx == 0){
 2538              		.loc 1 904 0
 2539 02dc 3B69     		ldr	r3, [r7, #16]
 2540 02de 002B     		cmp	r3, #0
 2541 02e0 20DD     		ble	.L173
 905:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 2542              		.loc 1 905 0
 2543 02e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2544 02e4 002B     		cmp	r3, #0
 2545 02e6 08D1     		bne	.L171
 906:..\src/interruptions.c ****                     }
 2546              		.loc 1 906 0
 2547 02e8 BB68     		ldr	r3, [r7, #8]
 2548 02ea 1A68     		ldr	r2, [r3]
 2549 02ec 104B     		ldr	r3, .L177
 2550 02ee B3F8B032 		ldrh	r3, [r3, #688]
 2551 02f2 5B00     		lsls	r3, r3, #1
 2552 02f4 D21A     		subs	r2, r2, r3
 2553 02f6 BB68     		ldr	r3, [r7, #8]
 2554 02f8 1A60     		str	r2, [r3]
 2555              	.L171:
 908:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 2556              		.loc 1 908 0
 2557 02fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2558 02fc 012B     		cmp	r3, #1
 2559 02fe 08D1     		bne	.L172
 909:..\src/interruptions.c ****                     }
 2560              		.loc 1 909 0
 2561 0300 BB68     		ldr	r3, [r7, #8]
 2562 0302 1A68     		ldr	r2, [r3]
 2563 0304 0A4B     		ldr	r3, .L177
 2564 0306 B3F8B032 		ldrh	r3, [r3, #688]
 2565 030a 5B00     		lsls	r3, r3, #1
 2566 030c D21A     		subs	r2, r2, r3
 2567 030e BB68     		ldr	r3, [r7, #8]
 2568 0310 1A60     		str	r2, [r3]
 2569              	.L172:
 912:..\src/interruptions.c ****                         st_ref_p->pos = 0;
 2570              		.loc 1 912 0
 2571 0312 BB68     		ldr	r3, [r7, #8]
 2572 0314 1B68     		ldr	r3, [r3]
 2573 0316 002B     		cmp	r3, #0
 2574 0318 04DA     		bge	.L173
 913:..\src/interruptions.c ****                     }
 2575              		.loc 1 913 0
 2576 031a BB68     		ldr	r3, [r7, #8]
 2577 031c 0022     		movs	r2, #0
 2578 031e 1A60     		str	r2, [r3]
 2579              	.LBE7:
 2580              		.loc 1 919 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 64


 2581 0320 00E0     		b	.L173
 2582              	.L174:
 2583              	.LBB8:
 885:..\src/interruptions.c ****                     if (motor_idx == 1){
 2584              		.loc 1 885 0
 2585 0322 00BF     		nop
 2586              	.L173:
 2587              	.LBE8:
 2588              		.loc 1 919 0
 2589 0324 00BF     		nop
 2590 0326 2437     		adds	r7, r7, #36
 2591              		.cfi_def_cfa_offset 4
 2592 0328 BD46     		mov	sp, r7
 2593              		.cfi_def_cfa_register 13
 2594              		@ sp needed
 2595 032a 80BC     		pop	{r7}
 2596              		.cfi_restore 7
 2597              		.cfi_def_cfa_offset 0
 2598 032c 7047     		bx	lr
 2599              	.L178:
 2600 032e 00BF     		.align	2
 2601              	.L177:
 2602 0330 00000000 		.word	c_mem
 2603              		.cfi_endproc
 2604              	.LFE69:
 2605              		.size	compute_SoftHand_2_motors_joystick_reference, .-compute_SoftHand_2_motors_joystick_reference
 2606              		.section	.text.compute_SoftHand_2_motors_emg_reference,"ax",%progbits
 2607              		.align	2
 2608              		.global	compute_SoftHand_2_motors_emg_reference
 2609              		.thumb
 2610              		.thumb_func
 2611              		.type	compute_SoftHand_2_motors_emg_reference, %function
 2612              	compute_SoftHand_2_motors_emg_reference:
 2613              	.LFB70:
 920:..\src/interruptions.c **** 
 921:..\src/interruptions.c **** 
 922:..\src/interruptions.c **** //==============================================================================
 923:..\src/interruptions.c **** //                                       COMPUTE SOFTHAND 2 MOTORS EMG REFERENCE
 924:..\src/interruptions.c **** //==============================================================================
 925:..\src/interruptions.c **** void compute_SoftHand_2_motors_emg_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct st_re
 926:..\src/interruptions.c ****     int32 err_emg_1, int32 err_emg_2) {
 2614              		.loc 1 926 0
 2615              		.cfi_startproc
 2616              		@ args = 4, pretend = 0, frame = 16
 2617              		@ frame_needed = 1, uses_anonymous_args = 0
 2618 0000 80B5     		push	{r7, lr}
 2619              		.cfi_def_cfa_offset 8
 2620              		.cfi_offset 7, -8
 2621              		.cfi_offset 14, -4
 2622 0002 84B0     		sub	sp, sp, #16
 2623              		.cfi_def_cfa_offset 24
 2624 0004 00AF     		add	r7, sp, #0
 2625              		.cfi_def_cfa_register 7
 2626 0006 B960     		str	r1, [r7, #8]
 2627 0008 7A60     		str	r2, [r7, #4]
 2628 000a 3B60     		str	r3, [r7]
 2629 000c 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 65


 2630 000e FB73     		strb	r3, [r7, #15]
 927:..\src/interruptions.c ****     
 928:..\src/interruptions.c ****     //Compute reference using a FSM for choosing the right sinergy to activate (call this routine o
 929:..\src/interruptions.c ****     static uint8 fsm_state;     
 930:..\src/interruptions.c ****     if (motor_idx == 0){        //update the fsm only at motor 0 compute reference call and hold th
 2631              		.loc 1 930 0
 2632 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2633 0012 002B     		cmp	r3, #0
 2634 0014 05D1     		bne	.L180
 931:..\src/interruptions.c ****         fsm_state = emg_activation_velocity_fsm();
 2635              		.loc 1 931 0
 2636 0016 FFF7FEFF 		bl	emg_activation_velocity_fsm
 2637 001a 0346     		mov	r3, r0
 2638 001c 1A46     		mov	r2, r3
 2639 001e 614B     		ldr	r3, .L195
 2640 0020 1A70     		strb	r2, [r3]
 2641              	.L180:
 932:..\src/interruptions.c ****     }
 933:..\src/interruptions.c ****        
 934:..\src/interruptions.c ****     switch (fsm_state){
 2642              		.loc 1 934 0
 2643 0022 604B     		ldr	r3, .L195
 2644 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2645 0026 032B     		cmp	r3, #3
 2646 0028 00F2B780 		bhi	.L192
 2647 002c 01A2     		adr	r2, .L183
 2648 002e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2649 0032 00BF     		.p2align 2
 2650              	.L183:
 2651 0034 45000000 		.word	.L182+1
 2652 0038 45000000 		.word	.L182+1
 2653 003c BF000000 		.word	.L184+1
 2654 0040 4F000000 		.word	.L185+1
 2655              		.p2align 1
 2656              	.L182:
 935:..\src/interruptions.c ****         case RELAX_STATE: case TIMER_STATE:
 936:..\src/interruptions.c ****              
 937:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 2657              		.loc 1 937 0
 2658 0044 7B68     		ldr	r3, [r7, #4]
 2659 0046 1A68     		ldr	r2, [r3]
 2660 0048 BB68     		ldr	r3, [r7, #8]
 2661 004a 1A60     		str	r2, [r3]
 938:..\src/interruptions.c ****     
 939:..\src/interruptions.c ****             break;
 2662              		.loc 1 939 0
 2663 004c A5E0     		b	.L181
 2664              	.L185:
 940:..\src/interruptions.c ****         
 941:..\src/interruptions.c ****         case MOVE_SLOW_ACT: // First sinergy movement (related to default slow activation)
 942:..\src/interruptions.c **** 
 943:..\src/interruptions.c ****             if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {   //both motors wind the wire around the 
 2665              		.loc 1 943 0
 2666 004e 3B68     		ldr	r3, [r7]
 2667 0050 002B     		cmp	r3, #0
 2668 0052 17DD     		ble	.L186
 2669              		.loc 1 943 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 66


 2670 0054 3A68     		ldr	r2, [r7]
 2671 0056 BB69     		ldr	r3, [r7, #24]
 2672 0058 9A42     		cmp	r2, r3
 2673 005a 13DD     		ble	.L186
 944:..\src/interruptions.c ****                st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / (1024
 2674              		.loc 1 944 0 is_stmt 1
 2675 005c 7B68     		ldr	r3, [r7, #4]
 2676 005e 1A68     		ldr	r2, [r3]
 2677 0060 514B     		ldr	r3, .L195+4
 2678 0062 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2679 0066 1946     		mov	r1, r3
 2680 0068 3B68     		ldr	r3, [r7]
 2681 006a 03FB01F3 		mul	r3, r3, r1
 2682 006e 9900     		lsls	r1, r3, #2
 2683 0070 4E4B     		ldr	r3, .L195+8
 2684 0072 B3F8F031 		ldrh	r3, [r3, #496]
 2685 0076 C3F58063 		rsb	r3, r3, #1024
 2686 007a 91FBF3F3 		sdiv	r3, r1, r3
 2687 007e 1A44     		add	r2, r2, r3
 2688 0080 BB68     		ldr	r3, [r7, #8]
 2689 0082 1A60     		str	r2, [r3]
 2690              	.L186:
 945:..\src/interruptions.c ****             }
 946:..\src/interruptions.c ****             if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {   //both motors unroll the wire around th
 2691              		.loc 1 946 0
 2692 0084 BB69     		ldr	r3, [r7, #24]
 2693 0086 002B     		cmp	r3, #0
 2694 0088 40F38480 		ble	.L193
 2695              		.loc 1 946 0 is_stmt 0 discriminator 1
 2696 008c BA69     		ldr	r2, [r7, #24]
 2697 008e 3B68     		ldr	r3, [r7]
 2698 0090 9A42     		cmp	r2, r3
 2699 0092 7FDD     		ble	.L193
 947:..\src/interruptions.c ****                st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / (1024
 2700              		.loc 1 947 0 is_stmt 1
 2701 0094 7B68     		ldr	r3, [r7, #4]
 2702 0096 1A68     		ldr	r2, [r3]
 2703 0098 434B     		ldr	r3, .L195+4
 2704 009a 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2705 009e 1946     		mov	r1, r3
 2706 00a0 BB69     		ldr	r3, [r7, #24]
 2707 00a2 03FB01F3 		mul	r3, r3, r1
 2708 00a6 9900     		lsls	r1, r3, #2
 2709 00a8 404B     		ldr	r3, .L195+8
 2710 00aa B3F8F231 		ldrh	r3, [r3, #498]
 2711 00ae C3F58063 		rsb	r3, r3, #1024
 2712 00b2 91FBF3F3 		sdiv	r3, r1, r3
 2713 00b6 D21A     		subs	r2, r2, r3
 2714 00b8 BB68     		ldr	r3, [r7, #8]
 2715 00ba 1A60     		str	r2, [r3]
 948:..\src/interruptions.c ****             }
 949:..\src/interruptions.c ****             
 950:..\src/interruptions.c ****             break;
 2716              		.loc 1 950 0
 2717 00bc 6AE0     		b	.L193
 2718              	.L184:
 951:..\src/interruptions.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 67


 952:..\src/interruptions.c ****         case MOVE_FAST_ACT: // Second sinergy movement (related to default fast activation)
 953:..\src/interruptions.c ****             
 954:..\src/interruptions.c ****             if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {   //(Pinch) The wire is winded around the
 2719              		.loc 1 954 0
 2720 00be 3B68     		ldr	r3, [r7]
 2721 00c0 002B     		cmp	r3, #0
 2722 00c2 31DD     		ble	.L188
 2723              		.loc 1 954 0 is_stmt 0 discriminator 1
 2724 00c4 3A68     		ldr	r2, [r7]
 2725 00c6 BB69     		ldr	r3, [r7, #24]
 2726 00c8 9A42     		cmp	r2, r3
 2727 00ca 2DDD     		ble	.L188
 955:..\src/interruptions.c ****                 if (motor_idx == 0){
 2728              		.loc 1 955 0 is_stmt 1
 2729 00cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2730 00ce 002B     		cmp	r3, #0
 2731 00d0 13D1     		bne	.L189
 956:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / 
 2732              		.loc 1 956 0
 2733 00d2 7B68     		ldr	r3, [r7, #4]
 2734 00d4 1A68     		ldr	r2, [r3]
 2735 00d6 344B     		ldr	r3, .L195+4
 2736 00d8 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2737 00dc 1946     		mov	r1, r3
 2738 00de 3B68     		ldr	r3, [r7]
 2739 00e0 03FB01F3 		mul	r3, r3, r1
 2740 00e4 9900     		lsls	r1, r3, #2
 2741 00e6 314B     		ldr	r3, .L195+8
 2742 00e8 B3F8F031 		ldrh	r3, [r3, #496]
 2743 00ec C3F58063 		rsb	r3, r3, #1024
 2744 00f0 91FBF3F3 		sdiv	r3, r1, r3
 2745 00f4 1A44     		add	r2, r2, r3
 2746 00f6 BB68     		ldr	r3, [r7, #8]
 2747 00f8 1A60     		str	r2, [r3]
 2748              	.L189:
 957:..\src/interruptions.c ****                 }
 958:..\src/interruptions.c ****                 if (motor_idx == 1){
 2749              		.loc 1 958 0
 2750 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2751 00fc 012B     		cmp	r3, #1
 2752 00fe 13D1     		bne	.L188
 959:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos - (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / 
 2753              		.loc 1 959 0
 2754 0100 7B68     		ldr	r3, [r7, #4]
 2755 0102 1A68     		ldr	r2, [r3]
 2756 0104 284B     		ldr	r3, .L195+4
 2757 0106 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2758 010a 1946     		mov	r1, r3
 2759 010c 3B68     		ldr	r3, [r7]
 2760 010e 03FB01F3 		mul	r3, r3, r1
 2761 0112 9900     		lsls	r1, r3, #2
 2762 0114 254B     		ldr	r3, .L195+8
 2763 0116 B3F8F031 		ldrh	r3, [r3, #496]
 2764 011a C3F58063 		rsb	r3, r3, #1024
 2765 011e 91FBF3F3 		sdiv	r3, r1, r3
 2766 0122 D21A     		subs	r2, r2, r3
 2767 0124 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 68


 2768 0126 1A60     		str	r2, [r3]
 2769              	.L188:
 960:..\src/interruptions.c ****                 }   
 961:..\src/interruptions.c ****             }
 962:..\src/interruptions.c ****             if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {   //(Index point) The wire is unwinded fr
 2770              		.loc 1 962 0
 2771 0128 BB69     		ldr	r3, [r7, #24]
 2772 012a 002B     		cmp	r3, #0
 2773 012c 34DD     		ble	.L194
 2774              		.loc 1 962 0 is_stmt 0 discriminator 1
 2775 012e BA69     		ldr	r2, [r7, #24]
 2776 0130 3B68     		ldr	r3, [r7]
 2777 0132 9A42     		cmp	r2, r3
 2778 0134 30DD     		ble	.L194
 963:..\src/interruptions.c ****                 if (motor_idx == 0){
 2779              		.loc 1 963 0 is_stmt 1
 2780 0136 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2781 0138 002B     		cmp	r3, #0
 2782 013a 13D1     		bne	.L191
 964:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / 
 2783              		.loc 1 964 0
 2784 013c 7B68     		ldr	r3, [r7, #4]
 2785 013e 1A68     		ldr	r2, [r3]
 2786 0140 194B     		ldr	r3, .L195+4
 2787 0142 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2788 0146 1946     		mov	r1, r3
 2789 0148 BB69     		ldr	r3, [r7, #24]
 2790 014a 03FB01F3 		mul	r3, r3, r1
 2791 014e 9900     		lsls	r1, r3, #2
 2792 0150 164B     		ldr	r3, .L195+8
 2793 0152 B3F8F231 		ldrh	r3, [r3, #498]
 2794 0156 C3F58063 		rsb	r3, r3, #1024
 2795 015a 91FBF3F3 		sdiv	r3, r1, r3
 2796 015e D21A     		subs	r2, r2, r3
 2797 0160 BB68     		ldr	r3, [r7, #8]
 2798 0162 1A60     		str	r2, [r3]
 2799              	.L191:
 965:..\src/interruptions.c ****                 }
 966:..\src/interruptions.c ****                 if (motor_idx == 1){
 2800              		.loc 1 966 0
 2801 0164 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2802 0166 012B     		cmp	r3, #1
 2803 0168 16D1     		bne	.L194
 967:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos + (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / 
 2804              		.loc 1 967 0
 2805 016a 7B68     		ldr	r3, [r7, #4]
 2806 016c 1A68     		ldr	r2, [r3]
 2807 016e 0E4B     		ldr	r3, .L195+4
 2808 0170 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2809 0174 1946     		mov	r1, r3
 2810 0176 BB69     		ldr	r3, [r7, #24]
 2811 0178 03FB01F3 		mul	r3, r3, r1
 2812 017c 9900     		lsls	r1, r3, #2
 2813 017e 0B4B     		ldr	r3, .L195+8
 2814 0180 B3F8F231 		ldrh	r3, [r3, #498]
 2815 0184 C3F58063 		rsb	r3, r3, #1024
 2816 0188 91FBF3F3 		sdiv	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 69


 2817 018c 1A44     		add	r2, r2, r3
 2818 018e BB68     		ldr	r3, [r7, #8]
 2819 0190 1A60     		str	r2, [r3]
 968:..\src/interruptions.c ****                 }
 969:..\src/interruptions.c ****             }
 970:..\src/interruptions.c ****             
 971:..\src/interruptions.c ****             break;
 2820              		.loc 1 971 0
 2821 0192 01E0     		b	.L194
 2822              	.L193:
 950:..\src/interruptions.c ****             
 2823              		.loc 1 950 0
 2824 0194 00BF     		nop
 2825 0196 00E0     		b	.L192
 2826              	.L194:
 2827              		.loc 1 971 0
 2828 0198 00BF     		nop
 2829              	.L181:
 2830              	.L192:
 972:..\src/interruptions.c ****     }
 973:..\src/interruptions.c ****  
 974:..\src/interruptions.c **** }
 2831              		.loc 1 974 0
 2832 019a 00BF     		nop
 2833 019c 1037     		adds	r7, r7, #16
 2834              		.cfi_def_cfa_offset 8
 2835 019e BD46     		mov	sp, r7
 2836              		.cfi_def_cfa_register 13
 2837              		@ sp needed
 2838 01a0 80BD     		pop	{r7, pc}
 2839              	.L196:
 2840 01a2 00BF     		.align	2
 2841              	.L195:
 2842 01a4 8E000000 		.word	fsm_state.10515
 2843 01a8 00000000 		.word	g_mem
 2844 01ac 00000000 		.word	c_mem
 2845              		.cfi_endproc
 2846              	.LFE70:
 2847              		.size	compute_SoftHand_2_motors_emg_reference, .-compute_SoftHand_2_motors_emg_reference
 2848              		.section	.text.motor_control_SH,"ax",%progbits
 2849              		.align	2
 2850              		.global	motor_control_SH
 2851              		.thumb
 2852              		.thumb_func
 2853              		.type	motor_control_SH, %function
 2854              	motor_control_SH:
 2855              	.LFB71:
 975:..\src/interruptions.c **** 
 976:..\src/interruptions.c **** //==============================================================================
 977:..\src/interruptions.c **** //                                                        MOTOR CONTROL SOFTHAND
 978:..\src/interruptions.c **** //==============================================================================
 979:..\src/interruptions.c **** void motor_control_SH() {
 2856              		.loc 1 979 0
 2857              		.cfi_startproc
 2858              		@ args = 0, pretend = 0, frame = 80
 2859              		@ frame_needed = 1, uses_anonymous_args = 0
 2860 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 70


 2861              		.cfi_def_cfa_offset 8
 2862              		.cfi_offset 7, -8
 2863              		.cfi_offset 14, -4
 2864 0002 94B0     		sub	sp, sp, #80
 2865              		.cfi_def_cfa_offset 88
 2866 0004 00AF     		add	r7, sp, #0
 2867              		.cfi_def_cfa_register 7
 980:..\src/interruptions.c **** 
 981:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 2868              		.loc 1 981 0
 2869 0006 0023     		movs	r3, #0
 2870 0008 FB64     		str	r3, [r7, #76]
 982:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
 983:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
 984:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
 985:..\src/interruptions.c ****  
 986:..\src/interruptions.c ****     uint8 MOTOR_IDX = 0;
 2871              		.loc 1 986 0
 2872 000a 0023     		movs	r3, #0
 2873 000c 87F84730 		strb	r3, [r7, #71]
 987:..\src/interruptions.c ****     
 988:..\src/interruptions.c ****     struct st_motor* SH_MOT = &c_mem.motor[MOTOR_IDX];      // SoftHand default motor
 2874              		.loc 1 988 0
 2875 0010 97F84720 		ldrb	r2, [r7, #71]	@ zero_extendqisi2
 2876 0014 1346     		mov	r3, r2
 2877 0016 DB00     		lsls	r3, r3, #3
 2878 0018 9B1A     		subs	r3, r3, r2
 2879 001a 1B01     		lsls	r3, r3, #4
 2880 001c B033     		adds	r3, r3, #176
 2881 001e 9D4A     		ldr	r2, .L258
 2882 0020 1344     		add	r3, r3, r2
 2883 0022 3B64     		str	r3, [r7, #64]
 989:..\src/interruptions.c ****     uint8 SH_ENC_L = SH_MOT->encoder_line;          // Associated encoder line
 2884              		.loc 1 989 0
 2885 0024 3B6C     		ldr	r3, [r7, #64]
 2886 0026 93F86030 		ldrb	r3, [r3, #96]
 2887 002a 87F83F30 		strb	r3, [r7, #63]
 990:..\src/interruptions.c ****     
 991:..\src/interruptions.c ****     int32 CYDATA k_p = SH_MOT->k_p;  
 2888              		.loc 1 991 0
 2889 002e 3B6C     		ldr	r3, [r7, #64]
 2890 0030 1B68     		ldr	r3, [r3]
 2891 0032 BB63     		str	r3, [r7, #56]
 992:..\src/interruptions.c ****     int32 CYDATA k_i = SH_MOT->k_i; 
 2892              		.loc 1 992 0
 2893 0034 3B6C     		ldr	r3, [r7, #64]
 2894 0036 5B68     		ldr	r3, [r3, #4]
 2895 0038 7B63     		str	r3, [r7, #52]
 993:..\src/interruptions.c ****     int32 CYDATA k_d = SH_MOT->k_d; 
 2896              		.loc 1 993 0
 2897 003a 3B6C     		ldr	r3, [r7, #64]
 2898 003c 9B68     		ldr	r3, [r3, #8]
 2899 003e 3B63     		str	r3, [r7, #48]
 994:..\src/interruptions.c **** 
 995:..\src/interruptions.c ****     int32 CYDATA k_p_c = SH_MOT->k_p_c;  
 2900              		.loc 1 995 0
 2901 0040 3B6C     		ldr	r3, [r7, #64]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 71


 2902 0042 DB68     		ldr	r3, [r3, #12]
 2903 0044 FB62     		str	r3, [r7, #44]
 996:..\src/interruptions.c ****     int32 CYDATA k_i_c = SH_MOT->k_i_c; 
 2904              		.loc 1 996 0
 2905 0046 3B6C     		ldr	r3, [r7, #64]
 2906 0048 1B69     		ldr	r3, [r3, #16]
 2907 004a BB62     		str	r3, [r7, #40]
 997:..\src/interruptions.c ****     int32 CYDATA k_d_c = SH_MOT->k_d_c;   
 2908              		.loc 1 997 0
 2909 004c 3B6C     		ldr	r3, [r7, #64]
 2910 004e 5B69     		ldr	r3, [r3, #20]
 2911 0050 7B62     		str	r3, [r7, #36]
 998:..\src/interruptions.c **** 
 999:..\src/interruptions.c ****     int32 CYDATA k_p_dl = SH_MOT->k_p_dl;  
 2912              		.loc 1 999 0
 2913 0052 3B6C     		ldr	r3, [r7, #64]
 2914 0054 9B69     		ldr	r3, [r3, #24]
 2915 0056 3B62     		str	r3, [r7, #32]
1000:..\src/interruptions.c ****     int32 CYDATA k_i_dl = SH_MOT->k_i_dl; 
 2916              		.loc 1 1000 0
 2917 0058 3B6C     		ldr	r3, [r7, #64]
 2918 005a DB69     		ldr	r3, [r3, #28]
 2919 005c FB61     		str	r3, [r7, #28]
1001:..\src/interruptions.c ****     int32 CYDATA k_d_dl = SH_MOT->k_d_dl;
 2920              		.loc 1 1001 0
 2921 005e 3B6C     		ldr	r3, [r7, #64]
 2922 0060 1B6A     		ldr	r3, [r3, #32]
 2923 0062 BB61     		str	r3, [r7, #24]
1002:..\src/interruptions.c ****     
1003:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = SH_MOT->k_p_c_dl;  
 2924              		.loc 1 1003 0
 2925 0064 3B6C     		ldr	r3, [r7, #64]
 2926 0066 5B6A     		ldr	r3, [r3, #36]
 2927 0068 7B61     		str	r3, [r7, #20]
1004:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = SH_MOT->k_i_c_dl; 
 2928              		.loc 1 1004 0
 2929 006a 3B6C     		ldr	r3, [r7, #64]
 2930 006c 9B6A     		ldr	r3, [r3, #40]
 2931 006e 3B61     		str	r3, [r7, #16]
1005:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = SH_MOT->k_d_c_dl;   
 2932              		.loc 1 1005 0
 2933 0070 3B6C     		ldr	r3, [r7, #64]
 2934 0072 DB6A     		ldr	r3, [r3, #44]
 2935 0074 FB60     		str	r3, [r7, #12]
1006:..\src/interruptions.c **** 
1007:..\src/interruptions.c ****     // Static Variables
1008:..\src/interruptions.c **** 
1009:..\src/interruptions.c ****     static int32 pos_error_sum;     // position error sum for integral
1010:..\src/interruptions.c ****     static int32 curr_error_sum;    // current error sum for integral
1011:..\src/interruptions.c ****     
1012:..\src/interruptions.c ****     static int32 prev_pos_err;      // previous position error for deriv. control
1013:..\src/interruptions.c ****     static int32 prev_curr_err;     // previous current error for deriv. control
1014:..\src/interruptions.c ****     static int32 prev_pwm;
1015:..\src/interruptions.c **** 
1016:..\src/interruptions.c ****     static CYBIT motor_dir = FALSE;
1017:..\src/interruptions.c ****     static uint32 position_counter = 0;
1018:..\src/interruptions.c ****   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 72


1019:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
1020:..\src/interruptions.c ****     compute_reference(MOTOR_IDX, &g_ref[MOTOR_IDX], &g_refOld[MOTOR_IDX]);
 2936              		.loc 1 1020 0
 2937 0076 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 2938 007a 1B01     		lsls	r3, r3, #4
 2939 007c 864A     		ldr	r2, .L258+4
 2940 007e 9918     		adds	r1, r3, r2
 2941 0080 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 2942 0084 1B01     		lsls	r3, r3, #4
 2943 0086 854A     		ldr	r2, .L258+8
 2944 0088 1A44     		add	r2, r2, r3
 2945 008a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 2946 008e 1846     		mov	r0, r3
 2947 0090 FFF7FEFF 		bl	compute_reference
1021:..\src/interruptions.c ****      
1022:..\src/interruptions.c ****     switch(SH_MOT->control_mode) {
 2948              		.loc 1 1022 0
 2949 0094 3B6C     		ldr	r3, [r7, #64]
 2950 0096 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 2951 009a 032B     		cmp	r3, #3
 2952 009c 00F2F781 		bhi	.L198
 2953 00a0 01A2     		adr	r2, .L200
 2954 00a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2955 00a6 00BF     		.p2align 2
 2956              	.L200:
 2957 00a8 55020000 		.word	.L199+1
 2958 00ac 49040000 		.word	.L201+1
 2959 00b0 3B030000 		.word	.L202+1
 2960 00b4 B9000000 		.word	.L203+1
 2961              		.p2align 1
 2962              	.L203:
1023:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
1024:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
1025:..\src/interruptions.c ****             pos_error = g_ref[MOTOR_IDX].pos - g_meas[SH_ENC_L].pos[0];
 2963              		.loc 1 1025 0
 2964 00b8 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 2965 00bc 764A     		ldr	r2, .L258+4
 2966 00be 1B01     		lsls	r3, r3, #4
 2967 00c0 1344     		add	r3, r3, r2
 2968 00c2 1A68     		ldr	r2, [r3]
 2969 00c4 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 2970 00c8 7549     		ldr	r1, .L258+12
 2971 00ca 3420     		movs	r0, #52
 2972 00cc 00FB03F3 		mul	r3, r0, r3
 2973 00d0 0B44     		add	r3, r3, r1
 2974 00d2 1B68     		ldr	r3, [r3]
 2975 00d4 D31A     		subs	r3, r2, r3
 2976 00d6 BB60     		str	r3, [r7, #8]
1026:..\src/interruptions.c **** 
1027:..\src/interruptions.c ****             pos_error_sum += pos_error;
 2977              		.loc 1 1027 0
 2978 00d8 724B     		ldr	r3, .L258+16
 2979 00da 1A68     		ldr	r2, [r3]
 2980 00dc BB68     		ldr	r3, [r7, #8]
 2981 00de 1344     		add	r3, r3, r2
 2982 00e0 704A     		ldr	r2, .L258+16
 2983 00e2 1360     		str	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 73


1028:..\src/interruptions.c **** 
1029:..\src/interruptions.c ****             // error_sum saturation
1030:..\src/interruptions.c ****             if (pos_error_sum > POS_INTEGRAL_SAT_LIMIT)
 2984              		.loc 1 1030 0
 2985 00e4 6F4B     		ldr	r3, .L258+16
 2986 00e6 1B68     		ldr	r3, [r3]
 2987 00e8 6F4A     		ldr	r2, .L258+20
 2988 00ea 9342     		cmp	r3, r2
 2989 00ec 03DD     		ble	.L204
1031:..\src/interruptions.c ****                 pos_error_sum = POS_INTEGRAL_SAT_LIMIT;
 2990              		.loc 1 1031 0
 2991 00ee 6D4B     		ldr	r3, .L258+16
 2992 00f0 6D4A     		ldr	r2, .L258+20
 2993 00f2 1A60     		str	r2, [r3]
 2994 00f4 07E0     		b	.L205
 2995              	.L204:
1032:..\src/interruptions.c ****             else {
1033:..\src/interruptions.c ****                 if (pos_error_sum < -POS_INTEGRAL_SAT_LIMIT) 
 2996              		.loc 1 1033 0
 2997 00f6 6B4B     		ldr	r3, .L258+16
 2998 00f8 1B68     		ldr	r3, [r3]
 2999 00fa 6C4A     		ldr	r2, .L258+24
 3000 00fc 9342     		cmp	r3, r2
 3001 00fe 02DA     		bge	.L205
1034:..\src/interruptions.c ****                     pos_error_sum = -POS_INTEGRAL_SAT_LIMIT;
 3002              		.loc 1 1034 0
 3003 0100 684B     		ldr	r3, .L258+16
 3004 0102 6A4A     		ldr	r2, .L258+24
 3005 0104 1A60     		str	r2, [r3]
 3006              	.L205:
1035:..\src/interruptions.c ****             }
1036:..\src/interruptions.c ****             
1037:..\src/interruptions.c ****             // ------ position PID control ------
1038:..\src/interruptions.c **** 
1039:..\src/interruptions.c ****             i_ref = 0;
 3007              		.loc 1 1039 0
 3008 0106 0023     		movs	r3, #0
 3009 0108 BB64     		str	r3, [r7, #72]
1040:..\src/interruptions.c ****             
1041:..\src/interruptions.c ****             // Proportional
1042:..\src/interruptions.c ****             if (k_p_dl != 0)
 3010              		.loc 1 1042 0
 3011 010a 3B6A     		ldr	r3, [r7, #32]
 3012 010c 002B     		cmp	r3, #0
 3013 010e 07D0     		beq	.L206
1043:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 3014              		.loc 1 1043 0
 3015 0110 3B6A     		ldr	r3, [r7, #32]
 3016 0112 BA68     		ldr	r2, [r7, #8]
 3017 0114 02FB03F3 		mul	r3, r2, r3
 3018 0118 1B14     		asrs	r3, r3, #16
 3019 011a BA6C     		ldr	r2, [r7, #72]
 3020 011c 1344     		add	r3, r3, r2
 3021 011e BB64     		str	r3, [r7, #72]
 3022              	.L206:
1044:..\src/interruptions.c **** 
1045:..\src/interruptions.c ****             // Integral
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 74


1046:..\src/interruptions.c ****             if (k_i_dl != 0)
 3023              		.loc 1 1046 0
 3024 0120 FB69     		ldr	r3, [r7, #28]
 3025 0122 002B     		cmp	r3, #0
 3026 0124 08D0     		beq	.L207
1047:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum) >> 16;
 3027              		.loc 1 1047 0
 3028 0126 5F4B     		ldr	r3, .L258+16
 3029 0128 1B68     		ldr	r3, [r3]
 3030 012a FA69     		ldr	r2, [r7, #28]
 3031 012c 02FB03F3 		mul	r3, r2, r3
 3032 0130 1B14     		asrs	r3, r3, #16
 3033 0132 BA6C     		ldr	r2, [r7, #72]
 3034 0134 1344     		add	r3, r3, r2
 3035 0136 BB64     		str	r3, [r7, #72]
 3036              	.L207:
1048:..\src/interruptions.c **** 
1049:..\src/interruptions.c ****             // Derivative
1050:..\src/interruptions.c ****             if (k_d_dl != 0)
 3037              		.loc 1 1050 0
 3038 0138 BB69     		ldr	r3, [r7, #24]
 3039 013a 002B     		cmp	r3, #0
 3040 013c 0AD0     		beq	.L208
1051:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err)) >> 16;
 3041              		.loc 1 1051 0
 3042 013e 5C4B     		ldr	r3, .L258+28
 3043 0140 1B68     		ldr	r3, [r3]
 3044 0142 BA68     		ldr	r2, [r7, #8]
 3045 0144 D31A     		subs	r3, r2, r3
 3046 0146 BA69     		ldr	r2, [r7, #24]
 3047 0148 02FB03F3 		mul	r3, r2, r3
 3048 014c 1B14     		asrs	r3, r3, #16
 3049 014e BA6C     		ldr	r2, [r7, #72]
 3050 0150 1344     		add	r3, r3, r2
 3051 0152 BB64     		str	r3, [r7, #72]
 3052              	.L208:
1052:..\src/interruptions.c ****                         
1053:..\src/interruptions.c ****             // Update previous position
1054:..\src/interruptions.c ****             prev_pos_err = pos_error;
 3053              		.loc 1 1054 0
 3054 0154 564A     		ldr	r2, .L258+28
 3055 0156 BB68     		ldr	r3, [r7, #8]
 3056 0158 1360     		str	r3, [r2]
1055:..\src/interruptions.c **** 
1056:..\src/interruptions.c ****             // motor direction depends on i_ref
1057:..\src/interruptions.c ****             if (i_ref >= 0)
 3057              		.loc 1 1057 0
 3058 015a BB6C     		ldr	r3, [r7, #72]
 3059 015c 002B     		cmp	r3, #0
 3060 015e 03DB     		blt	.L209
1058:..\src/interruptions.c ****                 motor_dir = TRUE;
 3061              		.loc 1 1058 0
 3062 0160 544B     		ldr	r3, .L258+32
 3063 0162 0122     		movs	r2, #1
 3064 0164 1A70     		strb	r2, [r3]
 3065 0166 02E0     		b	.L210
 3066              	.L209:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 75


1059:..\src/interruptions.c ****             else
1060:..\src/interruptions.c ****                 motor_dir = FALSE;
 3067              		.loc 1 1060 0
 3068 0168 524B     		ldr	r3, .L258+32
 3069 016a 0022     		movs	r2, #0
 3070 016c 1A70     		strb	r2, [r3]
 3071              	.L210:
1061:..\src/interruptions.c **** 
1062:..\src/interruptions.c ****             // saturate max current
1063:..\src/interruptions.c ****             if (i_ref > SH_MOT->current_limit)
 3072              		.loc 1 1063 0
 3073 016e 3B6C     		ldr	r3, [r7, #64]
 3074 0170 B3F95C30 		ldrsh	r3, [r3, #92]
 3075 0174 1A46     		mov	r2, r3
 3076 0176 BB6C     		ldr	r3, [r7, #72]
 3077 0178 9A42     		cmp	r2, r3
 3078 017a 04DA     		bge	.L211
1064:..\src/interruptions.c ****                 i_ref = SH_MOT->current_limit;
 3079              		.loc 1 1064 0
 3080 017c 3B6C     		ldr	r3, [r7, #64]
 3081 017e B3F95C30 		ldrsh	r3, [r3, #92]
 3082 0182 BB64     		str	r3, [r7, #72]
 3083 0184 0BE0     		b	.L212
 3084              	.L211:
1065:..\src/interruptions.c ****             else {
1066:..\src/interruptions.c ****                 if (i_ref < -SH_MOT->current_limit)
 3085              		.loc 1 1066 0
 3086 0186 3B6C     		ldr	r3, [r7, #64]
 3087 0188 B3F95C30 		ldrsh	r3, [r3, #92]
 3088 018c 5A42     		negs	r2, r3
 3089 018e BB6C     		ldr	r3, [r7, #72]
 3090 0190 9A42     		cmp	r2, r3
 3091 0192 04DD     		ble	.L212
1067:..\src/interruptions.c ****                     i_ref = -SH_MOT->current_limit;
 3092              		.loc 1 1067 0
 3093 0194 3B6C     		ldr	r3, [r7, #64]
 3094 0196 B3F95C30 		ldrsh	r3, [r3, #92]
 3095 019a 5B42     		negs	r3, r3
 3096 019c BB64     		str	r3, [r7, #72]
 3097              	.L212:
1068:..\src/interruptions.c ****         	}
1069:..\src/interruptions.c **** 
1070:..\src/interruptions.c ****             // current error and curr error sum
1071:..\src/interruptions.c ****             curr_error = i_ref - g_meas[SH_ENC_L].curr;
 3098              		.loc 1 1071 0
 3099 019e 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3100 01a2 3F4A     		ldr	r2, .L258+12
 3101 01a4 3421     		movs	r1, #52
 3102 01a6 01FB03F3 		mul	r3, r1, r3
 3103 01aa 1344     		add	r3, r3, r2
 3104 01ac 0C33     		adds	r3, r3, #12
 3105 01ae 1B68     		ldr	r3, [r3]
 3106 01b0 BA6C     		ldr	r2, [r7, #72]
 3107 01b2 D31A     		subs	r3, r2, r3
 3108 01b4 7B60     		str	r3, [r7, #4]
1072:..\src/interruptions.c ****             curr_error_sum += curr_error;
 3109              		.loc 1 1072 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 76


 3110 01b6 404B     		ldr	r3, .L258+36
 3111 01b8 1A68     		ldr	r2, [r3]
 3112 01ba 7B68     		ldr	r3, [r7, #4]
 3113 01bc 1344     		add	r3, r3, r2
 3114 01be 3E4A     		ldr	r2, .L258+36
 3115 01c0 1360     		str	r3, [r2]
1073:..\src/interruptions.c ****             
1074:..\src/interruptions.c ****             if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 3116              		.loc 1 1074 0
 3117 01c2 3D4B     		ldr	r3, .L258+36
 3118 01c4 1B68     		ldr	r3, [r3]
 3119 01c6 3D4A     		ldr	r2, .L258+40
 3120 01c8 9342     		cmp	r3, r2
 3121 01ca 03DD     		ble	.L213
1075:..\src/interruptions.c ****                 curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 3122              		.loc 1 1075 0
 3123 01cc 3A4B     		ldr	r3, .L258+36
 3124 01ce 3B4A     		ldr	r2, .L258+40
 3125 01d0 1A60     		str	r2, [r3]
 3126 01d2 07E0     		b	.L214
 3127              	.L213:
1076:..\src/interruptions.c ****             else {
1077:..\src/interruptions.c ****                 if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT)
 3128              		.loc 1 1077 0
 3129 01d4 384B     		ldr	r3, .L258+36
 3130 01d6 1B68     		ldr	r3, [r3]
 3131 01d8 394A     		ldr	r2, .L258+44
 3132 01da 9342     		cmp	r3, r2
 3133 01dc 02DA     		bge	.L214
1078:..\src/interruptions.c ****                     curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 3134              		.loc 1 1078 0
 3135 01de 364B     		ldr	r3, .L258+36
 3136 01e0 374A     		ldr	r2, .L258+44
 3137 01e2 1A60     		str	r2, [r3]
 3138              	.L214:
1079:..\src/interruptions.c ****             }
1080:..\src/interruptions.c **** 
1081:..\src/interruptions.c ****             // ----- current PID control -----
1082:..\src/interruptions.c **** 
1083:..\src/interruptions.c ****             pwm_input = 0;
 3139              		.loc 1 1083 0
 3140 01e4 0023     		movs	r3, #0
 3141 01e6 FB64     		str	r3, [r7, #76]
1084:..\src/interruptions.c **** 
1085:..\src/interruptions.c ****             // Proportional
1086:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 3142              		.loc 1 1086 0
 3143 01e8 7B69     		ldr	r3, [r7, #20]
 3144 01ea 002B     		cmp	r3, #0
 3145 01ec 07D0     		beq	.L215
1087:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 3146              		.loc 1 1087 0
 3147 01ee 7B69     		ldr	r3, [r7, #20]
 3148 01f0 7A68     		ldr	r2, [r7, #4]
 3149 01f2 02FB03F3 		mul	r3, r2, r3
 3150 01f6 1B14     		asrs	r3, r3, #16
 3151 01f8 FA6C     		ldr	r2, [r7, #76]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 77


 3152 01fa 1344     		add	r3, r3, r2
 3153 01fc FB64     		str	r3, [r7, #76]
 3154              	.L215:
1088:..\src/interruptions.c **** 
1089:..\src/interruptions.c ****             // Integral
1090:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 3155              		.loc 1 1090 0
 3156 01fe 3B69     		ldr	r3, [r7, #16]
 3157 0200 002B     		cmp	r3, #0
 3158 0202 08D0     		beq	.L216
1091:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum) >> 16;
 3159              		.loc 1 1091 0
 3160 0204 2C4B     		ldr	r3, .L258+36
 3161 0206 1B68     		ldr	r3, [r3]
 3162 0208 3A69     		ldr	r2, [r7, #16]
 3163 020a 02FB03F3 		mul	r3, r2, r3
 3164 020e 1B14     		asrs	r3, r3, #16
 3165 0210 FA6C     		ldr	r2, [r7, #76]
 3166 0212 1344     		add	r3, r3, r2
 3167 0214 FB64     		str	r3, [r7, #76]
 3168              	.L216:
1092:..\src/interruptions.c **** 
1093:..\src/interruptions.c ****             // Derivative
1094:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 3169              		.loc 1 1094 0
 3170 0216 FB68     		ldr	r3, [r7, #12]
 3171 0218 002B     		cmp	r3, #0
 3172 021a 0AD0     		beq	.L217
1095:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err)) >> 16;
 3173              		.loc 1 1095 0
 3174 021c 294B     		ldr	r3, .L258+48
 3175 021e 1B68     		ldr	r3, [r3]
 3176 0220 7A68     		ldr	r2, [r7, #4]
 3177 0222 D31A     		subs	r3, r2, r3
 3178 0224 FA68     		ldr	r2, [r7, #12]
 3179 0226 02FB03F3 		mul	r3, r2, r3
 3180 022a 1B14     		asrs	r3, r3, #16
 3181 022c FA6C     		ldr	r2, [r7, #76]
 3182 022e 1344     		add	r3, r3, r2
 3183 0230 FB64     		str	r3, [r7, #76]
 3184              	.L217:
1096:..\src/interruptions.c **** 
1097:..\src/interruptions.c ****             // pwm_input saturation
1098:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 3185              		.loc 1 1098 0
 3186 0232 FB6C     		ldr	r3, [r7, #76]
 3187 0234 13F1640F 		cmn	r3, #100
 3188 0238 03DA     		bge	.L218
1099:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 3189              		.loc 1 1099 0
 3190 023a 6FF06303 		mvn	r3, #99
 3191 023e FB64     		str	r3, [r7, #76]
 3192 0240 04E0     		b	.L219
 3193              	.L218:
1100:..\src/interruptions.c ****             else {
1101:..\src/interruptions.c ****                 if (pwm_input > PWM_MAX_VALUE)
 3194              		.loc 1 1101 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 78


 3195 0242 FB6C     		ldr	r3, [r7, #76]
 3196 0244 642B     		cmp	r3, #100
 3197 0246 01DD     		ble	.L219
1102:..\src/interruptions.c ****                     pwm_input = PWM_MAX_VALUE;
 3198              		.loc 1 1102 0
 3199 0248 6423     		movs	r3, #100
 3200 024a FB64     		str	r3, [r7, #76]
 3201              	.L219:
1103:..\src/interruptions.c ****             }
1104:..\src/interruptions.c **** 
1105:..\src/interruptions.c ****             // Update previous current
1106:..\src/interruptions.c ****             prev_curr_err = curr_error;
 3202              		.loc 1 1106 0
 3203 024c 1D4A     		ldr	r2, .L258+48
 3204 024e 7B68     		ldr	r3, [r7, #4]
 3205 0250 1360     		str	r3, [r2]
1107:..\src/interruptions.c **** 
1108:..\src/interruptions.c ****         break;
 3206              		.loc 1 1108 0
 3207 0252 1CE1     		b	.L198
 3208              	.L199:
1109:..\src/interruptions.c **** 
1110:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
1111:..\src/interruptions.c ****         case CONTROL_ANGLE:
1112:..\src/interruptions.c ****             pos_error = g_ref[MOTOR_IDX].pos - g_meas[SH_ENC_L].pos[0];
 3209              		.loc 1 1112 0
 3210 0254 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3211 0258 0F4A     		ldr	r2, .L258+4
 3212 025a 1B01     		lsls	r3, r3, #4
 3213 025c 1344     		add	r3, r3, r2
 3214 025e 1A68     		ldr	r2, [r3]
 3215 0260 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3216 0264 0E49     		ldr	r1, .L258+12
 3217 0266 3420     		movs	r0, #52
 3218 0268 00FB03F3 		mul	r3, r0, r3
 3219 026c 0B44     		add	r3, r3, r1
 3220 026e 1B68     		ldr	r3, [r3]
 3221 0270 D31A     		subs	r3, r2, r3
 3222 0272 BB60     		str	r3, [r7, #8]
1113:..\src/interruptions.c **** 
1114:..\src/interruptions.c ****             pos_error_sum += pos_error;
 3223              		.loc 1 1114 0
 3224 0274 0B4B     		ldr	r3, .L258+16
 3225 0276 1A68     		ldr	r2, [r3]
 3226 0278 BB68     		ldr	r3, [r7, #8]
 3227 027a 1344     		add	r3, r3, r2
 3228 027c 094A     		ldr	r2, .L258+16
 3229 027e 1360     		str	r3, [r2]
1115:..\src/interruptions.c **** 
1116:..\src/interruptions.c ****             // anti-windup (for integral control)
1117:..\src/interruptions.c ****             if (pos_error_sum > ANTI_WINDUP)
 3230              		.loc 1 1117 0
 3231 0280 084B     		ldr	r3, .L258+16
 3232 0282 1B68     		ldr	r3, [r3]
 3233 0284 B3F57A7F 		cmp	r3, #1000
 3234 0288 1EDD     		ble	.L220
1118:..\src/interruptions.c ****                 pos_error_sum = ANTI_WINDUP;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 79


 3235              		.loc 1 1118 0
 3236 028a 064B     		ldr	r3, .L258+16
 3237 028c 4FF47A72 		mov	r2, #1000
 3238 0290 1A60     		str	r2, [r3]
 3239 0292 21E0     		b	.L221
 3240              	.L259:
 3241              		.align	2
 3242              	.L258:
 3243 0294 00000000 		.word	c_mem
 3244 0298 00000000 		.word	g_ref
 3245 029c 00000000 		.word	g_refOld
 3246 02a0 00000000 		.word	g_meas
 3247 02a4 90000000 		.word	pos_error_sum.10542
 3248 02a8 80F0FA02 		.word	50000000
 3249 02ac 800F05FD 		.word	-50000000
 3250 02b0 94000000 		.word	prev_pos_err.10544
 3251 02b4 98000000 		.word	motor_dir.10547
 3252 02b8 9C000000 		.word	curr_error_sum.10543
 3253 02bc A0860100 		.word	100000
 3254 02c0 6079FEFF 		.word	-100000
 3255 02c4 A0000000 		.word	prev_curr_err.10545
 3256              	.L220:
1119:..\src/interruptions.c ****             else {
1120:..\src/interruptions.c **** 				if (pos_error_sum < -ANTI_WINDUP)
 3257              		.loc 1 1120 0
 3258 02c8 9C4B     		ldr	r3, .L260
 3259 02ca 1B68     		ldr	r3, [r3]
 3260 02cc 13F57A7F 		cmn	r3, #1000
 3261 02d0 02DA     		bge	.L221
1121:..\src/interruptions.c ****                 	pos_error_sum = -ANTI_WINDUP;
 3262              		.loc 1 1121 0
 3263 02d2 9A4B     		ldr	r3, .L260
 3264 02d4 9A4A     		ldr	r2, .L260+4
 3265 02d6 1A60     		str	r2, [r3]
 3266              	.L221:
1122:..\src/interruptions.c ****             }
1123:..\src/interruptions.c **** 
1124:..\src/interruptions.c ****             // Proportional
1125:..\src/interruptions.c ****             if (k_p != 0) 
 3267              		.loc 1 1125 0
 3268 02d8 BB6B     		ldr	r3, [r7, #56]
 3269 02da 002B     		cmp	r3, #0
 3270 02dc 05D0     		beq	.L222
1126:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 3271              		.loc 1 1126 0
 3272 02de BB6B     		ldr	r3, [r7, #56]
 3273 02e0 BA68     		ldr	r2, [r7, #8]
 3274 02e2 02FB03F3 		mul	r3, r2, r3
 3275 02e6 1B14     		asrs	r3, r3, #16
 3276 02e8 FB64     		str	r3, [r7, #76]
 3277              	.L222:
1127:..\src/interruptions.c ****             
1128:..\src/interruptions.c **** 
1129:..\src/interruptions.c ****             // Integral
1130:..\src/interruptions.c ****             if (k_i != 0) 
 3278              		.loc 1 1130 0
 3279 02ea 7B6B     		ldr	r3, [r7, #52]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 80


 3280 02ec 002B     		cmp	r3, #0
 3281 02ee 08D0     		beq	.L223
1131:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum) >> 16;
 3282              		.loc 1 1131 0
 3283 02f0 924B     		ldr	r3, .L260
 3284 02f2 1B68     		ldr	r3, [r3]
 3285 02f4 7A6B     		ldr	r2, [r7, #52]
 3286 02f6 02FB03F3 		mul	r3, r2, r3
 3287 02fa 1B14     		asrs	r3, r3, #16
 3288 02fc FA6C     		ldr	r2, [r7, #76]
 3289 02fe 1344     		add	r3, r3, r2
 3290 0300 FB64     		str	r3, [r7, #76]
 3291              	.L223:
1132:..\src/interruptions.c ****             
1133:..\src/interruptions.c **** 
1134:..\src/interruptions.c ****             // Derivative
1135:..\src/interruptions.c ****             if (k_d != 0) 
 3292              		.loc 1 1135 0
 3293 0302 3B6B     		ldr	r3, [r7, #48]
 3294 0304 002B     		cmp	r3, #0
 3295 0306 0AD0     		beq	.L224
1136:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err)) >> 16;
 3296              		.loc 1 1136 0
 3297 0308 8E4B     		ldr	r3, .L260+8
 3298 030a 1B68     		ldr	r3, [r3]
 3299 030c BA68     		ldr	r2, [r7, #8]
 3300 030e D31A     		subs	r3, r2, r3
 3301 0310 3A6B     		ldr	r2, [r7, #48]
 3302 0312 02FB03F3 		mul	r3, r2, r3
 3303 0316 1B14     		asrs	r3, r3, #16
 3304 0318 FA6C     		ldr	r2, [r7, #76]
 3305 031a 1344     		add	r3, r3, r2
 3306 031c FB64     		str	r3, [r7, #76]
 3307              	.L224:
1137:..\src/interruptions.c ****             
1138:..\src/interruptions.c **** 
1139:..\src/interruptions.c ****             // Update measure
1140:..\src/interruptions.c ****             prev_pos_err = pos_error;
 3308              		.loc 1 1140 0
 3309 031e 894A     		ldr	r2, .L260+8
 3310 0320 BB68     		ldr	r3, [r7, #8]
 3311 0322 1360     		str	r3, [r2]
1141:..\src/interruptions.c **** 
1142:..\src/interruptions.c ****             if (pwm_input > 0)
 3312              		.loc 1 1142 0
 3313 0324 FB6C     		ldr	r3, [r7, #76]
 3314 0326 002B     		cmp	r3, #0
 3315 0328 03DD     		ble	.L225
1143:..\src/interruptions.c ****                 motor_dir = TRUE;
 3316              		.loc 1 1143 0
 3317 032a 874B     		ldr	r3, .L260+12
 3318 032c 0122     		movs	r2, #1
 3319 032e 1A70     		strb	r2, [r3]
1144:..\src/interruptions.c ****             else
1145:..\src/interruptions.c ****                 motor_dir = FALSE;
1146:..\src/interruptions.c **** 
1147:..\src/interruptions.c ****         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 81


 3320              		.loc 1 1147 0
 3321 0330 ADE0     		b	.L198
 3322              	.L225:
1145:..\src/interruptions.c **** 
 3323              		.loc 1 1145 0
 3324 0332 854B     		ldr	r3, .L260+12
 3325 0334 0022     		movs	r2, #0
 3326 0336 1A70     		strb	r2, [r3]
 3327              		.loc 1 1147 0
 3328 0338 A9E0     		b	.L198
 3329              	.L202:
1148:..\src/interruptions.c **** 
1149:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
1150:..\src/interruptions.c ****         case CONTROL_CURRENT:
1151:..\src/interruptions.c ****             if(g_ref[MOTOR_IDX].onoff && tension_valid) {
 3330              		.loc 1 1151 0
 3331 033a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3332 033e 834A     		ldr	r2, .L260+16
 3333 0340 1B01     		lsls	r3, r3, #4
 3334 0342 1344     		add	r3, r3, r2
 3335 0344 0C33     		adds	r3, r3, #12
 3336 0346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3337 0348 002B     		cmp	r3, #0
 3338 034a 00F09D80 		beq	.L256
 3339              		.loc 1 1151 0 is_stmt 0 discriminator 1
 3340 034e 804B     		ldr	r3, .L260+20
 3341 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3342 0352 002B     		cmp	r3, #0
 3343 0354 00F09880 		beq	.L256
1152:..\src/interruptions.c ****                 
1153:..\src/interruptions.c ****                 i_ref = g_ref[MOTOR_IDX].curr;
 3344              		.loc 1 1153 0 is_stmt 1
 3345 0358 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3346 035c 7B4A     		ldr	r2, .L260+16
 3347 035e 1B01     		lsls	r3, r3, #4
 3348 0360 1344     		add	r3, r3, r2
 3349 0362 0433     		adds	r3, r3, #4
 3350 0364 1B68     		ldr	r3, [r3]
 3351 0366 BB64     		str	r3, [r7, #72]
1154:..\src/interruptions.c **** 
1155:..\src/interruptions.c ****                 if (i_ref > SH_MOT->current_limit) 
 3352              		.loc 1 1155 0
 3353 0368 3B6C     		ldr	r3, [r7, #64]
 3354 036a B3F95C30 		ldrsh	r3, [r3, #92]
 3355 036e 1A46     		mov	r2, r3
 3356 0370 BB6C     		ldr	r3, [r7, #72]
 3357 0372 9A42     		cmp	r2, r3
 3358 0374 04DA     		bge	.L228
1156:..\src/interruptions.c ****                     i_ref = SH_MOT->current_limit;
 3359              		.loc 1 1156 0
 3360 0376 3B6C     		ldr	r3, [r7, #64]
 3361 0378 B3F95C30 		ldrsh	r3, [r3, #92]
 3362 037c BB64     		str	r3, [r7, #72]
 3363 037e 0BE0     		b	.L229
 3364              	.L228:
1157:..\src/interruptions.c ****                 else {
1158:..\src/interruptions.c ****                     if (i_ref < -SH_MOT->current_limit)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 82


 3365              		.loc 1 1158 0
 3366 0380 3B6C     		ldr	r3, [r7, #64]
 3367 0382 B3F95C30 		ldrsh	r3, [r3, #92]
 3368 0386 5A42     		negs	r2, r3
 3369 0388 BB6C     		ldr	r3, [r7, #72]
 3370 038a 9A42     		cmp	r2, r3
 3371 038c 04DD     		ble	.L229
1159:..\src/interruptions.c ****                         i_ref = -SH_MOT->current_limit;
 3372              		.loc 1 1159 0
 3373 038e 3B6C     		ldr	r3, [r7, #64]
 3374 0390 B3F95C30 		ldrsh	r3, [r3, #92]
 3375 0394 5B42     		negs	r3, r3
 3376 0396 BB64     		str	r3, [r7, #72]
 3377              	.L229:
1160:..\src/interruptions.c ****                 }
1161:..\src/interruptions.c ****                 
1162:..\src/interruptions.c ****                 // current error
1163:..\src/interruptions.c ****                 curr_error = i_ref - g_meas[SH_ENC_L].curr;            
 3378              		.loc 1 1163 0
 3379 0398 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3380 039c 6D4A     		ldr	r2, .L260+24
 3381 039e 3421     		movs	r1, #52
 3382 03a0 01FB03F3 		mul	r3, r1, r3
 3383 03a4 1344     		add	r3, r3, r2
 3384 03a6 0C33     		adds	r3, r3, #12
 3385 03a8 1B68     		ldr	r3, [r3]
 3386 03aa BA6C     		ldr	r2, [r7, #72]
 3387 03ac D31A     		subs	r3, r2, r3
 3388 03ae 7B60     		str	r3, [r7, #4]
1164:..\src/interruptions.c ****                 curr_error_sum += curr_error;
 3389              		.loc 1 1164 0
 3390 03b0 694B     		ldr	r3, .L260+28
 3391 03b2 1A68     		ldr	r2, [r3]
 3392 03b4 7B68     		ldr	r3, [r7, #4]
 3393 03b6 1344     		add	r3, r3, r2
 3394 03b8 674A     		ldr	r2, .L260+28
 3395 03ba 1360     		str	r3, [r2]
1165:..\src/interruptions.c ****                 
1166:..\src/interruptions.c ****                 if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 3396              		.loc 1 1166 0
 3397 03bc 664B     		ldr	r3, .L260+28
 3398 03be 1B68     		ldr	r3, [r3]
 3399 03c0 664A     		ldr	r2, .L260+32
 3400 03c2 9342     		cmp	r3, r2
 3401 03c4 03DD     		ble	.L230
1167:..\src/interruptions.c ****                     curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 3402              		.loc 1 1167 0
 3403 03c6 644B     		ldr	r3, .L260+28
 3404 03c8 644A     		ldr	r2, .L260+32
 3405 03ca 1A60     		str	r2, [r3]
 3406 03cc 07E0     		b	.L231
 3407              	.L230:
1168:..\src/interruptions.c ****                 else {
1169:..\src/interruptions.c ****                     if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT) 
 3408              		.loc 1 1169 0
 3409 03ce 624B     		ldr	r3, .L260+28
 3410 03d0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 83


 3411 03d2 634A     		ldr	r2, .L260+36
 3412 03d4 9342     		cmp	r3, r2
 3413 03d6 02DA     		bge	.L231
1170:..\src/interruptions.c ****                         curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 3414              		.loc 1 1170 0
 3415 03d8 5F4B     		ldr	r3, .L260+28
 3416 03da 614A     		ldr	r2, .L260+36
 3417 03dc 1A60     		str	r2, [r3]
 3418              	.L231:
1171:..\src/interruptions.c ****                 }
1172:..\src/interruptions.c **** 
1173:..\src/interruptions.c ****                 pwm_input = 0;
 3419              		.loc 1 1173 0
 3420 03de 0023     		movs	r3, #0
 3421 03e0 FB64     		str	r3, [r7, #76]
1174:..\src/interruptions.c **** 
1175:..\src/interruptions.c ****                 // Proportional
1176:..\src/interruptions.c ****                 if (k_p_c != 0)
 3422              		.loc 1 1176 0
 3423 03e2 FB6A     		ldr	r3, [r7, #44]
 3424 03e4 002B     		cmp	r3, #0
 3425 03e6 07D0     		beq	.L232
1177:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 3426              		.loc 1 1177 0
 3427 03e8 FB6A     		ldr	r3, [r7, #44]
 3428 03ea 7A68     		ldr	r2, [r7, #4]
 3429 03ec 02FB03F3 		mul	r3, r2, r3
 3430 03f0 1B14     		asrs	r3, r3, #16
 3431 03f2 FA6C     		ldr	r2, [r7, #76]
 3432 03f4 1344     		add	r3, r3, r2
 3433 03f6 FB64     		str	r3, [r7, #76]
 3434              	.L232:
1178:..\src/interruptions.c **** 
1179:..\src/interruptions.c ****                 // Integral
1180:..\src/interruptions.c ****                 if (k_i_c != 0)
 3435              		.loc 1 1180 0
 3436 03f8 BB6A     		ldr	r3, [r7, #40]
 3437 03fa 002B     		cmp	r3, #0
 3438 03fc 08D0     		beq	.L233
1181:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum) >> 16;
 3439              		.loc 1 1181 0
 3440 03fe 564B     		ldr	r3, .L260+28
 3441 0400 1B68     		ldr	r3, [r3]
 3442 0402 BA6A     		ldr	r2, [r7, #40]
 3443 0404 02FB03F3 		mul	r3, r2, r3
 3444 0408 1B14     		asrs	r3, r3, #16
 3445 040a FA6C     		ldr	r2, [r7, #76]
 3446 040c 1344     		add	r3, r3, r2
 3447 040e FB64     		str	r3, [r7, #76]
 3448              	.L233:
1182:..\src/interruptions.c **** 
1183:..\src/interruptions.c ****                 // Derivative
1184:..\src/interruptions.c ****                 if (k_d_c != 0)
 3449              		.loc 1 1184 0
 3450 0410 7B6A     		ldr	r3, [r7, #36]
 3451 0412 002B     		cmp	r3, #0
 3452 0414 0AD0     		beq	.L234
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 84


1185:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err)) >> 16;
 3453              		.loc 1 1185 0
 3454 0416 534B     		ldr	r3, .L260+40
 3455 0418 1B68     		ldr	r3, [r3]
 3456 041a 7A68     		ldr	r2, [r7, #4]
 3457 041c D31A     		subs	r3, r2, r3
 3458 041e 7A6A     		ldr	r2, [r7, #36]
 3459 0420 02FB03F3 		mul	r3, r2, r3
 3460 0424 1B14     		asrs	r3, r3, #16
 3461 0426 FA6C     		ldr	r2, [r7, #76]
 3462 0428 1344     		add	r3, r3, r2
 3463 042a FB64     		str	r3, [r7, #76]
 3464              	.L234:
1186:..\src/interruptions.c ****                 
1187:..\src/interruptions.c ****                 prev_curr_err = curr_error;
 3465              		.loc 1 1187 0
 3466 042c 4D4A     		ldr	r2, .L260+40
 3467 042e 7B68     		ldr	r3, [r7, #4]
 3468 0430 1360     		str	r3, [r2]
1188:..\src/interruptions.c ****                 
1189:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 3469              		.loc 1 1189 0
 3470 0432 FB6C     		ldr	r3, [r7, #76]
 3471 0434 002B     		cmp	r3, #0
 3472 0436 03DB     		blt	.L235
1190:..\src/interruptions.c ****                     motor_dir = TRUE;
 3473              		.loc 1 1190 0
 3474 0438 434B     		ldr	r3, .L260+12
 3475 043a 0122     		movs	r2, #1
 3476 043c 1A70     		strb	r2, [r3]
1191:..\src/interruptions.c ****                 else
1192:..\src/interruptions.c ****                     motor_dir = FALSE;
1193:..\src/interruptions.c ****             }
1194:..\src/interruptions.c ****         break;
 3477              		.loc 1 1194 0
 3478 043e 23E0     		b	.L256
 3479              	.L235:
1192:..\src/interruptions.c ****             }
 3480              		.loc 1 1192 0
 3481 0440 414B     		ldr	r3, .L260+12
 3482 0442 0022     		movs	r2, #0
 3483 0444 1A70     		strb	r2, [r3]
 3484              		.loc 1 1194 0
 3485 0446 1FE0     		b	.L256
 3486              	.L201:
1195:..\src/interruptions.c ****         
1196:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
1197:..\src/interruptions.c ****         case CONTROL_PWM:
1198:..\src/interruptions.c **** 
1199:..\src/interruptions.c ****             pwm_input = g_ref[MOTOR_IDX].pwm;
 3487              		.loc 1 1199 0
 3488 0448 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3489 044c 3F4A     		ldr	r2, .L260+16
 3490 044e 1B01     		lsls	r3, r3, #4
 3491 0450 1344     		add	r3, r3, r2
 3492 0452 0833     		adds	r3, r3, #8
 3493 0454 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 85


 3494 0456 FB64     		str	r3, [r7, #76]
1200:..\src/interruptions.c **** 
1201:..\src/interruptions.c ****             if (pwm_input > 0) 
 3495              		.loc 1 1201 0
 3496 0458 FB6C     		ldr	r3, [r7, #76]
 3497 045a 002B     		cmp	r3, #0
 3498 045c 03DD     		ble	.L236
1202:..\src/interruptions.c ****                 motor_dir = TRUE;
 3499              		.loc 1 1202 0
 3500 045e 3A4B     		ldr	r3, .L260+12
 3501 0460 0122     		movs	r2, #1
 3502 0462 1A70     		strb	r2, [r3]
 3503 0464 02E0     		b	.L237
 3504              	.L236:
1203:..\src/interruptions.c ****             else 
1204:..\src/interruptions.c ****                 motor_dir = FALSE;
 3505              		.loc 1 1204 0
 3506 0466 384B     		ldr	r3, .L260+12
 3507 0468 0022     		movs	r2, #0
 3508 046a 1A70     		strb	r2, [r3]
 3509              	.L237:
1205:..\src/interruptions.c ****             
1206:..\src/interruptions.c **** 
1207:..\src/interruptions.c ****             // pwm_input saturation
1208:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 3510              		.loc 1 1208 0
 3511 046c FB6C     		ldr	r3, [r7, #76]
 3512 046e 13F1640F 		cmn	r3, #100
 3513 0472 03DA     		bge	.L238
1209:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 3514              		.loc 1 1209 0
 3515 0474 6FF06303 		mvn	r3, #99
 3516 0478 FB64     		str	r3, [r7, #76]
1210:..\src/interruptions.c ****             else {
1211:..\src/interruptions.c **** 				if (pwm_input > PWM_MAX_VALUE) 
1212:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
1213:..\src/interruptions.c ****         	}
1214:..\src/interruptions.c **** 
1215:..\src/interruptions.c ****         break;
 3517              		.loc 1 1215 0
 3518 047a 07E0     		b	.L257
 3519              	.L238:
1211:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
 3520              		.loc 1 1211 0
 3521 047c FB6C     		ldr	r3, [r7, #76]
 3522 047e 642B     		cmp	r3, #100
 3523 0480 04DD     		ble	.L257
1212:..\src/interruptions.c ****         	}
 3524              		.loc 1 1212 0
 3525 0482 6423     		movs	r3, #100
 3526 0484 FB64     		str	r3, [r7, #76]
 3527              		.loc 1 1215 0
 3528 0486 01E0     		b	.L257
 3529              	.L256:
1194:..\src/interruptions.c ****         
 3530              		.loc 1 1194 0
 3531 0488 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 86


 3532 048a 00E0     		b	.L198
 3533              	.L257:
 3534              		.loc 1 1215 0
 3535 048c 00BF     		nop
 3536              	.L198:
1216:..\src/interruptions.c ****             
1217:..\src/interruptions.c ****     }
1218:..\src/interruptions.c **** 
1219:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
1220:..\src/interruptions.c **** 
1221:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 3537              		.loc 1 1221 0
 3538 048e FB6C     		ldr	r3, [r7, #76]
 3539 0490 642B     		cmp	r3, #100
 3540 0492 01DD     		ble	.L240
1222:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 3541              		.loc 1 1222 0
 3542 0494 6423     		movs	r3, #100
 3543 0496 FB64     		str	r3, [r7, #76]
 3544              	.L240:
1223:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 3545              		.loc 1 1223 0
 3546 0498 FB6C     		ldr	r3, [r7, #76]
 3547 049a 13F1640F 		cmn	r3, #100
 3548 049e 02DA     		bge	.L241
1224:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 3549              		.loc 1 1224 0
 3550 04a0 6FF06303 		mvn	r3, #99
 3551 04a4 FB64     		str	r3, [r7, #76]
 3552              	.L241:
1225:..\src/interruptions.c **** 
1226:..\src/interruptions.c ****     if (SH_MOT->control_mode != CONTROL_PWM) 
 3553              		.loc 1 1226 0
 3554 04a6 3B6C     		ldr	r3, [r7, #64]
 3555 04a8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3556 04ac 012B     		cmp	r3, #1
 3557 04ae 0DD0     		beq	.L242
1227:..\src/interruptions.c ****         pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE) * dev_pwm_limit[0]) >> 10;
 3558              		.loc 1 1227 0
 3559 04b0 FB6C     		ldr	r3, [r7, #76]
 3560 04b2 9B02     		lsls	r3, r3, #10
 3561 04b4 2C4A     		ldr	r2, .L260+44
 3562 04b6 82FB0312 		smull	r1, r2, r2, r3
 3563 04ba 5211     		asrs	r2, r2, #5
 3564 04bc DB17     		asrs	r3, r3, #31
 3565 04be D31A     		subs	r3, r2, r3
 3566 04c0 2A4A     		ldr	r2, .L260+48
 3567 04c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3568 04c4 02FB03F3 		mul	r3, r2, r3
 3569 04c8 9B12     		asrs	r3, r3, #10
 3570 04ca FB64     		str	r3, [r7, #76]
 3571              	.L242:
1228:..\src/interruptions.c ****  
1229:..\src/interruptions.c ****     //// RATE LIMITER ////
1230:..\src/interruptions.c ****     if((pwm_input-prev_pwm) > SH_MOT->pwm_rate_limiter){
 3572              		.loc 1 1230 0
 3573 04cc 284B     		ldr	r3, .L260+52
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 87


 3574 04ce 1B68     		ldr	r3, [r3]
 3575 04d0 FA6C     		ldr	r2, [r7, #76]
 3576 04d2 D31A     		subs	r3, r2, r3
 3577 04d4 3A6C     		ldr	r2, [r7, #64]
 3578 04d6 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 3579 04da 9342     		cmp	r3, r2
 3580 04dc 08DD     		ble	.L243
1231:..\src/interruptions.c ****         pwm_input =  prev_pwm + SH_MOT->pwm_rate_limiter;
 3581              		.loc 1 1231 0
 3582 04de 3B6C     		ldr	r3, [r7, #64]
 3583 04e0 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 3584 04e4 1A46     		mov	r2, r3
 3585 04e6 224B     		ldr	r3, .L260+52
 3586 04e8 1B68     		ldr	r3, [r3]
 3587 04ea 1344     		add	r3, r3, r2
 3588 04ec FB64     		str	r3, [r7, #76]
 3589 04ee 10E0     		b	.L244
 3590              	.L243:
1232:..\src/interruptions.c ****     }
1233:..\src/interruptions.c ****     else {
1234:..\src/interruptions.c ****         if((pwm_input-prev_pwm) < -SH_MOT->pwm_rate_limiter)
 3591              		.loc 1 1234 0
 3592 04f0 1F4B     		ldr	r3, .L260+52
 3593 04f2 1B68     		ldr	r3, [r3]
 3594 04f4 FA6C     		ldr	r2, [r7, #76]
 3595 04f6 D21A     		subs	r2, r2, r3
 3596 04f8 3B6C     		ldr	r3, [r7, #64]
 3597 04fa 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 3598 04fe 5B42     		negs	r3, r3
 3599 0500 9A42     		cmp	r2, r3
 3600 0502 06DA     		bge	.L244
1235:..\src/interruptions.c ****             pwm_input =  prev_pwm - SH_MOT->pwm_rate_limiter;
 3601              		.loc 1 1235 0
 3602 0504 1A4B     		ldr	r3, .L260+52
 3603 0506 1B68     		ldr	r3, [r3]
 3604 0508 3A6C     		ldr	r2, [r7, #64]
 3605 050a 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 3606 050e 9B1A     		subs	r3, r3, r2
 3607 0510 FB64     		str	r3, [r7, #76]
 3608              	.L244:
1236:..\src/interruptions.c ****     }
1237:..\src/interruptions.c ****     
1238:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 3609              		.loc 1 1238 0
 3610 0512 FB6C     		ldr	r3, [r7, #76]
 3611 0514 642B     		cmp	r3, #100
 3612 0516 01DD     		ble	.L245
1239:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 3613              		.loc 1 1239 0
 3614 0518 6423     		movs	r3, #100
 3615 051a FB64     		str	r3, [r7, #76]
 3616              	.L245:
1240:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 3617              		.loc 1 1240 0
 3618 051c FB6C     		ldr	r3, [r7, #76]
 3619 051e 13F1640F 		cmn	r3, #100
 3620 0522 02DA     		bge	.L246
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 88


1241:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 3621              		.loc 1 1241 0
 3622 0524 6FF06303 		mvn	r3, #99
 3623 0528 FB64     		str	r3, [r7, #76]
 3624              	.L246:
1242:..\src/interruptions.c ****     
1243:..\src/interruptions.c ****     prev_pwm = pwm_input;
 3625              		.loc 1 1243 0
 3626 052a 114A     		ldr	r2, .L260+52
 3627 052c FB6C     		ldr	r3, [r7, #76]
 3628 052e 1360     		str	r3, [r2]
1244:..\src/interruptions.c **** 	
1245:..\src/interruptions.c ****     pwm_sign = SIGN(pwm_input);   
 3629              		.loc 1 1245 0
 3630 0530 FB6C     		ldr	r3, [r7, #76]
 3631 0532 002B     		cmp	r3, #0
 3632 0534 1EDB     		blt	.L247
 3633              		.loc 1 1245 0 is_stmt 0 discriminator 1
 3634 0536 0122     		movs	r2, #1
 3635 0538 1EE0     		b	.L248
 3636              	.L261:
 3637 053a 00BF     		.align	2
 3638              	.L260:
 3639 053c 90000000 		.word	pos_error_sum.10542
 3640 0540 18FCFFFF 		.word	-1000
 3641 0544 94000000 		.word	prev_pos_err.10544
 3642 0548 98000000 		.word	motor_dir.10547
 3643 054c 00000000 		.word	g_ref
 3644 0550 00000000 		.word	tension_valid
 3645 0554 00000000 		.word	g_meas
 3646 0558 9C000000 		.word	curr_error_sum.10543
 3647 055c A0860100 		.word	100000
 3648 0560 6079FEFF 		.word	-100000
 3649 0564 A0000000 		.word	prev_curr_err.10545
 3650 0568 1F85EB51 		.word	1374389535
 3651 056c 00000000 		.word	dev_pwm_limit
 3652 0570 A4000000 		.word	prev_pwm.10546
 3653              	.L247:
 3654              		.loc 1 1245 0 discriminator 2
 3655 0574 4FF0FF32 		mov	r2, #-1
 3656              	.L248:
 3657              		.loc 1 1245 0 discriminator 4
 3658 0578 5A4B     		ldr	r3, .L262
 3659 057a 1A70     		strb	r2, [r3]
1246:..\src/interruptions.c ****     
1247:..\src/interruptions.c ****     if (SH_MOT->not_revers_motor_flag == TRUE) {
 3660              		.loc 1 1247 0 is_stmt 1 discriminator 4
 3661 057c 3B6C     		ldr	r3, [r7, #64]
 3662 057e 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 3663 0582 012B     		cmp	r3, #1
 3664 0584 40F09680 		bne	.L249
1248:..\src/interruptions.c ****         // Block motor with pwm = 0 to exploit not reversible motor behaviour 
1249:..\src/interruptions.c ****     	if ( SH_MOT->control_mode != CONTROL_PWM && ((g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[
 3665              		.loc 1 1249 0
 3666 0588 3B6C     		ldr	r3, [r7, #64]
 3667 058a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3668 058e 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 89


 3669 0590 00F08D80 		beq	.L250
 3670              		.loc 1 1249 0 is_stmt 0 discriminator 1
 3671 0594 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3672 0598 534A     		ldr	r2, .L262+4
 3673 059a 3421     		movs	r1, #52
 3674 059c 01FB03F3 		mul	r3, r1, r3
 3675 05a0 1344     		add	r3, r3, r2
 3676 05a2 1A68     		ldr	r2, [r3]
 3677 05a4 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3678 05a8 5049     		ldr	r1, .L262+8
 3679 05aa 3420     		movs	r0, #52
 3680 05ac 00FB03F3 		mul	r3, r0, r3
 3681 05b0 0B44     		add	r3, r3, r1
 3682 05b2 1B68     		ldr	r3, [r3]
 3683 05b4 D31A     		subs	r3, r2, r3
 3684 05b6 312B     		cmp	r3, #49
 3685 05b8 79DC     		bgt	.L250
1250:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 3686              		.loc 1 1250 0 is_stmt 1 discriminator 2
 3687 05ba 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3688 05be 4A4A     		ldr	r2, .L262+4
 3689 05c0 3421     		movs	r1, #52
 3690 05c2 01FB03F3 		mul	r3, r1, r3
 3691 05c6 1344     		add	r3, r3, r2
 3692 05c8 1A68     		ldr	r2, [r3]
 3693 05ca 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3694 05ce 4749     		ldr	r1, .L262+8
 3695 05d0 3420     		movs	r0, #52
 3696 05d2 00FB03F3 		mul	r3, r0, r3
 3697 05d6 0B44     		add	r3, r3, r1
 3698 05d8 1B68     		ldr	r3, [r3]
 3699 05da D31A     		subs	r3, r2, r3
1249:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 3700              		.loc 1 1249 0 discriminator 2
 3701 05dc 13F1310F 		cmn	r3, #49
 3702 05e0 65DB     		blt	.L250
1251:..\src/interruptions.c ****             ((g_refOld[MOTOR_IDX].pos - g_ref[MOTOR_IDX].pos) < 100 && (g_refOld[MOTOR_IDX].pos - g
 3703              		.loc 1 1251 0
 3704 05e2 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3705 05e6 424A     		ldr	r2, .L262+12
 3706 05e8 1B01     		lsls	r3, r3, #4
 3707 05ea 1344     		add	r3, r3, r2
 3708 05ec 1A68     		ldr	r2, [r3]
 3709 05ee 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3710 05f2 4049     		ldr	r1, .L262+16
 3711 05f4 1B01     		lsls	r3, r3, #4
 3712 05f6 0B44     		add	r3, r3, r1
 3713 05f8 1B68     		ldr	r3, [r3]
 3714 05fa D31A     		subs	r3, r2, r3
1250:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 3715              		.loc 1 1250 0
 3716 05fc 632B     		cmp	r3, #99
 3717 05fe 56DC     		bgt	.L250
 3718              		.loc 1 1251 0
 3719 0600 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3720 0604 3A4A     		ldr	r2, .L262+12
 3721 0606 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 90


 3722 0608 1344     		add	r3, r3, r2
 3723 060a 1A68     		ldr	r2, [r3]
 3724 060c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3725 0610 3849     		ldr	r1, .L262+16
 3726 0612 1B01     		lsls	r3, r3, #4
 3727 0614 0B44     		add	r3, r3, r1
 3728 0616 1B68     		ldr	r3, [r3]
 3729 0618 D31A     		subs	r3, r2, r3
 3730 061a 13F1630F 		cmn	r3, #99
 3731 061e 46DB     		blt	.L250
1252:..\src/interruptions.c ****             position_counter++;
 3732              		.loc 1 1252 0
 3733 0620 354B     		ldr	r3, .L262+20
 3734 0622 1B68     		ldr	r3, [r3]
 3735 0624 0133     		adds	r3, r3, #1
 3736 0626 344A     		ldr	r2, .L262+20
 3737 0628 1360     		str	r3, [r2]
1253:..\src/interruptions.c ****             
1254:..\src/interruptions.c ****             if (position_counter >= 250) { 
 3738              		.loc 1 1254 0
 3739 062a 334B     		ldr	r3, .L262+20
 3740 062c 1B68     		ldr	r3, [r3]
 3741 062e F92B     		cmp	r3, #249
 3742 0630 40D9     		bls	.L249
1255:..\src/interruptions.c ****                 if (SH_MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 3743              		.loc 1 1255 0
 3744 0632 3B6C     		ldr	r3, [r7, #64]
 3745 0634 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 3746 0638 002B     		cmp	r3, #0
 3747 063a 11D1     		bne	.L252
 3748              		.loc 1 1255 0 is_stmt 0 discriminator 1
 3749 063c 2F4B     		ldr	r3, .L262+24
 3750 063e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3751 0640 002B     		cmp	r3, #0
 3752 0642 0DD1     		bne	.L252
1256:..\src/interruptions.c ****                     g_refNew[MOTOR_IDX].pos = g_meas[SH_ENC_L].pos[0];       // Needed only when US
 3753              		.loc 1 1256 0 is_stmt 1
 3754 0644 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3755 0648 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 3756 064c 2749     		ldr	r1, .L262+8
 3757 064e 3420     		movs	r0, #52
 3758 0650 00FB02F2 		mul	r2, r0, r2
 3759 0654 0A44     		add	r2, r2, r1
 3760 0656 1268     		ldr	r2, [r2]
 3761 0658 2949     		ldr	r1, .L262+28
 3762 065a 1B01     		lsls	r3, r3, #4
 3763 065c 0B44     		add	r3, r3, r1
 3764 065e 1A60     		str	r2, [r3]
 3765              	.L252:
1257:..\src/interruptions.c ****                 }
1258:..\src/interruptions.c ****                 g_ref[MOTOR_IDX].pos = g_meas[SH_ENC_L].pos[0];
 3766              		.loc 1 1258 0
 3767 0660 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3768 0664 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 3769 0668 2049     		ldr	r1, .L262+8
 3770 066a 3420     		movs	r0, #52
 3771 066c 00FB02F2 		mul	r2, r0, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 91


 3772 0670 0A44     		add	r2, r2, r1
 3773 0672 1268     		ldr	r2, [r2]
 3774 0674 1F49     		ldr	r1, .L262+16
 3775 0676 1B01     		lsls	r3, r3, #4
 3776 0678 0B44     		add	r3, r3, r1
 3777 067a 1A60     		str	r2, [r3]
1259:..\src/interruptions.c ****                 
1260:..\src/interruptions.c ****                 if (position_counter == 250){
 3778              		.loc 1 1260 0
 3779 067c 1E4B     		ldr	r3, .L262+20
 3780 067e 1B68     		ldr	r3, [r3]
 3781 0680 FA2B     		cmp	r3, #250
 3782 0682 11D1     		bne	.L253
1261:..\src/interruptions.c ****                     // To do only once
1262:..\src/interruptions.c ****                     g_meas[SH_ENC_L].hold_curr = g_meas[SH_ENC_L].curr;
 3783              		.loc 1 1262 0
 3784 0684 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3785 0688 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 3786 068c 1749     		ldr	r1, .L262+8
 3787 068e 3420     		movs	r0, #52
 3788 0690 00FB02F2 		mul	r2, r0, r2
 3789 0694 0A44     		add	r2, r2, r1
 3790 0696 0C32     		adds	r2, r2, #12
 3791 0698 1268     		ldr	r2, [r2]
 3792 069a 1449     		ldr	r1, .L262+8
 3793 069c 3420     		movs	r0, #52
 3794 069e 00FB03F3 		mul	r3, r0, r3
 3795 06a2 0B44     		add	r3, r3, r1
 3796 06a4 1433     		adds	r3, r3, #20
 3797 06a6 1A60     		str	r2, [r3]
 3798              	.L253:
1263:..\src/interruptions.c ****                 }
1264:..\src/interruptions.c ****                 pwm_input = 0;            
 3799              		.loc 1 1264 0
 3800 06a8 0023     		movs	r3, #0
 3801 06aa FB64     		str	r3, [r7, #76]
1254:..\src/interruptions.c ****                 if (SH_MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 3802              		.loc 1 1254 0
 3803 06ac 02E0     		b	.L249
 3804              	.L250:
1265:..\src/interruptions.c ****             }
1266:..\src/interruptions.c ****         }
1267:..\src/interruptions.c ****         else {
1268:..\src/interruptions.c ****             position_counter = 0;
 3805              		.loc 1 1268 0
 3806 06ae 124B     		ldr	r3, .L262+20
 3807 06b0 0022     		movs	r2, #0
 3808 06b2 1A60     		str	r2, [r3]
 3809              	.L249:
1269:..\src/interruptions.c ****         }
1270:..\src/interruptions.c ****     }
1271:..\src/interruptions.c ****     
1272:..\src/interruptions.c ****     if (motor_dir)
 3810              		.loc 1 1272 0
 3811 06b4 134B     		ldr	r3, .L262+32
 3812 06b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3813 06b8 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 92


 3814 06ba 03D0     		beq	.L254
1273:..\src/interruptions.c ****         MOTOR_DIR_1_Write(0x01);
 3815              		.loc 1 1273 0
 3816 06bc 0120     		movs	r0, #1
 3817 06be FFF7FEFF 		bl	MOTOR_DIR_1_Write
 3818 06c2 02E0     		b	.L255
 3819              	.L254:
1274:..\src/interruptions.c ****     else
1275:..\src/interruptions.c ****         MOTOR_DIR_1_Write(0x00);
 3820              		.loc 1 1275 0
 3821 06c4 0020     		movs	r0, #0
 3822 06c6 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 3823              	.L255:
1276:..\src/interruptions.c **** 
1277:..\src/interruptions.c ****     PWM_MOTORS_WriteCompare1(abs(pwm_input));
 3824              		.loc 1 1277 0
 3825 06ca FB6C     		ldr	r3, [r7, #76]
 3826 06cc 002B     		cmp	r3, #0
 3827 06ce B8BF     		it	lt
 3828 06d0 5B42     		rsblt	r3, r3, #0
 3829 06d2 DBB2     		uxtb	r3, r3
 3830 06d4 1846     		mov	r0, r3
 3831 06d6 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1278:..\src/interruptions.c **** }
 3832              		.loc 1 1278 0
 3833 06da 00BF     		nop
 3834 06dc 5037     		adds	r7, r7, #80
 3835              		.cfi_def_cfa_offset 8
 3836 06de BD46     		mov	sp, r7
 3837              		.cfi_def_cfa_register 13
 3838              		@ sp needed
 3839 06e0 80BD     		pop	{r7, pc}
 3840              	.L263:
 3841 06e2 00BF     		.align	2
 3842              	.L262:
 3843 06e4 00000000 		.word	pwm_sign
 3844 06e8 00000000 		.word	g_measOld
 3845 06ec 00000000 		.word	g_meas
 3846 06f0 00000000 		.word	g_refOld
 3847 06f4 00000000 		.word	g_ref
 3848 06f8 A8000000 		.word	position_counter.10548
 3849 06fc 00000000 		.word	change_ext_ref_flag
 3850 0700 00000000 		.word	g_refNew
 3851 0704 98000000 		.word	motor_dir.10547
 3852              		.cfi_endproc
 3853              	.LFE71:
 3854              		.size	motor_control_SH, .-motor_control_SH
 3855              		.section	.text.motor_control_generic,"ax",%progbits
 3856              		.align	2
 3857              		.global	motor_control_generic
 3858              		.thumb
 3859              		.thumb_func
 3860              		.type	motor_control_generic, %function
 3861              	motor_control_generic:
 3862              	.LFB72:
1279:..\src/interruptions.c **** 
1280:..\src/interruptions.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 93


1281:..\src/interruptions.c **** //                                                         MOTOR CONTROL GENERIC
1282:..\src/interruptions.c **** //==============================================================================
1283:..\src/interruptions.c **** void motor_control_generic(uint8 idx) {
 3863              		.loc 1 1283 0
 3864              		.cfi_startproc
 3865              		@ args = 0, pretend = 0, frame = 80
 3866              		@ frame_needed = 1, uses_anonymous_args = 0
 3867 0000 90B5     		push	{r4, r7, lr}
 3868              		.cfi_def_cfa_offset 12
 3869              		.cfi_offset 4, -12
 3870              		.cfi_offset 7, -8
 3871              		.cfi_offset 14, -4
 3872 0002 95B0     		sub	sp, sp, #84
 3873              		.cfi_def_cfa_offset 96
 3874 0004 00AF     		add	r7, sp, #0
 3875              		.cfi_def_cfa_register 7
 3876 0006 0346     		mov	r3, r0
 3877 0008 FB71     		strb	r3, [r7, #7]
1284:..\src/interruptions.c ****     
1285:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 3878              		.loc 1 1285 0
 3879 000a 0023     		movs	r3, #0
 3880 000c FB64     		str	r3, [r7, #76]
1286:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
1287:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
1288:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
1289:..\src/interruptions.c **** 
1290:..\src/interruptions.c ****     struct st_motor* MOT = &c_mem.motor[idx]; // Motor struct
 3881              		.loc 1 1290 0
 3882 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3883 0010 1346     		mov	r3, r2
 3884 0012 DB00     		lsls	r3, r3, #3
 3885 0014 9B1A     		subs	r3, r3, r2
 3886 0016 1B01     		lsls	r3, r3, #4
 3887 0018 B033     		adds	r3, r3, #176
 3888 001a 9C4A     		ldr	r2, .L336
 3889 001c 1344     		add	r3, r3, r2
 3890 001e 7B64     		str	r3, [r7, #68]
1291:..\src/interruptions.c ****     uint8 ENC_L = MOT->encoder_line;          // Associated encoder line
 3891              		.loc 1 1291 0
 3892 0020 7B6C     		ldr	r3, [r7, #68]
 3893 0022 93F86030 		ldrb	r3, [r3, #96]
 3894 0026 87F84330 		strb	r3, [r7, #67]
1292:..\src/interruptions.c ****     
1293:..\src/interruptions.c ****     int32 CYDATA k_p = MOT->k_p;  
 3895              		.loc 1 1293 0
 3896 002a 7B6C     		ldr	r3, [r7, #68]
 3897 002c 1B68     		ldr	r3, [r3]
 3898 002e FB63     		str	r3, [r7, #60]
1294:..\src/interruptions.c ****     int32 CYDATA k_i = MOT->k_i; 
 3899              		.loc 1 1294 0
 3900 0030 7B6C     		ldr	r3, [r7, #68]
 3901 0032 5B68     		ldr	r3, [r3, #4]
 3902 0034 BB63     		str	r3, [r7, #56]
1295:..\src/interruptions.c ****     int32 CYDATA k_d = MOT->k_d; 
 3903              		.loc 1 1295 0
 3904 0036 7B6C     		ldr	r3, [r7, #68]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 94


 3905 0038 9B68     		ldr	r3, [r3, #8]
 3906 003a 7B63     		str	r3, [r7, #52]
1296:..\src/interruptions.c **** 
1297:..\src/interruptions.c ****     int32 CYDATA k_p_c = MOT->k_p_c;  
 3907              		.loc 1 1297 0
 3908 003c 7B6C     		ldr	r3, [r7, #68]
 3909 003e DB68     		ldr	r3, [r3, #12]
 3910 0040 3B63     		str	r3, [r7, #48]
1298:..\src/interruptions.c ****     int32 CYDATA k_i_c = MOT->k_i_c; 
 3911              		.loc 1 1298 0
 3912 0042 7B6C     		ldr	r3, [r7, #68]
 3913 0044 1B69     		ldr	r3, [r3, #16]
 3914 0046 FB62     		str	r3, [r7, #44]
1299:..\src/interruptions.c ****     int32 CYDATA k_d_c = MOT->k_d_c;   
 3915              		.loc 1 1299 0
 3916 0048 7B6C     		ldr	r3, [r7, #68]
 3917 004a 5B69     		ldr	r3, [r3, #20]
 3918 004c BB62     		str	r3, [r7, #40]
1300:..\src/interruptions.c **** 
1301:..\src/interruptions.c ****     int32 CYDATA k_p_dl = MOT->k_p_dl;  
 3919              		.loc 1 1301 0
 3920 004e 7B6C     		ldr	r3, [r7, #68]
 3921 0050 9B69     		ldr	r3, [r3, #24]
 3922 0052 7B62     		str	r3, [r7, #36]
1302:..\src/interruptions.c ****     int32 CYDATA k_i_dl = MOT->k_i_dl; 
 3923              		.loc 1 1302 0
 3924 0054 7B6C     		ldr	r3, [r7, #68]
 3925 0056 DB69     		ldr	r3, [r3, #28]
 3926 0058 3B62     		str	r3, [r7, #32]
1303:..\src/interruptions.c ****     int32 CYDATA k_d_dl = MOT->k_d_dl;
 3927              		.loc 1 1303 0
 3928 005a 7B6C     		ldr	r3, [r7, #68]
 3929 005c 1B6A     		ldr	r3, [r3, #32]
 3930 005e FB61     		str	r3, [r7, #28]
1304:..\src/interruptions.c ****     
1305:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = MOT->k_p_c_dl;  
 3931              		.loc 1 1305 0
 3932 0060 7B6C     		ldr	r3, [r7, #68]
 3933 0062 5B6A     		ldr	r3, [r3, #36]
 3934 0064 BB61     		str	r3, [r7, #24]
1306:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = MOT->k_i_c_dl; 
 3935              		.loc 1 1306 0
 3936 0066 7B6C     		ldr	r3, [r7, #68]
 3937 0068 9B6A     		ldr	r3, [r3, #40]
 3938 006a 7B61     		str	r3, [r7, #20]
1307:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = MOT->k_d_c_dl;   
 3939              		.loc 1 1307 0
 3940 006c 7B6C     		ldr	r3, [r7, #68]
 3941 006e DB6A     		ldr	r3, [r3, #44]
 3942 0070 3B61     		str	r3, [r7, #16]
1308:..\src/interruptions.c **** 
1309:..\src/interruptions.c ****     // Static Variables
1310:..\src/interruptions.c **** 
1311:..\src/interruptions.c ****     static int32 pos_error_sum[NUM_OF_MOTORS];     // position error sum for integral
1312:..\src/interruptions.c ****     static int32 curr_error_sum[NUM_OF_MOTORS];    // current error sum for integral
1313:..\src/interruptions.c ****     
1314:..\src/interruptions.c ****     static int32 prev_pos_err[NUM_OF_MOTORS];      // previous position error for deriv. control
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 95


1315:..\src/interruptions.c ****     static int32 prev_curr_err[NUM_OF_MOTORS];     // previous current error for deriv. control
1316:..\src/interruptions.c ****     static int32 prev_pwm[NUM_OF_MOTORS];
1317:..\src/interruptions.c **** 
1318:..\src/interruptions.c ****     static CYBIT motor_dir[NUM_OF_MOTORS] = {FALSE, FALSE};
1319:..\src/interruptions.c ****     static uint32 position_counter[NUM_OF_MOTORS] = {0, 0};
1320:..\src/interruptions.c **** 
1321:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
1322:..\src/interruptions.c ****     compute_reference(idx, &g_ref[idx], &g_refOld[idx]);
 3943              		.loc 1 1322 0
 3944 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3945 0074 1B01     		lsls	r3, r3, #4
 3946 0076 864A     		ldr	r2, .L336+4
 3947 0078 9918     		adds	r1, r3, r2
 3948 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3949 007c 1B01     		lsls	r3, r3, #4
 3950 007e 854A     		ldr	r2, .L336+8
 3951 0080 1A44     		add	r2, r2, r3
 3952 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3953 0084 1846     		mov	r0, r3
 3954 0086 FFF7FEFF 		bl	compute_reference
1323:..\src/interruptions.c ****     
1324:..\src/interruptions.c ****    
1325:..\src/interruptions.c ****     switch(MOT->control_mode) {
 3955              		.loc 1 1325 0
 3956 008a 7B6C     		ldr	r3, [r7, #68]
 3957 008c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3958 0090 032B     		cmp	r3, #3
 3959 0092 00F25482 		bhi	.L265
 3960 0096 01A2     		adr	r2, .L267
 3961 0098 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3962              		.p2align 2
 3963              	.L267:
 3964 009c C1020000 		.word	.L266+1
 3965 00a0 CB040000 		.word	.L268+1
 3966 00a4 99030000 		.word	.L269+1
 3967 00a8 AD000000 		.word	.L270+1
 3968              		.p2align 1
 3969              	.L270:
1326:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
1327:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
1328:..\src/interruptions.c ****             pos_error = g_ref[0].pos - g_meas[ENC_L].pos[0];
 3970              		.loc 1 1328 0
 3971 00ac 784B     		ldr	r3, .L336+4
 3972 00ae 1A68     		ldr	r2, [r3]
 3973 00b0 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 3974 00b4 7849     		ldr	r1, .L336+12
 3975 00b6 3420     		movs	r0, #52
 3976 00b8 00FB03F3 		mul	r3, r0, r3
 3977 00bc 0B44     		add	r3, r3, r1
 3978 00be 1B68     		ldr	r3, [r3]
 3979 00c0 D31A     		subs	r3, r2, r3
 3980 00c2 FB60     		str	r3, [r7, #12]
1329:..\src/interruptions.c **** 
1330:..\src/interruptions.c ****             pos_error_sum[idx] += pos_error;
 3981              		.loc 1 1330 0
 3982 00c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3983 00c6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 96


 3984 00c8 7449     		ldr	r1, .L336+16
 3985 00ca 51F82210 		ldr	r1, [r1, r2, lsl #2]
 3986 00ce FA68     		ldr	r2, [r7, #12]
 3987 00d0 0A44     		add	r2, r2, r1
 3988 00d2 7249     		ldr	r1, .L336+16
 3989 00d4 41F82320 		str	r2, [r1, r3, lsl #2]
1331:..\src/interruptions.c **** 
1332:..\src/interruptions.c ****             // error_sum saturation
1333:..\src/interruptions.c ****             if (pos_error_sum[idx] > POS_INTEGRAL_SAT_LIMIT)
 3990              		.loc 1 1333 0
 3991 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3992 00da 704A     		ldr	r2, .L336+16
 3993 00dc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3994 00e0 6F4A     		ldr	r2, .L336+20
 3995 00e2 9342     		cmp	r3, r2
 3996 00e4 05DD     		ble	.L271
1334:..\src/interruptions.c ****                 pos_error_sum[idx] = POS_INTEGRAL_SAT_LIMIT;
 3997              		.loc 1 1334 0
 3998 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3999 00e8 6C4A     		ldr	r2, .L336+16
 4000 00ea 6D49     		ldr	r1, .L336+20
 4001 00ec 42F82310 		str	r1, [r2, r3, lsl #2]
 4002 00f0 0BE0     		b	.L272
 4003              	.L271:
1335:..\src/interruptions.c ****             else {
1336:..\src/interruptions.c ****                 if (pos_error_sum[idx] < -POS_INTEGRAL_SAT_LIMIT) 
 4004              		.loc 1 1336 0
 4005 00f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4006 00f4 694A     		ldr	r2, .L336+16
 4007 00f6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4008 00fa 6A4A     		ldr	r2, .L336+24
 4009 00fc 9342     		cmp	r3, r2
 4010 00fe 04DA     		bge	.L272
1337:..\src/interruptions.c ****                     pos_error_sum[idx] = -POS_INTEGRAL_SAT_LIMIT;
 4011              		.loc 1 1337 0
 4012 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4013 0102 664A     		ldr	r2, .L336+16
 4014 0104 6749     		ldr	r1, .L336+24
 4015 0106 42F82310 		str	r1, [r2, r3, lsl #2]
 4016              	.L272:
1338:..\src/interruptions.c ****             }
1339:..\src/interruptions.c ****             
1340:..\src/interruptions.c ****             // ------ position PID control ------
1341:..\src/interruptions.c **** 
1342:..\src/interruptions.c ****             i_ref = 0;
 4017              		.loc 1 1342 0
 4018 010a 0023     		movs	r3, #0
 4019 010c BB64     		str	r3, [r7, #72]
1343:..\src/interruptions.c ****             
1344:..\src/interruptions.c ****             // Proportional
1345:..\src/interruptions.c ****             if (k_p_dl != 0)
 4020              		.loc 1 1345 0
 4021 010e 7B6A     		ldr	r3, [r7, #36]
 4022 0110 002B     		cmp	r3, #0
 4023 0112 07D0     		beq	.L273
1346:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 4024              		.loc 1 1346 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 97


 4025 0114 7B6A     		ldr	r3, [r7, #36]
 4026 0116 FA68     		ldr	r2, [r7, #12]
 4027 0118 02FB03F3 		mul	r3, r2, r3
 4028 011c 1B14     		asrs	r3, r3, #16
 4029 011e BA6C     		ldr	r2, [r7, #72]
 4030 0120 1344     		add	r3, r3, r2
 4031 0122 BB64     		str	r3, [r7, #72]
 4032              	.L273:
1347:..\src/interruptions.c **** 
1348:..\src/interruptions.c ****             // Integral
1349:..\src/interruptions.c ****             if (k_i_dl != 0)
 4033              		.loc 1 1349 0
 4034 0124 3B6A     		ldr	r3, [r7, #32]
 4035 0126 002B     		cmp	r3, #0
 4036 0128 0AD0     		beq	.L274
1350:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum[idx]) >> 16;
 4037              		.loc 1 1350 0
 4038 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4039 012c 5B4A     		ldr	r2, .L336+16
 4040 012e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4041 0132 3A6A     		ldr	r2, [r7, #32]
 4042 0134 02FB03F3 		mul	r3, r2, r3
 4043 0138 1B14     		asrs	r3, r3, #16
 4044 013a BA6C     		ldr	r2, [r7, #72]
 4045 013c 1344     		add	r3, r3, r2
 4046 013e BB64     		str	r3, [r7, #72]
 4047              	.L274:
1351:..\src/interruptions.c **** 
1352:..\src/interruptions.c ****             // Derivative
1353:..\src/interruptions.c ****             if (k_d_dl != 0)
 4048              		.loc 1 1353 0
 4049 0140 FB69     		ldr	r3, [r7, #28]
 4050 0142 002B     		cmp	r3, #0
 4051 0144 0CD0     		beq	.L275
1354:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err[idx])) >> 16;
 4052              		.loc 1 1354 0
 4053 0146 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4054 0148 574A     		ldr	r2, .L336+28
 4055 014a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4056 014e FA68     		ldr	r2, [r7, #12]
 4057 0150 D31A     		subs	r3, r2, r3
 4058 0152 FA69     		ldr	r2, [r7, #28]
 4059 0154 02FB03F3 		mul	r3, r2, r3
 4060 0158 1B14     		asrs	r3, r3, #16
 4061 015a BA6C     		ldr	r2, [r7, #72]
 4062 015c 1344     		add	r3, r3, r2
 4063 015e BB64     		str	r3, [r7, #72]
 4064              	.L275:
1355:..\src/interruptions.c ****                         
1356:..\src/interruptions.c ****             // Update previous position
1357:..\src/interruptions.c ****             prev_pos_err[idx] = pos_error;
 4065              		.loc 1 1357 0
 4066 0160 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4067 0162 5149     		ldr	r1, .L336+28
 4068 0164 FA68     		ldr	r2, [r7, #12]
 4069 0166 41F82320 		str	r2, [r1, r3, lsl #2]
1358:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 98


1359:..\src/interruptions.c ****             // motor direction depends on i_ref
1360:..\src/interruptions.c ****             if (i_ref >= 0)
 4070              		.loc 1 1360 0
 4071 016a BB6C     		ldr	r3, [r7, #72]
 4072 016c 002B     		cmp	r3, #0
 4073 016e 04DB     		blt	.L276
1361:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 4074              		.loc 1 1361 0
 4075 0170 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4076 0172 4E4A     		ldr	r2, .L336+32
 4077 0174 0121     		movs	r1, #1
 4078 0176 D154     		strb	r1, [r2, r3]
 4079 0178 03E0     		b	.L277
 4080              	.L276:
1362:..\src/interruptions.c ****             else
1363:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
 4081              		.loc 1 1363 0
 4082 017a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4083 017c 4B4A     		ldr	r2, .L336+32
 4084 017e 0021     		movs	r1, #0
 4085 0180 D154     		strb	r1, [r2, r3]
 4086              	.L277:
1364:..\src/interruptions.c **** 
1365:..\src/interruptions.c ****             // saturate max current
1366:..\src/interruptions.c ****             if (i_ref > MOT->current_limit)
 4087              		.loc 1 1366 0
 4088 0182 7B6C     		ldr	r3, [r7, #68]
 4089 0184 B3F95C30 		ldrsh	r3, [r3, #92]
 4090 0188 1A46     		mov	r2, r3
 4091 018a BB6C     		ldr	r3, [r7, #72]
 4092 018c 9A42     		cmp	r2, r3
 4093 018e 04DA     		bge	.L278
1367:..\src/interruptions.c ****                 i_ref = MOT->current_limit;
 4094              		.loc 1 1367 0
 4095 0190 7B6C     		ldr	r3, [r7, #68]
 4096 0192 B3F95C30 		ldrsh	r3, [r3, #92]
 4097 0196 BB64     		str	r3, [r7, #72]
 4098 0198 0BE0     		b	.L279
 4099              	.L278:
1368:..\src/interruptions.c ****             else {
1369:..\src/interruptions.c ****                 if (i_ref < -MOT->current_limit)
 4100              		.loc 1 1369 0
 4101 019a 7B6C     		ldr	r3, [r7, #68]
 4102 019c B3F95C30 		ldrsh	r3, [r3, #92]
 4103 01a0 5A42     		negs	r2, r3
 4104 01a2 BB6C     		ldr	r3, [r7, #72]
 4105 01a4 9A42     		cmp	r2, r3
 4106 01a6 04DD     		ble	.L279
1370:..\src/interruptions.c ****                     i_ref = -MOT->current_limit;
 4107              		.loc 1 1370 0
 4108 01a8 7B6C     		ldr	r3, [r7, #68]
 4109 01aa B3F95C30 		ldrsh	r3, [r3, #92]
 4110 01ae 5B42     		negs	r3, r3
 4111 01b0 BB64     		str	r3, [r7, #72]
 4112              	.L279:
1371:..\src/interruptions.c ****         	}
1372:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 99


1373:..\src/interruptions.c ****             // current error and curr error sum
1374:..\src/interruptions.c ****             curr_error = i_ref - g_meas[ENC_L].curr;
 4113              		.loc 1 1374 0
 4114 01b2 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4115 01b6 384A     		ldr	r2, .L336+12
 4116 01b8 3421     		movs	r1, #52
 4117 01ba 01FB03F3 		mul	r3, r1, r3
 4118 01be 1344     		add	r3, r3, r2
 4119 01c0 0C33     		adds	r3, r3, #12
 4120 01c2 1B68     		ldr	r3, [r3]
 4121 01c4 BA6C     		ldr	r2, [r7, #72]
 4122 01c6 D31A     		subs	r3, r2, r3
 4123 01c8 BB60     		str	r3, [r7, #8]
1375:..\src/interruptions.c ****             curr_error_sum[idx] += curr_error;
 4124              		.loc 1 1375 0
 4125 01ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4126 01cc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4127 01ce 3849     		ldr	r1, .L336+36
 4128 01d0 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4129 01d4 BA68     		ldr	r2, [r7, #8]
 4130 01d6 0A44     		add	r2, r2, r1
 4131 01d8 3549     		ldr	r1, .L336+36
 4132 01da 41F82320 		str	r2, [r1, r3, lsl #2]
1376:..\src/interruptions.c ****             
1377:..\src/interruptions.c ****             if (curr_error_sum[idx] > CURR_INTEGRAL_SAT_LIMIT)
 4133              		.loc 1 1377 0
 4134 01de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4135 01e0 334A     		ldr	r2, .L336+36
 4136 01e2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4137 01e6 334A     		ldr	r2, .L336+40
 4138 01e8 9342     		cmp	r3, r2
 4139 01ea 05DD     		ble	.L280
1378:..\src/interruptions.c ****                 curr_error_sum[idx] = CURR_INTEGRAL_SAT_LIMIT;
 4140              		.loc 1 1378 0
 4141 01ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4142 01ee 304A     		ldr	r2, .L336+36
 4143 01f0 3049     		ldr	r1, .L336+40
 4144 01f2 42F82310 		str	r1, [r2, r3, lsl #2]
 4145 01f6 0BE0     		b	.L281
 4146              	.L280:
1379:..\src/interruptions.c ****             else {
1380:..\src/interruptions.c ****                 if (curr_error_sum[idx] < -CURR_INTEGRAL_SAT_LIMIT)
 4147              		.loc 1 1380 0
 4148 01f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4149 01fa 2D4A     		ldr	r2, .L336+36
 4150 01fc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4151 0200 2D4A     		ldr	r2, .L336+44
 4152 0202 9342     		cmp	r3, r2
 4153 0204 04DA     		bge	.L281
1381:..\src/interruptions.c ****                     curr_error_sum[idx] = -CURR_INTEGRAL_SAT_LIMIT;
 4154              		.loc 1 1381 0
 4155 0206 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4156 0208 294A     		ldr	r2, .L336+36
 4157 020a 2B49     		ldr	r1, .L336+44
 4158 020c 42F82310 		str	r1, [r2, r3, lsl #2]
 4159              	.L281:
1382:..\src/interruptions.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 100


1383:..\src/interruptions.c **** 
1384:..\src/interruptions.c ****             // ----- current PID control -----
1385:..\src/interruptions.c **** 
1386:..\src/interruptions.c ****             pwm_input = 0;
 4160              		.loc 1 1386 0
 4161 0210 0023     		movs	r3, #0
 4162 0212 FB64     		str	r3, [r7, #76]
1387:..\src/interruptions.c **** 
1388:..\src/interruptions.c ****             // Proportional
1389:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 4163              		.loc 1 1389 0
 4164 0214 BB69     		ldr	r3, [r7, #24]
 4165 0216 002B     		cmp	r3, #0
 4166 0218 07D0     		beq	.L282
1390:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 4167              		.loc 1 1390 0
 4168 021a BB69     		ldr	r3, [r7, #24]
 4169 021c BA68     		ldr	r2, [r7, #8]
 4170 021e 02FB03F3 		mul	r3, r2, r3
 4171 0222 1B14     		asrs	r3, r3, #16
 4172 0224 FA6C     		ldr	r2, [r7, #76]
 4173 0226 1344     		add	r3, r3, r2
 4174 0228 FB64     		str	r3, [r7, #76]
 4175              	.L282:
1391:..\src/interruptions.c **** 
1392:..\src/interruptions.c ****             // Integral
1393:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 4176              		.loc 1 1393 0
 4177 022a 7B69     		ldr	r3, [r7, #20]
 4178 022c 002B     		cmp	r3, #0
 4179 022e 0AD0     		beq	.L283
1394:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum[idx]) >> 16;
 4180              		.loc 1 1394 0
 4181 0230 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4182 0232 1F4A     		ldr	r2, .L336+36
 4183 0234 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4184 0238 7A69     		ldr	r2, [r7, #20]
 4185 023a 02FB03F3 		mul	r3, r2, r3
 4186 023e 1B14     		asrs	r3, r3, #16
 4187 0240 FA6C     		ldr	r2, [r7, #76]
 4188 0242 1344     		add	r3, r3, r2
 4189 0244 FB64     		str	r3, [r7, #76]
 4190              	.L283:
1395:..\src/interruptions.c **** 
1396:..\src/interruptions.c ****             // Derivative
1397:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 4191              		.loc 1 1397 0
 4192 0246 3B69     		ldr	r3, [r7, #16]
 4193 0248 002B     		cmp	r3, #0
 4194 024a 0CD0     		beq	.L284
1398:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err[idx])) >> 16;
 4195              		.loc 1 1398 0
 4196 024c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4197 024e 1B4A     		ldr	r2, .L336+48
 4198 0250 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4199 0254 BA68     		ldr	r2, [r7, #8]
 4200 0256 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 101


 4201 0258 3A69     		ldr	r2, [r7, #16]
 4202 025a 02FB03F3 		mul	r3, r2, r3
 4203 025e 1B14     		asrs	r3, r3, #16
 4204 0260 FA6C     		ldr	r2, [r7, #76]
 4205 0262 1344     		add	r3, r3, r2
 4206 0264 FB64     		str	r3, [r7, #76]
 4207              	.L284:
1399:..\src/interruptions.c **** 
1400:..\src/interruptions.c ****             // pwm_input saturation
1401:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 4208              		.loc 1 1401 0
 4209 0266 FB6C     		ldr	r3, [r7, #76]
 4210 0268 13F1640F 		cmn	r3, #100
 4211 026c 03DA     		bge	.L285
1402:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 4212              		.loc 1 1402 0
 4213 026e 6FF06303 		mvn	r3, #99
 4214 0272 FB64     		str	r3, [r7, #76]
 4215 0274 04E0     		b	.L286
 4216              	.L285:
1403:..\src/interruptions.c ****             else {
1404:..\src/interruptions.c ****                 if (pwm_input > PWM_MAX_VALUE)
 4217              		.loc 1 1404 0
 4218 0276 FB6C     		ldr	r3, [r7, #76]
 4219 0278 642B     		cmp	r3, #100
 4220 027a 01DD     		ble	.L286
1405:..\src/interruptions.c ****                     pwm_input = PWM_MAX_VALUE;
 4221              		.loc 1 1405 0
 4222 027c 6423     		movs	r3, #100
 4223 027e FB64     		str	r3, [r7, #76]
 4224              	.L286:
1406:..\src/interruptions.c ****             }
1407:..\src/interruptions.c **** 
1408:..\src/interruptions.c ****             // Update previous current
1409:..\src/interruptions.c ****             prev_curr_err[idx] = curr_error;
 4225              		.loc 1 1409 0
 4226 0280 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4227 0282 0E49     		ldr	r1, .L336+48
 4228 0284 BA68     		ldr	r2, [r7, #8]
 4229 0286 41F82320 		str	r2, [r1, r3, lsl #2]
1410:..\src/interruptions.c **** 
1411:..\src/interruptions.c ****         break;
 4230              		.loc 1 1411 0
 4231 028a 58E1     		b	.L265
 4232              	.L337:
 4233              		.align	2
 4234              	.L336:
 4235 028c 00000000 		.word	c_mem
 4236 0290 00000000 		.word	g_ref
 4237 0294 00000000 		.word	g_refOld
 4238 0298 00000000 		.word	g_meas
 4239 029c AC000000 		.word	pos_error_sum.10575
 4240 02a0 80F0FA02 		.word	50000000
 4241 02a4 800F05FD 		.word	-50000000
 4242 02a8 B4000000 		.word	prev_pos_err.10577
 4243 02ac BC000000 		.word	motor_dir.10580
 4244 02b0 C0000000 		.word	curr_error_sum.10576
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 102


 4245 02b4 A0860100 		.word	100000
 4246 02b8 6079FEFF 		.word	-100000
 4247 02bc C8000000 		.word	prev_curr_err.10578
 4248              	.L266:
1412:..\src/interruptions.c **** 
1413:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
1414:..\src/interruptions.c ****         case CONTROL_ANGLE:
1415:..\src/interruptions.c ****             pos_error = g_ref[idx].pos - g_meas[ENC_L].pos[0];
 4249              		.loc 1 1415 0
 4250 02c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4251 02c2 934A     		ldr	r2, .L338
 4252 02c4 1B01     		lsls	r3, r3, #4
 4253 02c6 1344     		add	r3, r3, r2
 4254 02c8 1A68     		ldr	r2, [r3]
 4255 02ca 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4256 02ce 9149     		ldr	r1, .L338+4
 4257 02d0 3420     		movs	r0, #52
 4258 02d2 00FB03F3 		mul	r3, r0, r3
 4259 02d6 0B44     		add	r3, r3, r1
 4260 02d8 1B68     		ldr	r3, [r3]
 4261 02da D31A     		subs	r3, r2, r3
 4262 02dc FB60     		str	r3, [r7, #12]
1416:..\src/interruptions.c **** 
1417:..\src/interruptions.c ****             pos_error_sum[idx] += pos_error;
 4263              		.loc 1 1417 0
 4264 02de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4265 02e0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4266 02e2 8D49     		ldr	r1, .L338+8
 4267 02e4 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4268 02e8 FA68     		ldr	r2, [r7, #12]
 4269 02ea 0A44     		add	r2, r2, r1
 4270 02ec 8A49     		ldr	r1, .L338+8
 4271 02ee 41F82320 		str	r2, [r1, r3, lsl #2]
1418:..\src/interruptions.c **** 
1419:..\src/interruptions.c ****             // anti-windup (for integral control)
1420:..\src/interruptions.c ****             if (pos_error_sum[idx] > ANTI_WINDUP)
 4272              		.loc 1 1420 0
 4273 02f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4274 02f4 884A     		ldr	r2, .L338+8
 4275 02f6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4276 02fa B3F57A7F 		cmp	r3, #1000
 4277 02fe 06DD     		ble	.L287
1421:..\src/interruptions.c ****                 pos_error_sum[idx] = ANTI_WINDUP;
 4278              		.loc 1 1421 0
 4279 0300 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4280 0302 854A     		ldr	r2, .L338+8
 4281 0304 4FF47A71 		mov	r1, #1000
 4282 0308 42F82310 		str	r1, [r2, r3, lsl #2]
 4283 030c 0BE0     		b	.L288
 4284              	.L287:
1422:..\src/interruptions.c ****             else {
1423:..\src/interruptions.c **** 				if (pos_error_sum[idx] < -ANTI_WINDUP)
 4285              		.loc 1 1423 0
 4286 030e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4287 0310 814A     		ldr	r2, .L338+8
 4288 0312 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4289 0316 13F57A7F 		cmn	r3, #1000
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 103


 4290 031a 04DA     		bge	.L288
1424:..\src/interruptions.c ****                 	pos_error_sum[idx] = -ANTI_WINDUP;
 4291              		.loc 1 1424 0
 4292 031c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4293 031e 7E4A     		ldr	r2, .L338+8
 4294 0320 7E49     		ldr	r1, .L338+12
 4295 0322 42F82310 		str	r1, [r2, r3, lsl #2]
 4296              	.L288:
1425:..\src/interruptions.c ****             }
1426:..\src/interruptions.c **** 
1427:..\src/interruptions.c ****             // Proportional
1428:..\src/interruptions.c ****             if (k_p != 0) 
 4297              		.loc 1 1428 0
 4298 0326 FB6B     		ldr	r3, [r7, #60]
 4299 0328 002B     		cmp	r3, #0
 4300 032a 05D0     		beq	.L289
1429:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 4301              		.loc 1 1429 0
 4302 032c FB6B     		ldr	r3, [r7, #60]
 4303 032e FA68     		ldr	r2, [r7, #12]
 4304 0330 02FB03F3 		mul	r3, r2, r3
 4305 0334 1B14     		asrs	r3, r3, #16
 4306 0336 FB64     		str	r3, [r7, #76]
 4307              	.L289:
1430:..\src/interruptions.c ****             
1431:..\src/interruptions.c **** 
1432:..\src/interruptions.c ****             // Integral
1433:..\src/interruptions.c ****             if (k_i != 0) 
 4308              		.loc 1 1433 0
 4309 0338 BB6B     		ldr	r3, [r7, #56]
 4310 033a 002B     		cmp	r3, #0
 4311 033c 0AD0     		beq	.L290
1434:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum[idx]) >> 16;
 4312              		.loc 1 1434 0
 4313 033e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4314 0340 754A     		ldr	r2, .L338+8
 4315 0342 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4316 0346 BA6B     		ldr	r2, [r7, #56]
 4317 0348 02FB03F3 		mul	r3, r2, r3
 4318 034c 1B14     		asrs	r3, r3, #16
 4319 034e FA6C     		ldr	r2, [r7, #76]
 4320 0350 1344     		add	r3, r3, r2
 4321 0352 FB64     		str	r3, [r7, #76]
 4322              	.L290:
1435:..\src/interruptions.c ****             
1436:..\src/interruptions.c **** 
1437:..\src/interruptions.c ****             // Derivative
1438:..\src/interruptions.c ****             if (k_d != 0) 
 4323              		.loc 1 1438 0
 4324 0354 7B6B     		ldr	r3, [r7, #52]
 4325 0356 002B     		cmp	r3, #0
 4326 0358 0CD0     		beq	.L291
1439:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err[idx])) >> 16;
 4327              		.loc 1 1439 0
 4328 035a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4329 035c 704A     		ldr	r2, .L338+16
 4330 035e 52F82330 		ldr	r3, [r2, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 104


 4331 0362 FA68     		ldr	r2, [r7, #12]
 4332 0364 D31A     		subs	r3, r2, r3
 4333 0366 7A6B     		ldr	r2, [r7, #52]
 4334 0368 02FB03F3 		mul	r3, r2, r3
 4335 036c 1B14     		asrs	r3, r3, #16
 4336 036e FA6C     		ldr	r2, [r7, #76]
 4337 0370 1344     		add	r3, r3, r2
 4338 0372 FB64     		str	r3, [r7, #76]
 4339              	.L291:
1440:..\src/interruptions.c ****             
1441:..\src/interruptions.c **** 
1442:..\src/interruptions.c ****             // Update measure
1443:..\src/interruptions.c ****             prev_pos_err[idx] = pos_error;
 4340              		.loc 1 1443 0
 4341 0374 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4342 0376 6A49     		ldr	r1, .L338+16
 4343 0378 FA68     		ldr	r2, [r7, #12]
 4344 037a 41F82320 		str	r2, [r1, r3, lsl #2]
1444:..\src/interruptions.c **** 
1445:..\src/interruptions.c ****             if (pwm_input > 0)
 4345              		.loc 1 1445 0
 4346 037e FB6C     		ldr	r3, [r7, #76]
 4347 0380 002B     		cmp	r3, #0
 4348 0382 04DD     		ble	.L292
1446:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 4349              		.loc 1 1446 0
 4350 0384 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4351 0386 674A     		ldr	r2, .L338+20
 4352 0388 0121     		movs	r1, #1
 4353 038a D154     		strb	r1, [r2, r3]
1447:..\src/interruptions.c ****             else
1448:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
1449:..\src/interruptions.c **** 
1450:..\src/interruptions.c ****         break;
 4354              		.loc 1 1450 0
 4355 038c D7E0     		b	.L265
 4356              	.L292:
1448:..\src/interruptions.c **** 
 4357              		.loc 1 1448 0
 4358 038e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4359 0390 644A     		ldr	r2, .L338+20
 4360 0392 0021     		movs	r1, #0
 4361 0394 D154     		strb	r1, [r2, r3]
 4362              		.loc 1 1450 0
 4363 0396 D2E0     		b	.L265
 4364              	.L269:
1451:..\src/interruptions.c **** 
1452:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
1453:..\src/interruptions.c ****         case CONTROL_CURRENT:
1454:..\src/interruptions.c ****             if(g_ref[idx].onoff && tension_valid) {
 4365              		.loc 1 1454 0
 4366 0398 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4367 039a 5D4A     		ldr	r2, .L338
 4368 039c 1B01     		lsls	r3, r3, #4
 4369 039e 1344     		add	r3, r3, r2
 4370 03a0 0C33     		adds	r3, r3, #12
 4371 03a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 105


 4372 03a4 002B     		cmp	r3, #0
 4373 03a6 00F0B180 		beq	.L333
 4374              		.loc 1 1454 0 is_stmt 0 discriminator 1
 4375 03aa 5F4B     		ldr	r3, .L338+24
 4376 03ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4377 03ae 002B     		cmp	r3, #0
 4378 03b0 00F0AC80 		beq	.L333
1455:..\src/interruptions.c ****                 
1456:..\src/interruptions.c ****                 i_ref = g_ref[idx].curr;
 4379              		.loc 1 1456 0 is_stmt 1
 4380 03b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4381 03b6 564A     		ldr	r2, .L338
 4382 03b8 1B01     		lsls	r3, r3, #4
 4383 03ba 1344     		add	r3, r3, r2
 4384 03bc 0433     		adds	r3, r3, #4
 4385 03be 1B68     		ldr	r3, [r3]
 4386 03c0 BB64     		str	r3, [r7, #72]
1457:..\src/interruptions.c **** 
1458:..\src/interruptions.c ****                 if (i_ref > MOT->current_limit) 
 4387              		.loc 1 1458 0
 4388 03c2 7B6C     		ldr	r3, [r7, #68]
 4389 03c4 B3F95C30 		ldrsh	r3, [r3, #92]
 4390 03c8 1A46     		mov	r2, r3
 4391 03ca BB6C     		ldr	r3, [r7, #72]
 4392 03cc 9A42     		cmp	r2, r3
 4393 03ce 04DA     		bge	.L295
1459:..\src/interruptions.c ****                     i_ref = MOT->current_limit;
 4394              		.loc 1 1459 0
 4395 03d0 7B6C     		ldr	r3, [r7, #68]
 4396 03d2 B3F95C30 		ldrsh	r3, [r3, #92]
 4397 03d6 BB64     		str	r3, [r7, #72]
 4398 03d8 0BE0     		b	.L296
 4399              	.L295:
1460:..\src/interruptions.c ****                 else {
1461:..\src/interruptions.c ****                     if (i_ref < -MOT->current_limit)
 4400              		.loc 1 1461 0
 4401 03da 7B6C     		ldr	r3, [r7, #68]
 4402 03dc B3F95C30 		ldrsh	r3, [r3, #92]
 4403 03e0 5A42     		negs	r2, r3
 4404 03e2 BB6C     		ldr	r3, [r7, #72]
 4405 03e4 9A42     		cmp	r2, r3
 4406 03e6 04DD     		ble	.L296
1462:..\src/interruptions.c ****                         i_ref = -MOT->current_limit;
 4407              		.loc 1 1462 0
 4408 03e8 7B6C     		ldr	r3, [r7, #68]
 4409 03ea B3F95C30 		ldrsh	r3, [r3, #92]
 4410 03ee 5B42     		negs	r3, r3
 4411 03f0 BB64     		str	r3, [r7, #72]
 4412              	.L296:
1463:..\src/interruptions.c ****                 }
1464:..\src/interruptions.c ****                 
1465:..\src/interruptions.c ****                 // current error
1466:..\src/interruptions.c ****                 curr_error = i_ref - g_meas[ENC_L].curr;            
 4413              		.loc 1 1466 0
 4414 03f2 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4415 03f6 474A     		ldr	r2, .L338+4
 4416 03f8 3421     		movs	r1, #52
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 106


 4417 03fa 01FB03F3 		mul	r3, r1, r3
 4418 03fe 1344     		add	r3, r3, r2
 4419 0400 0C33     		adds	r3, r3, #12
 4420 0402 1B68     		ldr	r3, [r3]
 4421 0404 BA6C     		ldr	r2, [r7, #72]
 4422 0406 D31A     		subs	r3, r2, r3
 4423 0408 BB60     		str	r3, [r7, #8]
1467:..\src/interruptions.c ****                 curr_error_sum[idx] += curr_error;
 4424              		.loc 1 1467 0
 4425 040a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4426 040c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4427 040e 4749     		ldr	r1, .L338+28
 4428 0410 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4429 0414 BA68     		ldr	r2, [r7, #8]
 4430 0416 0A44     		add	r2, r2, r1
 4431 0418 4449     		ldr	r1, .L338+28
 4432 041a 41F82320 		str	r2, [r1, r3, lsl #2]
1468:..\src/interruptions.c ****                 
1469:..\src/interruptions.c ****                 if (curr_error_sum[idx] > CURR_INTEGRAL_SAT_LIMIT)
 4433              		.loc 1 1469 0
 4434 041e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4435 0420 424A     		ldr	r2, .L338+28
 4436 0422 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4437 0426 424A     		ldr	r2, .L338+32
 4438 0428 9342     		cmp	r3, r2
 4439 042a 05DD     		ble	.L297
1470:..\src/interruptions.c ****                     curr_error_sum[idx] = CURR_INTEGRAL_SAT_LIMIT;
 4440              		.loc 1 1470 0
 4441 042c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4442 042e 3F4A     		ldr	r2, .L338+28
 4443 0430 3F49     		ldr	r1, .L338+32
 4444 0432 42F82310 		str	r1, [r2, r3, lsl #2]
 4445 0436 0BE0     		b	.L298
 4446              	.L297:
1471:..\src/interruptions.c ****                 else {
1472:..\src/interruptions.c ****                     if (curr_error_sum[idx] < -CURR_INTEGRAL_SAT_LIMIT) 
 4447              		.loc 1 1472 0
 4448 0438 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4449 043a 3C4A     		ldr	r2, .L338+28
 4450 043c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4451 0440 3C4A     		ldr	r2, .L338+36
 4452 0442 9342     		cmp	r3, r2
 4453 0444 04DA     		bge	.L298
1473:..\src/interruptions.c ****                         curr_error_sum[idx] = -CURR_INTEGRAL_SAT_LIMIT;
 4454              		.loc 1 1473 0
 4455 0446 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4456 0448 384A     		ldr	r2, .L338+28
 4457 044a 3A49     		ldr	r1, .L338+36
 4458 044c 42F82310 		str	r1, [r2, r3, lsl #2]
 4459              	.L298:
1474:..\src/interruptions.c ****                 }
1475:..\src/interruptions.c **** 
1476:..\src/interruptions.c ****                 pwm_input = 0;
 4460              		.loc 1 1476 0
 4461 0450 0023     		movs	r3, #0
 4462 0452 FB64     		str	r3, [r7, #76]
1477:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 107


1478:..\src/interruptions.c ****                 // Proportional
1479:..\src/interruptions.c ****                 if (k_p_c != 0)
 4463              		.loc 1 1479 0
 4464 0454 3B6B     		ldr	r3, [r7, #48]
 4465 0456 002B     		cmp	r3, #0
 4466 0458 07D0     		beq	.L299
1480:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 4467              		.loc 1 1480 0
 4468 045a 3B6B     		ldr	r3, [r7, #48]
 4469 045c BA68     		ldr	r2, [r7, #8]
 4470 045e 02FB03F3 		mul	r3, r2, r3
 4471 0462 1B14     		asrs	r3, r3, #16
 4472 0464 FA6C     		ldr	r2, [r7, #76]
 4473 0466 1344     		add	r3, r3, r2
 4474 0468 FB64     		str	r3, [r7, #76]
 4475              	.L299:
1481:..\src/interruptions.c **** 
1482:..\src/interruptions.c ****                 // Integral
1483:..\src/interruptions.c ****                 if (k_i_c != 0)
 4476              		.loc 1 1483 0
 4477 046a FB6A     		ldr	r3, [r7, #44]
 4478 046c 002B     		cmp	r3, #0
 4479 046e 0AD0     		beq	.L300
1484:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum[idx]) >> 16;
 4480              		.loc 1 1484 0
 4481 0470 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4482 0472 2E4A     		ldr	r2, .L338+28
 4483 0474 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4484 0478 FA6A     		ldr	r2, [r7, #44]
 4485 047a 02FB03F3 		mul	r3, r2, r3
 4486 047e 1B14     		asrs	r3, r3, #16
 4487 0480 FA6C     		ldr	r2, [r7, #76]
 4488 0482 1344     		add	r3, r3, r2
 4489 0484 FB64     		str	r3, [r7, #76]
 4490              	.L300:
1485:..\src/interruptions.c **** 
1486:..\src/interruptions.c ****                 // Derivative
1487:..\src/interruptions.c ****                 if (k_d_c != 0)
 4491              		.loc 1 1487 0
 4492 0486 BB6A     		ldr	r3, [r7, #40]
 4493 0488 002B     		cmp	r3, #0
 4494 048a 0CD0     		beq	.L301
1488:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err[idx])) >> 16;
 4495              		.loc 1 1488 0
 4496 048c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4497 048e 2A4A     		ldr	r2, .L338+40
 4498 0490 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4499 0494 BA68     		ldr	r2, [r7, #8]
 4500 0496 D31A     		subs	r3, r2, r3
 4501 0498 BA6A     		ldr	r2, [r7, #40]
 4502 049a 02FB03F3 		mul	r3, r2, r3
 4503 049e 1B14     		asrs	r3, r3, #16
 4504 04a0 FA6C     		ldr	r2, [r7, #76]
 4505 04a2 1344     		add	r3, r3, r2
 4506 04a4 FB64     		str	r3, [r7, #76]
 4507              	.L301:
1489:..\src/interruptions.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 108


1490:..\src/interruptions.c ****                 prev_curr_err[idx] = curr_error;
 4508              		.loc 1 1490 0
 4509 04a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4510 04a8 2349     		ldr	r1, .L338+40
 4511 04aa BA68     		ldr	r2, [r7, #8]
 4512 04ac 41F82320 		str	r2, [r1, r3, lsl #2]
1491:..\src/interruptions.c ****                 
1492:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 4513              		.loc 1 1492 0
 4514 04b0 FB6C     		ldr	r3, [r7, #76]
 4515 04b2 002B     		cmp	r3, #0
 4516 04b4 04DB     		blt	.L302
1493:..\src/interruptions.c ****                     motor_dir[idx] = TRUE;
 4517              		.loc 1 1493 0
 4518 04b6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4519 04b8 1A4A     		ldr	r2, .L338+20
 4520 04ba 0121     		movs	r1, #1
 4521 04bc D154     		strb	r1, [r2, r3]
1494:..\src/interruptions.c ****                 else
1495:..\src/interruptions.c ****                     motor_dir[idx] = FALSE;
1496:..\src/interruptions.c ****             }
1497:..\src/interruptions.c ****         break;
 4522              		.loc 1 1497 0
 4523 04be 25E0     		b	.L333
 4524              	.L302:
1495:..\src/interruptions.c ****             }
 4525              		.loc 1 1495 0
 4526 04c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4527 04c2 184A     		ldr	r2, .L338+20
 4528 04c4 0021     		movs	r1, #0
 4529 04c6 D154     		strb	r1, [r2, r3]
 4530              		.loc 1 1497 0
 4531 04c8 20E0     		b	.L333
 4532              	.L268:
1498:..\src/interruptions.c ****         
1499:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
1500:..\src/interruptions.c ****         case CONTROL_PWM:
1501:..\src/interruptions.c **** 
1502:..\src/interruptions.c ****             pwm_input = g_ref[idx].pwm;
 4533              		.loc 1 1502 0
 4534 04ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4535 04cc 104A     		ldr	r2, .L338
 4536 04ce 1B01     		lsls	r3, r3, #4
 4537 04d0 1344     		add	r3, r3, r2
 4538 04d2 0833     		adds	r3, r3, #8
 4539 04d4 1B68     		ldr	r3, [r3]
 4540 04d6 FB64     		str	r3, [r7, #76]
1503:..\src/interruptions.c **** 
1504:..\src/interruptions.c ****             if (pwm_input > 0) 
 4541              		.loc 1 1504 0
 4542 04d8 FB6C     		ldr	r3, [r7, #76]
 4543 04da 002B     		cmp	r3, #0
 4544 04dc 04DD     		ble	.L303
1505:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 4545              		.loc 1 1505 0
 4546 04de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4547 04e0 104A     		ldr	r2, .L338+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 109


 4548 04e2 0121     		movs	r1, #1
 4549 04e4 D154     		strb	r1, [r2, r3]
 4550 04e6 03E0     		b	.L304
 4551              	.L303:
1506:..\src/interruptions.c ****             else 
1507:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
 4552              		.loc 1 1507 0
 4553 04e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4554 04ea 0E4A     		ldr	r2, .L338+20
 4555 04ec 0021     		movs	r1, #0
 4556 04ee D154     		strb	r1, [r2, r3]
 4557              	.L304:
1508:..\src/interruptions.c ****             
1509:..\src/interruptions.c **** 
1510:..\src/interruptions.c ****             // pwm_input saturation
1511:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 4558              		.loc 1 1511 0
 4559 04f0 FB6C     		ldr	r3, [r7, #76]
 4560 04f2 13F1640F 		cmn	r3, #100
 4561 04f6 03DA     		bge	.L305
1512:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 4562              		.loc 1 1512 0
 4563 04f8 6FF06303 		mvn	r3, #99
 4564 04fc FB64     		str	r3, [r7, #76]
1513:..\src/interruptions.c ****             else {
1514:..\src/interruptions.c **** 				if (pwm_input > PWM_MAX_VALUE) 
1515:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
1516:..\src/interruptions.c ****         	}
1517:..\src/interruptions.c **** 
1518:..\src/interruptions.c ****         break;
 4565              		.loc 1 1518 0
 4566 04fe 1DE0     		b	.L334
 4567              	.L305:
1514:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
 4568              		.loc 1 1514 0
 4569 0500 FB6C     		ldr	r3, [r7, #76]
 4570 0502 642B     		cmp	r3, #100
 4571 0504 1ADD     		ble	.L334
1515:..\src/interruptions.c ****         	}
 4572              		.loc 1 1515 0
 4573 0506 6423     		movs	r3, #100
 4574 0508 FB64     		str	r3, [r7, #76]
 4575              		.loc 1 1518 0
 4576 050a 17E0     		b	.L334
 4577              	.L333:
1497:..\src/interruptions.c ****         
 4578              		.loc 1 1497 0
 4579 050c 00BF     		nop
 4580 050e 16E0     		b	.L265
 4581              	.L339:
 4582              		.align	2
 4583              	.L338:
 4584 0510 00000000 		.word	g_ref
 4585 0514 00000000 		.word	g_meas
 4586 0518 AC000000 		.word	pos_error_sum.10575
 4587 051c 18FCFFFF 		.word	-1000
 4588 0520 B4000000 		.word	prev_pos_err.10577
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 110


 4589 0524 BC000000 		.word	motor_dir.10580
 4590 0528 00000000 		.word	tension_valid
 4591 052c C0000000 		.word	curr_error_sum.10576
 4592 0530 A0860100 		.word	100000
 4593 0534 6079FEFF 		.word	-100000
 4594 0538 C8000000 		.word	prev_curr_err.10578
 4595              	.L334:
 4596              		.loc 1 1518 0
 4597 053c 00BF     		nop
 4598              	.L265:
1519:..\src/interruptions.c ****             
1520:..\src/interruptions.c ****     }
1521:..\src/interruptions.c **** 
1522:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
1523:..\src/interruptions.c ****      ////////////////////////////////////////////////////////////////////////////
1524:..\src/interruptions.c **** 
1525:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 4599              		.loc 1 1525 0
 4600 053e FB6C     		ldr	r3, [r7, #76]
 4601 0540 642B     		cmp	r3, #100
 4602 0542 01DD     		ble	.L307
1526:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 4603              		.loc 1 1526 0
 4604 0544 6423     		movs	r3, #100
 4605 0546 FB64     		str	r3, [r7, #76]
 4606              	.L307:
1527:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 4607              		.loc 1 1527 0
 4608 0548 FB6C     		ldr	r3, [r7, #76]
 4609 054a 13F1640F 		cmn	r3, #100
 4610 054e 02DA     		bge	.L308
1528:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 4611              		.loc 1 1528 0
 4612 0550 6FF06303 		mvn	r3, #99
 4613 0554 FB64     		str	r3, [r7, #76]
 4614              	.L308:
1529:..\src/interruptions.c **** 
1530:..\src/interruptions.c ****     if (MOT->control_mode != CONTROL_PWM) 
 4615              		.loc 1 1530 0
 4616 0556 7B6C     		ldr	r3, [r7, #68]
 4617 0558 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 4618 055c 012B     		cmp	r3, #1
 4619 055e 0DD0     		beq	.L309
1531:..\src/interruptions.c ****         pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE) * dev_pwm_limit[0]) >> 10;
 4620              		.loc 1 1531 0
 4621 0560 FB6C     		ldr	r3, [r7, #76]
 4622 0562 9B02     		lsls	r3, r3, #10
 4623 0564 AA4A     		ldr	r2, .L340
 4624 0566 82FB0312 		smull	r1, r2, r2, r3
 4625 056a 5211     		asrs	r2, r2, #5
 4626 056c DB17     		asrs	r3, r3, #31
 4627 056e D31A     		subs	r3, r2, r3
 4628 0570 A84A     		ldr	r2, .L340+4
 4629 0572 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4630 0574 02FB03F3 		mul	r3, r2, r3
 4631 0578 9B12     		asrs	r3, r3, #10
 4632 057a FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 111


 4633              	.L309:
1532:..\src/interruptions.c ****  
1533:..\src/interruptions.c ****     //// RATE LIMITER ////
1534:..\src/interruptions.c ****     if((pwm_input-prev_pwm[idx]) > MOT->pwm_rate_limiter){
 4634              		.loc 1 1534 0
 4635 057c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4636 057e A64A     		ldr	r2, .L340+8
 4637 0580 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4638 0584 FA6C     		ldr	r2, [r7, #76]
 4639 0586 D31A     		subs	r3, r2, r3
 4640 0588 7A6C     		ldr	r2, [r7, #68]
 4641 058a 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 4642 058e 9342     		cmp	r3, r2
 4643 0590 09DD     		ble	.L310
1535:..\src/interruptions.c ****         pwm_input =  prev_pwm[idx] + MOT->pwm_rate_limiter;
 4644              		.loc 1 1535 0
 4645 0592 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4646 0594 A04A     		ldr	r2, .L340+8
 4647 0596 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4648 059a 7A6C     		ldr	r2, [r7, #68]
 4649 059c 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 4650 05a0 1344     		add	r3, r3, r2
 4651 05a2 FB64     		str	r3, [r7, #76]
 4652 05a4 14E0     		b	.L311
 4653              	.L310:
1536:..\src/interruptions.c ****     }
1537:..\src/interruptions.c ****     else {
1538:..\src/interruptions.c ****         if((pwm_input-prev_pwm[idx]) < -MOT->pwm_rate_limiter)
 4654              		.loc 1 1538 0
 4655 05a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4656 05a8 9B4A     		ldr	r2, .L340+8
 4657 05aa 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4658 05ae FA6C     		ldr	r2, [r7, #76]
 4659 05b0 D21A     		subs	r2, r2, r3
 4660 05b2 7B6C     		ldr	r3, [r7, #68]
 4661 05b4 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 4662 05b8 5B42     		negs	r3, r3
 4663 05ba 9A42     		cmp	r2, r3
 4664 05bc 08DA     		bge	.L311
1539:..\src/interruptions.c ****             pwm_input =  prev_pwm[idx] - MOT->pwm_rate_limiter;
 4665              		.loc 1 1539 0
 4666 05be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4667 05c0 954A     		ldr	r2, .L340+8
 4668 05c2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4669 05c6 7A6C     		ldr	r2, [r7, #68]
 4670 05c8 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 4671 05cc 9B1A     		subs	r3, r3, r2
 4672 05ce FB64     		str	r3, [r7, #76]
 4673              	.L311:
1540:..\src/interruptions.c ****     }
1541:..\src/interruptions.c ****     
1542:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 4674              		.loc 1 1542 0
 4675 05d0 FB6C     		ldr	r3, [r7, #76]
 4676 05d2 642B     		cmp	r3, #100
 4677 05d4 01DD     		ble	.L312
1543:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 112


 4678              		.loc 1 1543 0
 4679 05d6 6423     		movs	r3, #100
 4680 05d8 FB64     		str	r3, [r7, #76]
 4681              	.L312:
1544:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 4682              		.loc 1 1544 0
 4683 05da FB6C     		ldr	r3, [r7, #76]
 4684 05dc 13F1640F 		cmn	r3, #100
 4685 05e0 02DA     		bge	.L313
1545:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 4686              		.loc 1 1545 0
 4687 05e2 6FF06303 		mvn	r3, #99
 4688 05e6 FB64     		str	r3, [r7, #76]
 4689              	.L313:
1546:..\src/interruptions.c ****     
1547:..\src/interruptions.c ****     prev_pwm[idx] = pwm_input;
 4690              		.loc 1 1547 0
 4691 05e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4692 05ea 8B49     		ldr	r1, .L340+8
 4693 05ec FA6C     		ldr	r2, [r7, #76]
 4694 05ee 41F82320 		str	r2, [r1, r3, lsl #2]
1548:..\src/interruptions.c **** 	
1549:..\src/interruptions.c ****     pwm_sign = SIGN(pwm_input);   
 4695              		.loc 1 1549 0
 4696 05f2 FB6C     		ldr	r3, [r7, #76]
 4697 05f4 002B     		cmp	r3, #0
 4698 05f6 01DB     		blt	.L314
 4699              		.loc 1 1549 0 is_stmt 0 discriminator 1
 4700 05f8 0122     		movs	r2, #1
 4701 05fa 01E0     		b	.L315
 4702              	.L314:
 4703              		.loc 1 1549 0 discriminator 2
 4704 05fc 4FF0FF32 		mov	r2, #-1
 4705              	.L315:
 4706              		.loc 1 1549 0 discriminator 4
 4707 0600 864B     		ldr	r3, .L340+12
 4708 0602 1A70     		strb	r2, [r3]
1550:..\src/interruptions.c ****     
1551:..\src/interruptions.c ****     if (MOT->not_revers_motor_flag == TRUE) {
 4709              		.loc 1 1551 0 is_stmt 1 discriminator 4
 4710 0604 7B6C     		ldr	r3, [r7, #68]
 4711 0606 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 4712 060a 012B     		cmp	r3, #1
 4713 060c 40F0AA80 		bne	.L316
1552:..\src/interruptions.c ****         // Block motor with pwm = 0 to exploit not reversible motor behaviour 
1553:..\src/interruptions.c ****     	if ( MOT->control_mode != CONTROL_PWM && ((g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) <
 4714              		.loc 1 1553 0
 4715 0610 7B6C     		ldr	r3, [r7, #68]
 4716 0612 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 4717 0616 012B     		cmp	r3, #1
 4718 0618 00F09F80 		beq	.L317
 4719              		.loc 1 1553 0 is_stmt 0 discriminator 1
 4720 061c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 4721 0620 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4722 0622 7F48     		ldr	r0, .L340+16
 4723 0624 1346     		mov	r3, r2
 4724 0626 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 113


 4725 0628 1344     		add	r3, r3, r2
 4726 062a 9B00     		lsls	r3, r3, #2
 4727 062c 1344     		add	r3, r3, r2
 4728 062e 0B44     		add	r3, r3, r1
 4729 0630 50F82310 		ldr	r1, [r0, r3, lsl #2]
 4730 0634 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 4731 0638 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 4732 063a 7A4C     		ldr	r4, .L340+20
 4733 063c 1346     		mov	r3, r2
 4734 063e 5B00     		lsls	r3, r3, #1
 4735 0640 1344     		add	r3, r3, r2
 4736 0642 9B00     		lsls	r3, r3, #2
 4737 0644 1344     		add	r3, r3, r2
 4738 0646 0344     		add	r3, r3, r0
 4739 0648 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4740 064c CB1A     		subs	r3, r1, r3
 4741 064e 312B     		cmp	r3, #49
 4742 0650 00F38380 		bgt	.L317
1554:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 4743              		.loc 1 1554 0 is_stmt 1 discriminator 2
 4744 0654 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 4745 0658 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4746 065a 7148     		ldr	r0, .L340+16
 4747 065c 1346     		mov	r3, r2
 4748 065e 5B00     		lsls	r3, r3, #1
 4749 0660 1344     		add	r3, r3, r2
 4750 0662 9B00     		lsls	r3, r3, #2
 4751 0664 1344     		add	r3, r3, r2
 4752 0666 0B44     		add	r3, r3, r1
 4753 0668 50F82310 		ldr	r1, [r0, r3, lsl #2]
 4754 066c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 4755 0670 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 4756 0672 6C4C     		ldr	r4, .L340+20
 4757 0674 1346     		mov	r3, r2
 4758 0676 5B00     		lsls	r3, r3, #1
 4759 0678 1344     		add	r3, r3, r2
 4760 067a 9B00     		lsls	r3, r3, #2
 4761 067c 1344     		add	r3, r3, r2
 4762 067e 0344     		add	r3, r3, r0
 4763 0680 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4764 0684 CB1A     		subs	r3, r1, r3
1553:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 4765              		.loc 1 1553 0 discriminator 2
 4766 0686 13F1310F 		cmn	r3, #49
 4767 068a 66DB     		blt	.L317
1555:..\src/interruptions.c ****             ((g_refOld[idx].pos - g_ref[idx].pos) < 100 && (g_refOld[idx].pos - g_ref[idx].pos) > -
 4768              		.loc 1 1555 0
 4769 068c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4770 068e 664A     		ldr	r2, .L340+24
 4771 0690 1B01     		lsls	r3, r3, #4
 4772 0692 1344     		add	r3, r3, r2
 4773 0694 1A68     		ldr	r2, [r3]
 4774 0696 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4775 0698 6449     		ldr	r1, .L340+28
 4776 069a 1B01     		lsls	r3, r3, #4
 4777 069c 0B44     		add	r3, r3, r1
 4778 069e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 114


 4779 06a0 D31A     		subs	r3, r2, r3
1554:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 4780              		.loc 1 1554 0
 4781 06a2 632B     		cmp	r3, #99
 4782 06a4 59DC     		bgt	.L317
 4783              		.loc 1 1555 0
 4784 06a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4785 06a8 5F4A     		ldr	r2, .L340+24
 4786 06aa 1B01     		lsls	r3, r3, #4
 4787 06ac 1344     		add	r3, r3, r2
 4788 06ae 1A68     		ldr	r2, [r3]
 4789 06b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4790 06b2 5E49     		ldr	r1, .L340+28
 4791 06b4 1B01     		lsls	r3, r3, #4
 4792 06b6 0B44     		add	r3, r3, r1
 4793 06b8 1B68     		ldr	r3, [r3]
 4794 06ba D31A     		subs	r3, r2, r3
 4795 06bc 13F1630F 		cmn	r3, #99
 4796 06c0 4BDB     		blt	.L317
1556:..\src/interruptions.c ****             position_counter[idx]++;
 4797              		.loc 1 1556 0
 4798 06c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4799 06c4 5A4A     		ldr	r2, .L340+32
 4800 06c6 52F82320 		ldr	r2, [r2, r3, lsl #2]
 4801 06ca 0132     		adds	r2, r2, #1
 4802 06cc 5849     		ldr	r1, .L340+32
 4803 06ce 41F82320 		str	r2, [r1, r3, lsl #2]
1557:..\src/interruptions.c ****             
1558:..\src/interruptions.c ****             if (position_counter[idx] >= 250) { 
 4804              		.loc 1 1558 0
 4805 06d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4806 06d4 564A     		ldr	r2, .L340+32
 4807 06d6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4808 06da F92B     		cmp	r3, #249
 4809 06dc 42D9     		bls	.L316
1559:..\src/interruptions.c ****                 if (MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 4810              		.loc 1 1559 0
 4811 06de 7B6C     		ldr	r3, [r7, #68]
 4812 06e0 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 4813 06e4 002B     		cmp	r3, #0
 4814 06e6 10D1     		bne	.L319
 4815              		.loc 1 1559 0 is_stmt 0 discriminator 1
 4816 06e8 524B     		ldr	r3, .L340+36
 4817 06ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4818 06ec 002B     		cmp	r3, #0
 4819 06ee 0CD1     		bne	.L319
1560:..\src/interruptions.c ****                     g_refNew[idx].pos = g_meas[ENC_L].pos[0];       // Needed only when USB input m
 4820              		.loc 1 1560 0 is_stmt 1
 4821 06f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4822 06f2 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 4823 06f6 4B49     		ldr	r1, .L340+20
 4824 06f8 3420     		movs	r0, #52
 4825 06fa 00FB02F2 		mul	r2, r0, r2
 4826 06fe 0A44     		add	r2, r2, r1
 4827 0700 1268     		ldr	r2, [r2]
 4828 0702 4D49     		ldr	r1, .L340+40
 4829 0704 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 115


 4830 0706 0B44     		add	r3, r3, r1
 4831 0708 1A60     		str	r2, [r3]
 4832              	.L319:
1561:..\src/interruptions.c ****                 }
1562:..\src/interruptions.c ****                 g_ref[idx].pos = g_meas[ENC_L].pos[0];
 4833              		.loc 1 1562 0
 4834 070a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4835 070c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 4836 0710 4449     		ldr	r1, .L340+20
 4837 0712 3420     		movs	r0, #52
 4838 0714 00FB02F2 		mul	r2, r0, r2
 4839 0718 0A44     		add	r2, r2, r1
 4840 071a 1268     		ldr	r2, [r2]
 4841 071c 4349     		ldr	r1, .L340+28
 4842 071e 1B01     		lsls	r3, r3, #4
 4843 0720 0B44     		add	r3, r3, r1
 4844 0722 1A60     		str	r2, [r3]
1563:..\src/interruptions.c ****                 
1564:..\src/interruptions.c ****                 if (position_counter[idx] == 250){
 4845              		.loc 1 1564 0
 4846 0724 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4847 0726 424A     		ldr	r2, .L340+32
 4848 0728 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4849 072c FA2B     		cmp	r3, #250
 4850 072e 11D1     		bne	.L320
1565:..\src/interruptions.c ****                     // To do only once
1566:..\src/interruptions.c ****                     g_meas[ENC_L].hold_curr = g_meas[ENC_L].curr;
 4851              		.loc 1 1566 0
 4852 0730 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4853 0734 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 4854 0738 3A49     		ldr	r1, .L340+20
 4855 073a 3420     		movs	r0, #52
 4856 073c 00FB02F2 		mul	r2, r0, r2
 4857 0740 0A44     		add	r2, r2, r1
 4858 0742 0C32     		adds	r2, r2, #12
 4859 0744 1268     		ldr	r2, [r2]
 4860 0746 3749     		ldr	r1, .L340+20
 4861 0748 3420     		movs	r0, #52
 4862 074a 00FB03F3 		mul	r3, r0, r3
 4863 074e 0B44     		add	r3, r3, r1
 4864 0750 1433     		adds	r3, r3, #20
 4865 0752 1A60     		str	r2, [r3]
 4866              	.L320:
1567:..\src/interruptions.c ****                 }
1568:..\src/interruptions.c ****                 pwm_input = 0;            
 4867              		.loc 1 1568 0
 4868 0754 0023     		movs	r3, #0
 4869 0756 FB64     		str	r3, [r7, #76]
1558:..\src/interruptions.c ****                 if (MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 4870              		.loc 1 1558 0
 4871 0758 04E0     		b	.L316
 4872              	.L317:
1569:..\src/interruptions.c ****             }
1570:..\src/interruptions.c ****         }
1571:..\src/interruptions.c ****         else {
1572:..\src/interruptions.c ****             position_counter[idx] = 0;
 4873              		.loc 1 1572 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 116


 4874 075a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4875 075c 344A     		ldr	r2, .L340+32
 4876 075e 0021     		movs	r1, #0
 4877 0760 42F82310 		str	r1, [r2, r3, lsl #2]
 4878              	.L316:
1573:..\src/interruptions.c ****         }
1574:..\src/interruptions.c ****     }
1575:..\src/interruptions.c ****     
1576:..\src/interruptions.c ****     // Set motor direction and write pwm value
1577:..\src/interruptions.c ****     switch (idx) {
 4879              		.loc 1 1577 0
 4880 0764 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4881 0766 002B     		cmp	r3, #0
 4882 0768 02D0     		beq	.L322
 4883 076a 012B     		cmp	r3, #1
 4884 076c 26D0     		beq	.L323
1578:..\src/interruptions.c ****         case 0:         // Motor 1
1579:..\src/interruptions.c ****             if (motor_dir[idx])
1580:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x01);
1581:..\src/interruptions.c ****             else
1582:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x00);
1583:..\src/interruptions.c ****             
1584:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_VNH5019) {
1585:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(PWM_MAX_VALUE - abs(pwm_input));
1586:..\src/interruptions.c ****             }
1587:..\src/interruptions.c ****             else {  // DRIVER_MC33887 standard
1588:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(abs(pwm_input));    
1589:..\src/interruptions.c ****             }
1590:..\src/interruptions.c ****             
1591:..\src/interruptions.c ****             break;
1592:..\src/interruptions.c ****         case 1:         // Motor 2
1593:..\src/interruptions.c ****             
1594:..\src/interruptions.c ****             if (motor_dir[idx])
1595:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x01);
1596:..\src/interruptions.c ****             else
1597:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x00);
1598:..\src/interruptions.c ****             
1599:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_VNH5019) {
1600:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(PWM_MAX_VALUE - abs(pwm_input));
1601:..\src/interruptions.c ****             }
1602:..\src/interruptions.c ****             else {  // DRIVER_MC33887 standard
1603:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(abs(pwm_input));    
1604:..\src/interruptions.c ****             }
1605:..\src/interruptions.c ****             
1606:..\src/interruptions.c ****             break;
1607:..\src/interruptions.c ****         default:
1608:..\src/interruptions.c ****             break;
 4885              		.loc 1 1608 0
 4886 076e 4BE0     		b	.L328
 4887              	.L322:
1579:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x01);
 4888              		.loc 1 1579 0
 4889 0770 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4890 0772 324A     		ldr	r2, .L340+44
 4891 0774 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4892 0776 002B     		cmp	r3, #0
 4893 0778 03D0     		beq	.L324
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 117


1580:..\src/interruptions.c ****             else
 4894              		.loc 1 1580 0
 4895 077a 0120     		movs	r0, #1
 4896 077c FFF7FEFF 		bl	MOTOR_DIR_1_Write
 4897 0780 02E0     		b	.L325
 4898              	.L324:
1582:..\src/interruptions.c ****             
 4899              		.loc 1 1582 0
 4900 0782 0020     		movs	r0, #0
 4901 0784 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 4902              	.L325:
1584:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(PWM_MAX_VALUE - abs(pwm_input));
 4903              		.loc 1 1584 0
 4904 0788 7B6C     		ldr	r3, [r7, #68]
 4905 078a 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 4906 078e 012B     		cmp	r3, #1
 4907 0790 0BD1     		bne	.L326
1585:..\src/interruptions.c ****             }
 4908              		.loc 1 1585 0
 4909 0792 FB6C     		ldr	r3, [r7, #76]
 4910 0794 002B     		cmp	r3, #0
 4911 0796 B8BF     		it	lt
 4912 0798 5B42     		rsblt	r3, r3, #0
 4913 079a DBB2     		uxtb	r3, r3
 4914 079c C3F16403 		rsb	r3, r3, #100
 4915 07a0 DBB2     		uxtb	r3, r3
 4916 07a2 1846     		mov	r0, r3
 4917 07a4 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1591:..\src/interruptions.c ****         case 1:         // Motor 2
 4918              		.loc 1 1591 0
 4919 07a8 2EE0     		b	.L328
 4920              	.L326:
1588:..\src/interruptions.c ****             }
 4921              		.loc 1 1588 0
 4922 07aa FB6C     		ldr	r3, [r7, #76]
 4923 07ac 002B     		cmp	r3, #0
 4924 07ae B8BF     		it	lt
 4925 07b0 5B42     		rsblt	r3, r3, #0
 4926 07b2 DBB2     		uxtb	r3, r3
 4927 07b4 1846     		mov	r0, r3
 4928 07b6 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1591:..\src/interruptions.c ****         case 1:         // Motor 2
 4929              		.loc 1 1591 0
 4930 07ba 25E0     		b	.L328
 4931              	.L323:
1594:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x01);
 4932              		.loc 1 1594 0
 4933 07bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4934 07be 1F4A     		ldr	r2, .L340+44
 4935 07c0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4936 07c2 002B     		cmp	r3, #0
 4937 07c4 03D0     		beq	.L329
1595:..\src/interruptions.c ****             else
 4938              		.loc 1 1595 0
 4939 07c6 0120     		movs	r0, #1
 4940 07c8 FFF7FEFF 		bl	MOTOR_DIR_2_Write
 4941 07cc 02E0     		b	.L330
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 118


 4942              	.L329:
1597:..\src/interruptions.c ****             
 4943              		.loc 1 1597 0
 4944 07ce 0020     		movs	r0, #0
 4945 07d0 FFF7FEFF 		bl	MOTOR_DIR_2_Write
 4946              	.L330:
1599:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(PWM_MAX_VALUE - abs(pwm_input));
 4947              		.loc 1 1599 0
 4948 07d4 7B6C     		ldr	r3, [r7, #68]
 4949 07d6 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 4950 07da 012B     		cmp	r3, #1
 4951 07dc 0BD1     		bne	.L331
1600:..\src/interruptions.c ****             }
 4952              		.loc 1 1600 0
 4953 07de FB6C     		ldr	r3, [r7, #76]
 4954 07e0 002B     		cmp	r3, #0
 4955 07e2 B8BF     		it	lt
 4956 07e4 5B42     		rsblt	r3, r3, #0
 4957 07e6 DBB2     		uxtb	r3, r3
 4958 07e8 C3F16403 		rsb	r3, r3, #100
 4959 07ec DBB2     		uxtb	r3, r3
 4960 07ee 1846     		mov	r0, r3
 4961 07f0 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
1606:..\src/interruptions.c ****         default:
 4962              		.loc 1 1606 0
 4963 07f4 07E0     		b	.L335
 4964              	.L331:
1603:..\src/interruptions.c ****             }
 4965              		.loc 1 1603 0
 4966 07f6 FB6C     		ldr	r3, [r7, #76]
 4967 07f8 002B     		cmp	r3, #0
 4968 07fa B8BF     		it	lt
 4969 07fc 5B42     		rsblt	r3, r3, #0
 4970 07fe DBB2     		uxtb	r3, r3
 4971 0800 1846     		mov	r0, r3
 4972 0802 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
 4973              	.L335:
1606:..\src/interruptions.c ****         default:
 4974              		.loc 1 1606 0
 4975 0806 00BF     		nop
 4976              	.L328:
1609:..\src/interruptions.c ****     }
1610:..\src/interruptions.c ****     
1611:..\src/interruptions.c **** }
 4977              		.loc 1 1611 0
 4978 0808 00BF     		nop
 4979 080a 5437     		adds	r7, r7, #84
 4980              		.cfi_def_cfa_offset 12
 4981 080c BD46     		mov	sp, r7
 4982              		.cfi_def_cfa_register 13
 4983              		@ sp needed
 4984 080e 90BD     		pop	{r4, r7, pc}
 4985              	.L341:
 4986              		.align	2
 4987              	.L340:
 4988 0810 1F85EB51 		.word	1374389535
 4989 0814 00000000 		.word	dev_pwm_limit
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 119


 4990 0818 D0000000 		.word	prev_pwm.10579
 4991 081c 00000000 		.word	pwm_sign
 4992 0820 00000000 		.word	g_measOld
 4993 0824 00000000 		.word	g_meas
 4994 0828 00000000 		.word	g_refOld
 4995 082c 00000000 		.word	g_ref
 4996 0830 D8000000 		.word	position_counter.10581
 4997 0834 00000000 		.word	change_ext_ref_flag
 4998 0838 00000000 		.word	g_refNew
 4999 083c BC000000 		.word	motor_dir.10580
 5000              		.cfi_endproc
 5001              	.LFE72:
 5002              		.size	motor_control_generic, .-motor_control_generic
 5003              		.global	__aeabi_fcmpeq
 5004              		.global	__aeabi_fmul
 5005              		.global	__aeabi_f2iz
 5006              		.global	__aeabi_fcmplt
 5007              		.section	.text.encoder_reading_SPI,"ax",%progbits
 5008              		.align	2
 5009              		.global	encoder_reading_SPI
 5010              		.thumb
 5011              		.thumb_func
 5012              		.type	encoder_reading_SPI, %function
 5013              	encoder_reading_SPI:
 5014              	.LFB73:
1612:..\src/interruptions.c **** 
1613:..\src/interruptions.c **** //==============================================================================
1614:..\src/interruptions.c **** //                                                           ENCODER READING SPI
1615:..\src/interruptions.c **** //==============================================================================
1616:..\src/interruptions.c **** 
1617:..\src/interruptions.c **** void encoder_reading_SPI(uint8 n_line, uint8 assoc_motor) {
 5015              		.loc 1 1617 0
 5016              		.cfi_startproc
 5017              		@ args = 0, pretend = 0, frame = 48
 5018              		@ frame_needed = 1, uses_anonymous_args = 0
 5019 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5020              		.cfi_def_cfa_offset 20
 5021              		.cfi_offset 4, -20
 5022              		.cfi_offset 5, -16
 5023              		.cfi_offset 6, -12
 5024              		.cfi_offset 7, -8
 5025              		.cfi_offset 14, -4
 5026 0002 8FB0     		sub	sp, sp, #60
 5027              		.cfi_def_cfa_offset 80
 5028 0004 02AF     		add	r7, sp, #8
 5029              		.cfi_def_cfa 7, 72
 5030 0006 0346     		mov	r3, r0
 5031 0008 0A46     		mov	r2, r1
 5032 000a FB71     		strb	r3, [r7, #7]
 5033 000c 1346     		mov	r3, r2
 5034 000e BB71     		strb	r3, [r7, #6]
1618:..\src/interruptions.c **** 
1619:..\src/interruptions.c ****     uint8 CYDATA index = 0;
 5035              		.loc 1 1619 0
 5036 0010 0023     		movs	r3, #0
 5037 0012 87F82F30 		strb	r3, [r7, #47]
1620:..\src/interruptions.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 120


1621:..\src/interruptions.c ****     // Encoder Variables  
1622:..\src/interruptions.c ****     uint8 jj;
1623:..\src/interruptions.c ****      
1624:..\src/interruptions.c ****     uint32 aux_encoder[NUM_OF_SENSORS];
1625:..\src/interruptions.c ****     int16 tmp_value_encoder;
1626:..\src/interruptions.c ****     int32 tmp_value_encoder_32;
1627:..\src/interruptions.c ****     int32 value_encoder;
1628:..\src/interruptions.c ****     int32 speed_encoder;
1629:..\src/interruptions.c ****     int32 value_diff;
1630:..\src/interruptions.c **** 	int8 init_rot = 0;
 5038              		.loc 1 1630 0
 5039 0016 0023     		movs	r3, #0
 5040 0018 87F82730 		strb	r3, [r7, #39]
1631:..\src/interruptions.c **** 
1632:..\src/interruptions.c ****     static int32 last_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1633:..\src/interruptions.c ****     static int32 comp_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1634:..\src/interruptions.c ****     static uint8 error[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1635:..\src/interruptions.c ****     
1636:..\src/interruptions.c ****     static CYBIT only_first_time[N_ENCODER_LINE_MAX] = {TRUE, TRUE};
1637:..\src/interruptions.c ****     static CYBIT safe_startup_motor_activation[N_ENCODER_LINE_MAX] = {FALSE, FALSE};
1638:..\src/interruptions.c ****     static uint8 one_time_execute[N_ENCODER_LINE_MAX] = {0, 0};
1639:..\src/interruptions.c ****     static uint32 count_startup_motor[N_ENCODER_LINE_MAX] = {0, 0};
1640:..\src/interruptions.c ****     static CYBIT pos_reconstruct[N_ENCODER_LINE_MAX] = {FALSE, FALSE};
1641:..\src/interruptions.c **** 
1642:..\src/interruptions.c ****     static int32 v_value[N_ENCODER_LINE_MAX][N_ENCODERS];   //last value for velocity
1643:..\src/interruptions.c ****     static int32 vv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last value for velocity
1644:..\src/interruptions.c ****     static int32 vvv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last last value for velocity
1645:..\src/interruptions.c **** //    
1646:..\src/interruptions.c ****     if (reset_last_value_flag) {
 5041              		.loc 1 1646 0
 5042 001c 8E4B     		ldr	r3, .L378
 5043 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5044 0020 002B     		cmp	r3, #0
 5045 0022 18D0     		beq	.L343
1647:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 5046              		.loc 1 1647 0
 5047 0024 0323     		movs	r3, #3
 5048 0026 87F82E30 		strb	r3, [r7, #46]
 5049 002a 0AE0     		b	.L344
 5050              	.L345:
1648:..\src/interruptions.c ****             last_value_encoder[n_line][jj] = 0;
 5051              		.loc 1 1648 0
 5052 002c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5053 002e 97F82E10 		ldrb	r1, [r7, #46]	@ zero_extendqisi2
 5054 0032 8A48     		ldr	r0, .L378+4
 5055 0034 1346     		mov	r3, r2
 5056 0036 5B00     		lsls	r3, r3, #1
 5057 0038 1344     		add	r3, r3, r2
 5058 003a 0B44     		add	r3, r3, r1
 5059 003c 0022     		movs	r2, #0
 5060 003e 40F82320 		str	r2, [r0, r3, lsl #2]
 5061              	.L344:
1647:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 5062              		.loc 1 1647 0 discriminator 1
 5063 0042 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 5064 0046 5A1E     		subs	r2, r3, #1
 5065 0048 87F82E20 		strb	r2, [r7, #46]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 121


 5066 004c 002B     		cmp	r3, #0
 5067 004e EDD1     		bne	.L345
1649:..\src/interruptions.c ****         
1650:..\src/interruptions.c ****         reset_last_value_flag = 0;
 5068              		.loc 1 1650 0
 5069 0050 814B     		ldr	r3, .L378
 5070 0052 0022     		movs	r2, #0
 5071 0054 1A70     		strb	r2, [r3]
 5072              	.L343:
1651:..\src/interruptions.c ****     }
1652:..\src/interruptions.c **** 
1653:..\src/interruptions.c ****     //======================================================     reading sensors
1654:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 5073              		.loc 1 1654 0
 5074 0056 0023     		movs	r3, #0
 5075 0058 87F82F30 		strb	r3, [r7, #47]
 5076 005c 0DE0     		b	.L346
 5077              	.L347:
1655:..\src/interruptions.c ****         aux_encoder[index] = 0;
 5078              		.loc 1 1655 0 discriminator 3
 5079 005e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5080 0062 9B00     		lsls	r3, r3, #2
 5081 0064 07F13002 		add	r2, r7, #48
 5082 0068 1344     		add	r3, r3, r2
 5083 006a 0022     		movs	r2, #0
 5084 006c 43F8282C 		str	r2, [r3, #-40]
1654:..\src/interruptions.c ****         aux_encoder[index] = 0;
 5085              		.loc 1 1654 0 discriminator 3
 5086 0070 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5087 0074 0133     		adds	r3, r3, #1
 5088 0076 87F82F30 		strb	r3, [r7, #47]
 5089              	.L346:
1654:..\src/interruptions.c ****         aux_encoder[index] = 0;
 5090              		.loc 1 1654 0 is_stmt 0 discriminator 1
 5091 007a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5092 007e 022B     		cmp	r3, #2
 5093 0080 EDD9     		bls	.L347
1656:..\src/interruptions.c ****     }   
1657:..\src/interruptions.c ****     
1658:..\src/interruptions.c ****     ReadEncoderLine(N_Encoder_Line_Connected[n_line] , n_line);         //CS0 for right hand
 5094              		.loc 1 1658 0 is_stmt 1
 5095 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5096 0084 764A     		ldr	r2, .L378+8
 5097 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5098 0088 1A46     		mov	r2, r3
 5099 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5100 008c 1946     		mov	r1, r3
 5101 008e 1046     		mov	r0, r2
 5102 0090 FFF7FEFF 		bl	ReadEncoderLine
 5103              	.LBB9:
1659:..\src/interruptions.c ****                                                                         //CS1 for left hand
1660:..\src/interruptions.c ****     for (int j = 0; j < N_ENCODERS; j++) {    
 5104              		.loc 1 1660 0
 5105 0094 0023     		movs	r3, #0
 5106 0096 3B62     		str	r3, [r7, #32]
 5107 0098 2EE0     		b	.L348
 5108              	.L350:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 122


1661:..\src/interruptions.c ****         
1662:..\src/interruptions.c ****         // As default, index=0 reads SoftHand Pro encoder positioned on screw, while index=1 reads 
1663:..\src/interruptions.c ****         index = c_mem.enc[n_line].Enc_idx_use_for_control[j];       // take encoder idx used for mo
 5109              		.loc 1 1663 0
 5110 009a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5111 009c 7149     		ldr	r1, .L378+12
 5112 009e 1346     		mov	r3, r2
 5113 00a0 5B00     		lsls	r3, r3, #1
 5114 00a2 1344     		add	r3, r3, r2
 5115 00a4 1B01     		lsls	r3, r3, #4
 5116 00a6 CA18     		adds	r2, r1, r3
 5117 00a8 3B6A     		ldr	r3, [r7, #32]
 5118 00aa 1344     		add	r3, r3, r2
 5119 00ac 03F2B113 		addw	r3, r3, #433
 5120 00b0 1B78     		ldrb	r3, [r3]
 5121 00b2 87F82F30 		strb	r3, [r7, #47]
1664:..\src/interruptions.c ****         
1665:..\src/interruptions.c ****         if (Encoder_Check[n_line][index] > 15){  // check on encoder data
 5122              		.loc 1 1665 0
 5123 00b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5124 00b8 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5125 00bc 6A48     		ldr	r0, .L378+16
 5126 00be 1346     		mov	r3, r2
 5127 00c0 9B00     		lsls	r3, r3, #2
 5128 00c2 1344     		add	r3, r3, r2
 5129 00c4 0344     		add	r3, r3, r0
 5130 00c6 0B44     		add	r3, r3, r1
 5131 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5132 00ca 0F2B     		cmp	r3, #15
 5133 00cc 11D9     		bls	.L349
1666:..\src/interruptions.c ****             aux_encoder[j] = (uint32)Encoder_Value[n_line][index];     // 00000000000000[20] XXXXXX
 5134              		.loc 1 1666 0
 5135 00ce FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5136 00d0 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5137 00d4 6548     		ldr	r0, .L378+20
 5138 00d6 1346     		mov	r3, r2
 5139 00d8 9B00     		lsls	r3, r3, #2
 5140 00da 1344     		add	r3, r3, r2
 5141 00dc 0B44     		add	r3, r3, r1
 5142 00de 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 5143 00e2 1A46     		mov	r2, r3
 5144 00e4 3B6A     		ldr	r3, [r7, #32]
 5145 00e6 9B00     		lsls	r3, r3, #2
 5146 00e8 07F13001 		add	r1, r7, #48
 5147 00ec 0B44     		add	r3, r3, r1
 5148 00ee 43F8282C 		str	r2, [r3, #-40]
 5149              	.L349:
1660:..\src/interruptions.c ****         
 5150              		.loc 1 1660 0 discriminator 2
 5151 00f2 3B6A     		ldr	r3, [r7, #32]
 5152 00f4 0133     		adds	r3, r3, #1
 5153 00f6 3B62     		str	r3, [r7, #32]
 5154              	.L348:
1660:..\src/interruptions.c ****         
 5155              		.loc 1 1660 0 is_stmt 0 discriminator 1
 5156 00f8 3B6A     		ldr	r3, [r7, #32]
 5157 00fa 022B     		cmp	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 123


 5158 00fc CDDD     		ble	.L350
 5159              	.LBE9:
1667:..\src/interruptions.c ****         }
1668:..\src/interruptions.c ****     }
1669:..\src/interruptions.c ****     
1670:..\src/interruptions.c ****     // S = SIGN BIT
1671:..\src/interruptions.c ****     // X = ENCODER VALUE BIT
1672:..\src/interruptions.c ****     // 0 = 0 BIT
1673:..\src/interruptions.c ****     // C = CONTROL BIT
1674:..\src/interruptions.c ****     
1675:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 5160              		.loc 1 1675 0 is_stmt 1
 5161 00fe 0023     		movs	r3, #0
 5162 0100 87F82F30 		strb	r3, [r7, #47]
 5163 0104 33E3     		b	.L351
 5164              	.L371:
1676:..\src/interruptions.c ****         
1677:..\src/interruptions.c ****         data_encoder_raw[index] = aux_encoder[index];
 5165              		.loc 1 1677 0
 5166 0106 97F82F20 		ldrb	r2, [r7, #47]	@ zero_extendqisi2
 5167 010a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5168 010e 9B00     		lsls	r3, r3, #2
 5169 0110 07F13001 		add	r1, r7, #48
 5170 0114 0B44     		add	r3, r3, r1
 5171 0116 53F8283C 		ldr	r3, [r3, #-40]
 5172 011a 5549     		ldr	r1, .L378+24
 5173 011c 41F82230 		str	r3, [r1, r2, lsl #2]
1678:..\src/interruptions.c ****         
1679:..\src/interruptions.c ****         tmp_value_encoder = (int16)(aux_encoder[index] - (uint16)g_mem.enc[n_line].m_off[index]);
 5174              		.loc 1 1679 0
 5175 0120 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5176 0124 9B00     		lsls	r3, r3, #2
 5177 0126 07F13002 		add	r2, r7, #48
 5178 012a 1344     		add	r3, r3, r2
 5179 012c 53F8283C 		ldr	r3, [r3, #-40]
 5180 0130 99B2     		uxth	r1, r3
 5181 0132 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5182 0134 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5183 0138 4E4C     		ldr	r4, .L378+28
 5184 013a 1346     		mov	r3, r2
 5185 013c 5B00     		lsls	r3, r3, #1
 5186 013e 1344     		add	r3, r3, r2
 5187 0140 9B00     		lsls	r3, r3, #2
 5188 0142 0344     		add	r3, r3, r0
 5189 0144 6633     		adds	r3, r3, #102
 5190 0146 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5191 014a 9BB2     		uxth	r3, r3
 5192 014c CB1A     		subs	r3, r1, r3
 5193 014e 9BB2     		uxth	r3, r3
 5194 0150 BB85     		strh	r3, [r7, #44]	@ movhi
1680:..\src/interruptions.c ****         if (tmp_value_encoder < 0){
 5195              		.loc 1 1680 0
 5196 0152 B7F92C30 		ldrsh	r3, [r7, #44]
 5197 0156 002B     		cmp	r3, #0
 5198 0158 04DA     		bge	.L352
1681:..\src/interruptions.c ****             tmp_value_encoder = tmp_value_encoder + 4096;   //SSSS[4] XXXXXXXXXXXX[12] worst case r
 5199              		.loc 1 1681 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 124


 5200 015a BB8D     		ldrh	r3, [r7, #44]
 5201 015c 03F58053 		add	r3, r3, #4096
 5202 0160 9BB2     		uxth	r3, r3
 5203 0162 BB85     		strh	r3, [r7, #44]	@ movhi
 5204              	.L352:
1682:..\src/interruptions.c ****         }       // Range [0, 4096]
1683:..\src/interruptions.c **** 
1684:..\src/interruptions.c ****         if (tmp_value_encoder >= 2048) {
 5205              		.loc 1 1684 0
 5206 0164 B7F92C30 		ldrsh	r3, [r7, #44]
 5207 0168 B3F5006F 		cmp	r3, #2048
 5208 016c 04DB     		blt	.L353
1685:..\src/interruptions.c ****            tmp_value_encoder = tmp_value_encoder - 4096;    //SSSS[4] XXXXXXXXXXXX[12] range [-2048
 5209              		.loc 1 1685 0
 5210 016e BB8D     		ldrh	r3, [r7, #44]
 5211 0170 A3F58053 		sub	r3, r3, #4096
 5212 0174 9BB2     		uxth	r3, r3
 5213 0176 BB85     		strh	r3, [r7, #44]	@ movhi
 5214              	.L353:
1686:..\src/interruptions.c ****         }       // Range [-2048, 2047]
1687:..\src/interruptions.c **** 
1688:..\src/interruptions.c ****         tmp_value_encoder_32 = (((int32)(tmp_value_encoder)) << 4);     //SSSSSSSSSSSSSSSS[16] XXXX
 5215              		.loc 1 1688 0
 5216 0178 B7F92C30 		ldrsh	r3, [r7, #44]
 5217 017c 1B01     		lsls	r3, r3, #4
 5218 017e FB61     		str	r3, [r7, #28]
1689:..\src/interruptions.c ****         comp_value_encoder[n_line][index] = tmp_value_encoder_32;
 5219              		.loc 1 1689 0
 5220 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5221 0182 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5222 0186 3C48     		ldr	r0, .L378+32
 5223 0188 1346     		mov	r3, r2
 5224 018a 5B00     		lsls	r3, r3, #1
 5225 018c 1344     		add	r3, r3, r2
 5226 018e 0B44     		add	r3, r3, r1
 5227 0190 FA69     		ldr	r2, [r7, #28]
 5228 0192 40F82320 		str	r2, [r0, r3, lsl #2]
1690:..\src/interruptions.c **** 
1691:..\src/interruptions.c ****         // Initialize last_value_encoder
1692:..\src/interruptions.c ****         if (only_first_time[n_line]) {
 5229              		.loc 1 1692 0
 5230 0196 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5231 0198 384A     		ldr	r2, .L378+36
 5232 019a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5233 019c 002B     		cmp	r3, #0
 5234 019e 12D0     		beq	.L354
1693:..\src/interruptions.c ****             last_value_encoder[n_line][index] = tmp_value_encoder_32;
 5235              		.loc 1 1693 0
 5236 01a0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5237 01a2 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5238 01a6 2D48     		ldr	r0, .L378+4
 5239 01a8 1346     		mov	r3, r2
 5240 01aa 5B00     		lsls	r3, r3, #1
 5241 01ac 1344     		add	r3, r3, r2
 5242 01ae 0B44     		add	r3, r3, r1
 5243 01b0 FA69     		ldr	r2, [r7, #28]
 5244 01b2 40F82320 		str	r2, [r0, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 125


1694:..\src/interruptions.c ****             if (index == 2)
 5245              		.loc 1 1694 0
 5246 01b6 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5247 01ba 022B     		cmp	r3, #2
 5248 01bc 03D1     		bne	.L354
1695:..\src/interruptions.c ****                 only_first_time[n_line] = 0;
 5249              		.loc 1 1695 0
 5250 01be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5251 01c0 2E4A     		ldr	r2, .L378+36
 5252 01c2 0021     		movs	r1, #0
 5253 01c4 D154     		strb	r1, [r2, r3]
 5254              	.L354:
1696:..\src/interruptions.c ****         }
1697:..\src/interruptions.c **** 
1698:..\src/interruptions.c ****         // Take care of rotations
1699:..\src/interruptions.c ****         value_diff = tmp_value_encoder_32 - last_value_encoder[n_line][index];     // worst case SS
 5255              		.loc 1 1699 0
 5256 01c6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5257 01c8 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5258 01cc 2348     		ldr	r0, .L378+4
 5259 01ce 1346     		mov	r3, r2
 5260 01d0 5B00     		lsls	r3, r3, #1
 5261 01d2 1344     		add	r3, r3, r2
 5262 01d4 0B44     		add	r3, r3, r1
 5263 01d6 50F82330 		ldr	r3, [r0, r3, lsl #2]
 5264 01da FA69     		ldr	r2, [r7, #28]
 5265 01dc D31A     		subs	r3, r2, r3
 5266 01de BB61     		str	r3, [r7, #24]
1700:..\src/interruptions.c **** 
1701:..\src/interruptions.c ****         // ====================== 1 TURN ======================
1702:..\src/interruptions.c ****         // -32768                    0                    32767 -32768                   0         
1703:..\src/interruptions.c ****         // |-------------------------|-------------------------|-------------------------|---------
1704:..\src/interruptions.c ****         //              |                         |      |           |      |                      
1705:..\src/interruptions.c ****         //           -16384                     16383    |           |   -16384                    
1706:..\src/interruptions.c ****         //                                               |           |
1707:..\src/interruptions.c ****         //                                           24575           -24576
1708:..\src/interruptions.c ****         //                                               |___________|
1709:..\src/interruptions.c ****         //                                                   49152
1710:..\src/interruptions.c **** 
1711:..\src/interruptions.c ****         // if we are in the right interval, take care of rotation
1712:..\src/interruptions.c ****         // and update the variable only if the difference between
1713:..\src/interruptions.c ****         // one measure and another is less than 1/4 of turn
1714:..\src/interruptions.c **** 
1715:..\src/interruptions.c ****         // Considering we are sampling at 1kHz, this means that our shaft needs
1716:..\src/interruptions.c ****         // to go slower than 1/4 turn every ms -> 1 turn every 4ms
1717:..\src/interruptions.c ****         // equal to 250 turn/s -> 15000 RPM
1718:..\src/interruptions.c **** 
1719:..\src/interruptions.c ****         if (value_diff > 49152)
 5267              		.loc 1 1719 0
 5268 01e0 BB69     		ldr	r3, [r7, #24]
 5269 01e2 B3F5404F 		cmp	r3, #49152
 5270 01e6 19DD     		ble	.L355
1720:..\src/interruptions.c ****             g_meas[n_line].rot[index]--;
 5271              		.loc 1 1720 0
 5272 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5273 01ea 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5274 01ee 2448     		ldr	r0, .L378+40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 126


 5275 01f0 3421     		movs	r1, #52
 5276 01f2 01FB02F1 		mul	r1, r1, r2
 5277 01f6 0144     		add	r1, r1, r0
 5278 01f8 1944     		add	r1, r1, r3
 5279 01fa 1831     		adds	r1, r1, #24
 5280 01fc 91F90010 		ldrsb	r1, [r1]
 5281 0200 C9B2     		uxtb	r1, r1
 5282 0202 0139     		subs	r1, r1, #1
 5283 0204 C9B2     		uxtb	r1, r1
 5284 0206 4CB2     		sxtb	r4, r1
 5285 0208 1D49     		ldr	r1, .L378+40
 5286 020a 3420     		movs	r0, #52
 5287 020c 00FB02F2 		mul	r2, r0, r2
 5288 0210 0A44     		add	r2, r2, r1
 5289 0212 1344     		add	r3, r3, r2
 5290 0214 1833     		adds	r3, r3, #24
 5291 0216 2246     		mov	r2, r4
 5292 0218 1A70     		strb	r2, [r3]
 5293 021a 5BE0     		b	.L356
 5294              	.L355:
1721:..\src/interruptions.c ****         else{ 
1722:..\src/interruptions.c ****             if (value_diff < -49152)
 5295              		.loc 1 1722 0
 5296 021c BB69     		ldr	r3, [r7, #24]
 5297 021e 13F5404F 		cmn	r3, #49152
 5298 0222 2FDA     		bge	.L357
1723:..\src/interruptions.c ****                 g_meas[n_line].rot[index]++;
 5299              		.loc 1 1723 0
 5300 0224 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5301 0226 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5302 022a 1548     		ldr	r0, .L378+40
 5303 022c 3421     		movs	r1, #52
 5304 022e 01FB02F1 		mul	r1, r1, r2
 5305 0232 0144     		add	r1, r1, r0
 5306 0234 1944     		add	r1, r1, r3
 5307 0236 1831     		adds	r1, r1, #24
 5308 0238 91F90010 		ldrsb	r1, [r1]
 5309 023c C9B2     		uxtb	r1, r1
 5310 023e 0131     		adds	r1, r1, #1
 5311 0240 C9B2     		uxtb	r1, r1
 5312 0242 4CB2     		sxtb	r4, r1
 5313 0244 0E49     		ldr	r1, .L378+40
 5314 0246 3420     		movs	r0, #52
 5315 0248 00FB02F2 		mul	r2, r0, r2
 5316 024c 0A44     		add	r2, r2, r1
 5317 024e 1344     		add	r3, r3, r2
 5318 0250 1833     		adds	r3, r3, #24
 5319 0252 2246     		mov	r2, r4
 5320 0254 1A70     		strb	r2, [r3]
 5321 0256 3DE0     		b	.L356
 5322              	.L379:
 5323              		.align	2
 5324              	.L378:
 5325 0258 00000000 		.word	reset_last_value_flag
 5326 025c E0000000 		.word	last_value_encoder.10604
 5327 0260 00000000 		.word	N_Encoder_Line_Connected
 5328 0264 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 127


 5329 0268 00000000 		.word	Encoder_Check
 5330 026c 00000000 		.word	Encoder_Value
 5331 0270 00000000 		.word	data_encoder_raw
 5332 0274 00000000 		.word	g_mem
 5333 0278 F8000000 		.word	comp_value_encoder.10605
 5334 027c 04000000 		.word	only_first_time.10607
 5335 0280 00000000 		.word	g_meas
 5336              	.L357:
1724:..\src/interruptions.c ****             else{
1725:..\src/interruptions.c ****                 if (abs(value_diff) > 16384) { // if two measures are too far
 5337              		.loc 1 1725 0
 5338 0284 BB69     		ldr	r3, [r7, #24]
 5339 0286 002B     		cmp	r3, #0
 5340 0288 B8BF     		it	lt
 5341 028a 5B42     		rsblt	r3, r3, #0
 5342 028c B3F5804F 		cmp	r3, #16384
 5343 0290 20DD     		ble	.L356
1726:..\src/interruptions.c ****                     error[n_line][index]++;
 5344              		.loc 1 1726 0
 5345 0292 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5346 0294 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5347 0298 9B48     		ldr	r0, .L380
 5348 029a 1346     		mov	r3, r2
 5349 029c 5B00     		lsls	r3, r3, #1
 5350 029e 1344     		add	r3, r3, r2
 5351 02a0 0344     		add	r3, r3, r0
 5352 02a2 0B44     		add	r3, r3, r1
 5353 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5354 02a6 0133     		adds	r3, r3, #1
 5355 02a8 DCB2     		uxtb	r4, r3
 5356 02aa 9748     		ldr	r0, .L380
 5357 02ac 1346     		mov	r3, r2
 5358 02ae 5B00     		lsls	r3, r3, #1
 5359 02b0 1344     		add	r3, r3, r2
 5360 02b2 0344     		add	r3, r3, r0
 5361 02b4 0B44     		add	r3, r3, r1
 5362 02b6 2246     		mov	r2, r4
 5363 02b8 1A70     		strb	r2, [r3]
1727:..\src/interruptions.c ****                                 
1728:..\src/interruptions.c ****                     if (error[n_line][index] < 10)
 5364              		.loc 1 1728 0
 5365 02ba FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5366 02bc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5367 02c0 9148     		ldr	r0, .L380
 5368 02c2 1346     		mov	r3, r2
 5369 02c4 5B00     		lsls	r3, r3, #1
 5370 02c6 1344     		add	r3, r3, r2
 5371 02c8 0344     		add	r3, r3, r0
 5372 02ca 0B44     		add	r3, r3, r1
 5373 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5374 02ce 092B     		cmp	r3, #9
 5375 02d0 40F28C82 		bls	.L377
 5376              	.L356:
1729:..\src/interruptions.c ****                         // Discard
1730:..\src/interruptions.c ****                         return;
1731:..\src/interruptions.c ****                 }
1732:..\src/interruptions.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 128


1733:..\src/interruptions.c ****         }
1734:..\src/interruptions.c **** 
1735:..\src/interruptions.c ****         error[n_line][index] = 0;
 5377              		.loc 1 1735 0
 5378 02d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5379 02d6 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5380 02da 8B48     		ldr	r0, .L380
 5381 02dc 1346     		mov	r3, r2
 5382 02de 5B00     		lsls	r3, r3, #1
 5383 02e0 1344     		add	r3, r3, r2
 5384 02e2 0344     		add	r3, r3, r0
 5385 02e4 0B44     		add	r3, r3, r1
 5386 02e6 0022     		movs	r2, #0
 5387 02e8 1A70     		strb	r2, [r3]
1736:..\src/interruptions.c ****         
1737:..\src/interruptions.c ****         last_value_encoder[n_line][index] = tmp_value_encoder_32;
 5388              		.loc 1 1737 0
 5389 02ea FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5390 02ec 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5391 02f0 8648     		ldr	r0, .L380+4
 5392 02f2 1346     		mov	r3, r2
 5393 02f4 5B00     		lsls	r3, r3, #1
 5394 02f6 1344     		add	r3, r3, r2
 5395 02f8 0B44     		add	r3, r3, r1
 5396 02fa FA69     		ldr	r2, [r7, #28]
 5397 02fc 40F82320 		str	r2, [r0, r3, lsl #2]
1738:..\src/interruptions.c **** 
1739:..\src/interruptions.c ****         value_encoder = (int32)tmp_value_encoder_32;   // SSSSSSSSSSSSSSSS[16] XXXXXXXXXXXX[12] 000
 5398              		.loc 1 1739 0
 5399 0300 FB69     		ldr	r3, [r7, #28]
 5400 0302 BB62     		str	r3, [r7, #40]
1740:..\src/interruptions.c **** 
1741:..\src/interruptions.c ****         value_encoder += ((int32)g_meas[n_line].rot[index] << 16);    
 5401              		.loc 1 1741 0
 5402 0304 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5403 0306 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5404 030a 8149     		ldr	r1, .L380+8
 5405 030c 3420     		movs	r0, #52
 5406 030e 00FB02F2 		mul	r2, r0, r2
 5407 0312 0A44     		add	r2, r2, r1
 5408 0314 1344     		add	r3, r3, r2
 5409 0316 1833     		adds	r3, r3, #24
 5410 0318 93F90030 		ldrsb	r3, [r3]
 5411 031c 1B04     		lsls	r3, r3, #16
 5412 031e BA6A     		ldr	r2, [r7, #40]
 5413 0320 1344     		add	r3, r3, r2
 5414 0322 BB62     		str	r3, [r7, #40]
1742:..\src/interruptions.c ****         
1743:..\src/interruptions.c ****         if (c_mem.enc[n_line].m_mult[index] != 1.0) {
 5415              		.loc 1 1743 0
 5416 0324 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5417 0326 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5418 032a 7A48     		ldr	r0, .L380+12
 5419 032c 1346     		mov	r3, r2
 5420 032e 5B00     		lsls	r3, r3, #1
 5421 0330 1344     		add	r3, r3, r2
 5422 0332 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 129


 5423 0334 0B44     		add	r3, r3, r1
 5424 0336 6833     		adds	r3, r3, #104
 5425 0338 9B00     		lsls	r3, r3, #2
 5426 033a 0344     		add	r3, r3, r0
 5427 033c 5B68     		ldr	r3, [r3, #4]	@ float
 5428 033e 4FF07E51 		mov	r1, #1065353216
 5429 0342 1846     		mov	r0, r3
 5430 0344 FFF7FEFF 		bl	__aeabi_fcmpeq
 5431 0348 0346     		mov	r3, r0
 5432 034a 002B     		cmp	r3, #0
 5433 034c 1AD1     		bne	.L359
1744:..\src/interruptions.c ****             value_encoder *= c_mem.enc[n_line].m_mult[index];
 5434              		.loc 1 1744 0
 5435 034e B86A     		ldr	r0, [r7, #40]
 5436 0350 FFF7FEFF 		bl	__aeabi_i2f
 5437 0354 0446     		mov	r4, r0
 5438 0356 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5439 0358 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5440 035c 6D48     		ldr	r0, .L380+12
 5441 035e 1346     		mov	r3, r2
 5442 0360 5B00     		lsls	r3, r3, #1
 5443 0362 1344     		add	r3, r3, r2
 5444 0364 9B00     		lsls	r3, r3, #2
 5445 0366 0B44     		add	r3, r3, r1
 5446 0368 6833     		adds	r3, r3, #104
 5447 036a 9B00     		lsls	r3, r3, #2
 5448 036c 0344     		add	r3, r3, r0
 5449 036e 5B68     		ldr	r3, [r3, #4]	@ float
 5450 0370 1946     		mov	r1, r3
 5451 0372 2046     		mov	r0, r4
 5452 0374 FFF7FEFF 		bl	__aeabi_fmul
 5453 0378 0346     		mov	r3, r0
 5454 037a 1846     		mov	r0, r3
 5455 037c FFF7FEFF 		bl	__aeabi_f2iz
 5456 0380 0346     		mov	r3, r0
 5457 0382 BB62     		str	r3, [r7, #40]
 5458              	.L359:
1745:..\src/interruptions.c ****         }
1746:..\src/interruptions.c **** 
1747:..\src/interruptions.c ****         if (c_mem.dev.dev_type == SOFTHAND_PRO) {
 5459              		.loc 1 1747 0
 5460 0384 634B     		ldr	r3, .L380+12
 5461 0386 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5462 038a 002B     		cmp	r3, #0
 5463 038c 0BD1     		bne	.L361
1748:..\src/interruptions.c ****             // Right / Left hand turn
1749:..\src/interruptions.c ****             if (index == 0) {
 5464              		.loc 1 1749 0
 5465 038e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5466 0392 002B     		cmp	r3, #0
 5467 0394 07D1     		bne	.L361
1750:..\src/interruptions.c ****                 if (c_mem.dev.right_left == RIGHT_HAND){
 5468              		.loc 1 1750 0
 5469 0396 5F4B     		ldr	r3, .L380+12
 5470 0398 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 5471 039c 002B     		cmp	r3, #0
 5472 039e 02D1     		bne	.L361
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 130


1751:..\src/interruptions.c ****                     value_encoder *= -1;        
 5473              		.loc 1 1751 0
 5474 03a0 BB6A     		ldr	r3, [r7, #40]
 5475 03a2 5B42     		negs	r3, r3
 5476 03a4 BB62     		str	r3, [r7, #40]
 5477              	.L361:
1752:..\src/interruptions.c ****                 }
1753:..\src/interruptions.c ****             }
1754:..\src/interruptions.c ****         }
1755:..\src/interruptions.c ****  
1756:..\src/interruptions.c **** 
1757:..\src/interruptions.c ****         g_meas[n_line].pos[index] = value_encoder;
 5478              		.loc 1 1757 0
 5479 03a6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5480 03a8 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5481 03ac 5848     		ldr	r0, .L380+8
 5482 03ae 1346     		mov	r3, r2
 5483 03b0 5B00     		lsls	r3, r3, #1
 5484 03b2 1344     		add	r3, r3, r2
 5485 03b4 9B00     		lsls	r3, r3, #2
 5486 03b6 1344     		add	r3, r3, r2
 5487 03b8 0B44     		add	r3, r3, r1
 5488 03ba BA6A     		ldr	r2, [r7, #40]
 5489 03bc 40F82320 		str	r2, [r0, r3, lsl #2]
1758:..\src/interruptions.c ****     
1759:..\src/interruptions.c ****         speed_encoder = (int16)filter((11*value_encoder - 18* v_value[n_line][index] + 9 * vv_value
 5490              		.loc 1 1759 0
 5491 03c0 BA6A     		ldr	r2, [r7, #40]
 5492 03c2 1346     		mov	r3, r2
 5493 03c4 9B00     		lsls	r3, r3, #2
 5494 03c6 1344     		add	r3, r3, r2
 5495 03c8 5B00     		lsls	r3, r3, #1
 5496 03ca 9918     		adds	r1, r3, r2
 5497 03cc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5498 03ce 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5499 03d2 514C     		ldr	r4, .L380+16
 5500 03d4 1346     		mov	r3, r2
 5501 03d6 5B00     		lsls	r3, r3, #1
 5502 03d8 1344     		add	r3, r3, r2
 5503 03da 0344     		add	r3, r3, r0
 5504 03dc 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5505 03e0 6FF01102 		mvn	r2, #17
 5506 03e4 02FB03F3 		mul	r3, r2, r3
 5507 03e8 1944     		add	r1, r1, r3
 5508 03ea FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5509 03ec 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5510 03f0 4A4C     		ldr	r4, .L380+20
 5511 03f2 1346     		mov	r3, r2
 5512 03f4 5B00     		lsls	r3, r3, #1
 5513 03f6 1344     		add	r3, r3, r2
 5514 03f8 0344     		add	r3, r3, r0
 5515 03fa 54F82320 		ldr	r2, [r4, r3, lsl #2]
 5516 03fe 1346     		mov	r3, r2
 5517 0400 DB00     		lsls	r3, r3, #3
 5518 0402 1344     		add	r3, r3, r2
 5519 0404 1944     		add	r1, r1, r3
 5520 0406 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 131


 5521 0408 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5522 040c 444C     		ldr	r4, .L380+24
 5523 040e 1346     		mov	r3, r2
 5524 0410 5B00     		lsls	r3, r3, #1
 5525 0412 1344     		add	r3, r3, r2
 5526 0414 0344     		add	r3, r3, r0
 5527 0416 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5528 041a 5B00     		lsls	r3, r3, #1
 5529 041c C81A     		subs	r0, r1, r3
 5530 041e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5531 0422 DB00     		lsls	r3, r3, #3
 5532 0424 3F4A     		ldr	r2, .L380+28
 5533 0426 1344     		add	r3, r3, r2
 5534 0428 1946     		mov	r1, r3
 5535 042a FFF7FEFF 		bl	filter
 5536 042e 0346     		mov	r3, r0
 5537 0430 1BB2     		sxth	r3, r3
 5538 0432 7B61     		str	r3, [r7, #20]
1760:..\src/interruptions.c **** 
1761:..\src/interruptions.c ****         //Update current speed
1762:..\src/interruptions.c ****         speed_encoder = speed_encoder / (6*cycle_time);
 5539              		.loc 1 1762 0
 5540 0434 7869     		ldr	r0, [r7, #20]
 5541 0436 FFF7FEFF 		bl	__aeabi_i2f
 5542 043a 0446     		mov	r4, r0
 5543 043c 3A4B     		ldr	r3, .L380+32
 5544 043e 1B68     		ldr	r3, [r3]	@ float
 5545 0440 3A49     		ldr	r1, .L380+36
 5546 0442 1846     		mov	r0, r3
 5547 0444 FFF7FEFF 		bl	__aeabi_fmul
 5548 0448 0346     		mov	r3, r0
 5549 044a 1946     		mov	r1, r3
 5550 044c 2046     		mov	r0, r4
 5551 044e FFF7FEFF 		bl	__aeabi_fdiv
 5552 0452 0346     		mov	r3, r0
 5553 0454 1846     		mov	r0, r3
 5554 0456 FFF7FEFF 		bl	__aeabi_f2iz
 5555 045a 0346     		mov	r3, r0
 5556 045c 7B61     		str	r3, [r7, #20]
1763:..\src/interruptions.c ****         g_meas[n_line].vel[index] = speed_encoder;
 5557              		.loc 1 1763 0
 5558 045e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5559 0460 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5560 0464 2A48     		ldr	r0, .L380+8
 5561 0466 1346     		mov	r3, r2
 5562 0468 5B00     		lsls	r3, r3, #1
 5563 046a 1344     		add	r3, r3, r2
 5564 046c 9B00     		lsls	r3, r3, #2
 5565 046e 1344     		add	r3, r3, r2
 5566 0470 0B44     		add	r3, r3, r1
 5567 0472 0633     		adds	r3, r3, #6
 5568 0474 9B00     		lsls	r3, r3, #2
 5569 0476 0344     		add	r3, r3, r0
 5570 0478 7A69     		ldr	r2, [r7, #20]
 5571 047a 5A60     		str	r2, [r3, #4]
1764:..\src/interruptions.c **** 
1765:..\src/interruptions.c ****         // update old velocity and acceleration values
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 132


1766:..\src/interruptions.c ****         vvv_value[n_line][index] = vv_value[n_line][index];
 5572              		.loc 1 1766 0
 5573 047c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5574 047e 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5575 0482 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5576 0484 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 5577 0488 244D     		ldr	r5, .L380+20
 5578 048a 0B46     		mov	r3, r1
 5579 048c 5B00     		lsls	r3, r3, #1
 5580 048e 0B44     		add	r3, r3, r1
 5581 0490 2344     		add	r3, r3, r4
 5582 0492 55F82310 		ldr	r1, [r5, r3, lsl #2]
 5583 0496 224C     		ldr	r4, .L380+24
 5584 0498 1346     		mov	r3, r2
 5585 049a 5B00     		lsls	r3, r3, #1
 5586 049c 1344     		add	r3, r3, r2
 5587 049e 0344     		add	r3, r3, r0
 5588 04a0 44F82310 		str	r1, [r4, r3, lsl #2]
1767:..\src/interruptions.c ****         vv_value[n_line][index] = v_value[n_line][index];
 5589              		.loc 1 1767 0
 5590 04a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5591 04a6 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5592 04aa F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5593 04ac 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 5594 04b0 194D     		ldr	r5, .L380+16
 5595 04b2 0B46     		mov	r3, r1
 5596 04b4 5B00     		lsls	r3, r3, #1
 5597 04b6 0B44     		add	r3, r3, r1
 5598 04b8 2344     		add	r3, r3, r4
 5599 04ba 55F82310 		ldr	r1, [r5, r3, lsl #2]
 5600 04be 174C     		ldr	r4, .L380+20
 5601 04c0 1346     		mov	r3, r2
 5602 04c2 5B00     		lsls	r3, r3, #1
 5603 04c4 1344     		add	r3, r3, r2
 5604 04c6 0344     		add	r3, r3, r0
 5605 04c8 44F82310 		str	r1, [r4, r3, lsl #2]
1768:..\src/interruptions.c ****         v_value[n_line][index] = value_encoder;
 5606              		.loc 1 1768 0
 5607 04cc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5608 04ce 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5609 04d2 1148     		ldr	r0, .L380+16
 5610 04d4 1346     		mov	r3, r2
 5611 04d6 5B00     		lsls	r3, r3, #1
 5612 04d8 1344     		add	r3, r3, r2
 5613 04da 0B44     		add	r3, r3, r1
 5614 04dc BA6A     		ldr	r2, [r7, #40]
 5615 04de 40F82320 		str	r2, [r0, r3, lsl #2]
1769:..\src/interruptions.c **** 
1770:..\src/interruptions.c ****         // wait at least 3 * max_num_of_error (10) + 5 = 35 cycles to reconstruct the right turn
1771:..\src/interruptions.c ****         if (pos_reconstruct[n_line] == FALSE){
 5616              		.loc 1 1771 0
 5617 04e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5618 04e4 124A     		ldr	r2, .L380+40
 5619 04e6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5620 04e8 002B     		cmp	r3, #0
 5621 04ea 40F03B81 		bne	.L362
1772:..\src/interruptions.c ****             if (one_time_execute[n_line] < 34) 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 133


 5622              		.loc 1 1772 0
 5623 04ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5624 04f0 104A     		ldr	r2, .L380+44
 5625 04f2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5626 04f4 212B     		cmp	r3, #33
 5627 04f6 1FD8     		bhi	.L363
1773:..\src/interruptions.c ****                 one_time_execute[n_line]++;
 5628              		.loc 1 1773 0
 5629 04f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5630 04fa 0E4A     		ldr	r2, .L380+44
 5631 04fc D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 5632 04fe 0132     		adds	r2, r2, #1
 5633 0500 D1B2     		uxtb	r1, r2
 5634 0502 0C4A     		ldr	r2, .L380+44
 5635 0504 D154     		strb	r1, [r2, r3]
 5636 0506 2DE1     		b	.L362
 5637              	.L381:
 5638              		.align	2
 5639              	.L380:
 5640 0508 10010000 		.word	error.10606
 5641 050c E0000000 		.word	last_value_encoder.10604
 5642 0510 00000000 		.word	g_meas
 5643 0514 00000000 		.word	c_mem
 5644 0518 18010000 		.word	v_value.10612
 5645 051c 30010000 		.word	vv_value.10613
 5646 0520 48010000 		.word	vvv_value.10614
 5647 0524 00000000 		.word	filt_vel
 5648 0528 00000000 		.word	cycle_time
 5649 052c 0000C040 		.word	1086324736
 5650 0530 60010000 		.word	pos_reconstruct.10611
 5651 0534 64010000 		.word	one_time_execute.10609
 5652              	.L363:
1774:..\src/interruptions.c ****             else {
1775:..\src/interruptions.c ****                 //Double encoder translation
1776:..\src/interruptions.c ****                 if (c_mem.enc[n_line].double_encoder_on_off){
 5653              		.loc 1 1776 0
 5654 0538 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5655 053a AE49     		ldr	r1, .L382
 5656 053c 1346     		mov	r3, r2
 5657 053e 5B00     		lsls	r3, r3, #1
 5658 0540 1344     		add	r3, r3, r2
 5659 0542 1B01     		lsls	r3, r3, #4
 5660 0544 0B44     		add	r3, r3, r1
 5661 0546 03F5D873 		add	r3, r3, #432
 5662 054a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5663 054c 002B     		cmp	r3, #0
 5664 054e 5ED0     		beq	.L364
1777:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 5665              		.loc 1 1777 0
 5666 0550 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5667 0552 A949     		ldr	r1, .L382+4
 5668 0554 1346     		mov	r3, r2
 5669 0556 5B00     		lsls	r3, r3, #1
 5670 0558 1344     		add	r3, r3, r2
 5671 055a 9B00     		lsls	r3, r3, #2
 5672 055c 0B44     		add	r3, r3, r1
 5673 055e 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 134


 5674 0560 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5675 0562 A549     		ldr	r1, .L382+4
 5676 0564 1346     		mov	r3, r2
 5677 0566 5B00     		lsls	r3, r3, #1
 5678 0568 1344     		add	r3, r3, r2
 5679 056a 9B00     		lsls	r3, r3, #2
 5680 056c 0B44     		add	r3, r3, r1
 5681 056e 0433     		adds	r3, r3, #4
 5682 0570 1C68     		ldr	r4, [r3]
1778:..\src/interruptions.c ****                                 c_mem.enc[n_line].gears_params[0], c_mem.enc[n_line].gears_params[1
 5683              		.loc 1 1778 0
 5684 0572 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5685 0574 9F49     		ldr	r1, .L382
 5686 0576 1346     		mov	r3, r2
 5687 0578 5B00     		lsls	r3, r3, #1
 5688 057a 1344     		add	r3, r3, r2
 5689 057c 1B01     		lsls	r3, r3, #4
 5690 057e 0B44     		add	r3, r3, r1
 5691 0580 03F2B513 		addw	r3, r3, #437
 5692 0584 93F90030 		ldrsb	r3, [r3]
1777:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 5693              		.loc 1 1777 0
 5694 0588 1D46     		mov	r5, r3
 5695              		.loc 1 1778 0
 5696 058a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5697 058c 9949     		ldr	r1, .L382
 5698 058e 1346     		mov	r3, r2
 5699 0590 5B00     		lsls	r3, r3, #1
 5700 0592 1344     		add	r3, r3, r2
 5701 0594 1B01     		lsls	r3, r3, #4
 5702 0596 0B44     		add	r3, r3, r1
 5703 0598 03F5DB73 		add	r3, r3, #438
 5704 059c 93F90030 		ldrsb	r3, [r3]
1777:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 5705              		.loc 1 1777 0
 5706 05a0 1E46     		mov	r6, r3
 5707              		.loc 1 1778 0
 5708 05a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5709 05a4 9349     		ldr	r1, .L382
 5710 05a6 1346     		mov	r3, r2
 5711 05a8 5B00     		lsls	r3, r3, #1
 5712 05aa 1344     		add	r3, r3, r2
 5713 05ac 1B01     		lsls	r3, r3, #4
 5714 05ae 0B44     		add	r3, r3, r1
 5715 05b0 03F2B713 		addw	r3, r3, #439
 5716 05b4 93F90030 		ldrsb	r3, [r3]
1777:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 5717              		.loc 1 1777 0
 5718 05b8 0093     		str	r3, [sp]
 5719 05ba 3346     		mov	r3, r6
 5720 05bc 2A46     		mov	r2, r5
 5721 05be 2146     		mov	r1, r4
 5722 05c0 FFF7FEFF 		bl	calc_turns_fcn
 5723 05c4 0346     		mov	r3, r0
 5724 05c6 87F82730 		strb	r3, [r7, #39]
1779:..\src/interruptions.c **** 
1780:..\src/interruptions.c ****                     if (c_mem.enc[n_line].m_mult[0] < 0)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 135


 5725              		.loc 1 1780 0
 5726 05ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5727 05cc 8949     		ldr	r1, .L382
 5728 05ce 1346     		mov	r3, r2
 5729 05d0 5B00     		lsls	r3, r3, #1
 5730 05d2 1344     		add	r3, r3, r2
 5731 05d4 1B01     		lsls	r3, r3, #4
 5732 05d6 0B44     		add	r3, r3, r1
 5733 05d8 03F5D273 		add	r3, r3, #420
 5734 05dc 1B68     		ldr	r3, [r3]	@ float
 5735 05de 4FF00001 		mov	r1, #0
 5736 05e2 1846     		mov	r0, r3
 5737 05e4 FFF7FEFF 		bl	__aeabi_fcmplt
 5738 05e8 0346     		mov	r3, r0
 5739 05ea 002B     		cmp	r3, #0
 5740 05ec 05D0     		beq	.L365
1781:..\src/interruptions.c ****                         init_rot = -init_rot;
 5741              		.loc 1 1781 0
 5742 05ee 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5743 05f2 5B42     		negs	r3, r3
 5744 05f4 DBB2     		uxtb	r3, r3
 5745 05f6 87F82730 		strb	r3, [r7, #39]
 5746              	.L365:
1782:..\src/interruptions.c ****                     
1783:..\src/interruptions.c ****                     g_meas[n_line].rot[0] = (int8)init_rot;
 5747              		.loc 1 1783 0
 5748 05fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5749 05fc 7F4A     		ldr	r2, .L382+8
 5750 05fe 3421     		movs	r1, #52
 5751 0600 01FB03F3 		mul	r3, r1, r3
 5752 0604 1344     		add	r3, r3, r2
 5753 0606 1833     		adds	r3, r3, #24
 5754 0608 97F82720 		ldrb	r2, [r7, #39]
 5755 060c 1A70     		strb	r2, [r3]
 5756              	.L364:
1784:..\src/interruptions.c ****                 }    
1785:..\src/interruptions.c **** 
1786:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0)
 5757              		.loc 1 1786 0
 5758 060e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5759 0610 7849     		ldr	r1, .L382
 5760 0612 1346     		mov	r3, r2
 5761 0614 5B00     		lsls	r3, r3, #1
 5762 0616 1344     		add	r3, r3, r2
 5763 0618 1B01     		lsls	r3, r3, #4
 5764 061a 0B44     		add	r3, r3, r1
 5765 061c 03F5D273 		add	r3, r3, #420
 5766 0620 1B68     		ldr	r3, [r3]	@ float
 5767 0622 4FF07E51 		mov	r1, #1065353216
 5768 0626 1846     		mov	r0, r3
 5769 0628 FFF7FEFF 		bl	__aeabi_fcmpeq
 5770 062c 0346     		mov	r3, r0
 5771 062e 002B     		cmp	r3, #0
 5772 0630 22D1     		bne	.L367
1787:..\src/interruptions.c ****                     g_meas[n_line].pos[0] /= c_mem.enc[n_line].m_mult[0];
 5773              		.loc 1 1787 0
 5774 0632 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 136


 5775 0634 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5776 0636 714A     		ldr	r2, .L382+8
 5777 0638 3421     		movs	r1, #52
 5778 063a 01FB03F3 		mul	r3, r1, r3
 5779 063e 1344     		add	r3, r3, r2
 5780 0640 1B68     		ldr	r3, [r3]
 5781 0642 1846     		mov	r0, r3
 5782 0644 FFF7FEFF 		bl	__aeabi_i2f
 5783 0648 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5784 064a 6A49     		ldr	r1, .L382
 5785 064c 1346     		mov	r3, r2
 5786 064e 5B00     		lsls	r3, r3, #1
 5787 0650 1344     		add	r3, r3, r2
 5788 0652 1B01     		lsls	r3, r3, #4
 5789 0654 0B44     		add	r3, r3, r1
 5790 0656 03F5D273 		add	r3, r3, #420
 5791 065a 1B68     		ldr	r3, [r3]	@ float
 5792 065c 1946     		mov	r1, r3
 5793 065e FFF7FEFF 		bl	__aeabi_fdiv
 5794 0662 0346     		mov	r3, r0
 5795 0664 1846     		mov	r0, r3
 5796 0666 FFF7FEFF 		bl	__aeabi_f2iz
 5797 066a 0146     		mov	r1, r0
 5798 066c 634A     		ldr	r2, .L382+8
 5799 066e 3423     		movs	r3, #52
 5800 0670 03FB04F3 		mul	r3, r3, r4
 5801 0674 1344     		add	r3, r3, r2
 5802 0676 1960     		str	r1, [r3]
 5803              	.L367:
1788:..\src/interruptions.c ****                 
1789:..\src/interruptions.c ****                 g_meas[n_line].pos[0] += (int32)(init_rot << 16);
 5804              		.loc 1 1789 0
 5805 0678 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5806 067a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5807 067c 5F49     		ldr	r1, .L382+8
 5808 067e 3420     		movs	r0, #52
 5809 0680 00FB02F2 		mul	r2, r0, r2
 5810 0684 0A44     		add	r2, r2, r1
 5811 0686 1168     		ldr	r1, [r2]
 5812 0688 97F92720 		ldrsb	r2, [r7, #39]
 5813 068c 1204     		lsls	r2, r2, #16
 5814 068e 0A44     		add	r2, r2, r1
 5815 0690 5A49     		ldr	r1, .L382+8
 5816 0692 3420     		movs	r0, #52
 5817 0694 00FB03F3 		mul	r3, r0, r3
 5818 0698 0B44     		add	r3, r3, r1
 5819 069a 1A60     		str	r2, [r3]
1790:..\src/interruptions.c ****             
1791:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0)
 5820              		.loc 1 1791 0
 5821 069c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5822 069e 5549     		ldr	r1, .L382
 5823 06a0 1346     		mov	r3, r2
 5824 06a2 5B00     		lsls	r3, r3, #1
 5825 06a4 1344     		add	r3, r3, r2
 5826 06a6 1B01     		lsls	r3, r3, #4
 5827 06a8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 137


 5828 06aa 03F5D273 		add	r3, r3, #420
 5829 06ae 1B68     		ldr	r3, [r3]	@ float
 5830 06b0 4FF07E51 		mov	r1, #1065353216
 5831 06b4 1846     		mov	r0, r3
 5832 06b6 FFF7FEFF 		bl	__aeabi_fcmpeq
 5833 06ba 0346     		mov	r3, r0
 5834 06bc 002B     		cmp	r3, #0
 5835 06be 22D1     		bne	.L369
1792:..\src/interruptions.c ****                     g_meas[n_line].pos[0] *= c_mem.enc[n_line].m_mult[0];
 5836              		.loc 1 1792 0
 5837 06c0 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 5838 06c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5839 06c4 4D4A     		ldr	r2, .L382+8
 5840 06c6 3421     		movs	r1, #52
 5841 06c8 01FB03F3 		mul	r3, r1, r3
 5842 06cc 1344     		add	r3, r3, r2
 5843 06ce 1B68     		ldr	r3, [r3]
 5844 06d0 1846     		mov	r0, r3
 5845 06d2 FFF7FEFF 		bl	__aeabi_i2f
 5846 06d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5847 06d8 4649     		ldr	r1, .L382
 5848 06da 1346     		mov	r3, r2
 5849 06dc 5B00     		lsls	r3, r3, #1
 5850 06de 1344     		add	r3, r3, r2
 5851 06e0 1B01     		lsls	r3, r3, #4
 5852 06e2 0B44     		add	r3, r3, r1
 5853 06e4 03F5D273 		add	r3, r3, #420
 5854 06e8 1B68     		ldr	r3, [r3]	@ float
 5855 06ea 1946     		mov	r1, r3
 5856 06ec FFF7FEFF 		bl	__aeabi_fmul
 5857 06f0 0346     		mov	r3, r0
 5858 06f2 1846     		mov	r0, r3
 5859 06f4 FFF7FEFF 		bl	__aeabi_f2iz
 5860 06f8 0146     		mov	r1, r0
 5861 06fa 404A     		ldr	r2, .L382+8
 5862 06fc 3423     		movs	r3, #52
 5863 06fe 03FB04F3 		mul	r3, r3, r4
 5864 0702 1344     		add	r3, r3, r2
 5865 0704 1960     		str	r1, [r3]
 5866              	.L369:
1793:..\src/interruptions.c ****             
1794:..\src/interruptions.c ****                 g_refNew[assoc_motor].pos = g_meas[n_line].pos[0];
 5867              		.loc 1 1794 0
 5868 0706 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5869 0708 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5870 070a 3C49     		ldr	r1, .L382+8
 5871 070c 3420     		movs	r0, #52
 5872 070e 00FB02F2 		mul	r2, r0, r2
 5873 0712 0A44     		add	r2, r2, r1
 5874 0714 1268     		ldr	r2, [r2]
 5875 0716 3A49     		ldr	r1, .L382+12
 5876 0718 1B01     		lsls	r3, r3, #4
 5877 071a 0B44     		add	r3, r3, r1
 5878 071c 1A60     		str	r2, [r3]
1795:..\src/interruptions.c **** 
1796:..\src/interruptions.c ****                 // If necessary activate motor
1797:..\src/interruptions.c ****     			safe_startup_motor_activation[n_line] = TRUE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 138


 5879              		.loc 1 1797 0
 5880 071e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5881 0720 384A     		ldr	r2, .L382+16
 5882 0722 0121     		movs	r1, #1
 5883 0724 D154     		strb	r1, [r2, r3]
1798:..\src/interruptions.c ****                 // Activate the motor associated to this encoder line
1799:..\src/interruptions.c ****                 g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 5884              		.loc 1 1799 0
 5885 0726 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 5886 0728 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5887 072a 3248     		ldr	r0, .L382
 5888 072c 1346     		mov	r3, r2
 5889 072e DB00     		lsls	r3, r3, #3
 5890 0730 9B1A     		subs	r3, r3, r2
 5891 0732 1B01     		lsls	r3, r3, #4
 5892 0734 0344     		add	r3, r3, r0
 5893 0736 E033     		adds	r3, r3, #224
 5894 0738 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5895 073a 314A     		ldr	r2, .L382+12
 5896 073c 0B01     		lsls	r3, r1, #4
 5897 073e 1344     		add	r3, r3, r2
 5898 0740 0C33     		adds	r3, r3, #12
 5899 0742 0246     		mov	r2, r0
 5900 0744 1A70     		strb	r2, [r3]
1800:..\src/interruptions.c ****                 enable_motor(assoc_motor, g_refNew[assoc_motor].onoff);                
 5901              		.loc 1 1800 0
 5902 0746 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5903 0748 2D4A     		ldr	r2, .L382+12
 5904 074a 1B01     		lsls	r3, r3, #4
 5905 074c 1344     		add	r3, r3, r2
 5906 074e 0C33     		adds	r3, r3, #12
 5907 0750 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5908 0752 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5909 0754 1146     		mov	r1, r2
 5910 0756 1846     		mov	r0, r3
 5911 0758 FFF7FEFF 		bl	enable_motor
1801:..\src/interruptions.c ****                 
1802:..\src/interruptions.c ****                 pos_reconstruct[n_line] = TRUE;
 5912              		.loc 1 1802 0
 5913 075c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5914 075e 2A4A     		ldr	r2, .L382+20
 5915 0760 0121     		movs	r1, #1
 5916 0762 D154     		strb	r1, [r2, r3]
 5917              	.L362:
1675:..\src/interruptions.c ****         
 5918              		.loc 1 1675 0 discriminator 2
 5919 0764 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5920 0768 0133     		adds	r3, r3, #1
 5921 076a 87F82F30 		strb	r3, [r7, #47]
 5922              	.L351:
1675:..\src/interruptions.c ****         
 5923              		.loc 1 1675 0 is_stmt 0 discriminator 1
 5924 076e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5925 0772 022B     		cmp	r3, #2
 5926 0774 7FF6C7AC 		bls	.L371
1803:..\src/interruptions.c ****             }
1804:..\src/interruptions.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 139


1805:..\src/interruptions.c ****     } 
1806:..\src/interruptions.c **** 
1807:..\src/interruptions.c **** 	
1808:..\src/interruptions.c **** 	// Wait for 35+SAFE_STARTUP_MOTOR_READINGS cycles before starting motors
1809:..\src/interruptions.c ****     if (safe_startup_motor_activation[n_line]){
 5927              		.loc 1 1809 0 is_stmt 1
 5928 0778 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5929 077a 224A     		ldr	r2, .L382+16
 5930 077c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5931 077e 002B     		cmp	r3, #0
 5932 0780 35D0     		beq	.L342
1810:..\src/interruptions.c ****         count_startup_motor[n_line]++;
 5933              		.loc 1 1810 0
 5934 0782 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5935 0784 214A     		ldr	r2, .L382+24
 5936 0786 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5937 078a 0132     		adds	r2, r2, #1
 5938 078c 1F49     		ldr	r1, .L382+24
 5939 078e 41F82320 		str	r2, [r1, r3, lsl #2]
1811:..\src/interruptions.c ****         if (count_startup_motor[n_line] >= (uint32)SAFE_STARTUP_MOTOR_READINGS) {                  
 5940              		.loc 1 1811 0
 5941 0792 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5942 0794 1D4A     		ldr	r2, .L382+24
 5943 0796 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5944 079a B3F5FA5F 		cmp	r3, #8000
 5945 079e 26D3     		bcc	.L342
1812:..\src/interruptions.c ****             g_refNew[assoc_motor].pos = 0;
 5946              		.loc 1 1812 0
 5947 07a0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5948 07a2 174A     		ldr	r2, .L382+12
 5949 07a4 1B01     		lsls	r3, r3, #4
 5950 07a6 1344     		add	r3, r3, r2
 5951 07a8 0022     		movs	r2, #0
 5952 07aa 1A60     		str	r2, [r3]
1813:..\src/interruptions.c ****             
1814:..\src/interruptions.c ****             // Activate the motor associated to this encoder line
1815:..\src/interruptions.c ****             g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 5953              		.loc 1 1815 0
 5954 07ac B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 5955 07ae BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5956 07b0 1048     		ldr	r0, .L382
 5957 07b2 1346     		mov	r3, r2
 5958 07b4 DB00     		lsls	r3, r3, #3
 5959 07b6 9B1A     		subs	r3, r3, r2
 5960 07b8 1B01     		lsls	r3, r3, #4
 5961 07ba 0344     		add	r3, r3, r0
 5962 07bc E033     		adds	r3, r3, #224
 5963 07be 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5964 07c0 0F4A     		ldr	r2, .L382+12
 5965 07c2 0B01     		lsls	r3, r1, #4
 5966 07c4 1344     		add	r3, r3, r2
 5967 07c6 0C33     		adds	r3, r3, #12
 5968 07c8 0246     		mov	r2, r0
 5969 07ca 1A70     		strb	r2, [r3]
1816:..\src/interruptions.c ****             enable_motor(assoc_motor, g_refNew[assoc_motor].onoff); 
 5970              		.loc 1 1816 0
 5971 07cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 140


 5972 07ce 0C4A     		ldr	r2, .L382+12
 5973 07d0 1B01     		lsls	r3, r3, #4
 5974 07d2 1344     		add	r3, r3, r2
 5975 07d4 0C33     		adds	r3, r3, #12
 5976 07d6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5977 07d8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5978 07da 1146     		mov	r1, r2
 5979 07dc 1846     		mov	r0, r3
 5980 07de FFF7FEFF 		bl	enable_motor
1817:..\src/interruptions.c ****                         
1818:..\src/interruptions.c ****             safe_startup_motor_activation[n_line] = FALSE;
 5981              		.loc 1 1818 0
 5982 07e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5983 07e4 074A     		ldr	r2, .L382+16
 5984 07e6 0021     		movs	r1, #0
 5985 07e8 D154     		strb	r1, [r2, r3]
 5986 07ea 00E0     		b	.L342
 5987              	.L377:
1730:..\src/interruptions.c ****                 }
 5988              		.loc 1 1730 0
 5989 07ec 00BF     		nop
 5990              	.L342:
1819:..\src/interruptions.c ****         }
1820:..\src/interruptions.c ****     }
1821:..\src/interruptions.c ****  
1822:..\src/interruptions.c **** }
 5991              		.loc 1 1822 0
 5992 07ee 3437     		adds	r7, r7, #52
 5993              		.cfi_def_cfa_offset 20
 5994 07f0 BD46     		mov	sp, r7
 5995              		.cfi_def_cfa_register 13
 5996              		@ sp needed
 5997 07f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 5998              	.L383:
 5999              		.align	2
 6000              	.L382:
 6001 07f4 00000000 		.word	c_mem
 6002 07f8 F8000000 		.word	comp_value_encoder.10605
 6003 07fc 00000000 		.word	g_meas
 6004 0800 00000000 		.word	g_refNew
 6005 0804 68010000 		.word	safe_startup_motor_activation.10608
 6006 0808 60010000 		.word	pos_reconstruct.10611
 6007 080c 6C010000 		.word	count_startup_motor.10610
 6008              		.cfi_endproc
 6009              	.LFE73:
 6010              		.size	encoder_reading_SPI, .-encoder_reading_SPI
 6011              		.section	.text.analog_read_end,"ax",%progbits
 6012              		.align	2
 6013              		.global	analog_read_end
 6014              		.thumb
 6015              		.thumb_func
 6016              		.type	analog_read_end, %function
 6017              	analog_read_end:
 6018              	.LFB74:
1823:..\src/interruptions.c **** 
1824:..\src/interruptions.c **** //==============================================================================
1825:..\src/interruptions.c **** //                                                           ANALOG MEASUREMENTS
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 141


1826:..\src/interruptions.c **** //==============================================================================
1827:..\src/interruptions.c **** 
1828:..\src/interruptions.c **** void analog_read_end() {
 6019              		.loc 1 1828 0
 6020              		.cfi_startproc
 6021              		@ args = 0, pretend = 0, frame = 8
 6022              		@ frame_needed = 1, uses_anonymous_args = 0
 6023 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6024              		.cfi_def_cfa_offset 20
 6025              		.cfi_offset 4, -20
 6026              		.cfi_offset 5, -16
 6027              		.cfi_offset 6, -12
 6028              		.cfi_offset 7, -8
 6029              		.cfi_offset 14, -4
 6030 0002 83B0     		sub	sp, sp, #12
 6031              		.cfi_def_cfa_offset 32
 6032 0004 00AF     		add	r7, sp, #0
 6033              		.cfi_def_cfa_register 7
1829:..\src/interruptions.c **** 
1830:..\src/interruptions.c ****     /* =========================================================================
1831:..\src/interruptions.c ****     /   Ideal formulation to calculate tension and current
1832:..\src/interruptions.c ****     /
1833:..\src/interruptions.c ****     /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
1834:..\src/interruptions.c ****     /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
1835:..\src/interruptions.c ****     /
1836:..\src/interruptions.c ****     /   Definition:
1837:..\src/interruptions.c ****     /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
1838:..\src/interruptions.c ****     /   offset = 2000 -> hardware amplifier bias in mV
1839:..\src/interruptions.c ****     /   gain = 8.086 -> amplifier gain
1840:..\src/interruptions.c ****     /   resistor = 18 -> resistor of voltage divider in KOhm 
1841:..\src/interruptions.c ****     /
1842:..\src/interruptions.c ****     /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
1843:..\src/interruptions.c ****     /   and offset unit of measurement is counts, instead dev_tension and
1844:..\src/interruptions.c ****     /   g_meas.curr[] are converted in properly unit.
1845:..\src/interruptions.c ****     /  =========================================================================
1846:..\src/interruptions.c ****     */
1847:..\src/interruptions.c **** 
1848:..\src/interruptions.c ****     int32 CYDATA i_aux;
1849:..\src/interruptions.c **** 
1850:..\src/interruptions.c ****     static uint16 emg_counter_1 = 0;
1851:..\src/interruptions.c ****     static uint16 emg_counter_2 = 0;
1852:..\src/interruptions.c ****     static uint16 UD_counter = 0;
1853:..\src/interruptions.c ****     static uint16 LR_counter = 0;
1854:..\src/interruptions.c ****     static int32 UD_mean_value;
1855:..\src/interruptions.c ****     static int32 LR_mean_value;
1856:..\src/interruptions.c **** 	static uint8 first_tension_valid = TRUE;
1857:..\src/interruptions.c ****     //static int32 pow_tension = 12000;       //12000 mV (12 V)
1858:..\src/interruptions.c ****     static uint16 count = 0;
1859:..\src/interruptions.c ****     static uint32 v_count = 0;
1860:..\src/interruptions.c ****     static uint8 idx = 0;
1861:..\src/interruptions.c ****     
1862:..\src/interruptions.c ****     // Wait for conversion end
1863:..\src/interruptions.c ****     
1864:..\src/interruptions.c ****     while(!ADC_STATUS_Read()){
 6034              		.loc 1 1864 0
 6035 0006 08E0     		b	.L385
 6036              	.L386:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 142


1865:..\src/interruptions.c ****         
1866:..\src/interruptions.c ****         if (interrupt_flag){
 6037              		.loc 1 1866 0
 6038 0008 A84B     		ldr	r3, .L539
 6039 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6040 000c 002B     		cmp	r3, #0
 6041 000e 04D0     		beq	.L385
1867:..\src/interruptions.c ****             interrupt_flag = FALSE;
 6042              		.loc 1 1867 0
 6043 0010 A64B     		ldr	r3, .L539
 6044 0012 0022     		movs	r2, #0
 6045 0014 1A70     		strb	r2, [r3]
1868:..\src/interruptions.c ****             interrupt_manager();
 6046              		.loc 1 1868 0
 6047 0016 FFF7FEFF 		bl	interrupt_manager
 6048              	.L385:
1864:..\src/interruptions.c ****         
 6049              		.loc 1 1864 0
 6050 001a FFF7FEFF 		bl	ADC_STATUS_Read
 6051 001e 0346     		mov	r3, r0
 6052 0020 002B     		cmp	r3, #0
 6053 0022 F1D0     		beq	.L386
1869:..\src/interruptions.c ****         }
1870:..\src/interruptions.c ****     }
1871:..\src/interruptions.c ****     
1872:..\src/interruptions.c **** #ifdef AIR_CHAMBERS_FB_FW
1873:..\src/interruptions.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
1874:..\src/interruptions.c ****         // Read pressure in any case
1875:..\src/interruptions.c ****         g_fb_meas.pressure  = (int32)(ADC_buf[0] -1540);    //0 - 4096  
1876:..\src/interruptions.c ****         g_fb_meas.pressure = (((float)g_fb_meas.pressure/4096.0)/0.004);       // datasheet transfe
1877:..\src/interruptions.c ****         if (g_fb_meas.pressure < 0) g_fb_meas.pressure = 0;
1878:..\src/interruptions.c ****     }
1879:..\src/interruptions.c **** #endif
1880:..\src/interruptions.c ****  
1881:..\src/interruptions.c ****     // Convert tension read
1882:..\src/interruptions.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
 6054              		.loc 1 1882 0
 6055 0024 A24B     		ldr	r3, .L539+4
 6056 0026 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 6057 002a 022B     		cmp	r3, #2
 6058 002c 04D1     		bne	.L387
1883:..\src/interruptions.c ****         dev_tension[0] = 5000;
 6059              		.loc 1 1883 0
 6060 002e A14B     		ldr	r3, .L539+8
 6061 0030 41F28832 		movw	r2, #5000
 6062 0034 1A60     		str	r2, [r3]
 6063 0036 0BE0     		b	.L388
 6064              	.L387:
1884:..\src/interruptions.c ****     }
1885:..\src/interruptions.c ****     else {
1886:..\src/interruptions.c ****         dev_tension[0] = ((int32)(ADC_buf[0] - 1621) * 1990) >> 7;
 6065              		.loc 1 1886 0
 6066 0038 9F4B     		ldr	r3, .L539+12
 6067 003a B3F90030 		ldrsh	r3, [r3]
 6068 003e A3F25563 		subw	r3, r3, #1621
 6069 0042 40F2C672 		movw	r2, #1990
 6070 0046 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 143


 6071 004a DB11     		asrs	r3, r3, #7
 6072 004c 994A     		ldr	r2, .L539+8
 6073 004e 1360     		str	r3, [r2]
 6074              	.L388:
1887:..\src/interruptions.c ****     }
1888:..\src/interruptions.c ****     
1889:..\src/interruptions.c ****     // Read also 2nd power tension (if necessary)
1890:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 4) {
 6075              		.loc 1 1890 0
 6076 0050 9A4B     		ldr	r3, .L539+16
 6077 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6078 0054 042B     		cmp	r3, #4
 6079 0056 0BD9     		bls	.L389
1891:..\src/interruptions.c ****         dev_tension[1] = ((int32)(ADC_buf[4] - 1621) * 1990) >> 7;
 6080              		.loc 1 1891 0
 6081 0058 974B     		ldr	r3, .L539+12
 6082 005a B3F90830 		ldrsh	r3, [r3, #8]
 6083 005e A3F25563 		subw	r3, r3, #1621
 6084 0062 40F2C672 		movw	r2, #1990
 6085 0066 02FB03F3 		mul	r3, r2, r3
 6086 006a DB11     		asrs	r3, r3, #7
 6087 006c 914A     		ldr	r2, .L539+8
 6088 006e 5360     		str	r3, [r2, #4]
 6089              	.L389:
1892:..\src/interruptions.c ****     }
1893:..\src/interruptions.c ****     
1894:..\src/interruptions.c ****     if (interrupt_flag){
 6090              		.loc 1 1894 0
 6091 0070 8E4B     		ldr	r3, .L539
 6092 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6093 0074 002B     		cmp	r3, #0
 6094 0076 04D0     		beq	.L390
1895:..\src/interruptions.c ****         interrupt_flag = FALSE;                                                                    
 6095              		.loc 1 1895 0
 6096 0078 8C4B     		ldr	r3, .L539
 6097 007a 0022     		movs	r2, #0
 6098 007c 1A70     		strb	r2, [r3]
1896:..\src/interruptions.c ****         interrupt_manager();
 6099              		.loc 1 1896 0
 6100 007e FFF7FEFF 		bl	interrupt_manager
 6101              	.L390:
1897:..\src/interruptions.c ****     }
1898:..\src/interruptions.c ****     
1899:..\src/interruptions.c ****     // VOLTAGE READING
1900:..\src/interruptions.c ****     // Once firmware starts, first_tension_valid flag is set to TRUE while tension_valid status is 
1901:..\src/interruptions.c ****     // Step 1) Wait for battery voltage stabilization and filter convergence for 1000 cycles (v_cou
1902:..\src/interruptions.c ****     // Step 2) Wait for another 1000 cycles (count counter) to decide which is full charge power te
1903:..\src/interruptions.c ****     // Low voltage condition) Whenever dev_tension ADC value is under 7000 mV, tension_valid flag i
1904:..\src/interruptions.c ****     
1905:..\src/interruptions.c **** 	if (first_tension_valid && tension_valid) {     // Voltage reading (Step 2)
 6102              		.loc 1 1905 0
 6103 0082 8F4B     		ldr	r3, .L539+20
 6104 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6105 0086 002B     		cmp	r3, #0
 6106 0088 4DD0     		beq	.L391
 6107              		.loc 1 1905 0 is_stmt 0 discriminator 1
 6108 008a 8E4B     		ldr	r3, .L539+24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 144


 6109 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6110 008e 002B     		cmp	r3, #0
 6111 0090 49D0     		beq	.L391
1906:..\src/interruptions.c ****         count = count + 1;
 6112              		.loc 1 1906 0 is_stmt 1
 6113 0092 8D4B     		ldr	r3, .L539+28
 6114 0094 1B88     		ldrh	r3, [r3]
 6115 0096 0133     		adds	r3, r3, #1
 6116 0098 9AB2     		uxth	r2, r3
 6117 009a 8B4B     		ldr	r3, .L539+28
 6118 009c 1A80     		strh	r2, [r3]	@ movhi
1907:..\src/interruptions.c ****         
1908:..\src/interruptions.c ****         if (count == 1000){
 6119              		.loc 1 1908 0
 6120 009e 8A4B     		ldr	r3, .L539+28
 6121 00a0 1B88     		ldrh	r3, [r3]
 6122 00a2 B3F57A7F 		cmp	r3, #1000
 6123 00a6 3ED1     		bne	.L391
1909:..\src/interruptions.c ****             for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 6124              		.loc 1 1909 0
 6125 00a8 884B     		ldr	r3, .L539+32
 6126 00aa 0022     		movs	r2, #0
 6127 00ac 1A70     		strb	r2, [r3]
 6128 00ae 33E0     		b	.L392
 6129              	.L396:
1910:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 6130              		.loc 1 1910 0
 6131 00b0 864B     		ldr	r3, .L539+32
 6132 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6133 00b4 1A46     		mov	r2, r3
 6134 00b6 7F4B     		ldr	r3, .L539+8
 6135 00b8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6136 00bc 42F22732 		movw	r2, #8999
 6137 00c0 9342     		cmp	r3, r2
 6138 00c2 08DC     		bgt	.L393
1911:..\src/interruptions.c ****                     pow_tension[idx] = 8000;
 6139              		.loc 1 1911 0
 6140 00c4 814B     		ldr	r3, .L539+32
 6141 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6142 00c8 1946     		mov	r1, r3
 6143 00ca 814B     		ldr	r3, .L539+36
 6144 00cc 4FF4FA52 		mov	r2, #8000
 6145 00d0 43F82120 		str	r2, [r3, r1, lsl #2]
 6146 00d4 1AE0     		b	.L394
 6147              	.L393:
1912:..\src/interruptions.c ****                 }
1913:..\src/interruptions.c ****                 else {      // 12 V - 24 V cases
1914:..\src/interruptions.c ****                     if (dev_tension[idx] < 13000) {
 6148              		.loc 1 1914 0
 6149 00d6 7D4B     		ldr	r3, .L539+32
 6150 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6151 00da 1A46     		mov	r2, r3
 6152 00dc 754B     		ldr	r3, .L539+8
 6153 00de 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6154 00e2 43F2C722 		movw	r2, #12999
 6155 00e6 9342     		cmp	r3, r2
 6156 00e8 08DC     		bgt	.L395
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 145


1915:..\src/interruptions.c ****                         pow_tension[idx] = 12000;
 6157              		.loc 1 1915 0
 6158 00ea 784B     		ldr	r3, .L539+32
 6159 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6160 00ee 1946     		mov	r1, r3
 6161 00f0 774B     		ldr	r3, .L539+36
 6162 00f2 42F6E062 		movw	r2, #12000
 6163 00f6 43F82120 		str	r2, [r3, r1, lsl #2]
 6164 00fa 07E0     		b	.L394
 6165              	.L395:
1916:..\src/interruptions.c ****                     }
1917:..\src/interruptions.c ****                     else
1918:..\src/interruptions.c ****                         pow_tension[idx] = 24000;
 6166              		.loc 1 1918 0
 6167 00fc 734B     		ldr	r3, .L539+32
 6168 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6169 0100 1946     		mov	r1, r3
 6170 0102 734B     		ldr	r3, .L539+36
 6171 0104 45F6C052 		movw	r2, #24000
 6172 0108 43F82120 		str	r2, [r3, r1, lsl #2]
 6173              	.L394:
1909:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 6174              		.loc 1 1909 0 discriminator 2
 6175 010c 6F4B     		ldr	r3, .L539+32
 6176 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6177 0110 0133     		adds	r3, r3, #1
 6178 0112 DAB2     		uxtb	r2, r3
 6179 0114 6D4B     		ldr	r3, .L539+32
 6180 0116 1A70     		strb	r2, [r3]
 6181              	.L392:
1909:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 6182              		.loc 1 1909 0 is_stmt 0 discriminator 1
 6183 0118 6C4B     		ldr	r3, .L539+32
 6184 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6185 011c 012B     		cmp	r3, #1
 6186 011e C7D9     		bls	.L396
1919:..\src/interruptions.c ****                 }
1920:..\src/interruptions.c ****             }
1921:..\src/interruptions.c ****             first_tension_valid = FALSE;
 6187              		.loc 1 1921 0 is_stmt 1
 6188 0120 674B     		ldr	r3, .L539+20
 6189 0122 0022     		movs	r2, #0
 6190 0124 1A70     		strb	r2, [r3]
 6191              	.L391:
1922:..\src/interruptions.c ****         }
1923:..\src/interruptions.c ****     }
1924:..\src/interruptions.c **** 
1925:..\src/interruptions.c ****     // Until there is no valid input tension repeat this measurement
1926:..\src/interruptions.c **** 
1927:..\src/interruptions.c ****     if (dev_tension[0] < 7000 && (NUM_OF_ANALOG_INPUTS<=4 || dev_tension[1] < 7000)) {       // Vol
 6192              		.loc 1 1927 0
 6193 0126 634B     		ldr	r3, .L539+8
 6194 0128 1B68     		ldr	r3, [r3]
 6195 012a 41F65732 		movw	r2, #6999
 6196 012e 9342     		cmp	r3, r2
 6197 0130 00F3F080 		bgt	.L397
 6198              		.loc 1 1927 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 146


 6199 0134 614B     		ldr	r3, .L539+16
 6200 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6201 0138 042B     		cmp	r3, #4
 6202 013a 06D9     		bls	.L398
 6203              		.loc 1 1927 0 discriminator 2
 6204 013c 5D4B     		ldr	r3, .L539+8
 6205 013e 5B68     		ldr	r3, [r3, #4]
 6206 0140 41F65732 		movw	r2, #6999
 6207 0144 9342     		cmp	r3, r2
 6208 0146 00F3E580 		bgt	.L397
 6209              	.L398:
1928:..\src/interruptions.c ****         // PSoC is powered through uUSB
1929:..\src/interruptions.c ****         
1930:..\src/interruptions.c ****         tension_valid = FALSE;
 6210              		.loc 1 1930 0 is_stmt 1
 6211 014a 5E4B     		ldr	r3, .L539+24
 6212 014c 0022     		movs	r2, #0
 6213 014e 1A70     		strb	r2, [r3]
1931:..\src/interruptions.c ****             
1932:..\src/interruptions.c ****         if (interrupt_flag){
 6214              		.loc 1 1932 0
 6215 0150 564B     		ldr	r3, .L539
 6216 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6217 0154 002B     		cmp	r3, #0
 6218 0156 04D0     		beq	.L399
1933:..\src/interruptions.c ****             interrupt_flag = FALSE;
 6219              		.loc 1 1933 0
 6220 0158 544B     		ldr	r3, .L539
 6221 015a 0022     		movs	r2, #0
 6222 015c 1A70     		strb	r2, [r3]
1934:..\src/interruptions.c ****             interrupt_manager();
 6223              		.loc 1 1934 0
 6224 015e FFF7FEFF 		bl	interrupt_manager
 6225              	.L399:
1935:..\src/interruptions.c ****         }
1936:..\src/interruptions.c ****         
1937:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 6226              		.loc 1 1937 0
 6227 0162 5A4B     		ldr	r3, .L539+32
 6228 0164 0022     		movs	r2, #0
 6229 0166 1A70     		strb	r2, [r3]
 6230 0168 81E0     		b	.L400
 6231              	.L403:
1938:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 6232              		.loc 1 1938 0
 6233 016a 5A4B     		ldr	r3, .L539+40
 6234 016c 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6235 0170 002B     		cmp	r3, #0
 6236 0172 59D0     		beq	.L401
1939:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6237              		.loc 1 1939 0
 6238 0174 554B     		ldr	r3, .L539+32
 6239 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6240 0178 1946     		mov	r1, r3
 6241 017a 564A     		ldr	r2, .L539+40
 6242 017c 0B46     		mov	r3, r1
 6243 017e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 147


 6244 0180 5B1A     		subs	r3, r3, r1
 6245 0182 1B01     		lsls	r3, r3, #4
 6246 0184 1344     		add	r3, r3, r2
 6247 0186 03F58773 		add	r3, r3, #270
 6248 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6249 018c 022B     		cmp	r3, #2
 6250 018e 37D0     		beq	.L402
1940:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 6251              		.loc 1 1940 0 discriminator 1
 6252 0190 4E4B     		ldr	r3, .L539+32
 6253 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6254 0194 1946     		mov	r1, r3
 6255 0196 4F4A     		ldr	r2, .L539+40
 6256 0198 0B46     		mov	r3, r1
 6257 019a DB00     		lsls	r3, r3, #3
 6258 019c 5B1A     		subs	r3, r3, r1
 6259 019e 1B01     		lsls	r3, r3, #4
 6260 01a0 1344     		add	r3, r3, r2
 6261 01a2 03F58773 		add	r3, r3, #270
 6262 01a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1939:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6263              		.loc 1 1939 0 discriminator 1
 6264 01a8 032B     		cmp	r3, #3
 6265 01aa 29D0     		beq	.L402
1941:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 6266              		.loc 1 1941 0
 6267 01ac 474B     		ldr	r3, .L539+32
 6268 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6269 01b0 1946     		mov	r1, r3
 6270 01b2 484A     		ldr	r2, .L539+40
 6271 01b4 0B46     		mov	r3, r1
 6272 01b6 DB00     		lsls	r3, r3, #3
 6273 01b8 5B1A     		subs	r3, r3, r1
 6274 01ba 1B01     		lsls	r3, r3, #4
 6275 01bc 1344     		add	r3, r3, r2
 6276 01be 03F58773 		add	r3, r3, #270
 6277 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1940:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 6278              		.loc 1 1940 0
 6279 01c4 042B     		cmp	r3, #4
 6280 01c6 1BD0     		beq	.L402
1942:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 6281              		.loc 1 1942 0
 6282 01c8 404B     		ldr	r3, .L539+32
 6283 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6284 01cc 1946     		mov	r1, r3
 6285 01ce 414A     		ldr	r2, .L539+40
 6286 01d0 0B46     		mov	r3, r1
 6287 01d2 DB00     		lsls	r3, r3, #3
 6288 01d4 5B1A     		subs	r3, r3, r1
 6289 01d6 1B01     		lsls	r3, r3, #4
 6290 01d8 1344     		add	r3, r3, r2
 6291 01da 03F58773 		add	r3, r3, #270
 6292 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1941:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 6293              		.loc 1 1941 0
 6294 01e0 052B     		cmp	r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 148


 6295 01e2 0DD0     		beq	.L402
1943:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 6296              		.loc 1 1943 0
 6297 01e4 394B     		ldr	r3, .L539+32
 6298 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6299 01e8 1946     		mov	r1, r3
 6300 01ea 3A4A     		ldr	r2, .L539+40
 6301 01ec 0B46     		mov	r3, r1
 6302 01ee DB00     		lsls	r3, r3, #3
 6303 01f0 5B1A     		subs	r3, r3, r1
 6304 01f2 1B01     		lsls	r3, r3, #4
 6305 01f4 1344     		add	r3, r3, r2
 6306 01f6 03F58773 		add	r3, r3, #270
 6307 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1942:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 6308              		.loc 1 1942 0
 6309 01fc 072B     		cmp	r3, #7
 6310 01fe 13D1     		bne	.L401
 6311              	.L402:
1944:..\src/interruptions.c ****                     g_ref[idx].onoff = 0x00;
 6312              		.loc 1 1944 0
 6313 0200 324B     		ldr	r3, .L539+32
 6314 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6315 0204 344A     		ldr	r2, .L539+44
 6316 0206 1B01     		lsls	r3, r3, #4
 6317 0208 1344     		add	r3, r3, r2
 6318 020a 0C33     		adds	r3, r3, #12
 6319 020c 0022     		movs	r2, #0
 6320 020e 1A70     		strb	r2, [r3]
1945:..\src/interruptions.c ****                     enable_motor(idx, g_ref[idx].onoff); 
 6321              		.loc 1 1945 0
 6322 0210 2E4B     		ldr	r3, .L539+32
 6323 0212 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6324 0214 2D4B     		ldr	r3, .L539+32
 6325 0216 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6326 0218 2F4A     		ldr	r2, .L539+44
 6327 021a 1B01     		lsls	r3, r3, #4
 6328 021c 1344     		add	r3, r3, r2
 6329 021e 0C33     		adds	r3, r3, #12
 6330 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6331 0222 1946     		mov	r1, r3
 6332 0224 FFF7FEFF 		bl	enable_motor
 6333              	.L401:
1946:..\src/interruptions.c ****                     
1947:..\src/interruptions.c ****                 }
1948:..\src/interruptions.c ****             }
1949:..\src/interruptions.c **** 
1950:..\src/interruptions.c ****             // Assign dev_tension and reset current
1951:..\src/interruptions.c ****             dev_tension[idx] = 5000;
 6334              		.loc 1 1951 0 discriminator 2
 6335 0228 284B     		ldr	r3, .L539+32
 6336 022a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6337 022c 1946     		mov	r1, r3
 6338 022e 214B     		ldr	r3, .L539+8
 6339 0230 41F28832 		movw	r2, #5000
 6340 0234 43F82120 		str	r2, [r3, r1, lsl #2]
1952:..\src/interruptions.c ****             g_meas[g_mem.motor[idx].encoder_line].curr = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 149


 6341              		.loc 1 1952 0 discriminator 2
 6342 0238 244B     		ldr	r3, .L539+32
 6343 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6344 023c 1946     		mov	r1, r3
 6345 023e 1C4A     		ldr	r2, .L539+4
 6346 0240 0B46     		mov	r3, r1
 6347 0242 DB00     		lsls	r3, r3, #3
 6348 0244 5B1A     		subs	r3, r3, r1
 6349 0246 1B01     		lsls	r3, r3, #4
 6350 0248 1344     		add	r3, r3, r2
 6351 024a 03F58873 		add	r3, r3, #272
 6352 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6353 0250 1946     		mov	r1, r3
 6354 0252 224A     		ldr	r2, .L539+48
 6355 0254 3423     		movs	r3, #52
 6356 0256 03FB01F3 		mul	r3, r3, r1
 6357 025a 1344     		add	r3, r3, r2
 6358 025c 0C33     		adds	r3, r3, #12
 6359 025e 0022     		movs	r2, #0
 6360 0260 1A60     		str	r2, [r3]
1937:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 6361              		.loc 1 1937 0 discriminator 2
 6362 0262 1A4B     		ldr	r3, .L539+32
 6363 0264 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6364 0266 0133     		adds	r3, r3, #1
 6365 0268 DAB2     		uxtb	r2, r3
 6366 026a 184B     		ldr	r3, .L539+32
 6367 026c 1A70     		strb	r2, [r3]
 6368              	.L400:
1937:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 6369              		.loc 1 1937 0 is_stmt 0 discriminator 1
 6370 026e 174B     		ldr	r3, .L539+32
 6371 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6372 0272 012B     		cmp	r3, #1
 6373 0274 7FF679AF 		bls	.L403
1953:..\src/interruptions.c ****         }
1954:..\src/interruptions.c ****         
1955:..\src/interruptions.c ****         // Reset emg
1956:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_INPUT_EMGS; idx++){
 6374              		.loc 1 1956 0 is_stmt 1
 6375 0278 144B     		ldr	r3, .L539+32
 6376 027a 0022     		movs	r2, #0
 6377 027c 1A70     		strb	r2, [r3]
 6378 027e 0CE0     		b	.L404
 6379              	.L405:
1957:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 6380              		.loc 1 1957 0 discriminator 3
 6381 0280 124B     		ldr	r3, .L539+32
 6382 0282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6383 0284 1946     		mov	r1, r3
 6384 0286 164B     		ldr	r3, .L539+52
 6385 0288 0022     		movs	r2, #0
 6386 028a 43F82120 		str	r2, [r3, r1, lsl #2]
1956:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 6387              		.loc 1 1956 0 discriminator 3
 6388 028e 0F4B     		ldr	r3, .L539+32
 6389 0290 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 150


 6390 0292 0133     		adds	r3, r3, #1
 6391 0294 DAB2     		uxtb	r2, r3
 6392 0296 0D4B     		ldr	r3, .L539+32
 6393 0298 1A70     		strb	r2, [r3]
 6394              	.L404:
1956:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 6395              		.loc 1 1956 0 is_stmt 0 discriminator 1
 6396 029a 0C4B     		ldr	r3, .L539+32
 6397 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6398 029e 012B     		cmp	r3, #1
 6399 02a0 EED9     		bls	.L405
1958:..\src/interruptions.c ****         }
1959:..\src/interruptions.c ****         for (idx = 0; c_mem.exp.read_ADC_sensors_port_flag && idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 6400              		.loc 1 1959 0 is_stmt 1
 6401 02a2 0A4B     		ldr	r3, .L539+32
 6402 02a4 0022     		movs	r2, #0
 6403 02a6 1A70     		strb	r2, [r3]
 6404 02a8 29E0     		b	.L406
 6405              	.L540:
 6406 02aa 00BF     		.align	2
 6407              	.L539:
 6408 02ac 00000000 		.word	interrupt_flag
 6409 02b0 00000000 		.word	g_mem
 6410 02b4 00000000 		.word	dev_tension
 6411 02b8 00000000 		.word	ADC_buf
 6412 02bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 6413 02c0 06000000 		.word	first_tension_valid.10637
 6414 02c4 00000000 		.word	tension_valid
 6415 02c8 74010000 		.word	count.10638
 6416 02cc 76010000 		.word	idx.10640
 6417 02d0 00000000 		.word	pow_tension
 6418 02d4 00000000 		.word	c_mem
 6419 02d8 00000000 		.word	g_ref
 6420 02dc 00000000 		.word	g_meas
 6421 02e0 00000000 		.word	g_adc_meas
 6422              	.L408:
1960:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 6423              		.loc 1 1960 0 discriminator 4
 6424 02e4 A74B     		ldr	r3, .L541
 6425 02e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6426 02e8 A74A     		ldr	r2, .L541+4
 6427 02ea 0233     		adds	r3, r3, #2
 6428 02ec 0021     		movs	r1, #0
 6429 02ee 42F82310 		str	r1, [r2, r3, lsl #2]
1959:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 6430              		.loc 1 1959 0 discriminator 4
 6431 02f2 A44B     		ldr	r3, .L541
 6432 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6433 02f6 0133     		adds	r3, r3, #1
 6434 02f8 DAB2     		uxtb	r2, r3
 6435 02fa A24B     		ldr	r3, .L541
 6436 02fc 1A70     		strb	r2, [r3]
 6437              	.L406:
1959:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 6438              		.loc 1 1959 0 is_stmt 0 discriminator 1
 6439 02fe A34B     		ldr	r3, .L541+8
 6440 0300 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 151


 6441 0304 002B     		cmp	r3, #0
 6442 0306 00F0EF81 		beq	.L521
1959:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 6443              		.loc 1 1959 0 discriminator 3
 6444 030a 9E4B     		ldr	r3, .L541
 6445 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6446 030e 052B     		cmp	r3, #5
 6447 0310 E8D9     		bls	.L408
1927:..\src/interruptions.c ****         // PSoC is powered through uUSB
 6448              		.loc 1 1927 0 is_stmt 1
 6449 0312 E9E1     		b	.L521
 6450              	.L397:
1961:..\src/interruptions.c ****         }
1962:..\src/interruptions.c ****         
1963:..\src/interruptions.c ****     }
1964:..\src/interruptions.c ****     else {
1965:..\src/interruptions.c ****         // PSoC is powered through battery or power source
1966:..\src/interruptions.c ****         // (at least > 7.36 V (92% of 8 V) that is minimum charge of smallest battery)
1967:..\src/interruptions.c ****         
1968:..\src/interruptions.c ****         // Read ADC sampled value of power source tension and motor current
1969:..\src/interruptions.c ****         
1970:..\src/interruptions.c ****         if (v_count == 1000 && !tension_valid){     // Voltage reading (Step 1)
 6451              		.loc 1 1970 0
 6452 0314 9E4B     		ldr	r3, .L541+12
 6453 0316 1B68     		ldr	r3, [r3]
 6454 0318 B3F57A7F 		cmp	r3, #1000
 6455 031c 0DD1     		bne	.L410
 6456              		.loc 1 1970 0 is_stmt 0 discriminator 1
 6457 031e 9D4B     		ldr	r3, .L541+16
 6458 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6459 0322 002B     		cmp	r3, #0
 6460 0324 09D1     		bne	.L410
1971:..\src/interruptions.c ****             // After 1000 v_count cycles, dev_tension_f is stable
1972:..\src/interruptions.c ****             tension_valid = TRUE;   
 6461              		.loc 1 1972 0 is_stmt 1
 6462 0326 9B4B     		ldr	r3, .L541+16
 6463 0328 0122     		movs	r2, #1
 6464 032a 1A70     		strb	r2, [r3]
1973:..\src/interruptions.c ****             count = 0;
 6465              		.loc 1 1973 0
 6466 032c 9A4B     		ldr	r3, .L541+20
 6467 032e 0022     		movs	r2, #0
 6468 0330 1A80     		strh	r2, [r3]	@ movhi
1974:..\src/interruptions.c ****             v_count = 0;
 6469              		.loc 1 1974 0
 6470 0332 974B     		ldr	r3, .L541+12
 6471 0334 0022     		movs	r2, #0
 6472 0336 1A60     		str	r2, [r3]
 6473 0338 2CE0     		b	.L411
 6474              	.L410:
1975:..\src/interruptions.c ****         }
1976:..\src/interruptions.c ****         else {  
1977:..\src/interruptions.c ****             // wait for battery voltage stabilization
1978:..\src/interruptions.c ****             if (v_count < 1000) {
 6475              		.loc 1 1978 0
 6476 033a 954B     		ldr	r3, .L541+12
 6477 033c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 152


 6478 033e B3F57A7F 		cmp	r3, #1000
 6479 0342 04D2     		bcs	.L412
1979:..\src/interruptions.c ****                 v_count = v_count + 1;
 6480              		.loc 1 1979 0
 6481 0344 924B     		ldr	r3, .L541+12
 6482 0346 1B68     		ldr	r3, [r3]
 6483 0348 0133     		adds	r3, r3, #1
 6484 034a 914A     		ldr	r2, .L541+12
 6485 034c 1360     		str	r3, [r2]
 6486              	.L412:
1980:..\src/interruptions.c ****             }
1981:..\src/interruptions.c ****             for(idx = 0; idx < NUM_OF_MOTORS; idx++) {
 6487              		.loc 1 1981 0
 6488 034e 8D4B     		ldr	r3, .L541
 6489 0350 0022     		movs	r2, #0
 6490 0352 1A70     		strb	r2, [r3]
 6491 0354 1AE0     		b	.L413
 6492              	.L414:
1982:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 6493              		.loc 1 1982 0 discriminator 3
 6494 0356 8B4B     		ldr	r3, .L541
 6495 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6496 035a 1C46     		mov	r4, r3
 6497 035c 894B     		ldr	r3, .L541
 6498 035e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6499 0360 1A46     		mov	r2, r3
 6500 0362 8E4B     		ldr	r3, .L541+24
 6501 0364 53F82200 		ldr	r0, [r3, r2, lsl #2]
 6502 0368 864B     		ldr	r3, .L541
 6503 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6504 036c DB00     		lsls	r3, r3, #3
 6505 036e 8C4A     		ldr	r2, .L541+28
 6506 0370 1344     		add	r3, r3, r2
 6507 0372 1946     		mov	r1, r3
 6508 0374 FFF7FEFF 		bl	filter
 6509 0378 0246     		mov	r2, r0
 6510 037a 8A4B     		ldr	r3, .L541+32
 6511 037c 43F82420 		str	r2, [r3, r4, lsl #2]
1981:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 6512              		.loc 1 1981 0 discriminator 3
 6513 0380 804B     		ldr	r3, .L541
 6514 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6515 0384 0133     		adds	r3, r3, #1
 6516 0386 DAB2     		uxtb	r2, r3
 6517 0388 7E4B     		ldr	r3, .L541
 6518 038a 1A70     		strb	r2, [r3]
 6519              	.L413:
1981:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 6520              		.loc 1 1981 0 is_stmt 0 discriminator 1
 6521 038c 7D4B     		ldr	r3, .L541
 6522 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6523 0390 012B     		cmp	r3, #1
 6524 0392 E0D9     		bls	.L414
 6525              	.L411:
1983:..\src/interruptions.c ****             }
1984:..\src/interruptions.c ****         }
1985:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 153


1986:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 6526              		.loc 1 1986 0 is_stmt 1
 6527 0394 7B4B     		ldr	r3, .L541
 6528 0396 0022     		movs	r2, #0
 6529 0398 1A70     		strb	r2, [r3]
 6530 039a 17E0     		b	.L415
 6531              	.L417:
1987:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 6532              		.loc 1 1987 0
 6533 039c 794B     		ldr	r3, .L541
 6534 039e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6535 03a0 1946     		mov	r1, r3
 6536 03a2 814A     		ldr	r2, .L541+36
 6537 03a4 0B46     		mov	r3, r1
 6538 03a6 DB00     		lsls	r3, r3, #3
 6539 03a8 5B1A     		subs	r3, r3, r1
 6540 03aa 1B01     		lsls	r3, r3, #4
 6541 03ac 1344     		add	r3, r3, r2
 6542 03ae E133     		adds	r3, r3, #225
 6543 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6544 03b2 002B     		cmp	r3, #0
 6545 03b4 04D0     		beq	.L416
1988:..\src/interruptions.c ****                 pwm_limit_search(idx);                 //only for 12V motor
 6546              		.loc 1 1988 0
 6547 03b6 734B     		ldr	r3, .L541
 6548 03b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6549 03ba 1846     		mov	r0, r3
 6550 03bc FFF7FEFF 		bl	pwm_limit_search
 6551              	.L416:
1986:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 6552              		.loc 1 1986 0 discriminator 2
 6553 03c0 704B     		ldr	r3, .L541
 6554 03c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6555 03c4 0133     		adds	r3, r3, #1
 6556 03c6 DAB2     		uxtb	r2, r3
 6557 03c8 6E4B     		ldr	r3, .L541
 6558 03ca 1A70     		strb	r2, [r3]
 6559              	.L415:
1986:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 6560              		.loc 1 1986 0 is_stmt 0 discriminator 1
 6561 03cc 6D4B     		ldr	r3, .L541
 6562 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6563 03d0 012B     		cmp	r3, #1
 6564 03d2 E3D9     		bls	.L417
1989:..\src/interruptions.c ****         }
1990:..\src/interruptions.c ****         
1991:..\src/interruptions.c ****         // Filter and Set currents
1992:..\src/interruptions.c ****         if (g_mem.motor[0].motor_driver_type == DRIVER_MC33887) { // [GS]
 6565              		.loc 1 1992 0 is_stmt 1
 6566 03d4 744B     		ldr	r3, .L541+36
 6567 03d6 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 6568 03da 002B     		cmp	r3, #0
 6569 03dc 21D1     		bne	.L418
1993:..\src/interruptions.c ****             g_meas[g_mem.motor[0].encoder_line].curr = filter((int16) (((int32)(ADC_buf[1] - 1648) 
 6570              		.loc 1 1993 0
 6571 03de 724B     		ldr	r3, .L541+36
 6572 03e0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 154


 6573 03e4 1C46     		mov	r4, r3
 6574 03e6 714B     		ldr	r3, .L541+40
 6575 03e8 B3F90230 		ldrsh	r3, [r3, #2]
 6576 03ec A3F5CE63 		sub	r3, r3, #1648
 6577 03f0 45F66A02 		movw	r2, #22634
 6578 03f4 02FB03F3 		mul	r3, r2, r3
 6579 03f8 5B13     		asrs	r3, r3, #13
 6580 03fa 1BB2     		sxth	r3, r3
 6581 03fc 1A46     		mov	r2, r3
 6582 03fe 6C4B     		ldr	r3, .L541+44
 6583 0400 93F90030 		ldrsb	r3, [r3]
 6584 0404 03FB02F3 		mul	r3, r3, r2
 6585 0408 6A49     		ldr	r1, .L541+48
 6586 040a 1846     		mov	r0, r3
 6587 040c FFF7FEFF 		bl	filter
 6588 0410 0146     		mov	r1, r0
 6589 0412 694A     		ldr	r2, .L541+52
 6590 0414 3423     		movs	r3, #52
 6591 0416 03FB04F3 		mul	r3, r3, r4
 6592 041a 1344     		add	r3, r3, r2
 6593 041c 0C33     		adds	r3, r3, #12
 6594 041e 1960     		str	r1, [r3]
 6595 0420 1BE0     		b	.L419
 6596              	.L418:
1994:..\src/interruptions.c ****         } else { // [GS]
1995:..\src/interruptions.c ****             g_meas[g_mem.motor[0].encoder_line].curr = ((int16) ((int32)((ADC_buf[1] - 1635) * 480)
 6597              		.loc 1 1995 0
 6598 0422 614B     		ldr	r3, .L541+36
 6599 0424 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6600 0428 1846     		mov	r0, r3
 6601 042a 604B     		ldr	r3, .L541+40
 6602 042c B3F90230 		ldrsh	r3, [r3, #2]
 6603 0430 A3F26362 		subw	r2, r3, #1635
 6604 0434 1346     		mov	r3, r2
 6605 0436 1B01     		lsls	r3, r3, #4
 6606 0438 9B1A     		subs	r3, r3, r2
 6607 043a 5B01     		lsls	r3, r3, #5
 6608 043c 1B11     		asrs	r3, r3, #4
 6609 043e 1BB2     		sxth	r3, r3
 6610 0440 1A46     		mov	r2, r3
 6611 0442 5B4B     		ldr	r3, .L541+44
 6612 0444 93F90030 		ldrsb	r3, [r3]
 6613 0448 03FB02F2 		mul	r2, r3, r2
 6614 044c 5A49     		ldr	r1, .L541+52
 6615 044e 3423     		movs	r3, #52
 6616 0450 03FB00F3 		mul	r3, r3, r0
 6617 0454 0B44     		add	r3, r3, r1
 6618 0456 0C33     		adds	r3, r3, #12
 6619 0458 1A60     		str	r2, [r3]
 6620              	.L419:
1996:..\src/interruptions.c ****         }  
1997:..\src/interruptions.c **** 
1998:..\src/interruptions.c ****         // Calculate current estimation and put it in the second part of the current measurement ar
1999:..\src/interruptions.c **** 		g_meas[g_mem.motor[0].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.motor[0].en
 6621              		.loc 1 1999 0
 6622 045a 534B     		ldr	r3, .L541+36
 6623 045c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 155


 6624 0460 1D46     		mov	r5, r3
 6625 0462 514B     		ldr	r3, .L541+36
 6626 0464 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6627 0468 1946     		mov	r1, r3
 6628 046a 534A     		ldr	r2, .L541+52
 6629 046c 3423     		movs	r3, #52
 6630 046e 03FB01F3 		mul	r3, r3, r1
 6631 0472 1344     		add	r3, r3, r2
 6632 0474 0C33     		adds	r3, r3, #12
 6633 0476 1C68     		ldr	r4, [r3]
 6634 0478 4B4B     		ldr	r3, .L541+36
 6635 047a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6636 047e 1946     		mov	r1, r3
 6637 0480 4D4A     		ldr	r2, .L541+52
 6638 0482 3423     		movs	r3, #52
 6639 0484 03FB01F3 		mul	r3, r3, r1
 6640 0488 1344     		add	r3, r3, r2
 6641 048a 1A68     		ldr	r2, [r3]
 6642 048c 464B     		ldr	r3, .L541+36
 6643 048e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6644 0492 1846     		mov	r0, r3
 6645 0494 4449     		ldr	r1, .L541+36
 6646 0496 0346     		mov	r3, r0
 6647 0498 5B00     		lsls	r3, r3, #1
 6648 049a 0344     		add	r3, r3, r0
 6649 049c 1B01     		lsls	r3, r3, #4
 6650 049e 0B44     		add	r3, r3, r1
 6651 04a0 03F29513 		addw	r3, r3, #405
 6652 04a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6653 04a6 42FA03F6 		asr	r6, r2, r3
 6654 04aa 3F4B     		ldr	r3, .L541+36
 6655 04ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6656 04b0 1946     		mov	r1, r3
 6657 04b2 414A     		ldr	r2, .L541+52
 6658 04b4 3423     		movs	r3, #52
 6659 04b6 03FB01F3 		mul	r3, r3, r1
 6660 04ba 1344     		add	r3, r3, r2
 6661 04bc 1C33     		adds	r3, r3, #28
 6662 04be 1A68     		ldr	r2, [r3]
 6663 04c0 394B     		ldr	r3, .L541+36
 6664 04c2 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6665 04c6 1846     		mov	r0, r3
 6666 04c8 3749     		ldr	r1, .L541+36
 6667 04ca 0346     		mov	r3, r0
 6668 04cc 5B00     		lsls	r3, r3, #1
 6669 04ce 0344     		add	r3, r3, r0
 6670 04d0 1B01     		lsls	r3, r3, #4
 6671 04d2 0B44     		add	r3, r3, r1
 6672 04d4 03F29513 		addw	r3, r3, #405
 6673 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6674 04da 42FA03FE 		asr	lr, r2, r3
 6675 04de 374B     		ldr	r3, .L541+56
 6676 04e0 1A68     		ldr	r2, [r3]
 6677 04e2 314B     		ldr	r3, .L541+36
 6678 04e4 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6679 04e8 1846     		mov	r0, r3
 6680 04ea 2F49     		ldr	r1, .L541+36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 156


 6681 04ec 0346     		mov	r3, r0
 6682 04ee 5B00     		lsls	r3, r3, #1
 6683 04f0 0344     		add	r3, r3, r0
 6684 04f2 1B01     		lsls	r3, r3, #4
 6685 04f4 0B44     		add	r3, r3, r1
 6686 04f6 03F29513 		addw	r3, r3, #405
 6687 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6688 04fc 42FA03F3 		asr	r3, r2, r3
 6689 0500 7246     		mov	r2, lr
 6690 0502 3146     		mov	r1, r6
 6691 0504 0020     		movs	r0, #0
 6692 0506 FFF7FEFF 		bl	curr_estim
 6693 050a 0346     		mov	r3, r0
 6694 050c E31A     		subs	r3, r4, r3
 6695 050e 2C49     		ldr	r1, .L541+60
 6696 0510 1846     		mov	r0, r3
 6697 0512 FFF7FEFF 		bl	filter
 6698 0516 0346     		mov	r3, r0
 6699 0518 1BB2     		sxth	r3, r3
 6700 051a 1946     		mov	r1, r3
 6701 051c 264A     		ldr	r2, .L541+52
 6702 051e 3423     		movs	r3, #52
 6703 0520 03FB05F3 		mul	r3, r3, r5
 6704 0524 1344     		add	r3, r3, r2
 6705 0526 1033     		adds	r3, r3, #16
 6706 0528 1960     		str	r1, [r3]
2000:..\src/interruptions.c ****         
2001:..\src/interruptions.c ****         // Read also 2nd power current (if necessary)
2002:..\src/interruptions.c ****         if (NUM_OF_ANALOG_INPUTS > 4) {
 6707              		.loc 1 2002 0
 6708 052a 264B     		ldr	r3, .L541+64
 6709 052c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6710 052e 042B     		cmp	r3, #4
 6711 0530 40F2D080 		bls	.L420
2003:..\src/interruptions.c ****             // Filter and Set currents
2004:..\src/interruptions.c ****             if (g_mem.motor[1].motor_driver_type == DRIVER_MC33887) { // [GS]
 6712              		.loc 1 2004 0
 6713 0534 1C4B     		ldr	r3, .L541+36
 6714 0536 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 6715 053a 002B     		cmp	r3, #0
 6716 053c 46D1     		bne	.L421
2005:..\src/interruptions.c ****                 g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] - 16
 6717              		.loc 1 2005 0
 6718 053e 1A4B     		ldr	r3, .L541+36
 6719 0540 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6720 0544 1C46     		mov	r4, r3
 6721 0546 194B     		ldr	r3, .L541+40
 6722 0548 B3F90A30 		ldrsh	r3, [r3, #10]
 6723 054c A3F5CE63 		sub	r3, r3, #1648
 6724 0550 45F66A02 		movw	r2, #22634
 6725 0554 02FB03F3 		mul	r3, r2, r3
 6726 0558 5B13     		asrs	r3, r3, #13
 6727 055a 1BB2     		sxth	r3, r3
 6728 055c 1A46     		mov	r2, r3
 6729 055e 144B     		ldr	r3, .L541+44
 6730 0560 93F90030 		ldrsb	r3, [r3]
 6731 0564 03FB02F3 		mul	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 157


 6732 0568 1749     		ldr	r1, .L541+68
 6733 056a 1846     		mov	r0, r3
 6734 056c FFF7FEFF 		bl	filter
 6735 0570 0146     		mov	r1, r0
 6736 0572 114A     		ldr	r2, .L541+52
 6737 0574 3423     		movs	r3, #52
 6738 0576 03FB04F3 		mul	r3, r3, r4
 6739 057a 1344     		add	r3, r3, r2
 6740 057c 0C33     		adds	r3, r3, #12
 6741 057e 1960     		str	r1, [r3]
 6742 0580 40E0     		b	.L422
 6743              	.L542:
 6744 0582 00BF     		.align	2
 6745              	.L541:
 6746 0584 76010000 		.word	idx.10640
 6747 0588 00000000 		.word	g_adc_meas
 6748 058c 00000000 		.word	c_mem
 6749 0590 78010000 		.word	v_count.10639
 6750 0594 00000000 		.word	tension_valid
 6751 0598 74010000 		.word	count.10638
 6752 059c 00000000 		.word	dev_tension
 6753 05a0 00000000 		.word	filt_v
 6754 05a4 00000000 		.word	dev_tension_f
 6755 05a8 00000000 		.word	g_mem
 6756 05ac 00000000 		.word	ADC_buf
 6757 05b0 00000000 		.word	pwm_sign
 6758 05b4 00000000 		.word	filt_i
 6759 05b8 00000000 		.word	g_meas
 6760 05bc 00000000 		.word	g_ref
 6761 05c0 00000000 		.word	filt_curr_diff
 6762 05c4 00000000 		.word	NUM_OF_ANALOG_INPUTS
 6763 05c8 08000000 		.word	filt_i+8
 6764              	.L421:
2006:..\src/interruptions.c ****             } else { // [GS]
2007:..\src/interruptions.c ****                 g_meas[g_mem.motor[1].encoder_line].curr = ((int16) ((int32)((ADC_buf[5] - 1635) * 
 6765              		.loc 1 2007 0
 6766 05cc 954B     		ldr	r3, .L543
 6767 05ce 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6768 05d2 1846     		mov	r0, r3
 6769 05d4 944B     		ldr	r3, .L543+4
 6770 05d6 B3F90A30 		ldrsh	r3, [r3, #10]
 6771 05da A3F26362 		subw	r2, r3, #1635
 6772 05de 1346     		mov	r3, r2
 6773 05e0 1B01     		lsls	r3, r3, #4
 6774 05e2 9B1A     		subs	r3, r3, r2
 6775 05e4 5B01     		lsls	r3, r3, #5
 6776 05e6 1B11     		asrs	r3, r3, #4
 6777 05e8 1BB2     		sxth	r3, r3
 6778 05ea 1A46     		mov	r2, r3
 6779 05ec 8F4B     		ldr	r3, .L543+8
 6780 05ee 93F90030 		ldrsb	r3, [r3]
 6781 05f2 03FB02F2 		mul	r2, r3, r2
 6782 05f6 8E49     		ldr	r1, .L543+12
 6783 05f8 3423     		movs	r3, #52
 6784 05fa 03FB00F3 		mul	r3, r3, r0
 6785 05fe 0B44     		add	r3, r3, r1
 6786 0600 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 158


 6787 0602 1A60     		str	r2, [r3]
 6788              	.L422:
2008:..\src/interruptions.c ****             }  
2009:..\src/interruptions.c ****             //g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] - 1648
2010:..\src/interruptions.c ****             
2011:..\src/interruptions.c ****             g_meas[g_mem.motor[1].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.m
 6789              		.loc 1 2011 0
 6790 0604 874B     		ldr	r3, .L543
 6791 0606 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6792 060a 1D46     		mov	r5, r3
 6793 060c 854B     		ldr	r3, .L543
 6794 060e 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6795 0612 1946     		mov	r1, r3
 6796 0614 864A     		ldr	r2, .L543+12
 6797 0616 3423     		movs	r3, #52
 6798 0618 03FB01F3 		mul	r3, r3, r1
 6799 061c 1344     		add	r3, r3, r2
 6800 061e 0C33     		adds	r3, r3, #12
 6801 0620 1C68     		ldr	r4, [r3]
 6802 0622 804B     		ldr	r3, .L543
 6803 0624 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6804 0628 1946     		mov	r1, r3
 6805 062a 814A     		ldr	r2, .L543+12
 6806 062c 3423     		movs	r3, #52
 6807 062e 03FB01F3 		mul	r3, r3, r1
 6808 0632 1344     		add	r3, r3, r2
 6809 0634 1A68     		ldr	r2, [r3]
 6810 0636 7B4B     		ldr	r3, .L543
 6811 0638 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6812 063c 1846     		mov	r0, r3
 6813 063e 7949     		ldr	r1, .L543
 6814 0640 0346     		mov	r3, r0
 6815 0642 5B00     		lsls	r3, r3, #1
 6816 0644 0344     		add	r3, r3, r0
 6817 0646 1B01     		lsls	r3, r3, #4
 6818 0648 0B44     		add	r3, r3, r1
 6819 064a 03F29513 		addw	r3, r3, #405
 6820 064e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6821 0650 42FA03F6 		asr	r6, r2, r3
 6822 0654 734B     		ldr	r3, .L543
 6823 0656 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6824 065a 1946     		mov	r1, r3
 6825 065c 744A     		ldr	r2, .L543+12
 6826 065e 3423     		movs	r3, #52
 6827 0660 03FB01F3 		mul	r3, r3, r1
 6828 0664 1344     		add	r3, r3, r2
 6829 0666 1C33     		adds	r3, r3, #28
 6830 0668 1A68     		ldr	r2, [r3]
 6831 066a 6E4B     		ldr	r3, .L543
 6832 066c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6833 0670 1846     		mov	r0, r3
 6834 0672 6C49     		ldr	r1, .L543
 6835 0674 0346     		mov	r3, r0
 6836 0676 5B00     		lsls	r3, r3, #1
 6837 0678 0344     		add	r3, r3, r0
 6838 067a 1B01     		lsls	r3, r3, #4
 6839 067c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 159


 6840 067e 03F29513 		addw	r3, r3, #405
 6841 0682 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6842 0684 42FA03FE 		asr	lr, r2, r3
 6843 0688 6A4B     		ldr	r3, .L543+16
 6844 068a 1A69     		ldr	r2, [r3, #16]
 6845 068c 654B     		ldr	r3, .L543
 6846 068e 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6847 0692 1846     		mov	r0, r3
 6848 0694 6349     		ldr	r1, .L543
 6849 0696 0346     		mov	r3, r0
 6850 0698 5B00     		lsls	r3, r3, #1
 6851 069a 0344     		add	r3, r3, r0
 6852 069c 1B01     		lsls	r3, r3, #4
 6853 069e 0B44     		add	r3, r3, r1
 6854 06a0 03F29513 		addw	r3, r3, #405
 6855 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6856 06a6 42FA03F3 		asr	r3, r2, r3
 6857 06aa 7246     		mov	r2, lr
 6858 06ac 3146     		mov	r1, r6
 6859 06ae 0120     		movs	r0, #1
 6860 06b0 FFF7FEFF 		bl	curr_estim
 6861 06b4 0346     		mov	r3, r0
 6862 06b6 E31A     		subs	r3, r4, r3
 6863 06b8 5F49     		ldr	r1, .L543+20
 6864 06ba 1846     		mov	r0, r3
 6865 06bc FFF7FEFF 		bl	filter
 6866 06c0 0346     		mov	r3, r0
 6867 06c2 1BB2     		sxth	r3, r3
 6868 06c4 1946     		mov	r1, r3
 6869 06c6 5A4A     		ldr	r2, .L543+12
 6870 06c8 3423     		movs	r3, #52
 6871 06ca 03FB05F3 		mul	r3, r3, r5
 6872 06ce 1344     		add	r3, r3, r2
 6873 06d0 1033     		adds	r3, r3, #16
 6874 06d2 1960     		str	r1, [r3]
 6875              	.L420:
2012:..\src/interruptions.c ****         }
2013:..\src/interruptions.c ****     
2014:..\src/interruptions.c ****         // Check Interrupt 
2015:..\src/interruptions.c ****     
2016:..\src/interruptions.c ****         if (interrupt_flag){
 6876              		.loc 1 2016 0
 6877 06d4 594B     		ldr	r3, .L543+24
 6878 06d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6879 06d8 002B     		cmp	r3, #0
 6880 06da 06D0     		beq	.L409
2017:..\src/interruptions.c ****             interrupt_flag = FALSE;
 6881              		.loc 1 2017 0
 6882 06dc 574B     		ldr	r3, .L543+24
 6883 06de 0022     		movs	r2, #0
 6884 06e0 1A70     		strb	r2, [r3]
2018:..\src/interruptions.c ****             interrupt_manager();
 6885              		.loc 1 2018 0
 6886 06e2 FFF7FEFF 		bl	interrupt_manager
 6887 06e6 00E0     		b	.L409
 6888              	.L521:
1927:..\src/interruptions.c ****         // PSoC is powered through uUSB
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 160


 6889              		.loc 1 1927 0
 6890 06e8 00BF     		nop
 6891              	.L409:
2019:..\src/interruptions.c ****         }
2020:..\src/interruptions.c **** 
2021:..\src/interruptions.c ****     }
2022:..\src/interruptions.c ****     
2023:..\src/interruptions.c ****     // Read EMG (always even if the board is not powered)
2024:..\src/interruptions.c ****         
2025:..\src/interruptions.c ****     // if calibration is not needed go to "normal execution"
2026:..\src/interruptions.c ****     if (!c_mem.emg.emg_calibration_flag){
 6892              		.loc 1 2026 0
 6893 06ea 554B     		ldr	r3, .L543+28
 6894 06ec 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6895 06f0 002B     		cmp	r3, #0
 6896 06f2 05D1     		bne	.L423
2027:..\src/interruptions.c ****         emg_1_status = NORMAL; // normal execution
 6897              		.loc 1 2027 0
 6898 06f4 534B     		ldr	r3, .L543+32
 6899 06f6 0022     		movs	r2, #0
 6900 06f8 1A70     		strb	r2, [r3]
2028:..\src/interruptions.c ****         emg_2_status = NORMAL; // normal execution
 6901              		.loc 1 2028 0
 6902 06fa 534B     		ldr	r3, .L543+36
 6903 06fc 0022     		movs	r2, #0
 6904 06fe 1A70     		strb	r2, [r3]
 6905              	.L423:
2029:..\src/interruptions.c ****     }
2030:..\src/interruptions.c **** 
2031:..\src/interruptions.c ****     // EMG 1 calibration state machine
2032:..\src/interruptions.c ****    
2033:..\src/interruptions.c ****     // Calibration state machine
2034:..\src/interruptions.c ****     switch(emg_1_status) {
 6906              		.loc 1 2034 0
 6907 0700 504B     		ldr	r3, .L543+32
 6908 0702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6909 0704 032B     		cmp	r3, #3
 6910 0706 00F2FC80 		bhi	.L522
 6911 070a 01A2     		adr	r2, .L426
 6912 070c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6913              		.p2align 2
 6914              	.L426:
 6915 0710 21070000 		.word	.L425+1
 6916 0714 D1070000 		.word	.L427+1
 6917 0718 E7070000 		.word	.L428+1
 6918 071c 59080000 		.word	.L429+1
 6919              		.p2align 1
 6920              	.L425:
2035:..\src/interruptions.c ****         case NORMAL: // normal execution
2036:..\src/interruptions.c ****             
2037:..\src/interruptions.c ****             if (g_mem.dev.dev_type != AIR_CHAMBERS_FB && g_mem.dev.dev_type != OTBK_ACT_WRIST_MS){
 6921              		.loc 1 2037 0
 6922 0720 404B     		ldr	r3, .L543
 6923 0722 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 6924 0726 022B     		cmp	r3, #2
 6925 0728 13D0     		beq	.L430
 6926              		.loc 1 2037 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 161


 6927 072a 3E4B     		ldr	r3, .L543
 6928 072c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 6929 0730 032B     		cmp	r3, #3
 6930 0732 0ED0     		beq	.L430
2038:..\src/interruptions.c ****                 i_aux = ((int32)(ADC_buf[2 + c_mem.emg.switch_emg] - 1639) * 87) >> 5;  //map range
 6931              		.loc 1 2038 0 is_stmt 1
 6932 0734 424B     		ldr	r3, .L543+28
 6933 0736 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 6934 073a 0233     		adds	r3, r3, #2
 6935 073c 3A4A     		ldr	r2, .L543+4
 6936 073e 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6937 0742 A3F26763 		subw	r3, r3, #1639
 6938 0746 5722     		movs	r2, #87
 6939 0748 02FB03F3 		mul	r3, r2, r3
 6940 074c 5B11     		asrs	r3, r3, #5
 6941 074e 7B60     		str	r3, [r7, #4]
 6942 0750 07E0     		b	.L431
 6943              	.L430:
2039:..\src/interruptions.c ****             }
2040:..\src/interruptions.c ****             else {  // Use additional ADC channels, so the signal does not pass through AVAGO isola
2041:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[2 + c_mem.emg.switch_emg]);
 6944              		.loc 1 2041 0
 6945 0752 3B4B     		ldr	r3, .L543+28
 6946 0754 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 6947 0758 0233     		adds	r3, r3, #2
 6948 075a 334A     		ldr	r2, .L543+4
 6949 075c 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6950 0760 7B60     		str	r3, [r7, #4]
 6951              	.L431:
2042:..\src/interruptions.c ****             }
2043:..\src/interruptions.c ****             
2044:..\src/interruptions.c ****             if (i_aux < 0) 
 6952              		.loc 1 2044 0
 6953 0762 7B68     		ldr	r3, [r7, #4]
 6954 0764 002B     		cmp	r3, #0
 6955 0766 01DA     		bge	.L432
2045:..\src/interruptions.c ****                 i_aux = 0;
 6956              		.loc 1 2045 0
 6957 0768 0023     		movs	r3, #0
 6958 076a 7B60     		str	r3, [r7, #4]
 6959              	.L432:
2046:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[0]);
 6960              		.loc 1 2046 0
 6961 076c 3749     		ldr	r1, .L543+40
 6962 076e 7868     		ldr	r0, [r7, #4]
 6963 0770 FFF7FEFF 		bl	filter
 6964 0774 7860     		str	r0, [r7, #4]
2047:..\src/interruptions.c ****             i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[0];
 6965              		.loc 1 2047 0
 6966 0776 7B68     		ldr	r3, [r7, #4]
 6967 0778 9B02     		lsls	r3, r3, #10
 6968 077a 1A46     		mov	r2, r3
 6969 077c 294B     		ldr	r3, .L543
 6970 077e D3F8F431 		ldr	r3, [r3, #500]
 6971 0782 B2FBF3F3 		udiv	r3, r2, r3
 6972 0786 7B60     		str	r3, [r7, #4]
2048:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 162


2049:..\src/interruptions.c ****             if (interrupt_flag){
 6973              		.loc 1 2049 0
 6974 0788 2C4B     		ldr	r3, .L543+24
 6975 078a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6976 078c 002B     		cmp	r3, #0
 6977 078e 04D0     		beq	.L433
2050:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6978              		.loc 1 2050 0
 6979 0790 2A4B     		ldr	r3, .L543+24
 6980 0792 0022     		movs	r2, #0
 6981 0794 1A70     		strb	r2, [r3]
2051:..\src/interruptions.c ****                 interrupt_manager();
 6982              		.loc 1 2051 0
 6983 0796 FFF7FEFF 		bl	interrupt_manager
 6984              	.L433:
2052:..\src/interruptions.c ****             }
2053:..\src/interruptions.c ****             //Saturation
2054:..\src/interruptions.c ****             if (i_aux < 0)
 6985              		.loc 1 2054 0
 6986 079a 7B68     		ldr	r3, [r7, #4]
 6987 079c 002B     		cmp	r3, #0
 6988 079e 02DA     		bge	.L434
2055:..\src/interruptions.c ****                 i_aux = 0;
 6989              		.loc 1 2055 0
 6990 07a0 0023     		movs	r3, #0
 6991 07a2 7B60     		str	r3, [r7, #4]
 6992 07a4 06E0     		b	.L435
 6993              	.L434:
2056:..\src/interruptions.c ****             else 
2057:..\src/interruptions.c ****                 if (i_aux > 1024) 
 6994              		.loc 1 2057 0
 6995 07a6 7B68     		ldr	r3, [r7, #4]
 6996 07a8 B3F5806F 		cmp	r3, #1024
 6997 07ac 02DD     		ble	.L435
2058:..\src/interruptions.c ****                     i_aux = 1024;
 6998              		.loc 1 2058 0
 6999 07ae 4FF48063 		mov	r3, #1024
 7000 07b2 7B60     		str	r3, [r7, #4]
 7001              	.L435:
2059:..\src/interruptions.c ****             
2060:..\src/interruptions.c ****             g_adc_meas.emg[0] = i_aux;
 7002              		.loc 1 2060 0
 7003 07b4 264A     		ldr	r2, .L543+44
 7004 07b6 7B68     		ldr	r3, [r7, #4]
 7005 07b8 1360     		str	r3, [r2]
2061:..\src/interruptions.c **** 
2062:..\src/interruptions.c ****             if (interrupt_flag){
 7006              		.loc 1 2062 0
 7007 07ba 204B     		ldr	r3, .L543+24
 7008 07bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7009 07be 002B     		cmp	r3, #0
 7010 07c0 00F0A180 		beq	.L523
2063:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7011              		.loc 1 2063 0
 7012 07c4 1D4B     		ldr	r3, .L543+24
 7013 07c6 0022     		movs	r2, #0
 7014 07c8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 163


2064:..\src/interruptions.c ****                 interrupt_manager();
 7015              		.loc 1 2064 0
 7016 07ca FFF7FEFF 		bl	interrupt_manager
2065:..\src/interruptions.c ****             }
2066:..\src/interruptions.c ****             
2067:..\src/interruptions.c ****             break;
 7017              		.loc 1 2067 0
 7018 07ce 9AE0     		b	.L523
 7019              	.L427:
2068:..\src/interruptions.c **** 
2069:..\src/interruptions.c ****         case RESET: // reset variables
2070:..\src/interruptions.c ****             emg_counter_1 = 0;
 7020              		.loc 1 2070 0
 7021 07d0 204B     		ldr	r3, .L543+48
 7022 07d2 0022     		movs	r2, #0
 7023 07d4 1A80     		strh	r2, [r3]	@ movhi
2071:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] = 0;
 7024              		.loc 1 2071 0
 7025 07d6 134B     		ldr	r3, .L543
 7026 07d8 0022     		movs	r2, #0
 7027 07da C3F8F421 		str	r2, [r3, #500]
2072:..\src/interruptions.c ****             emg_1_status = DISCARD; // goto next status  
 7028              		.loc 1 2072 0
 7029 07de 194B     		ldr	r3, .L543+32
 7030 07e0 0222     		movs	r2, #2
 7031 07e2 1A70     		strb	r2, [r3]
2073:..\src/interruptions.c ****             break;
 7032              		.loc 1 2073 0
 7033 07e4 94E0     		b	.L437
 7034              	.L428:
2074:..\src/interruptions.c **** 
2075:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
2076:..\src/interruptions.c ****             emg_counter_1++;
 7035              		.loc 1 2076 0
 7036 07e6 1B4B     		ldr	r3, .L543+48
 7037 07e8 1B88     		ldrh	r3, [r3]
 7038 07ea 0133     		adds	r3, r3, #1
 7039 07ec 9AB2     		uxth	r2, r3
 7040 07ee 194B     		ldr	r3, .L543+48
 7041 07f0 1A80     		strh	r2, [r3]	@ movhi
2077:..\src/interruptions.c ****             if (emg_counter_1 == EMG_SAMPLE_TO_DISCARD) {
 7042              		.loc 1 2077 0
 7043 07f2 184B     		ldr	r3, .L543+48
 7044 07f4 1B88     		ldrh	r3, [r3]
 7045 07f6 B3F5FA7F 		cmp	r3, #500
 7046 07fa 40F08680 		bne	.L524
2078:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 7047              		.loc 1 2078 0
 7048 07fe 154B     		ldr	r3, .L543+48
 7049 0800 0022     		movs	r2, #0
 7050 0802 1A80     		strh	r2, [r3]	@ movhi
2079:..\src/interruptions.c ****                 LED_control(1);
 7051              		.loc 1 2079 0
 7052 0804 0120     		movs	r0, #1
 7053 0806 FFF7FEFF 		bl	LED_control
2080:..\src/interruptions.c **** 				
2081:..\src/interruptions.c ****                 if (interrupt_flag){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 164


 7054              		.loc 1 2081 0
 7055 080a 0C4B     		ldr	r3, .L543+24
 7056 080c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7057 080e 002B     		cmp	r3, #0
 7058 0810 04D0     		beq	.L439
2082:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7059              		.loc 1 2082 0
 7060 0812 0A4B     		ldr	r3, .L543+24
 7061 0814 0022     		movs	r2, #0
 7062 0816 1A70     		strb	r2, [r3]
2083:..\src/interruptions.c ****                     interrupt_manager();
 7063              		.loc 1 2083 0
 7064 0818 FFF7FEFF 		bl	interrupt_manager
 7065              	.L439:
2084:..\src/interruptions.c ****                 }
2085:..\src/interruptions.c ****                 
2086:..\src/interruptions.c ****                 emg_1_status = SUM_AND_MEAN;    // sum and mean status
 7066              		.loc 1 2086 0
 7067 081c 094B     		ldr	r3, .L543+32
 7068 081e 0322     		movs	r2, #3
 7069 0820 1A70     		strb	r2, [r3]
2087:..\src/interruptions.c ****             }
2088:..\src/interruptions.c ****             break;
 7070              		.loc 1 2088 0
 7071 0822 72E0     		b	.L524
 7072              	.L544:
 7073              		.align	2
 7074              	.L543:
 7075 0824 00000000 		.word	g_mem
 7076 0828 00000000 		.word	ADC_buf
 7077 082c 00000000 		.word	pwm_sign
 7078 0830 00000000 		.word	g_meas
 7079 0834 00000000 		.word	g_ref
 7080 0838 08000000 		.word	filt_curr_diff+8
 7081 083c 00000000 		.word	interrupt_flag
 7082 0840 00000000 		.word	c_mem
 7083 0844 00000000 		.word	emg_1_status
 7084 0848 00000000 		.word	emg_2_status
 7085 084c 00000000 		.word	filt_emg
 7086 0850 00000000 		.word	g_adc_meas
 7087 0854 7C010000 		.word	emg_counter_1.10631
 7088              	.L429:
2089:..\src/interruptions.c **** 
2090:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2091:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2092:..\src/interruptions.c ****             emg_counter_1++;
 7089              		.loc 1 2092 0
 7090 0858 AF4B     		ldr	r3, .L545
 7091 085a 1B88     		ldrh	r3, [r3]
 7092 085c 0133     		adds	r3, r3, #1
 7093 085e 9AB2     		uxth	r2, r3
 7094 0860 AD4B     		ldr	r3, .L545
 7095 0862 1A80     		strh	r2, [r3]	@ movhi
2093:..\src/interruptions.c ****             if (ADC_buf[2 + c_mem.emg.switch_emg] < 0) 
 7096              		.loc 1 2093 0
 7097 0864 AD4B     		ldr	r3, .L545+4
 7098 0866 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 165


 7099 086a 0233     		adds	r3, r3, #2
 7100 086c AC4A     		ldr	r2, .L545+8
 7101 086e 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7102 0872 002B     		cmp	r3, #0
 7103 0874 07DA     		bge	.L440
2094:..\src/interruptions.c ****                 ADC_buf[2 + c_mem.emg.switch_emg] = 0;
 7104              		.loc 1 2094 0
 7105 0876 A94B     		ldr	r3, .L545+4
 7106 0878 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7107 087c 0233     		adds	r3, r3, #2
 7108 087e A84A     		ldr	r2, .L545+8
 7109 0880 0021     		movs	r1, #0
 7110 0882 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 7111              	.L440:
2095:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] += filter((int32)ADC_buf[2 + c_mem.emg.switch_emg], &filt_em
 7112              		.loc 1 2095 0
 7113 0886 A54B     		ldr	r3, .L545+4
 7114 0888 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7115 088c 0233     		adds	r3, r3, #2
 7116 088e A44A     		ldr	r2, .L545+8
 7117 0890 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7118 0894 A349     		ldr	r1, .L545+12
 7119 0896 1846     		mov	r0, r3
 7120 0898 FFF7FEFF 		bl	filter
 7121 089c 0246     		mov	r2, r0
 7122 089e A24B     		ldr	r3, .L545+16
 7123 08a0 D3F8F431 		ldr	r3, [r3, #500]
 7124 08a4 1344     		add	r3, r3, r2
 7125 08a6 A04A     		ldr	r2, .L545+16
 7126 08a8 C2F8F431 		str	r3, [r2, #500]
2096:..\src/interruptions.c ****             
2097:..\src/interruptions.c ****             if (interrupt_flag){
 7127              		.loc 1 2097 0
 7128 08ac 9F4B     		ldr	r3, .L545+20
 7129 08ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7130 08b0 002B     		cmp	r3, #0
 7131 08b2 04D0     		beq	.L441
2098:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7132              		.loc 1 2098 0
 7133 08b4 9D4B     		ldr	r3, .L545+20
 7134 08b6 0022     		movs	r2, #0
 7135 08b8 1A70     		strb	r2, [r3]
2099:..\src/interruptions.c ****                 interrupt_manager();
 7136              		.loc 1 2099 0
 7137 08ba FFF7FEFF 		bl	interrupt_manager
 7138              	.L441:
2100:..\src/interruptions.c ****             }
2101:..\src/interruptions.c ****             
2102:..\src/interruptions.c ****             if (emg_counter_1 == SAMPLES_FOR_EMG_MEAN) {
 7139              		.loc 1 2102 0
 7140 08be 964B     		ldr	r3, .L545
 7141 08c0 1B88     		ldrh	r3, [r3]
 7142 08c2 B3F57A7F 		cmp	r3, #1000
 7143 08c6 22D1     		bne	.L525
2103:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[0] = g_mem.emg.emg_max_value[0] / SAMPLES_FOR_EMG_MEAN; // 
 7144              		.loc 1 2103 0
 7145 08c8 974B     		ldr	r3, .L545+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 166


 7146 08ca D3F8F431 		ldr	r3, [r3, #500]
 7147 08ce 984A     		ldr	r2, .L545+24
 7148 08d0 A2FB0323 		umull	r2, r3, r2, r3
 7149 08d4 9B09     		lsrs	r3, r3, #6
 7150 08d6 944A     		ldr	r2, .L545+16
 7151 08d8 C2F8F431 		str	r3, [r2, #500]
2104:..\src/interruptions.c **** 
2105:..\src/interruptions.c ****                 if (interrupt_flag){
 7152              		.loc 1 2105 0
 7153 08dc 934B     		ldr	r3, .L545+20
 7154 08de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7155 08e0 002B     		cmp	r3, #0
 7156 08e2 04D0     		beq	.L443
2106:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7157              		.loc 1 2106 0
 7158 08e4 914B     		ldr	r3, .L545+20
 7159 08e6 0022     		movs	r2, #0
 7160 08e8 1A70     		strb	r2, [r3]
2107:..\src/interruptions.c ****                     interrupt_manager();
 7161              		.loc 1 2107 0
 7162 08ea FFF7FEFF 		bl	interrupt_manager
 7163              	.L443:
2108:..\src/interruptions.c ****                 }                    
2109:..\src/interruptions.c ****                 
2110:..\src/interruptions.c ****                 LED_control(0);
 7164              		.loc 1 2110 0
 7165 08ee 0020     		movs	r0, #0
 7166 08f0 FFF7FEFF 		bl	LED_control
2111:..\src/interruptions.c **** 				
2112:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 7167              		.loc 1 2112 0
 7168 08f4 884B     		ldr	r3, .L545
 7169 08f6 0022     		movs	r2, #0
 7170 08f8 1A80     		strh	r2, [r3]	@ movhi
2113:..\src/interruptions.c **** 
2114:..\src/interruptions.c ****                 emg_1_status = NORMAL;      // goto normal execution
 7171              		.loc 1 2114 0
 7172 08fa 8E4B     		ldr	r3, .L545+28
 7173 08fc 0022     		movs	r2, #0
 7174 08fe 1A70     		strb	r2, [r3]
2115:..\src/interruptions.c ****             }
2116:..\src/interruptions.c ****             break;
 7175              		.loc 1 2116 0
 7176 0900 05E0     		b	.L525
 7177              	.L522:
2117:..\src/interruptions.c **** 
2118:..\src/interruptions.c ****         default:
2119:..\src/interruptions.c ****             break;
 7178              		.loc 1 2119 0
 7179 0902 00BF     		nop
 7180 0904 04E0     		b	.L437
 7181              	.L523:
2067:..\src/interruptions.c **** 
 7182              		.loc 1 2067 0
 7183 0906 00BF     		nop
 7184 0908 02E0     		b	.L437
 7185              	.L524:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 167


2088:..\src/interruptions.c **** 
 7186              		.loc 1 2088 0
 7187 090a 00BF     		nop
 7188 090c 00E0     		b	.L437
 7189              	.L525:
2116:..\src/interruptions.c **** 
 7190              		.loc 1 2116 0
 7191 090e 00BF     		nop
 7192              	.L437:
2120:..\src/interruptions.c ****     }
2121:..\src/interruptions.c **** 
2122:..\src/interruptions.c ****     if (interrupt_flag){
 7193              		.loc 1 2122 0
 7194 0910 864B     		ldr	r3, .L545+20
 7195 0912 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7196 0914 002B     		cmp	r3, #0
 7197 0916 04D0     		beq	.L444
2123:..\src/interruptions.c ****         interrupt_flag = FALSE;
 7198              		.loc 1 2123 0
 7199 0918 844B     		ldr	r3, .L545+20
 7200 091a 0022     		movs	r2, #0
 7201 091c 1A70     		strb	r2, [r3]
2124:..\src/interruptions.c ****         interrupt_manager();
 7202              		.loc 1 2124 0
 7203 091e FFF7FEFF 		bl	interrupt_manager
 7204              	.L444:
2125:..\src/interruptions.c ****     }
2126:..\src/interruptions.c ****     // EMG 2 calibration state machine
2127:..\src/interruptions.c ****     switch(emg_2_status) {
 7205              		.loc 1 2127 0
 7206 0922 854B     		ldr	r3, .L545+32
 7207 0924 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7208 0926 052B     		cmp	r3, #5
 7209 0928 00F2CA81 		bhi	.L526
 7210 092c 01A2     		adr	r2, .L447
 7211 092e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7212 0932 00BF     		.p2align 2
 7213              	.L447:
 7214 0934 4D090000 		.word	.L446+1
 7215 0938 ED090000 		.word	.L448+1
 7216 093c 150A0000 		.word	.L449+1
 7217 0940 530A0000 		.word	.L450+1
 7218 0944 050B0000 		.word	.L451+1
 7219 0948 490B0000 		.word	.L452+1
 7220              		.p2align 1
 7221              	.L446:
2128:..\src/interruptions.c ****         case NORMAL: // normal execution
2129:..\src/interruptions.c ****         
2130:..\src/interruptions.c ****             if (g_mem.dev.dev_type != AIR_CHAMBERS_FB && g_mem.dev.dev_type != OTBK_ACT_WRIST_MS){
 7222              		.loc 1 2130 0
 7223 094c 764B     		ldr	r3, .L545+16
 7224 094e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7225 0952 022B     		cmp	r3, #2
 7226 0954 14D0     		beq	.L453
 7227              		.loc 1 2130 0 is_stmt 0 discriminator 1
 7228 0956 744B     		ldr	r3, .L545+16
 7229 0958 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 168


 7230 095c 032B     		cmp	r3, #3
 7231 095e 0FD0     		beq	.L453
2131:..\src/interruptions.c ****                 i_aux = ((int32)(ADC_buf[3 - c_mem.emg.switch_emg] - 1639) * 87) >> 5;  //map range
 7232              		.loc 1 2131 0 is_stmt 1
 7233 0960 6E4B     		ldr	r3, .L545+4
 7234 0962 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7235 0966 C3F10303 		rsb	r3, r3, #3
 7236 096a 6D4A     		ldr	r2, .L545+8
 7237 096c 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7238 0970 A3F26763 		subw	r3, r3, #1639
 7239 0974 5722     		movs	r2, #87
 7240 0976 02FB03F3 		mul	r3, r2, r3
 7241 097a 5B11     		asrs	r3, r3, #5
 7242 097c 7B60     		str	r3, [r7, #4]
 7243 097e 08E0     		b	.L454
 7244              	.L453:
2132:..\src/interruptions.c ****             }
2133:..\src/interruptions.c ****             else {  // Use additional ADC channels, so the signal does not pass through AVAGO isola
2134:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[3 - c_mem.emg.switch_emg]);
 7245              		.loc 1 2134 0
 7246 0980 664B     		ldr	r3, .L545+4
 7247 0982 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7248 0986 C3F10303 		rsb	r3, r3, #3
 7249 098a 654A     		ldr	r2, .L545+8
 7250 098c 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7251 0990 7B60     		str	r3, [r7, #4]
 7252              	.L454:
2135:..\src/interruptions.c ****             }
2136:..\src/interruptions.c **** 
2137:..\src/interruptions.c ****             if (i_aux < 0)
 7253              		.loc 1 2137 0
 7254 0992 7B68     		ldr	r3, [r7, #4]
 7255 0994 002B     		cmp	r3, #0
 7256 0996 01DA     		bge	.L455
2138:..\src/interruptions.c ****                 i_aux = 0;
 7257              		.loc 1 2138 0
 7258 0998 0023     		movs	r3, #0
 7259 099a 7B60     		str	r3, [r7, #4]
 7260              	.L455:
2139:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[1]);
 7261              		.loc 1 2139 0
 7262 099c 6749     		ldr	r1, .L545+36
 7263 099e 7868     		ldr	r0, [r7, #4]
 7264 09a0 FFF7FEFF 		bl	filter
 7265 09a4 7860     		str	r0, [r7, #4]
2140:..\src/interruptions.c ****             i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[1];
 7266              		.loc 1 2140 0
 7267 09a6 7B68     		ldr	r3, [r7, #4]
 7268 09a8 9B02     		lsls	r3, r3, #10
 7269 09aa 1A46     		mov	r2, r3
 7270 09ac 5E4B     		ldr	r3, .L545+16
 7271 09ae D3F8F831 		ldr	r3, [r3, #504]
 7272 09b2 B2FBF3F3 		udiv	r3, r2, r3
 7273 09b6 7B60     		str	r3, [r7, #4]
2141:..\src/interruptions.c **** 
2142:..\src/interruptions.c ****             if (interrupt_flag){
 7274              		.loc 1 2142 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 169


 7275 09b8 5C4B     		ldr	r3, .L545+20
 7276 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7277 09bc 002B     		cmp	r3, #0
 7278 09be 04D0     		beq	.L456
2143:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7279              		.loc 1 2143 0
 7280 09c0 5A4B     		ldr	r3, .L545+20
 7281 09c2 0022     		movs	r2, #0
 7282 09c4 1A70     		strb	r2, [r3]
2144:..\src/interruptions.c ****                 interrupt_manager();
 7283              		.loc 1 2144 0
 7284 09c6 FFF7FEFF 		bl	interrupt_manager
 7285              	.L456:
2145:..\src/interruptions.c ****             }
2146:..\src/interruptions.c ****             
2147:..\src/interruptions.c ****             if (i_aux < 0) 
 7286              		.loc 1 2147 0
 7287 09ca 7B68     		ldr	r3, [r7, #4]
 7288 09cc 002B     		cmp	r3, #0
 7289 09ce 02DA     		bge	.L457
2148:..\src/interruptions.c ****                 i_aux = 0;
 7290              		.loc 1 2148 0
 7291 09d0 0023     		movs	r3, #0
 7292 09d2 7B60     		str	r3, [r7, #4]
 7293 09d4 06E0     		b	.L458
 7294              	.L457:
2149:..\src/interruptions.c ****             else 
2150:..\src/interruptions.c ****                 if (i_aux > 1024)
 7295              		.loc 1 2150 0
 7296 09d6 7B68     		ldr	r3, [r7, #4]
 7297 09d8 B3F5806F 		cmp	r3, #1024
 7298 09dc 02DD     		ble	.L458
2151:..\src/interruptions.c ****                     i_aux = 1024;
 7299              		.loc 1 2151 0
 7300 09de 4FF48063 		mov	r3, #1024
 7301 09e2 7B60     		str	r3, [r7, #4]
 7302              	.L458:
2152:..\src/interruptions.c ****             
2153:..\src/interruptions.c ****             g_adc_meas.emg[1] = i_aux;
 7303              		.loc 1 2153 0
 7304 09e4 564A     		ldr	r2, .L545+40
 7305 09e6 7B68     		ldr	r3, [r7, #4]
 7306 09e8 5360     		str	r3, [r2, #4]
2154:..\src/interruptions.c **** 
2155:..\src/interruptions.c ****             break;
 7307              		.loc 1 2155 0
 7308 09ea 72E1     		b	.L459
 7309              	.L448:
2156:..\src/interruptions.c **** 
2157:..\src/interruptions.c ****         case RESET: // reset variables
2158:..\src/interruptions.c ****             emg_counter_2 = 0;
 7310              		.loc 1 2158 0
 7311 09ec 554B     		ldr	r3, .L545+44
 7312 09ee 0022     		movs	r2, #0
 7313 09f0 1A80     		strh	r2, [r3]	@ movhi
2159:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] = 0;
 7314              		.loc 1 2159 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 170


 7315 09f2 4D4B     		ldr	r3, .L545+16
 7316 09f4 0022     		movs	r2, #0
 7317 09f6 C3F8F821 		str	r2, [r3, #504]
2160:..\src/interruptions.c **** 
2161:..\src/interruptions.c ****             if (interrupt_flag){
 7318              		.loc 1 2161 0
 7319 09fa 4C4B     		ldr	r3, .L545+20
 7320 09fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7321 09fe 002B     		cmp	r3, #0
 7322 0a00 04D0     		beq	.L460
2162:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7323              		.loc 1 2162 0
 7324 0a02 4A4B     		ldr	r3, .L545+20
 7325 0a04 0022     		movs	r2, #0
 7326 0a06 1A70     		strb	r2, [r3]
2163:..\src/interruptions.c ****                 interrupt_manager();
 7327              		.loc 1 2163 0
 7328 0a08 FFF7FEFF 		bl	interrupt_manager
 7329              	.L460:
2164:..\src/interruptions.c ****             }
2165:..\src/interruptions.c ****             
2166:..\src/interruptions.c ****             emg_2_status = WAIT; // wait for EMG 1 calibration
 7330              		.loc 1 2166 0
 7331 0a0c 4A4B     		ldr	r3, .L545+32
 7332 0a0e 0422     		movs	r2, #4
 7333 0a10 1A70     		strb	r2, [r3]
2167:..\src/interruptions.c ****             break;
 7334              		.loc 1 2167 0
 7335 0a12 5EE1     		b	.L459
 7336              	.L449:
2168:..\src/interruptions.c **** 
2169:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
2170:..\src/interruptions.c ****             emg_counter_2++;
 7337              		.loc 1 2170 0
 7338 0a14 4B4B     		ldr	r3, .L545+44
 7339 0a16 1B88     		ldrh	r3, [r3]
 7340 0a18 0133     		adds	r3, r3, #1
 7341 0a1a 9AB2     		uxth	r2, r3
 7342 0a1c 494B     		ldr	r3, .L545+44
 7343 0a1e 1A80     		strh	r2, [r3]	@ movhi
2171:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 7344              		.loc 1 2171 0
 7345 0a20 484B     		ldr	r3, .L545+44
 7346 0a22 1B88     		ldrh	r3, [r3]
 7347 0a24 B3F5FA7F 		cmp	r3, #500
 7348 0a28 40F04C81 		bne	.L527
2172:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 7349              		.loc 1 2172 0
 7350 0a2c 454B     		ldr	r3, .L545+44
 7351 0a2e 0022     		movs	r2, #0
 7352 0a30 1A80     		strh	r2, [r3]	@ movhi
2173:..\src/interruptions.c ****                 LED_control(1);
 7353              		.loc 1 2173 0
 7354 0a32 0120     		movs	r0, #1
 7355 0a34 FFF7FEFF 		bl	LED_control
2174:..\src/interruptions.c **** 
2175:..\src/interruptions.c ****                 if (interrupt_flag){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 171


 7356              		.loc 1 2175 0
 7357 0a38 3C4B     		ldr	r3, .L545+20
 7358 0a3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7359 0a3c 002B     		cmp	r3, #0
 7360 0a3e 04D0     		beq	.L462
2176:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7361              		.loc 1 2176 0
 7362 0a40 3A4B     		ldr	r3, .L545+20
 7363 0a42 0022     		movs	r2, #0
 7364 0a44 1A70     		strb	r2, [r3]
2177:..\src/interruptions.c ****                     interrupt_manager();
 7365              		.loc 1 2177 0
 7366 0a46 FFF7FEFF 		bl	interrupt_manager
 7367              	.L462:
2178:..\src/interruptions.c ****                 }
2179:..\src/interruptions.c ****                 
2180:..\src/interruptions.c ****                 emg_2_status = SUM_AND_MEAN;           // sum and mean status
 7368              		.loc 1 2180 0
 7369 0a4a 3B4B     		ldr	r3, .L545+32
 7370 0a4c 0322     		movs	r2, #3
 7371 0a4e 1A70     		strb	r2, [r3]
2181:..\src/interruptions.c ****             }
2182:..\src/interruptions.c ****             break;
 7372              		.loc 1 2182 0
 7373 0a50 38E1     		b	.L527
 7374              	.L450:
2183:..\src/interruptions.c **** 
2184:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2185:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2186:..\src/interruptions.c ****             emg_counter_2++;
 7375              		.loc 1 2186 0
 7376 0a52 3C4B     		ldr	r3, .L545+44
 7377 0a54 1B88     		ldrh	r3, [r3]
 7378 0a56 0133     		adds	r3, r3, #1
 7379 0a58 9AB2     		uxth	r2, r3
 7380 0a5a 3A4B     		ldr	r3, .L545+44
 7381 0a5c 1A80     		strh	r2, [r3]	@ movhi
2187:..\src/interruptions.c ****             if (ADC_buf[3 - c_mem.emg.switch_emg] < 0)
 7382              		.loc 1 2187 0
 7383 0a5e 2F4B     		ldr	r3, .L545+4
 7384 0a60 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7385 0a64 C3F10303 		rsb	r3, r3, #3
 7386 0a68 2D4A     		ldr	r2, .L545+8
 7387 0a6a 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7388 0a6e 002B     		cmp	r3, #0
 7389 0a70 08DA     		bge	.L463
2188:..\src/interruptions.c ****                 ADC_buf[3 - c_mem.emg.switch_emg] = 0;
 7390              		.loc 1 2188 0
 7391 0a72 2A4B     		ldr	r3, .L545+4
 7392 0a74 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7393 0a78 C3F10303 		rsb	r3, r3, #3
 7394 0a7c 284A     		ldr	r2, .L545+8
 7395 0a7e 0021     		movs	r1, #0
 7396 0a80 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 7397              	.L463:
2189:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] += filter((int32)ADC_buf[3 - c_mem.emg.switch_emg], &filt_em
 7398              		.loc 1 2189 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 172


 7399 0a84 254B     		ldr	r3, .L545+4
 7400 0a86 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7401 0a8a C3F10303 		rsb	r3, r3, #3
 7402 0a8e 244A     		ldr	r2, .L545+8
 7403 0a90 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7404 0a94 2949     		ldr	r1, .L545+36
 7405 0a96 1846     		mov	r0, r3
 7406 0a98 FFF7FEFF 		bl	filter
 7407 0a9c 0246     		mov	r2, r0
 7408 0a9e 224B     		ldr	r3, .L545+16
 7409 0aa0 D3F8F831 		ldr	r3, [r3, #504]
 7410 0aa4 1344     		add	r3, r3, r2
 7411 0aa6 204A     		ldr	r2, .L545+16
 7412 0aa8 C2F8F831 		str	r3, [r2, #504]
2190:..\src/interruptions.c **** 
2191:..\src/interruptions.c ****             if (interrupt_flag){
 7413              		.loc 1 2191 0
 7414 0aac 1F4B     		ldr	r3, .L545+20
 7415 0aae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7416 0ab0 002B     		cmp	r3, #0
 7417 0ab2 04D0     		beq	.L464
2192:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7418              		.loc 1 2192 0
 7419 0ab4 1D4B     		ldr	r3, .L545+20
 7420 0ab6 0022     		movs	r2, #0
 7421 0ab8 1A70     		strb	r2, [r3]
2193:..\src/interruptions.c ****                 interrupt_manager();
 7422              		.loc 1 2193 0
 7423 0aba FFF7FEFF 		bl	interrupt_manager
 7424              	.L464:
2194:..\src/interruptions.c ****             }
2195:..\src/interruptions.c ****             
2196:..\src/interruptions.c ****             if (emg_counter_2 == SAMPLES_FOR_EMG_MEAN) {
 7425              		.loc 1 2196 0
 7426 0abe 214B     		ldr	r3, .L545+44
 7427 0ac0 1B88     		ldrh	r3, [r3]
 7428 0ac2 B3F57A7F 		cmp	r3, #1000
 7429 0ac6 40F0FF80 		bne	.L528
2197:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[1] = g_mem.emg.emg_max_value[1] / SAMPLES_FOR_EMG_MEAN; // 
 7430              		.loc 1 2197 0
 7431 0aca 174B     		ldr	r3, .L545+16
 7432 0acc D3F8F831 		ldr	r3, [r3, #504]
 7433 0ad0 174A     		ldr	r2, .L545+24
 7434 0ad2 A2FB0323 		umull	r2, r3, r2, r3
 7435 0ad6 9B09     		lsrs	r3, r3, #6
 7436 0ad8 134A     		ldr	r2, .L545+16
 7437 0ada C2F8F831 		str	r3, [r2, #504]
2198:..\src/interruptions.c ****                 LED_control(0);
 7438              		.loc 1 2198 0
 7439 0ade 0020     		movs	r0, #0
 7440 0ae0 FFF7FEFF 		bl	LED_control
2199:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 7441              		.loc 1 2199 0
 7442 0ae4 174B     		ldr	r3, .L545+44
 7443 0ae6 0022     		movs	r2, #0
 7444 0ae8 1A80     		strh	r2, [r3]	@ movhi
2200:..\src/interruptions.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 173


2201:..\src/interruptions.c ****                 if (interrupt_flag){
 7445              		.loc 1 2201 0
 7446 0aea 104B     		ldr	r3, .L545+20
 7447 0aec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7448 0aee 002B     		cmp	r3, #0
 7449 0af0 04D0     		beq	.L466
2202:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7450              		.loc 1 2202 0
 7451 0af2 0E4B     		ldr	r3, .L545+20
 7452 0af4 0022     		movs	r2, #0
 7453 0af6 1A70     		strb	r2, [r3]
2203:..\src/interruptions.c ****                     interrupt_manager();
 7454              		.loc 1 2203 0
 7455 0af8 FFF7FEFF 		bl	interrupt_manager
 7456              	.L466:
2204:..\src/interruptions.c ****                 }
2205:..\src/interruptions.c ****                 
2206:..\src/interruptions.c ****                 emg_2_status = WAIT_EoC;    // goto end of calibration wait
 7457              		.loc 1 2206 0
 7458 0afc 0E4B     		ldr	r3, .L545+32
 7459 0afe 0522     		movs	r2, #5
 7460 0b00 1A70     		strb	r2, [r3]
2207:..\src/interruptions.c ****             }
2208:..\src/interruptions.c ****             break;
 7461              		.loc 1 2208 0
 7462 0b02 E1E0     		b	.L528
 7463              	.L451:
2209:..\src/interruptions.c **** 
2210:..\src/interruptions.c ****         case WAIT: // wait for EMG calibration to be done
2211:..\src/interruptions.c ****             if (emg_1_status == NORMAL)
 7464              		.loc 1 2211 0
 7465 0b04 0B4B     		ldr	r3, .L545+28
 7466 0b06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7467 0b08 002B     		cmp	r3, #0
 7468 0b0a 40F0DF80 		bne	.L529
2212:..\src/interruptions.c ****                 emg_2_status = DISCARD;           // goto discard sample
 7469              		.loc 1 2212 0
 7470 0b0e 0A4B     		ldr	r3, .L545+32
 7471 0b10 0222     		movs	r2, #2
 7472 0b12 1A70     		strb	r2, [r3]
2213:..\src/interruptions.c ****             break;
 7473              		.loc 1 2213 0
 7474 0b14 DAE0     		b	.L529
 7475              	.L546:
 7476 0b16 00BF     		.align	2
 7477              	.L545:
 7478 0b18 7C010000 		.word	emg_counter_1.10631
 7479 0b1c 00000000 		.word	c_mem
 7480 0b20 00000000 		.word	ADC_buf
 7481 0b24 00000000 		.word	filt_emg
 7482 0b28 00000000 		.word	g_mem
 7483 0b2c 00000000 		.word	interrupt_flag
 7484 0b30 D34D6210 		.word	274877907
 7485 0b34 00000000 		.word	emg_1_status
 7486 0b38 00000000 		.word	emg_2_status
 7487 0b3c 08000000 		.word	filt_emg+8
 7488 0b40 00000000 		.word	g_adc_meas
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 174


 7489 0b44 7E010000 		.word	emg_counter_2.10632
 7490              	.L452:
2214:..\src/interruptions.c **** 
2215:..\src/interruptions.c ****         case WAIT_EoC:  // wait for end of calibration procedure (only for LED visibility reasons)
2216:..\src/interruptions.c ****             emg_counter_2++;
 7491              		.loc 1 2216 0
 7492 0b48 B04B     		ldr	r3, .L547
 7493 0b4a 1B88     		ldrh	r3, [r3]
 7494 0b4c 0133     		adds	r3, r3, #1
 7495 0b4e 9AB2     		uxth	r2, r3
 7496 0b50 AE4B     		ldr	r3, .L547
 7497 0b52 1A80     		strh	r2, [r3]	@ movhi
2217:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 7498              		.loc 1 2217 0
 7499 0b54 AD4B     		ldr	r3, .L547
 7500 0b56 1B88     		ldrh	r3, [r3]
 7501 0b58 B3F5FA7F 		cmp	r3, #500
 7502 0b5c 40F0B880 		bne	.L530
2218:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 7503              		.loc 1 2218 0
 7504 0b60 AA4B     		ldr	r3, .L547
 7505 0b62 0022     		movs	r2, #0
 7506 0b64 1A80     		strh	r2, [r3]	@ movhi
2219:..\src/interruptions.c ****                 
2220:..\src/interruptions.c ****                 if (interrupt_flag){
 7507              		.loc 1 2220 0
 7508 0b66 AA4B     		ldr	r3, .L547+4
 7509 0b68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7510 0b6a 002B     		cmp	r3, #0
 7511 0b6c 04D0     		beq	.L469
2221:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7512              		.loc 1 2221 0
 7513 0b6e A84B     		ldr	r3, .L547+4
 7514 0b70 0022     		movs	r2, #0
 7515 0b72 1A70     		strb	r2, [r3]
2222:..\src/interruptions.c ****                     interrupt_manager();
 7516              		.loc 1 2222 0
 7517 0b74 FFF7FEFF 		bl	interrupt_manager
 7518              	.L469:
2223:..\src/interruptions.c ****                 }
2224:..\src/interruptions.c ****                 
2225:..\src/interruptions.c ****                 for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 7519              		.loc 1 2225 0
 7520 0b78 A64B     		ldr	r3, .L547+8
 7521 0b7a 0022     		movs	r2, #0
 7522 0b7c 1A70     		strb	r2, [r3]
 7523 0b7e 93E0     		b	.L470
 7524              	.L474:
2226:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 7525              		.loc 1 2226 0
 7526 0b80 A44B     		ldr	r3, .L547+8
 7527 0b82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7528 0b84 1946     		mov	r1, r3
 7529 0b86 A44A     		ldr	r2, .L547+12
 7530 0b88 0B46     		mov	r3, r1
 7531 0b8a DB00     		lsls	r3, r3, #3
 7532 0b8c 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 175


 7533 0b8e 1B01     		lsls	r3, r3, #4
 7534 0b90 1344     		add	r3, r3, r2
 7535 0b92 03F58773 		add	r3, r3, #270
 7536 0b96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7537 0b98 022B     		cmp	r3, #2
 7538 0b9a 37D0     		beq	.L471
2227:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 7539              		.loc 1 2227 0 discriminator 1
 7540 0b9c 9D4B     		ldr	r3, .L547+8
 7541 0b9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7542 0ba0 1946     		mov	r1, r3
 7543 0ba2 9D4A     		ldr	r2, .L547+12
 7544 0ba4 0B46     		mov	r3, r1
 7545 0ba6 DB00     		lsls	r3, r3, #3
 7546 0ba8 5B1A     		subs	r3, r3, r1
 7547 0baa 1B01     		lsls	r3, r3, #4
 7548 0bac 1344     		add	r3, r3, r2
 7549 0bae 03F58773 		add	r3, r3, #270
 7550 0bb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2226:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 7551              		.loc 1 2226 0 discriminator 1
 7552 0bb4 032B     		cmp	r3, #3
 7553 0bb6 29D0     		beq	.L471
2228:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 7554              		.loc 1 2228 0
 7555 0bb8 964B     		ldr	r3, .L547+8
 7556 0bba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7557 0bbc 1946     		mov	r1, r3
 7558 0bbe 964A     		ldr	r2, .L547+12
 7559 0bc0 0B46     		mov	r3, r1
 7560 0bc2 DB00     		lsls	r3, r3, #3
 7561 0bc4 5B1A     		subs	r3, r3, r1
 7562 0bc6 1B01     		lsls	r3, r3, #4
 7563 0bc8 1344     		add	r3, r3, r2
 7564 0bca 03F58773 		add	r3, r3, #270
 7565 0bce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2227:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 7566              		.loc 1 2227 0
 7567 0bd0 042B     		cmp	r3, #4
 7568 0bd2 1BD0     		beq	.L471
2229:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 7569              		.loc 1 2229 0
 7570 0bd4 8F4B     		ldr	r3, .L547+8
 7571 0bd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7572 0bd8 1946     		mov	r1, r3
 7573 0bda 8F4A     		ldr	r2, .L547+12
 7574 0bdc 0B46     		mov	r3, r1
 7575 0bde DB00     		lsls	r3, r3, #3
 7576 0be0 5B1A     		subs	r3, r3, r1
 7577 0be2 1B01     		lsls	r3, r3, #4
 7578 0be4 1344     		add	r3, r3, r2
 7579 0be6 03F58773 		add	r3, r3, #270
 7580 0bea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2228:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 7581              		.loc 1 2228 0
 7582 0bec 052B     		cmp	r3, #5
 7583 0bee 0DD0     		beq	.L471
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 176


2230:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 7584              		.loc 1 2230 0
 7585 0bf0 884B     		ldr	r3, .L547+8
 7586 0bf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7587 0bf4 1946     		mov	r1, r3
 7588 0bf6 884A     		ldr	r2, .L547+12
 7589 0bf8 0B46     		mov	r3, r1
 7590 0bfa DB00     		lsls	r3, r3, #3
 7591 0bfc 5B1A     		subs	r3, r3, r1
 7592 0bfe 1B01     		lsls	r3, r3, #4
 7593 0c00 1344     		add	r3, r3, r2
 7594 0c02 03F58773 		add	r3, r3, #270
 7595 0c06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2229:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 7596              		.loc 1 2229 0
 7597 0c08 072B     		cmp	r3, #7
 7598 0c0a 47D1     		bne	.L472
 7599              	.L471:
2231:..\src/interruptions.c ****                         if (c_mem.motor[idx].control_mode == CONTROL_ANGLE) {
 7600              		.loc 1 2231 0
 7601 0c0c 814B     		ldr	r3, .L547+8
 7602 0c0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7603 0c10 1946     		mov	r1, r3
 7604 0c12 814A     		ldr	r2, .L547+12
 7605 0c14 0B46     		mov	r3, r1
 7606 0c16 DB00     		lsls	r3, r3, #3
 7607 0c18 5B1A     		subs	r3, r3, r1
 7608 0c1a 1B01     		lsls	r3, r3, #4
 7609 0c1c 1344     		add	r3, r3, r2
 7610 0c1e 03F20F13 		addw	r3, r3, #271
 7611 0c22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7612 0c24 002B     		cmp	r3, #0
 7613 0c26 19D1     		bne	.L473
2232:..\src/interruptions.c ****                             g_ref[idx].pos = g_meas[g_mem.motor[idx].encoder_line].pos[0];
 7614              		.loc 1 2232 0
 7615 0c28 7A4B     		ldr	r3, .L547+8
 7616 0c2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7617 0c2c 1846     		mov	r0, r3
 7618 0c2e 794B     		ldr	r3, .L547+8
 7619 0c30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7620 0c32 1946     		mov	r1, r3
 7621 0c34 794A     		ldr	r2, .L547+16
 7622 0c36 0B46     		mov	r3, r1
 7623 0c38 DB00     		lsls	r3, r3, #3
 7624 0c3a 5B1A     		subs	r3, r3, r1
 7625 0c3c 1B01     		lsls	r3, r3, #4
 7626 0c3e 1344     		add	r3, r3, r2
 7627 0c40 03F58873 		add	r3, r3, #272
 7628 0c44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7629 0c46 1946     		mov	r1, r3
 7630 0c48 754A     		ldr	r2, .L547+20
 7631 0c4a 3423     		movs	r3, #52
 7632 0c4c 03FB01F3 		mul	r3, r3, r1
 7633 0c50 1344     		add	r3, r3, r2
 7634 0c52 1A68     		ldr	r2, [r3]
 7635 0c54 7349     		ldr	r1, .L547+24
 7636 0c56 0301     		lsls	r3, r0, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 177


 7637 0c58 0B44     		add	r3, r3, r1
 7638 0c5a 1A60     		str	r2, [r3]
 7639              	.L473:
2233:..\src/interruptions.c ****                         }
2234:..\src/interruptions.c ****                         g_ref[idx].onoff = c_mem.motor[idx].activ;
 7640              		.loc 1 2234 0
 7641 0c5c 6D4B     		ldr	r3, .L547+8
 7642 0c5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7643 0c60 1846     		mov	r0, r3
 7644 0c62 6C4B     		ldr	r3, .L547+8
 7645 0c64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7646 0c66 1946     		mov	r1, r3
 7647 0c68 6B4A     		ldr	r2, .L547+12
 7648 0c6a 0B46     		mov	r3, r1
 7649 0c6c DB00     		lsls	r3, r3, #3
 7650 0c6e 5B1A     		subs	r3, r3, r1
 7651 0c70 1B01     		lsls	r3, r3, #4
 7652 0c72 1344     		add	r3, r3, r2
 7653 0c74 E033     		adds	r3, r3, #224
 7654 0c76 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 7655 0c78 6A4A     		ldr	r2, .L547+24
 7656 0c7a 0301     		lsls	r3, r0, #4
 7657 0c7c 1344     		add	r3, r3, r2
 7658 0c7e 0C33     		adds	r3, r3, #12
 7659 0c80 0A46     		mov	r2, r1
 7660 0c82 1A70     		strb	r2, [r3]
2235:..\src/interruptions.c ****                         enable_motor(idx, g_ref[idx].onoff); 
 7661              		.loc 1 2235 0
 7662 0c84 634B     		ldr	r3, .L547+8
 7663 0c86 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 7664 0c88 624B     		ldr	r3, .L547+8
 7665 0c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7666 0c8c 654A     		ldr	r2, .L547+24
 7667 0c8e 1B01     		lsls	r3, r3, #4
 7668 0c90 1344     		add	r3, r3, r2
 7669 0c92 0C33     		adds	r3, r3, #12
 7670 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7671 0c96 1946     		mov	r1, r3
 7672 0c98 FFF7FEFF 		bl	enable_motor
 7673              	.L472:
2225:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 7674              		.loc 1 2225 0 discriminator 2
 7675 0c9c 5D4B     		ldr	r3, .L547+8
 7676 0c9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7677 0ca0 0133     		adds	r3, r3, #1
 7678 0ca2 DAB2     		uxtb	r2, r3
 7679 0ca4 5B4B     		ldr	r3, .L547+8
 7680 0ca6 1A70     		strb	r2, [r3]
 7681              	.L470:
2225:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 7682              		.loc 1 2225 0 is_stmt 0 discriminator 1
 7683 0ca8 5A4B     		ldr	r3, .L547+8
 7684 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7685 0cac 012B     		cmp	r3, #1
 7686 0cae 7FF667AF 		bls	.L474
2236:..\src/interruptions.c ****                     }
2237:..\src/interruptions.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 178


2238:..\src/interruptions.c ****                     
2239:..\src/interruptions.c ****                 memStore(0);        // Store emg_max_value
 7687              		.loc 1 2239 0 is_stmt 1
 7688 0cb2 0020     		movs	r0, #0
 7689 0cb4 FFF7FEFF 		bl	memStore
2240:..\src/interruptions.c ****                     
2241:..\src/interruptions.c ****                 emg_2_status = NORMAL;           // goto normal execution
 7690              		.loc 1 2241 0
 7691 0cb8 5B4B     		ldr	r3, .L547+28
 7692 0cba 0022     		movs	r2, #0
 7693 0cbc 1A70     		strb	r2, [r3]
2242:..\src/interruptions.c ****             }
2243:..\src/interruptions.c ****             break;
 7694              		.loc 1 2243 0
 7695 0cbe 07E0     		b	.L530
 7696              	.L526:
2244:..\src/interruptions.c ****         default:
2245:..\src/interruptions.c ****             break;
 7697              		.loc 1 2245 0
 7698 0cc0 00BF     		nop
 7699 0cc2 06E0     		b	.L459
 7700              	.L527:
2182:..\src/interruptions.c **** 
 7701              		.loc 1 2182 0
 7702 0cc4 00BF     		nop
 7703 0cc6 04E0     		b	.L459
 7704              	.L528:
2208:..\src/interruptions.c **** 
 7705              		.loc 1 2208 0
 7706 0cc8 00BF     		nop
 7707 0cca 02E0     		b	.L459
 7708              	.L529:
2213:..\src/interruptions.c **** 
 7709              		.loc 1 2213 0
 7710 0ccc 00BF     		nop
 7711 0cce 00E0     		b	.L459
 7712              	.L530:
2243:..\src/interruptions.c ****         default:
 7713              		.loc 1 2243 0
 7714 0cd0 00BF     		nop
 7715              	.L459:
2246:..\src/interruptions.c ****     }
2247:..\src/interruptions.c ****         
2248:..\src/interruptions.c ****     if (interrupt_flag){
 7716              		.loc 1 2248 0
 7717 0cd2 4F4B     		ldr	r3, .L547+4
 7718 0cd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7719 0cd6 002B     		cmp	r3, #0
 7720 0cd8 04D0     		beq	.L475
2249:..\src/interruptions.c ****         interrupt_flag = FALSE;
 7721              		.loc 1 2249 0
 7722 0cda 4D4B     		ldr	r3, .L547+4
 7723 0cdc 0022     		movs	r2, #0
 7724 0cde 1A70     		strb	r2, [r3]
2250:..\src/interruptions.c ****         interrupt_manager();
 7725              		.loc 1 2250 0
 7726 0ce0 FFF7FEFF 		bl	interrupt_manager
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 179


 7727              	.L475:
2251:..\src/interruptions.c ****     }
2252:..\src/interruptions.c ****     
2253:..\src/interruptions.c ****     if (c_mem.motor[0].input_mode == INPUT_MODE_JOYSTICK || c_mem.motor[1].input_mode == INPUT_MODE
 7728              		.loc 1 2253 0
 7729 0ce4 4C4B     		ldr	r3, .L547+12
 7730 0ce6 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 7731 0cea 062B     		cmp	r3, #6
 7732 0cec 05D0     		beq	.L476
 7733              		.loc 1 2253 0 is_stmt 0 discriminator 1
 7734 0cee 4A4B     		ldr	r3, .L547+12
 7735 0cf0 93F87E31 		ldrb	r3, [r3, #382]	@ zero_extendqisi2
 7736 0cf4 062B     		cmp	r3, #6
 7737 0cf6 40F0C881 		bne	.L477
 7738              	.L476:
2254:..\src/interruptions.c ****         // Read joystick
2255:..\src/interruptions.c ****         
2256:..\src/interruptions.c ****         switch (joy_UD_status) {
 7739              		.loc 1 2256 0 is_stmt 1
 7740 0cfa 4C4B     		ldr	r3, .L547+32
 7741 0cfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7742 0cfe 052B     		cmp	r3, #5
 7743 0d00 00F2E980 		bhi	.L478
 7744 0d04 01A2     		adr	r2, .L480
 7745 0d06 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7746 0d0a 00BF     		.p2align 2
 7747              	.L480:
 7748 0d0c 250D0000 		.word	.L479+1
 7749 0d10 C30D0000 		.word	.L481+1
 7750 0d14 D70D0000 		.word	.L482+1
 7751 0d18 450E0000 		.word	.L483+1
 7752 0d1c B10E0000 		.word	.L484+1
 7753 0d20 B10E0000 		.word	.L484+1
 7754              		.p2align 1
 7755              	.L479:
2257:..\src/interruptions.c ****             case NORMAL:
2258:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[2]);
 7756              		.loc 1 2258 0
 7757 0d24 424B     		ldr	r3, .L547+36
 7758 0d26 B3F90430 		ldrsh	r3, [r3, #4]
 7759 0d2a 7B60     		str	r3, [r7, #4]
2259:..\src/interruptions.c ****                 // Remap the analog reading from -1024 to 1024.  
2260:..\src/interruptions.c ****                 i_aux = (int32) (((float) (i_aux - UD_mean_value) / UD_mean_value) * c_mem.JOY_spec
 7760              		.loc 1 2260 0
 7761 0d2c 414B     		ldr	r3, .L547+40
 7762 0d2e 1B68     		ldr	r3, [r3]
 7763 0d30 7A68     		ldr	r2, [r7, #4]
 7764 0d32 D31A     		subs	r3, r2, r3
 7765 0d34 1846     		mov	r0, r3
 7766 0d36 FFF7FEFF 		bl	__aeabi_i2f
 7767 0d3a 0446     		mov	r4, r0
 7768 0d3c 3D4B     		ldr	r3, .L547+40
 7769 0d3e 1B68     		ldr	r3, [r3]
 7770 0d40 1846     		mov	r0, r3
 7771 0d42 FFF7FEFF 		bl	__aeabi_i2f
 7772 0d46 0346     		mov	r3, r0
 7773 0d48 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 180


 7774 0d4a 2046     		mov	r0, r4
 7775 0d4c FFF7FEFF 		bl	__aeabi_fdiv
 7776 0d50 0346     		mov	r3, r0
 7777 0d52 1C46     		mov	r4, r3
 7778 0d54 304B     		ldr	r3, .L547+12
 7779 0d56 B3F8B632 		ldrh	r3, [r3, #694]
 7780 0d5a 1846     		mov	r0, r3
 7781 0d5c FFF7FEFF 		bl	__aeabi_i2f
 7782 0d60 0346     		mov	r3, r0
 7783 0d62 1946     		mov	r1, r3
 7784 0d64 2046     		mov	r0, r4
 7785 0d66 FFF7FEFF 		bl	__aeabi_fmul
 7786 0d6a 0346     		mov	r3, r0
 7787 0d6c 1846     		mov	r0, r3
 7788 0d6e FFF7FEFF 		bl	__aeabi_f2iz
 7789 0d72 0346     		mov	r3, r0
 7790 0d74 7B60     		str	r3, [r7, #4]
2261:..\src/interruptions.c ****                 
2262:..\src/interruptions.c ****                 if (interrupt_flag){
 7791              		.loc 1 2262 0
 7792 0d76 264B     		ldr	r3, .L547+4
 7793 0d78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7794 0d7a 002B     		cmp	r3, #0
 7795 0d7c 04D0     		beq	.L485
2263:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7796              		.loc 1 2263 0
 7797 0d7e 244B     		ldr	r3, .L547+4
 7798 0d80 0022     		movs	r2, #0
 7799 0d82 1A70     		strb	r2, [r3]
2264:..\src/interruptions.c ****                     interrupt_manager();
 7800              		.loc 1 2264 0
 7801 0d84 FFF7FEFF 		bl	interrupt_manager
 7802              	.L485:
2265:..\src/interruptions.c ****                 }
2266:..\src/interruptions.c **** 
2267:..\src/interruptions.c ****                 //Saturation
2268:..\src/interruptions.c ****                 if (i_aux < -1024) 
 7803              		.loc 1 2268 0
 7804 0d88 7B68     		ldr	r3, [r7, #4]
 7805 0d8a 13F5806F 		cmn	r3, #1024
 7806 0d8e 01DA     		bge	.L486
2269:..\src/interruptions.c ****                     i_aux = -1024;
 7807              		.loc 1 2269 0
 7808 0d90 294B     		ldr	r3, .L547+44
 7809 0d92 7B60     		str	r3, [r7, #4]
 7810              	.L486:
2270:..\src/interruptions.c ****                 if (i_aux > 1024)
 7811              		.loc 1 2270 0
 7812 0d94 7B68     		ldr	r3, [r7, #4]
 7813 0d96 B3F5806F 		cmp	r3, #1024
 7814 0d9a 02DD     		ble	.L487
2271:..\src/interruptions.c ****                     i_aux = 1024;
 7815              		.loc 1 2271 0
 7816 0d9c 4FF48063 		mov	r3, #1024
 7817 0da0 7B60     		str	r3, [r7, #4]
 7818              	.L487:
2272:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 181


2273:..\src/interruptions.c ****                 g_adc_meas.joystick[1] = (int16) i_aux;
 7819              		.loc 1 2273 0
 7820 0da2 7B68     		ldr	r3, [r7, #4]
 7821 0da4 1BB2     		sxth	r3, r3
 7822 0da6 1A46     		mov	r2, r3
 7823 0da8 244B     		ldr	r3, .L547+48
 7824 0daa 5A62     		str	r2, [r3, #36]
2274:..\src/interruptions.c **** 
2275:..\src/interruptions.c ****                 if (interrupt_flag){
 7825              		.loc 1 2275 0
 7826 0dac 184B     		ldr	r3, .L547+4
 7827 0dae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7828 0db0 002B     		cmp	r3, #0
 7829 0db2 00F08980 		beq	.L531
2276:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7830              		.loc 1 2276 0
 7831 0db6 164B     		ldr	r3, .L547+4
 7832 0db8 0022     		movs	r2, #0
 7833 0dba 1A70     		strb	r2, [r3]
2277:..\src/interruptions.c ****                     interrupt_manager();
 7834              		.loc 1 2277 0
 7835 0dbc FFF7FEFF 		bl	interrupt_manager
2278:..\src/interruptions.c ****                 }
2279:..\src/interruptions.c **** 
2280:..\src/interruptions.c ****             break;
 7836              		.loc 1 2280 0
 7837 0dc0 82E0     		b	.L531
 7838              	.L481:
2281:..\src/interruptions.c **** 
2282:..\src/interruptions.c ****             case RESET: // reset variables
2283:..\src/interruptions.c ****                 UD_counter = 0;
 7839              		.loc 1 2283 0
 7840 0dc2 1F4B     		ldr	r3, .L547+52
 7841 0dc4 0022     		movs	r2, #0
 7842 0dc6 1A80     		strh	r2, [r3]	@ movhi
2284:..\src/interruptions.c ****                 UD_mean_value = 0;
 7843              		.loc 1 2284 0
 7844 0dc8 1A4B     		ldr	r3, .L547+40
 7845 0dca 0022     		movs	r2, #0
 7846 0dcc 1A60     		str	r2, [r3]
2285:..\src/interruptions.c ****                 joy_UD_status = WAIT; // go to waiting status
 7847              		.loc 1 2285 0
 7848 0dce 174B     		ldr	r3, .L547+32
 7849 0dd0 0422     		movs	r2, #4
 7850 0dd2 1A70     		strb	r2, [r3]
2286:..\src/interruptions.c **** 
2287:..\src/interruptions.c ****             break;
 7851              		.loc 1 2287 0
 7852 0dd4 7FE0     		b	.L478
 7853              	.L482:
2288:..\src/interruptions.c **** 
2289:..\src/interruptions.c ****             case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
2290:..\src/interruptions.c ****                 UD_counter++;
 7854              		.loc 1 2290 0
 7855 0dd6 1A4B     		ldr	r3, .L547+52
 7856 0dd8 1B88     		ldrh	r3, [r3]
 7857 0dda 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 182


 7858 0ddc 9AB2     		uxth	r2, r3
 7859 0dde 184B     		ldr	r3, .L547+52
 7860 0de0 1A80     		strh	r2, [r3]	@ movhi
2291:..\src/interruptions.c ****                 if (UD_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
 7861              		.loc 1 2291 0
 7862 0de2 174B     		ldr	r3, .L547+52
 7863 0de4 1B88     		ldrh	r3, [r3]
 7864 0de6 642B     		cmp	r3, #100
 7865 0de8 70D1     		bne	.L532
2292:..\src/interruptions.c ****                     UD_counter = 0;                     // reset counter
 7866              		.loc 1 2292 0
 7867 0dea 154B     		ldr	r3, .L547+52
 7868 0dec 0022     		movs	r2, #0
 7869 0dee 1A80     		strh	r2, [r3]	@ movhi
2293:..\src/interruptions.c **** 
2294:..\src/interruptions.c ****                     if (interrupt_flag){
 7870              		.loc 1 2294 0
 7871 0df0 074B     		ldr	r3, .L547+4
 7872 0df2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7873 0df4 002B     		cmp	r3, #0
 7874 0df6 04D0     		beq	.L490
2295:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 7875              		.loc 1 2295 0
 7876 0df8 054B     		ldr	r3, .L547+4
 7877 0dfa 0022     		movs	r2, #0
 7878 0dfc 1A70     		strb	r2, [r3]
2296:..\src/interruptions.c ****                         interrupt_manager();
 7879              		.loc 1 2296 0
 7880 0dfe FFF7FEFF 		bl	interrupt_manager
 7881              	.L490:
2297:..\src/interruptions.c ****                     }
2298:..\src/interruptions.c **** 
2299:..\src/interruptions.c ****                     joy_UD_status = SUM_AND_MEAN;           // sum and mean status
 7882              		.loc 1 2299 0
 7883 0e02 0A4B     		ldr	r3, .L547+32
 7884 0e04 0322     		movs	r2, #3
 7885 0e06 1A70     		strb	r2, [r3]
2300:..\src/interruptions.c ****                 }
2301:..\src/interruptions.c **** 
2302:..\src/interruptions.c ****             break;
 7886              		.loc 1 2302 0
 7887 0e08 60E0     		b	.L532
 7888              	.L548:
 7889 0e0a 00BF     		.align	2
 7890              	.L547:
 7891 0e0c 7E010000 		.word	emg_counter_2.10632
 7892 0e10 00000000 		.word	interrupt_flag
 7893 0e14 76010000 		.word	idx.10640
 7894 0e18 00000000 		.word	c_mem
 7895 0e1c 00000000 		.word	g_mem
 7896 0e20 00000000 		.word	g_meas
 7897 0e24 00000000 		.word	g_ref
 7898 0e28 00000000 		.word	emg_2_status
 7899 0e2c 00000000 		.word	joy_UD_status
 7900 0e30 00000000 		.word	ADC_buf
 7901 0e34 80010000 		.word	UD_mean_value.10635
 7902 0e38 00FCFFFF 		.word	-1024
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 183


 7903 0e3c 00000000 		.word	g_adc_meas
 7904 0e40 84010000 		.word	UD_counter.10633
 7905              	.L483:
2303:..\src/interruptions.c **** 
2304:..\src/interruptions.c ****             case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2305:..\src/interruptions.c ****                 // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2306:..\src/interruptions.c ****                 UD_counter++;
 7906              		.loc 1 2306 0
 7907 0e44 954B     		ldr	r3, .L549
 7908 0e46 1B88     		ldrh	r3, [r3]
 7909 0e48 0133     		adds	r3, r3, #1
 7910 0e4a 9AB2     		uxth	r2, r3
 7911 0e4c 934B     		ldr	r3, .L549
 7912 0e4e 1A80     		strh	r2, [r3]	@ movhi
2307:..\src/interruptions.c ****                 UD_mean_value += (int32)(ADC_buf[2]);        // No filter
 7913              		.loc 1 2307 0
 7914 0e50 934B     		ldr	r3, .L549+4
 7915 0e52 B3F90430 		ldrsh	r3, [r3, #4]
 7916 0e56 1A46     		mov	r2, r3
 7917 0e58 924B     		ldr	r3, .L549+8
 7918 0e5a 1B68     		ldr	r3, [r3]
 7919 0e5c 1344     		add	r3, r3, r2
 7920 0e5e 914A     		ldr	r2, .L549+8
 7921 0e60 1360     		str	r3, [r2]
2308:..\src/interruptions.c **** 
2309:..\src/interruptions.c ****                 if (interrupt_flag){
 7922              		.loc 1 2309 0
 7923 0e62 914B     		ldr	r3, .L549+12
 7924 0e64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7925 0e66 002B     		cmp	r3, #0
 7926 0e68 04D0     		beq	.L491
2310:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7927              		.loc 1 2310 0
 7928 0e6a 8F4B     		ldr	r3, .L549+12
 7929 0e6c 0022     		movs	r2, #0
 7930 0e6e 1A70     		strb	r2, [r3]
2311:..\src/interruptions.c ****                     interrupt_manager();
 7931              		.loc 1 2311 0
 7932 0e70 FFF7FEFF 		bl	interrupt_manager
 7933              	.L491:
2312:..\src/interruptions.c ****                 }
2313:..\src/interruptions.c **** 
2314:..\src/interruptions.c ****                 if (UD_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
 7934              		.loc 1 2314 0
 7935 0e74 894B     		ldr	r3, .L549
 7936 0e76 1B88     		ldrh	r3, [r3]
 7937 0e78 C82B     		cmp	r3, #200
 7938 0e7a 29D1     		bne	.L533
2315:..\src/interruptions.c ****                     UD_mean_value = UD_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
 7939              		.loc 1 2315 0
 7940 0e7c 894B     		ldr	r3, .L549+8
 7941 0e7e 1B68     		ldr	r3, [r3]
 7942 0e80 8A4A     		ldr	r2, .L549+16
 7943 0e82 82FB0312 		smull	r1, r2, r2, r3
 7944 0e86 9211     		asrs	r2, r2, #6
 7945 0e88 DB17     		asrs	r3, r3, #31
 7946 0e8a D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 184


 7947 0e8c 854A     		ldr	r2, .L549+8
 7948 0e8e 1360     		str	r3, [r2]
2316:..\src/interruptions.c **** 
2317:..\src/interruptions.c ****                     if (interrupt_flag){
 7949              		.loc 1 2317 0
 7950 0e90 854B     		ldr	r3, .L549+12
 7951 0e92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7952 0e94 002B     		cmp	r3, #0
 7953 0e96 04D0     		beq	.L493
2318:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 7954              		.loc 1 2318 0
 7955 0e98 834B     		ldr	r3, .L549+12
 7956 0e9a 0022     		movs	r2, #0
 7957 0e9c 1A70     		strb	r2, [r3]
2319:..\src/interruptions.c ****                         interrupt_manager();
 7958              		.loc 1 2319 0
 7959 0e9e FFF7FEFF 		bl	interrupt_manager
 7960              	.L493:
2320:..\src/interruptions.c ****                     }
2321:..\src/interruptions.c **** 
2322:..\src/interruptions.c ****                     UD_counter = 0;          // reset counter
 7961              		.loc 1 2322 0
 7962 0ea2 7E4B     		ldr	r3, .L549
 7963 0ea4 0022     		movs	r2, #0
 7964 0ea6 1A80     		strh	r2, [r3]	@ movhi
2323:..\src/interruptions.c ****                     joy_UD_status = NORMAL;           // goto normal execution
 7965              		.loc 1 2323 0
 7966 0ea8 814B     		ldr	r3, .L549+20
 7967 0eaa 0022     		movs	r2, #0
 7968 0eac 1A70     		strb	r2, [r3]
2324:..\src/interruptions.c ****                 }
2325:..\src/interruptions.c ****             break;
 7969              		.loc 1 2325 0
 7970 0eae 0FE0     		b	.L533
 7971              	.L484:
2326:..\src/interruptions.c **** 
2327:..\src/interruptions.c ****             case WAIT: case WAIT_EoC: // wait for both EMG calibrations to be done
2328:..\src/interruptions.c ****                 if (emg_1_status == NORMAL && emg_2_status == NORMAL)
 7972              		.loc 1 2328 0
 7973 0eb0 804B     		ldr	r3, .L549+24
 7974 0eb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7975 0eb4 002B     		cmp	r3, #0
 7976 0eb6 0DD1     		bne	.L534
 7977              		.loc 1 2328 0 is_stmt 0 discriminator 1
 7978 0eb8 7F4B     		ldr	r3, .L549+28
 7979 0eba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7980 0ebc 002B     		cmp	r3, #0
 7981 0ebe 09D1     		bne	.L534
2329:..\src/interruptions.c ****                     joy_UD_status = DISCARD;           // goto discard sample
 7982              		.loc 1 2329 0 is_stmt 1
 7983 0ec0 7B4B     		ldr	r3, .L549+20
 7984 0ec2 0222     		movs	r2, #2
 7985 0ec4 1A70     		strb	r2, [r3]
2330:..\src/interruptions.c ****             break;
 7986              		.loc 1 2330 0
 7987 0ec6 05E0     		b	.L534
 7988              	.L531:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 185


2280:..\src/interruptions.c **** 
 7989              		.loc 1 2280 0
 7990 0ec8 00BF     		nop
 7991 0eca 04E0     		b	.L478
 7992              	.L532:
2302:..\src/interruptions.c **** 
 7993              		.loc 1 2302 0
 7994 0ecc 00BF     		nop
 7995 0ece 02E0     		b	.L478
 7996              	.L533:
2325:..\src/interruptions.c **** 
 7997              		.loc 1 2325 0
 7998 0ed0 00BF     		nop
 7999 0ed2 00E0     		b	.L478
 8000              	.L534:
 8001              		.loc 1 2330 0
 8002 0ed4 00BF     		nop
 8003              	.L478:
2331:..\src/interruptions.c ****         }
2332:..\src/interruptions.c **** 
2333:..\src/interruptions.c ****         if (interrupt_flag){
 8004              		.loc 1 2333 0
 8005 0ed6 744B     		ldr	r3, .L549+12
 8006 0ed8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8007 0eda 002B     		cmp	r3, #0
 8008 0edc 04D0     		beq	.L495
2334:..\src/interruptions.c ****             interrupt_flag = FALSE;
 8009              		.loc 1 2334 0
 8010 0ede 724B     		ldr	r3, .L549+12
 8011 0ee0 0022     		movs	r2, #0
 8012 0ee2 1A70     		strb	r2, [r3]
2335:..\src/interruptions.c ****             interrupt_manager();
 8013              		.loc 1 2335 0
 8014 0ee4 FFF7FEFF 		bl	interrupt_manager
 8015              	.L495:
2336:..\src/interruptions.c ****         }
2337:..\src/interruptions.c ****             
2338:..\src/interruptions.c ****         switch (joy_LR_status) {
 8016              		.loc 1 2338 0
 8017 0ee8 744B     		ldr	r3, .L549+32
 8018 0eea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8019 0eec 052B     		cmp	r3, #5
 8020 0eee 00F2C380 		bhi	.L496
 8021 0ef2 01A2     		adr	r2, .L498
 8022 0ef4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8023              		.p2align 2
 8024              	.L498:
 8025 0ef8 110F0000 		.word	.L497+1
 8026 0efc AD0F0000 		.word	.L499+1
 8027 0f00 C10F0000 		.word	.L500+1
 8028 0f04 F50F0000 		.word	.L501+1
 8029 0f08 4F100000 		.word	.L502+1
 8030 0f0c 4F100000 		.word	.L502+1
 8031              		.p2align 1
 8032              	.L497:
2339:..\src/interruptions.c ****             case NORMAL:
2340:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[3]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 186


 8033              		.loc 1 2340 0
 8034 0f10 634B     		ldr	r3, .L549+4
 8035 0f12 B3F90630 		ldrsh	r3, [r3, #6]
 8036 0f16 7B60     		str	r3, [r7, #4]
2341:..\src/interruptions.c **** 
2342:..\src/interruptions.c ****                 i_aux = (int32) (((float) (i_aux - LR_mean_value) / LR_mean_value) * c_mem.JOY_spec
 8037              		.loc 1 2342 0
 8038 0f18 694B     		ldr	r3, .L549+36
 8039 0f1a 1B68     		ldr	r3, [r3]
 8040 0f1c 7A68     		ldr	r2, [r7, #4]
 8041 0f1e D31A     		subs	r3, r2, r3
 8042 0f20 1846     		mov	r0, r3
 8043 0f22 FFF7FEFF 		bl	__aeabi_i2f
 8044 0f26 0446     		mov	r4, r0
 8045 0f28 654B     		ldr	r3, .L549+36
 8046 0f2a 1B68     		ldr	r3, [r3]
 8047 0f2c 1846     		mov	r0, r3
 8048 0f2e FFF7FEFF 		bl	__aeabi_i2f
 8049 0f32 0346     		mov	r3, r0
 8050 0f34 1946     		mov	r1, r3
 8051 0f36 2046     		mov	r0, r4
 8052 0f38 FFF7FEFF 		bl	__aeabi_fdiv
 8053 0f3c 0346     		mov	r3, r0
 8054 0f3e 1C46     		mov	r4, r3
 8055 0f40 604B     		ldr	r3, .L549+40
 8056 0f42 B3F8B432 		ldrh	r3, [r3, #692]
 8057 0f46 1846     		mov	r0, r3
 8058 0f48 FFF7FEFF 		bl	__aeabi_i2f
 8059 0f4c 0346     		mov	r3, r0
 8060 0f4e 1946     		mov	r1, r3
 8061 0f50 2046     		mov	r0, r4
 8062 0f52 FFF7FEFF 		bl	__aeabi_fmul
 8063 0f56 0346     		mov	r3, r0
 8064 0f58 1846     		mov	r0, r3
 8065 0f5a FFF7FEFF 		bl	__aeabi_f2iz
 8066 0f5e 0346     		mov	r3, r0
 8067 0f60 7B60     		str	r3, [r7, #4]
2343:..\src/interruptions.c ****                 
2344:..\src/interruptions.c ****                 if (interrupt_flag){
 8068              		.loc 1 2344 0
 8069 0f62 514B     		ldr	r3, .L549+12
 8070 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8071 0f66 002B     		cmp	r3, #0
 8072 0f68 04D0     		beq	.L503
2345:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8073              		.loc 1 2345 0
 8074 0f6a 4F4B     		ldr	r3, .L549+12
 8075 0f6c 0022     		movs	r2, #0
 8076 0f6e 1A70     		strb	r2, [r3]
2346:..\src/interruptions.c ****                     interrupt_manager();
 8077              		.loc 1 2346 0
 8078 0f70 FFF7FEFF 		bl	interrupt_manager
 8079              	.L503:
2347:..\src/interruptions.c ****                 }
2348:..\src/interruptions.c **** 
2349:..\src/interruptions.c ****                 //Saturation
2350:..\src/interruptions.c ****                 if (i_aux < -1024)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 187


 8080              		.loc 1 2350 0
 8081 0f74 7B68     		ldr	r3, [r7, #4]
 8082 0f76 13F5806F 		cmn	r3, #1024
 8083 0f7a 01DA     		bge	.L504
2351:..\src/interruptions.c ****                     i_aux = -1024;
 8084              		.loc 1 2351 0
 8085 0f7c 524B     		ldr	r3, .L549+44
 8086 0f7e 7B60     		str	r3, [r7, #4]
 8087              	.L504:
2352:..\src/interruptions.c ****                 if (i_aux > 1024)
 8088              		.loc 1 2352 0
 8089 0f80 7B68     		ldr	r3, [r7, #4]
 8090 0f82 B3F5806F 		cmp	r3, #1024
 8091 0f86 02DD     		ble	.L505
2353:..\src/interruptions.c ****                     i_aux = 1024;
 8092              		.loc 1 2353 0
 8093 0f88 4FF48063 		mov	r3, #1024
 8094 0f8c 7B60     		str	r3, [r7, #4]
 8095              	.L505:
2354:..\src/interruptions.c **** 
2355:..\src/interruptions.c ****                 if (interrupt_flag){
 8096              		.loc 1 2355 0
 8097 0f8e 464B     		ldr	r3, .L549+12
 8098 0f90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8099 0f92 002B     		cmp	r3, #0
 8100 0f94 04D0     		beq	.L506
2356:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8101              		.loc 1 2356 0
 8102 0f96 444B     		ldr	r3, .L549+12
 8103 0f98 0022     		movs	r2, #0
 8104 0f9a 1A70     		strb	r2, [r3]
2357:..\src/interruptions.c ****                     interrupt_manager();
 8105              		.loc 1 2357 0
 8106 0f9c FFF7FEFF 		bl	interrupt_manager
 8107              	.L506:
2358:..\src/interruptions.c ****                 }
2359:..\src/interruptions.c **** 
2360:..\src/interruptions.c ****                 g_adc_meas.joystick[0] = (int16) i_aux;
 8108              		.loc 1 2360 0
 8109 0fa0 7B68     		ldr	r3, [r7, #4]
 8110 0fa2 1BB2     		sxth	r3, r3
 8111 0fa4 1A46     		mov	r2, r3
 8112 0fa6 494B     		ldr	r3, .L549+48
 8113 0fa8 1A62     		str	r2, [r3, #32]
2361:..\src/interruptions.c **** 
2362:..\src/interruptions.c ****             break;
 8114              		.loc 1 2362 0
 8115 0faa 65E0     		b	.L496
 8116              	.L499:
2363:..\src/interruptions.c **** 
2364:..\src/interruptions.c ****             case RESET: // reset variables
2365:..\src/interruptions.c ****                 LR_counter = 0;
 8117              		.loc 1 2365 0
 8118 0fac 484B     		ldr	r3, .L549+52
 8119 0fae 0022     		movs	r2, #0
 8120 0fb0 1A80     		strh	r2, [r3]	@ movhi
2366:..\src/interruptions.c ****                 LR_mean_value = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 188


 8121              		.loc 1 2366 0
 8122 0fb2 434B     		ldr	r3, .L549+36
 8123 0fb4 0022     		movs	r2, #0
 8124 0fb6 1A60     		str	r2, [r3]
2367:..\src/interruptions.c ****                 joy_LR_status = WAIT; // goes waiting for all conversions to be done
 8125              		.loc 1 2367 0
 8126 0fb8 404B     		ldr	r3, .L549+32
 8127 0fba 0422     		movs	r2, #4
 8128 0fbc 1A70     		strb	r2, [r3]
2368:..\src/interruptions.c ****             break;
 8129              		.loc 1 2368 0
 8130 0fbe 5BE0     		b	.L496
 8131              	.L500:
2369:..\src/interruptions.c **** 
2370:..\src/interruptions.c ****             case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples8
2371:..\src/interruptions.c ****                 LR_counter++;
 8132              		.loc 1 2371 0
 8133 0fc0 434B     		ldr	r3, .L549+52
 8134 0fc2 1B88     		ldrh	r3, [r3]
 8135 0fc4 0133     		adds	r3, r3, #1
 8136 0fc6 9AB2     		uxth	r2, r3
 8137 0fc8 414B     		ldr	r3, .L549+52
 8138 0fca 1A80     		strh	r2, [r3]	@ movhi
2372:..\src/interruptions.c ****                 if (LR_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
 8139              		.loc 1 2372 0
 8140 0fcc 404B     		ldr	r3, .L549+52
 8141 0fce 1B88     		ldrh	r3, [r3]
 8142 0fd0 642B     		cmp	r3, #100
 8143 0fd2 4CD1     		bne	.L535
2373:..\src/interruptions.c ****                     LR_counter = 0;                     // reset counter
 8144              		.loc 1 2373 0
 8145 0fd4 3E4B     		ldr	r3, .L549+52
 8146 0fd6 0022     		movs	r2, #0
 8147 0fd8 1A80     		strh	r2, [r3]	@ movhi
2374:..\src/interruptions.c **** 
2375:..\src/interruptions.c ****                     if (interrupt_flag){
 8148              		.loc 1 2375 0
 8149 0fda 334B     		ldr	r3, .L549+12
 8150 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8151 0fde 002B     		cmp	r3, #0
 8152 0fe0 04D0     		beq	.L508
2376:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 8153              		.loc 1 2376 0
 8154 0fe2 314B     		ldr	r3, .L549+12
 8155 0fe4 0022     		movs	r2, #0
 8156 0fe6 1A70     		strb	r2, [r3]
2377:..\src/interruptions.c ****                         interrupt_manager();
 8157              		.loc 1 2377 0
 8158 0fe8 FFF7FEFF 		bl	interrupt_manager
 8159              	.L508:
2378:..\src/interruptions.c ****                     }
2379:..\src/interruptions.c **** 
2380:..\src/interruptions.c ****                     joy_LR_status = SUM_AND_MEAN;           // sum and mean status
 8160              		.loc 1 2380 0
 8161 0fec 334B     		ldr	r3, .L549+32
 8162 0fee 0322     		movs	r2, #3
 8163 0ff0 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 189


2381:..\src/interruptions.c ****                 }
2382:..\src/interruptions.c ****             break;
 8164              		.loc 1 2382 0
 8165 0ff2 3CE0     		b	.L535
 8166              	.L501:
2383:..\src/interruptions.c **** 
2384:..\src/interruptions.c ****             case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2385:..\src/interruptions.c ****                 // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2386:..\src/interruptions.c ****                 LR_counter++;
 8167              		.loc 1 2386 0
 8168 0ff4 364B     		ldr	r3, .L549+52
 8169 0ff6 1B88     		ldrh	r3, [r3]
 8170 0ff8 0133     		adds	r3, r3, #1
 8171 0ffa 9AB2     		uxth	r2, r3
 8172 0ffc 344B     		ldr	r3, .L549+52
 8173 0ffe 1A80     		strh	r2, [r3]	@ movhi
2387:..\src/interruptions.c ****                 LR_mean_value += (int32)(ADC_buf[3]);
 8174              		.loc 1 2387 0
 8175 1000 274B     		ldr	r3, .L549+4
 8176 1002 B3F90630 		ldrsh	r3, [r3, #6]
 8177 1006 1A46     		mov	r2, r3
 8178 1008 2D4B     		ldr	r3, .L549+36
 8179 100a 1B68     		ldr	r3, [r3]
 8180 100c 1344     		add	r3, r3, r2
 8181 100e 2C4A     		ldr	r2, .L549+36
 8182 1010 1360     		str	r3, [r2]
2388:..\src/interruptions.c ****                 if (LR_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
 8183              		.loc 1 2388 0
 8184 1012 2F4B     		ldr	r3, .L549+52
 8185 1014 1B88     		ldrh	r3, [r3]
 8186 1016 C82B     		cmp	r3, #200
 8187 1018 2BD1     		bne	.L536
2389:..\src/interruptions.c ****                     LR_mean_value = LR_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
 8188              		.loc 1 2389 0
 8189 101a 294B     		ldr	r3, .L549+36
 8190 101c 1B68     		ldr	r3, [r3]
 8191 101e 234A     		ldr	r2, .L549+16
 8192 1020 82FB0312 		smull	r1, r2, r2, r3
 8193 1024 9211     		asrs	r2, r2, #6
 8194 1026 DB17     		asrs	r3, r3, #31
 8195 1028 D31A     		subs	r3, r2, r3
 8196 102a 254A     		ldr	r2, .L549+36
 8197 102c 1360     		str	r3, [r2]
2390:..\src/interruptions.c ****                     
2391:..\src/interruptions.c ****                     if (interrupt_flag){
 8198              		.loc 1 2391 0
 8199 102e 1E4B     		ldr	r3, .L549+12
 8200 1030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8201 1032 002B     		cmp	r3, #0
 8202 1034 04D0     		beq	.L510
2392:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 8203              		.loc 1 2392 0
 8204 1036 1C4B     		ldr	r3, .L549+12
 8205 1038 0022     		movs	r2, #0
 8206 103a 1A70     		strb	r2, [r3]
2393:..\src/interruptions.c ****                         interrupt_manager();
 8207              		.loc 1 2393 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 190


 8208 103c FFF7FEFF 		bl	interrupt_manager
 8209              	.L510:
2394:..\src/interruptions.c ****                     }
2395:..\src/interruptions.c **** 
2396:..\src/interruptions.c ****                     LR_counter = 0;               // reset counter
 8210              		.loc 1 2396 0
 8211 1040 234B     		ldr	r3, .L549+52
 8212 1042 0022     		movs	r2, #0
 8213 1044 1A80     		strh	r2, [r3]	@ movhi
2397:..\src/interruptions.c ****                     joy_LR_status = NORMAL;           // goto normal execution
 8214              		.loc 1 2397 0
 8215 1046 1D4B     		ldr	r3, .L549+32
 8216 1048 0022     		movs	r2, #0
 8217 104a 1A70     		strb	r2, [r3]
2398:..\src/interruptions.c ****                 }
2399:..\src/interruptions.c ****             break;
 8218              		.loc 1 2399 0
 8219 104c 11E0     		b	.L536
 8220              	.L502:
2400:..\src/interruptions.c **** 
2401:..\src/interruptions.c ****             case WAIT: case WAIT_EoC:
2402:..\src/interruptions.c ****                 if(emg_1_status == NORMAL && emg_2_status == NORMAL && joy_UD_status == NORMAL)
 8221              		.loc 1 2402 0
 8222 104e 194B     		ldr	r3, .L549+24
 8223 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8224 1052 002B     		cmp	r3, #0
 8225 1054 0FD1     		bne	.L537
 8226              		.loc 1 2402 0 is_stmt 0 discriminator 1
 8227 1056 184B     		ldr	r3, .L549+28
 8228 1058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8229 105a 002B     		cmp	r3, #0
 8230 105c 0BD1     		bne	.L537
 8231              		.loc 1 2402 0 discriminator 2
 8232 105e 144B     		ldr	r3, .L549+20
 8233 1060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8234 1062 002B     		cmp	r3, #0
 8235 1064 07D1     		bne	.L537
2403:..\src/interruptions.c ****                     joy_LR_status = DISCARD;
 8236              		.loc 1 2403 0 is_stmt 1
 8237 1066 154B     		ldr	r3, .L549+32
 8238 1068 0222     		movs	r2, #2
 8239 106a 1A70     		strb	r2, [r3]
2404:..\src/interruptions.c ****             break;
 8240              		.loc 1 2404 0
 8241 106c 03E0     		b	.L537
 8242              	.L535:
2382:..\src/interruptions.c **** 
 8243              		.loc 1 2382 0
 8244 106e 00BF     		nop
 8245 1070 02E0     		b	.L496
 8246              	.L536:
2399:..\src/interruptions.c **** 
 8247              		.loc 1 2399 0
 8248 1072 00BF     		nop
 8249 1074 00E0     		b	.L496
 8250              	.L537:
 8251              		.loc 1 2404 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 191


 8252 1076 00BF     		nop
 8253              	.L496:
2405:..\src/interruptions.c ****         }
2406:..\src/interruptions.c ****        
2407:..\src/interruptions.c ****         if (interrupt_flag){
 8254              		.loc 1 2407 0
 8255 1078 0B4B     		ldr	r3, .L549+12
 8256 107a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8257 107c 002B     		cmp	r3, #0
 8258 107e 04D0     		beq	.L477
2408:..\src/interruptions.c ****             interrupt_flag = FALSE;
 8259              		.loc 1 2408 0
 8260 1080 094B     		ldr	r3, .L549+12
 8261 1082 0022     		movs	r2, #0
 8262 1084 1A70     		strb	r2, [r3]
2409:..\src/interruptions.c ****             interrupt_manager();
 8263              		.loc 1 2409 0
 8264 1086 FFF7FEFF 		bl	interrupt_manager
 8265              	.L477:
2410:..\src/interruptions.c ****         }
2411:..\src/interruptions.c ****     }
2412:..\src/interruptions.c ****     
2413:..\src/interruptions.c ****     // Read also EMG additional sensors port
2414:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 6) {
 8266              		.loc 1 2414 0
 8267 108a 124B     		ldr	r3, .L549+56
 8268 108c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8269 108e 062B     		cmp	r3, #6
 8270 1090 73D9     		bls	.L538
2415:..\src/interruptions.c ****         
2416:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 8271              		.loc 1 2416 0
 8272 1092 114B     		ldr	r3, .L549+60
 8273 1094 0022     		movs	r2, #0
 8274 1096 1A70     		strb	r2, [r3]
 8275 1098 6BE0     		b	.L513
 8276              	.L550:
 8277 109a 00BF     		.align	2
 8278              	.L549:
 8279 109c 84010000 		.word	UD_counter.10633
 8280 10a0 00000000 		.word	ADC_buf
 8281 10a4 80010000 		.word	UD_mean_value.10635
 8282 10a8 00000000 		.word	interrupt_flag
 8283 10ac 1F85EB51 		.word	1374389535
 8284 10b0 00000000 		.word	joy_UD_status
 8285 10b4 00000000 		.word	emg_1_status
 8286 10b8 00000000 		.word	emg_2_status
 8287 10bc 00000000 		.word	joy_LR_status
 8288 10c0 88010000 		.word	LR_mean_value.10636
 8289 10c4 00000000 		.word	c_mem
 8290 10c8 00FCFFFF 		.word	-1024
 8291 10cc 00000000 		.word	g_adc_meas
 8292 10d0 8C010000 		.word	LR_counter.10634
 8293 10d4 00000000 		.word	NUM_OF_ANALOG_INPUTS
 8294 10d8 76010000 		.word	idx.10640
 8295              	.L520:
2417:..\src/interruptions.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 192


2418:..\src/interruptions.c ****             i_aux = (int32)(ADC_buf[6 + idx]);
 8296              		.loc 1 2418 0
 8297 10dc 294B     		ldr	r3, .L551
 8298 10de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8299 10e0 0633     		adds	r3, r3, #6
 8300 10e2 294A     		ldr	r2, .L551+4
 8301 10e4 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 8302 10e8 7B60     		str	r3, [r7, #4]
2419:..\src/interruptions.c ****             if (i_aux < 0) 
 8303              		.loc 1 2419 0
 8304 10ea 7B68     		ldr	r3, [r7, #4]
 8305 10ec 002B     		cmp	r3, #0
 8306 10ee 01DA     		bge	.L514
2420:..\src/interruptions.c ****                 i_aux = 0;
 8307              		.loc 1 2420 0
 8308 10f0 0023     		movs	r3, #0
 8309 10f2 7B60     		str	r3, [r7, #4]
 8310              	.L514:
2421:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[2+idx]);
 8311              		.loc 1 2421 0
 8312 10f4 234B     		ldr	r3, .L551
 8313 10f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8314 10f8 0233     		adds	r3, r3, #2
 8315 10fa DB00     		lsls	r3, r3, #3
 8316 10fc 234A     		ldr	r2, .L551+8
 8317 10fe 1344     		add	r3, r3, r2
 8318 1100 1946     		mov	r1, r3
 8319 1102 7868     		ldr	r0, [r7, #4]
 8320 1104 FFF7FEFF 		bl	filter
 8321 1108 7860     		str	r0, [r7, #4]
2422:..\src/interruptions.c ****             i_aux = (i_aux << 10) / 1024;
 8322              		.loc 1 2422 0
 8323 110a 7B68     		ldr	r3, [r7, #4]
 8324 110c 9B02     		lsls	r3, r3, #10
 8325 110e 002B     		cmp	r3, #0
 8326 1110 01DA     		bge	.L515
 8327 1112 03F2FF33 		addw	r3, r3, #1023
 8328              	.L515:
 8329 1116 9B12     		asrs	r3, r3, #10
 8330 1118 7B60     		str	r3, [r7, #4]
2423:..\src/interruptions.c **** 
2424:..\src/interruptions.c ****             if (interrupt_flag){
 8331              		.loc 1 2424 0
 8332 111a 1D4B     		ldr	r3, .L551+12
 8333 111c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8334 111e 002B     		cmp	r3, #0
 8335 1120 04D0     		beq	.L516
2425:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 8336              		.loc 1 2425 0
 8337 1122 1B4B     		ldr	r3, .L551+12
 8338 1124 0022     		movs	r2, #0
 8339 1126 1A70     		strb	r2, [r3]
2426:..\src/interruptions.c ****                 interrupt_manager();
 8340              		.loc 1 2426 0
 8341 1128 FFF7FEFF 		bl	interrupt_manager
 8342              	.L516:
2427:..\src/interruptions.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 193


2428:..\src/interruptions.c ****             //Saturation
2429:..\src/interruptions.c ****             if (i_aux < 0)
 8343              		.loc 1 2429 0
 8344 112c 7B68     		ldr	r3, [r7, #4]
 8345 112e 002B     		cmp	r3, #0
 8346 1130 02DA     		bge	.L517
2430:..\src/interruptions.c ****                 i_aux = 0;
 8347              		.loc 1 2430 0
 8348 1132 0023     		movs	r3, #0
 8349 1134 7B60     		str	r3, [r7, #4]
 8350 1136 06E0     		b	.L518
 8351              	.L517:
2431:..\src/interruptions.c ****             else 
2432:..\src/interruptions.c ****                 if (i_aux > 1024) 
 8352              		.loc 1 2432 0
 8353 1138 7B68     		ldr	r3, [r7, #4]
 8354 113a B3F5806F 		cmp	r3, #1024
 8355 113e 02DD     		ble	.L518
2433:..\src/interruptions.c ****                     i_aux = 1024;
 8356              		.loc 1 2433 0
 8357 1140 4FF48063 		mov	r3, #1024
 8358 1144 7B60     		str	r3, [r7, #4]
 8359              	.L518:
2434:..\src/interruptions.c ****             
2435:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = i_aux;
 8360              		.loc 1 2435 0
 8361 1146 0F4B     		ldr	r3, .L551
 8362 1148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8363 114a 1249     		ldr	r1, .L551+16
 8364 114c 0233     		adds	r3, r3, #2
 8365 114e 7A68     		ldr	r2, [r7, #4]
 8366 1150 41F82320 		str	r2, [r1, r3, lsl #2]
2436:..\src/interruptions.c **** 
2437:..\src/interruptions.c ****             if (interrupt_flag){
 8367              		.loc 1 2437 0
 8368 1154 0E4B     		ldr	r3, .L551+12
 8369 1156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8370 1158 002B     		cmp	r3, #0
 8371 115a 04D0     		beq	.L519
2438:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 8372              		.loc 1 2438 0
 8373 115c 0C4B     		ldr	r3, .L551+12
 8374 115e 0022     		movs	r2, #0
 8375 1160 1A70     		strb	r2, [r3]
2439:..\src/interruptions.c ****                 interrupt_manager();
 8376              		.loc 1 2439 0
 8377 1162 FFF7FEFF 		bl	interrupt_manager
 8378              	.L519:
2416:..\src/interruptions.c ****             
 8379              		.loc 1 2416 0 discriminator 2
 8380 1166 074B     		ldr	r3, .L551
 8381 1168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8382 116a 0133     		adds	r3, r3, #1
 8383 116c DAB2     		uxtb	r2, r3
 8384 116e 054B     		ldr	r3, .L551
 8385 1170 1A70     		strb	r2, [r3]
 8386              	.L513:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 194


2416:..\src/interruptions.c ****             
 8387              		.loc 1 2416 0 is_stmt 0 discriminator 1
 8388 1172 044B     		ldr	r3, .L551
 8389 1174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8390 1176 052B     		cmp	r3, #5
 8391 1178 B0D9     		bls	.L520
 8392              	.L538:
2440:..\src/interruptions.c ****             }
2441:..\src/interruptions.c ****         }
2442:..\src/interruptions.c ****     }
2443:..\src/interruptions.c ****     
2444:..\src/interruptions.c **** }
 8393              		.loc 1 2444 0 is_stmt 1
 8394 117a 00BF     		nop
 8395 117c 0C37     		adds	r7, r7, #12
 8396              		.cfi_def_cfa_offset 20
 8397 117e BD46     		mov	sp, r7
 8398              		.cfi_def_cfa_register 13
 8399              		@ sp needed
 8400 1180 F0BD     		pop	{r4, r5, r6, r7, pc}
 8401              	.L552:
 8402 1182 00BF     		.align	2
 8403              	.L551:
 8404 1184 76010000 		.word	idx.10640
 8405 1188 00000000 		.word	ADC_buf
 8406 118c 00000000 		.word	filt_emg
 8407 1190 00000000 		.word	interrupt_flag
 8408 1194 00000000 		.word	g_adc_meas
 8409              		.cfi_endproc
 8410              	.LFE74:
 8411              		.size	analog_read_end, .-analog_read_end
 8412              		.section	.text.overcurrent_control,"ax",%progbits
 8413              		.align	2
 8414              		.global	overcurrent_control
 8415              		.thumb
 8416              		.thumb_func
 8417              		.type	overcurrent_control, %function
 8418              	overcurrent_control:
 8419              	.LFB75:
2445:..\src/interruptions.c **** 
2446:..\src/interruptions.c **** //==============================================================================
2447:..\src/interruptions.c **** //                                                           OVERCURRENT CONTROL
2448:..\src/interruptions.c **** //==============================================================================
2449:..\src/interruptions.c **** 
2450:..\src/interruptions.c **** void overcurrent_control() {
 8420              		.loc 1 2450 0
 8421              		.cfi_startproc
 8422              		@ args = 0, pretend = 0, frame = 8
 8423              		@ frame_needed = 1, uses_anonymous_args = 0
 8424              		@ link register save eliminated.
 8425 0000 80B4     		push	{r7}
 8426              		.cfi_def_cfa_offset 4
 8427              		.cfi_offset 7, -4
 8428 0002 83B0     		sub	sp, sp, #12
 8429              		.cfi_def_cfa_offset 16
 8430 0004 00AF     		add	r7, sp, #0
 8431              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 195


 8432              	.LBB10:
2451:..\src/interruptions.c ****     
2452:..\src/interruptions.c ****     for (uint8 i = 0; i <NUM_OF_MOTORS; i++) {
 8433              		.loc 1 2452 0
 8434 0006 0023     		movs	r3, #0
 8435 0008 FB71     		strb	r3, [r7, #7]
 8436 000a 61E0     		b	.L554
 8437              	.L558:
2453:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 8438              		.loc 1 2453 0
 8439 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 8440 000e 3449     		ldr	r1, .L560
 8441 0010 1346     		mov	r3, r2
 8442 0012 DB00     		lsls	r3, r3, #3
 8443 0014 9B1A     		subs	r3, r3, r2
 8444 0016 1B01     		lsls	r3, r3, #4
 8445 0018 0B44     		add	r3, r3, r1
 8446 001a 03F58673 		add	r3, r3, #268
 8447 001e B3F90030 		ldrsh	r3, [r3]
 8448 0022 002B     		cmp	r3, #0
 8449 0024 51D0     		beq	.L555
2454:..\src/interruptions.c ****             // if the current is over the limit
2455:..\src/interruptions.c ****             if (g_meas[g_mem.motor[i].encoder_line].curr > c_mem.motor[i].current_limit) {
 8450              		.loc 1 2455 0
 8451 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 8452 0028 2E49     		ldr	r1, .L560+4
 8453 002a 1346     		mov	r3, r2
 8454 002c DB00     		lsls	r3, r3, #3
 8455 002e 9B1A     		subs	r3, r3, r2
 8456 0030 1B01     		lsls	r3, r3, #4
 8457 0032 0B44     		add	r3, r3, r1
 8458 0034 03F58873 		add	r3, r3, #272
 8459 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8460 003a 1946     		mov	r1, r3
 8461 003c 2A4A     		ldr	r2, .L560+8
 8462 003e 3423     		movs	r3, #52
 8463 0040 03FB01F3 		mul	r3, r3, r1
 8464 0044 1344     		add	r3, r3, r2
 8465 0046 0C33     		adds	r3, r3, #12
 8466 0048 1968     		ldr	r1, [r3]
 8467 004a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 8468 004c 2448     		ldr	r0, .L560
 8469 004e 1346     		mov	r3, r2
 8470 0050 DB00     		lsls	r3, r3, #3
 8471 0052 9B1A     		subs	r3, r3, r2
 8472 0054 1B01     		lsls	r3, r3, #4
 8473 0056 0344     		add	r3, r3, r0
 8474 0058 03F58673 		add	r3, r3, #268
 8475 005c B3F90030 		ldrsh	r3, [r3]
 8476 0060 9942     		cmp	r1, r3
 8477 0062 07DD     		ble	.L556
2456:..\src/interruptions.c ****                 //decrease pwm_limit
2457:..\src/interruptions.c ****                 dev_pwm_limit[i]--;
 8478              		.loc 1 2457 0
 8479 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8480 0066 214A     		ldr	r2, .L560+12
 8481 0068 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 196


 8482 006a 013A     		subs	r2, r2, #1
 8483 006c D1B2     		uxtb	r1, r2
 8484 006e 1F4A     		ldr	r2, .L560+12
 8485 0070 D154     		strb	r1, [r2, r3]
 8486 0072 1CE0     		b	.L559
 8487              	.L556:
2458:..\src/interruptions.c ****             // if the current is in the safe zone
2459:..\src/interruptions.c ****             } else if (g_meas[i].curr < (c_mem.motor[i].current_limit - CURRENT_HYSTERESIS)) {
 8488              		.loc 1 2459 0
 8489 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8490 0076 1C4A     		ldr	r2, .L560+8
 8491 0078 3421     		movs	r1, #52
 8492 007a 01FB03F3 		mul	r3, r1, r3
 8493 007e 1344     		add	r3, r3, r2
 8494 0080 0C33     		adds	r3, r3, #12
 8495 0082 1968     		ldr	r1, [r3]
 8496 0084 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 8497 0086 1648     		ldr	r0, .L560
 8498 0088 1346     		mov	r3, r2
 8499 008a DB00     		lsls	r3, r3, #3
 8500 008c 9B1A     		subs	r3, r3, r2
 8501 008e 1B01     		lsls	r3, r3, #4
 8502 0090 0344     		add	r3, r3, r0
 8503 0092 03F58673 		add	r3, r3, #268
 8504 0096 B3F90030 		ldrsh	r3, [r3]
 8505 009a 0A3B     		subs	r3, r3, #10
 8506 009c 9942     		cmp	r1, r3
 8507 009e 06DA     		bge	.L559
2460:..\src/interruptions.c ****                 //increase pwm_limit
2461:..\src/interruptions.c ****                 dev_pwm_limit[i]++;
 8508              		.loc 1 2461 0
 8509 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8510 00a2 124A     		ldr	r2, .L560+12
 8511 00a4 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8512 00a6 0132     		adds	r2, r2, #1
 8513 00a8 D1B2     		uxtb	r1, r2
 8514 00aa 104A     		ldr	r2, .L560+12
 8515 00ac D154     		strb	r1, [r2, r3]
 8516              	.L559:
2462:..\src/interruptions.c ****             }
2463:..\src/interruptions.c **** 
2464:..\src/interruptions.c ****             // Bound pwm_limit
2465:..\src/interruptions.c ****             if (dev_pwm_limit[i] < 0) 
2466:..\src/interruptions.c ****                 dev_pwm_limit[i] = 0;
2467:..\src/interruptions.c ****             else 
2468:..\src/interruptions.c ****                 if (dev_pwm_limit[i] > dev_pwm_sat[i]) 
 8517              		.loc 1 2468 0
 8518 00ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8519 00b0 0E4A     		ldr	r2, .L560+12
 8520 00b2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8521 00b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8522 00b6 0E49     		ldr	r1, .L560+16
 8523 00b8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8524 00ba 9A42     		cmp	r2, r3
 8525 00bc 05D9     		bls	.L555
2469:..\src/interruptions.c ****                     dev_pwm_limit[i] = dev_pwm_sat[i];
 8526              		.loc 1 2469 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 197


 8527 00be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8528 00c0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 8529 00c2 0B49     		ldr	r1, .L560+16
 8530 00c4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8531 00c6 094A     		ldr	r2, .L560+12
 8532 00c8 D154     		strb	r1, [r2, r3]
 8533              	.L555:
2452:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 8534              		.loc 1 2452 0 discriminator 2
 8535 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8536 00cc 0133     		adds	r3, r3, #1
 8537 00ce FB71     		strb	r3, [r7, #7]
 8538              	.L554:
2452:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 8539              		.loc 1 2452 0 is_stmt 0 discriminator 1
 8540 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8541 00d2 012B     		cmp	r3, #1
 8542 00d4 9AD9     		bls	.L558
 8543              	.LBE10:
2470:..\src/interruptions.c ****         }
2471:..\src/interruptions.c ****     }
2472:..\src/interruptions.c **** }
 8544              		.loc 1 2472 0 is_stmt 1
 8545 00d6 00BF     		nop
 8546 00d8 0C37     		adds	r7, r7, #12
 8547              		.cfi_def_cfa_offset 4
 8548 00da BD46     		mov	sp, r7
 8549              		.cfi_def_cfa_register 13
 8550              		@ sp needed
 8551 00dc 80BC     		pop	{r7}
 8552              		.cfi_restore 7
 8553              		.cfi_def_cfa_offset 0
 8554 00de 7047     		bx	lr
 8555              	.L561:
 8556              		.align	2
 8557              	.L560:
 8558 00e0 00000000 		.word	c_mem
 8559 00e4 00000000 		.word	g_mem
 8560 00e8 00000000 		.word	g_meas
 8561 00ec 00000000 		.word	dev_pwm_limit
 8562 00f0 00000000 		.word	dev_pwm_sat
 8563              		.cfi_endproc
 8564              	.LFE75:
 8565              		.size	overcurrent_control, .-overcurrent_control
 8566              		.section	.text.pwm_limit_search,"ax",%progbits
 8567              		.align	2
 8568              		.global	pwm_limit_search
 8569              		.thumb
 8570              		.thumb_func
 8571              		.type	pwm_limit_search, %function
 8572              	pwm_limit_search:
 8573              	.LFB76:
2473:..\src/interruptions.c **** 
2474:..\src/interruptions.c **** //==============================================================================
2475:..\src/interruptions.c **** //                                                              PWM_LIMIT_SEARCH
2476:..\src/interruptions.c **** //==============================================================================
2477:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 198


2478:..\src/interruptions.c **** void pwm_limit_search(uint8 mot_idx) {
 8574              		.loc 1 2478 0
 8575              		.cfi_startproc
 8576              		@ args = 0, pretend = 0, frame = 16
 8577              		@ frame_needed = 1, uses_anonymous_args = 0
 8578              		@ link register save eliminated.
 8579 0000 80B4     		push	{r7}
 8580              		.cfi_def_cfa_offset 4
 8581              		.cfi_offset 7, -4
 8582 0002 85B0     		sub	sp, sp, #20
 8583              		.cfi_def_cfa_offset 24
 8584 0004 00AF     		add	r7, sp, #0
 8585              		.cfi_def_cfa_register 7
 8586 0006 0346     		mov	r3, r0
 8587 0008 FB71     		strb	r3, [r7, #7]
2479:..\src/interruptions.c **** 
2480:..\src/interruptions.c ****     uint8 CYDATA index;
2481:..\src/interruptions.c ****     uint16 CYDATA max_tension = 25500;
 8588              		.loc 1 2481 0
 8589 000a 46F29C33 		movw	r3, #25500
 8590 000e FB81     		strh	r3, [r7, #14]	@ movhi
2482:..\src/interruptions.c ****     uint16 CYDATA min_tension = 11500;
 8591              		.loc 1 2482 0
 8592 0010 42F6EC43 		movw	r3, #11500
 8593 0014 BB81     		strh	r3, [r7, #12]	@ movhi
2483:..\src/interruptions.c ****     
2484:..\src/interruptions.c ****     if (dev_tension[mot_idx] > max_tension) {
 8594              		.loc 1 2484 0
 8595 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8596 0018 144A     		ldr	r2, .L567
 8597 001a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 8598 001e FB89     		ldrh	r3, [r7, #14]
 8599 0020 9A42     		cmp	r2, r3
 8600 0022 04DD     		ble	.L563
2485:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = 0;
 8601              		.loc 1 2485 0
 8602 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8603 0026 124A     		ldr	r2, .L567+4
 8604 0028 0021     		movs	r1, #0
 8605 002a D154     		strb	r1, [r2, r3]
2486:..\src/interruptions.c ****     } else if (dev_tension[mot_idx] < min_tension) {
2487:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = 100;
2488:..\src/interruptions.c ****     } else {
2489:..\src/interruptions.c ****         index = (uint8)((dev_tension[mot_idx] - min_tension) >> 9);
2490:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = pwm_preload_values[index];
2491:..\src/interruptions.c ****     }
2492:..\src/interruptions.c **** }
 8606              		.loc 1 2492 0
 8607 002c 19E0     		b	.L566
 8608              	.L563:
2486:..\src/interruptions.c ****     } else if (dev_tension[mot_idx] < min_tension) {
 8609              		.loc 1 2486 0
 8610 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8611 0030 0E4A     		ldr	r2, .L567
 8612 0032 52F82320 		ldr	r2, [r2, r3, lsl #2]
 8613 0036 BB89     		ldrh	r3, [r7, #12]
 8614 0038 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 199


 8615 003a 04DA     		bge	.L565
2487:..\src/interruptions.c ****     } else {
 8616              		.loc 1 2487 0
 8617 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8618 003e 0C4A     		ldr	r2, .L567+4
 8619 0040 6421     		movs	r1, #100
 8620 0042 D154     		strb	r1, [r2, r3]
 8621              		.loc 1 2492 0
 8622 0044 0DE0     		b	.L566
 8623              	.L565:
2489:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = pwm_preload_values[index];
 8624              		.loc 1 2489 0
 8625 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8626 0048 084A     		ldr	r2, .L567
 8627 004a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 8628 004e BB89     		ldrh	r3, [r7, #12]
 8629 0050 D31A     		subs	r3, r2, r3
 8630 0052 5B12     		asrs	r3, r3, #9
 8631 0054 FB72     		strb	r3, [r7, #11]
2490:..\src/interruptions.c ****     }
 8632              		.loc 1 2490 0
 8633 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8634 0058 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 8635 005a 0649     		ldr	r1, .L567+8
 8636 005c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8637 005e 044A     		ldr	r2, .L567+4
 8638 0060 D154     		strb	r1, [r2, r3]
 8639              	.L566:
 8640              		.loc 1 2492 0
 8641 0062 00BF     		nop
 8642 0064 1437     		adds	r7, r7, #20
 8643              		.cfi_def_cfa_offset 4
 8644 0066 BD46     		mov	sp, r7
 8645              		.cfi_def_cfa_register 13
 8646              		@ sp needed
 8647 0068 80BC     		pop	{r7}
 8648              		.cfi_restore 7
 8649              		.cfi_def_cfa_offset 0
 8650 006a 7047     		bx	lr
 8651              	.L568:
 8652              		.align	2
 8653              	.L567:
 8654 006c 00000000 		.word	dev_tension
 8655 0070 00000000 		.word	dev_pwm_sat
 8656 0074 00000000 		.word	pwm_preload_values
 8657              		.cfi_endproc
 8658              	.LFE76:
 8659              		.size	pwm_limit_search, .-pwm_limit_search
 8660              		.section	.text.cycles_counter_update,"ax",%progbits
 8661              		.align	2
 8662              		.global	cycles_counter_update
 8663              		.thumb
 8664              		.thumb_func
 8665              		.type	cycles_counter_update, %function
 8666              	cycles_counter_update:
 8667              	.LFB77:
2493:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 200


2494:..\src/interruptions.c **** //==============================================================================
2495:..\src/interruptions.c **** //                                                         CYCLES COUNTER UPDATE
2496:..\src/interruptions.c **** //==============================================================================
2497:..\src/interruptions.c **** 
2498:..\src/interruptions.c **** void cycles_counter_update() {
 8668              		.loc 1 2498 0
 8669              		.cfi_startproc
 8670              		@ args = 0, pretend = 0, frame = 24
 8671              		@ frame_needed = 1, uses_anonymous_args = 0
 8672 0000 80B5     		push	{r7, lr}
 8673              		.cfi_def_cfa_offset 8
 8674              		.cfi_offset 7, -8
 8675              		.cfi_offset 14, -4
 8676 0002 86B0     		sub	sp, sp, #24
 8677              		.cfi_def_cfa_offset 32
 8678 0004 00AF     		add	r7, sp, #0
 8679              		.cfi_def_cfa_register 7
2499:..\src/interruptions.c **** 	static uint8 pos_cycle_status = STATE_INACTIVE;
2500:..\src/interruptions.c ****     static uint8 emg_cycle_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
2501:..\src/interruptions.c ****     static uint8 rest_cycle_status = STATE_INACTIVE;
2502:..\src/interruptions.c ****     static int32 bin_threshold = 250;
2503:..\src/interruptions.c ****     static int32 thr_pos = 0, max_pos = 0;
2504:..\src/interruptions.c ****     uint8 i, bin_st, bin_max, bin_1, bin_2;
2505:..\src/interruptions.c ****     int32 curr_pos, curr_off, curr_ref;
2506:..\src/interruptions.c ****     int32 step;
2507:..\src/interruptions.c ****     static uint32 timer_value_s, timer_value_e;
2508:..\src/interruptions.c **** 
2509:..\src/interruptions.c ****     curr_pos = (int32)(g_meas[g_mem.motor[0].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[0].encod
 8680              		.loc 1 2509 0
 8681 0006 AB4B     		ldr	r3, .L615
 8682 0008 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 8683 000c 1946     		mov	r1, r3
 8684 000e AA4A     		ldr	r2, .L615+4
 8685 0010 3423     		movs	r3, #52
 8686 0012 03FB01F3 		mul	r3, r3, r1
 8687 0016 1344     		add	r3, r3, r2
 8688 0018 1A68     		ldr	r2, [r3]
 8689 001a A64B     		ldr	r3, .L615
 8690 001c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 8691 0020 1846     		mov	r0, r3
 8692 0022 A449     		ldr	r1, .L615
 8693 0024 0346     		mov	r3, r0
 8694 0026 5B00     		lsls	r3, r3, #1
 8695 0028 0344     		add	r3, r3, r0
 8696 002a 1B01     		lsls	r3, r3, #4
 8697 002c 0B44     		add	r3, r3, r1
 8698 002e 03F29513 		addw	r3, r3, #405
 8699 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8700 0034 42FA03F3 		asr	r3, r2, r3
 8701 0038 FB60     		str	r3, [r7, #12]
2510:..\src/interruptions.c ****     
2511:..\src/interruptions.c ****     // State machine - Evaluate position counter update
2512:..\src/interruptions.c ****     switch (pos_cycle_status){
 8702              		.loc 1 2512 0
 8703 003a A04B     		ldr	r3, .L615+8
 8704 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8705 003e 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 201


 8706 0040 3AD0     		beq	.L571
 8707 0042 022B     		cmp	r3, #2
 8708 0044 6ED0     		beq	.L572
 8709 0046 002B     		cmp	r3, #0
 8710 0048 40F01881 		bne	.L570
2513:..\src/interruptions.c ****         case STATE_INACTIVE:
2514:..\src/interruptions.c ****             if ((g_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC && pwm_sign == 1) || (
 8711              		.loc 1 2514 0
 8712 004c 994B     		ldr	r3, .L615
 8713 004e 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 8714 0052 072B     		cmp	r3, #7
 8715 0054 04D0     		beq	.L574
 8716              		.loc 1 2514 0 is_stmt 0 discriminator 1
 8717 0056 9A4B     		ldr	r3, .L615+12
 8718 0058 93F90030 		ldrsb	r3, [r3]
 8719 005c 012B     		cmp	r3, #1
 8720 005e 0CD0     		beq	.L575
 8721              	.L574:
 8722              		.loc 1 2514 0 discriminator 3
 8723 0060 944B     		ldr	r3, .L615
 8724 0062 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 8725 0066 072B     		cmp	r3, #7
 8726 0068 40F00581 		bne	.L609
 8727              		.loc 1 2514 0 discriminator 4
 8728 006c 944B     		ldr	r3, .L615+12
 8729 006e 93F90030 		ldrsb	r3, [r3]
 8730 0072 B3F1FF3F 		cmp	r3, #-1
 8731 0076 40F0FE80 		bne	.L609
 8732              	.L575:
2515:..\src/interruptions.c ****                 thr_pos = curr_pos; 
 8733              		.loc 1 2515 0 is_stmt 1
 8734 007a 924A     		ldr	r2, .L615+16
 8735 007c FB68     		ldr	r3, [r7, #12]
 8736 007e 1360     		str	r3, [r2]
2516:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 8737              		.loc 1 2516 0
 8738 0080 914B     		ldr	r3, .L615+20
 8739 0082 1A68     		ldr	r2, [r3]
 8740 0084 8F4B     		ldr	r3, .L615+16
 8741 0086 1B68     		ldr	r3, [r3]
 8742 0088 9A42     		cmp	r2, r3
 8743 008a 05DD     		ble	.L577
 8744              		.loc 1 2516 0 is_stmt 0 discriminator 1
 8745 008c 8E4B     		ldr	r3, .L615+20
 8746 008e 1A68     		ldr	r2, [r3]
 8747 0090 8C4B     		ldr	r3, .L615+16
 8748 0092 1B68     		ldr	r3, [r3]
 8749 0094 D31A     		subs	r3, r2, r3
 8750 0096 04E0     		b	.L578
 8751              	.L577:
 8752              		.loc 1 2516 0 discriminator 2
 8753 0098 8A4B     		ldr	r3, .L615+16
 8754 009a 1A68     		ldr	r2, [r3]
 8755 009c 8A4B     		ldr	r3, .L615+20
 8756 009e 1B68     		ldr	r3, [r3]
 8757 00a0 D31A     		subs	r3, r2, r3
 8758              	.L578:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 202


 8759              		.loc 1 2516 0 discriminator 4
 8760 00a2 BB60     		str	r3, [r7, #8]
2517:..\src/interruptions.c ****                 g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum opening track
 8761              		.loc 1 2517 0 is_stmt 1 discriminator 4
 8762 00a4 834B     		ldr	r3, .L615
 8763 00a6 5A6D     		ldr	r2, [r3, #84]
 8764 00a8 BB68     		ldr	r3, [r7, #8]
 8765 00aa 1344     		add	r3, r3, r2
 8766 00ac 814A     		ldr	r2, .L615
 8767 00ae 5365     		str	r3, [r2, #84]
2518:..\src/interruptions.c ****                 pos_cycle_status = STATE_ACTIVE;
 8768              		.loc 1 2518 0 discriminator 4
 8769 00b0 824B     		ldr	r3, .L615+8
 8770 00b2 0122     		movs	r2, #1
 8771 00b4 1A70     		strb	r2, [r3]
2519:..\src/interruptions.c ****             }
2520:..\src/interruptions.c ****             break;
 8772              		.loc 1 2520 0 discriminator 4
 8773 00b6 DEE0     		b	.L609
 8774              	.L571:
2521:..\src/interruptions.c ****         case STATE_ACTIVE:
2522:..\src/interruptions.c ****             if ((g_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC && pwm_sign == -1) || 
 8775              		.loc 1 2522 0
 8776 00b8 7E4B     		ldr	r3, .L615
 8777 00ba 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 8778 00be 072B     		cmp	r3, #7
 8779 00c0 05D0     		beq	.L579
 8780              		.loc 1 2522 0 is_stmt 0 discriminator 1
 8781 00c2 7F4B     		ldr	r3, .L615+12
 8782 00c4 93F90030 		ldrsb	r3, [r3]
 8783 00c8 B3F1FF3F 		cmp	r3, #-1
 8784 00cc 0BD0     		beq	.L580
 8785              	.L579:
 8786              		.loc 1 2522 0 discriminator 3
 8787 00ce 794B     		ldr	r3, .L615
 8788 00d0 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 8789 00d4 072B     		cmp	r3, #7
 8790 00d6 40F0D080 		bne	.L610
 8791              		.loc 1 2522 0 discriminator 4
 8792 00da 794B     		ldr	r3, .L615+12
 8793 00dc 93F90030 		ldrsb	r3, [r3]
 8794 00e0 012B     		cmp	r3, #1
 8795 00e2 40F0CA80 		bne	.L610
 8796              	.L580:
2523:..\src/interruptions.c ****                 max_pos = curr_pos;
 8797              		.loc 1 2523 0 is_stmt 1
 8798 00e6 784A     		ldr	r2, .L615+20
 8799 00e8 FB68     		ldr	r3, [r7, #12]
 8800 00ea 1360     		str	r3, [r2]
2524:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 8801              		.loc 1 2524 0
 8802 00ec 764B     		ldr	r3, .L615+20
 8803 00ee 1A68     		ldr	r2, [r3]
 8804 00f0 744B     		ldr	r3, .L615+16
 8805 00f2 1B68     		ldr	r3, [r3]
 8806 00f4 9A42     		cmp	r2, r3
 8807 00f6 05DD     		ble	.L582
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 203


 8808              		.loc 1 2524 0 is_stmt 0 discriminator 1
 8809 00f8 734B     		ldr	r3, .L615+20
 8810 00fa 1A68     		ldr	r2, [r3]
 8811 00fc 714B     		ldr	r3, .L615+16
 8812 00fe 1B68     		ldr	r3, [r3]
 8813 0100 D31A     		subs	r3, r2, r3
 8814 0102 04E0     		b	.L583
 8815              	.L582:
 8816              		.loc 1 2524 0 discriminator 2
 8817 0104 6F4B     		ldr	r3, .L615+16
 8818 0106 1A68     		ldr	r2, [r3]
 8819 0108 6F4B     		ldr	r3, .L615+20
 8820 010a 1B68     		ldr	r3, [r3]
 8821 010c D31A     		subs	r3, r2, r3
 8822              	.L583:
 8823              		.loc 1 2524 0 discriminator 4
 8824 010e BB60     		str	r3, [r7, #8]
2525:..\src/interruptions.c ****                 g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum closure track
 8825              		.loc 1 2525 0 is_stmt 1 discriminator 4
 8826 0110 684B     		ldr	r3, .L615
 8827 0112 5A6D     		ldr	r2, [r3, #84]
 8828 0114 BB68     		ldr	r3, [r7, #8]
 8829 0116 1344     		add	r3, r3, r2
 8830 0118 664A     		ldr	r2, .L615
 8831 011a 5365     		str	r3, [r2, #84]
2526:..\src/interruptions.c ****                 pos_cycle_status = COUNTER_INC;
 8832              		.loc 1 2526 0 discriminator 4
 8833 011c 674B     		ldr	r3, .L615+8
 8834 011e 0222     		movs	r2, #2
 8835 0120 1A70     		strb	r2, [r3]
2527:..\src/interruptions.c ****             }
2528:..\src/interruptions.c ****             break;
 8836              		.loc 1 2528 0 discriminator 4
 8837 0122 AAE0     		b	.L610
 8838              	.L572:
2529:..\src/interruptions.c ****         case COUNTER_INC:
2530:..\src/interruptions.c **** 
2531:..\src/interruptions.c ****             curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 8839              		.loc 1 2531 0
 8840 0124 684B     		ldr	r3, .L615+20
 8841 0126 1A68     		ldr	r2, [r3]
 8842 0128 664B     		ldr	r3, .L615+16
 8843 012a 1B68     		ldr	r3, [r3]
 8844 012c 9A42     		cmp	r2, r3
 8845 012e 05DD     		ble	.L584
 8846              		.loc 1 2531 0 is_stmt 0 discriminator 1
 8847 0130 654B     		ldr	r3, .L615+20
 8848 0132 1A68     		ldr	r2, [r3]
 8849 0134 634B     		ldr	r3, .L615+16
 8850 0136 1B68     		ldr	r3, [r3]
 8851 0138 D31A     		subs	r3, r2, r3
 8852 013a 04E0     		b	.L585
 8853              	.L584:
 8854              		.loc 1 2531 0 discriminator 2
 8855 013c 614B     		ldr	r3, .L615+16
 8856 013e 1A68     		ldr	r2, [r3]
 8857 0140 614B     		ldr	r3, .L615+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 204


 8858 0142 1B68     		ldr	r3, [r3]
 8859 0144 D31A     		subs	r3, r2, r3
 8860              	.L585:
 8861              		.loc 1 2531 0 discriminator 4
 8862 0146 BB60     		str	r3, [r7, #8]
2532:..\src/interruptions.c ****             if (curr_off > bin_threshold){
 8863              		.loc 1 2532 0 is_stmt 1 discriminator 4
 8864 0148 604B     		ldr	r3, .L615+24
 8865 014a 1B68     		ldr	r3, [r3]
 8866 014c BA68     		ldr	r2, [r7, #8]
 8867 014e 9A42     		cmp	r2, r3
 8868 0150 40F38D80 		ble	.L586
2533:..\src/interruptions.c ****                 //update position histogram
2534:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].pos_lim_sup >> g_mem.enc[g_mem.motor[0].encoder_line
 8869              		.loc 1 2534 0
 8870 0154 574B     		ldr	r3, .L615
 8871 0156 D3F8E820 		ldr	r2, [r3, #232]
 8872 015a 564B     		ldr	r3, .L615
 8873 015c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 8874 0160 1846     		mov	r0, r3
 8875 0162 5449     		ldr	r1, .L615
 8876 0164 0346     		mov	r3, r0
 8877 0166 5B00     		lsls	r3, r3, #1
 8878 0168 0344     		add	r3, r3, r0
 8879 016a 1B01     		lsls	r3, r3, #4
 8880 016c 0B44     		add	r3, r3, r1
 8881 016e 03F29513 		addw	r3, r3, #405
 8882 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8883 0174 42FA03F3 		asr	r3, r2, r3
 8884 0178 554A     		ldr	r2, .L615+28
 8885 017a 82FB0312 		smull	r1, r2, r2, r3
 8886 017e 9210     		asrs	r2, r2, #2
 8887 0180 DB17     		asrs	r3, r3, #31
 8888 0182 D31A     		subs	r3, r2, r3
 8889 0184 7B60     		str	r3, [r7, #4]
2535:..\src/interruptions.c ****                 bin_st  = (uint8)(thr_pos/step);
 8890              		.loc 1 2535 0
 8891 0186 4F4B     		ldr	r3, .L615+16
 8892 0188 1A68     		ldr	r2, [r3]
 8893 018a 7B68     		ldr	r3, [r7, #4]
 8894 018c 92FBF3F3 		sdiv	r3, r2, r3
 8895 0190 FB70     		strb	r3, [r7, #3]
2536:..\src/interruptions.c ****                 bin_max = (uint8)(max_pos/step);
 8896              		.loc 1 2536 0
 8897 0192 4D4B     		ldr	r3, .L615+20
 8898 0194 1A68     		ldr	r2, [r3]
 8899 0196 7B68     		ldr	r3, [r7, #4]
 8900 0198 92FBF3F3 		sdiv	r3, r2, r3
 8901 019c BB70     		strb	r3, [r7, #2]
2537:..\src/interruptions.c ****                 
2538:..\src/interruptions.c ****                 // Bin computation valid for both NO and NC working
2539:..\src/interruptions.c ****                 bin_1 = (bin_st<bin_max)?bin_st:bin_max;
 8902              		.loc 1 2539 0
 8903 019e BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 8904 01a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 8905 01a2 9342     		cmp	r3, r2
 8906 01a4 28BF     		it	cs
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 205


 8907 01a6 1346     		movcs	r3, r2
 8908 01a8 7B70     		strb	r3, [r7, #1]
2540:..\src/interruptions.c ****                 bin_2 = (bin_st<bin_max)?bin_max:bin_st;    
 8909              		.loc 1 2540 0
 8910 01aa FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 8911 01ac BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 8912 01ae 9342     		cmp	r3, r2
 8913 01b0 38BF     		it	cc
 8914 01b2 1346     		movcc	r3, r2
 8915 01b4 3B70     		strb	r3, [r7]
2541:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2; i++){
 8916              		.loc 1 2541 0
 8917 01b6 7B78     		ldrb	r3, [r7, #1]
 8918 01b8 FB75     		strb	r3, [r7, #23]
 8919 01ba 0DE0     		b	.L587
 8920              	.L588:
2542:..\src/interruptions.c ****                     //position_hist counts how many times the SoftHand stays in bin while moving
2543:..\src/interruptions.c ****                     g_mem.cnt.position_hist[i] = g_mem.cnt.position_hist[i] + 1;
 8921              		.loc 1 2543 0 discriminator 3
 8922 01bc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8923 01be FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8924 01c0 3C49     		ldr	r1, .L615
 8925 01c2 0632     		adds	r2, r2, #6
 8926 01c4 51F82220 		ldr	r2, [r1, r2, lsl #2]
 8927 01c8 0132     		adds	r2, r2, #1
 8928 01ca 3A49     		ldr	r1, .L615
 8929 01cc 0633     		adds	r3, r3, #6
 8930 01ce 41F82320 		str	r2, [r1, r3, lsl #2]
2541:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2; i++){
 8931              		.loc 1 2541 0 discriminator 3
 8932 01d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8933 01d4 0133     		adds	r3, r3, #1
 8934 01d6 FB75     		strb	r3, [r7, #23]
 8935              	.L587:
2541:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2; i++){
 8936              		.loc 1 2541 0 is_stmt 0 discriminator 1
 8937 01d8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8938 01da 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 8939 01dc 9A42     		cmp	r2, r3
 8940 01de EDD9     		bls	.L588
2544:..\src/interruptions.c ****                 }
2545:..\src/interruptions.c ****                 
2546:..\src/interruptions.c ****                 //update current histogram (only positive current measures)
2547:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].current_limit) / 4);
 8941              		.loc 1 2547 0 is_stmt 1
 8942 01e0 344B     		ldr	r3, .L615
 8943 01e2 B3F90C31 		ldrsh	r3, [r3, #268]
 8944 01e6 002B     		cmp	r3, #0
 8945 01e8 00DA     		bge	.L589
 8946 01ea 0333     		adds	r3, r3, #3
 8947              	.L589:
 8948 01ec 9B10     		asrs	r3, r3, #2
 8949 01ee 1BB2     		sxth	r3, r3
 8950 01f0 7B60     		str	r3, [r7, #4]
2548:..\src/interruptions.c ****                 if (g_mem.motor[0].not_revers_motor_flag == TRUE)
 8951              		.loc 1 2548 0
 8952 01f2 304B     		ldr	r3, .L615
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 206


 8953 01f4 93F81231 		ldrb	r3, [r3, #274]	@ zero_extendqisi2
 8954 01f8 012B     		cmp	r3, #1
 8955 01fa 0CD1     		bne	.L590
2549:..\src/interruptions.c ****                     curr_ref = g_meas[g_mem.motor[0].encoder_line].hold_curr; 
 8956              		.loc 1 2549 0
 8957 01fc 2D4B     		ldr	r3, .L615
 8958 01fe 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 8959 0202 1946     		mov	r1, r3
 8960 0204 2C4A     		ldr	r2, .L615+4
 8961 0206 3423     		movs	r3, #52
 8962 0208 03FB01F3 		mul	r3, r3, r1
 8963 020c 1344     		add	r3, r3, r2
 8964 020e 1433     		adds	r3, r3, #20
 8965 0210 1B68     		ldr	r3, [r3]
 8966 0212 3B61     		str	r3, [r7, #16]
 8967 0214 0BE0     		b	.L591
 8968              	.L590:
2550:..\src/interruptions.c ****                 else
2551:..\src/interruptions.c ****                     curr_ref = g_meas[g_mem.motor[0].encoder_line].curr;
 8969              		.loc 1 2551 0
 8970 0216 274B     		ldr	r3, .L615
 8971 0218 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 8972 021c 1946     		mov	r1, r3
 8973 021e 264A     		ldr	r2, .L615+4
 8974 0220 3423     		movs	r3, #52
 8975 0222 03FB01F3 		mul	r3, r3, r1
 8976 0226 1344     		add	r3, r3, r2
 8977 0228 0C33     		adds	r3, r3, #12
 8978 022a 1B68     		ldr	r3, [r3]
 8979 022c 3B61     		str	r3, [r7, #16]
 8980              	.L591:
2552:..\src/interruptions.c ****                     
2553:..\src/interruptions.c ****                 if (curr_ref > g_mem.motor[0].current_limit)
 8981              		.loc 1 2553 0
 8982 022e 214B     		ldr	r3, .L615
 8983 0230 B3F90C31 		ldrsh	r3, [r3, #268]
 8984 0234 1A46     		mov	r2, r3
 8985 0236 3B69     		ldr	r3, [r7, #16]
 8986 0238 9A42     		cmp	r2, r3
 8987 023a 05DA     		bge	.L592
2554:..\src/interruptions.c ****                     g_mem.cnt.current_hist[3] = g_mem.cnt.current_hist[3] + 1; 
 8988              		.loc 1 2554 0
 8989 023c 1D4B     		ldr	r3, .L615
 8990 023e DB6C     		ldr	r3, [r3, #76]
 8991 0240 0133     		adds	r3, r3, #1
 8992 0242 1C4A     		ldr	r2, .L615
 8993 0244 D364     		str	r3, [r2, #76]
 8994 0246 12E0     		b	.L586
 8995              	.L592:
2555:..\src/interruptions.c ****                 else
2556:..\src/interruptions.c ****                     g_mem.cnt.current_hist[(uint8)(curr_ref/step)] = g_mem.cnt.current_hist[(uint8)
 8996              		.loc 1 2556 0
 8997 0248 3A69     		ldr	r2, [r7, #16]
 8998 024a 7B68     		ldr	r3, [r7, #4]
 8999 024c 92FBF3F3 		sdiv	r3, r2, r3
 9000 0250 DBB2     		uxtb	r3, r3
 9001 0252 3969     		ldr	r1, [r7, #16]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 207


 9002 0254 7A68     		ldr	r2, [r7, #4]
 9003 0256 91FBF2F2 		sdiv	r2, r1, r2
 9004 025a D2B2     		uxtb	r2, r2
 9005 025c 1549     		ldr	r1, .L615
 9006 025e 1032     		adds	r2, r2, #16
 9007 0260 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9008 0264 0132     		adds	r2, r2, #1
 9009 0266 1349     		ldr	r1, .L615
 9010 0268 1033     		adds	r3, r3, #16
 9011 026a 41F82320 		str	r2, [r1, r3, lsl #2]
 9012              	.L586:
2557:..\src/interruptions.c ****             }
2558:..\src/interruptions.c ****             pos_cycle_status = STATE_INACTIVE;
 9013              		.loc 1 2558 0
 9014 026e 134B     		ldr	r3, .L615+8
 9015 0270 0022     		movs	r2, #0
 9016 0272 1A70     		strb	r2, [r3]
2559:..\src/interruptions.c ****             break;
 9017              		.loc 1 2559 0
 9018 0274 02E0     		b	.L570
 9019              	.L609:
2520:..\src/interruptions.c ****         case STATE_ACTIVE:
 9020              		.loc 1 2520 0
 9021 0276 00BF     		nop
 9022 0278 00E0     		b	.L570
 9023              	.L610:
2528:..\src/interruptions.c ****         case COUNTER_INC:
 9024              		.loc 1 2528 0
 9025 027a 00BF     		nop
 9026              	.L570:
2560:..\src/interruptions.c ****     }
2561:..\src/interruptions.c ****     
2562:..\src/interruptions.c ****     // State machine - Evaluate EMG counter update
2563:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 9027              		.loc 1 2563 0
 9028 027c 0023     		movs	r3, #0
 9029 027e FB75     		strb	r3, [r7, #23]
 9030 0280 53E0     		b	.L593
 9031              	.L601:
2564:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9032              		.loc 1 2564 0
 9033 0282 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9034 0284 134A     		ldr	r2, .L615+32
 9035 0286 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9036 0288 012B     		cmp	r3, #1
 9037 028a 27D0     		beq	.L595
 9038 028c 022B     		cmp	r3, #2
 9039 028e 36D0     		beq	.L596
 9040 0290 002B     		cmp	r3, #0
 9041 0292 47D1     		bne	.L594
2565:..\src/interruptions.c ****             case STATE_INACTIVE:
2566:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] > g_mem.emg.emg_threshold[i]){
 9042              		.loc 1 2566 0
 9043 0294 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9044 0296 104A     		ldr	r2, .L615+36
 9045 0298 52F82330 		ldr	r3, [r2, r3, lsl #2]
 9046 029c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 208


 9047 029e 0549     		ldr	r1, .L615
 9048 02a0 F832     		adds	r2, r2, #248
 9049 02a2 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 9050 02a6 9342     		cmp	r3, r2
 9051 02a8 39DD     		ble	.L611
2567:..\src/interruptions.c ****                     emg_cycle_status[i] = STATE_ACTIVE;
 9052              		.loc 1 2567 0
 9053 02aa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9054 02ac 094A     		ldr	r2, .L615+32
 9055 02ae 0121     		movs	r1, #1
 9056 02b0 D154     		strb	r1, [r2, r3]
2568:..\src/interruptions.c ****                 }
2569:..\src/interruptions.c ****                 break;
 9057              		.loc 1 2569 0
 9058 02b2 34E0     		b	.L611
 9059              	.L616:
 9060              		.align	2
 9061              	.L615:
 9062 02b4 00000000 		.word	g_mem
 9063 02b8 00000000 		.word	g_meas
 9064 02bc 8E010000 		.word	pos_cycle_status.10710
 9065 02c0 00000000 		.word	pwm_sign
 9066 02c4 90010000 		.word	thr_pos.10714
 9067 02c8 94010000 		.word	max_pos.10715
 9068 02cc 08000000 		.word	bin_threshold.10713
 9069 02d0 67666666 		.word	1717986919
 9070 02d4 98010000 		.word	emg_cycle_status.10711
 9071 02d8 00000000 		.word	g_adc_meas
 9072              	.L595:
2570:..\src/interruptions.c ****             case STATE_ACTIVE:
2571:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] < g_mem.emg.emg_threshold[i]-10){
 9073              		.loc 1 2571 0
 9074 02dc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9075 02de 404A     		ldr	r2, .L617
 9076 02e0 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9077 02e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9078 02e6 3F49     		ldr	r1, .L617+4
 9079 02e8 F833     		adds	r3, r3, #248
 9080 02ea 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 9081 02ee 0A3B     		subs	r3, r3, #10
 9082 02f0 9A42     		cmp	r2, r3
 9083 02f2 16DA     		bge	.L612
2572:..\src/interruptions.c ****                     emg_cycle_status[i] = COUNTER_INC;
 9084              		.loc 1 2572 0
 9085 02f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9086 02f6 3C4A     		ldr	r2, .L617+8
 9087 02f8 0221     		movs	r1, #2
 9088 02fa D154     		strb	r1, [r2, r3]
2573:..\src/interruptions.c ****                 }
2574:..\src/interruptions.c ****                 break;
 9089              		.loc 1 2574 0
 9090 02fc 11E0     		b	.L612
 9091              	.L596:
2575:..\src/interruptions.c ****             case COUNTER_INC:
2576:..\src/interruptions.c ****                 g_mem.cnt.emg_counter[i] = g_mem.cnt.emg_counter[i] + 1;
 9092              		.loc 1 2576 0
 9093 02fe FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 209


 9094 0300 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9095 0302 3849     		ldr	r1, .L617+4
 9096 0304 0432     		adds	r2, r2, #4
 9097 0306 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9098 030a 0132     		adds	r2, r2, #1
 9099 030c 3549     		ldr	r1, .L617+4
 9100 030e 0433     		adds	r3, r3, #4
 9101 0310 41F82320 		str	r2, [r1, r3, lsl #2]
2577:..\src/interruptions.c ****                 emg_cycle_status[i] = STATE_INACTIVE;
 9102              		.loc 1 2577 0
 9103 0314 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9104 0316 344A     		ldr	r2, .L617+8
 9105 0318 0021     		movs	r1, #0
 9106 031a D154     		strb	r1, [r2, r3]
2578:..\src/interruptions.c ****                 break;
 9107              		.loc 1 2578 0
 9108 031c 02E0     		b	.L594
 9109              	.L611:
2569:..\src/interruptions.c ****             case STATE_ACTIVE:
 9110              		.loc 1 2569 0
 9111 031e 00BF     		nop
 9112 0320 00E0     		b	.L594
 9113              	.L612:
2574:..\src/interruptions.c ****             case COUNTER_INC:
 9114              		.loc 1 2574 0
 9115 0322 00BF     		nop
 9116              	.L594:
2563:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9117              		.loc 1 2563 0 discriminator 2
 9118 0324 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9119 0326 0133     		adds	r3, r3, #1
 9120 0328 FB75     		strb	r3, [r7, #23]
 9121              	.L593:
2563:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9122              		.loc 1 2563 0 is_stmt 0 discriminator 1
 9123 032a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9124 032c 012B     		cmp	r3, #1
 9125 032e 07D8     		bhi	.L600
2563:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9126              		.loc 1 2563 0 discriminator 3
 9127 0330 2E4B     		ldr	r3, .L617+12
 9128 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9129 0334 002B     		cmp	r3, #0
 9130 0336 03D1     		bne	.L600
2563:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9131              		.loc 1 2563 0 discriminator 4
 9132 0338 2D4B     		ldr	r3, .L617+16
 9133 033a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9134 033c 002B     		cmp	r3, #0
 9135 033e A0D0     		beq	.L601
 9136              	.L600:
2579:..\src/interruptions.c ****         }
2580:..\src/interruptions.c ****     }
2581:..\src/interruptions.c ****     
2582:..\src/interruptions.c ****     // State machine - Evaluate rest counter update
2583:..\src/interruptions.c ****     switch (rest_cycle_status){
 9137              		.loc 1 2583 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 210


 9138 0340 2C4B     		ldr	r3, .L617+20
 9139 0342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9140 0344 012B     		cmp	r3, #1
 9141 0346 11D0     		beq	.L603
 9142 0348 022B     		cmp	r3, #2
 9143 034a 29D0     		beq	.L604
 9144 034c 002B     		cmp	r3, #0
 9145 034e 41D1     		bne	.L602
2584:..\src/interruptions.c ****         case STATE_INACTIVE:
2585:..\src/interruptions.c ****             if (rest_enabled){
 9146              		.loc 1 2585 0
 9147 0350 294B     		ldr	r3, .L617+24
 9148 0352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9149 0354 002B     		cmp	r3, #0
 9150 0356 3AD0     		beq	.L613
2586:..\src/interruptions.c ****                 timer_value_s = (uint32)CYCLES_TIMER_ReadCounter();
 9151              		.loc 1 2586 0
 9152 0358 FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 9153 035c 0346     		mov	r3, r0
 9154 035e 1A46     		mov	r2, r3
 9155 0360 264B     		ldr	r3, .L617+28
 9156 0362 1A60     		str	r2, [r3]
2587:..\src/interruptions.c ****                 rest_cycle_status = STATE_ACTIVE;
 9157              		.loc 1 2587 0
 9158 0364 234B     		ldr	r3, .L617+20
 9159 0366 0122     		movs	r2, #1
 9160 0368 1A70     		strb	r2, [r3]
2588:..\src/interruptions.c ****             }
2589:..\src/interruptions.c ****             break;
 9161              		.loc 1 2589 0
 9162 036a 30E0     		b	.L613
 9163              	.L603:
2590:..\src/interruptions.c ****         case STATE_ACTIVE:
2591:..\src/interruptions.c ****             if (!rest_enabled){
 9164              		.loc 1 2591 0
 9165 036c 224B     		ldr	r3, .L617+24
 9166 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9167 0370 002B     		cmp	r3, #0
 9168 0372 2ED1     		bne	.L614
2592:..\src/interruptions.c ****                 timer_value_e = (uint32)CYCLES_TIMER_ReadCounter();
 9169              		.loc 1 2592 0
 9170 0374 FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 9171 0378 0346     		mov	r3, r0
 9172 037a 1A46     		mov	r2, r3
 9173 037c 204B     		ldr	r3, .L617+32
 9174 037e 1A60     		str	r2, [r3]
2593:..\src/interruptions.c ****                 if (timer_value_s < timer_value_e) {
 9175              		.loc 1 2593 0
 9176 0380 1E4B     		ldr	r3, .L617+28
 9177 0382 1A68     		ldr	r2, [r3]
 9178 0384 1E4B     		ldr	r3, .L617+32
 9179 0386 1B68     		ldr	r3, [r3]
 9180 0388 9A42     		cmp	r2, r3
 9181 038a 05D2     		bcs	.L608
2594:..\src/interruptions.c ****                     timer_value_s = timer_value_s + (uint32)1200;
 9182              		.loc 1 2594 0
 9183 038c 1B4B     		ldr	r3, .L617+28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 211


 9184 038e 1B68     		ldr	r3, [r3]
 9185 0390 03F59663 		add	r3, r3, #1200
 9186 0394 194A     		ldr	r2, .L617+28
 9187 0396 1360     		str	r3, [r2]
 9188              	.L608:
2595:..\src/interruptions.c ****                 }
2596:..\src/interruptions.c ****                 rest_cycle_status = COUNTER_INC;
 9189              		.loc 1 2596 0
 9190 0398 164B     		ldr	r3, .L617+20
 9191 039a 0222     		movs	r2, #2
 9192 039c 1A70     		strb	r2, [r3]
2597:..\src/interruptions.c ****             }
2598:..\src/interruptions.c ****             break;
 9193              		.loc 1 2598 0
 9194 039e 18E0     		b	.L614
 9195              	.L604:
2599:..\src/interruptions.c ****         case COUNTER_INC: 
2600:..\src/interruptions.c ****             g_mem.cnt.total_time_rest = g_mem.cnt.total_time_rest + (uint32)((timer_value_s - timer
 9196              		.loc 1 2600 0
 9197 03a0 104B     		ldr	r3, .L617+4
 9198 03a2 DA6D     		ldr	r2, [r3, #92]
 9199 03a4 154B     		ldr	r3, .L617+28
 9200 03a6 1968     		ldr	r1, [r3]
 9201 03a8 154B     		ldr	r3, .L617+32
 9202 03aa 1B68     		ldr	r3, [r3]
 9203 03ac CB1A     		subs	r3, r1, r3
 9204 03ae 1549     		ldr	r1, .L617+36
 9205 03b0 A1FB0313 		umull	r1, r3, r1, r3
 9206 03b4 DB08     		lsrs	r3, r3, #3
 9207 03b6 1344     		add	r3, r3, r2
 9208 03b8 0A4A     		ldr	r2, .L617+4
 9209 03ba D365     		str	r3, [r2, #92]
2601:..\src/interruptions.c ****             g_mem.cnt.rest_counter = g_mem.cnt.rest_counter + 1;
 9210              		.loc 1 2601 0
 9211 03bc 094B     		ldr	r3, .L617+4
 9212 03be 1B6D     		ldr	r3, [r3, #80]
 9213 03c0 0133     		adds	r3, r3, #1
 9214 03c2 084A     		ldr	r2, .L617+4
 9215 03c4 1365     		str	r3, [r2, #80]
2602:..\src/interruptions.c ****             rest_cycle_status = STATE_INACTIVE;
 9216              		.loc 1 2602 0
 9217 03c6 0B4B     		ldr	r3, .L617+20
 9218 03c8 0022     		movs	r2, #0
 9219 03ca 1A70     		strb	r2, [r3]
2603:..\src/interruptions.c ****             break;
 9220              		.loc 1 2603 0
 9221 03cc 02E0     		b	.L602
 9222              	.L613:
2589:..\src/interruptions.c ****         case STATE_ACTIVE:
 9223              		.loc 1 2589 0
 9224 03ce 00BF     		nop
 9225 03d0 00E0     		b	.L602
 9226              	.L614:
2598:..\src/interruptions.c ****         case COUNTER_INC: 
 9227              		.loc 1 2598 0
 9228 03d2 00BF     		nop
 9229              	.L602:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 212


2604:..\src/interruptions.c ****     }
2605:..\src/interruptions.c ****           
2606:..\src/interruptions.c ****     // This function writes rows [row_start, row_end] on EEPROM
2607:..\src/interruptions.c ****     save_cycles_eeprom();
 9230              		.loc 1 2607 0
 9231 03d4 FFF7FEFF 		bl	save_cycles_eeprom
2608:..\src/interruptions.c ****     
2609:..\src/interruptions.c **** }
 9232              		.loc 1 2609 0
 9233 03d8 00BF     		nop
 9234 03da 1837     		adds	r7, r7, #24
 9235              		.cfi_def_cfa_offset 8
 9236 03dc BD46     		mov	sp, r7
 9237              		.cfi_def_cfa_register 13
 9238              		@ sp needed
 9239 03de 80BD     		pop	{r7, pc}
 9240              	.L618:
 9241              		.align	2
 9242              	.L617:
 9243 03e0 00000000 		.word	g_adc_meas
 9244 03e4 00000000 		.word	g_mem
 9245 03e8 98010000 		.word	emg_cycle_status.10711
 9246 03ec 00000000 		.word	emg_1_status
 9247 03f0 00000000 		.word	emg_2_status
 9248 03f4 9A010000 		.word	rest_cycle_status.10712
 9249 03f8 00000000 		.word	rest_enabled
 9250 03fc 9C010000 		.word	timer_value_s.10725
 9251 0400 A0010000 		.word	timer_value_e.10726
 9252 0404 CDCCCCCC 		.word	-858993459
 9253              		.cfi_endproc
 9254              	.LFE77:
 9255              		.size	cycles_counter_update, .-cycles_counter_update
 9256              		.section	.text.save_cycles_eeprom,"ax",%progbits
 9257              		.align	2
 9258              		.global	save_cycles_eeprom
 9259              		.thumb
 9260              		.thumb_func
 9261              		.type	save_cycles_eeprom, %function
 9262              	save_cycles_eeprom:
 9263              	.LFB78:
2610:..\src/interruptions.c **** 
2611:..\src/interruptions.c **** //==============================================================================
2612:..\src/interruptions.c **** //                                                            SAVE CYCLES EEPROM
2613:..\src/interruptions.c **** //==============================================================================
2614:..\src/interruptions.c **** 
2615:..\src/interruptions.c **** void save_cycles_eeprom() {
 9264              		.loc 1 2615 0
 9265              		.cfi_startproc
 9266              		@ args = 0, pretend = 0, frame = 24
 9267              		@ frame_needed = 1, uses_anonymous_args = 0
 9268 0000 80B5     		push	{r7, lr}
 9269              		.cfi_def_cfa_offset 8
 9270              		.cfi_offset 7, -8
 9271              		.cfi_offset 14, -4
 9272 0002 86B0     		sub	sp, sp, #24
 9273              		.cfi_def_cfa_offset 32
 9274 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 213


 9275              		.cfi_def_cfa_register 7
2616:..\src/interruptions.c **** 
2617:..\src/interruptions.c ****     cystatus status;
2618:..\src/interruptions.c ****     static uint8 row_number;
2619:..\src/interruptions.c ****     uint8 row_start = 1;
 9276              		.loc 1 2619 0
 9277 0006 0123     		movs	r3, #1
 9278 0008 FB75     		strb	r3, [r7, #23]
2620:..\src/interruptions.c ****     uint8* addr_start   = (uint8*)&g_mem.cnt.emg_counter[0];    //Data at beginning of the row 1
 9279              		.loc 1 2620 0
 9280 000a 394B     		ldr	r3, .L635
 9281 000c 3B61     		str	r3, [r7, #16]
2621:..\src/interruptions.c ****     uint8* addr_start_c = (uint8*)&c_mem.cnt.emg_counter[0];
 9282              		.loc 1 2621 0
 9283 000e 394B     		ldr	r3, .L635+4
 9284 0010 FB60     		str	r3, [r7, #12]
2622:..\src/interruptions.c ****     uint8 row_end   = row_start + EEPROM_COUNTERS_ROWS - 1;
 9285              		.loc 1 2622 0
 9286 0012 FB7D     		ldrb	r3, [r7, #23]
 9287 0014 0433     		adds	r3, r3, #4
 9288 0016 FB72     		strb	r3, [r7, #11]
2623:..\src/interruptions.c ****     static uint8* m_addr = NULL; 
2624:..\src/interruptions.c **** 
2625:..\src/interruptions.c ****     // This part of code writes rows [row_start, row_end] on EEPROM    
2626:..\src/interruptions.c ****     switch(cycles_status) {
 9289              		.loc 1 2626 0
 9290 0018 374B     		ldr	r3, .L635+8
 9291 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9292 001c 042B     		cmp	r3, #4
 9293 001e 63D8     		bhi	.L631
 9294 0020 01A2     		adr	r2, .L622
 9295 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9296 0026 00BF     		.p2align 2
 9297              	.L622:
 9298 0028 3D000000 		.word	.L621+1
 9299 002c 5B000000 		.word	.L623+1
 9300 0030 8B000000 		.word	.L624+1
 9301 0034 C7000000 		.word	.L625+1
 9302 0038 DF000000 		.word	.L632+1
 9303              		.p2align 1
 9304              	.L621:
2627:..\src/interruptions.c ****         case PREPARE_DATA:
2628:..\src/interruptions.c ****             // Store data in c_mem structure to have consistent counters
2629:..\src/interruptions.c ****             memcpy( addr_start_c, addr_start, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );            
 9305              		.loc 1 2629 0
 9306 003c 5022     		movs	r2, #80
 9307 003e 3969     		ldr	r1, [r7, #16]
 9308 0040 F868     		ldr	r0, [r7, #12]
 9309 0042 FFF7FEFF 		bl	memcpy
2630:..\src/interruptions.c ****             m_addr = addr_start;
 9310              		.loc 1 2630 0
 9311 0046 2D4A     		ldr	r2, .L635+12
 9312 0048 3B69     		ldr	r3, [r7, #16]
 9313 004a 1360     		str	r3, [r2]
2631:..\src/interruptions.c ****             row_number = row_start;
 9314              		.loc 1 2631 0
 9315 004c 2C4A     		ldr	r2, .L635+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 214


 9316 004e FB7D     		ldrb	r3, [r7, #23]
 9317 0050 1370     		strb	r3, [r2]
2632:..\src/interruptions.c ****             cycles_status = WRITE_CYCLES;
 9318              		.loc 1 2632 0
 9319 0052 294B     		ldr	r3, .L635+8
 9320 0054 0122     		movs	r2, #1
 9321 0056 1A70     		strb	r2, [r3]
2633:..\src/interruptions.c ****             break;
 9322              		.loc 1 2633 0
 9323 0058 46E0     		b	.L620
 9324              	.L623:
2634:..\src/interruptions.c ****             
2635:..\src/interruptions.c ****         case WRITE_CYCLES:
2636:..\src/interruptions.c ****             EEPROM_UpdateTemperature();     //Check temperature of chip before writing
 9325              		.loc 1 2636 0
 9326 005a FFF7FEFF 		bl	EEPROM_UpdateTemperature
2637:..\src/interruptions.c ****             status = EEPROM_StartWrite((uint8*) m_addr, row_number);           
 9327              		.loc 1 2637 0
 9328 005e 274B     		ldr	r3, .L635+12
 9329 0060 1A68     		ldr	r2, [r3]
 9330 0062 274B     		ldr	r3, .L635+16
 9331 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9332 0066 1946     		mov	r1, r3
 9333 0068 1046     		mov	r0, r2
 9334 006a FFF7FEFF 		bl	EEPROM_StartWrite
 9335 006e 7860     		str	r0, [r7, #4]
2638:..\src/interruptions.c ****             if(status == CYRET_STARTED || status == CYRET_SUCCESS) {
 9336              		.loc 1 2638 0
 9337 0070 7B68     		ldr	r3, [r7, #4]
 9338 0072 072B     		cmp	r3, #7
 9339 0074 02D0     		beq	.L627
 9340              		.loc 1 2638 0 is_stmt 0 discriminator 1
 9341 0076 7B68     		ldr	r3, [r7, #4]
 9342 0078 002B     		cmp	r3, #0
 9343 007a 32D1     		bne	.L633
 9344              	.L627:
2639:..\src/interruptions.c ****                 cycles_status = WAIT_QUERY;
 9345              		.loc 1 2639 0 is_stmt 1
 9346 007c 1E4B     		ldr	r3, .L635+8
 9347 007e 0222     		movs	r2, #2
 9348 0080 1A70     		strb	r2, [r3]
2640:..\src/interruptions.c ****                 can_write = FALSE;
 9349              		.loc 1 2640 0
 9350 0082 204B     		ldr	r3, .L635+20
 9351 0084 0022     		movs	r2, #0
 9352 0086 1A70     		strb	r2, [r3]
2641:..\src/interruptions.c ****             }
2642:..\src/interruptions.c ****             break;
 9353              		.loc 1 2642 0
 9354 0088 2BE0     		b	.L633
 9355              	.L624:
2643:..\src/interruptions.c ****             
2644:..\src/interruptions.c ****         case WAIT_QUERY:
2645:..\src/interruptions.c ****             status = EEPROM_Query();
 9356              		.loc 1 2645 0
 9357 008a FFF7FEFF 		bl	EEPROM_Query
 9358 008e 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 215


2646:..\src/interruptions.c ****             if(status == CYRET_SUCCESS) {
 9359              		.loc 1 2646 0
 9360 0090 7B68     		ldr	r3, [r7, #4]
 9361 0092 002B     		cmp	r3, #0
 9362 0094 27D1     		bne	.L634
2647:..\src/interruptions.c ****                 if (row_number < row_end) {
 9363              		.loc 1 2647 0
 9364 0096 1A4B     		ldr	r3, .L635+16
 9365 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9366 009a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 9367 009c 9A42     		cmp	r2, r3
 9368 009e 0ED9     		bls	.L630
2648:..\src/interruptions.c ****                     m_addr = m_addr + EEPROM_BYTES_ROW;
 9369              		.loc 1 2648 0
 9370 00a0 164B     		ldr	r3, .L635+12
 9371 00a2 1B68     		ldr	r3, [r3]
 9372 00a4 1033     		adds	r3, r3, #16
 9373 00a6 154A     		ldr	r2, .L635+12
 9374 00a8 1360     		str	r3, [r2]
2649:..\src/interruptions.c ****                     row_number = row_number + 1;
 9375              		.loc 1 2649 0
 9376 00aa 154B     		ldr	r3, .L635+16
 9377 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9378 00ae 0133     		adds	r3, r3, #1
 9379 00b0 DAB2     		uxtb	r2, r3
 9380 00b2 134B     		ldr	r3, .L635+16
 9381 00b4 1A70     		strb	r2, [r3]
2650:..\src/interruptions.c ****                     cycles_status = WRITE_CYCLES;
 9382              		.loc 1 2650 0
 9383 00b6 104B     		ldr	r3, .L635+8
 9384 00b8 0122     		movs	r2, #1
 9385 00ba 1A70     		strb	r2, [r3]
2651:..\src/interruptions.c ****                 }
2652:..\src/interruptions.c ****                 else {
2653:..\src/interruptions.c ****                     cycles_status = WRITE_END;
2654:..\src/interruptions.c ****                 }
2655:..\src/interruptions.c ****             }
2656:..\src/interruptions.c ****             break;
 9386              		.loc 1 2656 0
 9387 00bc 13E0     		b	.L634
 9388              	.L630:
2653:..\src/interruptions.c ****                 }
 9389              		.loc 1 2653 0
 9390 00be 0E4B     		ldr	r3, .L635+8
 9391 00c0 0322     		movs	r2, #3
 9392 00c2 1A70     		strb	r2, [r3]
 9393              		.loc 1 2656 0
 9394 00c4 0FE0     		b	.L634
 9395              	.L625:
2657:..\src/interruptions.c ****            
2658:..\src/interruptions.c ****         case WRITE_END:
2659:..\src/interruptions.c ****             can_write = TRUE;            
 9396              		.loc 1 2659 0
 9397 00c6 0F4B     		ldr	r3, .L635+20
 9398 00c8 0122     		movs	r2, #1
 9399 00ca 1A70     		strb	r2, [r3]
2660:..\src/interruptions.c ****             cycles_status = NONE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 216


 9400              		.loc 1 2660 0
 9401 00cc 0A4B     		ldr	r3, .L635+8
 9402 00ce 0422     		movs	r2, #4
 9403 00d0 1A70     		strb	r2, [r3]
2661:..\src/interruptions.c ****             
2662:..\src/interruptions.c ****             // Restore data saved in c_mem structure
2663:..\src/interruptions.c ****             memcpy( addr_start, addr_start_c, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );
 9404              		.loc 1 2663 0
 9405 00d2 5022     		movs	r2, #80
 9406 00d4 F968     		ldr	r1, [r7, #12]
 9407 00d6 3869     		ldr	r0, [r7, #16]
 9408 00d8 FFF7FEFF 		bl	memcpy
2664:..\src/interruptions.c ****             break;
 9409              		.loc 1 2664 0
 9410 00dc 04E0     		b	.L620
 9411              	.L632:
2665:..\src/interruptions.c ****             
2666:..\src/interruptions.c ****         case NONE:
2667:..\src/interruptions.c ****             break;
 9412              		.loc 1 2667 0
 9413 00de 00BF     		nop
 9414 00e0 02E0     		b	.L631
 9415              	.L633:
2642:..\src/interruptions.c ****             
 9416              		.loc 1 2642 0
 9417 00e2 00BF     		nop
 9418 00e4 00E0     		b	.L631
 9419              	.L634:
2656:..\src/interruptions.c ****            
 9420              		.loc 1 2656 0
 9421 00e6 00BF     		nop
 9422              	.L620:
 9423              	.L631:
2668:..\src/interruptions.c ****     }
2669:..\src/interruptions.c ****     
2670:..\src/interruptions.c **** }
 9424              		.loc 1 2670 0
 9425 00e8 00BF     		nop
 9426 00ea 1837     		adds	r7, r7, #24
 9427              		.cfi_def_cfa_offset 8
 9428 00ec BD46     		mov	sp, r7
 9429              		.cfi_def_cfa_register 13
 9430              		@ sp needed
 9431 00ee 80BD     		pop	{r7, pc}
 9432              	.L636:
 9433              		.align	2
 9434              	.L635:
 9435 00f0 10000000 		.word	g_mem+16
 9436 00f4 10000000 		.word	c_mem+16
 9437 00f8 00000000 		.word	cycles_status
 9438 00fc A4010000 		.word	m_addr.10753
 9439 0100 A8010000 		.word	row_number.10748
 9440 0104 00000000 		.word	can_write
 9441              		.cfi_endproc
 9442              	.LFE78:
 9443              		.size	save_cycles_eeprom, .-save_cycles_eeprom
 9444              		.bss
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 217


 9445              	state.10433:
 9446 0000 00       		.space	1
 9447 0001 000000   		.align	2
 9448              	rx_queue.10437:
 9449 0004 000000   		.space	3
 9450              	data_packet_length.10435:
 9451 0007 00       		.space	1
 9452              	data_packet_index.10434:
 9453 0008 00       		.space	1
 9454 0009 000000   		.align	2
 9455              	data_packet_buffer.10436:
 9456 000c 00000000 		.space	128
 9456      00000000 
 9456      00000000 
 9456      00000000 
 9456      00000000 
 9457              		.data
 9458              		.align	1
 9459              		.type	counter_calibration.10453, %object
 9460              		.size	counter_calibration.10453, 2
 9461              	counter_calibration.10453:
 9462 0000 0100     		.short	1
 9463              		.align	1
 9464              		.type	counter_tension_func.10454, %object
 9465              		.size	counter_tension_func.10454, 2
 9466              	counter_tension_func.10454:
 9467 0002 0100     		.short	1
 9468              		.bss
 9469              		.align	2
 9470              	current_emg.10478:
 9471 008c 0000     		.space	2
 9472              	fsm_state.10515:
 9473 008e 00       		.space	1
 9474 008f 00       		.align	2
 9475              	pos_error_sum.10542:
 9476 0090 00000000 		.space	4
 9477              		.align	2
 9478              	prev_pos_err.10544:
 9479 0094 00000000 		.space	4
 9480              	motor_dir.10547:
 9481 0098 00       		.space	1
 9482 0099 000000   		.align	2
 9483              	curr_error_sum.10543:
 9484 009c 00000000 		.space	4
 9485              		.align	2
 9486              	prev_curr_err.10545:
 9487 00a0 00000000 		.space	4
 9488              		.align	2
 9489              	prev_pwm.10546:
 9490 00a4 00000000 		.space	4
 9491              		.align	2
 9492              	position_counter.10548:
 9493 00a8 00000000 		.space	4
 9494              		.align	2
 9495              	pos_error_sum.10575:
 9496 00ac 00000000 		.space	8
 9496      00000000 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 218


 9497              		.align	2
 9498              	prev_pos_err.10577:
 9499 00b4 00000000 		.space	8
 9499      00000000 
 9500              		.align	2
 9501              	motor_dir.10580:
 9502 00bc 0000     		.space	2
 9503 00be 0000     		.align	2
 9504              	curr_error_sum.10576:
 9505 00c0 00000000 		.space	8
 9505      00000000 
 9506              		.align	2
 9507              	prev_curr_err.10578:
 9508 00c8 00000000 		.space	8
 9508      00000000 
 9509              		.align	2
 9510              	prev_pwm.10579:
 9511 00d0 00000000 		.space	8
 9511      00000000 
 9512              		.align	2
 9513              	position_counter.10581:
 9514 00d8 00000000 		.space	8
 9514      00000000 
 9515              		.align	2
 9516              	last_value_encoder.10604:
 9517 00e0 00000000 		.space	24
 9517      00000000 
 9517      00000000 
 9517      00000000 
 9517      00000000 
 9518              		.align	2
 9519              	comp_value_encoder.10605:
 9520 00f8 00000000 		.space	24
 9520      00000000 
 9520      00000000 
 9520      00000000 
 9520      00000000 
 9521              		.data
 9522              		.align	2
 9523              		.type	only_first_time.10607, %object
 9524              		.size	only_first_time.10607, 2
 9525              	only_first_time.10607:
 9526 0004 01       		.byte	1
 9527 0005 01       		.byte	1
 9528              		.bss
 9529              		.align	2
 9530              	error.10606:
 9531 0110 00000000 		.space	6
 9531      0000
 9532 0116 0000     		.align	2
 9533              	v_value.10612:
 9534 0118 00000000 		.space	24
 9534      00000000 
 9534      00000000 
 9534      00000000 
 9534      00000000 
 9535              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 219


 9536              	vv_value.10613:
 9537 0130 00000000 		.space	24
 9537      00000000 
 9537      00000000 
 9537      00000000 
 9537      00000000 
 9538              		.align	2
 9539              	vvv_value.10614:
 9540 0148 00000000 		.space	24
 9540      00000000 
 9540      00000000 
 9540      00000000 
 9540      00000000 
 9541              		.align	2
 9542              	pos_reconstruct.10611:
 9543 0160 0000     		.space	2
 9544 0162 0000     		.align	2
 9545              	one_time_execute.10609:
 9546 0164 0000     		.space	2
 9547 0166 0000     		.align	2
 9548              	safe_startup_motor_activation.10608:
 9549 0168 0000     		.space	2
 9550 016a 0000     		.align	2
 9551              	count_startup_motor.10610:
 9552 016c 00000000 		.space	8
 9552      00000000 
 9553              		.data
 9554              		.type	first_tension_valid.10637, %object
 9555              		.size	first_tension_valid.10637, 1
 9556              	first_tension_valid.10637:
 9557 0006 01       		.byte	1
 9558              		.bss
 9559              		.align	1
 9560              	count.10638:
 9561 0174 0000     		.space	2
 9562              	idx.10640:
 9563 0176 00       		.space	1
 9564 0177 00       		.align	2
 9565              	v_count.10639:
 9566 0178 00000000 		.space	4
 9567              		.align	1
 9568              	emg_counter_1.10631:
 9569 017c 0000     		.space	2
 9570              		.align	1
 9571              	emg_counter_2.10632:
 9572 017e 0000     		.space	2
 9573              		.align	2
 9574              	UD_mean_value.10635:
 9575 0180 00000000 		.space	4
 9576              		.align	1
 9577              	UD_counter.10633:
 9578 0184 0000     		.space	2
 9579 0186 0000     		.align	2
 9580              	LR_mean_value.10636:
 9581 0188 00000000 		.space	4
 9582              		.align	1
 9583              	LR_counter.10634:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 220


 9584 018c 0000     		.space	2
 9585              	pos_cycle_status.10710:
 9586 018e 00       		.space	1
 9587 018f 00       		.align	2
 9588              	thr_pos.10714:
 9589 0190 00000000 		.space	4
 9590              		.align	2
 9591              	max_pos.10715:
 9592 0194 00000000 		.space	4
 9593              		.data
 9594 0007 00       		.align	2
 9595              		.type	bin_threshold.10713, %object
 9596              		.size	bin_threshold.10713, 4
 9597              	bin_threshold.10713:
 9598 0008 FA000000 		.word	250
 9599              		.bss
 9600              		.align	2
 9601              	emg_cycle_status.10711:
 9602 0198 0000     		.space	2
 9603              	rest_cycle_status.10712:
 9604 019a 00       		.space	1
 9605 019b 00       		.align	2
 9606              	timer_value_s.10725:
 9607 019c 00000000 		.space	4
 9608              		.align	2
 9609              	timer_value_e.10726:
 9610 01a0 00000000 		.space	4
 9611              		.align	2
 9612              	m_addr.10753:
 9613 01a4 00000000 		.space	4
 9614              	row_number.10748:
 9615 01a8 00       		.space	1
 9616              		.text
 9617              	.Letext0:
 9618              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 9619              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 9620              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 9621              		.file 5 "..\\src\\commands.h"
 9622              		.file 6 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 9623              		.file 7 "..\\src\\globals.h"
 9624              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 9625              		.section	.debug_info,"",%progbits
 9626              	.Ldebug_info0:
 9627 0000 A51A0000 		.4byte	0x1aa5
 9628 0004 0400     		.2byte	0x4
 9629 0006 00000000 		.4byte	.Ldebug_abbrev0
 9630 000a 04       		.byte	0x4
 9631 000b 01       		.uleb128 0x1
 9632 000c 69080000 		.4byte	.LASF339
 9633 0010 0C       		.byte	0xc
 9634 0011 6E100000 		.4byte	.LASF340
 9635 0015 7F040000 		.4byte	.LASF341
 9636 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 9637 001d 00000000 		.4byte	0
 9638 0021 00000000 		.4byte	.Ldebug_line0
 9639 0025 02       		.uleb128 0x2
 9640 0026 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 221


 9641 0027 06       		.byte	0x6
 9642 0028 90030000 		.4byte	.LASF0
 9643 002c 02       		.uleb128 0x2
 9644 002d 01       		.byte	0x1
 9645 002e 08       		.byte	0x8
 9646 002f 0D040000 		.4byte	.LASF1
 9647 0033 02       		.uleb128 0x2
 9648 0034 02       		.byte	0x2
 9649 0035 05       		.byte	0x5
 9650 0036 630E0000 		.4byte	.LASF2
 9651 003a 02       		.uleb128 0x2
 9652 003b 02       		.byte	0x2
 9653 003c 07       		.byte	0x7
 9654 003d 12100000 		.4byte	.LASF3
 9655 0041 03       		.uleb128 0x3
 9656 0042 04110000 		.4byte	.LASF9
 9657 0046 02       		.byte	0x2
 9658 0047 3F       		.byte	0x3f
 9659 0048 4C000000 		.4byte	0x4c
 9660 004c 02       		.uleb128 0x2
 9661 004d 04       		.byte	0x4
 9662 004e 05       		.byte	0x5
 9663 004f 78020000 		.4byte	.LASF4
 9664 0053 02       		.uleb128 0x2
 9665 0054 04       		.byte	0x4
 9666 0055 07       		.byte	0x7
 9667 0056 70070000 		.4byte	.LASF5
 9668 005a 02       		.uleb128 0x2
 9669 005b 08       		.byte	0x8
 9670 005c 05       		.byte	0x5
 9671 005d 2F090000 		.4byte	.LASF6
 9672 0061 02       		.uleb128 0x2
 9673 0062 08       		.byte	0x8
 9674 0063 07       		.byte	0x7
 9675 0064 0E0C0000 		.4byte	.LASF7
 9676 0068 04       		.uleb128 0x4
 9677 0069 04       		.byte	0x4
 9678 006a 05       		.byte	0x5
 9679 006b 696E7400 		.ascii	"int\000"
 9680 006f 02       		.uleb128 0x2
 9681 0070 04       		.byte	0x4
 9682 0071 07       		.byte	0x7
 9683 0072 450A0000 		.4byte	.LASF8
 9684 0076 03       		.uleb128 0x3
 9685 0077 6E000000 		.4byte	.LASF10
 9686 007b 03       		.byte	0x3
 9687 007c 2C       		.byte	0x2c
 9688 007d 41000000 		.4byte	0x41
 9689 0081 05       		.uleb128 0x5
 9690 0082 3D0E0000 		.4byte	.LASF11
 9691 0086 04       		.byte	0x4
 9692 0087 E401     		.2byte	0x1e4
 9693 0089 2C000000 		.4byte	0x2c
 9694 008d 05       		.uleb128 0x5
 9695 008e 61110000 		.4byte	.LASF12
 9696 0092 04       		.byte	0x4
 9697 0093 E501     		.2byte	0x1e5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 222


 9698 0095 3A000000 		.4byte	0x3a
 9699 0099 05       		.uleb128 0x5
 9700 009a 94000000 		.4byte	.LASF13
 9701 009e 04       		.byte	0x4
 9702 009f E601     		.2byte	0x1e6
 9703 00a1 53000000 		.4byte	0x53
 9704 00a5 05       		.uleb128 0x5
 9705 00a6 78010000 		.4byte	.LASF14
 9706 00aa 04       		.byte	0x4
 9707 00ab E701     		.2byte	0x1e7
 9708 00ad 25000000 		.4byte	0x25
 9709 00b1 05       		.uleb128 0x5
 9710 00b2 0A0F0000 		.4byte	.LASF15
 9711 00b6 04       		.byte	0x4
 9712 00b7 E801     		.2byte	0x1e8
 9713 00b9 33000000 		.4byte	0x33
 9714 00bd 05       		.uleb128 0x5
 9715 00be 91100000 		.4byte	.LASF16
 9716 00c2 04       		.byte	0x4
 9717 00c3 E901     		.2byte	0x1e9
 9718 00c5 4C000000 		.4byte	0x4c
 9719 00c9 05       		.uleb128 0x5
 9720 00ca 2C030000 		.4byte	.LASF17
 9721 00ce 04       		.byte	0x4
 9722 00cf EA01     		.2byte	0x1ea
 9723 00d1 D5000000 		.4byte	0xd5
 9724 00d5 02       		.uleb128 0x2
 9725 00d6 04       		.byte	0x4
 9726 00d7 04       		.byte	0x4
 9727 00d8 170A0000 		.4byte	.LASF18
 9728 00dc 02       		.uleb128 0x2
 9729 00dd 08       		.byte	0x8
 9730 00de 04       		.byte	0x4
 9731 00df 72090000 		.4byte	.LASF19
 9732 00e3 02       		.uleb128 0x2
 9733 00e4 01       		.byte	0x1
 9734 00e5 08       		.byte	0x8
 9735 00e6 EF040000 		.4byte	.LASF20
 9736 00ea 05       		.uleb128 0x5
 9737 00eb 7E0A0000 		.4byte	.LASF21
 9738 00ef 04       		.byte	0x4
 9739 00f0 8602     		.2byte	0x286
 9740 00f2 53000000 		.4byte	0x53
 9741 00f6 05       		.uleb128 0x5
 9742 00f7 B90C0000 		.4byte	.LASF22
 9743 00fb 04       		.byte	0x4
 9744 00fc 8E02     		.2byte	0x28e
 9745 00fe 02010000 		.4byte	0x102
 9746 0102 06       		.uleb128 0x6
 9747 0103 81000000 		.4byte	0x81
 9748 0107 02       		.uleb128 0x2
 9749 0108 08       		.byte	0x8
 9750 0109 04       		.byte	0x4
 9751 010a 1D0B0000 		.4byte	.LASF23
 9752 010e 02       		.uleb128 0x2
 9753 010f 04       		.byte	0x4
 9754 0110 07       		.byte	0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 223


 9755 0111 00000000 		.4byte	.LASF24
 9756 0115 07       		.uleb128 0x7
 9757 0116 E3000000 		.4byte	0xe3
 9758 011a 25010000 		.4byte	0x125
 9759 011e 08       		.uleb128 0x8
 9760 011f 0E010000 		.4byte	0x10e
 9761 0123 07       		.byte	0x7
 9762 0124 00       		.byte	0
 9763 0125 09       		.uleb128 0x9
 9764 0126 3E110000 		.4byte	.LASF33
 9765 012a 01       		.byte	0x1
 9766 012b 2C000000 		.4byte	0x2c
 9767 012f 05       		.byte	0x5
 9768 0130 8E       		.byte	0x8e
 9769 0131 66010000 		.4byte	0x166
 9770 0135 0A       		.uleb128 0xa
 9771 0136 E3060000 		.4byte	.LASF25
 9772 013a 00       		.byte	0
 9773 013b 0A       		.uleb128 0xa
 9774 013c 870A0000 		.4byte	.LASF26
 9775 0140 01       		.byte	0x1
 9776 0141 0A       		.uleb128 0xa
 9777 0142 03020000 		.4byte	.LASF27
 9778 0146 02       		.byte	0x2
 9779 0147 0A       		.uleb128 0xa
 9780 0148 46010000 		.4byte	.LASF28
 9781 014c 03       		.byte	0x3
 9782 014d 0A       		.uleb128 0xa
 9783 014e 00010000 		.4byte	.LASF29
 9784 0152 04       		.byte	0x4
 9785 0153 0A       		.uleb128 0xa
 9786 0154 36000000 		.4byte	.LASF30
 9787 0158 05       		.byte	0x5
 9788 0159 0A       		.uleb128 0xa
 9789 015a B6070000 		.4byte	.LASF31
 9790 015e 06       		.byte	0x6
 9791 015f 0A       		.uleb128 0xa
 9792 0160 DD0D0000 		.4byte	.LASF32
 9793 0164 07       		.byte	0x7
 9794 0165 00       		.byte	0
 9795 0166 09       		.uleb128 0x9
 9796 0167 3D090000 		.4byte	.LASF34
 9797 016b 01       		.byte	0x1
 9798 016c 2C000000 		.4byte	0x2c
 9799 0170 05       		.byte	0x5
 9800 0171 A2       		.byte	0xa2
 9801 0172 8F010000 		.4byte	0x18f
 9802 0176 0A       		.uleb128 0xa
 9803 0177 F6100000 		.4byte	.LASF35
 9804 017b 00       		.byte	0
 9805 017c 0A       		.uleb128 0xa
 9806 017d 47080000 		.4byte	.LASF36
 9807 0181 01       		.byte	0x1
 9808 0182 0A       		.uleb128 0xa
 9809 0183 0D0B0000 		.4byte	.LASF37
 9810 0187 02       		.byte	0x2
 9811 0188 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 224


 9812 0189 53070000 		.4byte	.LASF38
 9813 018d 03       		.byte	0x3
 9814 018e 00       		.byte	0
 9815 018f 03       		.uleb128 0x3
 9816 0190 C1100000 		.4byte	.LASF39
 9817 0194 06       		.byte	0x6
 9818 0195 7E       		.byte	0x7e
 9819 0196 9A010000 		.4byte	0x19a
 9820 019a 0B       		.uleb128 0xb
 9821 019b C1100000 		.4byte	.LASF39
 9822 019f 0C       		.uleb128 0xc
 9823 01a0 04       		.byte	0x4
 9824 01a1 8F010000 		.4byte	0x18f
 9825 01a5 0D       		.uleb128 0xd
 9826 01a6 F7080000 		.4byte	.LASF42
 9827 01aa 10       		.byte	0x10
 9828 01ab 07       		.byte	0x7
 9829 01ac E2       		.byte	0xe2
 9830 01ad E2010000 		.4byte	0x1e2
 9831 01b1 0E       		.uleb128 0xe
 9832 01b2 706F7300 		.ascii	"pos\000"
 9833 01b6 07       		.byte	0x7
 9834 01b7 E3       		.byte	0xe3
 9835 01b8 BD000000 		.4byte	0xbd
 9836 01bc 00       		.byte	0
 9837 01bd 0F       		.uleb128 0xf
 9838 01be 2C080000 		.4byte	.LASF40
 9839 01c2 07       		.byte	0x7
 9840 01c3 E4       		.byte	0xe4
 9841 01c4 BD000000 		.4byte	0xbd
 9842 01c8 04       		.byte	0x4
 9843 01c9 0E       		.uleb128 0xe
 9844 01ca 70776D00 		.ascii	"pwm\000"
 9845 01ce 07       		.byte	0x7
 9846 01cf E5       		.byte	0xe5
 9847 01d0 BD000000 		.4byte	0xbd
 9848 01d4 08       		.byte	0x8
 9849 01d5 0F       		.uleb128 0xf
 9850 01d6 500C0000 		.4byte	.LASF41
 9851 01da 07       		.byte	0x7
 9852 01db E6       		.byte	0xe6
 9853 01dc 81000000 		.4byte	0x81
 9854 01e0 0C       		.byte	0xc
 9855 01e1 00       		.byte	0
 9856 01e2 0D       		.uleb128 0xd
 9857 01e3 A40D0000 		.4byte	.LASF43
 9858 01e7 34       		.byte	0x34
 9859 01e8 07       		.byte	0x7
 9860 01e9 ED       		.byte	0xed
 9861 01ea 43020000 		.4byte	0x243
 9862 01ee 0E       		.uleb128 0xe
 9863 01ef 706F7300 		.ascii	"pos\000"
 9864 01f3 07       		.byte	0x7
 9865 01f4 EE       		.byte	0xee
 9866 01f5 43020000 		.4byte	0x243
 9867 01f9 00       		.byte	0
 9868 01fa 0F       		.uleb128 0xf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 225


 9869 01fb 2C080000 		.4byte	.LASF40
 9870 01ff 07       		.byte	0x7
 9871 0200 EF       		.byte	0xef
 9872 0201 BD000000 		.4byte	0xbd
 9873 0205 0C       		.byte	0xc
 9874 0206 0F       		.uleb128 0xf
 9875 0207 410F0000 		.4byte	.LASF44
 9876 020b 07       		.byte	0x7
 9877 020c F0       		.byte	0xf0
 9878 020d BD000000 		.4byte	0xbd
 9879 0211 10       		.byte	0x10
 9880 0212 0F       		.uleb128 0xf
 9881 0213 AC070000 		.4byte	.LASF45
 9882 0217 07       		.byte	0x7
 9883 0218 F1       		.byte	0xf1
 9884 0219 BD000000 		.4byte	0xbd
 9885 021d 14       		.byte	0x14
 9886 021e 0E       		.uleb128 0xe
 9887 021f 726F7400 		.ascii	"rot\000"
 9888 0223 07       		.byte	0x7
 9889 0224 F2       		.byte	0xf2
 9890 0225 53020000 		.4byte	0x253
 9891 0229 18       		.byte	0x18
 9892 022a 0E       		.uleb128 0xe
 9893 022b 76656C00 		.ascii	"vel\000"
 9894 022f 07       		.byte	0x7
 9895 0230 F3       		.byte	0xf3
 9896 0231 43020000 		.4byte	0x243
 9897 0235 1C       		.byte	0x1c
 9898 0236 0E       		.uleb128 0xe
 9899 0237 61636300 		.ascii	"acc\000"
 9900 023b 07       		.byte	0x7
 9901 023c F4       		.byte	0xf4
 9902 023d 43020000 		.4byte	0x243
 9903 0241 28       		.byte	0x28
 9904 0242 00       		.byte	0
 9905 0243 07       		.uleb128 0x7
 9906 0244 BD000000 		.4byte	0xbd
 9907 0248 53020000 		.4byte	0x253
 9908 024c 08       		.uleb128 0x8
 9909 024d 0E010000 		.4byte	0x10e
 9910 0251 02       		.byte	0x2
 9911 0252 00       		.byte	0
 9912 0253 07       		.uleb128 0x7
 9913 0254 A5000000 		.4byte	0xa5
 9914 0258 63020000 		.4byte	0x263
 9915 025c 08       		.uleb128 0x8
 9916 025d 0E010000 		.4byte	0x10e
 9917 0261 02       		.byte	0x2
 9918 0262 00       		.byte	0
 9919 0263 0D       		.uleb128 0xd
 9920 0264 2C0A0000 		.4byte	.LASF46
 9921 0268 28       		.byte	0x28
 9922 0269 07       		.byte	0x7
 9923 026a F7       		.byte	0xf7
 9924 026b 94020000 		.4byte	0x294
 9925 026f 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 226


 9926 0270 656D6700 		.ascii	"emg\000"
 9927 0274 07       		.byte	0x7
 9928 0275 F8       		.byte	0xf8
 9929 0276 94020000 		.4byte	0x294
 9930 027a 00       		.byte	0
 9931 027b 0F       		.uleb128 0xf
 9932 027c D10A0000 		.4byte	.LASF47
 9933 0280 07       		.byte	0x7
 9934 0281 F9       		.byte	0xf9
 9935 0282 A4020000 		.4byte	0x2a4
 9936 0286 08       		.byte	0x8
 9937 0287 0F       		.uleb128 0xf
 9938 0288 820E0000 		.4byte	.LASF48
 9939 028c 07       		.byte	0x7
 9940 028d FA       		.byte	0xfa
 9941 028e 94020000 		.4byte	0x294
 9942 0292 20       		.byte	0x20
 9943 0293 00       		.byte	0
 9944 0294 07       		.uleb128 0x7
 9945 0295 BD000000 		.4byte	0xbd
 9946 0299 A4020000 		.4byte	0x2a4
 9947 029d 08       		.uleb128 0x8
 9948 029e 0E010000 		.4byte	0x10e
 9949 02a2 01       		.byte	0x1
 9950 02a3 00       		.byte	0
 9951 02a4 07       		.uleb128 0x7
 9952 02a5 BD000000 		.4byte	0xbd
 9953 02a9 B4020000 		.4byte	0x2b4
 9954 02ad 08       		.uleb128 0x8
 9955 02ae 0E010000 		.4byte	0x10e
 9956 02b2 05       		.byte	0x5
 9957 02b3 00       		.byte	0
 9958 02b4 10       		.uleb128 0x10
 9959 02b5 8C000000 		.4byte	.LASF49
 9960 02b9 86       		.byte	0x86
 9961 02ba 07       		.byte	0x7
 9962 02bb 0501     		.2byte	0x105
 9963 02bd F6020000 		.4byte	0x2f6
 9964 02c1 11       		.uleb128 0x11
 9965 02c2 FB050000 		.4byte	.LASF50
 9966 02c6 07       		.byte	0x7
 9967 02c7 0601     		.2byte	0x106
 9968 02c9 F6020000 		.4byte	0x2f6
 9969 02cd 00       		.byte	0
 9970 02ce 11       		.uleb128 0x11
 9971 02cf 330C0000 		.4byte	.LASF51
 9972 02d3 07       		.byte	0x7
 9973 02d4 0701     		.2byte	0x107
 9974 02d6 B1000000 		.4byte	0xb1
 9975 02da 80       		.byte	0x80
 9976 02db 12       		.uleb128 0x12
 9977 02dc 696E6400 		.ascii	"ind\000"
 9978 02e0 07       		.byte	0x7
 9979 02e1 0801     		.2byte	0x108
 9980 02e3 B1000000 		.4byte	0xb1
 9981 02e7 82       		.byte	0x82
 9982 02e8 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 227


 9983 02e9 D6010000 		.4byte	.LASF52
 9984 02ed 07       		.byte	0x7
 9985 02ee 0901     		.2byte	0x109
 9986 02f0 81000000 		.4byte	0x81
 9987 02f4 84       		.byte	0x84
 9988 02f5 00       		.byte	0
 9989 02f6 07       		.uleb128 0x7
 9990 02f7 81000000 		.4byte	0x81
 9991 02fb 06030000 		.4byte	0x306
 9992 02ff 08       		.uleb128 0x8
 9993 0300 0E010000 		.4byte	0x10e
 9994 0304 7F       		.byte	0x7f
 9995 0305 00       		.byte	0
 9996 0306 10       		.uleb128 0x10
 9997 0307 19030000 		.4byte	.LASF53
 9998 030b 50       		.byte	0x50
 9999 030c 07       		.byte	0x7
 10000 030d 1201     		.2byte	0x112
 10001 030f 6F030000 		.4byte	0x36f
 10002 0313 11       		.uleb128 0x11
 10003 0314 4E030000 		.4byte	.LASF54
 10004 0318 07       		.byte	0x7
 10005 0319 1301     		.2byte	0x113
 10006 031b 6F030000 		.4byte	0x36f
 10007 031f 00       		.byte	0
 10008 0320 11       		.uleb128 0x11
 10009 0321 93010000 		.4byte	.LASF55
 10010 0325 07       		.byte	0x7
 10011 0326 1401     		.2byte	0x114
 10012 0328 7F030000 		.4byte	0x37f
 10013 032c 08       		.byte	0x8
 10014 032d 11       		.uleb128 0x11
 10015 032e 000B0000 		.4byte	.LASF56
 10016 0332 07       		.byte	0x7
 10017 0333 1501     		.2byte	0x115
 10018 0335 8F030000 		.4byte	0x38f
 10019 0339 30       		.byte	0x30
 10020 033a 11       		.uleb128 0x11
 10021 033b 2A010000 		.4byte	.LASF57
 10022 033f 07       		.byte	0x7
 10023 0340 1601     		.2byte	0x116
 10024 0342 99000000 		.4byte	0x99
 10025 0346 40       		.byte	0x40
 10026 0347 11       		.uleb128 0x11
 10027 0348 0E110000 		.4byte	.LASF58
 10028 034c 07       		.byte	0x7
 10029 034d 1701     		.2byte	0x117
 10030 034f 99000000 		.4byte	0x99
 10031 0353 44       		.byte	0x44
 10032 0354 11       		.uleb128 0x11
 10033 0355 82070000 		.4byte	.LASF59
 10034 0359 07       		.byte	0x7
 10035 035a 1801     		.2byte	0x118
 10036 035c 99000000 		.4byte	0x99
 10037 0360 48       		.byte	0x48
 10038 0361 11       		.uleb128 0x11
 10039 0362 CA070000 		.4byte	.LASF60
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 228


 10040 0366 07       		.byte	0x7
 10041 0367 1901     		.2byte	0x119
 10042 0369 99000000 		.4byte	0x99
 10043 036d 4C       		.byte	0x4c
 10044 036e 00       		.byte	0
 10045 036f 07       		.uleb128 0x7
 10046 0370 99000000 		.4byte	0x99
 10047 0374 7F030000 		.4byte	0x37f
 10048 0378 08       		.uleb128 0x8
 10049 0379 0E010000 		.4byte	0x10e
 10050 037d 01       		.byte	0x1
 10051 037e 00       		.byte	0
 10052 037f 07       		.uleb128 0x7
 10053 0380 99000000 		.4byte	0x99
 10054 0384 8F030000 		.4byte	0x38f
 10055 0388 08       		.uleb128 0x8
 10056 0389 0E010000 		.4byte	0x10e
 10057 038d 09       		.byte	0x9
 10058 038e 00       		.byte	0
 10059 038f 07       		.uleb128 0x7
 10060 0390 99000000 		.4byte	0x99
 10061 0394 9F030000 		.4byte	0x39f
 10062 0398 08       		.uleb128 0x8
 10063 0399 0E010000 		.4byte	0x10e
 10064 039d 03       		.byte	0x3
 10065 039e 00       		.byte	0
 10066 039f 10       		.uleb128 0x10
 10067 03a0 F9010000 		.4byte	.LASF61
 10068 03a4 10       		.byte	0x10
 10069 03a5 07       		.byte	0x7
 10070 03a6 2001     		.2byte	0x120
 10071 03a8 2E040000 		.4byte	0x42e
 10072 03ac 12       		.uleb128 0x12
 10073 03ad 696400   		.ascii	"id\000"
 10074 03b0 07       		.byte	0x7
 10075 03b1 2101     		.2byte	0x121
 10076 03b3 81000000 		.4byte	0x81
 10077 03b7 00       		.byte	0
 10078 03b8 11       		.uleb128 0x11
 10079 03b9 9D0E0000 		.4byte	.LASF62
 10080 03bd 07       		.byte	0x7
 10081 03be 2201     		.2byte	0x122
 10082 03c0 2E040000 		.4byte	0x42e
 10083 03c4 01       		.byte	0x1
 10084 03c5 11       		.uleb128 0x11
 10085 03c6 D90E0000 		.4byte	.LASF63
 10086 03ca 07       		.byte	0x7
 10087 03cb 2301     		.2byte	0x123
 10088 03cd 2E040000 		.4byte	0x42e
 10089 03d1 04       		.byte	0x4
 10090 03d2 11       		.uleb128 0x11
 10091 03d3 67040000 		.4byte	.LASF64
 10092 03d7 07       		.byte	0x7
 10093 03d8 2401     		.2byte	0x124
 10094 03da 81000000 		.4byte	0x81
 10095 03de 07       		.byte	0x7
 10096 03df 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 229


 10097 03e0 A2020000 		.4byte	.LASF65
 10098 03e4 07       		.byte	0x7
 10099 03e5 2501     		.2byte	0x125
 10100 03e7 81000000 		.4byte	0x81
 10101 03eb 08       		.byte	0x8
 10102 03ec 11       		.uleb128 0x11
 10103 03ed 1F020000 		.4byte	.LASF66
 10104 03f1 07       		.byte	0x7
 10105 03f2 2601     		.2byte	0x126
 10106 03f4 81000000 		.4byte	0x81
 10107 03f8 09       		.byte	0x9
 10108 03f9 11       		.uleb128 0x11
 10109 03fa E60F0000 		.4byte	.LASF67
 10110 03fe 07       		.byte	0x7
 10111 03ff 2701     		.2byte	0x127
 10112 0401 81000000 		.4byte	0x81
 10113 0405 0A       		.byte	0xa
 10114 0406 11       		.uleb128 0x11
 10115 0407 7A0F0000 		.4byte	.LASF68
 10116 040b 07       		.byte	0x7
 10117 040c 2801     		.2byte	0x128
 10118 040e 81000000 		.4byte	0x81
 10119 0412 0B       		.byte	0xb
 10120 0413 11       		.uleb128 0x11
 10121 0414 530D0000 		.4byte	.LASF69
 10122 0418 07       		.byte	0x7
 10123 0419 2901     		.2byte	0x129
 10124 041b 81000000 		.4byte	0x81
 10125 041f 0C       		.byte	0xc
 10126 0420 11       		.uleb128 0x11
 10127 0421 E6020000 		.4byte	.LASF70
 10128 0425 07       		.byte	0x7
 10129 0426 2A01     		.2byte	0x12a
 10130 0428 2E040000 		.4byte	0x42e
 10131 042c 0D       		.byte	0xd
 10132 042d 00       		.byte	0
 10133 042e 07       		.uleb128 0x7
 10134 042f 81000000 		.4byte	0x81
 10135 0433 3E040000 		.4byte	0x43e
 10136 0437 08       		.uleb128 0x8
 10137 0438 0E010000 		.4byte	0x10e
 10138 043c 02       		.byte	0x2
 10139 043d 00       		.byte	0
 10140 043e 10       		.uleb128 0x10
 10141 043f AC100000 		.4byte	.LASF71
 10142 0443 70       		.byte	0x70
 10143 0444 07       		.byte	0x7
 10144 0445 3101     		.2byte	0x131
 10145 0447 B8050000 		.4byte	0x5b8
 10146 044b 12       		.uleb128 0x12
 10147 044c 6B5F7000 		.ascii	"k_p\000"
 10148 0450 07       		.byte	0x7
 10149 0451 3201     		.2byte	0x132
 10150 0453 BD000000 		.4byte	0xbd
 10151 0457 00       		.byte	0
 10152 0458 12       		.uleb128 0x12
 10153 0459 6B5F6900 		.ascii	"k_i\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 230


 10154 045d 07       		.byte	0x7
 10155 045e 3301     		.2byte	0x133
 10156 0460 BD000000 		.4byte	0xbd
 10157 0464 04       		.byte	0x4
 10158 0465 12       		.uleb128 0x12
 10159 0466 6B5F6400 		.ascii	"k_d\000"
 10160 046a 07       		.byte	0x7
 10161 046b 3401     		.2byte	0x134
 10162 046d BD000000 		.4byte	0xbd
 10163 0471 08       		.byte	0x8
 10164 0472 11       		.uleb128 0x11
 10165 0473 8C0C0000 		.4byte	.LASF72
 10166 0477 07       		.byte	0x7
 10167 0478 3501     		.2byte	0x135
 10168 047a BD000000 		.4byte	0xbd
 10169 047e 0C       		.byte	0xc
 10170 047f 11       		.uleb128 0x11
 10171 0480 58050000 		.4byte	.LASF73
 10172 0484 07       		.byte	0x7
 10173 0485 3601     		.2byte	0x136
 10174 0487 BD000000 		.4byte	0xbd
 10175 048b 10       		.byte	0x10
 10176 048c 11       		.uleb128 0x11
 10177 048d 40050000 		.4byte	.LASF74
 10178 0491 07       		.byte	0x7
 10179 0492 3701     		.2byte	0x137
 10180 0494 BD000000 		.4byte	0xbd
 10181 0498 14       		.byte	0x14
 10182 0499 11       		.uleb128 0x11
 10183 049a 3A0F0000 		.4byte	.LASF75
 10184 049e 07       		.byte	0x7
 10185 049f 3801     		.2byte	0x138
 10186 04a1 BD000000 		.4byte	0xbd
 10187 04a5 18       		.byte	0x18
 10188 04a6 11       		.uleb128 0x11
 10189 04a7 F4050000 		.4byte	.LASF76
 10190 04ab 07       		.byte	0x7
 10191 04ac 3901     		.2byte	0x139
 10192 04ae BD000000 		.4byte	0xbd
 10193 04b2 1C       		.byte	0x1c
 10194 04b3 11       		.uleb128 0x11
 10195 04b4 6D0E0000 		.4byte	.LASF77
 10196 04b8 07       		.byte	0x7
 10197 04b9 3A01     		.2byte	0x13a
 10198 04bb BD000000 		.4byte	0xbd
 10199 04bf 20       		.byte	0x20
 10200 04c0 11       		.uleb128 0x11
 10201 04c1 02060000 		.4byte	.LASF78
 10202 04c5 07       		.byte	0x7
 10203 04c6 3B01     		.2byte	0x13b
 10204 04c8 BD000000 		.4byte	0xbd
 10205 04cc 24       		.byte	0x24
 10206 04cd 11       		.uleb128 0x11
 10207 04ce 3C070000 		.4byte	.LASF79
 10208 04d2 07       		.byte	0x7
 10209 04d3 3C01     		.2byte	0x13c
 10210 04d5 BD000000 		.4byte	0xbd
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 231


 10211 04d9 28       		.byte	0x28
 10212 04da 11       		.uleb128 0x11
 10213 04db 86110000 		.4byte	.LASF80
 10214 04df 07       		.byte	0x7
 10215 04e0 3D01     		.2byte	0x13d
 10216 04e2 BD000000 		.4byte	0xbd
 10217 04e6 2C       		.byte	0x2c
 10218 04e7 11       		.uleb128 0x11
 10219 04e8 DA070000 		.4byte	.LASF81
 10220 04ec 07       		.byte	0x7
 10221 04ed 3E01     		.2byte	0x13e
 10222 04ef 81000000 		.4byte	0x81
 10223 04f3 30       		.byte	0x30
 10224 04f4 11       		.uleb128 0x11
 10225 04f5 230F0000 		.4byte	.LASF82
 10226 04f9 07       		.byte	0x7
 10227 04fa 3F01     		.2byte	0x13f
 10228 04fc 81000000 		.4byte	0x81
 10229 0500 31       		.byte	0x31
 10230 0501 11       		.uleb128 0x11
 10231 0502 9E0C0000 		.4byte	.LASF83
 10232 0506 07       		.byte	0x7
 10233 0507 4001     		.2byte	0x140
 10234 0509 81000000 		.4byte	0x81
 10235 050d 32       		.byte	0x32
 10236 050e 11       		.uleb128 0x11
 10237 050f C9100000 		.4byte	.LASF84
 10238 0513 07       		.byte	0x7
 10239 0514 4101     		.2byte	0x141
 10240 0516 81000000 		.4byte	0x81
 10241 051a 33       		.byte	0x33
 10242 051b 11       		.uleb128 0x11
 10243 051c AB000000 		.4byte	.LASF85
 10244 0520 07       		.byte	0x7
 10245 0521 4201     		.2byte	0x142
 10246 0523 BD000000 		.4byte	0xbd
 10247 0527 34       		.byte	0x34
 10248 0528 11       		.uleb128 0x11
 10249 0529 88050000 		.4byte	.LASF86
 10250 052d 07       		.byte	0x7
 10251 052e 4301     		.2byte	0x143
 10252 0530 BD000000 		.4byte	0xbd
 10253 0534 38       		.byte	0x38
 10254 0535 11       		.uleb128 0x11
 10255 0536 E8090000 		.4byte	.LASF87
 10256 053a 07       		.byte	0x7
 10257 053b 4401     		.2byte	0x144
 10258 053d BD000000 		.4byte	0xbd
 10259 0541 3C       		.byte	0x3c
 10260 0542 11       		.uleb128 0x11
 10261 0543 F4040000 		.4byte	.LASF88
 10262 0547 07       		.byte	0x7
 10263 0548 4501     		.2byte	0x145
 10264 054a BD000000 		.4byte	0xbd
 10265 054e 40       		.byte	0x40
 10266 054f 11       		.uleb128 0x11
 10267 0550 14010000 		.4byte	.LASF89
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 232


 10268 0554 07       		.byte	0x7
 10269 0555 4601     		.2byte	0x146
 10270 0557 B8050000 		.4byte	0x5b8
 10271 055b 44       		.byte	0x44
 10272 055c 11       		.uleb128 0x11
 10273 055d 30110000 		.4byte	.LASF90
 10274 0561 07       		.byte	0x7
 10275 0562 4701     		.2byte	0x147
 10276 0564 B1000000 		.4byte	0xb1
 10277 0568 5C       		.byte	0x5c
 10278 0569 11       		.uleb128 0x11
 10279 056a 3C080000 		.4byte	.LASF91
 10280 056e 07       		.byte	0x7
 10281 056f 4801     		.2byte	0x148
 10282 0571 81000000 		.4byte	0x81
 10283 0575 5E       		.byte	0x5e
 10284 0576 11       		.uleb128 0x11
 10285 0577 710A0000 		.4byte	.LASF92
 10286 057b 07       		.byte	0x7
 10287 057c 4901     		.2byte	0x149
 10288 057e 81000000 		.4byte	0x81
 10289 0582 5F       		.byte	0x5f
 10290 0583 11       		.uleb128 0x11
 10291 0584 72040000 		.4byte	.LASF93
 10292 0588 07       		.byte	0x7
 10293 0589 4A01     		.2byte	0x14a
 10294 058b 81000000 		.4byte	0x81
 10295 058f 60       		.byte	0x60
 10296 0590 11       		.uleb128 0x11
 10297 0591 2F050000 		.4byte	.LASF94
 10298 0595 07       		.byte	0x7
 10299 0596 4B01     		.2byte	0x14b
 10300 0598 81000000 		.4byte	0x81
 10301 059c 61       		.byte	0x61
 10302 059d 11       		.uleb128 0x11
 10303 059e 1B040000 		.4byte	.LASF95
 10304 05a2 07       		.byte	0x7
 10305 05a3 4C01     		.2byte	0x14c
 10306 05a5 81000000 		.4byte	0x81
 10307 05a9 62       		.byte	0x62
 10308 05aa 11       		.uleb128 0x11
 10309 05ab E6020000 		.4byte	.LASF70
 10310 05af 07       		.byte	0x7
 10311 05b0 4D01     		.2byte	0x14d
 10312 05b2 C8050000 		.4byte	0x5c8
 10313 05b6 63       		.byte	0x63
 10314 05b7 00       		.byte	0
 10315 05b8 07       		.uleb128 0x7
 10316 05b9 D5000000 		.4byte	0xd5
 10317 05bd C8050000 		.4byte	0x5c8
 10318 05c1 08       		.uleb128 0x8
 10319 05c2 0E010000 		.4byte	0x10e
 10320 05c6 05       		.byte	0x5
 10321 05c7 00       		.byte	0
 10322 05c8 07       		.uleb128 0x7
 10323 05c9 81000000 		.4byte	0x81
 10324 05cd D8050000 		.4byte	0x5d8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 233


 10325 05d1 08       		.uleb128 0x8
 10326 05d2 0E010000 		.4byte	0x10e
 10327 05d6 0C       		.byte	0xc
 10328 05d7 00       		.byte	0
 10329 05d8 10       		.uleb128 0x10
 10330 05d9 25100000 		.4byte	.LASF96
 10331 05dd 30       		.byte	0x30
 10332 05de 07       		.byte	0x7
 10333 05df 5401     		.2byte	0x154
 10334 05e1 5B060000 		.4byte	0x65b
 10335 05e5 11       		.uleb128 0x11
 10336 05e6 A2090000 		.4byte	.LASF97
 10337 05ea 07       		.byte	0x7
 10338 05eb 5501     		.2byte	0x155
 10339 05ed 5B060000 		.4byte	0x65b
 10340 05f1 00       		.byte	0
 10341 05f2 12       		.uleb128 0x12
 10342 05f3 72657300 		.ascii	"res\000"
 10343 05f7 07       		.byte	0x7
 10344 05f8 5601     		.2byte	0x156
 10345 05fa 2E040000 		.4byte	0x42e
 10346 05fe 05       		.byte	0x5
 10347 05ff 11       		.uleb128 0x11
 10348 0600 FC070000 		.4byte	.LASF98
 10349 0604 07       		.byte	0x7
 10350 0605 5701     		.2byte	0x157
 10351 0607 43020000 		.4byte	0x243
 10352 060b 08       		.byte	0x8
 10353 060c 11       		.uleb128 0x11
 10354 060d 51050000 		.4byte	.LASF99
 10355 0611 07       		.byte	0x7
 10356 0612 5801     		.2byte	0x158
 10357 0614 6B060000 		.4byte	0x66b
 10358 0618 14       		.byte	0x14
 10359 0619 11       		.uleb128 0x11
 10360 061a A50B0000 		.4byte	.LASF100
 10361 061e 07       		.byte	0x7
 10362 061f 5901     		.2byte	0x159
 10363 0621 81000000 		.4byte	0x81
 10364 0625 20       		.byte	0x20
 10365 0626 11       		.uleb128 0x11
 10366 0627 DC010000 		.4byte	.LASF101
 10367 062b 07       		.byte	0x7
 10368 062c 5A01     		.2byte	0x15a
 10369 062e 2E040000 		.4byte	0x42e
 10370 0632 21       		.byte	0x21
 10371 0633 11       		.uleb128 0x11
 10372 0634 560B0000 		.4byte	.LASF102
 10373 0638 07       		.byte	0x7
 10374 0639 5B01     		.2byte	0x15b
 10375 063b A5000000 		.4byte	0xa5
 10376 063f 24       		.byte	0x24
 10377 0640 11       		.uleb128 0x11
 10378 0641 750D0000 		.4byte	.LASF103
 10379 0645 07       		.byte	0x7
 10380 0646 5C01     		.2byte	0x15c
 10381 0648 53020000 		.4byte	0x253
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 234


 10382 064c 25       		.byte	0x25
 10383 064d 11       		.uleb128 0x11
 10384 064e E6020000 		.4byte	.LASF70
 10385 0652 07       		.byte	0x7
 10386 0653 5D01     		.2byte	0x15d
 10387 0655 7B060000 		.4byte	0x67b
 10388 0659 28       		.byte	0x28
 10389 065a 00       		.byte	0
 10390 065b 07       		.uleb128 0x7
 10391 065c 81000000 		.4byte	0x81
 10392 0660 6B060000 		.4byte	0x66b
 10393 0664 08       		.uleb128 0x8
 10394 0665 0E010000 		.4byte	0x10e
 10395 0669 04       		.byte	0x4
 10396 066a 00       		.byte	0
 10397 066b 07       		.uleb128 0x7
 10398 066c C9000000 		.4byte	0xc9
 10399 0670 7B060000 		.4byte	0x67b
 10400 0674 08       		.uleb128 0x8
 10401 0675 0E010000 		.4byte	0x10e
 10402 0679 02       		.byte	0x2
 10403 067a 00       		.byte	0
 10404 067b 07       		.uleb128 0x7
 10405 067c 81000000 		.4byte	0x81
 10406 0680 8B060000 		.4byte	0x68b
 10407 0684 08       		.uleb128 0x8
 10408 0685 0E010000 		.4byte	0x10e
 10409 0689 07       		.byte	0x7
 10410 068a 00       		.byte	0
 10411 068b 10       		.uleb128 0x10
 10412 068c 8C010000 		.4byte	.LASF104
 10413 0690 10       		.byte	0x10
 10414 0691 07       		.byte	0x7
 10415 0692 6401     		.2byte	0x164
 10416 0694 DA060000 		.4byte	0x6da
 10417 0698 11       		.uleb128 0x11
 10418 0699 DF0A0000 		.4byte	.LASF105
 10419 069d 07       		.byte	0x7
 10420 069e 6501     		.2byte	0x165
 10421 06a0 DA060000 		.4byte	0x6da
 10422 06a4 00       		.byte	0
 10423 06a5 11       		.uleb128 0x11
 10424 06a6 22110000 		.4byte	.LASF106
 10425 06aa 07       		.byte	0x7
 10426 06ab 6601     		.2byte	0x166
 10427 06ad 6F030000 		.4byte	0x36f
 10428 06b1 04       		.byte	0x4
 10429 06b2 11       		.uleb128 0x11
 10430 06b3 9E050000 		.4byte	.LASF107
 10431 06b7 07       		.byte	0x7
 10432 06b8 6701     		.2byte	0x167
 10433 06ba EA060000 		.4byte	0x6ea
 10434 06be 0C       		.byte	0xc
 10435 06bf 11       		.uleb128 0x11
 10436 06c0 8F0D0000 		.4byte	.LASF108
 10437 06c4 07       		.byte	0x7
 10438 06c5 6801     		.2byte	0x168
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 235


 10439 06c7 81000000 		.4byte	0x81
 10440 06cb 0E       		.byte	0xe
 10441 06cc 11       		.uleb128 0x11
 10442 06cd CA030000 		.4byte	.LASF109
 10443 06d1 07       		.byte	0x7
 10444 06d2 6901     		.2byte	0x169
 10445 06d4 81000000 		.4byte	0x81
 10446 06d8 0F       		.byte	0xf
 10447 06d9 00       		.byte	0
 10448 06da 07       		.uleb128 0x7
 10449 06db 8D000000 		.4byte	0x8d
 10450 06df EA060000 		.4byte	0x6ea
 10451 06e3 08       		.uleb128 0x8
 10452 06e4 0E010000 		.4byte	0x10e
 10453 06e8 01       		.byte	0x1
 10454 06e9 00       		.byte	0
 10455 06ea 07       		.uleb128 0x7
 10456 06eb 81000000 		.4byte	0x81
 10457 06ef FA060000 		.4byte	0x6fa
 10458 06f3 08       		.uleb128 0x8
 10459 06f4 0E010000 		.4byte	0x10e
 10460 06f8 01       		.byte	0x1
 10461 06f9 00       		.byte	0
 10462 06fa 10       		.uleb128 0x10
 10463 06fb 9B0A0000 		.4byte	.LASF110
 10464 06ff 20       		.byte	0x20
 10465 0700 07       		.byte	0x7
 10466 0701 7001     		.2byte	0x170
 10467 0703 3C070000 		.4byte	0x73c
 10468 0707 11       		.uleb128 0x11
 10469 0708 4A020000 		.4byte	.LASF111
 10470 070c 07       		.byte	0x7
 10471 070d 7101     		.2byte	0x171
 10472 070f 81000000 		.4byte	0x81
 10473 0713 00       		.byte	0
 10474 0714 11       		.uleb128 0x11
 10475 0715 03100000 		.4byte	.LASF112
 10476 0719 07       		.byte	0x7
 10477 071a 7201     		.2byte	0x172
 10478 071c 81000000 		.4byte	0x81
 10479 0720 01       		.byte	0x1
 10480 0721 11       		.uleb128 0x11
 10481 0722 1D0A0000 		.4byte	.LASF113
 10482 0726 07       		.byte	0x7
 10483 0727 7301     		.2byte	0x173
 10484 0729 3C070000 		.4byte	0x73c
 10485 072d 02       		.byte	0x2
 10486 072e 11       		.uleb128 0x11
 10487 072f E6020000 		.4byte	.LASF70
 10488 0733 07       		.byte	0x7
 10489 0734 7401     		.2byte	0x174
 10490 0736 5B060000 		.4byte	0x65b
 10491 073a 1B       		.byte	0x1b
 10492 073b 00       		.byte	0
 10493 073c 07       		.uleb128 0x7
 10494 073d 81000000 		.4byte	0x81
 10495 0741 52070000 		.4byte	0x752
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 236


 10496 0745 08       		.uleb128 0x8
 10497 0746 0E010000 		.4byte	0x10e
 10498 074a 04       		.byte	0x4
 10499 074b 08       		.uleb128 0x8
 10500 074c 0E010000 		.4byte	0x10e
 10501 0750 04       		.byte	0x4
 10502 0751 00       		.byte	0
 10503 0752 10       		.uleb128 0x10
 10504 0753 820D0000 		.4byte	.LASF114
 10505 0757 20       		.byte	0x20
 10506 0758 07       		.byte	0x7
 10507 0759 7B01     		.2byte	0x17b
 10508 075b A1070000 		.4byte	0x7a1
 10509 075f 11       		.uleb128 0x11
 10510 0760 9B0B0000 		.4byte	.LASF115
 10511 0764 07       		.byte	0x7
 10512 0765 7C01     		.2byte	0x17c
 10513 0767 A1070000 		.4byte	0x7a1
 10514 076b 00       		.byte	0
 10515 076c 11       		.uleb128 0x11
 10516 076d 100F0000 		.4byte	.LASF116
 10517 0771 07       		.byte	0x7
 10518 0772 7D01     		.2byte	0x17d
 10519 0774 81000000 		.4byte	0x81
 10520 0778 06       		.byte	0x6
 10521 0779 11       		.uleb128 0x11
 10522 077a 4E000000 		.4byte	.LASF117
 10523 077e 07       		.byte	0x7
 10524 077f 7E01     		.2byte	0x17e
 10525 0781 81000000 		.4byte	0x81
 10526 0785 07       		.byte	0x7
 10527 0786 11       		.uleb128 0x11
 10528 0787 DD050000 		.4byte	.LASF118
 10529 078b 07       		.byte	0x7
 10530 078c 7F01     		.2byte	0x17f
 10531 078e B1070000 		.4byte	0x7b1
 10532 0792 08       		.byte	0x8
 10533 0793 11       		.uleb128 0x11
 10534 0794 E6020000 		.4byte	.LASF70
 10535 0798 07       		.byte	0x7
 10536 0799 8001     		.2byte	0x180
 10537 079b B1070000 		.4byte	0x7b1
 10538 079f 14       		.byte	0x14
 10539 07a0 00       		.byte	0
 10540 07a1 07       		.uleb128 0x7
 10541 07a2 81000000 		.4byte	0x81
 10542 07a6 B1070000 		.4byte	0x7b1
 10543 07aa 08       		.uleb128 0x8
 10544 07ab 0E010000 		.4byte	0x10e
 10545 07af 05       		.byte	0x5
 10546 07b0 00       		.byte	0
 10547 07b1 07       		.uleb128 0x7
 10548 07b2 81000000 		.4byte	0x81
 10549 07b6 C1070000 		.4byte	0x7c1
 10550 07ba 08       		.uleb128 0x8
 10551 07bb 0E010000 		.4byte	0x10e
 10552 07bf 0B       		.byte	0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 237


 10553 07c0 00       		.byte	0
 10554 07c1 10       		.uleb128 0x10
 10555 07c2 6D0D0000 		.4byte	.LASF119
 10556 07c6 20       		.byte	0x20
 10557 07c7 07       		.byte	0x7
 10558 07c8 8701     		.2byte	0x187
 10559 07ca F6070000 		.4byte	0x7f6
 10560 07ce 11       		.uleb128 0x11
 10561 07cf 9C030000 		.4byte	.LASF120
 10562 07d3 07       		.byte	0x7
 10563 07d4 8801     		.2byte	0x188
 10564 07d6 15010000 		.4byte	0x115
 10565 07da 00       		.byte	0
 10566 07db 11       		.uleb128 0x11
 10567 07dc BF020000 		.4byte	.LASF121
 10568 07e0 07       		.byte	0x7
 10569 07e1 8901     		.2byte	0x189
 10570 07e3 8B060000 		.4byte	0x68b
 10571 07e7 08       		.byte	0x8
 10572 07e8 11       		.uleb128 0x11
 10573 07e9 E6020000 		.4byte	.LASF70
 10574 07ed 07       		.byte	0x7
 10575 07ee 8A01     		.2byte	0x18a
 10576 07f0 7B060000 		.4byte	0x67b
 10577 07f4 18       		.byte	0x18
 10578 07f5 00       		.byte	0
 10579 07f6 10       		.uleb128 0x10
 10580 07f7 0B090000 		.4byte	.LASF122
 10581 07fb 10       		.byte	0x10
 10582 07fc 07       		.byte	0x7
 10583 07fd 9101     		.2byte	0x191
 10584 07ff 45080000 		.4byte	0x845
 10585 0803 11       		.uleb128 0x11
 10586 0804 23080000 		.4byte	.LASF123
 10587 0808 07       		.byte	0x7
 10588 0809 9201     		.2byte	0x192
 10589 080b BD000000 		.4byte	0xbd
 10590 080f 00       		.byte	0
 10591 0810 11       		.uleb128 0x11
 10592 0811 68110000 		.4byte	.LASF124
 10593 0815 07       		.byte	0x7
 10594 0816 9301     		.2byte	0x193
 10595 0818 BD000000 		.4byte	0xbd
 10596 081c 04       		.byte	0x4
 10597 081d 11       		.uleb128 0x11
 10598 081e A8050000 		.4byte	.LASF125
 10599 0822 07       		.byte	0x7
 10600 0823 9401     		.2byte	0x194
 10601 0825 BD000000 		.4byte	0xbd
 10602 0829 08       		.byte	0x8
 10603 082a 11       		.uleb128 0x11
 10604 082b 12070000 		.4byte	.LASF126
 10605 082f 07       		.byte	0x7
 10606 0830 9501     		.2byte	0x195
 10607 0832 81000000 		.4byte	0x81
 10608 0836 0C       		.byte	0xc
 10609 0837 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 238


 10610 0838 E6020000 		.4byte	.LASF70
 10611 083c 07       		.byte	0x7
 10612 083d 9601     		.2byte	0x196
 10613 083f 2E040000 		.4byte	0x42e
 10614 0843 0D       		.byte	0xd
 10615 0844 00       		.byte	0
 10616 0845 10       		.uleb128 0x10
 10617 0846 430E0000 		.4byte	.LASF127
 10618 084a 10       		.byte	0x10
 10619 084b 07       		.byte	0x7
 10620 084c 9D01     		.2byte	0x19d
 10621 084e 87080000 		.4byte	0x887
 10622 0852 11       		.uleb128 0x11
 10623 0853 25070000 		.4byte	.LASF128
 10624 0857 07       		.byte	0x7
 10625 0858 9E01     		.2byte	0x19e
 10626 085a 8D000000 		.4byte	0x8d
 10627 085e 00       		.byte	0
 10628 085f 11       		.uleb128 0x11
 10629 0860 CA0D0000 		.4byte	.LASF129
 10630 0864 07       		.byte	0x7
 10631 0865 9F01     		.2byte	0x19f
 10632 0867 B1000000 		.4byte	0xb1
 10633 086b 02       		.byte	0x2
 10634 086c 11       		.uleb128 0x11
 10635 086d 9D070000 		.4byte	.LASF130
 10636 0871 07       		.byte	0x7
 10637 0872 A001     		.2byte	0x1a0
 10638 0874 DA060000 		.4byte	0x6da
 10639 0878 04       		.byte	0x4
 10640 0879 11       		.uleb128 0x11
 10641 087a E6020000 		.4byte	.LASF70
 10642 087e 07       		.byte	0x7
 10643 087f A101     		.2byte	0x1a1
 10644 0881 7B060000 		.4byte	0x67b
 10645 0885 08       		.byte	0x8
 10646 0886 00       		.byte	0
 10647 0887 10       		.uleb128 0x10
 10648 0888 37010000 		.4byte	.LASF131
 10649 088c 10       		.byte	0x10
 10650 088d 07       		.byte	0x7
 10651 088e A801     		.2byte	0x1a8
 10652 0890 BC080000 		.4byte	0x8bc
 10653 0894 11       		.uleb128 0x11
 10654 0895 180D0000 		.4byte	.LASF132
 10655 0899 07       		.byte	0x7
 10656 089a A901     		.2byte	0x1a9
 10657 089c 81000000 		.4byte	0x81
 10658 08a0 00       		.byte	0
 10659 08a1 11       		.uleb128 0x11
 10660 08a2 090A0000 		.4byte	.LASF133
 10661 08a6 07       		.byte	0x7
 10662 08a7 AA01     		.2byte	0x1aa
 10663 08a9 81000000 		.4byte	0x81
 10664 08ad 01       		.byte	0x1
 10665 08ae 11       		.uleb128 0x11
 10666 08af E6020000 		.4byte	.LASF70
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 239


 10667 08b3 07       		.byte	0x7
 10668 08b4 AB01     		.2byte	0x1ab
 10669 08b6 BC080000 		.4byte	0x8bc
 10670 08ba 02       		.byte	0x2
 10671 08bb 00       		.byte	0
 10672 08bc 07       		.uleb128 0x7
 10673 08bd 81000000 		.4byte	0x81
 10674 08c1 CC080000 		.4byte	0x8cc
 10675 08c5 08       		.uleb128 0x8
 10676 08c6 0E010000 		.4byte	0x10e
 10677 08ca 0D       		.byte	0xd
 10678 08cb 00       		.byte	0
 10679 08cc 10       		.uleb128 0x10
 10680 08cd 24090000 		.4byte	.LASF134
 10681 08d1 10       		.byte	0x10
 10682 08d2 07       		.byte	0x7
 10683 08d3 B201     		.2byte	0x1b2
 10684 08d5 0E090000 		.4byte	0x90e
 10685 08d9 11       		.uleb128 0x11
 10686 08da 3B100000 		.4byte	.LASF135
 10687 08de 07       		.byte	0x7
 10688 08df B301     		.2byte	0x1b3
 10689 08e1 BD000000 		.4byte	0xbd
 10690 08e5 00       		.byte	0
 10691 08e6 11       		.uleb128 0x11
 10692 08e7 FD060000 		.4byte	.LASF136
 10693 08eb 07       		.byte	0x7
 10694 08ec B401     		.2byte	0x1b4
 10695 08ee D5000000 		.4byte	0xd5
 10696 08f2 04       		.byte	0x4
 10697 08f3 11       		.uleb128 0x11
 10698 08f4 D00C0000 		.4byte	.LASF137
 10699 08f8 07       		.byte	0x7
 10700 08f9 B501     		.2byte	0x1b5
 10701 08fb D5000000 		.4byte	0xd5
 10702 08ff 08       		.byte	0x8
 10703 0900 11       		.uleb128 0x11
 10704 0901 E6020000 		.4byte	.LASF70
 10705 0905 07       		.byte	0x7
 10706 0906 B601     		.2byte	0x1b6
 10707 0908 0E090000 		.4byte	0x90e
 10708 090c 0C       		.byte	0xc
 10709 090d 00       		.byte	0
 10710 090e 07       		.uleb128 0x7
 10711 090f 81000000 		.4byte	0x81
 10712 0913 1E090000 		.4byte	0x91e
 10713 0917 08       		.uleb128 0x8
 10714 0918 0E010000 		.4byte	0x10e
 10715 091c 03       		.byte	0x3
 10716 091d 00       		.byte	0
 10717 091e 10       		.uleb128 0x10
 10718 091f C1010000 		.4byte	.LASF138
 10719 0923 12       		.byte	0x12
 10720 0924 07       		.byte	0x7
 10721 0925 BD01     		.2byte	0x1bd
 10722 0927 60090000 		.4byte	0x960
 10723 092b 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 240


 10724 092c 51110000 		.4byte	.LASF139
 10725 0930 07       		.byte	0x7
 10726 0931 BE01     		.2byte	0x1be
 10727 0933 81000000 		.4byte	0x81
 10728 0937 00       		.byte	0
 10729 0938 11       		.uleb128 0x11
 10730 0939 F00F0000 		.4byte	.LASF140
 10731 093d 07       		.byte	0x7
 10732 093e BF01     		.2byte	0x1bf
 10733 0940 DA060000 		.4byte	0x6da
 10734 0944 02       		.byte	0x2
 10735 0945 11       		.uleb128 0x11
 10736 0946 1A000000 		.4byte	.LASF141
 10737 094a 07       		.byte	0x7
 10738 094b C001     		.2byte	0x1c0
 10739 094d 81000000 		.4byte	0x81
 10740 0951 06       		.byte	0x6
 10741 0952 11       		.uleb128 0x11
 10742 0953 E6020000 		.4byte	.LASF70
 10743 0957 07       		.byte	0x7
 10744 0958 C101     		.2byte	0x1c1
 10745 095a 60090000 		.4byte	0x960
 10746 095e 07       		.byte	0x7
 10747 095f 00       		.byte	0
 10748 0960 07       		.uleb128 0x7
 10749 0961 81000000 		.4byte	0x81
 10750 0965 70090000 		.4byte	0x970
 10751 0969 08       		.uleb128 0x8
 10752 096a 0E010000 		.4byte	0x10e
 10753 096e 09       		.byte	0x9
 10754 096f 00       		.byte	0
 10755 0970 13       		.uleb128 0x13
 10756 0971 56100000 		.4byte	.LASF142
 10757 0975 F402     		.2byte	0x2f4
 10758 0977 07       		.byte	0x7
 10759 0978 CA01     		.2byte	0x1ca
 10760 097a 550A0000 		.4byte	0xa55
 10761 097e 11       		.uleb128 0x11
 10762 097f 6C0A0000 		.4byte	.LASF143
 10763 0983 07       		.byte	0x7
 10764 0984 CC01     		.2byte	0x1cc
 10765 0986 81000000 		.4byte	0x81
 10766 098a 00       		.byte	0
 10767 098b 11       		.uleb128 0x11
 10768 098c E6020000 		.4byte	.LASF70
 10769 0990 07       		.byte	0x7
 10770 0991 CD01     		.2byte	0x1cd
 10771 0993 550A0000 		.4byte	0xa55
 10772 0997 01       		.byte	0x1
 10773 0998 12       		.uleb128 0x12
 10774 0999 636E7400 		.ascii	"cnt\000"
 10775 099d 07       		.byte	0x7
 10776 099e CE01     		.2byte	0x1ce
 10777 09a0 06030000 		.4byte	0x306
 10778 09a4 10       		.byte	0x10
 10779 09a5 11       		.uleb128 0x11
 10780 09a6 81020000 		.4byte	.LASF144
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 241


 10781 09aa 07       		.byte	0x7
 10782 09ab CF01     		.2byte	0x1cf
 10783 09ad 650A0000 		.4byte	0xa65
 10784 09b1 60       		.byte	0x60
 10785 09b2 12       		.uleb128 0x12
 10786 09b3 64657600 		.ascii	"dev\000"
 10787 09b7 07       		.byte	0x7
 10788 09b8 D001     		.2byte	0x1d0
 10789 09ba 9F030000 		.4byte	0x39f
 10790 09be A0       		.byte	0xa0
 10791 09bf 11       		.uleb128 0x11
 10792 09c0 8B0E0000 		.4byte	.LASF145
 10793 09c4 07       		.byte	0x7
 10794 09c5 D101     		.2byte	0x1d1
 10795 09c7 750A0000 		.4byte	0xa75
 10796 09cb B0       		.byte	0xb0
 10797 09cc 14       		.uleb128 0x14
 10798 09cd 656E6300 		.ascii	"enc\000"
 10799 09d1 07       		.byte	0x7
 10800 09d2 D201     		.2byte	0x1d2
 10801 09d4 850A0000 		.4byte	0xa85
 10802 09d8 9001     		.2byte	0x190
 10803 09da 14       		.uleb128 0x14
 10804 09db 656D6700 		.ascii	"emg\000"
 10805 09df 07       		.byte	0x7
 10806 09e0 D301     		.2byte	0x1d3
 10807 09e2 8B060000 		.4byte	0x68b
 10808 09e6 F001     		.2byte	0x1f0
 10809 09e8 14       		.uleb128 0x14
 10810 09e9 696D7500 		.ascii	"imu\000"
 10811 09ed 07       		.byte	0x7
 10812 09ee D401     		.2byte	0x1d4
 10813 09f0 FA060000 		.4byte	0x6fa
 10814 09f4 0002     		.2byte	0x200
 10815 09f6 14       		.uleb128 0x14
 10816 09f7 65787000 		.ascii	"exp\000"
 10817 09fb 07       		.byte	0x7
 10818 09fc D501     		.2byte	0x1d5
 10819 09fe 52070000 		.4byte	0x752
 10820 0a02 2002     		.2byte	0x220
 10821 0a04 15       		.uleb128 0x15
 10822 0a05 69000000 		.4byte	.LASF146
 10823 0a09 07       		.byte	0x7
 10824 0a0a D601     		.2byte	0x1d6
 10825 0a0c 950A0000 		.4byte	0xa95
 10826 0a10 4002     		.2byte	0x240
 10827 0a12 14       		.uleb128 0x14
 10828 0a13 534800   		.ascii	"SH\000"
 10829 0a16 07       		.byte	0x7
 10830 0a17 D801     		.2byte	0x1d8
 10831 0a19 F6070000 		.4byte	0x7f6
 10832 0a1d A002     		.2byte	0x2a0
 10833 0a1f 15       		.uleb128 0x15
 10834 0a20 A2000000 		.4byte	.LASF147
 10835 0a24 07       		.byte	0x7
 10836 0a25 D901     		.2byte	0x1d9
 10837 0a27 45080000 		.4byte	0x845
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 242


 10838 0a2b B002     		.2byte	0x2b0
 10839 0a2d 14       		.uleb128 0x14
 10840 0a2e 4D5300   		.ascii	"MS\000"
 10841 0a31 07       		.byte	0x7
 10842 0a32 DA01     		.2byte	0x1da
 10843 0a34 87080000 		.4byte	0x887
 10844 0a38 C002     		.2byte	0x2c0
 10845 0a3a 14       		.uleb128 0x14
 10846 0a3b 464200   		.ascii	"FB\000"
 10847 0a3e 07       		.byte	0x7
 10848 0a3f DB01     		.2byte	0x1db
 10849 0a41 CC080000 		.4byte	0x8cc
 10850 0a45 D002     		.2byte	0x2d0
 10851 0a47 14       		.uleb128 0x14
 10852 0a48 575200   		.ascii	"WR\000"
 10853 0a4b 07       		.byte	0x7
 10854 0a4c DC01     		.2byte	0x1dc
 10855 0a4e 1E090000 		.4byte	0x91e
 10856 0a52 E002     		.2byte	0x2e0
 10857 0a54 00       		.byte	0
 10858 0a55 07       		.uleb128 0x7
 10859 0a56 81000000 		.4byte	0x81
 10860 0a5a 650A0000 		.4byte	0xa65
 10861 0a5e 08       		.uleb128 0x8
 10862 0a5f 0E010000 		.4byte	0x10e
 10863 0a63 0E       		.byte	0xe
 10864 0a64 00       		.byte	0
 10865 0a65 07       		.uleb128 0x7
 10866 0a66 81000000 		.4byte	0x81
 10867 0a6a 750A0000 		.4byte	0xa75
 10868 0a6e 08       		.uleb128 0x8
 10869 0a6f 0E010000 		.4byte	0x10e
 10870 0a73 3F       		.byte	0x3f
 10871 0a74 00       		.byte	0
 10872 0a75 07       		.uleb128 0x7
 10873 0a76 3E040000 		.4byte	0x43e
 10874 0a7a 850A0000 		.4byte	0xa85
 10875 0a7e 08       		.uleb128 0x8
 10876 0a7f 0E010000 		.4byte	0x10e
 10877 0a83 01       		.byte	0x1
 10878 0a84 00       		.byte	0
 10879 0a85 07       		.uleb128 0x7
 10880 0a86 D8050000 		.4byte	0x5d8
 10881 0a8a 950A0000 		.4byte	0xa95
 10882 0a8e 08       		.uleb128 0x8
 10883 0a8f 0E010000 		.4byte	0x10e
 10884 0a93 01       		.byte	0x1
 10885 0a94 00       		.byte	0
 10886 0a95 07       		.uleb128 0x7
 10887 0a96 C1070000 		.4byte	0x7c1
 10888 0a9a A50A0000 		.4byte	0xaa5
 10889 0a9e 08       		.uleb128 0x8
 10890 0a9f 0E010000 		.4byte	0x10e
 10891 0aa3 02       		.byte	0x2
 10892 0aa4 00       		.byte	0
 10893 0aa5 10       		.uleb128 0x10
 10894 0aa6 3A0C0000 		.4byte	.LASF148
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 243


 10895 0aaa 28       		.byte	0x28
 10896 0aab 07       		.byte	0x7
 10897 0aac E701     		.2byte	0x1e7
 10898 0aae 010B0000 		.4byte	0xb01
 10899 0ab2 11       		.uleb128 0x11
 10900 0ab3 DC040000 		.4byte	.LASF149
 10901 0ab7 07       		.byte	0x7
 10902 0ab8 E801     		.2byte	0x1e8
 10903 0aba 81000000 		.4byte	0x81
 10904 0abe 00       		.byte	0
 10905 0abf 11       		.uleb128 0x11
 10906 0ac0 F3020000 		.4byte	.LASF150
 10907 0ac4 07       		.byte	0x7
 10908 0ac5 E901     		.2byte	0x1e9
 10909 0ac7 010B0000 		.4byte	0xb01
 10910 0acb 02       		.byte	0x2
 10911 0acc 11       		.uleb128 0x11
 10912 0acd 900B0000 		.4byte	.LASF151
 10913 0ad1 07       		.byte	0x7
 10914 0ad2 EA01     		.2byte	0x1ea
 10915 0ad4 010B0000 		.4byte	0xb01
 10916 0ad8 08       		.byte	0x8
 10917 0ad9 11       		.uleb128 0x11
 10918 0ada 460C0000 		.4byte	.LASF152
 10919 0ade 07       		.byte	0x7
 10920 0adf EB01     		.2byte	0x1eb
 10921 0ae1 010B0000 		.4byte	0xb01
 10922 0ae5 0E       		.byte	0xe
 10923 0ae6 11       		.uleb128 0x11
 10924 0ae7 18080000 		.4byte	.LASF153
 10925 0aeb 07       		.byte	0x7
 10926 0aec EC01     		.2byte	0x1ec
 10927 0aee 110B0000 		.4byte	0xb11
 10928 0af2 14       		.byte	0x14
 10929 0af3 11       		.uleb128 0x11
 10930 0af4 AE010000 		.4byte	.LASF154
 10931 0af8 07       		.byte	0x7
 10932 0af9 ED01     		.2byte	0x1ed
 10933 0afb B1000000 		.4byte	0xb1
 10934 0aff 24       		.byte	0x24
 10935 0b00 00       		.byte	0
 10936 0b01 07       		.uleb128 0x7
 10937 0b02 B1000000 		.4byte	0xb1
 10938 0b06 110B0000 		.4byte	0xb11
 10939 0b0a 08       		.uleb128 0x8
 10940 0b0b 0E010000 		.4byte	0x10e
 10941 0b0f 02       		.byte	0x2
 10942 0b10 00       		.byte	0
 10943 0b11 07       		.uleb128 0x7
 10944 0b12 D5000000 		.4byte	0xd5
 10945 0b16 210B0000 		.4byte	0xb21
 10946 0b1a 08       		.uleb128 0x8
 10947 0b1b 0E010000 		.4byte	0x10e
 10948 0b1f 03       		.byte	0x3
 10949 0b20 00       		.byte	0
 10950 0b21 10       		.uleb128 0x10
 10951 0b22 73110000 		.4byte	.LASF155
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 244


 10952 0b26 08       		.byte	0x8
 10953 0b27 07       		.byte	0x7
 10954 0b28 F401     		.2byte	0x1f4
 10955 0b2a 490B0000 		.4byte	0xb49
 10956 0b2e 11       		.uleb128 0x11
 10957 0b2f 94050000 		.4byte	.LASF156
 10958 0b33 07       		.byte	0x7
 10959 0b34 F501     		.2byte	0x1f5
 10960 0b36 BD000000 		.4byte	0xbd
 10961 0b3a 00       		.byte	0
 10962 0b3b 11       		.uleb128 0x11
 10963 0b3c F4010000 		.4byte	.LASF157
 10964 0b40 07       		.byte	0x7
 10965 0b41 F601     		.2byte	0x1f6
 10966 0b43 BD000000 		.4byte	0xbd
 10967 0b47 04       		.byte	0x4
 10968 0b48 00       		.byte	0
 10969 0b49 10       		.uleb128 0x10
 10970 0b4a AD030000 		.4byte	.LASF158
 10971 0b4e 06       		.byte	0x6
 10972 0b4f 07       		.byte	0x7
 10973 0b50 FD01     		.2byte	0x1fd
 10974 0b52 8B0B0000 		.4byte	0xb8b
 10975 0b56 11       		.uleb128 0x11
 10976 0b57 68070000 		.4byte	.LASF159
 10977 0b5b 07       		.byte	0x7
 10978 0b5c FE01     		.2byte	0x1fe
 10979 0b5e 81000000 		.4byte	0x81
 10980 0b62 00       		.byte	0
 10981 0b63 11       		.uleb128 0x11
 10982 0b64 8F110000 		.4byte	.LASF160
 10983 0b68 07       		.byte	0x7
 10984 0b69 FF01     		.2byte	0x1ff
 10985 0b6b 81000000 		.4byte	0x81
 10986 0b6f 01       		.byte	0x1
 10987 0b70 11       		.uleb128 0x11
 10988 0b71 21060000 		.4byte	.LASF161
 10989 0b75 07       		.byte	0x7
 10990 0b76 0002     		.2byte	0x200
 10991 0b78 B1000000 		.4byte	0xb1
 10992 0b7c 02       		.byte	0x2
 10993 0b7d 11       		.uleb128 0x11
 10994 0b7e DC090000 		.4byte	.LASF162
 10995 0b82 07       		.byte	0x7
 10996 0b83 0102     		.2byte	0x201
 10997 0b85 B1000000 		.4byte	0xb1
 10998 0b89 04       		.byte	0x4
 10999 0b8a 00       		.byte	0
 11000 0b8b 16       		.uleb128 0x16
 11001 0b8c 01       		.byte	0x1
 11002 0b8d 2C000000 		.4byte	0x2c
 11003 0b91 07       		.byte	0x7
 11004 0b92 0502     		.2byte	0x205
 11005 0b94 BD0B0000 		.4byte	0xbbd
 11006 0b98 0A       		.uleb128 0xa
 11007 0b99 B1050000 		.4byte	.LASF163
 11008 0b9d 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 245


 11009 0b9e 0A       		.uleb128 0xa
 11010 0b9f 120D0000 		.4byte	.LASF164
 11011 0ba3 01       		.byte	0x1
 11012 0ba4 0A       		.uleb128 0xa
 11013 0ba5 290B0000 		.4byte	.LASF165
 11014 0ba9 02       		.byte	0x2
 11015 0baa 0A       		.uleb128 0xa
 11016 0bab 3D020000 		.4byte	.LASF166
 11017 0baf 03       		.byte	0x3
 11018 0bb0 0A       		.uleb128 0xa
 11019 0bb1 120A0000 		.4byte	.LASF167
 11020 0bb5 04       		.byte	0x4
 11021 0bb6 0A       		.uleb128 0xa
 11022 0bb7 B00C0000 		.4byte	.LASF168
 11023 0bbb 05       		.byte	0x5
 11024 0bbc 00       		.byte	0
 11025 0bbd 05       		.uleb128 0x5
 11026 0bbe 46050000 		.4byte	.LASF169
 11027 0bc2 07       		.byte	0x7
 11028 0bc3 0D02     		.2byte	0x20d
 11029 0bc5 8B0B0000 		.4byte	0xb8b
 11030 0bc9 16       		.uleb128 0x16
 11031 0bca 01       		.byte	0x1
 11032 0bcb 2C000000 		.4byte	0x2c
 11033 0bcf 07       		.byte	0x7
 11034 0bd0 0F02     		.2byte	0x20f
 11035 0bd2 F50B0000 		.4byte	0xbf5
 11036 0bd6 0A       		.uleb128 0xa
 11037 0bd7 A1010000 		.4byte	.LASF170
 11038 0bdb 00       		.byte	0
 11039 0bdc 0A       		.uleb128 0xa
 11040 0bdd 90070000 		.4byte	.LASF171
 11041 0be1 01       		.byte	0x1
 11042 0be2 0A       		.uleb128 0xa
 11043 0be3 31080000 		.4byte	.LASF172
 11044 0be7 02       		.byte	0x2
 11045 0be8 0A       		.uleb128 0xa
 11046 0be9 5A030000 		.4byte	.LASF173
 11047 0bed 03       		.byte	0x3
 11048 0bee 0A       		.uleb128 0xa
 11049 0bef 4C110000 		.4byte	.LASF174
 11050 0bf3 04       		.byte	0x4
 11051 0bf4 00       		.byte	0
 11052 0bf5 05       		.uleb128 0x5
 11053 0bf6 FC0D0000 		.4byte	.LASF175
 11054 0bfa 07       		.byte	0x7
 11055 0bfb 1602     		.2byte	0x216
 11056 0bfd C90B0000 		.4byte	0xbc9
 11057 0c01 17       		.uleb128 0x17
 11058 0c02 6F050000 		.4byte	.LASF176
 11059 0c06 01       		.byte	0x1
 11060 0c07 62       		.byte	0x62
 11061 0c08 00000000 		.4byte	.LFB64
 11062 0c0c 18000000 		.4byte	.LFE64-.LFB64
 11063 0c10 01       		.uleb128 0x1
 11064 0c11 9C       		.byte	0x9c
 11065 0c12 17       		.uleb128 0x17
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 246


 11066 0c13 D30F0000 		.4byte	.LASF177
 11067 0c17 01       		.byte	0x1
 11068 0c18 6D       		.byte	0x6d
 11069 0c19 00000000 		.4byte	.LFB65
 11070 0c1d 20000000 		.4byte	.LFE65-.LFB65
 11071 0c21 01       		.uleb128 0x1
 11072 0c22 9C       		.byte	0x9c
 11073 0c23 18       		.uleb128 0x18
 11074 0c24 90090000 		.4byte	.LASF208
 11075 0c28 01       		.byte	0x1
 11076 0c29 86       		.byte	0x86
 11077 0c2a 00000000 		.4byte	.LFB66
 11078 0c2e F4010000 		.4byte	.LFE66-.LFB66
 11079 0c32 01       		.uleb128 0x1
 11080 0c33 9C       		.byte	0x9c
 11081 0c34 B80C0000 		.4byte	0xcb8
 11082 0c38 19       		.uleb128 0x19
 11083 0c39 CF000000 		.4byte	.LASF178
 11084 0c3d 01       		.byte	0x1
 11085 0c3e 8B       		.byte	0x8b
 11086 0c3f 81000000 		.4byte	0x81
 11087 0c43 05       		.uleb128 0x5
 11088 0c44 03       		.byte	0x3
 11089 0c45 00000000 		.4byte	state.10433
 11090 0c49 19       		.uleb128 0x19
 11091 0c4a 46060000 		.4byte	.LASF179
 11092 0c4e 01       		.byte	0x1
 11093 0c4f 8E       		.byte	0x8e
 11094 0c50 81000000 		.4byte	0x81
 11095 0c54 05       		.uleb128 0x5
 11096 0c55 03       		.byte	0x3
 11097 0c56 08000000 		.4byte	data_packet_index.10434
 11098 0c5a 19       		.uleb128 0x19
 11099 0c5b 790C0000 		.4byte	.LASF180
 11100 0c5f 01       		.byte	0x1
 11101 0c60 8F       		.byte	0x8f
 11102 0c61 81000000 		.4byte	0x81
 11103 0c65 05       		.uleb128 0x5
 11104 0c66 03       		.byte	0x3
 11105 0c67 07000000 		.4byte	data_packet_length.10435
 11106 0c6b 19       		.uleb128 0x19
 11107 0c6c 58060000 		.4byte	.LASF181
 11108 0c70 01       		.byte	0x1
 11109 0c71 90       		.byte	0x90
 11110 0c72 F6020000 		.4byte	0x2f6
 11111 0c76 05       		.uleb128 0x5
 11112 0c77 03       		.byte	0x3
 11113 0c78 0C000000 		.4byte	data_packet_buffer.10436
 11114 0c7c 19       		.uleb128 0x19
 11115 0c7d AE0A0000 		.4byte	.LASF182
 11116 0c81 01       		.byte	0x1
 11117 0c82 91       		.byte	0x91
 11118 0c83 2E040000 		.4byte	0x42e
 11119 0c87 05       		.uleb128 0x5
 11120 0c88 03       		.byte	0x3
 11121 0c89 04000000 		.4byte	rx_queue.10437
 11122 0c8d 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 247


 11123 0c8e 66010000 		.4byte	.LASF183
 11124 0c92 01       		.byte	0x1
 11125 0c93 94       		.byte	0x94
 11126 0c94 81000000 		.4byte	0x81
 11127 0c98 02       		.uleb128 0x2
 11128 0c99 91       		.byte	0x91
 11129 0c9a 75       		.sleb128 -11
 11130 0c9b 19       		.uleb128 0x19
 11131 0c9c 0B060000 		.4byte	.LASF184
 11132 0ca0 01       		.byte	0x1
 11133 0ca1 95       		.byte	0x95
 11134 0ca2 81000000 		.4byte	0x81
 11135 0ca6 02       		.uleb128 0x2
 11136 0ca7 91       		.byte	0x91
 11137 0ca8 77       		.sleb128 -9
 11138 0ca9 19       		.uleb128 0x19
 11139 0caa 45070000 		.4byte	.LASF185
 11140 0cae 01       		.byte	0x1
 11141 0caf 96       		.byte	0x96
 11142 0cb0 81000000 		.4byte	0x81
 11143 0cb4 02       		.uleb128 0x2
 11144 0cb5 91       		.byte	0x91
 11145 0cb6 76       		.sleb128 -10
 11146 0cb7 00       		.byte	0
 11147 0cb8 1A       		.uleb128 0x1a
 11148 0cb9 AB0E0000 		.4byte	.LASF191
 11149 0cbd 01       		.byte	0x1
 11150 0cbe 0C01     		.2byte	0x10c
 11151 0cc0 00000000 		.4byte	.LFB67
 11152 0cc4 2C060000 		.4byte	.LFE67-.LFB67
 11153 0cc8 01       		.uleb128 0x1
 11154 0cc9 9C       		.byte	0x9c
 11155 0cca 380D0000 		.4byte	0xd38
 11156 0cce 1B       		.uleb128 0x1b
 11157 0ccf 82060000 		.4byte	.LASF186
 11158 0cd3 01       		.byte	0x1
 11159 0cd4 0E01     		.2byte	0x10e
 11160 0cd6 8D000000 		.4byte	0x8d
 11161 0cda 05       		.uleb128 0x5
 11162 0cdb 03       		.byte	0x3
 11163 0cdc 00000000 		.4byte	counter_calibration.10453
 11164 0ce0 1B       		.uleb128 0x1b
 11165 0ce1 E40B0000 		.4byte	.LASF187
 11166 0ce5 01       		.byte	0x1
 11167 0ce6 0F01     		.2byte	0x10f
 11168 0ce8 8D000000 		.4byte	0x8d
 11169 0cec 05       		.uleb128 0x5
 11170 0ced 03       		.byte	0x3
 11171 0cee 02000000 		.4byte	counter_tension_func.10454
 11172 0cf2 1B       		.uleb128 0x1b
 11173 0cf3 7D010000 		.4byte	.LASF188
 11174 0cf7 01       		.byte	0x1
 11175 0cf8 1001     		.2byte	0x110
 11176 0cfa 380D0000 		.4byte	0xd38
 11177 0cfe 03       		.uleb128 0x3
 11178 0cff 91       		.byte	0x91
 11179 0d00 A86C     		.sleb128 -2520
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 248


 11180 0d02 1B       		.uleb128 0x1b
 11181 0d03 C70B0000 		.4byte	.LASF189
 11182 0d07 01       		.byte	0x1
 11183 0d08 1201     		.2byte	0x112
 11184 0d0a 81000000 		.4byte	0x81
 11185 0d0e 02       		.uleb128 0x2
 11186 0d0f 91       		.byte	0x91
 11187 0d10 6E       		.sleb128 -18
 11188 0d11 1B       		.uleb128 0x1b
 11189 0d12 4D090000 		.4byte	.LASF190
 11190 0d16 01       		.byte	0x1
 11191 0d17 1301     		.2byte	0x113
 11192 0d19 81000000 		.4byte	0x81
 11193 0d1d 02       		.uleb128 0x2
 11194 0d1e 91       		.byte	0x91
 11195 0d1f 6D       		.sleb128 -19
 11196 0d20 1C       		.uleb128 0x1c
 11197 0d21 38010000 		.4byte	.LBB2
 11198 0d25 B8000000 		.4byte	.LBE2-.LBB2
 11199 0d29 1D       		.uleb128 0x1d
 11200 0d2a 6900     		.ascii	"i\000"
 11201 0d2c 01       		.byte	0x1
 11202 0d2d 4D01     		.2byte	0x14d
 11203 0d2f 81000000 		.4byte	0x81
 11204 0d33 02       		.uleb128 0x2
 11205 0d34 91       		.byte	0x91
 11206 0d35 6F       		.sleb128 -17
 11207 0d36 00       		.byte	0
 11208 0d37 00       		.byte	0
 11209 0d38 07       		.uleb128 0x7
 11210 0d39 E3000000 		.4byte	0xe3
 11211 0d3d 490D0000 		.4byte	0xd49
 11212 0d41 1E       		.uleb128 0x1e
 11213 0d42 0E010000 		.4byte	0x10e
 11214 0d46 C309     		.2byte	0x9c3
 11215 0d48 00       		.byte	0
 11216 0d49 1A       		.uleb128 0x1a
 11217 0d4a BE0E0000 		.4byte	.LASF192
 11218 0d4e 01       		.byte	0x1
 11219 0d4f 6502     		.2byte	0x265
 11220 0d51 00000000 		.4byte	.LFB68
 11221 0d55 CC050000 		.4byte	.LFE68-.LFB68
 11222 0d59 01       		.uleb128 0x1
 11223 0d5a 9C       		.byte	0x9c
 11224 0d5b FF0D0000 		.4byte	0xdff
 11225 0d5f 1F       		.uleb128 0x1f
 11226 0d60 8F020000 		.4byte	.LASF193
 11227 0d64 01       		.byte	0x1
 11228 0d65 6502     		.2byte	0x265
 11229 0d67 81000000 		.4byte	0x81
 11230 0d6b 02       		.uleb128 0x2
 11231 0d6c 91       		.byte	0x91
 11232 0d6d 5F       		.sleb128 -33
 11233 0d6e 1F       		.uleb128 0x1f
 11234 0d6f 6B060000 		.4byte	.LASF194
 11235 0d73 01       		.byte	0x1
 11236 0d74 6502     		.2byte	0x265
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 249


 11237 0d76 FF0D0000 		.4byte	0xdff
 11238 0d7a 02       		.uleb128 0x2
 11239 0d7b 91       		.byte	0x91
 11240 0d7c 58       		.sleb128 -40
 11241 0d7d 1F       		.uleb128 0x1f
 11242 0d7e 85100000 		.4byte	.LASF195
 11243 0d82 01       		.byte	0x1
 11244 0d83 6502     		.2byte	0x265
 11245 0d85 FF0D0000 		.4byte	0xdff
 11246 0d89 02       		.uleb128 0x2
 11247 0d8a 91       		.byte	0x91
 11248 0d8b 54       		.sleb128 -44
 11249 0d8c 1B       		.uleb128 0x1b
 11250 0d8d E2040000 		.4byte	.LASF196
 11251 0d91 01       		.byte	0x1
 11252 0d92 6702     		.2byte	0x267
 11253 0d94 BD000000 		.4byte	0xbd
 11254 0d98 02       		.uleb128 0x2
 11255 0d99 91       		.byte	0x91
 11256 0d9a 74       		.sleb128 -12
 11257 0d9b 1B       		.uleb128 0x1b
 11258 0d9c B6030000 		.4byte	.LASF197
 11259 0da0 01       		.byte	0x1
 11260 0da1 6802     		.2byte	0x268
 11261 0da3 BD000000 		.4byte	0xbd
 11262 0da7 02       		.uleb128 0x2
 11263 0da8 91       		.byte	0x91
 11264 0da9 68       		.sleb128 -24
 11265 0daa 1B       		.uleb128 0x1b
 11266 0dab C0030000 		.4byte	.LASF198
 11267 0daf 01       		.byte	0x1
 11268 0db0 6802     		.2byte	0x268
 11269 0db2 BD000000 		.4byte	0xbd
 11270 0db6 02       		.uleb128 0x2
 11271 0db7 91       		.byte	0x91
 11272 0db8 64       		.sleb128 -28
 11273 0db9 1D       		.uleb128 0x1d
 11274 0dba 4D4F5400 		.ascii	"MOT\000"
 11275 0dbe 01       		.byte	0x1
 11276 0dbf 6902     		.2byte	0x269
 11277 0dc1 050E0000 		.4byte	0xe05
 11278 0dc5 02       		.uleb128 0x2
 11279 0dc6 91       		.byte	0x91
 11280 0dc7 70       		.sleb128 -16
 11281 0dc8 1B       		.uleb128 0x1b
 11282 0dc9 50100000 		.4byte	.LASF199
 11283 0dcd 01       		.byte	0x1
 11284 0dce 6A02     		.2byte	0x26a
 11285 0dd0 81000000 		.4byte	0x81
 11286 0dd4 02       		.uleb128 0x2
 11287 0dd5 91       		.byte	0x91
 11288 0dd6 6F       		.sleb128 -17
 11289 0dd7 1B       		.uleb128 0x1b
 11290 0dd8 A20A0000 		.4byte	.LASF200
 11291 0ddc 01       		.byte	0x1
 11292 0ddd 6C02     		.2byte	0x26c
 11293 0ddf EA060000 		.4byte	0x6ea
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 250


 11294 0de3 05       		.uleb128 0x5
 11295 0de4 03       		.byte	0x3
 11296 0de5 8C000000 		.4byte	current_emg.10478
 11297 0de9 20       		.uleb128 0x20
 11298 0dea 00000000 		.4byte	.Ldebug_ranges0+0
 11299 0dee 1B       		.uleb128 0x1b
 11300 0def C5000000 		.4byte	.LASF201
 11301 0df3 01       		.byte	0x1
 11302 0df4 9102     		.2byte	0x291
 11303 0df6 BD000000 		.4byte	0xbd
 11304 0dfa 02       		.uleb128 0x2
 11305 0dfb 91       		.byte	0x91
 11306 0dfc 60       		.sleb128 -32
 11307 0dfd 00       		.byte	0
 11308 0dfe 00       		.byte	0
 11309 0dff 0C       		.uleb128 0xc
 11310 0e00 04       		.byte	0x4
 11311 0e01 A5010000 		.4byte	0x1a5
 11312 0e05 0C       		.uleb128 0xc
 11313 0e06 04       		.byte	0x4
 11314 0e07 3E040000 		.4byte	0x43e
 11315 0e0b 21       		.uleb128 0x21
 11316 0e0c 940F0000 		.4byte	.LASF202
 11317 0e10 01       		.byte	0x1
 11318 0e11 4403     		.2byte	0x344
 11319 0e13 00000000 		.4byte	.LFB69
 11320 0e17 34030000 		.4byte	.LFE69-.LFB69
 11321 0e1b 01       		.uleb128 0x1
 11322 0e1c 9C       		.byte	0x9c
 11323 0e1d 9B0E0000 		.4byte	0xe9b
 11324 0e21 1F       		.uleb128 0x1f
 11325 0e22 8F020000 		.4byte	.LASF193
 11326 0e26 01       		.byte	0x1
 11327 0e27 4403     		.2byte	0x344
 11328 0e29 81000000 		.4byte	0x81
 11329 0e2d 02       		.uleb128 0x2
 11330 0e2e 91       		.byte	0x91
 11331 0e2f 67       		.sleb128 -25
 11332 0e30 1F       		.uleb128 0x1f
 11333 0e31 6B060000 		.4byte	.LASF194
 11334 0e35 01       		.byte	0x1
 11335 0e36 4403     		.2byte	0x344
 11336 0e38 FF0D0000 		.4byte	0xdff
 11337 0e3c 02       		.uleb128 0x2
 11338 0e3d 91       		.byte	0x91
 11339 0e3e 60       		.sleb128 -32
 11340 0e3f 1F       		.uleb128 0x1f
 11341 0e40 85100000 		.4byte	.LASF195
 11342 0e44 01       		.byte	0x1
 11343 0e45 4403     		.2byte	0x344
 11344 0e47 FF0D0000 		.4byte	0xdff
 11345 0e4b 02       		.uleb128 0x2
 11346 0e4c 91       		.byte	0x91
 11347 0e4d 5C       		.sleb128 -36
 11348 0e4e 22       		.uleb128 0x22
 11349 0e4f 18000000 		.4byte	.Ldebug_ranges0+0x18
 11350 0e53 760E0000 		.4byte	0xe76
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 251


 11351 0e57 1B       		.uleb128 0x1b
 11352 0e58 C5000000 		.4byte	.LASF201
 11353 0e5c 01       		.byte	0x1
 11354 0e5d 4B03     		.2byte	0x34b
 11355 0e5f BD000000 		.4byte	0xbd
 11356 0e63 02       		.uleb128 0x2
 11357 0e64 91       		.byte	0x91
 11358 0e65 74       		.sleb128 -12
 11359 0e66 1B       		.uleb128 0x1b
 11360 0e67 CC010000 		.4byte	.LASF203
 11361 0e6b 01       		.byte	0x1
 11362 0e6c 4C03     		.2byte	0x34c
 11363 0e6e BD000000 		.4byte	0xbd
 11364 0e72 02       		.uleb128 0x2
 11365 0e73 91       		.byte	0x91
 11366 0e74 70       		.sleb128 -16
 11367 0e75 00       		.byte	0
 11368 0e76 20       		.uleb128 0x20
 11369 0e77 30000000 		.4byte	.Ldebug_ranges0+0x30
 11370 0e7b 1B       		.uleb128 0x1b
 11371 0e7c E10C0000 		.4byte	.LASF204
 11372 0e80 01       		.byte	0x1
 11373 0e81 7103     		.2byte	0x371
 11374 0e83 BD000000 		.4byte	0xbd
 11375 0e87 02       		.uleb128 0x2
 11376 0e88 91       		.byte	0x91
 11377 0e89 6C       		.sleb128 -20
 11378 0e8a 1B       		.uleb128 0x1b
 11379 0e8b 88090000 		.4byte	.LASF205
 11380 0e8f 01       		.byte	0x1
 11381 0e90 7203     		.2byte	0x372
 11382 0e92 BD000000 		.4byte	0xbd
 11383 0e96 02       		.uleb128 0x2
 11384 0e97 91       		.byte	0x91
 11385 0e98 68       		.sleb128 -24
 11386 0e99 00       		.byte	0
 11387 0e9a 00       		.byte	0
 11388 0e9b 1A       		.uleb128 0x1a
 11389 0e9c B4090000 		.4byte	.LASF206
 11390 0ea0 01       		.byte	0x1
 11391 0ea1 9D03     		.2byte	0x39d
 11392 0ea3 00000000 		.4byte	.LFB70
 11393 0ea7 B0010000 		.4byte	.LFE70-.LFB70
 11394 0eab 01       		.uleb128 0x1
 11395 0eac 9C       		.byte	0x9c
 11396 0ead 0F0F0000 		.4byte	0xf0f
 11397 0eb1 1F       		.uleb128 0x1f
 11398 0eb2 8F020000 		.4byte	.LASF193
 11399 0eb6 01       		.byte	0x1
 11400 0eb7 9D03     		.2byte	0x39d
 11401 0eb9 81000000 		.4byte	0x81
 11402 0ebd 02       		.uleb128 0x2
 11403 0ebe 91       		.byte	0x91
 11404 0ebf 77       		.sleb128 -9
 11405 0ec0 1F       		.uleb128 0x1f
 11406 0ec1 6B060000 		.4byte	.LASF194
 11407 0ec5 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 252


 11408 0ec6 9D03     		.2byte	0x39d
 11409 0ec8 FF0D0000 		.4byte	0xdff
 11410 0ecc 02       		.uleb128 0x2
 11411 0ecd 91       		.byte	0x91
 11412 0ece 70       		.sleb128 -16
 11413 0ecf 1F       		.uleb128 0x1f
 11414 0ed0 85100000 		.4byte	.LASF195
 11415 0ed4 01       		.byte	0x1
 11416 0ed5 9D03     		.2byte	0x39d
 11417 0ed7 FF0D0000 		.4byte	0xdff
 11418 0edb 02       		.uleb128 0x2
 11419 0edc 91       		.byte	0x91
 11420 0edd 6C       		.sleb128 -20
 11421 0ede 1F       		.uleb128 0x1f
 11422 0edf B6030000 		.4byte	.LASF197
 11423 0ee3 01       		.byte	0x1
 11424 0ee4 9E03     		.2byte	0x39e
 11425 0ee6 BD000000 		.4byte	0xbd
 11426 0eea 02       		.uleb128 0x2
 11427 0eeb 91       		.byte	0x91
 11428 0eec 68       		.sleb128 -24
 11429 0eed 1F       		.uleb128 0x1f
 11430 0eee C0030000 		.4byte	.LASF198
 11431 0ef2 01       		.byte	0x1
 11432 0ef3 9E03     		.2byte	0x39e
 11433 0ef5 BD000000 		.4byte	0xbd
 11434 0ef9 02       		.uleb128 0x2
 11435 0efa 91       		.byte	0x91
 11436 0efb 00       		.sleb128 0
 11437 0efc 1B       		.uleb128 0x1b
 11438 0efd 040C0000 		.4byte	.LASF207
 11439 0f01 01       		.byte	0x1
 11440 0f02 A103     		.2byte	0x3a1
 11441 0f04 81000000 		.4byte	0x81
 11442 0f08 05       		.uleb128 0x5
 11443 0f09 03       		.byte	0x3
 11444 0f0a 8E000000 		.4byte	fsm_state.10515
 11445 0f0e 00       		.byte	0
 11446 0f0f 23       		.uleb128 0x23
 11447 0f10 B8050000 		.4byte	.LASF209
 11448 0f14 01       		.byte	0x1
 11449 0f15 D303     		.2byte	0x3d3
 11450 0f17 00000000 		.4byte	.LFB71
 11451 0f1b 08070000 		.4byte	.LFE71-.LFB71
 11452 0f1f 01       		.uleb128 0x1
 11453 0f20 9C       		.byte	0x9c
 11454 0f21 C6100000 		.4byte	0x10c6
 11455 0f25 1B       		.uleb128 0x1b
 11456 0f26 20010000 		.4byte	.LASF210
 11457 0f2a 01       		.byte	0x1
 11458 0f2b D503     		.2byte	0x3d5
 11459 0f2d BD000000 		.4byte	0xbd
 11460 0f31 02       		.uleb128 0x2
 11461 0f32 91       		.byte	0x91
 11462 0f33 74       		.sleb128 -12
 11463 0f34 1B       		.uleb128 0x1b
 11464 0f35 860B0000 		.4byte	.LASF211
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 253


 11465 0f39 01       		.byte	0x1
 11466 0f3a D603     		.2byte	0x3d6
 11467 0f3c BD000000 		.4byte	0xbd
 11468 0f40 03       		.uleb128 0x3
 11469 0f41 91       		.byte	0x91
 11470 0f42 B07F     		.sleb128 -80
 11471 0f44 1B       		.uleb128 0x1b
 11472 0f45 610F0000 		.4byte	.LASF212
 11473 0f49 01       		.byte	0x1
 11474 0f4a D703     		.2byte	0x3d7
 11475 0f4c BD000000 		.4byte	0xbd
 11476 0f50 03       		.uleb128 0x3
 11477 0f51 91       		.byte	0x91
 11478 0f52 AC7F     		.sleb128 -84
 11479 0f54 1B       		.uleb128 0x1b
 11480 0f55 D90A0000 		.4byte	.LASF213
 11481 0f59 01       		.byte	0x1
 11482 0f5a D803     		.2byte	0x3d8
 11483 0f5c BD000000 		.4byte	0xbd
 11484 0f60 02       		.uleb128 0x2
 11485 0f61 91       		.byte	0x91
 11486 0f62 70       		.sleb128 -16
 11487 0f63 1B       		.uleb128 0x1b
 11488 0f64 C70B0000 		.4byte	.LASF189
 11489 0f68 01       		.byte	0x1
 11490 0f69 DA03     		.2byte	0x3da
 11491 0f6b 81000000 		.4byte	0x81
 11492 0f6f 02       		.uleb128 0x2
 11493 0f70 91       		.byte	0x91
 11494 0f71 6F       		.sleb128 -17
 11495 0f72 1B       		.uleb128 0x1b
 11496 0f73 25030000 		.4byte	.LASF214
 11497 0f77 01       		.byte	0x1
 11498 0f78 DC03     		.2byte	0x3dc
 11499 0f7a 050E0000 		.4byte	0xe05
 11500 0f7e 02       		.uleb128 0x2
 11501 0f7f 91       		.byte	0x91
 11502 0f80 68       		.sleb128 -24
 11503 0f81 1B       		.uleb128 0x1b
 11504 0f82 99020000 		.4byte	.LASF215
 11505 0f86 01       		.byte	0x1
 11506 0f87 DD03     		.2byte	0x3dd
 11507 0f89 81000000 		.4byte	0x81
 11508 0f8d 02       		.uleb128 0x2
 11509 0f8e 91       		.byte	0x91
 11510 0f8f 67       		.sleb128 -25
 11511 0f90 1D       		.uleb128 0x1d
 11512 0f91 6B5F7000 		.ascii	"k_p\000"
 11513 0f95 01       		.byte	0x1
 11514 0f96 DF03     		.2byte	0x3df
 11515 0f98 BD000000 		.4byte	0xbd
 11516 0f9c 02       		.uleb128 0x2
 11517 0f9d 91       		.byte	0x91
 11518 0f9e 60       		.sleb128 -32
 11519 0f9f 1D       		.uleb128 0x1d
 11520 0fa0 6B5F6900 		.ascii	"k_i\000"
 11521 0fa4 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 254


 11522 0fa5 E003     		.2byte	0x3e0
 11523 0fa7 BD000000 		.4byte	0xbd
 11524 0fab 02       		.uleb128 0x2
 11525 0fac 91       		.byte	0x91
 11526 0fad 5C       		.sleb128 -36
 11527 0fae 1D       		.uleb128 0x1d
 11528 0faf 6B5F6400 		.ascii	"k_d\000"
 11529 0fb3 01       		.byte	0x1
 11530 0fb4 E103     		.2byte	0x3e1
 11531 0fb6 BD000000 		.4byte	0xbd
 11532 0fba 02       		.uleb128 0x2
 11533 0fbb 91       		.byte	0x91
 11534 0fbc 58       		.sleb128 -40
 11535 0fbd 1B       		.uleb128 0x1b
 11536 0fbe 8C0C0000 		.4byte	.LASF72
 11537 0fc2 01       		.byte	0x1
 11538 0fc3 E303     		.2byte	0x3e3
 11539 0fc5 BD000000 		.4byte	0xbd
 11540 0fc9 02       		.uleb128 0x2
 11541 0fca 91       		.byte	0x91
 11542 0fcb 54       		.sleb128 -44
 11543 0fcc 1B       		.uleb128 0x1b
 11544 0fcd 58050000 		.4byte	.LASF73
 11545 0fd1 01       		.byte	0x1
 11546 0fd2 E403     		.2byte	0x3e4
 11547 0fd4 BD000000 		.4byte	0xbd
 11548 0fd8 02       		.uleb128 0x2
 11549 0fd9 91       		.byte	0x91
 11550 0fda 50       		.sleb128 -48
 11551 0fdb 1B       		.uleb128 0x1b
 11552 0fdc 40050000 		.4byte	.LASF74
 11553 0fe0 01       		.byte	0x1
 11554 0fe1 E503     		.2byte	0x3e5
 11555 0fe3 BD000000 		.4byte	0xbd
 11556 0fe7 02       		.uleb128 0x2
 11557 0fe8 91       		.byte	0x91
 11558 0fe9 4C       		.sleb128 -52
 11559 0fea 1B       		.uleb128 0x1b
 11560 0feb 3A0F0000 		.4byte	.LASF75
 11561 0fef 01       		.byte	0x1
 11562 0ff0 E703     		.2byte	0x3e7
 11563 0ff2 BD000000 		.4byte	0xbd
 11564 0ff6 02       		.uleb128 0x2
 11565 0ff7 91       		.byte	0x91
 11566 0ff8 48       		.sleb128 -56
 11567 0ff9 1B       		.uleb128 0x1b
 11568 0ffa F4050000 		.4byte	.LASF76
 11569 0ffe 01       		.byte	0x1
 11570 0fff E803     		.2byte	0x3e8
 11571 1001 BD000000 		.4byte	0xbd
 11572 1005 02       		.uleb128 0x2
 11573 1006 91       		.byte	0x91
 11574 1007 44       		.sleb128 -60
 11575 1008 1B       		.uleb128 0x1b
 11576 1009 6D0E0000 		.4byte	.LASF77
 11577 100d 01       		.byte	0x1
 11578 100e E903     		.2byte	0x3e9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 255


 11579 1010 BD000000 		.4byte	0xbd
 11580 1014 02       		.uleb128 0x2
 11581 1015 91       		.byte	0x91
 11582 1016 40       		.sleb128 -64
 11583 1017 1B       		.uleb128 0x1b
 11584 1018 02060000 		.4byte	.LASF78
 11585 101c 01       		.byte	0x1
 11586 101d EB03     		.2byte	0x3eb
 11587 101f BD000000 		.4byte	0xbd
 11588 1023 03       		.uleb128 0x3
 11589 1024 91       		.byte	0x91
 11590 1025 BC7F     		.sleb128 -68
 11591 1027 1B       		.uleb128 0x1b
 11592 1028 3C070000 		.4byte	.LASF79
 11593 102c 01       		.byte	0x1
 11594 102d EC03     		.2byte	0x3ec
 11595 102f BD000000 		.4byte	0xbd
 11596 1033 03       		.uleb128 0x3
 11597 1034 91       		.byte	0x91
 11598 1035 B87F     		.sleb128 -72
 11599 1037 1B       		.uleb128 0x1b
 11600 1038 86110000 		.4byte	.LASF80
 11601 103c 01       		.byte	0x1
 11602 103d ED03     		.2byte	0x3ed
 11603 103f BD000000 		.4byte	0xbd
 11604 1043 03       		.uleb128 0x3
 11605 1044 91       		.byte	0x91
 11606 1045 B47F     		.sleb128 -76
 11607 1047 1B       		.uleb128 0x1b
 11608 1048 CF050000 		.4byte	.LASF216
 11609 104c 01       		.byte	0x1
 11610 104d F103     		.2byte	0x3f1
 11611 104f BD000000 		.4byte	0xbd
 11612 1053 05       		.uleb128 0x5
 11613 1054 03       		.byte	0x3
 11614 1055 90000000 		.4byte	pos_error_sum.10542
 11615 1059 1B       		.uleb128 0x1b
 11616 105a FE030000 		.4byte	.LASF217
 11617 105e 01       		.byte	0x1
 11618 105f F203     		.2byte	0x3f2
 11619 1061 BD000000 		.4byte	0xbd
 11620 1065 05       		.uleb128 0x5
 11621 1066 03       		.byte	0x3
 11622 1067 9C000000 		.4byte	curr_error_sum.10543
 11623 106b 1B       		.uleb128 0x1b
 11624 106c 310B0000 		.4byte	.LASF218
 11625 1070 01       		.byte	0x1
 11626 1071 F403     		.2byte	0x3f4
 11627 1073 BD000000 		.4byte	0xbd
 11628 1077 05       		.uleb128 0x5
 11629 1078 03       		.byte	0x3
 11630 1079 94000000 		.4byte	prev_pos_err.10544
 11631 107d 1B       		.uleb128 0x1b
 11632 107e 6B0C0000 		.4byte	.LASF219
 11633 1082 01       		.byte	0x1
 11634 1083 F503     		.2byte	0x3f5
 11635 1085 BD000000 		.4byte	0xbd
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 256


 11636 1089 05       		.uleb128 0x5
 11637 108a 03       		.byte	0x3
 11638 108b A0000000 		.4byte	prev_curr_err.10545
 11639 108f 1B       		.uleb128 0x1b
 11640 1090 D00E0000 		.4byte	.LASF220
 11641 1094 01       		.byte	0x1
 11642 1095 F603     		.2byte	0x3f6
 11643 1097 BD000000 		.4byte	0xbd
 11644 109b 05       		.uleb128 0x5
 11645 109c 03       		.byte	0x3
 11646 109d A4000000 		.4byte	prev_pwm.10546
 11647 10a1 1B       		.uleb128 0x1b
 11648 10a2 5E050000 		.4byte	.LASF221
 11649 10a6 01       		.byte	0x1
 11650 10a7 F803     		.2byte	0x3f8
 11651 10a9 81000000 		.4byte	0x81
 11652 10ad 05       		.uleb128 0x5
 11653 10ae 03       		.byte	0x3
 11654 10af 98000000 		.4byte	motor_dir.10547
 11655 10b3 1B       		.uleb128 0x1b
 11656 10b4 27060000 		.4byte	.LASF222
 11657 10b8 01       		.byte	0x1
 11658 10b9 F903     		.2byte	0x3f9
 11659 10bb 99000000 		.4byte	0x99
 11660 10bf 05       		.uleb128 0x5
 11661 10c0 03       		.byte	0x3
 11662 10c1 A8000000 		.4byte	position_counter.10548
 11663 10c5 00       		.byte	0
 11664 10c6 1A       		.uleb128 0x1a
 11665 10c7 0A050000 		.4byte	.LASF223
 11666 10cb 01       		.byte	0x1
 11667 10cc 0305     		.2byte	0x503
 11668 10ce 00000000 		.4byte	.LFB72
 11669 10d2 40080000 		.4byte	.LFE72-.LFB72
 11670 10d6 01       		.uleb128 0x1
 11671 10d7 9C       		.byte	0x9c
 11672 10d8 7F120000 		.4byte	0x127f
 11673 10dc 24       		.uleb128 0x24
 11674 10dd 69647800 		.ascii	"idx\000"
 11675 10e1 01       		.byte	0x1
 11676 10e2 0305     		.2byte	0x503
 11677 10e4 81000000 		.4byte	0x81
 11678 10e8 03       		.uleb128 0x3
 11679 10e9 91       		.byte	0x91
 11680 10ea A77F     		.sleb128 -89
 11681 10ec 1B       		.uleb128 0x1b
 11682 10ed 20010000 		.4byte	.LASF210
 11683 10f1 01       		.byte	0x1
 11684 10f2 0505     		.2byte	0x505
 11685 10f4 BD000000 		.4byte	0xbd
 11686 10f8 02       		.uleb128 0x2
 11687 10f9 91       		.byte	0x91
 11688 10fa 6C       		.sleb128 -20
 11689 10fb 1B       		.uleb128 0x1b
 11690 10fc 860B0000 		.4byte	.LASF211
 11691 1100 01       		.byte	0x1
 11692 1101 0605     		.2byte	0x506
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 257


 11693 1103 BD000000 		.4byte	0xbd
 11694 1107 03       		.uleb128 0x3
 11695 1108 91       		.byte	0x91
 11696 1109 AC7F     		.sleb128 -84
 11697 110b 1B       		.uleb128 0x1b
 11698 110c 610F0000 		.4byte	.LASF212
 11699 1110 01       		.byte	0x1
 11700 1111 0705     		.2byte	0x507
 11701 1113 BD000000 		.4byte	0xbd
 11702 1117 03       		.uleb128 0x3
 11703 1118 91       		.byte	0x91
 11704 1119 A87F     		.sleb128 -88
 11705 111b 1B       		.uleb128 0x1b
 11706 111c D90A0000 		.4byte	.LASF213
 11707 1120 01       		.byte	0x1
 11708 1121 0805     		.2byte	0x508
 11709 1123 BD000000 		.4byte	0xbd
 11710 1127 02       		.uleb128 0x2
 11711 1128 91       		.byte	0x91
 11712 1129 68       		.sleb128 -24
 11713 112a 1D       		.uleb128 0x1d
 11714 112b 4D4F5400 		.ascii	"MOT\000"
 11715 112f 01       		.byte	0x1
 11716 1130 0A05     		.2byte	0x50a
 11717 1132 050E0000 		.4byte	0xe05
 11718 1136 02       		.uleb128 0x2
 11719 1137 91       		.byte	0x91
 11720 1138 64       		.sleb128 -28
 11721 1139 1B       		.uleb128 0x1b
 11722 113a 50100000 		.4byte	.LASF199
 11723 113e 01       		.byte	0x1
 11724 113f 0B05     		.2byte	0x50b
 11725 1141 81000000 		.4byte	0x81
 11726 1145 02       		.uleb128 0x2
 11727 1146 91       		.byte	0x91
 11728 1147 63       		.sleb128 -29
 11729 1148 1D       		.uleb128 0x1d
 11730 1149 6B5F7000 		.ascii	"k_p\000"
 11731 114d 01       		.byte	0x1
 11732 114e 0D05     		.2byte	0x50d
 11733 1150 BD000000 		.4byte	0xbd
 11734 1154 02       		.uleb128 0x2
 11735 1155 91       		.byte	0x91
 11736 1156 5C       		.sleb128 -36
 11737 1157 1D       		.uleb128 0x1d
 11738 1158 6B5F6900 		.ascii	"k_i\000"
 11739 115c 01       		.byte	0x1
 11740 115d 0E05     		.2byte	0x50e
 11741 115f BD000000 		.4byte	0xbd
 11742 1163 02       		.uleb128 0x2
 11743 1164 91       		.byte	0x91
 11744 1165 58       		.sleb128 -40
 11745 1166 1D       		.uleb128 0x1d
 11746 1167 6B5F6400 		.ascii	"k_d\000"
 11747 116b 01       		.byte	0x1
 11748 116c 0F05     		.2byte	0x50f
 11749 116e BD000000 		.4byte	0xbd
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 258


 11750 1172 02       		.uleb128 0x2
 11751 1173 91       		.byte	0x91
 11752 1174 54       		.sleb128 -44
 11753 1175 1B       		.uleb128 0x1b
 11754 1176 8C0C0000 		.4byte	.LASF72
 11755 117a 01       		.byte	0x1
 11756 117b 1105     		.2byte	0x511
 11757 117d BD000000 		.4byte	0xbd
 11758 1181 02       		.uleb128 0x2
 11759 1182 91       		.byte	0x91
 11760 1183 50       		.sleb128 -48
 11761 1184 1B       		.uleb128 0x1b
 11762 1185 58050000 		.4byte	.LASF73
 11763 1189 01       		.byte	0x1
 11764 118a 1205     		.2byte	0x512
 11765 118c BD000000 		.4byte	0xbd
 11766 1190 02       		.uleb128 0x2
 11767 1191 91       		.byte	0x91
 11768 1192 4C       		.sleb128 -52
 11769 1193 1B       		.uleb128 0x1b
 11770 1194 40050000 		.4byte	.LASF74
 11771 1198 01       		.byte	0x1
 11772 1199 1305     		.2byte	0x513
 11773 119b BD000000 		.4byte	0xbd
 11774 119f 02       		.uleb128 0x2
 11775 11a0 91       		.byte	0x91
 11776 11a1 48       		.sleb128 -56
 11777 11a2 1B       		.uleb128 0x1b
 11778 11a3 3A0F0000 		.4byte	.LASF75
 11779 11a7 01       		.byte	0x1
 11780 11a8 1505     		.2byte	0x515
 11781 11aa BD000000 		.4byte	0xbd
 11782 11ae 02       		.uleb128 0x2
 11783 11af 91       		.byte	0x91
 11784 11b0 44       		.sleb128 -60
 11785 11b1 1B       		.uleb128 0x1b
 11786 11b2 F4050000 		.4byte	.LASF76
 11787 11b6 01       		.byte	0x1
 11788 11b7 1605     		.2byte	0x516
 11789 11b9 BD000000 		.4byte	0xbd
 11790 11bd 02       		.uleb128 0x2
 11791 11be 91       		.byte	0x91
 11792 11bf 40       		.sleb128 -64
 11793 11c0 1B       		.uleb128 0x1b
 11794 11c1 6D0E0000 		.4byte	.LASF77
 11795 11c5 01       		.byte	0x1
 11796 11c6 1705     		.2byte	0x517
 11797 11c8 BD000000 		.4byte	0xbd
 11798 11cc 03       		.uleb128 0x3
 11799 11cd 91       		.byte	0x91
 11800 11ce BC7F     		.sleb128 -68
 11801 11d0 1B       		.uleb128 0x1b
 11802 11d1 02060000 		.4byte	.LASF78
 11803 11d5 01       		.byte	0x1
 11804 11d6 1905     		.2byte	0x519
 11805 11d8 BD000000 		.4byte	0xbd
 11806 11dc 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 259


 11807 11dd 91       		.byte	0x91
 11808 11de B87F     		.sleb128 -72
 11809 11e0 1B       		.uleb128 0x1b
 11810 11e1 3C070000 		.4byte	.LASF79
 11811 11e5 01       		.byte	0x1
 11812 11e6 1A05     		.2byte	0x51a
 11813 11e8 BD000000 		.4byte	0xbd
 11814 11ec 03       		.uleb128 0x3
 11815 11ed 91       		.byte	0x91
 11816 11ee B47F     		.sleb128 -76
 11817 11f0 1B       		.uleb128 0x1b
 11818 11f1 86110000 		.4byte	.LASF80
 11819 11f5 01       		.byte	0x1
 11820 11f6 1B05     		.2byte	0x51b
 11821 11f8 BD000000 		.4byte	0xbd
 11822 11fc 03       		.uleb128 0x3
 11823 11fd 91       		.byte	0x91
 11824 11fe B07F     		.sleb128 -80
 11825 1200 1B       		.uleb128 0x1b
 11826 1201 CF050000 		.4byte	.LASF216
 11827 1205 01       		.byte	0x1
 11828 1206 1F05     		.2byte	0x51f
 11829 1208 94020000 		.4byte	0x294
 11830 120c 05       		.uleb128 0x5
 11831 120d 03       		.byte	0x3
 11832 120e AC000000 		.4byte	pos_error_sum.10575
 11833 1212 1B       		.uleb128 0x1b
 11834 1213 FE030000 		.4byte	.LASF217
 11835 1217 01       		.byte	0x1
 11836 1218 2005     		.2byte	0x520
 11837 121a 94020000 		.4byte	0x294
 11838 121e 05       		.uleb128 0x5
 11839 121f 03       		.byte	0x3
 11840 1220 C0000000 		.4byte	curr_error_sum.10576
 11841 1224 1B       		.uleb128 0x1b
 11842 1225 310B0000 		.4byte	.LASF218
 11843 1229 01       		.byte	0x1
 11844 122a 2205     		.2byte	0x522
 11845 122c 94020000 		.4byte	0x294
 11846 1230 05       		.uleb128 0x5
 11847 1231 03       		.byte	0x3
 11848 1232 B4000000 		.4byte	prev_pos_err.10577
 11849 1236 1B       		.uleb128 0x1b
 11850 1237 6B0C0000 		.4byte	.LASF219
 11851 123b 01       		.byte	0x1
 11852 123c 2305     		.2byte	0x523
 11853 123e 94020000 		.4byte	0x294
 11854 1242 05       		.uleb128 0x5
 11855 1243 03       		.byte	0x3
 11856 1244 C8000000 		.4byte	prev_curr_err.10578
 11857 1248 1B       		.uleb128 0x1b
 11858 1249 D00E0000 		.4byte	.LASF220
 11859 124d 01       		.byte	0x1
 11860 124e 2405     		.2byte	0x524
 11861 1250 94020000 		.4byte	0x294
 11862 1254 05       		.uleb128 0x5
 11863 1255 03       		.byte	0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 260


 11864 1256 D0000000 		.4byte	prev_pwm.10579
 11865 125a 1B       		.uleb128 0x1b
 11866 125b 5E050000 		.4byte	.LASF221
 11867 125f 01       		.byte	0x1
 11868 1260 2605     		.2byte	0x526
 11869 1262 EA060000 		.4byte	0x6ea
 11870 1266 05       		.uleb128 0x5
 11871 1267 03       		.byte	0x3
 11872 1268 BC000000 		.4byte	motor_dir.10580
 11873 126c 1B       		.uleb128 0x1b
 11874 126d 27060000 		.4byte	.LASF222
 11875 1271 01       		.byte	0x1
 11876 1272 2705     		.2byte	0x527
 11877 1274 6F030000 		.4byte	0x36f
 11878 1278 05       		.uleb128 0x5
 11879 1279 03       		.byte	0x3
 11880 127a D8000000 		.4byte	position_counter.10581
 11881 127e 00       		.byte	0
 11882 127f 1A       		.uleb128 0x1a
 11883 1280 34030000 		.4byte	.LASF224
 11884 1284 01       		.byte	0x1
 11885 1285 5106     		.2byte	0x651
 11886 1287 00000000 		.4byte	.LFB73
 11887 128b 10080000 		.4byte	.LFE73-.LFB73
 11888 128f 01       		.uleb128 0x1
 11889 1290 9C       		.byte	0x9c
 11890 1291 19140000 		.4byte	0x1419
 11891 1295 1F       		.uleb128 0x1f
 11892 1296 9B000000 		.4byte	.LASF225
 11893 129a 01       		.byte	0x1
 11894 129b 5106     		.2byte	0x651
 11895 129d 81000000 		.4byte	0x81
 11896 12a1 03       		.uleb128 0x3
 11897 12a2 91       		.byte	0x91
 11898 12a3 BF7F     		.sleb128 -65
 11899 12a5 1F       		.uleb128 0x1f
 11900 12a6 C50A0000 		.4byte	.LASF226
 11901 12aa 01       		.byte	0x1
 11902 12ab 5106     		.2byte	0x651
 11903 12ad 81000000 		.4byte	0x81
 11904 12b1 03       		.uleb128 0x3
 11905 12b2 91       		.byte	0x91
 11906 12b3 BE7F     		.sleb128 -66
 11907 12b5 1B       		.uleb128 0x1b
 11908 12b6 F7060000 		.4byte	.LASF227
 11909 12ba 01       		.byte	0x1
 11910 12bb 5306     		.2byte	0x653
 11911 12bd 81000000 		.4byte	0x81
 11912 12c1 02       		.uleb128 0x2
 11913 12c2 91       		.byte	0x91
 11914 12c3 67       		.sleb128 -25
 11915 12c4 1D       		.uleb128 0x1d
 11916 12c5 6A6A00   		.ascii	"jj\000"
 11917 12c8 01       		.byte	0x1
 11918 12c9 5606     		.2byte	0x656
 11919 12cb 81000000 		.4byte	0x81
 11920 12cf 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 261


 11921 12d0 91       		.byte	0x91
 11922 12d1 66       		.sleb128 -26
 11923 12d2 1B       		.uleb128 0x1b
 11924 12d3 0D030000 		.4byte	.LASF228
 11925 12d7 01       		.byte	0x1
 11926 12d8 5806     		.2byte	0x658
 11927 12da 19140000 		.4byte	0x1419
 11928 12de 02       		.uleb128 0x2
 11929 12df 91       		.byte	0x91
 11930 12e0 40       		.sleb128 -64
 11931 12e1 1B       		.uleb128 0x1b
 11932 12e2 C10F0000 		.4byte	.LASF229
 11933 12e6 01       		.byte	0x1
 11934 12e7 5906     		.2byte	0x659
 11935 12e9 B1000000 		.4byte	0xb1
 11936 12ed 02       		.uleb128 0x2
 11937 12ee 91       		.byte	0x91
 11938 12ef 64       		.sleb128 -28
 11939 12f0 1B       		.uleb128 0x1b
 11940 12f1 560C0000 		.4byte	.LASF230
 11941 12f5 01       		.byte	0x1
 11942 12f6 5A06     		.2byte	0x65a
 11943 12f8 BD000000 		.4byte	0xbd
 11944 12fc 02       		.uleb128 0x2
 11945 12fd 91       		.byte	0x91
 11946 12fe 54       		.sleb128 -44
 11947 12ff 1B       		.uleb128 0x1b
 11948 1300 740E0000 		.4byte	.LASF231
 11949 1304 01       		.byte	0x1
 11950 1305 5B06     		.2byte	0x65b
 11951 1307 BD000000 		.4byte	0xbd
 11952 130b 02       		.uleb128 0x2
 11953 130c 91       		.byte	0x91
 11954 130d 60       		.sleb128 -32
 11955 130e 1B       		.uleb128 0x1b
 11956 130f 47040000 		.4byte	.LASF232
 11957 1313 01       		.byte	0x1
 11958 1314 5C06     		.2byte	0x65c
 11959 1316 BD000000 		.4byte	0xbd
 11960 131a 02       		.uleb128 0x2
 11961 131b 91       		.byte	0x91
 11962 131c 4C       		.sleb128 -52
 11963 131d 1B       		.uleb128 0x1b
 11964 131e 4F0E0000 		.4byte	.LASF233
 11965 1322 01       		.byte	0x1
 11966 1323 5D06     		.2byte	0x65d
 11967 1325 BD000000 		.4byte	0xbd
 11968 1329 02       		.uleb128 0x2
 11969 132a 91       		.byte	0x91
 11970 132b 50       		.sleb128 -48
 11971 132c 1B       		.uleb128 0x1b
 11972 132d 3E0B0000 		.4byte	.LASF234
 11973 1331 01       		.byte	0x1
 11974 1332 5E06     		.2byte	0x65e
 11975 1334 A5000000 		.4byte	0xa5
 11976 1338 02       		.uleb128 0x2
 11977 1339 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 262


 11978 133a 5F       		.sleb128 -33
 11979 133b 1B       		.uleb128 0x1b
 11980 133c D10B0000 		.4byte	.LASF235
 11981 1340 01       		.byte	0x1
 11982 1341 6006     		.2byte	0x660
 11983 1343 29140000 		.4byte	0x1429
 11984 1347 05       		.uleb128 0x5
 11985 1348 03       		.byte	0x3
 11986 1349 E0000000 		.4byte	last_value_encoder.10604
 11987 134d 1B       		.uleb128 0x1b
 11988 134e B9060000 		.4byte	.LASF236
 11989 1352 01       		.byte	0x1
 11990 1353 6106     		.2byte	0x661
 11991 1355 29140000 		.4byte	0x1429
 11992 1359 05       		.uleb128 0x5
 11993 135a 03       		.byte	0x3
 11994 135b F8000000 		.4byte	comp_value_encoder.10605
 11995 135f 1B       		.uleb128 0x1b
 11996 1360 48030000 		.4byte	.LASF237
 11997 1364 01       		.byte	0x1
 11998 1365 6206     		.2byte	0x662
 11999 1367 3F140000 		.4byte	0x143f
 12000 136b 05       		.uleb128 0x5
 12001 136c 03       		.byte	0x3
 12002 136d 10010000 		.4byte	error.10606
 12003 1371 1B       		.uleb128 0x1b
 12004 1372 2D0E0000 		.4byte	.LASF238
 12005 1376 01       		.byte	0x1
 12006 1377 6406     		.2byte	0x664
 12007 1379 EA060000 		.4byte	0x6ea
 12008 137d 05       		.uleb128 0x5
 12009 137e 03       		.byte	0x3
 12010 137f 04000000 		.4byte	only_first_time.10607
 12011 1383 1B       		.uleb128 0x1b
 12012 1384 C8020000 		.4byte	.LASF239
 12013 1388 01       		.byte	0x1
 12014 1389 6506     		.2byte	0x665
 12015 138b EA060000 		.4byte	0x6ea
 12016 138f 05       		.uleb128 0x5
 12017 1390 03       		.byte	0x3
 12018 1391 68010000 		.4byte	safe_startup_motor_activation.10608
 12019 1395 1B       		.uleb128 0x1b
 12020 1396 7B000000 		.4byte	.LASF240
 12021 139a 01       		.byte	0x1
 12022 139b 6606     		.2byte	0x666
 12023 139d EA060000 		.4byte	0x6ea
 12024 13a1 05       		.uleb128 0x5
 12025 13a2 03       		.byte	0x3
 12026 13a3 64010000 		.4byte	one_time_execute.10609
 12027 13a7 1B       		.uleb128 0x1b
 12028 13a8 F5090000 		.4byte	.LASF241
 12029 13ac 01       		.byte	0x1
 12030 13ad 6706     		.2byte	0x667
 12031 13af 6F030000 		.4byte	0x36f
 12032 13b3 05       		.uleb128 0x5
 12033 13b4 03       		.byte	0x3
 12034 13b5 6C010000 		.4byte	count_startup_motor.10610
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 263


 12035 13b9 1B       		.uleb128 0x1b
 12036 13ba 6F030000 		.4byte	.LASF242
 12037 13be 01       		.byte	0x1
 12038 13bf 6806     		.2byte	0x668
 12039 13c1 EA060000 		.4byte	0x6ea
 12040 13c5 05       		.uleb128 0x5
 12041 13c6 03       		.byte	0x3
 12042 13c7 60010000 		.4byte	pos_reconstruct.10611
 12043 13cb 1B       		.uleb128 0x1b
 12044 13cc 16090000 		.4byte	.LASF243
 12045 13d0 01       		.byte	0x1
 12046 13d1 6A06     		.2byte	0x66a
 12047 13d3 29140000 		.4byte	0x1429
 12048 13d7 05       		.uleb128 0x5
 12049 13d8 03       		.byte	0x3
 12050 13d9 18010000 		.4byte	v_value.10612
 12051 13dd 1B       		.uleb128 0x1b
 12052 13de 7D110000 		.4byte	.LASF244
 12053 13e2 01       		.byte	0x1
 12054 13e3 6B06     		.2byte	0x66b
 12055 13e5 29140000 		.4byte	0x1429
 12056 13e9 05       		.uleb128 0x5
 12057 13ea 03       		.byte	0x3
 12058 13eb 30010000 		.4byte	vv_value.10613
 12059 13ef 1B       		.uleb128 0x1b
 12060 13f0 6E010000 		.4byte	.LASF245
 12061 13f4 01       		.byte	0x1
 12062 13f5 6C06     		.2byte	0x66c
 12063 13f7 29140000 		.4byte	0x1429
 12064 13fb 05       		.uleb128 0x5
 12065 13fc 03       		.byte	0x3
 12066 13fd 48010000 		.4byte	vvv_value.10614
 12067 1401 1C       		.uleb128 0x1c
 12068 1402 94000000 		.4byte	.LBB9
 12069 1406 6A000000 		.4byte	.LBE9-.LBB9
 12070 140a 1D       		.uleb128 0x1d
 12071 140b 6A00     		.ascii	"j\000"
 12072 140d 01       		.byte	0x1
 12073 140e 7C06     		.2byte	0x67c
 12074 1410 68000000 		.4byte	0x68
 12075 1414 02       		.uleb128 0x2
 12076 1415 91       		.byte	0x91
 12077 1416 58       		.sleb128 -40
 12078 1417 00       		.byte	0
 12079 1418 00       		.byte	0
 12080 1419 07       		.uleb128 0x7
 12081 141a 99000000 		.4byte	0x99
 12082 141e 29140000 		.4byte	0x1429
 12083 1422 08       		.uleb128 0x8
 12084 1423 0E010000 		.4byte	0x10e
 12085 1427 02       		.byte	0x2
 12086 1428 00       		.byte	0
 12087 1429 07       		.uleb128 0x7
 12088 142a BD000000 		.4byte	0xbd
 12089 142e 3F140000 		.4byte	0x143f
 12090 1432 08       		.uleb128 0x8
 12091 1433 0E010000 		.4byte	0x10e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 264


 12092 1437 01       		.byte	0x1
 12093 1438 08       		.uleb128 0x8
 12094 1439 0E010000 		.4byte	0x10e
 12095 143d 02       		.byte	0x2
 12096 143e 00       		.byte	0
 12097 143f 07       		.uleb128 0x7
 12098 1440 81000000 		.4byte	0x81
 12099 1444 55140000 		.4byte	0x1455
 12100 1448 08       		.uleb128 0x8
 12101 1449 0E010000 		.4byte	0x10e
 12102 144d 01       		.byte	0x1
 12103 144e 08       		.uleb128 0x8
 12104 144f 0E010000 		.4byte	0x10e
 12105 1453 02       		.byte	0x2
 12106 1454 00       		.byte	0
 12107 1455 23       		.uleb128 0x23
 12108 1456 2A0D0000 		.4byte	.LASF246
 12109 145a 01       		.byte	0x1
 12110 145b 2407     		.2byte	0x724
 12111 145d 00000000 		.4byte	.LFB74
 12112 1461 98110000 		.4byte	.LFE74-.LFB74
 12113 1465 01       		.uleb128 0x1
 12114 1466 9C       		.byte	0x9c
 12115 1467 2F150000 		.4byte	0x152f
 12116 146b 1B       		.uleb128 0x1b
 12117 146c CA0C0000 		.4byte	.LASF247
 12118 1470 01       		.byte	0x1
 12119 1471 3807     		.2byte	0x738
 12120 1473 BD000000 		.4byte	0xbd
 12121 1477 02       		.uleb128 0x2
 12122 1478 91       		.byte	0x91
 12123 1479 64       		.sleb128 -28
 12124 147a 1B       		.uleb128 0x1b
 12125 147b 110E0000 		.4byte	.LASF248
 12126 147f 01       		.byte	0x1
 12127 1480 3A07     		.2byte	0x73a
 12128 1482 8D000000 		.4byte	0x8d
 12129 1486 05       		.uleb128 0x5
 12130 1487 03       		.byte	0x3
 12131 1488 7C010000 		.4byte	emg_counter_1.10631
 12132 148c 1B       		.uleb128 0x1b
 12133 148d 1F0E0000 		.4byte	.LASF249
 12134 1491 01       		.byte	0x1
 12135 1492 3B07     		.2byte	0x73b
 12136 1494 8D000000 		.4byte	0x8d
 12137 1498 05       		.uleb128 0x5
 12138 1499 03       		.byte	0x3
 12139 149a 7E010000 		.4byte	emg_counter_2.10632
 12140 149e 1B       		.uleb128 0x1b
 12141 149f 32020000 		.4byte	.LASF250
 12142 14a3 01       		.byte	0x1
 12143 14a4 3C07     		.2byte	0x73c
 12144 14a6 8D000000 		.4byte	0x8d
 12145 14aa 05       		.uleb128 0x5
 12146 14ab 03       		.byte	0x3
 12147 14ac 84010000 		.4byte	UD_counter.10633
 12148 14b0 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 265


 12149 14b1 64030000 		.4byte	.LASF251
 12150 14b5 01       		.byte	0x1
 12151 14b6 3D07     		.2byte	0x73d
 12152 14b8 8D000000 		.4byte	0x8d
 12153 14bc 05       		.uleb128 0x5
 12154 14bd 03       		.byte	0x3
 12155 14be 8C010000 		.4byte	LR_counter.10634
 12156 14c2 1B       		.uleb128 0x1b
 12157 14c3 B70A0000 		.4byte	.LASF252
 12158 14c7 01       		.byte	0x1
 12159 14c8 3E07     		.2byte	0x73e
 12160 14ca BD000000 		.4byte	0xbd
 12161 14ce 05       		.uleb128 0x5
 12162 14cf 03       		.byte	0x3
 12163 14d0 80010000 		.4byte	UD_mean_value.10635
 12164 14d4 1B       		.uleb128 0x1b
 12165 14d5 D6100000 		.4byte	.LASF253
 12166 14d9 01       		.byte	0x1
 12167 14da 3F07     		.2byte	0x73f
 12168 14dc BD000000 		.4byte	0xbd
 12169 14e0 05       		.uleb128 0x5
 12170 14e1 03       		.byte	0x3
 12171 14e2 88010000 		.4byte	LR_mean_value.10636
 12172 14e6 1B       		.uleb128 0x1b
 12173 14e7 58020000 		.4byte	.LASF254
 12174 14eb 01       		.byte	0x1
 12175 14ec 4007     		.2byte	0x740
 12176 14ee 81000000 		.4byte	0x81
 12177 14f2 05       		.uleb128 0x5
 12178 14f3 03       		.byte	0x3
 12179 14f4 06000000 		.4byte	first_tension_valid.10637
 12180 14f8 1B       		.uleb128 0x1b
 12181 14f9 260A0000 		.4byte	.LASF255
 12182 14fd 01       		.byte	0x1
 12183 14fe 4207     		.2byte	0x742
 12184 1500 8D000000 		.4byte	0x8d
 12185 1504 05       		.uleb128 0x5
 12186 1505 03       		.byte	0x3
 12187 1506 74010000 		.4byte	count.10638
 12188 150a 1B       		.uleb128 0x1b
 12189 150b 5E010000 		.4byte	.LASF256
 12190 150f 01       		.byte	0x1
 12191 1510 4307     		.2byte	0x743
 12192 1512 99000000 		.4byte	0x99
 12193 1516 05       		.uleb128 0x5
 12194 1517 03       		.byte	0x3
 12195 1518 78010000 		.4byte	v_count.10639
 12196 151c 1D       		.uleb128 0x1d
 12197 151d 69647800 		.ascii	"idx\000"
 12198 1521 01       		.byte	0x1
 12199 1522 4407     		.2byte	0x744
 12200 1524 81000000 		.4byte	0x81
 12201 1528 05       		.uleb128 0x5
 12202 1529 03       		.byte	0x3
 12203 152a 76010000 		.4byte	idx.10640
 12204 152e 00       		.byte	0
 12205 152f 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 266


 12206 1530 F50C0000 		.4byte	.LASF257
 12207 1534 01       		.byte	0x1
 12208 1535 9209     		.2byte	0x992
 12209 1537 00000000 		.4byte	.LFB75
 12210 153b F4000000 		.4byte	.LFE75-.LFB75
 12211 153f 01       		.uleb128 0x1
 12212 1540 9C       		.byte	0x9c
 12213 1541 5D150000 		.4byte	0x155d
 12214 1545 1C       		.uleb128 0x1c
 12215 1546 06000000 		.4byte	.LBB10
 12216 154a D0000000 		.4byte	.LBE10-.LBB10
 12217 154e 1D       		.uleb128 0x1d
 12218 154f 6900     		.ascii	"i\000"
 12219 1551 01       		.byte	0x1
 12220 1552 9409     		.2byte	0x994
 12221 1554 81000000 		.4byte	0x81
 12222 1558 02       		.uleb128 0x2
 12223 1559 91       		.byte	0x91
 12224 155a 77       		.sleb128 -9
 12225 155b 00       		.byte	0
 12226 155c 00       		.byte	0
 12227 155d 21       		.uleb128 0x21
 12228 155e 7F030000 		.4byte	.LASF258
 12229 1562 01       		.byte	0x1
 12230 1563 AE09     		.2byte	0x9ae
 12231 1565 00000000 		.4byte	.LFB76
 12232 1569 78000000 		.4byte	.LFE76-.LFB76
 12233 156d 01       		.uleb128 0x1
 12234 156e 9C       		.byte	0x9c
 12235 156f B0150000 		.4byte	0x15b0
 12236 1573 1F       		.uleb128 0x1f
 12237 1574 470B0000 		.4byte	.LASF259
 12238 1578 01       		.byte	0x1
 12239 1579 AE09     		.2byte	0x9ae
 12240 157b 81000000 		.4byte	0x81
 12241 157f 02       		.uleb128 0x2
 12242 1580 91       		.byte	0x91
 12243 1581 6F       		.sleb128 -17
 12244 1582 1B       		.uleb128 0x1b
 12245 1583 F7060000 		.4byte	.LASF227
 12246 1587 01       		.byte	0x1
 12247 1588 B009     		.2byte	0x9b0
 12248 158a 81000000 		.4byte	0x81
 12249 158e 02       		.uleb128 0x2
 12250 158f 91       		.byte	0x91
 12251 1590 73       		.sleb128 -13
 12252 1591 1B       		.uleb128 0x1b
 12253 1592 BB0B0000 		.4byte	.LASF260
 12254 1596 01       		.byte	0x1
 12255 1597 B109     		.2byte	0x9b1
 12256 1599 8D000000 		.4byte	0x8d
 12257 159d 02       		.uleb128 0x2
 12258 159e 91       		.byte	0x91
 12259 159f 76       		.sleb128 -10
 12260 15a0 1B       		.uleb128 0x1b
 12261 15a1 E0070000 		.4byte	.LASF261
 12262 15a5 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 267


 12263 15a6 B209     		.2byte	0x9b2
 12264 15a8 8D000000 		.4byte	0x8d
 12265 15ac 02       		.uleb128 0x2
 12266 15ad 91       		.byte	0x91
 12267 15ae 74       		.sleb128 -12
 12268 15af 00       		.byte	0
 12269 15b0 23       		.uleb128 0x23
 12270 15b1 53080000 		.4byte	.LASF262
 12271 15b5 01       		.byte	0x1
 12272 15b6 C209     		.2byte	0x9c2
 12273 15b8 00000000 		.4byte	.LFB77
 12274 15bc 08040000 		.4byte	.LFE77-.LFB77
 12275 15c0 01       		.uleb128 0x1
 12276 15c1 9C       		.byte	0x9c
 12277 15c2 DC160000 		.4byte	0x16dc
 12278 15c6 1B       		.uleb128 0x1b
 12279 15c7 09000000 		.4byte	.LASF263
 12280 15cb 01       		.byte	0x1
 12281 15cc C309     		.2byte	0x9c3
 12282 15ce 81000000 		.4byte	0x81
 12283 15d2 05       		.uleb128 0x5
 12284 15d3 03       		.byte	0x3
 12285 15d4 8E010000 		.4byte	pos_cycle_status.10710
 12286 15d8 1B       		.uleb128 0x1b
 12287 15d9 5C0D0000 		.4byte	.LASF264
 12288 15dd 01       		.byte	0x1
 12289 15de C409     		.2byte	0x9c4
 12290 15e0 EA060000 		.4byte	0x6ea
 12291 15e4 05       		.uleb128 0x5
 12292 15e5 03       		.byte	0x3
 12293 15e6 98010000 		.4byte	emg_cycle_status.10711
 12294 15ea 1B       		.uleb128 0x1b
 12295 15eb 820F0000 		.4byte	.LASF265
 12296 15ef 01       		.byte	0x1
 12297 15f0 C509     		.2byte	0x9c5
 12298 15f2 81000000 		.4byte	0x81
 12299 15f6 05       		.uleb128 0x5
 12300 15f7 03       		.byte	0x3
 12301 15f8 9A010000 		.4byte	rest_cycle_status.10712
 12302 15fc 1B       		.uleb128 0x1b
 12303 15fd B1020000 		.4byte	.LASF266
 12304 1601 01       		.byte	0x1
 12305 1602 C609     		.2byte	0x9c6
 12306 1604 BD000000 		.4byte	0xbd
 12307 1608 05       		.uleb128 0x5
 12308 1609 03       		.byte	0x3
 12309 160a 08000000 		.4byte	bin_threshold.10713
 12310 160e 1B       		.uleb128 0x1b
 12311 160f B9010000 		.4byte	.LASF267
 12312 1613 01       		.byte	0x1
 12313 1614 C709     		.2byte	0x9c7
 12314 1616 BD000000 		.4byte	0xbd
 12315 161a 05       		.uleb128 0x5
 12316 161b 03       		.byte	0x3
 12317 161c 90010000 		.4byte	thr_pos.10714
 12318 1620 1B       		.uleb128 0x1b
 12319 1621 520A0000 		.4byte	.LASF268
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 268


 12320 1625 01       		.byte	0x1
 12321 1626 C709     		.2byte	0x9c7
 12322 1628 BD000000 		.4byte	0xbd
 12323 162c 05       		.uleb128 0x5
 12324 162d 03       		.byte	0x3
 12325 162e 94010000 		.4byte	max_pos.10715
 12326 1632 1D       		.uleb128 0x1d
 12327 1633 6900     		.ascii	"i\000"
 12328 1635 01       		.byte	0x1
 12329 1636 C809     		.2byte	0x9c8
 12330 1638 81000000 		.4byte	0x81
 12331 163c 02       		.uleb128 0x2
 12332 163d 91       		.byte	0x91
 12333 163e 77       		.sleb128 -9
 12334 163f 1B       		.uleb128 0x1b
 12335 1640 68050000 		.4byte	.LASF269
 12336 1644 01       		.byte	0x1
 12337 1645 C809     		.2byte	0x9c8
 12338 1647 81000000 		.4byte	0x81
 12339 164b 02       		.uleb128 0x2
 12340 164c 91       		.byte	0x91
 12341 164d 63       		.sleb128 -29
 12342 164e 1B       		.uleb128 0x1b
 12343 164f EB000000 		.4byte	.LASF270
 12344 1653 01       		.byte	0x1
 12345 1654 C809     		.2byte	0x9c8
 12346 1656 81000000 		.4byte	0x81
 12347 165a 02       		.uleb128 0x2
 12348 165b 91       		.byte	0x91
 12349 165c 62       		.sleb128 -30
 12350 165d 1B       		.uleb128 0x1b
 12351 165e BE0C0000 		.4byte	.LASF271
 12352 1662 01       		.byte	0x1
 12353 1663 C809     		.2byte	0x9c8
 12354 1665 81000000 		.4byte	0x81
 12355 1669 02       		.uleb128 0x2
 12356 166a 91       		.byte	0x91
 12357 166b 61       		.sleb128 -31
 12358 166c 1B       		.uleb128 0x1b
 12359 166d C40C0000 		.4byte	.LASF272
 12360 1671 01       		.byte	0x1
 12361 1672 C809     		.2byte	0x9c8
 12362 1674 81000000 		.4byte	0x81
 12363 1678 02       		.uleb128 0x2
 12364 1679 91       		.byte	0x91
 12365 167a 60       		.sleb128 -32
 12366 167b 1B       		.uleb128 0x1b
 12367 167c 090D0000 		.4byte	.LASF273
 12368 1680 01       		.byte	0x1
 12369 1681 C909     		.2byte	0x9c9
 12370 1683 BD000000 		.4byte	0xbd
 12371 1687 02       		.uleb128 0x2
 12372 1688 91       		.byte	0x91
 12373 1689 6C       		.sleb128 -20
 12374 168a 1B       		.uleb128 0x1b
 12375 168b 5E040000 		.4byte	.LASF274
 12376 168f 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 269


 12377 1690 C909     		.2byte	0x9c9
 12378 1692 BD000000 		.4byte	0xbd
 12379 1696 02       		.uleb128 0x2
 12380 1697 91       		.byte	0x91
 12381 1698 68       		.sleb128 -24
 12382 1699 1B       		.uleb128 0x1b
 12383 169a 5A0E0000 		.4byte	.LASF275
 12384 169e 01       		.byte	0x1
 12385 169f C909     		.2byte	0x9c9
 12386 16a1 BD000000 		.4byte	0xbd
 12387 16a5 02       		.uleb128 0x2
 12388 16a6 91       		.byte	0x91
 12389 16a7 70       		.sleb128 -16
 12390 16a8 1B       		.uleb128 0x1b
 12391 16a9 F9030000 		.4byte	.LASF276
 12392 16ad 01       		.byte	0x1
 12393 16ae CA09     		.2byte	0x9ca
 12394 16b0 BD000000 		.4byte	0xbd
 12395 16b4 02       		.uleb128 0x2
 12396 16b5 91       		.byte	0x91
 12397 16b6 64       		.sleb128 -28
 12398 16b7 1B       		.uleb128 0x1b
 12399 16b8 9D060000 		.4byte	.LASF277
 12400 16bc 01       		.byte	0x1
 12401 16bd CB09     		.2byte	0x9cb
 12402 16bf 99000000 		.4byte	0x99
 12403 16c3 05       		.uleb128 0x5
 12404 16c4 03       		.byte	0x3
 12405 16c5 9C010000 		.4byte	timer_value_s.10725
 12406 16c9 1B       		.uleb128 0x1b
 12407 16ca 38060000 		.4byte	.LASF278
 12408 16ce 01       		.byte	0x1
 12409 16cf CB09     		.2byte	0x9cb
 12410 16d1 99000000 		.4byte	0x99
 12411 16d5 05       		.uleb128 0x5
 12412 16d6 03       		.byte	0x3
 12413 16d7 A0010000 		.4byte	timer_value_e.10726
 12414 16db 00       		.byte	0
 12415 16dc 23       		.uleb128 0x23
 12416 16dd ED0A0000 		.4byte	.LASF279
 12417 16e1 01       		.byte	0x1
 12418 16e2 370A     		.2byte	0xa37
 12419 16e4 00000000 		.4byte	.LFB78
 12420 16e8 08010000 		.4byte	.LFE78-.LFB78
 12421 16ec 01       		.uleb128 0x1
 12422 16ed 9C       		.byte	0x9c
 12423 16ee 62170000 		.4byte	0x1762
 12424 16f2 1B       		.uleb128 0x1b
 12425 16f3 5A0F0000 		.4byte	.LASF280
 12426 16f7 01       		.byte	0x1
 12427 16f8 390A     		.2byte	0xa39
 12428 16fa EA000000 		.4byte	0xea
 12429 16fe 02       		.uleb128 0x2
 12430 16ff 91       		.byte	0x91
 12431 1700 64       		.sleb128 -28
 12432 1701 1B       		.uleb128 0x1b
 12433 1702 EA0C0000 		.4byte	.LASF281
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 270


 12434 1706 01       		.byte	0x1
 12435 1707 3A0A     		.2byte	0xa3a
 12436 1709 81000000 		.4byte	0x81
 12437 170d 05       		.uleb128 0x5
 12438 170e 03       		.byte	0x3
 12439 170f A8010000 		.4byte	row_number.10748
 12440 1713 1B       		.uleb128 0x1b
 12441 1714 31040000 		.4byte	.LASF282
 12442 1718 01       		.byte	0x1
 12443 1719 3B0A     		.2byte	0xa3b
 12444 171b 81000000 		.4byte	0x81
 12445 171f 02       		.uleb128 0x2
 12446 1720 91       		.byte	0x91
 12447 1721 77       		.sleb128 -9
 12448 1722 1B       		.uleb128 0x1b
 12449 1723 AC0D0000 		.4byte	.LASF283
 12450 1727 01       		.byte	0x1
 12451 1728 3C0A     		.2byte	0xa3c
 12452 172a 62170000 		.4byte	0x1762
 12453 172e 02       		.uleb128 0x2
 12454 172f 91       		.byte	0x91
 12455 1730 70       		.sleb128 -16
 12456 1731 1B       		.uleb128 0x1b
 12457 1732 F3000000 		.4byte	.LASF284
 12458 1736 01       		.byte	0x1
 12459 1737 3D0A     		.2byte	0xa3d
 12460 1739 62170000 		.4byte	0x1762
 12461 173d 02       		.uleb128 0x2
 12462 173e 91       		.byte	0x91
 12463 173f 6C       		.sleb128 -20
 12464 1740 1B       		.uleb128 0x1b
 12465 1741 EE100000 		.4byte	.LASF285
 12466 1745 01       		.byte	0x1
 12467 1746 3E0A     		.2byte	0xa3e
 12468 1748 81000000 		.4byte	0x81
 12469 174c 02       		.uleb128 0x2
 12470 174d 91       		.byte	0x91
 12471 174e 6B       		.sleb128 -21
 12472 174f 1B       		.uleb128 0x1b
 12473 1750 380A0000 		.4byte	.LASF286
 12474 1754 01       		.byte	0x1
 12475 1755 3F0A     		.2byte	0xa3f
 12476 1757 62170000 		.4byte	0x1762
 12477 175b 05       		.uleb128 0x5
 12478 175c 03       		.byte	0x3
 12479 175d A4010000 		.4byte	m_addr.10753
 12480 1761 00       		.byte	0
 12481 1762 0C       		.uleb128 0xc
 12482 1763 04       		.byte	0x4
 12483 1764 81000000 		.4byte	0x81
 12484 1768 07       		.uleb128 0x7
 12485 1769 78170000 		.4byte	0x1778
 12486 176d 78170000 		.4byte	0x1778
 12487 1771 08       		.uleb128 0x8
 12488 1772 0E010000 		.4byte	0x10e
 12489 1776 1C       		.byte	0x1c
 12490 1777 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 271


 12491 1778 26       		.uleb128 0x26
 12492 1779 81000000 		.4byte	0x81
 12493 177d 19       		.uleb128 0x19
 12494 177e B70D0000 		.4byte	.LASF287
 12495 1782 01       		.byte	0x1
 12496 1783 40       		.byte	0x40
 12497 1784 8E170000 		.4byte	0x178e
 12498 1788 05       		.uleb128 0x5
 12499 1789 03       		.byte	0x3
 12500 178a 00000000 		.4byte	pwm_preload_values
 12501 178e 26       		.uleb128 0x26
 12502 178f 68170000 		.4byte	0x1768
 12503 1793 27       		.uleb128 0x27
 12504 1794 F10E0000 		.4byte	.LASF288
 12505 1798 08       		.byte	0x8
 12506 1799 1207     		.2byte	0x712
 12507 179b 9F170000 		.4byte	0x179f
 12508 179f 06       		.uleb128 0x6
 12509 17a0 76000000 		.4byte	0x76
 12510 17a4 07       		.uleb128 0x7
 12511 17a5 A5010000 		.4byte	0x1a5
 12512 17a9 B4170000 		.4byte	0x17b4
 12513 17ad 08       		.uleb128 0x8
 12514 17ae 0E010000 		.4byte	0x10e
 12515 17b2 01       		.byte	0x1
 12516 17b3 00       		.byte	0
 12517 17b4 27       		.uleb128 0x27
 12518 17b5 DD060000 		.4byte	.LASF289
 12519 17b9 07       		.byte	0x7
 12520 17ba 1A02     		.2byte	0x21a
 12521 17bc A4170000 		.4byte	0x17a4
 12522 17c0 27       		.uleb128 0x27
 12523 17c1 55040000 		.4byte	.LASF290
 12524 17c5 07       		.byte	0x7
 12525 17c6 1A02     		.2byte	0x21a
 12526 17c8 A4170000 		.4byte	0x17a4
 12527 17cc 27       		.uleb128 0x27
 12528 17cd 7D0B0000 		.4byte	.LASF291
 12529 17d1 07       		.byte	0x7
 12530 17d2 1A02     		.2byte	0x21a
 12531 17d4 A4170000 		.4byte	0x17a4
 12532 17d8 07       		.uleb128 0x7
 12533 17d9 E2010000 		.4byte	0x1e2
 12534 17dd E8170000 		.4byte	0x17e8
 12535 17e1 08       		.uleb128 0x8
 12536 17e2 0E010000 		.4byte	0x10e
 12537 17e6 01       		.byte	0x1
 12538 17e7 00       		.byte	0
 12539 17e8 27       		.uleb128 0x27
 12540 17e9 96060000 		.4byte	.LASF292
 12541 17ed 07       		.byte	0x7
 12542 17ee 1B02     		.2byte	0x21b
 12543 17f0 D8170000 		.4byte	0x17d8
 12544 17f4 27       		.uleb128 0x27
 12545 17f5 E4100000 		.4byte	.LASF293
 12546 17f9 07       		.byte	0x7
 12547 17fa 1B02     		.2byte	0x21b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 272


 12548 17fc D8170000 		.4byte	0x17d8
 12549 1800 27       		.uleb128 0x27
 12550 1801 30100000 		.4byte	.LASF294
 12551 1805 07       		.byte	0x7
 12552 1806 1C02     		.2byte	0x21c
 12553 1808 63020000 		.4byte	0x263
 12554 180c 27       		.uleb128 0x27
 12555 180d FF020000 		.4byte	.LASF295
 12556 1811 07       		.byte	0x7
 12557 1812 1C02     		.2byte	0x21c
 12558 1814 63020000 		.4byte	0x263
 12559 1818 27       		.uleb128 0x27
 12560 1819 76000000 		.4byte	.LASF296
 12561 181d 07       		.byte	0x7
 12562 181e 1E02     		.2byte	0x21e
 12563 1820 B4020000 		.4byte	0x2b4
 12564 1824 27       		.uleb128 0x27
 12565 1825 0B0E0000 		.4byte	.LASF297
 12566 1829 07       		.byte	0x7
 12567 182a 1F02     		.2byte	0x21f
 12568 182c 70090000 		.4byte	0x970
 12569 1830 27       		.uleb128 0x27
 12570 1831 3F0A0000 		.4byte	.LASF298
 12571 1835 07       		.byte	0x7
 12572 1836 1F02     		.2byte	0x21f
 12573 1838 70090000 		.4byte	0x970
 12574 183c 27       		.uleb128 0x27
 12575 183d 1E090000 		.4byte	.LASF299
 12576 1841 07       		.byte	0x7
 12577 1842 2002     		.2byte	0x220
 12578 1844 490B0000 		.4byte	0xb49
 12579 1848 07       		.uleb128 0x7
 12580 1849 210B0000 		.4byte	0xb21
 12581 184d 58180000 		.4byte	0x1858
 12582 1851 08       		.uleb128 0x8
 12583 1852 0E010000 		.4byte	0x10e
 12584 1856 01       		.byte	0x1
 12585 1857 00       		.byte	0
 12586 1858 27       		.uleb128 0x27
 12587 1859 690B0000 		.4byte	.LASF300
 12588 185d 07       		.byte	0x7
 12589 185e 2102     		.2byte	0x221
 12590 1860 48180000 		.4byte	0x1848
 12591 1864 27       		.uleb128 0x27
 12592 1865 79090000 		.4byte	.LASF301
 12593 1869 07       		.byte	0x7
 12594 186a 2102     		.2byte	0x221
 12595 186c 48180000 		.4byte	0x1848
 12596 1870 27       		.uleb128 0x27
 12597 1871 4F0B0000 		.4byte	.LASF302
 12598 1875 07       		.byte	0x7
 12599 1876 2102     		.2byte	0x221
 12600 1878 48180000 		.4byte	0x1848
 12601 187c 07       		.uleb128 0x7
 12602 187d 210B0000 		.4byte	0xb21
 12603 1881 8C180000 		.4byte	0x188c
 12604 1885 08       		.uleb128 0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 273


 12605 1886 0E010000 		.4byte	0x10e
 12606 188a 02       		.byte	0x2
 12607 188b 00       		.byte	0
 12608 188c 27       		.uleb128 0x27
 12609 188d 26050000 		.4byte	.LASF303
 12610 1891 07       		.byte	0x7
 12611 1892 2202     		.2byte	0x222
 12612 1894 7C180000 		.4byte	0x187c
 12613 1898 07       		.uleb128 0x7
 12614 1899 210B0000 		.4byte	0xb21
 12615 189d A8180000 		.4byte	0x18a8
 12616 18a1 08       		.uleb128 0x8
 12617 18a2 0E010000 		.4byte	0x10e
 12618 18a6 07       		.byte	0x7
 12619 18a7 00       		.byte	0
 12620 18a8 27       		.uleb128 0x27
 12621 18a9 83010000 		.4byte	.LASF304
 12622 18ad 07       		.byte	0x7
 12623 18ae 2302     		.2byte	0x223
 12624 18b0 98180000 		.4byte	0x1898
 12625 18b4 27       		.uleb128 0x27
 12626 18b5 6C020000 		.4byte	.LASF305
 12627 18b9 07       		.byte	0x7
 12628 18ba 2502     		.2byte	0x225
 12629 18bc 8D000000 		.4byte	0x8d
 12630 18c0 27       		.uleb128 0x27
 12631 18c1 FE080000 		.4byte	.LASF306
 12632 18c5 07       		.byte	0x7
 12633 18c6 2602     		.2byte	0x226
 12634 18c8 8D000000 		.4byte	0x8d
 12635 18cc 27       		.uleb128 0x27
 12636 18cd F90B0000 		.4byte	.LASF307
 12637 18d1 07       		.byte	0x7
 12638 18d2 2702     		.2byte	0x227
 12639 18d4 D5000000 		.4byte	0xd5
 12640 18d8 27       		.uleb128 0x27
 12641 18d9 920C0000 		.4byte	.LASF308
 12642 18dd 07       		.byte	0x7
 12643 18de 2902     		.2byte	0x229
 12644 18e0 94020000 		.4byte	0x294
 12645 18e4 27       		.uleb128 0x27
 12646 18e5 4C0F0000 		.4byte	.LASF309
 12647 18e9 07       		.byte	0x7
 12648 18ea 2A02     		.2byte	0x22a
 12649 18ec EA060000 		.4byte	0x6ea
 12650 18f0 27       		.uleb128 0x27
 12651 18f1 910E0000 		.4byte	.LASF310
 12652 18f5 07       		.byte	0x7
 12653 18f6 2B02     		.2byte	0x22b
 12654 18f8 EA060000 		.4byte	0x6ea
 12655 18fc 27       		.uleb128 0x27
 12656 18fd E6050000 		.4byte	.LASF311
 12657 1901 07       		.byte	0x7
 12658 1902 2C02     		.2byte	0x22c
 12659 1904 94020000 		.4byte	0x294
 12660 1908 27       		.uleb128 0x27
 12661 1909 FE0E0000 		.4byte	.LASF312
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 274


 12662 190d 07       		.byte	0x7
 12663 190e 2D02     		.2byte	0x22d
 12664 1910 94020000 		.4byte	0x294
 12665 1914 27       		.uleb128 0x27
 12666 1915 74060000 		.4byte	.LASF313
 12667 1919 07       		.byte	0x7
 12668 191a 2F02     		.2byte	0x22f
 12669 191c F50B0000 		.4byte	0xbf5
 12670 1920 27       		.uleb128 0x27
 12671 1921 CF040000 		.4byte	.LASF314
 12672 1925 07       		.byte	0x7
 12673 1926 3002     		.2byte	0x230
 12674 1928 BD0B0000 		.4byte	0xbbd
 12675 192c 27       		.uleb128 0x27
 12676 192d D5030000 		.4byte	.LASF315
 12677 1931 07       		.byte	0x7
 12678 1932 3102     		.2byte	0x231
 12679 1934 BD0B0000 		.4byte	0xbbd
 12680 1938 27       		.uleb128 0x27
 12681 1939 250C0000 		.4byte	.LASF316
 12682 193d 07       		.byte	0x7
 12683 193e 3202     		.2byte	0x232
 12684 1940 BD0B0000 		.4byte	0xbbd
 12685 1944 27       		.uleb128 0x27
 12686 1945 60100000 		.4byte	.LASF317
 12687 1949 07       		.byte	0x7
 12688 194a 3302     		.2byte	0x233
 12689 194c BD0B0000 		.4byte	0xbbd
 12690 1950 27       		.uleb128 0x27
 12691 1951 02080000 		.4byte	.LASF318
 12692 1955 07       		.byte	0x7
 12693 1956 3602     		.2byte	0x236
 12694 1958 81000000 		.4byte	0x81
 12695 195c 27       		.uleb128 0x27
 12696 195d B7000000 		.4byte	.LASF319
 12697 1961 07       		.byte	0x7
 12698 1962 3702     		.2byte	0x237
 12699 1964 81000000 		.4byte	0x81
 12700 1968 27       		.uleb128 0x27
 12701 1969 EA030000 		.4byte	.LASF320
 12702 196d 07       		.byte	0x7
 12703 196e 3802     		.2byte	0x238
 12704 1970 81000000 		.4byte	0x81
 12705 1974 27       		.uleb128 0x27
 12706 1975 D5000000 		.4byte	.LASF321
 12707 1979 07       		.byte	0x7
 12708 197a 3902     		.2byte	0x239
 12709 197c 81000000 		.4byte	0x81
 12710 1980 27       		.uleb128 0x27
 12711 1981 18110000 		.4byte	.LASF322
 12712 1985 07       		.byte	0x7
 12713 1986 3B02     		.2byte	0x23b
 12714 1988 81000000 		.4byte	0x81
 12715 198c 27       		.uleb128 0x27
 12716 198d 700B0000 		.4byte	.LASF323
 12717 1991 07       		.byte	0x7
 12718 1992 3C02     		.2byte	0x23c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 275


 12719 1994 81000000 		.4byte	0x81
 12720 1998 27       		.uleb128 0x27
 12721 1999 3B040000 		.4byte	.LASF324
 12722 199d 07       		.byte	0x7
 12723 199e 3D02     		.2byte	0x23d
 12724 19a0 81000000 		.4byte	0x81
 12725 19a4 27       		.uleb128 0x27
 12726 19a5 EC070000 		.4byte	.LASF325
 12727 19a9 07       		.byte	0x7
 12728 19aa 3E02     		.2byte	0x23e
 12729 19ac 81000000 		.4byte	0x81
 12730 19b0 27       		.uleb128 0x27
 12731 19b1 5E090000 		.4byte	.LASF326
 12732 19b5 07       		.byte	0x7
 12733 19b6 3F02     		.2byte	0x23f
 12734 19b8 81000000 		.4byte	0x81
 12735 19bc 07       		.uleb128 0x7
 12736 19bd B1000000 		.4byte	0xb1
 12737 19c1 CC190000 		.4byte	0x19cc
 12738 19c5 08       		.uleb128 0x8
 12739 19c6 0E010000 		.4byte	0x10e
 12740 19ca 0B       		.byte	0xb
 12741 19cb 00       		.byte	0
 12742 19cc 27       		.uleb128 0x27
 12743 19cd E2030000 		.4byte	.LASF327
 12744 19d1 07       		.byte	0x7
 12745 19d2 4302     		.2byte	0x243
 12746 19d4 BC190000 		.4byte	0x19bc
 12747 19d8 27       		.uleb128 0x27
 12748 19d9 97100000 		.4byte	.LASF328
 12749 19dd 07       		.byte	0x7
 12750 19de 4402     		.2byte	0x244
 12751 19e0 81000000 		.4byte	0x81
 12752 19e4 27       		.uleb128 0x27
 12753 19e5 01050000 		.4byte	.LASF329
 12754 19e9 07       		.byte	0x7
 12755 19ea 4702     		.2byte	0x247
 12756 19ec A5000000 		.4byte	0xa5
 12757 19f0 07       		.uleb128 0x7
 12758 19f1 99000000 		.4byte	0x99
 12759 19f5 001A0000 		.4byte	0x1a00
 12760 19f9 08       		.uleb128 0x8
 12761 19fa 0E010000 		.4byte	0x10e
 12762 19fe 04       		.byte	0x4
 12763 19ff 00       		.byte	0
 12764 1a00 27       		.uleb128 0x27
 12765 1a01 CC060000 		.4byte	.LASF330
 12766 1a05 07       		.byte	0x7
 12767 1a06 4A02     		.2byte	0x24a
 12768 1a08 F0190000 		.4byte	0x19f0
 12769 1a0c 27       		.uleb128 0x27
 12770 1a0d 3A0D0000 		.4byte	.LASF331
 12771 1a11 07       		.byte	0x7
 12772 1a12 4B02     		.2byte	0x24b
 12773 1a14 EA060000 		.4byte	0x6ea
 12774 1a18 07       		.uleb128 0x7
 12775 1a19 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 276


 12776 1a1d 2E1A0000 		.4byte	0x1a2e
 12777 1a21 08       		.uleb128 0x8
 12778 1a22 0E010000 		.4byte	0x10e
 12779 1a26 01       		.byte	0x1
 12780 1a27 08       		.uleb128 0x8
 12781 1a28 0E010000 		.4byte	0x10e
 12782 1a2c 04       		.byte	0x4
 12783 1a2d 00       		.byte	0
 12784 1a2e 27       		.uleb128 0x27
 12785 1a2f 6C0F0000 		.4byte	.LASF332
 12786 1a33 07       		.byte	0x7
 12787 1a34 4C02     		.2byte	0x24c
 12788 1a36 181A0000 		.4byte	0x1a18
 12789 1a3a 07       		.uleb128 0x7
 12790 1a3b 81000000 		.4byte	0x81
 12791 1a3f 501A0000 		.4byte	0x1a50
 12792 1a43 08       		.uleb128 0x8
 12793 1a44 0E010000 		.4byte	0x10e
 12794 1a48 01       		.byte	0x1
 12795 1a49 08       		.uleb128 0x8
 12796 1a4a 0E010000 		.4byte	0x10e
 12797 1a4e 04       		.byte	0x4
 12798 1a4f 00       		.byte	0
 12799 1a50 27       		.uleb128 0x27
 12800 1a51 AB060000 		.4byte	.LASF333
 12801 1a55 07       		.byte	0x7
 12802 1a56 4D02     		.2byte	0x24d
 12803 1a58 3A1A0000 		.4byte	0x1a3a
 12804 1a5c 27       		.uleb128 0x27
 12805 1a5d 5A0A0000 		.4byte	.LASF334
 12806 1a61 07       		.byte	0x7
 12807 1a62 5002     		.2byte	0x250
 12808 1a64 BD000000 		.4byte	0xbd
 12809 1a68 27       		.uleb128 0x27
 12810 1a69 C9050000 		.4byte	.LASF335
 12811 1a6d 07       		.byte	0x7
 12812 1a6e 5302     		.2byte	0x253
 12813 1a70 9F010000 		.4byte	0x19f
 12814 1a74 07       		.uleb128 0x7
 12815 1a75 A50A0000 		.4byte	0xaa5
 12816 1a79 841A0000 		.4byte	0x1a84
 12817 1a7d 08       		.uleb128 0x8
 12818 1a7e 0E010000 		.4byte	0x10e
 12819 1a82 04       		.byte	0x4
 12820 1a83 00       		.byte	0
 12821 1a84 27       		.uleb128 0x27
 12822 1a85 20050000 		.4byte	.LASF336
 12823 1a89 07       		.byte	0x7
 12824 1a8a 5C02     		.2byte	0x25c
 12825 1a8c 741A0000 		.4byte	0x1a74
 12826 1a90 27       		.uleb128 0x27
 12827 1a91 18060000 		.4byte	.LASF337
 12828 1a95 07       		.byte	0x7
 12829 1a96 5C02     		.2byte	0x25c
 12830 1a98 741A0000 		.4byte	0x1a74
 12831 1a9c 27       		.uleb128 0x27
 12832 1a9d B5100000 		.4byte	.LASF338
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 277


 12833 1aa1 07       		.byte	0x7
 12834 1aa2 6502     		.2byte	0x265
 12835 1aa4 81000000 		.4byte	0x81
 12836 1aa8 00       		.byte	0
 12837              		.section	.debug_abbrev,"",%progbits
 12838              	.Ldebug_abbrev0:
 12839 0000 01       		.uleb128 0x1
 12840 0001 11       		.uleb128 0x11
 12841 0002 01       		.byte	0x1
 12842 0003 25       		.uleb128 0x25
 12843 0004 0E       		.uleb128 0xe
 12844 0005 13       		.uleb128 0x13
 12845 0006 0B       		.uleb128 0xb
 12846 0007 03       		.uleb128 0x3
 12847 0008 0E       		.uleb128 0xe
 12848 0009 1B       		.uleb128 0x1b
 12849 000a 0E       		.uleb128 0xe
 12850 000b 55       		.uleb128 0x55
 12851 000c 17       		.uleb128 0x17
 12852 000d 11       		.uleb128 0x11
 12853 000e 01       		.uleb128 0x1
 12854 000f 10       		.uleb128 0x10
 12855 0010 17       		.uleb128 0x17
 12856 0011 00       		.byte	0
 12857 0012 00       		.byte	0
 12858 0013 02       		.uleb128 0x2
 12859 0014 24       		.uleb128 0x24
 12860 0015 00       		.byte	0
 12861 0016 0B       		.uleb128 0xb
 12862 0017 0B       		.uleb128 0xb
 12863 0018 3E       		.uleb128 0x3e
 12864 0019 0B       		.uleb128 0xb
 12865 001a 03       		.uleb128 0x3
 12866 001b 0E       		.uleb128 0xe
 12867 001c 00       		.byte	0
 12868 001d 00       		.byte	0
 12869 001e 03       		.uleb128 0x3
 12870 001f 16       		.uleb128 0x16
 12871 0020 00       		.byte	0
 12872 0021 03       		.uleb128 0x3
 12873 0022 0E       		.uleb128 0xe
 12874 0023 3A       		.uleb128 0x3a
 12875 0024 0B       		.uleb128 0xb
 12876 0025 3B       		.uleb128 0x3b
 12877 0026 0B       		.uleb128 0xb
 12878 0027 49       		.uleb128 0x49
 12879 0028 13       		.uleb128 0x13
 12880 0029 00       		.byte	0
 12881 002a 00       		.byte	0
 12882 002b 04       		.uleb128 0x4
 12883 002c 24       		.uleb128 0x24
 12884 002d 00       		.byte	0
 12885 002e 0B       		.uleb128 0xb
 12886 002f 0B       		.uleb128 0xb
 12887 0030 3E       		.uleb128 0x3e
 12888 0031 0B       		.uleb128 0xb
 12889 0032 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 278


 12890 0033 08       		.uleb128 0x8
 12891 0034 00       		.byte	0
 12892 0035 00       		.byte	0
 12893 0036 05       		.uleb128 0x5
 12894 0037 16       		.uleb128 0x16
 12895 0038 00       		.byte	0
 12896 0039 03       		.uleb128 0x3
 12897 003a 0E       		.uleb128 0xe
 12898 003b 3A       		.uleb128 0x3a
 12899 003c 0B       		.uleb128 0xb
 12900 003d 3B       		.uleb128 0x3b
 12901 003e 05       		.uleb128 0x5
 12902 003f 49       		.uleb128 0x49
 12903 0040 13       		.uleb128 0x13
 12904 0041 00       		.byte	0
 12905 0042 00       		.byte	0
 12906 0043 06       		.uleb128 0x6
 12907 0044 35       		.uleb128 0x35
 12908 0045 00       		.byte	0
 12909 0046 49       		.uleb128 0x49
 12910 0047 13       		.uleb128 0x13
 12911 0048 00       		.byte	0
 12912 0049 00       		.byte	0
 12913 004a 07       		.uleb128 0x7
 12914 004b 01       		.uleb128 0x1
 12915 004c 01       		.byte	0x1
 12916 004d 49       		.uleb128 0x49
 12917 004e 13       		.uleb128 0x13
 12918 004f 01       		.uleb128 0x1
 12919 0050 13       		.uleb128 0x13
 12920 0051 00       		.byte	0
 12921 0052 00       		.byte	0
 12922 0053 08       		.uleb128 0x8
 12923 0054 21       		.uleb128 0x21
 12924 0055 00       		.byte	0
 12925 0056 49       		.uleb128 0x49
 12926 0057 13       		.uleb128 0x13
 12927 0058 2F       		.uleb128 0x2f
 12928 0059 0B       		.uleb128 0xb
 12929 005a 00       		.byte	0
 12930 005b 00       		.byte	0
 12931 005c 09       		.uleb128 0x9
 12932 005d 04       		.uleb128 0x4
 12933 005e 01       		.byte	0x1
 12934 005f 03       		.uleb128 0x3
 12935 0060 0E       		.uleb128 0xe
 12936 0061 0B       		.uleb128 0xb
 12937 0062 0B       		.uleb128 0xb
 12938 0063 49       		.uleb128 0x49
 12939 0064 13       		.uleb128 0x13
 12940 0065 3A       		.uleb128 0x3a
 12941 0066 0B       		.uleb128 0xb
 12942 0067 3B       		.uleb128 0x3b
 12943 0068 0B       		.uleb128 0xb
 12944 0069 01       		.uleb128 0x1
 12945 006a 13       		.uleb128 0x13
 12946 006b 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 279


 12947 006c 00       		.byte	0
 12948 006d 0A       		.uleb128 0xa
 12949 006e 28       		.uleb128 0x28
 12950 006f 00       		.byte	0
 12951 0070 03       		.uleb128 0x3
 12952 0071 0E       		.uleb128 0xe
 12953 0072 1C       		.uleb128 0x1c
 12954 0073 0B       		.uleb128 0xb
 12955 0074 00       		.byte	0
 12956 0075 00       		.byte	0
 12957 0076 0B       		.uleb128 0xb
 12958 0077 13       		.uleb128 0x13
 12959 0078 00       		.byte	0
 12960 0079 03       		.uleb128 0x3
 12961 007a 0E       		.uleb128 0xe
 12962 007b 3C       		.uleb128 0x3c
 12963 007c 19       		.uleb128 0x19
 12964 007d 00       		.byte	0
 12965 007e 00       		.byte	0
 12966 007f 0C       		.uleb128 0xc
 12967 0080 0F       		.uleb128 0xf
 12968 0081 00       		.byte	0
 12969 0082 0B       		.uleb128 0xb
 12970 0083 0B       		.uleb128 0xb
 12971 0084 49       		.uleb128 0x49
 12972 0085 13       		.uleb128 0x13
 12973 0086 00       		.byte	0
 12974 0087 00       		.byte	0
 12975 0088 0D       		.uleb128 0xd
 12976 0089 13       		.uleb128 0x13
 12977 008a 01       		.byte	0x1
 12978 008b 03       		.uleb128 0x3
 12979 008c 0E       		.uleb128 0xe
 12980 008d 0B       		.uleb128 0xb
 12981 008e 0B       		.uleb128 0xb
 12982 008f 3A       		.uleb128 0x3a
 12983 0090 0B       		.uleb128 0xb
 12984 0091 3B       		.uleb128 0x3b
 12985 0092 0B       		.uleb128 0xb
 12986 0093 01       		.uleb128 0x1
 12987 0094 13       		.uleb128 0x13
 12988 0095 00       		.byte	0
 12989 0096 00       		.byte	0
 12990 0097 0E       		.uleb128 0xe
 12991 0098 0D       		.uleb128 0xd
 12992 0099 00       		.byte	0
 12993 009a 03       		.uleb128 0x3
 12994 009b 08       		.uleb128 0x8
 12995 009c 3A       		.uleb128 0x3a
 12996 009d 0B       		.uleb128 0xb
 12997 009e 3B       		.uleb128 0x3b
 12998 009f 0B       		.uleb128 0xb
 12999 00a0 49       		.uleb128 0x49
 13000 00a1 13       		.uleb128 0x13
 13001 00a2 38       		.uleb128 0x38
 13002 00a3 0B       		.uleb128 0xb
 13003 00a4 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 280


 13004 00a5 00       		.byte	0
 13005 00a6 0F       		.uleb128 0xf
 13006 00a7 0D       		.uleb128 0xd
 13007 00a8 00       		.byte	0
 13008 00a9 03       		.uleb128 0x3
 13009 00aa 0E       		.uleb128 0xe
 13010 00ab 3A       		.uleb128 0x3a
 13011 00ac 0B       		.uleb128 0xb
 13012 00ad 3B       		.uleb128 0x3b
 13013 00ae 0B       		.uleb128 0xb
 13014 00af 49       		.uleb128 0x49
 13015 00b0 13       		.uleb128 0x13
 13016 00b1 38       		.uleb128 0x38
 13017 00b2 0B       		.uleb128 0xb
 13018 00b3 00       		.byte	0
 13019 00b4 00       		.byte	0
 13020 00b5 10       		.uleb128 0x10
 13021 00b6 13       		.uleb128 0x13
 13022 00b7 01       		.byte	0x1
 13023 00b8 03       		.uleb128 0x3
 13024 00b9 0E       		.uleb128 0xe
 13025 00ba 0B       		.uleb128 0xb
 13026 00bb 0B       		.uleb128 0xb
 13027 00bc 3A       		.uleb128 0x3a
 13028 00bd 0B       		.uleb128 0xb
 13029 00be 3B       		.uleb128 0x3b
 13030 00bf 05       		.uleb128 0x5
 13031 00c0 01       		.uleb128 0x1
 13032 00c1 13       		.uleb128 0x13
 13033 00c2 00       		.byte	0
 13034 00c3 00       		.byte	0
 13035 00c4 11       		.uleb128 0x11
 13036 00c5 0D       		.uleb128 0xd
 13037 00c6 00       		.byte	0
 13038 00c7 03       		.uleb128 0x3
 13039 00c8 0E       		.uleb128 0xe
 13040 00c9 3A       		.uleb128 0x3a
 13041 00ca 0B       		.uleb128 0xb
 13042 00cb 3B       		.uleb128 0x3b
 13043 00cc 05       		.uleb128 0x5
 13044 00cd 49       		.uleb128 0x49
 13045 00ce 13       		.uleb128 0x13
 13046 00cf 38       		.uleb128 0x38
 13047 00d0 0B       		.uleb128 0xb
 13048 00d1 00       		.byte	0
 13049 00d2 00       		.byte	0
 13050 00d3 12       		.uleb128 0x12
 13051 00d4 0D       		.uleb128 0xd
 13052 00d5 00       		.byte	0
 13053 00d6 03       		.uleb128 0x3
 13054 00d7 08       		.uleb128 0x8
 13055 00d8 3A       		.uleb128 0x3a
 13056 00d9 0B       		.uleb128 0xb
 13057 00da 3B       		.uleb128 0x3b
 13058 00db 05       		.uleb128 0x5
 13059 00dc 49       		.uleb128 0x49
 13060 00dd 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 281


 13061 00de 38       		.uleb128 0x38
 13062 00df 0B       		.uleb128 0xb
 13063 00e0 00       		.byte	0
 13064 00e1 00       		.byte	0
 13065 00e2 13       		.uleb128 0x13
 13066 00e3 13       		.uleb128 0x13
 13067 00e4 01       		.byte	0x1
 13068 00e5 03       		.uleb128 0x3
 13069 00e6 0E       		.uleb128 0xe
 13070 00e7 0B       		.uleb128 0xb
 13071 00e8 05       		.uleb128 0x5
 13072 00e9 3A       		.uleb128 0x3a
 13073 00ea 0B       		.uleb128 0xb
 13074 00eb 3B       		.uleb128 0x3b
 13075 00ec 05       		.uleb128 0x5
 13076 00ed 01       		.uleb128 0x1
 13077 00ee 13       		.uleb128 0x13
 13078 00ef 00       		.byte	0
 13079 00f0 00       		.byte	0
 13080 00f1 14       		.uleb128 0x14
 13081 00f2 0D       		.uleb128 0xd
 13082 00f3 00       		.byte	0
 13083 00f4 03       		.uleb128 0x3
 13084 00f5 08       		.uleb128 0x8
 13085 00f6 3A       		.uleb128 0x3a
 13086 00f7 0B       		.uleb128 0xb
 13087 00f8 3B       		.uleb128 0x3b
 13088 00f9 05       		.uleb128 0x5
 13089 00fa 49       		.uleb128 0x49
 13090 00fb 13       		.uleb128 0x13
 13091 00fc 38       		.uleb128 0x38
 13092 00fd 05       		.uleb128 0x5
 13093 00fe 00       		.byte	0
 13094 00ff 00       		.byte	0
 13095 0100 15       		.uleb128 0x15
 13096 0101 0D       		.uleb128 0xd
 13097 0102 00       		.byte	0
 13098 0103 03       		.uleb128 0x3
 13099 0104 0E       		.uleb128 0xe
 13100 0105 3A       		.uleb128 0x3a
 13101 0106 0B       		.uleb128 0xb
 13102 0107 3B       		.uleb128 0x3b
 13103 0108 05       		.uleb128 0x5
 13104 0109 49       		.uleb128 0x49
 13105 010a 13       		.uleb128 0x13
 13106 010b 38       		.uleb128 0x38
 13107 010c 05       		.uleb128 0x5
 13108 010d 00       		.byte	0
 13109 010e 00       		.byte	0
 13110 010f 16       		.uleb128 0x16
 13111 0110 04       		.uleb128 0x4
 13112 0111 01       		.byte	0x1
 13113 0112 0B       		.uleb128 0xb
 13114 0113 0B       		.uleb128 0xb
 13115 0114 49       		.uleb128 0x49
 13116 0115 13       		.uleb128 0x13
 13117 0116 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 282


 13118 0117 0B       		.uleb128 0xb
 13119 0118 3B       		.uleb128 0x3b
 13120 0119 05       		.uleb128 0x5
 13121 011a 01       		.uleb128 0x1
 13122 011b 13       		.uleb128 0x13
 13123 011c 00       		.byte	0
 13124 011d 00       		.byte	0
 13125 011e 17       		.uleb128 0x17
 13126 011f 2E       		.uleb128 0x2e
 13127 0120 00       		.byte	0
 13128 0121 3F       		.uleb128 0x3f
 13129 0122 19       		.uleb128 0x19
 13130 0123 03       		.uleb128 0x3
 13131 0124 0E       		.uleb128 0xe
 13132 0125 3A       		.uleb128 0x3a
 13133 0126 0B       		.uleb128 0xb
 13134 0127 3B       		.uleb128 0x3b
 13135 0128 0B       		.uleb128 0xb
 13136 0129 27       		.uleb128 0x27
 13137 012a 19       		.uleb128 0x19
 13138 012b 11       		.uleb128 0x11
 13139 012c 01       		.uleb128 0x1
 13140 012d 12       		.uleb128 0x12
 13141 012e 06       		.uleb128 0x6
 13142 012f 40       		.uleb128 0x40
 13143 0130 18       		.uleb128 0x18
 13144 0131 9742     		.uleb128 0x2117
 13145 0133 19       		.uleb128 0x19
 13146 0134 00       		.byte	0
 13147 0135 00       		.byte	0
 13148 0136 18       		.uleb128 0x18
 13149 0137 2E       		.uleb128 0x2e
 13150 0138 01       		.byte	0x1
 13151 0139 3F       		.uleb128 0x3f
 13152 013a 19       		.uleb128 0x19
 13153 013b 03       		.uleb128 0x3
 13154 013c 0E       		.uleb128 0xe
 13155 013d 3A       		.uleb128 0x3a
 13156 013e 0B       		.uleb128 0xb
 13157 013f 3B       		.uleb128 0x3b
 13158 0140 0B       		.uleb128 0xb
 13159 0141 11       		.uleb128 0x11
 13160 0142 01       		.uleb128 0x1
 13161 0143 12       		.uleb128 0x12
 13162 0144 06       		.uleb128 0x6
 13163 0145 40       		.uleb128 0x40
 13164 0146 18       		.uleb128 0x18
 13165 0147 9642     		.uleb128 0x2116
 13166 0149 19       		.uleb128 0x19
 13167 014a 01       		.uleb128 0x1
 13168 014b 13       		.uleb128 0x13
 13169 014c 00       		.byte	0
 13170 014d 00       		.byte	0
 13171 014e 19       		.uleb128 0x19
 13172 014f 34       		.uleb128 0x34
 13173 0150 00       		.byte	0
 13174 0151 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 283


 13175 0152 0E       		.uleb128 0xe
 13176 0153 3A       		.uleb128 0x3a
 13177 0154 0B       		.uleb128 0xb
 13178 0155 3B       		.uleb128 0x3b
 13179 0156 0B       		.uleb128 0xb
 13180 0157 49       		.uleb128 0x49
 13181 0158 13       		.uleb128 0x13
 13182 0159 02       		.uleb128 0x2
 13183 015a 18       		.uleb128 0x18
 13184 015b 00       		.byte	0
 13185 015c 00       		.byte	0
 13186 015d 1A       		.uleb128 0x1a
 13187 015e 2E       		.uleb128 0x2e
 13188 015f 01       		.byte	0x1
 13189 0160 3F       		.uleb128 0x3f
 13190 0161 19       		.uleb128 0x19
 13191 0162 03       		.uleb128 0x3
 13192 0163 0E       		.uleb128 0xe
 13193 0164 3A       		.uleb128 0x3a
 13194 0165 0B       		.uleb128 0xb
 13195 0166 3B       		.uleb128 0x3b
 13196 0167 05       		.uleb128 0x5
 13197 0168 27       		.uleb128 0x27
 13198 0169 19       		.uleb128 0x19
 13199 016a 11       		.uleb128 0x11
 13200 016b 01       		.uleb128 0x1
 13201 016c 12       		.uleb128 0x12
 13202 016d 06       		.uleb128 0x6
 13203 016e 40       		.uleb128 0x40
 13204 016f 18       		.uleb128 0x18
 13205 0170 9642     		.uleb128 0x2116
 13206 0172 19       		.uleb128 0x19
 13207 0173 01       		.uleb128 0x1
 13208 0174 13       		.uleb128 0x13
 13209 0175 00       		.byte	0
 13210 0176 00       		.byte	0
 13211 0177 1B       		.uleb128 0x1b
 13212 0178 34       		.uleb128 0x34
 13213 0179 00       		.byte	0
 13214 017a 03       		.uleb128 0x3
 13215 017b 0E       		.uleb128 0xe
 13216 017c 3A       		.uleb128 0x3a
 13217 017d 0B       		.uleb128 0xb
 13218 017e 3B       		.uleb128 0x3b
 13219 017f 05       		.uleb128 0x5
 13220 0180 49       		.uleb128 0x49
 13221 0181 13       		.uleb128 0x13
 13222 0182 02       		.uleb128 0x2
 13223 0183 18       		.uleb128 0x18
 13224 0184 00       		.byte	0
 13225 0185 00       		.byte	0
 13226 0186 1C       		.uleb128 0x1c
 13227 0187 0B       		.uleb128 0xb
 13228 0188 01       		.byte	0x1
 13229 0189 11       		.uleb128 0x11
 13230 018a 01       		.uleb128 0x1
 13231 018b 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 284


 13232 018c 06       		.uleb128 0x6
 13233 018d 00       		.byte	0
 13234 018e 00       		.byte	0
 13235 018f 1D       		.uleb128 0x1d
 13236 0190 34       		.uleb128 0x34
 13237 0191 00       		.byte	0
 13238 0192 03       		.uleb128 0x3
 13239 0193 08       		.uleb128 0x8
 13240 0194 3A       		.uleb128 0x3a
 13241 0195 0B       		.uleb128 0xb
 13242 0196 3B       		.uleb128 0x3b
 13243 0197 05       		.uleb128 0x5
 13244 0198 49       		.uleb128 0x49
 13245 0199 13       		.uleb128 0x13
 13246 019a 02       		.uleb128 0x2
 13247 019b 18       		.uleb128 0x18
 13248 019c 00       		.byte	0
 13249 019d 00       		.byte	0
 13250 019e 1E       		.uleb128 0x1e
 13251 019f 21       		.uleb128 0x21
 13252 01a0 00       		.byte	0
 13253 01a1 49       		.uleb128 0x49
 13254 01a2 13       		.uleb128 0x13
 13255 01a3 2F       		.uleb128 0x2f
 13256 01a4 05       		.uleb128 0x5
 13257 01a5 00       		.byte	0
 13258 01a6 00       		.byte	0
 13259 01a7 1F       		.uleb128 0x1f
 13260 01a8 05       		.uleb128 0x5
 13261 01a9 00       		.byte	0
 13262 01aa 03       		.uleb128 0x3
 13263 01ab 0E       		.uleb128 0xe
 13264 01ac 3A       		.uleb128 0x3a
 13265 01ad 0B       		.uleb128 0xb
 13266 01ae 3B       		.uleb128 0x3b
 13267 01af 05       		.uleb128 0x5
 13268 01b0 49       		.uleb128 0x49
 13269 01b1 13       		.uleb128 0x13
 13270 01b2 02       		.uleb128 0x2
 13271 01b3 18       		.uleb128 0x18
 13272 01b4 00       		.byte	0
 13273 01b5 00       		.byte	0
 13274 01b6 20       		.uleb128 0x20
 13275 01b7 0B       		.uleb128 0xb
 13276 01b8 01       		.byte	0x1
 13277 01b9 55       		.uleb128 0x55
 13278 01ba 17       		.uleb128 0x17
 13279 01bb 00       		.byte	0
 13280 01bc 00       		.byte	0
 13281 01bd 21       		.uleb128 0x21
 13282 01be 2E       		.uleb128 0x2e
 13283 01bf 01       		.byte	0x1
 13284 01c0 3F       		.uleb128 0x3f
 13285 01c1 19       		.uleb128 0x19
 13286 01c2 03       		.uleb128 0x3
 13287 01c3 0E       		.uleb128 0xe
 13288 01c4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 285


 13289 01c5 0B       		.uleb128 0xb
 13290 01c6 3B       		.uleb128 0x3b
 13291 01c7 05       		.uleb128 0x5
 13292 01c8 27       		.uleb128 0x27
 13293 01c9 19       		.uleb128 0x19
 13294 01ca 11       		.uleb128 0x11
 13295 01cb 01       		.uleb128 0x1
 13296 01cc 12       		.uleb128 0x12
 13297 01cd 06       		.uleb128 0x6
 13298 01ce 40       		.uleb128 0x40
 13299 01cf 18       		.uleb128 0x18
 13300 01d0 9742     		.uleb128 0x2117
 13301 01d2 19       		.uleb128 0x19
 13302 01d3 01       		.uleb128 0x1
 13303 01d4 13       		.uleb128 0x13
 13304 01d5 00       		.byte	0
 13305 01d6 00       		.byte	0
 13306 01d7 22       		.uleb128 0x22
 13307 01d8 0B       		.uleb128 0xb
 13308 01d9 01       		.byte	0x1
 13309 01da 55       		.uleb128 0x55
 13310 01db 17       		.uleb128 0x17
 13311 01dc 01       		.uleb128 0x1
 13312 01dd 13       		.uleb128 0x13
 13313 01de 00       		.byte	0
 13314 01df 00       		.byte	0
 13315 01e0 23       		.uleb128 0x23
 13316 01e1 2E       		.uleb128 0x2e
 13317 01e2 01       		.byte	0x1
 13318 01e3 3F       		.uleb128 0x3f
 13319 01e4 19       		.uleb128 0x19
 13320 01e5 03       		.uleb128 0x3
 13321 01e6 0E       		.uleb128 0xe
 13322 01e7 3A       		.uleb128 0x3a
 13323 01e8 0B       		.uleb128 0xb
 13324 01e9 3B       		.uleb128 0x3b
 13325 01ea 05       		.uleb128 0x5
 13326 01eb 11       		.uleb128 0x11
 13327 01ec 01       		.uleb128 0x1
 13328 01ed 12       		.uleb128 0x12
 13329 01ee 06       		.uleb128 0x6
 13330 01ef 40       		.uleb128 0x40
 13331 01f0 18       		.uleb128 0x18
 13332 01f1 9642     		.uleb128 0x2116
 13333 01f3 19       		.uleb128 0x19
 13334 01f4 01       		.uleb128 0x1
 13335 01f5 13       		.uleb128 0x13
 13336 01f6 00       		.byte	0
 13337 01f7 00       		.byte	0
 13338 01f8 24       		.uleb128 0x24
 13339 01f9 05       		.uleb128 0x5
 13340 01fa 00       		.byte	0
 13341 01fb 03       		.uleb128 0x3
 13342 01fc 08       		.uleb128 0x8
 13343 01fd 3A       		.uleb128 0x3a
 13344 01fe 0B       		.uleb128 0xb
 13345 01ff 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 286


 13346 0200 05       		.uleb128 0x5
 13347 0201 49       		.uleb128 0x49
 13348 0202 13       		.uleb128 0x13
 13349 0203 02       		.uleb128 0x2
 13350 0204 18       		.uleb128 0x18
 13351 0205 00       		.byte	0
 13352 0206 00       		.byte	0
 13353 0207 25       		.uleb128 0x25
 13354 0208 2E       		.uleb128 0x2e
 13355 0209 01       		.byte	0x1
 13356 020a 3F       		.uleb128 0x3f
 13357 020b 19       		.uleb128 0x19
 13358 020c 03       		.uleb128 0x3
 13359 020d 0E       		.uleb128 0xe
 13360 020e 3A       		.uleb128 0x3a
 13361 020f 0B       		.uleb128 0xb
 13362 0210 3B       		.uleb128 0x3b
 13363 0211 05       		.uleb128 0x5
 13364 0212 11       		.uleb128 0x11
 13365 0213 01       		.uleb128 0x1
 13366 0214 12       		.uleb128 0x12
 13367 0215 06       		.uleb128 0x6
 13368 0216 40       		.uleb128 0x40
 13369 0217 18       		.uleb128 0x18
 13370 0218 9742     		.uleb128 0x2117
 13371 021a 19       		.uleb128 0x19
 13372 021b 01       		.uleb128 0x1
 13373 021c 13       		.uleb128 0x13
 13374 021d 00       		.byte	0
 13375 021e 00       		.byte	0
 13376 021f 26       		.uleb128 0x26
 13377 0220 26       		.uleb128 0x26
 13378 0221 00       		.byte	0
 13379 0222 49       		.uleb128 0x49
 13380 0223 13       		.uleb128 0x13
 13381 0224 00       		.byte	0
 13382 0225 00       		.byte	0
 13383 0226 27       		.uleb128 0x27
 13384 0227 34       		.uleb128 0x34
 13385 0228 00       		.byte	0
 13386 0229 03       		.uleb128 0x3
 13387 022a 0E       		.uleb128 0xe
 13388 022b 3A       		.uleb128 0x3a
 13389 022c 0B       		.uleb128 0xb
 13390 022d 3B       		.uleb128 0x3b
 13391 022e 05       		.uleb128 0x5
 13392 022f 49       		.uleb128 0x49
 13393 0230 13       		.uleb128 0x13
 13394 0231 3F       		.uleb128 0x3f
 13395 0232 19       		.uleb128 0x19
 13396 0233 3C       		.uleb128 0x3c
 13397 0234 19       		.uleb128 0x19
 13398 0235 00       		.byte	0
 13399 0236 00       		.byte	0
 13400 0237 00       		.byte	0
 13401              		.section	.debug_aranges,"",%progbits
 13402 0000 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 287


 13403 0004 0200     		.2byte	0x2
 13404 0006 00000000 		.4byte	.Ldebug_info0
 13405 000a 04       		.byte	0x4
 13406 000b 00       		.byte	0
 13407 000c 0000     		.2byte	0
 13408 000e 0000     		.2byte	0
 13409 0010 00000000 		.4byte	.LFB64
 13410 0014 18000000 		.4byte	.LFE64-.LFB64
 13411 0018 00000000 		.4byte	.LFB65
 13412 001c 20000000 		.4byte	.LFE65-.LFB65
 13413 0020 00000000 		.4byte	.LFB66
 13414 0024 F4010000 		.4byte	.LFE66-.LFB66
 13415 0028 00000000 		.4byte	.LFB67
 13416 002c 2C060000 		.4byte	.LFE67-.LFB67
 13417 0030 00000000 		.4byte	.LFB68
 13418 0034 CC050000 		.4byte	.LFE68-.LFB68
 13419 0038 00000000 		.4byte	.LFB69
 13420 003c 34030000 		.4byte	.LFE69-.LFB69
 13421 0040 00000000 		.4byte	.LFB70
 13422 0044 B0010000 		.4byte	.LFE70-.LFB70
 13423 0048 00000000 		.4byte	.LFB71
 13424 004c 08070000 		.4byte	.LFE71-.LFB71
 13425 0050 00000000 		.4byte	.LFB72
 13426 0054 40080000 		.4byte	.LFE72-.LFB72
 13427 0058 00000000 		.4byte	.LFB73
 13428 005c 10080000 		.4byte	.LFE73-.LFB73
 13429 0060 00000000 		.4byte	.LFB74
 13430 0064 98110000 		.4byte	.LFE74-.LFB74
 13431 0068 00000000 		.4byte	.LFB75
 13432 006c F4000000 		.4byte	.LFE75-.LFB75
 13433 0070 00000000 		.4byte	.LFB76
 13434 0074 78000000 		.4byte	.LFE76-.LFB76
 13435 0078 00000000 		.4byte	.LFB77
 13436 007c 08040000 		.4byte	.LFE77-.LFB77
 13437 0080 00000000 		.4byte	.LFB78
 13438 0084 08010000 		.4byte	.LFE78-.LFB78
 13439 0088 00000000 		.4byte	0
 13440 008c 00000000 		.4byte	0
 13441              		.section	.debug_ranges,"",%progbits
 13442              	.Ldebug_ranges0:
 13443 0000 68010000 		.4byte	.LBB3
 13444 0004 AA010000 		.4byte	.LBE3
 13445 0008 AC010000 		.4byte	.LBB4
 13446 000c F2010000 		.4byte	.LBE4
 13447 0010 00000000 		.4byte	0
 13448 0014 00000000 		.4byte	0
 13449 0018 3A000000 		.4byte	.LBB5
 13450 001c 40010000 		.4byte	.LBE5
 13451 0020 42010000 		.4byte	.LBB6
 13452 0024 BC010000 		.4byte	.LBE6
 13453 0028 00000000 		.4byte	0
 13454 002c 00000000 		.4byte	0
 13455 0030 BE010000 		.4byte	.LBB7
 13456 0034 20030000 		.4byte	.LBE7
 13457 0038 22030000 		.4byte	.LBB8
 13458 003c 24030000 		.4byte	.LBE8
 13459 0040 00000000 		.4byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 288


 13460 0044 00000000 		.4byte	0
 13461 0048 00000000 		.4byte	.LFB64
 13462 004c 18000000 		.4byte	.LFE64
 13463 0050 00000000 		.4byte	.LFB65
 13464 0054 20000000 		.4byte	.LFE65
 13465 0058 00000000 		.4byte	.LFB66
 13466 005c F4010000 		.4byte	.LFE66
 13467 0060 00000000 		.4byte	.LFB67
 13468 0064 2C060000 		.4byte	.LFE67
 13469 0068 00000000 		.4byte	.LFB68
 13470 006c CC050000 		.4byte	.LFE68
 13471 0070 00000000 		.4byte	.LFB69
 13472 0074 34030000 		.4byte	.LFE69
 13473 0078 00000000 		.4byte	.LFB70
 13474 007c B0010000 		.4byte	.LFE70
 13475 0080 00000000 		.4byte	.LFB71
 13476 0084 08070000 		.4byte	.LFE71
 13477 0088 00000000 		.4byte	.LFB72
 13478 008c 40080000 		.4byte	.LFE72
 13479 0090 00000000 		.4byte	.LFB73
 13480 0094 10080000 		.4byte	.LFE73
 13481 0098 00000000 		.4byte	.LFB74
 13482 009c 98110000 		.4byte	.LFE74
 13483 00a0 00000000 		.4byte	.LFB75
 13484 00a4 F4000000 		.4byte	.LFE75
 13485 00a8 00000000 		.4byte	.LFB76
 13486 00ac 78000000 		.4byte	.LFE76
 13487 00b0 00000000 		.4byte	.LFB77
 13488 00b4 08040000 		.4byte	.LFE77
 13489 00b8 00000000 		.4byte	.LFB78
 13490 00bc 08010000 		.4byte	.LFE78
 13491 00c0 00000000 		.4byte	0
 13492 00c4 00000000 		.4byte	0
 13493              		.section	.debug_line,"",%progbits
 13494              	.Ldebug_line0:
 13495 0000 5A0B0000 		.section	.debug_str,"MS",%progbits,1
 13495      0200AC01 
 13495      00000201 
 13495      FB0E0D00 
 13495      01010101 
 13496              	.LASF24:
 13497 0000 73697A65 		.ascii	"sizetype\000"
 13497      74797065 
 13497      00
 13498              	.LASF263:
 13499 0009 706F735F 		.ascii	"pos_cycle_status\000"
 13499      6379636C 
 13499      655F7374 
 13499      61747573 
 13499      00
 13500              	.LASF141:
 13501 001a 77726973 		.ascii	"wrist_direction_association\000"
 13501      745F6469 
 13501      72656374 
 13501      696F6E5F 
 13501      6173736F 
 13502              	.LASF30:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 289


 13503 0036 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 13503      545F4D4F 
 13503      44455F45 
 13503      4D475F46 
 13503      4346535F 
 13504              	.LASF117:
 13505 004e 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 13505      5F414443 
 13505      5F73656E 
 13505      736F7273 
 13505      5F706F72 
 13506              	.LASF146:
 13507 0069 75736572 		.ascii	"user\000"
 13507      00
 13508              	.LASF10:
 13509 006e 696E7433 		.ascii	"int32_t\000"
 13509      325F7400 
 13510              	.LASF296:
 13511 0076 675F7278 		.ascii	"g_rx\000"
 13511      00
 13512              	.LASF240:
 13513 007b 6F6E655F 		.ascii	"one_time_execute\000"
 13513      74696D65 
 13513      5F657865 
 13513      63757465 
 13513      00
 13514              	.LASF49:
 13515 008c 73745F64 		.ascii	"st_data\000"
 13515      61746100 
 13516              	.LASF13:
 13517 0094 75696E74 		.ascii	"uint32\000"
 13517      333200
 13518              	.LASF225:
 13519 009b 6E5F6C69 		.ascii	"n_line\000"
 13519      6E6500
 13520              	.LASF147:
 13521 00a2 4A4F595F 		.ascii	"JOY_spec\000"
 13521      73706563 
 13521      00
 13522              	.LASF85:
 13523 00ab 706F735F 		.ascii	"pos_lim_inf\000"
 13523      6C696D5F 
 13523      696E6600 
 13524              	.LASF319:
 13525 00b7 74656E73 		.ascii	"tension_valid\000"
 13525      696F6E5F 
 13525      76616C69 
 13525      6400
 13526              	.LASF201:
 13527 00c5 6572725F 		.ascii	"err_joy_1\000"
 13527      6A6F795F 
 13527      3100
 13528              	.LASF178:
 13529 00cf 73746174 		.ascii	"state\000"
 13529      6500
 13530              	.LASF321:
 13531 00d5 6379636C 		.ascii	"cycles_interrupt_flag\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 290


 13531      65735F69 
 13531      6E746572 
 13531      72757074 
 13531      5F666C61 
 13532              	.LASF270:
 13533 00eb 62696E5F 		.ascii	"bin_max\000"
 13533      6D617800 
 13534              	.LASF284:
 13535 00f3 61646472 		.ascii	"addr_start_c\000"
 13535      5F737461 
 13535      72745F63 
 13535      00
 13536              	.LASF29:
 13537 0100 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 13537      545F4D4F 
 13537      44455F45 
 13537      4D475F46 
 13537      43465300 
 13538              	.LASF89:
 13539 0114 63757272 		.ascii	"curr_lookup\000"
 13539      5F6C6F6F 
 13539      6B757000 
 13540              	.LASF210:
 13541 0120 70776D5F 		.ascii	"pwm_input\000"
 13541      696E7075 
 13541      7400
 13542              	.LASF57:
 13543 012a 72657374 		.ascii	"rest_counter\000"
 13543      5F636F75 
 13543      6E746572 
 13543      00
 13544              	.LASF131:
 13545 0137 73745F4D 		.ascii	"st_MASTER_spec\000"
 13545      41535445 
 13545      525F7370 
 13545      656300
 13546              	.LASF28:
 13547 0146 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 13547      545F4D4F 
 13547      44455F45 
 13547      4D475F49 
 13547      4E544547 
 13548              	.LASF256:
 13549 015e 765F636F 		.ascii	"v_count\000"
 13549      756E7400 
 13550              	.LASF183:
 13551 0166 72785F64 		.ascii	"rx_data\000"
 13551      61746100 
 13552              	.LASF245:
 13553 016e 7676765F 		.ascii	"vvv_value\000"
 13553      76616C75 
 13553      6500
 13554              	.LASF14:
 13555 0178 696E7438 		.ascii	"int8\000"
 13555      00
 13556              	.LASF188:
 13557 017d 696E666F 		.ascii	"info_\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 291


 13557      5F00
 13558              	.LASF304:
 13559 0183 66696C74 		.ascii	"filt_emg\000"
 13559      5F656D67 
 13559      00
 13560              	.LASF104:
 13561 018c 73745F65 		.ascii	"st_emg\000"
 13561      6D6700
 13562              	.LASF55:
 13563 0193 706F7369 		.ascii	"position_hist\000"
 13563      74696F6E 
 13563      5F686973 
 13563      7400
 13564              	.LASF170:
 13565 01a1 50524550 		.ascii	"PREPARE_DATA\000"
 13565      4152455F 
 13565      44415441 
 13565      00
 13566              	.LASF154:
 13567 01ae 74656D70 		.ascii	"temp_value\000"
 13567      5F76616C 
 13567      756500
 13568              	.LASF267:
 13569 01b9 7468725F 		.ascii	"thr_pos\000"
 13569      706F7300 
 13570              	.LASF138:
 13571 01c1 73745F57 		.ascii	"st_WR_spec\000"
 13571      525F7370 
 13571      656300
 13572              	.LASF203:
 13573 01cc 6572725F 		.ascii	"err_joy_2\000"
 13573      6A6F795F 
 13573      3200
 13574              	.LASF52:
 13575 01d6 72656164 		.ascii	"ready\000"
 13575      7900
 13576              	.LASF101:
 13577 01dc 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 13577      6964785F 
 13577      7573655F 
 13577      666F725F 
 13577      636F6E74 
 13578              	.LASF157:
 13579 01f4 6761696E 		.ascii	"gain\000"
 13579      00
 13580              	.LASF61:
 13581 01f9 73745F64 		.ascii	"st_device\000"
 13581      65766963 
 13581      6500
 13582              	.LASF27:
 13583 0203 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 13583      545F4D4F 
 13583      44455F45 
 13583      4D475F50 
 13583      524F504F 
 13584              	.LASF66:
 13585 021f 7573655F 		.ascii	"use_2nd_motor_flag\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 292


 13585      326E645F 
 13585      6D6F746F 
 13585      725F666C 
 13585      616700
 13586              	.LASF250:
 13587 0232 55445F63 		.ascii	"UD_counter\000"
 13587      6F756E74 
 13587      657200
 13588              	.LASF166:
 13589 023d 53554D5F 		.ascii	"SUM_AND_MEAN\000"
 13589      414E445F 
 13589      4D45414E 
 13589      00
 13590              	.LASF111:
 13591 024a 72656164 		.ascii	"read_imu_flag\000"
 13591      5F696D75 
 13591      5F666C61 
 13591      6700
 13592              	.LASF254:
 13593 0258 66697273 		.ascii	"first_tension_valid\000"
 13593      745F7465 
 13593      6E73696F 
 13593      6E5F7661 
 13593      6C696400 
 13594              	.LASF305:
 13595 026c 74696D65 		.ascii	"timer_value\000"
 13595      725F7661 
 13595      6C756500 
 13596              	.LASF4:
 13597 0278 6C6F6E67 		.ascii	"long int\000"
 13597      20696E74 
 13597      00
 13598              	.LASF144:
 13599 0281 756E7573 		.ascii	"unused_bytes1\000"
 13599      65645F62 
 13599      79746573 
 13599      3100
 13600              	.LASF193:
 13601 028f 6D6F746F 		.ascii	"motor_idx\000"
 13601      725F6964 
 13601      7800
 13602              	.LASF215:
 13603 0299 53485F45 		.ascii	"SH_ENC_L\000"
 13603      4E435F4C 
 13603      00
 13604              	.LASF65:
 13605 02a2 72657365 		.ascii	"reset_counters\000"
 13605      745F636F 
 13605      756E7465 
 13605      727300
 13606              	.LASF266:
 13607 02b1 62696E5F 		.ascii	"bin_threshold\000"
 13607      74687265 
 13607      73686F6C 
 13607      6400
 13608              	.LASF121:
 13609 02bf 75736572 		.ascii	"user_emg\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 293


 13609      5F656D67 
 13609      00
 13610              	.LASF239:
 13611 02c8 73616665 		.ascii	"safe_startup_motor_activation\000"
 13611      5F737461 
 13611      72747570 
 13611      5F6D6F74 
 13611      6F725F61 
 13612              	.LASF70:
 13613 02e6 756E7573 		.ascii	"unused_bytes\000"
 13613      65645F62 
 13613      79746573 
 13613      00
 13614              	.LASF150:
 13615 02f3 61636365 		.ascii	"accel_value\000"
 13615      6C5F7661 
 13615      6C756500 
 13616              	.LASF295:
 13617 02ff 675F6164 		.ascii	"g_adc_measOld\000"
 13617      635F6D65 
 13617      61734F6C 
 13617      6400
 13618              	.LASF228:
 13619 030d 6175785F 		.ascii	"aux_encoder\000"
 13619      656E636F 
 13619      64657200 
 13620              	.LASF53:
 13621 0319 73745F63 		.ascii	"st_counters\000"
 13621      6F756E74 
 13621      65727300 
 13622              	.LASF214:
 13623 0325 53485F4D 		.ascii	"SH_MOT\000"
 13623      4F5400
 13624              	.LASF17:
 13625 032c 666C6F61 		.ascii	"float32\000"
 13625      74333200 
 13626              	.LASF224:
 13627 0334 656E636F 		.ascii	"encoder_reading_SPI\000"
 13627      6465725F 
 13627      72656164 
 13627      696E675F 
 13627      53504900 
 13628              	.LASF237:
 13629 0348 6572726F 		.ascii	"error\000"
 13629      7200
 13630              	.LASF54:
 13631 034e 656D675F 		.ascii	"emg_counter\000"
 13631      636F756E 
 13631      74657200 
 13632              	.LASF173:
 13633 035a 57524954 		.ascii	"WRITE_END\000"
 13633      455F454E 
 13633      4400
 13634              	.LASF251:
 13635 0364 4C525F63 		.ascii	"LR_counter\000"
 13635      6F756E74 
 13635      657200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 294


 13636              	.LASF242:
 13637 036f 706F735F 		.ascii	"pos_reconstruct\000"
 13637      7265636F 
 13637      6E737472 
 13637      75637400 
 13638              	.LASF258:
 13639 037f 70776D5F 		.ascii	"pwm_limit_search\000"
 13639      6C696D69 
 13639      745F7365 
 13639      61726368 
 13639      00
 13640              	.LASF0:
 13641 0390 7369676E 		.ascii	"signed char\000"
 13641      65642063 
 13641      68617200 
 13642              	.LASF120:
 13643 039c 75736572 		.ascii	"user_code_string\000"
 13643      5F636F64 
 13643      655F7374 
 13643      72696E67 
 13643      00
 13644              	.LASF158:
 13645 03ad 73745F63 		.ascii	"st_calib\000"
 13645      616C6962 
 13645      00
 13646              	.LASF197:
 13647 03b6 6572725F 		.ascii	"err_emg_1\000"
 13647      656D675F 
 13647      3100
 13648              	.LASF198:
 13649 03c0 6572725F 		.ascii	"err_emg_2\000"
 13649      656D675F 
 13649      3200
 13650              	.LASF109:
 13651 03ca 73776974 		.ascii	"switch_emg\000"
 13651      63685F65 
 13651      6D6700
 13652              	.LASF315:
 13653 03d5 656D675F 		.ascii	"emg_2_status\000"
 13653      325F7374 
 13653      61747573 
 13653      00
 13654              	.LASF327:
 13655 03e2 4144435F 		.ascii	"ADC_buf\000"
 13655      62756600 
 13656              	.LASF320:
 13657 03ea 696E7465 		.ascii	"interrupt_flag\000"
 13657      72727570 
 13657      745F666C 
 13657      616700
 13658              	.LASF276:
 13659 03f9 73746570 		.ascii	"step\000"
 13659      00
 13660              	.LASF217:
 13661 03fe 63757272 		.ascii	"curr_error_sum\000"
 13661      5F657272 
 13661      6F725F73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 295


 13661      756D00
 13662              	.LASF1:
 13663 040d 756E7369 		.ascii	"unsigned char\000"
 13663      676E6564 
 13663      20636861 
 13663      7200
 13664              	.LASF95:
 13665 041b 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 13665      72657665 
 13665      72735F6D 
 13665      6F746F72 
 13665      5F666C61 
 13666              	.LASF282:
 13667 0431 726F775F 		.ascii	"row_start\000"
 13667      73746172 
 13667      7400
 13668              	.LASF324:
 13669 043b 666F7263 		.ascii	"forced_open\000"
 13669      65645F6F 
 13669      70656E00 
 13670              	.LASF232:
 13671 0447 73706565 		.ascii	"speed_encoder\000"
 13671      645F656E 
 13671      636F6465 
 13671      7200
 13672              	.LASF290:
 13673 0455 675F7265 		.ascii	"g_refNew\000"
 13673      664E6577 
 13673      00
 13674              	.LASF274:
 13675 045e 63757272 		.ascii	"curr_off\000"
 13675      5F6F6666 
 13675      00
 13676              	.LASF64:
 13677 0467 72696768 		.ascii	"right_left\000"
 13677      745F6C65 
 13677      667400
 13678              	.LASF93:
 13679 0472 656E636F 		.ascii	"encoder_line\000"
 13679      6465725F 
 13679      6C696E65 
 13679      00
 13680              	.LASF341:
 13681 047f 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 13681      73657273 
 13681      5C4D6174 
 13681      7469615C 
 13681      446F6375 
 13682 04ad 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Generic.cydsn\000"
 13682      656E6572 
 13682      69632D46 
 13682      572D5053 
 13682      6F43355C 
 13683              	.LASF314:
 13684 04cf 656D675F 		.ascii	"emg_1_status\000"
 13684      315F7374 
 13684      61747573 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 296


 13684      00
 13685              	.LASF149:
 13686 04dc 666C6167 		.ascii	"flags\000"
 13686      7300
 13687              	.LASF196:
 13688 04e2 68616E64 		.ascii	"handle_value\000"
 13688      6C655F76 
 13688      616C7565 
 13688      00
 13689              	.LASF20:
 13690 04ef 63686172 		.ascii	"char\000"
 13690      00
 13691              	.LASF88:
 13692 04f4 6D61785F 		.ascii	"max_step_pos\000"
 13692      73746570 
 13692      5F706F73 
 13692      00
 13693              	.LASF329:
 13694 0501 70776D5F 		.ascii	"pwm_sign\000"
 13694      7369676E 
 13694      00
 13695              	.LASF223:
 13696 050a 6D6F746F 		.ascii	"motor_control_generic\000"
 13696      725F636F 
 13696      6E74726F 
 13696      6C5F6765 
 13696      6E657269 
 13697              	.LASF336:
 13698 0520 675F696D 		.ascii	"g_imu\000"
 13698      7500
 13699              	.LASF303:
 13700 0526 66696C74 		.ascii	"filt_vel\000"
 13700      5F76656C 
 13700      00
 13701              	.LASF94:
 13702 052f 70776D5F 		.ascii	"pwm_rate_limiter\000"
 13702      72617465 
 13702      5F6C696D 
 13702      69746572 
 13702      00
 13703              	.LASF74:
 13704 0540 6B5F645F 		.ascii	"k_d_c\000"
 13704      6300
 13705              	.LASF169:
 13706 0546 6164635F 		.ascii	"adc_status\000"
 13706      73746174 
 13706      757300
 13707              	.LASF99:
 13708 0551 6D5F6D75 		.ascii	"m_mult\000"
 13708      6C7400
 13709              	.LASF73:
 13710 0558 6B5F695F 		.ascii	"k_i_c\000"
 13710      6300
 13711              	.LASF221:
 13712 055e 6D6F746F 		.ascii	"motor_dir\000"
 13712      725F6469 
 13712      7200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 297


 13713              	.LASF269:
 13714 0568 62696E5F 		.ascii	"bin_st\000"
 13714      737400
 13715              	.LASF176:
 13716 056f 4953525F 		.ascii	"ISR_RS485_RX_ExInterrupt\000"
 13716      52533438 
 13716      355F5258 
 13716      5F457849 
 13716      6E746572 
 13717              	.LASF86:
 13718 0588 706F735F 		.ascii	"pos_lim_sup\000"
 13718      6C696D5F 
 13718      73757000 
 13719              	.LASF156:
 13720 0594 6F6C645F 		.ascii	"old_value\000"
 13720      76616C75 
 13720      6500
 13721              	.LASF107:
 13722 059e 656D675F 		.ascii	"emg_speed\000"
 13722      73706565 
 13722      6400
 13723              	.LASF125:
 13724 05a8 72657374 		.ascii	"rest_vel\000"
 13724      5F76656C 
 13724      00
 13725              	.LASF163:
 13726 05b1 4E4F524D 		.ascii	"NORMAL\000"
 13726      414C00
 13727              	.LASF209:
 13728 05b8 6D6F746F 		.ascii	"motor_control_SH\000"
 13728      725F636F 
 13728      6E74726F 
 13728      6C5F5348 
 13728      00
 13729              	.LASF335:
 13730 05c9 7046696C 		.ascii	"pFile\000"
 13730      6500
 13731              	.LASF216:
 13732 05cf 706F735F 		.ascii	"pos_error_sum\000"
 13732      6572726F 
 13732      725F7375 
 13732      6D00
 13733              	.LASF118:
 13734 05dd 4144435F 		.ascii	"ADC_conf\000"
 13734      636F6E66 
 13734      00
 13735              	.LASF311:
 13736 05e6 6465765F 		.ascii	"dev_tension_f\000"
 13736      74656E73 
 13736      696F6E5F 
 13736      6600
 13737              	.LASF76:
 13738 05f4 6B5F695F 		.ascii	"k_i_dl\000"
 13738      646C00
 13739              	.LASF50:
 13740 05fb 62756666 		.ascii	"buffer\000"
 13740      657200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 298


 13741              	.LASF78:
 13742 0602 6B5F705F 		.ascii	"k_p_c_dl\000"
 13742      635F646C 
 13742      00
 13743              	.LASF184:
 13744 060b 72785F64 		.ascii	"rx_data_type\000"
 13744      6174615F 
 13744      74797065 
 13744      00
 13745              	.LASF337:
 13746 0618 675F696D 		.ascii	"g_imuNew\000"
 13746      754E6577 
 13746      00
 13747              	.LASF161:
 13748 0621 73706565 		.ascii	"speed\000"
 13748      6400
 13749              	.LASF222:
 13750 0627 706F7369 		.ascii	"position_counter\000"
 13750      74696F6E 
 13750      5F636F75 
 13750      6E746572 
 13750      00
 13751              	.LASF278:
 13752 0638 74696D65 		.ascii	"timer_value_e\000"
 13752      725F7661 
 13752      6C75655F 
 13752      6500
 13753              	.LASF179:
 13754 0646 64617461 		.ascii	"data_packet_index\000"
 13754      5F706163 
 13754      6B65745F 
 13754      696E6465 
 13754      7800
 13755              	.LASF181:
 13756 0658 64617461 		.ascii	"data_packet_buffer\000"
 13756      5F706163 
 13756      6B65745F 
 13756      62756666 
 13756      657200
 13757              	.LASF194:
 13758 066b 73745F72 		.ascii	"st_ref_p\000"
 13758      65665F70 
 13758      00
 13759              	.LASF313:
 13760 0674 6379636C 		.ascii	"cycles_status\000"
 13760      65735F73 
 13760      74617475 
 13760      7300
 13761              	.LASF186:
 13762 0682 636F756E 		.ascii	"counter_calibration\000"
 13762      7465725F 
 13762      63616C69 
 13762      62726174 
 13762      696F6E00 
 13763              	.LASF292:
 13764 0696 675F6D65 		.ascii	"g_meas\000"
 13764      617300
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 299


 13765              	.LASF277:
 13766 069d 74696D65 		.ascii	"timer_value_s\000"
 13766      725F7661 
 13766      6C75655F 
 13766      7300
 13767              	.LASF333:
 13768 06ab 456E636F 		.ascii	"Encoder_Check\000"
 13768      6465725F 
 13768      43686563 
 13768      6B00
 13769              	.LASF236:
 13770 06b9 636F6D70 		.ascii	"comp_value_encoder\000"
 13770      5F76616C 
 13770      75655F65 
 13770      6E636F64 
 13770      657200
 13771              	.LASF330:
 13772 06cc 64617461 		.ascii	"data_encoder_raw\000"
 13772      5F656E63 
 13772      6F646572 
 13772      5F726177 
 13772      00
 13773              	.LASF289:
 13774 06dd 675F7265 		.ascii	"g_ref\000"
 13774      6600
 13775              	.LASF25:
 13776 06e3 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 13776      545F4D4F 
 13776      44455F45 
 13776      58544552 
 13776      4E414C00 
 13777              	.LASF227:
 13778 06f7 696E6465 		.ascii	"index\000"
 13778      7800
 13779              	.LASF136:
 13780 06fd 6D617869 		.ascii	"maximum_pressure_kPa\000"
 13780      6D756D5F 
 13780      70726573 
 13780      73757265 
 13780      5F6B5061 
 13781              	.LASF126:
 13782 0712 72657374 		.ascii	"rest_position_flag\000"
 13782      5F706F73 
 13782      6974696F 
 13782      6E5F666C 
 13782      616700
 13783              	.LASF128:
 13784 0725 6A6F7973 		.ascii	"joystick_closure_speed\000"
 13784      7469636B 
 13784      5F636C6F 
 13784      73757265 
 13784      5F737065 
 13785              	.LASF79:
 13786 073c 6B5F695F 		.ascii	"k_i_c_dl\000"
 13786      635F646C 
 13786      00
 13787              	.LASF185:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 300


 13788 0745 7061636B 		.ascii	"package_count\000"
 13788      6167655F 
 13788      636F756E 
 13788      7400
 13789              	.LASF38:
 13790 0753 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 13790      5F414E44 
 13790      5F504F53 
 13790      5F434F4E 
 13790      54524F4C 
 13791              	.LASF159:
 13792 0768 656E6162 		.ascii	"enabled\000"
 13792      6C656400 
 13793              	.LASF5:
 13794 0770 6C6F6E67 		.ascii	"long unsigned int\000"
 13794      20756E73 
 13794      69676E65 
 13794      6420696E 
 13794      7400
 13795              	.LASF59:
 13796 0782 746F7461 		.ascii	"total_time_on\000"
 13796      6C5F7469 
 13796      6D655F6F 
 13796      6E00
 13797              	.LASF171:
 13798 0790 57524954 		.ascii	"WRITE_CYCLES\000"
 13798      455F4359 
 13798      434C4553 
 13798      00
 13799              	.LASF130:
 13800 079d 6A6F7973 		.ascii	"joystick_gains\000"
 13800      7469636B 
 13800      5F676169 
 13800      6E7300
 13801              	.LASF45:
 13802 07ac 686F6C64 		.ascii	"hold_curr\000"
 13802      5F637572 
 13802      7200
 13803              	.LASF31:
 13804 07b6 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 13804      545F4D4F 
 13804      44455F4A 
 13804      4F595354 
 13804      49434B00 
 13805              	.LASF60:
 13806 07ca 746F7461 		.ascii	"total_time_rest\000"
 13806      6C5F7469 
 13806      6D655F72 
 13806      65737400 
 13807              	.LASF81:
 13808 07da 61637469 		.ascii	"activ\000"
 13808      7600
 13809              	.LASF261:
 13810 07e0 6D696E5F 		.ascii	"min_tension\000"
 13810      74656E73 
 13810      696F6E00 
 13811              	.LASF325:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 301


 13812 07ec 62617474 		.ascii	"battery_low_SoC\000"
 13812      6572795F 
 13812      6C6F775F 
 13812      536F4300 
 13813              	.LASF98:
 13814 07fc 6D5F6F66 		.ascii	"m_off\000"
 13814      6600
 13815              	.LASF318:
 13816 0802 72657365 		.ascii	"reset_last_value_flag\000"
 13816      745F6C61 
 13816      73745F76 
 13816      616C7565 
 13816      5F666C61 
 13817              	.LASF153:
 13818 0818 71756174 		.ascii	"quat_value\000"
 13818      5F76616C 
 13818      756500
 13819              	.LASF123:
 13820 0823 72657374 		.ascii	"rest_pos\000"
 13820      5F706F73 
 13820      00
 13821              	.LASF40:
 13822 082c 63757272 		.ascii	"curr\000"
 13822      00
 13823              	.LASF172:
 13824 0831 57414954 		.ascii	"WAIT_QUERY\000"
 13824      5F515545 
 13824      525900
 13825              	.LASF91:
 13826 083c 696E7075 		.ascii	"input_mode\000"
 13826      745F6D6F 
 13826      646500
 13827              	.LASF36:
 13828 0847 434F4E54 		.ascii	"CONTROL_PWM\000"
 13828      524F4C5F 
 13828      50574D00 
 13829              	.LASF262:
 13830 0853 6379636C 		.ascii	"cycles_counter_update\000"
 13830      65735F63 
 13830      6F756E74 
 13830      65725F75 
 13830      70646174 
 13831              	.LASF339:
 13832 0869 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 13832      43313120 
 13832      352E342E 
 13832      31203230 
 13832      31363036 
 13833 089c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 13833      20726576 
 13833      6973696F 
 13833      6E203233 
 13833      37373135 
 13834 08cf 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 13834      66756E63 
 13834      74696F6E 
 13834      2D736563 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 302


 13834      74696F6E 
 13835              	.LASF42:
 13836 08f7 73745F72 		.ascii	"st_ref\000"
 13836      656600
 13837              	.LASF306:
 13838 08fe 74696D65 		.ascii	"timer_value0\000"
 13838      725F7661 
 13838      6C756530 
 13838      00
 13839              	.LASF122:
 13840 090b 73745F53 		.ascii	"st_SH_spec\000"
 13840      485F7370 
 13840      656300
 13841              	.LASF243:
 13842 0916 765F7661 		.ascii	"v_value\000"
 13842      6C756500 
 13843              	.LASF299:
 13844 091e 63616C69 		.ascii	"calib\000"
 13844      6200
 13845              	.LASF134:
 13846 0924 73745F46 		.ascii	"st_FB_spec\000"
 13846      425F7370 
 13846      656300
 13847              	.LASF6:
 13848 092f 6C6F6E67 		.ascii	"long long int\000"
 13848      206C6F6E 
 13848      6720696E 
 13848      7400
 13849              	.LASF34:
 13850 093d 53485F63 		.ascii	"SH_control_mode\000"
 13850      6F6E7472 
 13850      6F6C5F6D 
 13850      6F646500 
 13851              	.LASF190:
 13852 094d 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 13852      4E445F4D 
 13852      4F544F52 
 13852      5F494458 
 13852      00
 13853              	.LASF326:
 13854 095e 6368616E 		.ascii	"change_ext_ref_flag\000"
 13854      67655F65 
 13854      78745F72 
 13854      65665F66 
 13854      6C616700 
 13855              	.LASF19:
 13856 0972 646F7562 		.ascii	"double\000"
 13856      6C6500
 13857              	.LASF301:
 13858 0979 66696C74 		.ascii	"filt_curr_diff\000"
 13858      5F637572 
 13858      725F6469 
 13858      666600
 13859              	.LASF205:
 13860 0988 706F735F 		.ascii	"pos_sum\000"
 13860      73756D00 
 13861              	.LASF208:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 303


 13862 0990 696E7465 		.ascii	"interrupt_manager\000"
 13862      72727570 
 13862      745F6D61 
 13862      6E616765 
 13862      7200
 13863              	.LASF97:
 13864 09a2 456E635F 		.ascii	"Enc_raw_read_conf\000"
 13864      7261775F 
 13864      72656164 
 13864      5F636F6E 
 13864      6600
 13865              	.LASF206:
 13866 09b4 636F6D70 		.ascii	"compute_SoftHand_2_motors_emg_reference\000"
 13866      7574655F 
 13866      536F6674 
 13866      48616E64 
 13866      5F325F6D 
 13867              	.LASF162:
 13868 09dc 72657065 		.ascii	"repetitions\000"
 13868      74697469 
 13868      6F6E7300 
 13869              	.LASF87:
 13870 09e8 6D61785F 		.ascii	"max_step_neg\000"
 13870      73746570 
 13870      5F6E6567 
 13870      00
 13871              	.LASF241:
 13872 09f5 636F756E 		.ascii	"count_startup_motor\000"
 13872      745F7374 
 13872      61727475 
 13872      705F6D6F 
 13872      746F7200 
 13873              	.LASF133:
 13874 0a09 736C6176 		.ascii	"slave_ID\000"
 13874      655F4944 
 13874      00
 13875              	.LASF167:
 13876 0a12 57414954 		.ascii	"WAIT\000"
 13876      00
 13877              	.LASF18:
 13878 0a17 666C6F61 		.ascii	"float\000"
 13878      7400
 13879              	.LASF113:
 13880 0a1d 494D555F 		.ascii	"IMU_conf\000"
 13880      636F6E66 
 13880      00
 13881              	.LASF255:
 13882 0a26 636F756E 		.ascii	"count\000"
 13882      7400
 13883              	.LASF46:
 13884 0a2c 73745F61 		.ascii	"st_adc_meas\000"
 13884      64635F6D 
 13884      65617300 
 13885              	.LASF286:
 13886 0a38 6D5F6164 		.ascii	"m_addr\000"
 13886      647200
 13887              	.LASF298:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 304


 13888 0a3f 635F6D65 		.ascii	"c_mem\000"
 13888      6D00
 13889              	.LASF8:
 13890 0a45 756E7369 		.ascii	"unsigned int\000"
 13890      676E6564 
 13890      20696E74 
 13890      00
 13891              	.LASF268:
 13892 0a52 6D61785F 		.ascii	"max_pos\000"
 13892      706F7300 
 13893              	.LASF334:
 13894 0a5a 72657374 		.ascii	"rest_pos_curr_ref\000"
 13894      5F706F73 
 13894      5F637572 
 13894      725F7265 
 13894      6600
 13895              	.LASF143:
 13896 0a6c 666C6167 		.ascii	"flag\000"
 13896      00
 13897              	.LASF92:
 13898 0a71 636F6E74 		.ascii	"control_mode\000"
 13898      726F6C5F 
 13898      6D6F6465 
 13898      00
 13899              	.LASF21:
 13900 0a7e 63797374 		.ascii	"cystatus\000"
 13900      61747573 
 13900      00
 13901              	.LASF26:
 13902 0a87 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 13902      545F4D4F 
 13902      44455F45 
 13902      4E434F44 
 13902      45523300 
 13903              	.LASF110:
 13904 0a9b 73745F69 		.ascii	"st_imu\000"
 13904      6D7500
 13905              	.LASF200:
 13906 0aa2 63757272 		.ascii	"current_emg\000"
 13906      656E745F 
 13906      656D6700 
 13907              	.LASF182:
 13908 0aae 72785F71 		.ascii	"rx_queue\000"
 13908      75657565 
 13908      00
 13909              	.LASF252:
 13910 0ab7 55445F6D 		.ascii	"UD_mean_value\000"
 13910      65616E5F 
 13910      76616C75 
 13910      6500
 13911              	.LASF226:
 13912 0ac5 6173736F 		.ascii	"assoc_motor\000"
 13912      635F6D6F 
 13912      746F7200 
 13913              	.LASF47:
 13914 0ad1 6164645F 		.ascii	"add_emg\000"
 13914      656D6700 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 305


 13915              	.LASF213:
 13916 0ad9 695F7265 		.ascii	"i_ref\000"
 13916      6600
 13917              	.LASF105:
 13918 0adf 656D675F 		.ascii	"emg_threshold\000"
 13918      74687265 
 13918      73686F6C 
 13918      6400
 13919              	.LASF279:
 13920 0aed 73617665 		.ascii	"save_cycles_eeprom\000"
 13920      5F637963 
 13920      6C65735F 
 13920      65657072 
 13920      6F6D00
 13921              	.LASF56:
 13922 0b00 63757272 		.ascii	"current_hist\000"
 13922      656E745F 
 13922      68697374 
 13922      00
 13923              	.LASF37:
 13924 0b0d 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 13924      524F4C5F 
 13924      43555252 
 13924      454E5400 
 13925              	.LASF23:
 13926 0b1d 6C6F6E67 		.ascii	"long double\000"
 13926      20646F75 
 13926      626C6500 
 13927              	.LASF165:
 13928 0b29 44495343 		.ascii	"DISCARD\000"
 13928      41524400 
 13929              	.LASF218:
 13930 0b31 70726576 		.ascii	"prev_pos_err\000"
 13930      5F706F73 
 13930      5F657272 
 13930      00
 13931              	.LASF234:
 13932 0b3e 696E6974 		.ascii	"init_rot\000"
 13932      5F726F74 
 13932      00
 13933              	.LASF259:
 13934 0b47 6D6F745F 		.ascii	"mot_idx\000"
 13934      69647800 
 13935              	.LASF302:
 13936 0b4f 66696C74 		.ascii	"filt_i\000"
 13936      5F6900
 13937              	.LASF102:
 13938 0b56 6D6F746F 		.ascii	"motor_handle_ratio\000"
 13938      725F6861 
 13938      6E646C65 
 13938      5F726174 
 13938      696F00
 13939              	.LASF300:
 13940 0b69 66696C74 		.ascii	"filt_v\000"
 13940      5F7600
 13941              	.LASF323:
 13942 0b70 72657374 		.ascii	"rest_enabled\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 306


 13942      5F656E61 
 13942      626C6564 
 13942      00
 13943              	.LASF291:
 13944 0b7d 675F7265 		.ascii	"g_refOld\000"
 13944      664F6C64 
 13944      00
 13945              	.LASF211:
 13946 0b86 706F735F 		.ascii	"pos_error\000"
 13946      6572726F 
 13946      7200
 13947              	.LASF151:
 13948 0b90 6779726F 		.ascii	"gyro_value\000"
 13948      5F76616C 
 13948      756500
 13949              	.LASF115:
 13950 0b9b 63757272 		.ascii	"curr_time\000"
 13950      5F74696D 
 13950      6500
 13951              	.LASF100:
 13952 0ba5 646F7562 		.ascii	"double_encoder_on_off\000"
 13952      6C655F65 
 13952      6E636F64 
 13952      65725F6F 
 13952      6E5F6F66 
 13953              	.LASF260:
 13954 0bbb 6D61785F 		.ascii	"max_tension\000"
 13954      74656E73 
 13954      696F6E00 
 13955              	.LASF189:
 13956 0bc7 4D4F544F 		.ascii	"MOTOR_IDX\000"
 13956      525F4944 
 13956      5800
 13957              	.LASF235:
 13958 0bd1 6C617374 		.ascii	"last_value_encoder\000"
 13958      5F76616C 
 13958      75655F65 
 13958      6E636F64 
 13958      657200
 13959              	.LASF187:
 13960 0be4 636F756E 		.ascii	"counter_tension_func\000"
 13960      7465725F 
 13960      74656E73 
 13960      696F6E5F 
 13960      66756E63 
 13961              	.LASF307:
 13962 0bf9 6379636C 		.ascii	"cycle_time\000"
 13962      655F7469 
 13962      6D6500
 13963              	.LASF207:
 13964 0c04 66736D5F 		.ascii	"fsm_state\000"
 13964      73746174 
 13964      6500
 13965              	.LASF7:
 13966 0c0e 6C6F6E67 		.ascii	"long long unsigned int\000"
 13966      206C6F6E 
 13966      6720756E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 307


 13966      7369676E 
 13966      65642069 
 13967              	.LASF316:
 13968 0c25 6A6F795F 		.ascii	"joy_UD_status\000"
 13968      55445F73 
 13968      74617475 
 13968      7300
 13969              	.LASF51:
 13970 0c33 6C656E67 		.ascii	"length\000"
 13970      746800
 13971              	.LASF148:
 13972 0c3a 73745F69 		.ascii	"st_imu_data\000"
 13972      6D755F64 
 13972      61746100 
 13973              	.LASF152:
 13974 0c46 6D61675F 		.ascii	"mag_value\000"
 13974      76616C75 
 13974      6500
 13975              	.LASF41:
 13976 0c50 6F6E6F66 		.ascii	"onoff\000"
 13976      6600
 13977              	.LASF230:
 13978 0c56 746D705F 		.ascii	"tmp_value_encoder_32\000"
 13978      76616C75 
 13978      655F656E 
 13978      636F6465 
 13978      725F3332 
 13979              	.LASF219:
 13980 0c6b 70726576 		.ascii	"prev_curr_err\000"
 13980      5F637572 
 13980      725F6572 
 13980      7200
 13981              	.LASF180:
 13982 0c79 64617461 		.ascii	"data_packet_length\000"
 13982      5F706163 
 13982      6B65745F 
 13982      6C656E67 
 13982      746800
 13983              	.LASF72:
 13984 0c8c 6B5F705F 		.ascii	"k_p_c\000"
 13984      6300
 13985              	.LASF308:
 13986 0c92 6465765F 		.ascii	"dev_tension\000"
 13986      74656E73 
 13986      696F6E00 
 13987              	.LASF83:
 13988 0c9e 6D6F746F 		.ascii	"motor_driver_type\000"
 13988      725F6472 
 13988      69766572 
 13988      5F747970 
 13988      6500
 13989              	.LASF168:
 13990 0cb0 57414954 		.ascii	"WAIT_EoC\000"
 13990      5F456F43 
 13990      00
 13991              	.LASF22:
 13992 0cb9 72656738 		.ascii	"reg8\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 308


 13992      00
 13993              	.LASF271:
 13994 0cbe 62696E5F 		.ascii	"bin_1\000"
 13994      3100
 13995              	.LASF272:
 13996 0cc4 62696E5F 		.ascii	"bin_2\000"
 13996      3200
 13997              	.LASF247:
 13998 0cca 695F6175 		.ascii	"i_aux\000"
 13998      7800
 13999              	.LASF137:
 14000 0cd0 70726F70 		.ascii	"prop_err_fb_gain\000"
 14000      5F657272 
 14000      5F66625F 
 14000      6761696E 
 14000      00
 14001              	.LASF204:
 14002 0ce1 706F735F 		.ascii	"pos_diff\000"
 14002      64696666 
 14002      00
 14003              	.LASF281:
 14004 0cea 726F775F 		.ascii	"row_number\000"
 14004      6E756D62 
 14004      657200
 14005              	.LASF257:
 14006 0cf5 6F766572 		.ascii	"overcurrent_control\000"
 14006      63757272 
 14006      656E745F 
 14006      636F6E74 
 14006      726F6C00 
 14007              	.LASF273:
 14008 0d09 63757272 		.ascii	"curr_pos\000"
 14008      5F706F73 
 14008      00
 14009              	.LASF164:
 14010 0d12 52455345 		.ascii	"RESET\000"
 14010      5400
 14011              	.LASF132:
 14012 0d18 736C6176 		.ascii	"slave_comm_active\000"
 14012      655F636F 
 14012      6D6D5F61 
 14012      63746976 
 14012      6500
 14013              	.LASF246:
 14014 0d2a 616E616C 		.ascii	"analog_read_end\000"
 14014      6F675F72 
 14014      6561645F 
 14014      656E6400 
 14015              	.LASF331:
 14016 0d3a 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 14016      636F6465 
 14016      725F4C69 
 14016      6E655F43 
 14016      6F6E6E65 
 14017              	.LASF69:
 14018 0d53 6465765F 		.ascii	"dev_type\000"
 14018      74797065 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 309


 14018      00
 14019              	.LASF264:
 14020 0d5c 656D675F 		.ascii	"emg_cycle_status\000"
 14020      6379636C 
 14020      655F7374 
 14020      61747573 
 14020      00
 14021              	.LASF119:
 14022 0d6d 73745F75 		.ascii	"st_user\000"
 14022      73657200 
 14023              	.LASF103:
 14024 0d75 67656172 		.ascii	"gears_params\000"
 14024      735F7061 
 14024      72616D73 
 14024      00
 14025              	.LASF114:
 14026 0d82 73745F65 		.ascii	"st_expansion\000"
 14026      7870616E 
 14026      73696F6E 
 14026      00
 14027              	.LASF108:
 14028 0d8f 656D675F 		.ascii	"emg_calibration_flag\000"
 14028      63616C69 
 14028      62726174 
 14028      696F6E5F 
 14028      666C6167 
 14029              	.LASF43:
 14030 0da4 73745F6D 		.ascii	"st_meas\000"
 14030      65617300 
 14031              	.LASF283:
 14032 0dac 61646472 		.ascii	"addr_start\000"
 14032      5F737461 
 14032      727400
 14033              	.LASF287:
 14034 0db7 70776D5F 		.ascii	"pwm_preload_values\000"
 14034      7072656C 
 14034      6F61645F 
 14034      76616C75 
 14034      657300
 14035              	.LASF129:
 14036 0dca 6A6F7973 		.ascii	"joystick_threshold\000"
 14036      7469636B 
 14036      5F746872 
 14036      6573686F 
 14036      6C6400
 14037              	.LASF32:
 14038 0ddd 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 14038      545F4D4F 
 14038      44455F45 
 14038      4D475F50 
 14038      524F504F 
 14039              	.LASF175:
 14040 0dfc 636F756E 		.ascii	"counter_status\000"
 14040      7465725F 
 14040      73746174 
 14040      757300
 14041              	.LASF297:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 310


 14042 0e0b 675F6D65 		.ascii	"g_mem\000"
 14042      6D00
 14043              	.LASF248:
 14044 0e11 656D675F 		.ascii	"emg_counter_1\000"
 14044      636F756E 
 14044      7465725F 
 14044      3100
 14045              	.LASF249:
 14046 0e1f 656D675F 		.ascii	"emg_counter_2\000"
 14046      636F756E 
 14046      7465725F 
 14046      3200
 14047              	.LASF238:
 14048 0e2d 6F6E6C79 		.ascii	"only_first_time\000"
 14048      5F666972 
 14048      73745F74 
 14048      696D6500 
 14049              	.LASF11:
 14050 0e3d 75696E74 		.ascii	"uint8\000"
 14050      3800
 14051              	.LASF127:
 14052 0e43 73745F4A 		.ascii	"st_JOY_spec\000"
 14052      4F595F73 
 14052      70656300 
 14053              	.LASF233:
 14054 0e4f 76616C75 		.ascii	"value_diff\000"
 14054      655F6469 
 14054      666600
 14055              	.LASF275:
 14056 0e5a 63757272 		.ascii	"curr_ref\000"
 14056      5F726566 
 14056      00
 14057              	.LASF2:
 14058 0e63 73686F72 		.ascii	"short int\000"
 14058      7420696E 
 14058      7400
 14059              	.LASF77:
 14060 0e6d 6B5F645F 		.ascii	"k_d_dl\000"
 14060      646C00
 14061              	.LASF231:
 14062 0e74 76616C75 		.ascii	"value_encoder\000"
 14062      655F656E 
 14062      636F6465 
 14062      7200
 14063              	.LASF48:
 14064 0e82 6A6F7973 		.ascii	"joystick\000"
 14064      7469636B 
 14064      00
 14065              	.LASF145:
 14066 0e8b 6D6F746F 		.ascii	"motor\000"
 14066      7200
 14067              	.LASF310:
 14068 0e91 6465765F 		.ascii	"dev_pwm_sat\000"
 14068      70776D5F 
 14068      73617400 
 14069              	.LASF62:
 14070 0e9d 68775F6D 		.ascii	"hw_maint_date\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 311


 14070      61696E74 
 14070      5F646174 
 14070      6500
 14071              	.LASF191:
 14072 0eab 66756E63 		.ascii	"function_scheduler\000"
 14072      74696F6E 
 14072      5F736368 
 14072      6564756C 
 14072      657200
 14073              	.LASF192:
 14074 0ebe 636F6D70 		.ascii	"compute_reference\000"
 14074      7574655F 
 14074      72656665 
 14074      72656E63 
 14074      6500
 14075              	.LASF220:
 14076 0ed0 70726576 		.ascii	"prev_pwm\000"
 14076      5F70776D 
 14076      00
 14077              	.LASF63:
 14078 0ed9 73746174 		.ascii	"stats_period_begin_date\000"
 14078      735F7065 
 14078      72696F64 
 14078      5F626567 
 14078      696E5F64 
 14079              	.LASF288:
 14080 0ef1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 14080      52784275 
 14080      66666572 
 14080      00
 14081              	.LASF312:
 14082 0efe 706F775F 		.ascii	"pow_tension\000"
 14082      74656E73 
 14082      696F6E00 
 14083              	.LASF15:
 14084 0f0a 696E7431 		.ascii	"int16\000"
 14084      3600
 14085              	.LASF116:
 14086 0f10 72656164 		.ascii	"read_exp_port_flag\000"
 14086      5F657870 
 14086      5F706F72 
 14086      745F666C 
 14086      616700
 14087              	.LASF82:
 14088 0f23 61637469 		.ascii	"activate_pwm_rescaling\000"
 14088      76617465 
 14088      5F70776D 
 14088      5F726573 
 14088      63616C69 
 14089              	.LASF75:
 14090 0f3a 6B5F705F 		.ascii	"k_p_dl\000"
 14090      646C00
 14091              	.LASF44:
 14092 0f41 65737469 		.ascii	"estim_curr\000"
 14092      6D5F6375 
 14092      727200
 14093              	.LASF309:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 312


 14094 0f4c 6465765F 		.ascii	"dev_pwm_limit\000"
 14094      70776D5F 
 14094      6C696D69 
 14094      7400
 14095              	.LASF280:
 14096 0f5a 73746174 		.ascii	"status\000"
 14096      757300
 14097              	.LASF212:
 14098 0f61 63757272 		.ascii	"curr_error\000"
 14098      5F657272 
 14098      6F7200
 14099              	.LASF332:
 14100 0f6c 456E636F 		.ascii	"Encoder_Value\000"
 14100      6465725F 
 14100      56616C75 
 14100      6500
 14101              	.LASF68:
 14102 0f7a 75736572 		.ascii	"user_id\000"
 14102      5F696400 
 14103              	.LASF265:
 14104 0f82 72657374 		.ascii	"rest_cycle_status\000"
 14104      5F637963 
 14104      6C655F73 
 14104      74617475 
 14104      7300
 14105              	.LASF202:
 14106 0f94 636F6D70 		.ascii	"compute_SoftHand_2_motors_joystick_reference\000"
 14106      7574655F 
 14106      536F6674 
 14106      48616E64 
 14106      5F325F6D 
 14107              	.LASF229:
 14108 0fc1 746D705F 		.ascii	"tmp_value_encoder\000"
 14108      76616C75 
 14108      655F656E 
 14108      636F6465 
 14108      7200
 14109              	.LASF177:
 14110 0fd3 4953525F 		.ascii	"ISR_CYCLES_Handler\000"
 14110      4359434C 
 14110      45535F48 
 14110      616E646C 
 14110      657200
 14111              	.LASF67:
 14112 0fe6 62617564 		.ascii	"baud_rate\000"
 14112      5F726174 
 14112      6500
 14113              	.LASF140:
 14114 0ff0 66617374 		.ascii	"fast_act_threshold\000"
 14114      5F616374 
 14114      5F746872 
 14114      6573686F 
 14114      6C6400
 14115              	.LASF112:
 14116 1003 5350495F 		.ascii	"SPI_read_delay\000"
 14116      72656164 
 14116      5F64656C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 313


 14116      617900
 14117              	.LASF3:
 14118 1012 73686F72 		.ascii	"short unsigned int\000"
 14118      7420756E 
 14118      7369676E 
 14118      65642069 
 14118      6E7400
 14119              	.LASF96:
 14120 1025 73745F65 		.ascii	"st_encoder\000"
 14120      6E636F64 
 14120      657200
 14121              	.LASF294:
 14122 1030 675F6164 		.ascii	"g_adc_meas\000"
 14122      635F6D65 
 14122      617300
 14123              	.LASF135:
 14124 103b 6D61785F 		.ascii	"max_residual_current\000"
 14124      72657369 
 14124      6475616C 
 14124      5F637572 
 14124      72656E74 
 14125              	.LASF199:
 14126 1050 454E435F 		.ascii	"ENC_L\000"
 14126      4C00
 14127              	.LASF142:
 14128 1056 73745F65 		.ascii	"st_eeprom\000"
 14128      6570726F 
 14128      6D00
 14129              	.LASF317:
 14130 1060 6A6F795F 		.ascii	"joy_LR_status\000"
 14130      4C525F73 
 14130      74617475 
 14130      7300
 14131              	.LASF340:
 14132 106e 2E2E5C73 		.ascii	"..\\src\\interruptions.c\000"
 14132      72635C69 
 14132      6E746572 
 14132      72757074 
 14132      696F6E73 
 14133              	.LASF195:
 14134 1085 73745F72 		.ascii	"st_refOld_p\000"
 14134      65664F6C 
 14134      645F7000 
 14135              	.LASF16:
 14136 1091 696E7433 		.ascii	"int32\000"
 14136      3200
 14137              	.LASF328:
 14138 1097 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 14138      4F465F41 
 14138      4E414C4F 
 14138      475F494E 
 14138      50555453 
 14139              	.LASF71:
 14140 10ac 73745F6D 		.ascii	"st_motor\000"
 14140      6F746F72 
 14140      00
 14141              	.LASF338:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 314


 14142 10b5 6D617374 		.ascii	"master_mode\000"
 14142      65725F6D 
 14142      6F646500 
 14143              	.LASF39:
 14144 10c1 46535F46 		.ascii	"FS_FILE\000"
 14144      494C4500 
 14145              	.LASF84:
 14146 10c9 706F735F 		.ascii	"pos_lim_flag\000"
 14146      6C696D5F 
 14146      666C6167 
 14146      00
 14147              	.LASF253:
 14148 10d6 4C525F6D 		.ascii	"LR_mean_value\000"
 14148      65616E5F 
 14148      76616C75 
 14148      6500
 14149              	.LASF293:
 14150 10e4 675F6D65 		.ascii	"g_measOld\000"
 14150      61734F6C 
 14150      6400
 14151              	.LASF285:
 14152 10ee 726F775F 		.ascii	"row_end\000"
 14152      656E6400 
 14153              	.LASF35:
 14154 10f6 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 14154      524F4C5F 
 14154      414E474C 
 14154      4500
 14155              	.LASF9:
 14156 1104 5F5F696E 		.ascii	"__int32_t\000"
 14156      7433325F 
 14156      7400
 14157              	.LASF58:
 14158 110e 77697265 		.ascii	"wire_disp\000"
 14158      5F646973 
 14158      7000
 14159              	.LASF322:
 14160 1118 63616E5F 		.ascii	"can_write\000"
 14160      77726974 
 14160      6500
 14161              	.LASF106:
 14162 1122 656D675F 		.ascii	"emg_max_value\000"
 14162      6D61785F 
 14162      76616C75 
 14162      6500
 14163              	.LASF90:
 14164 1130 63757272 		.ascii	"current_limit\000"
 14164      656E745F 
 14164      6C696D69 
 14164      7400
 14165              	.LASF33:
 14166 113e 53485F69 		.ascii	"SH_input_mode\000"
 14166      6E707574 
 14166      5F6D6F64 
 14166      6500
 14167              	.LASF174:
 14168 114c 4E4F4E45 		.ascii	"NONE\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccpjVo8i.s 			page 315


 14168      00
 14169              	.LASF139:
 14170 1151 61637469 		.ascii	"activation_mode\000"
 14170      76617469 
 14170      6F6E5F6D 
 14170      6F646500 
 14171              	.LASF12:
 14172 1161 75696E74 		.ascii	"uint16\000"
 14172      313600
 14173              	.LASF124:
 14174 1168 72657374 		.ascii	"rest_delay\000"
 14174      5F64656C 
 14174      617900
 14175              	.LASF155:
 14176 1173 73745F66 		.ascii	"st_filter\000"
 14176      696C7465 
 14176      7200
 14177              	.LASF244:
 14178 117d 76765F76 		.ascii	"vv_value\000"
 14178      616C7565 
 14178      00
 14179              	.LASF80:
 14180 1186 6B5F645F 		.ascii	"k_d_c_dl\000"
 14180      635F646C 
 14180      00
 14181              	.LASF160:
 14182 118f 64697265 		.ascii	"direction\000"
 14182      6374696F 
 14182      6E00
 14183              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
