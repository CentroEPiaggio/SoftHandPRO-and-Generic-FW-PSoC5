ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"interruptions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              		.type	pwm_preload_values, %object
  22              		.size	pwm_preload_values, 29
  23              	pwm_preload_values:
  24 0000 64       		.byte	100
  25 0001 53       		.byte	83
  26 0002 4E       		.byte	78
  27 0003 4C       		.byte	76
  28 0004 4A       		.byte	74
  29 0005 48       		.byte	72
  30 0006 46       		.byte	70
  31 0007 44       		.byte	68
  32 0008 43       		.byte	67
  33 0009 41       		.byte	65
  34 000a 40       		.byte	64
  35 000b 3F       		.byte	63
  36 000c 3E       		.byte	62
  37 000d 3D       		.byte	61
  38 000e 3C       		.byte	60
  39 000f 3B       		.byte	59
  40 0010 3A       		.byte	58
  41 0011 39       		.byte	57
  42 0012 38       		.byte	56
  43 0013 38       		.byte	56
  44 0014 37       		.byte	55
  45 0015 36       		.byte	54
  46 0016 36       		.byte	54
  47 0017 35       		.byte	53
  48 0018 34       		.byte	52
  49 0019 34       		.byte	52
  50 001a 34       		.byte	52
  51 001b 33       		.byte	51
  52 001c 33       		.byte	51
  53              		.section	.text.ISR_RS485_RX_ExInterrupt,"ax",%progbits
  54              		.align	2
  55              		.global	ISR_RS485_RX_ExInterrupt
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 2


  58              		.type	ISR_RS485_RX_ExInterrupt, %function
  59              	ISR_RS485_RX_ExInterrupt:
  60              	.LFB64:
  61              		.file 1 "..\\src\\interruptions.c"
   1:..\src/interruptions.c **** // ----------------------------------------------------------------------------
   2:..\src/interruptions.c **** // BSD 3-Clause License
   3:..\src/interruptions.c **** 
   4:..\src/interruptions.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/interruptions.c **** // Copyright (c) 2017-2019, Centro "E.Piaggio"
   6:..\src/interruptions.c **** // All rights reserved.
   7:..\src/interruptions.c **** 
   8:..\src/interruptions.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/interruptions.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/interruptions.c **** 
  11:..\src/interruptions.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/interruptions.c **** //   list of conditions and the following disclaimer.
  13:..\src/interruptions.c **** 
  14:..\src/interruptions.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/interruptions.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/interruptions.c **** //   and/or other materials provided with the distribution.
  17:..\src/interruptions.c **** 
  18:..\src/interruptions.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/interruptions.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/interruptions.c **** //   this software without specific prior written permission.
  21:..\src/interruptions.c **** 
  22:..\src/interruptions.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/interruptions.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:..\src/interruptions.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/interruptions.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/interruptions.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/interruptions.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/interruptions.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/interruptions.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/interruptions.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/interruptions.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/interruptions.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/interruptions.c **** // ----------------------------------------------------------------------------
  34:..\src/interruptions.c **** 
  35:..\src/interruptions.c **** /**
  36:..\src/interruptions.c **** * \file         interruptions.c
  37:..\src/interruptions.c **** *
  38:..\src/interruptions.c **** * \brief        Interruption handling and firmware core functions
  39:..\src/interruptions.c **** * \date         October 01, 2017
  40:..\src/interruptions.c **** * \author       _Centro "E.Piaggio"_
  41:..\src/interruptions.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42:..\src/interruptions.c **** * \copyright    (C) 2017-2019 Centro "E.Piaggio". All rights reserved.
  43:..\src/interruptions.c **** */
  44:..\src/interruptions.c **** 
  45:..\src/interruptions.c **** 
  46:..\src/interruptions.c **** //=================================================================     includes
  47:..\src/interruptions.c **** #include "interruptions.h"
  48:..\src/interruptions.c **** 
  49:..\src/interruptions.c **** //==============================================================================
  50:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  51:..\src/interruptions.c **** //==============================================================================
  52:..\src/interruptions.c **** // Processing RS-485 data frame:
  53:..\src/interruptions.c **** //
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 3


  54:..\src/interruptions.c **** // - 0:     Waits for beginning characters
  55:..\src/interruptions.c **** // - 1:     Waits for ID;
  56:..\src/interruptions.c **** // - 2:     Data length;
  57:..\src/interruptions.c **** // - 3:     Receive all bytes;
  58:..\src/interruptions.c **** // - 4:     Wait for another device end of transmission;
  59:..\src/interruptions.c **** //
  60:..\src/interruptions.c **** //==============================================================================
  61:..\src/interruptions.c **** 
  62:..\src/interruptions.c **** // PWM values needed to obtain 11.5 V given a certain input tension
  63:..\src/interruptions.c **** // Numbers are sperimentally calculated //[index] (millivolts)
  64:..\src/interruptions.c **** static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  65:..\src/interruptions.c ****                                               83,
  66:..\src/interruptions.c ****                                               78,
  67:..\src/interruptions.c ****                                               76,
  68:..\src/interruptions.c ****                                               74,
  69:..\src/interruptions.c ****                                               72,    //5 (14000)
  70:..\src/interruptions.c ****                                               70,
  71:..\src/interruptions.c ****                                               68,
  72:..\src/interruptions.c ****                                               67,
  73:..\src/interruptions.c ****                                               65,
  74:..\src/interruptions.c ****                                               64,    //10 (16500)
  75:..\src/interruptions.c ****                                               63,
  76:..\src/interruptions.c ****                                               62,
  77:..\src/interruptions.c ****                                               61,
  78:..\src/interruptions.c ****                                               60,
  79:..\src/interruptions.c ****                                               59,    //15 (19000)
  80:..\src/interruptions.c ****                                               58,
  81:..\src/interruptions.c ****                                               57,
  82:..\src/interruptions.c ****                                               56,
  83:..\src/interruptions.c ****                                               56,
  84:..\src/interruptions.c ****                                               55,    //20 (21500)
  85:..\src/interruptions.c ****                                               54,
  86:..\src/interruptions.c ****                                               54,
  87:..\src/interruptions.c ****                                               53,
  88:..\src/interruptions.c ****                                               52,
  89:..\src/interruptions.c ****                                               52,    //25 (24000)
  90:..\src/interruptions.c ****                                               52,
  91:..\src/interruptions.c ****                                               51,
  92:..\src/interruptions.c ****                                               51};   //28 (25500)
  93:..\src/interruptions.c **** 
  94:..\src/interruptions.c **** //==============================================================================
  95:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  96:..\src/interruptions.c **** //==============================================================================
  97:..\src/interruptions.c **** 
  98:..\src/interruptions.c **** CY_ISR(ISR_RS485_RX_ExInterrupt) {
  62              		.loc 1 98 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  99:..\src/interruptions.c **** 
 100:..\src/interruptions.c ****     // Set RS485 flag
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 4


 101:..\src/interruptions.c ****     
 102:..\src/interruptions.c ****     interrupt_flag = TRUE;
  72              		.loc 1 102 0
  73 0004 034B     		ldr	r3, .L2
  74 0006 0122     		movs	r2, #1
  75 0008 1A70     		strb	r2, [r3]
 103:..\src/interruptions.c ****      
 104:..\src/interruptions.c **** }
  76              		.loc 1 104 0
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000e 80BC     		pop	{r7}
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0010 7047     		bx	lr
  85              	.L3:
  86 0012 00BF     		.align	2
  87              	.L2:
  88 0014 00000000 		.word	interrupt_flag
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	ISR_RS485_RX_ExInterrupt, .-ISR_RS485_RX_ExInterrupt
  92              		.section	.text.ISR_CYCLES_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	ISR_CYCLES_Handler
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR_CYCLES_Handler, %function
  98              	ISR_CYCLES_Handler:
  99              	.LFB65:
 105:..\src/interruptions.c **** 
 106:..\src/interruptions.c **** //==============================================================================
 107:..\src/interruptions.c **** //                                                        CYCLES TIMER INTERRUPT
 108:..\src/interruptions.c **** //==============================================================================
 109:..\src/interruptions.c **** CY_ISR(ISR_CYCLES_Handler){
 100              		.loc 1 109 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110:..\src/interruptions.c **** 
 111:..\src/interruptions.c ****     // Set cycles interrupt flag
 112:..\src/interruptions.c ****     
 113:..\src/interruptions.c ****     cycles_interrupt_flag = TRUE;
 110              		.loc 1 113 0
 111 0004 044B     		ldr	r3, .L5
 112 0006 0122     		movs	r2, #1
 113 0008 1A70     		strb	r2, [r3]
 114:..\src/interruptions.c ****     
 115:..\src/interruptions.c ****     CYCLES_TIMER_STATUS;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 5


 114              		.loc 1 115 0
 115 000a 044B     		ldr	r3, .L5+4
 116 000c 1B78     		ldrb	r3, [r3]
 116:..\src/interruptions.c **** 
 117:..\src/interruptions.c **** }
 117              		.loc 1 117 0
 118 000e 00BF     		nop
 119 0010 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0014 7047     		bx	lr
 126              	.L6:
 127 0016 00BF     		.align	2
 128              	.L5:
 129 0018 00000000 		.word	cycles_interrupt_flag
 130 001c 034F0040 		.word	1073762051
 131              		.cfi_endproc
 132              	.LFE65:
 133              		.size	ISR_CYCLES_Handler, .-ISR_CYCLES_Handler
 134              		.section	.text.interrupt_manager,"ax",%progbits
 135              		.align	2
 136              		.global	interrupt_manager
 137              		.thumb
 138              		.thumb_func
 139              		.type	interrupt_manager, %function
 140              	interrupt_manager:
 141              	.LFB66:
 118:..\src/interruptions.c **** 
 119:..\src/interruptions.c **** //==============================================================================
 120:..\src/interruptions.c **** //                                                             INTERRUPT MANAGER
 121:..\src/interruptions.c **** //==============================================================================
 122:..\src/interruptions.c **** // Manage interrupt from RS485 
 123:..\src/interruptions.c **** //==============================================================================
 124:..\src/interruptions.c **** // Processing RS-485 data frame:
 125:..\src/interruptions.c **** //
 126:..\src/interruptions.c **** // - WAIT_START:    Waits for beginning characters;
 127:..\src/interruptions.c **** // - WAIT_ID:       Waits for ID;
 128:..\src/interruptions.c **** // - WAIT_LENGTH:   Data length;
 129:..\src/interruptions.c **** // - RECEIVE:       Receive all bytes;
 130:..\src/interruptions.c **** // - UNLOAD:        Wait for another device end of transmission;
 131:..\src/interruptions.c **** //
 132:..\src/interruptions.c **** //==============================================================================
 133:..\src/interruptions.c **** 
 134:..\src/interruptions.c **** void interrupt_manager(){
 142              		.loc 1 134 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 6


 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 135:..\src/interruptions.c **** 
 136:..\src/interruptions.c ****     
 137:..\src/interruptions.c ****     //===========================================     local variables definition
 138:..\src/interruptions.c **** 
 139:..\src/interruptions.c ****     static uint8 CYDATA state = WAIT_START;                      // state
 140:..\src/interruptions.c ****     
 141:..\src/interruptions.c ****     //------------------------------------------------- local data packet
 142:..\src/interruptions.c ****     static uint8 CYDATA data_packet_index;
 143:..\src/interruptions.c ****     static uint8 CYDATA data_packet_length;
 144:..\src/interruptions.c ****     static uint8 data_packet_buffer[128];                     
 145:..\src/interruptions.c ****     static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 146:..\src/interruptions.c ****     //-------------------------------------------------
 147:..\src/interruptions.c **** 
 148:..\src/interruptions.c ****     uint8 CYDATA    rx_data;                            // RS485 UART rx data
 149:..\src/interruptions.c ****     CYBIT           rx_data_type = TRUE;                       // my id?
 154              		.loc 1 149 0
 155 0006 0123     		movs	r3, #1
 156 0008 FB71     		strb	r3, [r7, #7]
 150:..\src/interruptions.c ****     uint8 CYDATA    package_count = 0;                     
 157              		.loc 1 150 0
 158 000a 0023     		movs	r3, #0
 159 000c BB71     		strb	r3, [r7, #6]
 151:..\src/interruptions.c **** 
 152:..\src/interruptions.c ****     //======================================================     receive routine
 153:..\src/interruptions.c ****     
 154:..\src/interruptions.c ****     while(UART_RS485_GetRxBufferSize() && (package_count < 6)){
 160              		.loc 1 154 0
 161 000e D6E0     		b	.L8
 162              	.L28:
 155:..\src/interruptions.c ****         // 6 - estimated maximum number of packets we can read without blocking firmware execution
 156:..\src/interruptions.c **** 
 157:..\src/interruptions.c ****         // Get next char
 158:..\src/interruptions.c ****         rx_data = UART_RS485_GetChar();
 163              		.loc 1 158 0
 164 0010 FFF7FEFF 		bl	UART_RS485_GetChar
 165 0014 0346     		mov	r3, r0
 166 0016 7B71     		strb	r3, [r7, #5]
 159:..\src/interruptions.c ****         
 160:..\src/interruptions.c ****         switch (state) {
 167              		.loc 1 160 0
 168 0018 6F4B     		ldr	r3, .L31
 169 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 001c 042B     		cmp	r3, #4
 171 001e 00F2CE80 		bhi	.L8
 172 0022 01A2     		adr	r2, .L10
 173 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 174              		.p2align 2
 175              	.L10:
 176 0028 3D000000 		.word	.L9+1
 177 002c A3000000 		.word	.L11+1
 178 0030 CD000000 		.word	.L12+1
 179 0034 1B010000 		.word	.L13+1
 180 0038 85010000 		.word	.L14+1
 181              		.p2align 1
 182              	.L9:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 7


 161:..\src/interruptions.c ****             //-----     wait for frame start     -------------------------------
 162:..\src/interruptions.c ****             case WAIT_START:
 163:..\src/interruptions.c ****             
 164:..\src/interruptions.c ****                 rx_queue[0] = rx_queue[1];
 183              		.loc 1 164 0
 184 003c 674B     		ldr	r3, .L31+4
 185 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 186 0040 664B     		ldr	r3, .L31+4
 187 0042 1A70     		strb	r2, [r3]
 165:..\src/interruptions.c ****                 rx_queue[1] = rx_queue[2];
 188              		.loc 1 165 0
 189 0044 654B     		ldr	r3, .L31+4
 190 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 191 0048 644B     		ldr	r3, .L31+4
 192 004a 5A70     		strb	r2, [r3, #1]
 166:..\src/interruptions.c ****                 rx_queue[2] = rx_data;
 193              		.loc 1 166 0
 194 004c 634A     		ldr	r2, .L31+4
 195 004e 7B79     		ldrb	r3, [r7, #5]
 196 0050 9370     		strb	r3, [r2, #2]
 167:..\src/interruptions.c ****                 
 168:..\src/interruptions.c ****                 // Check for header configuration package
 169:..\src/interruptions.c ****                 if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 197              		.loc 1 169 0
 198 0052 624B     		ldr	r3, .L31+4
 199 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 0056 3A2B     		cmp	r3, #58
 201 0058 10D1     		bne	.L15
 202              		.loc 1 169 0 is_stmt 0 discriminator 1
 203 005a 604B     		ldr	r3, .L31+4
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 3A2B     		cmp	r3, #58
 206 0060 0CD1     		bne	.L15
 170:..\src/interruptions.c ****                     rx_queue[0] = 0;
 207              		.loc 1 170 0 is_stmt 1
 208 0062 5E4B     		ldr	r3, .L31+4
 209 0064 0022     		movs	r2, #0
 210 0066 1A70     		strb	r2, [r3]
 171:..\src/interruptions.c ****                     rx_queue[1] = 0;
 211              		.loc 1 171 0
 212 0068 5C4B     		ldr	r3, .L31+4
 213 006a 0022     		movs	r2, #0
 214 006c 5A70     		strb	r2, [r3, #1]
 172:..\src/interruptions.c ****                     rx_queue[2] = 0;
 215              		.loc 1 172 0
 216 006e 5B4B     		ldr	r3, .L31+4
 217 0070 0022     		movs	r2, #0
 218 0072 9A70     		strb	r2, [r3, #2]
 173:..\src/interruptions.c ****                     state       = WAIT_ID;                    
 219              		.loc 1 173 0
 220 0074 584B     		ldr	r3, .L31
 221 0076 0122     		movs	r2, #1
 222 0078 1A70     		strb	r2, [r3]
 223 007a 11E0     		b	.L16
 224              	.L15:
 174:..\src/interruptions.c ****                 }else
 175:..\src/interruptions.c ****                     if ((rx_queue[0] == 63) &&      //ASCII - ?
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 8


 225              		.loc 1 175 0
 226 007c 574B     		ldr	r3, .L31+4
 227 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0080 3F2B     		cmp	r3, #63
 229 0082 40F09C80 		bne	.L8
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 230              		.loc 1 176 0 discriminator 1
 231 0086 554B     		ldr	r3, .L31+4
 232 0088 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 175:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 233              		.loc 1 175 0 discriminator 1
 234 008a 0D2B     		cmp	r3, #13
 235 008c 40F09780 		bne	.L8
 177:..\src/interruptions.c ****                         (rx_queue[2] == 10))        //ASCII - LF)
 236              		.loc 1 177 0
 237 0090 524B     		ldr	r3, .L31+4
 238 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 239              		.loc 1 176 0
 240 0094 0A2B     		cmp	r3, #10
 241 0096 40F09280 		bne	.L8
 178:..\src/interruptions.c ****                         infoGet(INFO_ALL);
 242              		.loc 1 178 0
 243 009a 0020     		movs	r0, #0
 244 009c FFF7FEFF 		bl	infoGet
 245              	.L16:
 179:..\src/interruptions.c ****                 break;
 246              		.loc 1 179 0
 247 00a0 8DE0     		b	.L8
 248              	.L11:
 180:..\src/interruptions.c **** 
 181:..\src/interruptions.c ****             //-----     wait for id     ----------------------------------------
 182:..\src/interruptions.c ****             case  WAIT_ID:
 183:..\src/interruptions.c **** 
 184:..\src/interruptions.c ****                 // packet is for my ID or is broadcast
 185:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0)
 249              		.loc 1 185 0
 250 00a2 4F4B     		ldr	r3, .L31+8
 251 00a4 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 252 00a8 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 253 00aa 9A42     		cmp	r2, r3
 254 00ac 02D0     		beq	.L17
 255              		.loc 1 185 0 is_stmt 0 discriminator 1
 256 00ae 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 257 00b0 002B     		cmp	r3, #0
 258 00b2 02D1     		bne	.L18
 259              	.L17:
 186:..\src/interruptions.c ****                     rx_data_type = FALSE;
 260              		.loc 1 186 0 is_stmt 1
 261 00b4 0023     		movs	r3, #0
 262 00b6 FB71     		strb	r3, [r7, #7]
 263 00b8 01E0     		b	.L19
 264              	.L18:
 187:..\src/interruptions.c ****                 else                //packet is for others
 188:..\src/interruptions.c ****                     rx_data_type = TRUE;
 265              		.loc 1 188 0
 266 00ba 0123     		movs	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 9


 267 00bc FB71     		strb	r3, [r7, #7]
 268              	.L19:
 189:..\src/interruptions.c ****                 
 190:..\src/interruptions.c ****                 data_packet_length = 0;
 269              		.loc 1 190 0
 270 00be 494B     		ldr	r3, .L31+12
 271 00c0 0022     		movs	r2, #0
 272 00c2 1A70     		strb	r2, [r3]
 191:..\src/interruptions.c ****                 state = WAIT_LENGTH;
 273              		.loc 1 191 0
 274 00c4 444B     		ldr	r3, .L31
 275 00c6 0222     		movs	r2, #2
 276 00c8 1A70     		strb	r2, [r3]
 192:..\src/interruptions.c ****                 break;
 277              		.loc 1 192 0
 278 00ca 78E0     		b	.L8
 279              	.L12:
 193:..\src/interruptions.c **** 
 194:..\src/interruptions.c ****             //-----     wait for length     ------------------------------------
 195:..\src/interruptions.c ****             case  WAIT_LENGTH:
 196:..\src/interruptions.c **** 
 197:..\src/interruptions.c ****                 data_packet_length = rx_data;
 280              		.loc 1 197 0
 281 00cc 454A     		ldr	r2, .L31+12
 282 00ce 7B79     		ldrb	r3, [r7, #5]
 283 00d0 1370     		strb	r3, [r2]
 198:..\src/interruptions.c ****                 // check validity of pack length
 199:..\src/interruptions.c ****                 if (data_packet_length <= 1) {
 284              		.loc 1 199 0
 285 00d2 444B     		ldr	r3, .L31+12
 286 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 00d6 012B     		cmp	r3, #1
 288 00d8 06D8     		bhi	.L20
 200:..\src/interruptions.c ****                     data_packet_length = 0;
 289              		.loc 1 200 0
 290 00da 424B     		ldr	r3, .L31+12
 291 00dc 0022     		movs	r2, #0
 292 00de 1A70     		strb	r2, [r3]
 201:..\src/interruptions.c ****                     state = WAIT_START;
 293              		.loc 1 201 0
 294 00e0 3D4B     		ldr	r3, .L31
 295 00e2 0022     		movs	r2, #0
 296 00e4 1A70     		strb	r2, [r3]
 297 00e6 6AE0     		b	.L8
 298              	.L20:
 202:..\src/interruptions.c ****                 } else if (data_packet_length > 128) {
 299              		.loc 1 202 0
 300 00e8 3E4B     		ldr	r3, .L31+12
 301 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 00ec 802B     		cmp	r3, #128
 303 00ee 06D9     		bls	.L22
 203:..\src/interruptions.c ****                     data_packet_length = 0;
 304              		.loc 1 203 0
 305 00f0 3C4B     		ldr	r3, .L31+12
 306 00f2 0022     		movs	r2, #0
 307 00f4 1A70     		strb	r2, [r3]
 204:..\src/interruptions.c ****                     state = WAIT_START;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 10


 308              		.loc 1 204 0
 309 00f6 384B     		ldr	r3, .L31
 310 00f8 0022     		movs	r2, #0
 311 00fa 1A70     		strb	r2, [r3]
 312 00fc 5FE0     		b	.L8
 313              	.L22:
 205:..\src/interruptions.c ****                 } else {
 206:..\src/interruptions.c ****                     data_packet_index = 0;
 314              		.loc 1 206 0
 315 00fe 3A4B     		ldr	r3, .L31+16
 316 0100 0022     		movs	r2, #0
 317 0102 1A70     		strb	r2, [r3]
 207:..\src/interruptions.c ****                     
 208:..\src/interruptions.c ****                     if(rx_data_type == FALSE)
 318              		.loc 1 208 0
 319 0104 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 320 0106 002B     		cmp	r3, #0
 321 0108 03D1     		bne	.L23
 209:..\src/interruptions.c ****                         state = RECEIVE;          // packet for me or broadcast
 322              		.loc 1 209 0
 323 010a 334B     		ldr	r3, .L31
 324 010c 0322     		movs	r2, #3
 325 010e 1A70     		strb	r2, [r3]
 326 0110 55E0     		b	.L8
 327              	.L23:
 210:..\src/interruptions.c ****                     else
 211:..\src/interruptions.c ****                         state = UNLOAD;           // packet for others
 328              		.loc 1 211 0
 329 0112 314B     		ldr	r3, .L31
 330 0114 0422     		movs	r2, #4
 331 0116 1A70     		strb	r2, [r3]
 212:..\src/interruptions.c ****                 }
 213:..\src/interruptions.c ****                 break;
 332              		.loc 1 213 0
 333 0118 51E0     		b	.L8
 334              	.L13:
 214:..\src/interruptions.c **** 
 215:..\src/interruptions.c ****             //-----     receiving     -------------------------------------------
 216:..\src/interruptions.c ****             case RECEIVE:
 217:..\src/interruptions.c **** 
 218:..\src/interruptions.c ****                 data_packet_buffer[data_packet_index] = rx_data;
 335              		.loc 1 218 0
 336 011a 334B     		ldr	r3, .L31+16
 337 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 011e 1946     		mov	r1, r3
 339 0120 324A     		ldr	r2, .L31+20
 340 0122 7B79     		ldrb	r3, [r7, #5]
 341 0124 5354     		strb	r3, [r2, r1]
 219:..\src/interruptions.c ****                 data_packet_index++;
 342              		.loc 1 219 0
 343 0126 304B     		ldr	r3, .L31+16
 344 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 345 012a 0133     		adds	r3, r3, #1
 346 012c DAB2     		uxtb	r2, r3
 347 012e 2E4B     		ldr	r3, .L31+16
 348 0130 1A70     		strb	r2, [r3]
 220:..\src/interruptions.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 11


 221:..\src/interruptions.c ****                 // check end of transmission
 222:..\src/interruptions.c ****                 if (data_packet_index >= data_packet_length) {
 349              		.loc 1 222 0
 350 0132 2D4B     		ldr	r3, .L31+16
 351 0134 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 352 0136 2B4B     		ldr	r3, .L31+12
 353 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354 013a 9A42     		cmp	r2, r3
 355 013c 3FD3     		bcc	.L8
 223:..\src/interruptions.c ****                     // verify if frame ID corresponded to the device ID
 224:..\src/interruptions.c ****                     if (rx_data_type == FALSE) {
 356              		.loc 1 224 0
 357 013e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 358 0140 002B     		cmp	r3, #0
 359 0142 12D1     		bne	.L25
 225:..\src/interruptions.c ****                         // copying data from buffer to global packet
 226:..\src/interruptions.c ****                         memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 360              		.loc 1 226 0
 361 0144 274B     		ldr	r3, .L31+12
 362 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 0148 1A46     		mov	r2, r3
 364 014a 2849     		ldr	r1, .L31+20
 365 014c 2848     		ldr	r0, .L31+24
 366 014e FFF7FEFF 		bl	memcpy
 227:..\src/interruptions.c ****                         g_rx.length = data_packet_length;
 367              		.loc 1 227 0
 368 0152 244B     		ldr	r3, .L31+12
 369 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 370 0156 1AB2     		sxth	r2, r3
 371 0158 254B     		ldr	r3, .L31+24
 372 015a A3F88020 		strh	r2, [r3, #128]	@ movhi
 228:..\src/interruptions.c ****                         g_rx.ready  = 1;
 373              		.loc 1 228 0
 374 015e 244B     		ldr	r3, .L31+24
 375 0160 0122     		movs	r2, #1
 376 0162 83F88420 		strb	r2, [r3, #132]
 229:..\src/interruptions.c ****                         commProcess();
 377              		.loc 1 229 0
 378 0166 FFF7FEFF 		bl	commProcess
 379              	.L25:
 230:..\src/interruptions.c ****                     }
 231:..\src/interruptions.c ****                     
 232:..\src/interruptions.c ****                     data_packet_index  = 0;
 380              		.loc 1 232 0
 381 016a 1F4B     		ldr	r3, .L31+16
 382 016c 0022     		movs	r2, #0
 383 016e 1A70     		strb	r2, [r3]
 233:..\src/interruptions.c ****                     data_packet_length = 0;
 384              		.loc 1 233 0
 385 0170 1C4B     		ldr	r3, .L31+12
 386 0172 0022     		movs	r2, #0
 387 0174 1A70     		strb	r2, [r3]
 234:..\src/interruptions.c ****                     state              = WAIT_START;
 388              		.loc 1 234 0
 389 0176 184B     		ldr	r3, .L31
 390 0178 0022     		movs	r2, #0
 391 017a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 12


 235:..\src/interruptions.c ****                     package_count++;
 392              		.loc 1 235 0
 393 017c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 394 017e 0133     		adds	r3, r3, #1
 395 0180 BB71     		strb	r3, [r7, #6]
 236:..\src/interruptions.c ****                 
 237:..\src/interruptions.c ****                 }
 238:..\src/interruptions.c ****                 break;
 396              		.loc 1 238 0
 397 0182 1CE0     		b	.L8
 398              	.L14:
 239:..\src/interruptions.c **** 
 240:..\src/interruptions.c ****             //-----     other device is receving     ---------------------------
 241:..\src/interruptions.c ****             case UNLOAD:
 242:..\src/interruptions.c ****                 if (!(--data_packet_length)) {
 399              		.loc 1 242 0
 400 0184 174B     		ldr	r3, .L31+12
 401 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 402 0188 013B     		subs	r3, r3, #1
 403 018a DAB2     		uxtb	r2, r3
 404 018c 154B     		ldr	r3, .L31+12
 405 018e 1A70     		strb	r2, [r3]
 406 0190 144B     		ldr	r3, .L31+12
 407 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 0194 002B     		cmp	r3, #0
 409 0196 11D1     		bne	.L30
 243:..\src/interruptions.c ****                     data_packet_index  = 0;
 410              		.loc 1 243 0
 411 0198 134B     		ldr	r3, .L31+16
 412 019a 0022     		movs	r2, #0
 413 019c 1A70     		strb	r2, [r3]
 244:..\src/interruptions.c ****                     data_packet_length = 0;
 414              		.loc 1 244 0
 415 019e 114B     		ldr	r3, .L31+12
 416 01a0 0022     		movs	r2, #0
 417 01a2 1A70     		strb	r2, [r3]
 245:..\src/interruptions.c ****                     RS485_CTS_Write(1);
 418              		.loc 1 245 0
 419 01a4 0120     		movs	r0, #1
 420 01a6 FFF7FEFF 		bl	RS485_CTS_Write
 246:..\src/interruptions.c ****                     RS485_CTS_Write(0);
 421              		.loc 1 246 0
 422 01aa 0020     		movs	r0, #0
 423 01ac FFF7FEFF 		bl	RS485_CTS_Write
 247:..\src/interruptions.c ****                     state              = WAIT_START;
 424              		.loc 1 247 0
 425 01b0 094B     		ldr	r3, .L31
 426 01b2 0022     		movs	r2, #0
 427 01b4 1A70     		strb	r2, [r3]
 248:..\src/interruptions.c ****                     package_count++;
 428              		.loc 1 248 0
 429 01b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 430 01b8 0133     		adds	r3, r3, #1
 431 01ba BB71     		strb	r3, [r7, #6]
 432              	.L30:
 249:..\src/interruptions.c ****                 }
 250:..\src/interruptions.c ****                 break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 13


 433              		.loc 1 250 0
 434 01bc 00BF     		nop
 435              	.L8:
 154:..\src/interruptions.c ****         // 6 - estimated maximum number of packets we can read without blocking firmware execution
 436              		.loc 1 154 0
 437 01be FFF7FEFF 		bl	UART_RS485_GetRxBufferSize
 438 01c2 0346     		mov	r3, r0
 439 01c4 002B     		cmp	r3, #0
 440 01c6 03D0     		beq	.L29
 154:..\src/interruptions.c ****         // 6 - estimated maximum number of packets we can read without blocking firmware execution
 441              		.loc 1 154 0 is_stmt 0 discriminator 1
 442 01c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 443 01ca 052B     		cmp	r3, #5
 444 01cc 7FF620AF 		bls	.L28
 445              	.L29:
 251:..\src/interruptions.c ****         }
 252:..\src/interruptions.c ****     }
 253:..\src/interruptions.c **** }
 446              		.loc 1 253 0 is_stmt 1
 447 01d0 00BF     		nop
 448 01d2 0837     		adds	r7, r7, #8
 449              		.cfi_def_cfa_offset 8
 450 01d4 BD46     		mov	sp, r7
 451              		.cfi_def_cfa_register 13
 452              		@ sp needed
 453 01d6 80BD     		pop	{r7, pc}
 454              	.L32:
 455              		.align	2
 456              	.L31:
 457 01d8 00000000 		.word	state.10354
 458 01dc 04000000 		.word	rx_queue.10358
 459 01e0 00000000 		.word	c_mem
 460 01e4 07000000 		.word	data_packet_length.10356
 461 01e8 08000000 		.word	data_packet_index.10355
 462 01ec 0C000000 		.word	data_packet_buffer.10357
 463 01f0 00000000 		.word	g_rx
 464              		.cfi_endproc
 465              	.LFE66:
 466              		.size	interrupt_manager, .-interrupt_manager
 467              		.global	__aeabi_i2f
 468              		.global	__aeabi_fdiv
 469              		.section	.text.function_scheduler,"ax",%progbits
 470              		.align	2
 471              		.global	function_scheduler
 472              		.thumb
 473              		.thumb_func
 474              		.type	function_scheduler, %function
 475              	function_scheduler:
 476              	.LFB67:
 254:..\src/interruptions.c **** //==============================================================================
 255:..\src/interruptions.c **** //                                                            FUNCTION SCHEDULER
 256:..\src/interruptions.c **** //==============================================================================
 257:..\src/interruptions.c **** // Call all the function with the right frequency
 258:..\src/interruptions.c **** //==============================================================================
 259:..\src/interruptions.c **** // Base frequency 1000 Hz
 260:..\src/interruptions.c **** //==============================================================================
 261:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 14


 262:..\src/interruptions.c **** void function_scheduler(void) {
 477              		.loc 1 262 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 2504
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481 0000 B0B5     		push	{r4, r5, r7, lr}
 482              		.cfi_def_cfa_offset 16
 483              		.cfi_offset 4, -16
 484              		.cfi_offset 5, -12
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 ADF6C81D 		subw	sp, sp, #2504
 488              		.cfi_def_cfa_offset 2520
 489 0006 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 263:..\src/interruptions.c ****  
 264:..\src/interruptions.c ****     static uint16 counter_calibration = DIV_INIT_VALUE;
 265:..\src/interruptions.c ****     static uint16 counter_tension_func = DIV_INIT_VALUE;
 266:..\src/interruptions.c ****     char info_[2500] = "";
 491              		.loc 1 266 0
 492 0008 3B46     		mov	r3, r7
 493 000a 0022     		movs	r2, #0
 494 000c 1A60     		str	r2, [r3]
 495 000e 0433     		adds	r3, r3, #4
 496 0010 4FF41C62 		mov	r2, #2496
 497 0014 0021     		movs	r1, #0
 498 0016 1846     		mov	r0, r3
 499 0018 FFF7FEFF 		bl	memset
 267:..\src/interruptions.c ****     
 268:..\src/interruptions.c ****     uint8 MOTOR_IDX = 0;
 500              		.loc 1 268 0
 501 001c 0023     		movs	r3, #0
 502 001e 87F8C639 		strb	r3, [r7, #2502]
 269:..\src/interruptions.c ****     uint8 SECOND_MOTOR_IDX = 1;
 503              		.loc 1 269 0
 504 0022 0123     		movs	r3, #1
 505 0024 87F8C539 		strb	r3, [r7, #2501]
 270:..\src/interruptions.c ****     
 271:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x00);
 506              		.loc 1 271 0
 507 0028 0020     		movs	r0, #0
 508 002a FFF7FEFF 		bl	MY_TIMER_REG_Write
 272:..\src/interruptions.c ****     timer_value0 = (uint32)MY_TIMER_ReadCounter();
 509              		.loc 1 272 0
 510 002e FFF7FEFF 		bl	MY_TIMER_ReadCounter
 511 0032 0346     		mov	r3, r0
 512 0034 1A46     		mov	r2, r3
 513 0036 4A4B     		ldr	r3, .L60
 514 0038 1A80     		strh	r2, [r3]	@ movhi
 273:..\src/interruptions.c **** 
 274:..\src/interruptions.c ****     // Start ADC Conversion, SOC = 1
 275:..\src/interruptions.c **** 
 276:..\src/interruptions.c ****     ADC_SOC_Write(0x01); 
 515              		.loc 1 276 0
 516 003a 0120     		movs	r0, #1
 517 003c FFF7FEFF 		bl	ADC_SOC_Write
 277:..\src/interruptions.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 15


 278:..\src/interruptions.c ****     // Check Interrupt 
 279:..\src/interruptions.c **** 
 280:..\src/interruptions.c ****     if (interrupt_flag){
 518              		.loc 1 280 0
 519 0040 484B     		ldr	r3, .L60+4
 520 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 521 0044 002B     		cmp	r3, #0
 522 0046 04D0     		beq	.L34
 281:..\src/interruptions.c ****         interrupt_flag = FALSE;
 523              		.loc 1 281 0
 524 0048 464B     		ldr	r3, .L60+4
 525 004a 0022     		movs	r2, #0
 526 004c 1A70     		strb	r2, [r3]
 282:..\src/interruptions.c ****         interrupt_manager();
 527              		.loc 1 282 0
 528 004e FFF7FEFF 		bl	interrupt_manager
 529              	.L34:
 283:..\src/interruptions.c ****     }
 284:..\src/interruptions.c ****     
 285:..\src/interruptions.c ****     if (c_mem.dev.dev_type == SOFTHAND_PRO){
 530              		.loc 1 285 0
 531 0052 454B     		ldr	r3, .L60+8
 532 0054 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 533 0058 002B     		cmp	r3, #0
 534 005a 42D1     		bne	.L35
 286:..\src/interruptions.c ****         
 287:..\src/interruptions.c ****         //---------------------------------- Get Encoders
 288:..\src/interruptions.c ****         
 289:..\src/interruptions.c ****         // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND
 290:..\src/interruptions.c ****         if (N_Encoder_Line_Connected[c_mem.motor[MOTOR_IDX].encoder_line] > 0) {
 535              		.loc 1 290 0
 536 005c 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 537 0060 4149     		ldr	r1, .L60+8
 538 0062 1346     		mov	r3, r2
 539 0064 DB00     		lsls	r3, r3, #3
 540 0066 9B1A     		subs	r3, r3, r2
 541 0068 1B01     		lsls	r3, r3, #4
 542 006a 0B44     		add	r3, r3, r1
 543 006c 03F58873 		add	r3, r3, #272
 544 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 545 0072 1A46     		mov	r2, r3
 546 0074 3D4B     		ldr	r3, .L60+12
 547 0076 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 548 0078 002B     		cmp	r3, #0
 549 007a 25D0     		beq	.L36
 291:..\src/interruptions.c ****             // Change CS only if there are attached encoders on the line
 292:..\src/interruptions.c ****             Change_CS_EncoderLine(c_mem.motor[MOTOR_IDX].encoder_line);
 550              		.loc 1 292 0
 551 007c 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 552 0080 3949     		ldr	r1, .L60+8
 553 0082 1346     		mov	r3, r2
 554 0084 DB00     		lsls	r3, r3, #3
 555 0086 9B1A     		subs	r3, r3, r2
 556 0088 1B01     		lsls	r3, r3, #4
 557 008a 0B44     		add	r3, r3, r1
 558 008c 03F58873 		add	r3, r3, #272
 559 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 16


 560 0092 1846     		mov	r0, r3
 561 0094 FFF7FEFF 		bl	Change_CS_EncoderLine
 293:..\src/interruptions.c ****             
 294:..\src/interruptions.c ****             encoder_reading_SPI(c_mem.motor[MOTOR_IDX].encoder_line, 0);    // assoc_motor = 0 for 
 562              		.loc 1 294 0
 563 0098 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 564 009c 3249     		ldr	r1, .L60+8
 565 009e 1346     		mov	r3, r2
 566 00a0 DB00     		lsls	r3, r3, #3
 567 00a2 9B1A     		subs	r3, r3, r2
 568 00a4 1B01     		lsls	r3, r3, #4
 569 00a6 0B44     		add	r3, r3, r1
 570 00a8 03F58873 		add	r3, r3, #272
 571 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 572 00ae 0021     		movs	r1, #0
 573 00b0 1846     		mov	r0, r3
 574 00b2 FFF7FEFF 		bl	encoder_reading_SPI
 295:..\src/interruptions.c **** 
 296:..\src/interruptions.c ****             // Check Interrupt     
 297:..\src/interruptions.c ****             
 298:..\src/interruptions.c ****             if (interrupt_flag){
 575              		.loc 1 298 0
 576 00b6 2B4B     		ldr	r3, .L60+4
 577 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 578 00ba 002B     		cmp	r3, #0
 579 00bc 04D0     		beq	.L36
 299:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 580              		.loc 1 299 0
 581 00be 294B     		ldr	r3, .L60+4
 582 00c0 0022     		movs	r2, #0
 583 00c2 1A70     		strb	r2, [r3]
 300:..\src/interruptions.c ****                 interrupt_manager();
 584              		.loc 1 300 0
 585 00c4 FFF7FEFF 		bl	interrupt_manager
 586              	.L36:
 301:..\src/interruptions.c ****             }
 302:..\src/interruptions.c ****         }
 303:..\src/interruptions.c ****         
 304:..\src/interruptions.c ****         //---------------------------------- Control SH Motor
 305:..\src/interruptions.c ****         
 306:..\src/interruptions.c ****         motor_control_SH();
 587              		.loc 1 306 0
 588 00c8 FFF7FEFF 		bl	motor_control_SH
 307:..\src/interruptions.c **** 
 308:..\src/interruptions.c ****         // Check Interrupt 
 309:..\src/interruptions.c **** 
 310:..\src/interruptions.c ****         if (interrupt_flag){
 589              		.loc 1 310 0
 590 00cc 254B     		ldr	r3, .L60+4
 591 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 592 00d0 002B     		cmp	r3, #0
 593 00d2 00F08B80 		beq	.L38
 311:..\src/interruptions.c ****             interrupt_flag = FALSE;
 594              		.loc 1 311 0
 595 00d6 234B     		ldr	r3, .L60+4
 596 00d8 0022     		movs	r2, #0
 597 00da 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 17


 312:..\src/interruptions.c ****             interrupt_manager();
 598              		.loc 1 312 0
 599 00dc FFF7FEFF 		bl	interrupt_manager
 600 00e0 84E0     		b	.L38
 601              	.L35:
 602              	.LBB2:
 313:..\src/interruptions.c ****         }  
 314:..\src/interruptions.c ****     }
 315:..\src/interruptions.c ****     else {      // GENERIC device
 316:..\src/interruptions.c **** 
 317:..\src/interruptions.c ****         //---------------------------------- Get Encoders
 318:..\src/interruptions.c **** 
 319:..\src/interruptions.c ****         for (uint8 i = 0; i < N_ENCODER_LINE_MAX; i++) {
 603              		.loc 1 319 0
 604 00e2 0023     		movs	r3, #0
 605 00e4 87F8C739 		strb	r3, [r7, #2503]
 606 00e8 5BE0     		b	.L39
 607              	.L44:
 320:..\src/interruptions.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 608              		.loc 1 320 0
 609 00ea 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 610 00ee 1F4A     		ldr	r2, .L60+12
 611 00f0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 612 00f2 002B     		cmp	r3, #0
 613 00f4 50D0     		beq	.L40
 321:..\src/interruptions.c ****                 // Change CS only if there are attached encoders on the line
 322:..\src/interruptions.c ****                 Change_CS_EncoderLine(i);
 614              		.loc 1 322 0
 615 00f6 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 616 00fa 1846     		mov	r0, r3
 617 00fc FFF7FEFF 		bl	Change_CS_EncoderLine
 323:..\src/interruptions.c ****                           
 324:..\src/interruptions.c ****                 if (c_mem.motor[MOTOR_IDX].encoder_line == i) {
 618              		.loc 1 324 0
 619 0100 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 620 0104 1849     		ldr	r1, .L60+8
 621 0106 1346     		mov	r3, r2
 622 0108 DB00     		lsls	r3, r3, #3
 623 010a 9B1A     		subs	r3, r3, r2
 624 010c 1B01     		lsls	r3, r3, #4
 625 010e 0B44     		add	r3, r3, r1
 626 0110 03F58873 		add	r3, r3, #272
 627 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 628 0116 97F8C729 		ldrb	r2, [r7, #2503]	@ zero_extendqisi2
 629 011a 9A42     		cmp	r2, r3
 630 011c 08D1     		bne	.L41
 325:..\src/interruptions.c ****                     // Check if the line is used to control motor or not
 326:..\src/interruptions.c ****                     encoder_reading_SPI(i, MOTOR_IDX); 
 631              		.loc 1 326 0
 632 011e 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 633 0122 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 634 0126 1146     		mov	r1, r2
 635 0128 1846     		mov	r0, r3
 636 012a FFF7FEFF 		bl	encoder_reading_SPI
 637 012e 2AE0     		b	.L42
 638              	.L41:
 327:..\src/interruptions.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 18


 328:..\src/interruptions.c ****                 else {
 329:..\src/interruptions.c ****                     if (c_mem.motor[SECOND_MOTOR_IDX].encoder_line == i) {
 639              		.loc 1 329 0
 640 0130 97F8C529 		ldrb	r2, [r7, #2501]	@ zero_extendqisi2
 641 0134 0C49     		ldr	r1, .L60+8
 642 0136 1346     		mov	r3, r2
 643 0138 DB00     		lsls	r3, r3, #3
 644 013a 9B1A     		subs	r3, r3, r2
 645 013c 1B01     		lsls	r3, r3, #4
 646 013e 0B44     		add	r3, r3, r1
 647 0140 03F58873 		add	r3, r3, #272
 648 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 649 0146 97F8C729 		ldrb	r2, [r7, #2503]	@ zero_extendqisi2
 650 014a 9A42     		cmp	r2, r3
 651 014c 10D1     		bne	.L43
 330:..\src/interruptions.c ****                         // Check if the line is used to control motor or not
 331:..\src/interruptions.c ****                         encoder_reading_SPI(i, SECOND_MOTOR_IDX); 
 652              		.loc 1 331 0
 653 014e 97F8C529 		ldrb	r2, [r7, #2501]	@ zero_extendqisi2
 654 0152 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 655 0156 1146     		mov	r1, r2
 656 0158 1846     		mov	r0, r3
 657 015a FFF7FEFF 		bl	encoder_reading_SPI
 658 015e 12E0     		b	.L42
 659              	.L61:
 660              		.align	2
 661              	.L60:
 662 0160 00000000 		.word	timer_value0
 663 0164 00000000 		.word	interrupt_flag
 664 0168 00000000 		.word	c_mem
 665 016c 00000000 		.word	N_Encoder_Line_Connected
 666              	.L43:
 332:..\src/interruptions.c ****                     }
 333:..\src/interruptions.c ****                     else {
 334:..\src/interruptions.c ****                         // Get only raw encoder value
 335:..\src/interruptions.c ****                         ReadEncoderLine(N_Encoder_Line_Connected[i], i);
 667              		.loc 1 335 0
 668 0170 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 669 0174 AC4A     		ldr	r2, .L62
 670 0176 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 671 0178 1A46     		mov	r2, r3
 672 017a 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 673 017e 1946     		mov	r1, r3
 674 0180 1046     		mov	r0, r2
 675 0182 FFF7FEFF 		bl	ReadEncoderLine
 676              	.L42:
 336:..\src/interruptions.c ****                         // Values are stored in Encoder_Value[i] vector
 337:..\src/interruptions.c ****                     }
 338:..\src/interruptions.c ****                 }
 339:..\src/interruptions.c **** 
 340:..\src/interruptions.c ****                 // Check Interrupt     
 341:..\src/interruptions.c ****                 
 342:..\src/interruptions.c ****                 if (interrupt_flag){
 677              		.loc 1 342 0
 678 0186 A94B     		ldr	r3, .L62+4
 679 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 680 018a 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 19


 681 018c 04D0     		beq	.L40
 343:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 682              		.loc 1 343 0
 683 018e A74B     		ldr	r3, .L62+4
 684 0190 0022     		movs	r2, #0
 685 0192 1A70     		strb	r2, [r3]
 344:..\src/interruptions.c ****                     interrupt_manager();
 686              		.loc 1 344 0
 687 0194 FFF7FEFF 		bl	interrupt_manager
 688              	.L40:
 319:..\src/interruptions.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 689              		.loc 1 319 0 discriminator 2
 690 0198 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 691 019c 0133     		adds	r3, r3, #1
 692 019e 87F8C739 		strb	r3, [r7, #2503]
 693              	.L39:
 319:..\src/interruptions.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 694              		.loc 1 319 0 is_stmt 0 discriminator 1
 695 01a2 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 696 01a6 012B     		cmp	r3, #1
 697 01a8 9FD9     		bls	.L44
 698              	.LBE2:
 345:..\src/interruptions.c ****                 }
 346:..\src/interruptions.c ****             }
 347:..\src/interruptions.c ****         } 
 348:..\src/interruptions.c ****         
 349:..\src/interruptions.c ****         //---------------------------------- Control Motor
 350:..\src/interruptions.c ****         
 351:..\src/interruptions.c ****         // Control MOTOR_IDX motor (always active) according to motor driver type
 352:..\src/interruptions.c ****         motor_control_generic(MOTOR_IDX);
 699              		.loc 1 352 0 is_stmt 1
 700 01aa 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 701 01ae 1846     		mov	r0, r3
 702 01b0 FFF7FEFF 		bl	motor_control_generic
 353:..\src/interruptions.c ****         
 354:..\src/interruptions.c ****         // Check Interrupt 
 355:..\src/interruptions.c **** 
 356:..\src/interruptions.c ****         if (interrupt_flag){
 703              		.loc 1 356 0
 704 01b4 9D4B     		ldr	r3, .L62+4
 705 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 706 01b8 002B     		cmp	r3, #0
 707 01ba 04D0     		beq	.L45
 357:..\src/interruptions.c ****             interrupt_flag = FALSE;
 708              		.loc 1 357 0
 709 01bc 9B4B     		ldr	r3, .L62+4
 710 01be 0022     		movs	r2, #0
 711 01c0 1A70     		strb	r2, [r3]
 358:..\src/interruptions.c ****             interrupt_manager();
 712              		.loc 1 358 0
 713 01c2 FFF7FEFF 		bl	interrupt_manager
 714              	.L45:
 359:..\src/interruptions.c ****         }
 360:..\src/interruptions.c ****         
 361:..\src/interruptions.c ****         // Control 2nd motor (if necessary) according to motor driver type
 362:..\src/interruptions.c ****         if (c_mem.dev.use_2nd_motor_flag == TRUE){
 715              		.loc 1 362 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 20


 716 01c6 9A4B     		ldr	r3, .L62+8
 717 01c8 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 718 01cc 012B     		cmp	r3, #1
 719 01ce 0DD1     		bne	.L38
 363:..\src/interruptions.c ****             motor_control_generic(SECOND_MOTOR_IDX);
 720              		.loc 1 363 0
 721 01d0 97F8C539 		ldrb	r3, [r7, #2501]	@ zero_extendqisi2
 722 01d4 1846     		mov	r0, r3
 723 01d6 FFF7FEFF 		bl	motor_control_generic
 364:..\src/interruptions.c ****             
 365:..\src/interruptions.c ****             // Check Interrupt 
 366:..\src/interruptions.c **** 
 367:..\src/interruptions.c ****             if (interrupt_flag){
 724              		.loc 1 367 0
 725 01da 944B     		ldr	r3, .L62+4
 726 01dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 727 01de 002B     		cmp	r3, #0
 728 01e0 04D0     		beq	.L38
 368:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 729              		.loc 1 368 0
 730 01e2 924B     		ldr	r3, .L62+4
 731 01e4 0022     		movs	r2, #0
 732 01e6 1A70     		strb	r2, [r3]
 369:..\src/interruptions.c ****                 interrupt_manager();
 733              		.loc 1 369 0
 734 01e8 FFF7FEFF 		bl	interrupt_manager
 735              	.L38:
 370:..\src/interruptions.c ****             }
 371:..\src/interruptions.c ****         }  
 372:..\src/interruptions.c ****     }
 373:..\src/interruptions.c **** 
 374:..\src/interruptions.c ****     //---------------------------------- Read conversion buffer - LOCK function
 375:..\src/interruptions.c **** 
 376:..\src/interruptions.c ****     analog_read_end();
 736              		.loc 1 376 0
 737 01ec FFF7FEFF 		bl	analog_read_end
 377:..\src/interruptions.c **** 
 378:..\src/interruptions.c ****     if (interrupt_flag){
 738              		.loc 1 378 0
 739 01f0 8E4B     		ldr	r3, .L62+4
 740 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 741 01f4 002B     		cmp	r3, #0
 742 01f6 04D0     		beq	.L46
 379:..\src/interruptions.c ****         interrupt_flag = FALSE;
 743              		.loc 1 379 0
 744 01f8 8C4B     		ldr	r3, .L62+4
 745 01fa 0022     		movs	r2, #0
 746 01fc 1A70     		strb	r2, [r3]
 380:..\src/interruptions.c ****         interrupt_manager();
 747              		.loc 1 380 0
 748 01fe FFF7FEFF 		bl	interrupt_manager
 749              	.L46:
 381:..\src/interruptions.c ****     }
 382:..\src/interruptions.c **** 
 383:..\src/interruptions.c ****     //---------------------------------- Control Overcurrent
 384:..\src/interruptions.c **** 
 385:..\src/interruptions.c ****     overcurrent_control();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 21


 750              		.loc 1 385 0
 751 0202 FFF7FEFF 		bl	overcurrent_control
 386:..\src/interruptions.c ****     
 387:..\src/interruptions.c ****     // Check Interrupt 
 388:..\src/interruptions.c ****     
 389:..\src/interruptions.c ****     if (interrupt_flag){
 752              		.loc 1 389 0
 753 0206 894B     		ldr	r3, .L62+4
 754 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 755 020a 002B     		cmp	r3, #0
 756 020c 04D0     		beq	.L47
 390:..\src/interruptions.c ****         interrupt_flag = FALSE;
 757              		.loc 1 390 0
 758 020e 874B     		ldr	r3, .L62+4
 759 0210 0022     		movs	r2, #0
 760 0212 1A70     		strb	r2, [r3]
 391:..\src/interruptions.c ****         interrupt_manager();
 761              		.loc 1 391 0
 762 0214 FFF7FEFF 		bl	interrupt_manager
 763              	.L47:
 392:..\src/interruptions.c ****     }
 393:..\src/interruptions.c **** 
 394:..\src/interruptions.c ****     //---------------------------------- Calibration 
 395:..\src/interruptions.c **** 
 396:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 397:..\src/interruptions.c ****     if (calib.enabled == TRUE) {
 764              		.loc 1 397 0
 765 0218 864B     		ldr	r3, .L62+12
 766 021a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 767 021c 012B     		cmp	r3, #1
 768 021e 0ED1     		bne	.L48
 398:..\src/interruptions.c ****         if (counter_calibration == CALIBRATION_DIV) {
 769              		.loc 1 398 0
 770 0220 854B     		ldr	r3, .L62+16
 771 0222 1B88     		ldrh	r3, [r3]
 772 0224 0A2B     		cmp	r3, #10
 773 0226 04D1     		bne	.L49
 399:..\src/interruptions.c ****             calibration();
 774              		.loc 1 399 0
 775 0228 FFF7FEFF 		bl	calibration
 400:..\src/interruptions.c ****             counter_calibration = 0;
 776              		.loc 1 400 0
 777 022c 824B     		ldr	r3, .L62+16
 778 022e 0022     		movs	r2, #0
 779 0230 1A80     		strh	r2, [r3]	@ movhi
 780              	.L49:
 401:..\src/interruptions.c ****         }
 402:..\src/interruptions.c ****         counter_calibration++;
 781              		.loc 1 402 0
 782 0232 814B     		ldr	r3, .L62+16
 783 0234 1B88     		ldrh	r3, [r3]
 784 0236 0133     		adds	r3, r3, #1
 785 0238 9AB2     		uxth	r2, r3
 786 023a 7F4B     		ldr	r3, .L62+16
 787 023c 1A80     		strh	r2, [r3]	@ movhi
 788              	.L48:
 403:..\src/interruptions.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 22


 404:..\src/interruptions.c **** 
 405:..\src/interruptions.c ****     // Check Interrupt 
 406:..\src/interruptions.c ****     
 407:..\src/interruptions.c ****     if (interrupt_flag){
 789              		.loc 1 407 0
 790 023e 7B4B     		ldr	r3, .L62+4
 791 0240 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 792 0242 002B     		cmp	r3, #0
 793 0244 04D0     		beq	.L50
 408:..\src/interruptions.c ****         interrupt_flag = FALSE;
 794              		.loc 1 408 0
 795 0246 794B     		ldr	r3, .L62+4
 796 0248 0022     		movs	r2, #0
 797 024a 1A70     		strb	r2, [r3]
 409:..\src/interruptions.c ****         interrupt_manager();
 798              		.loc 1 409 0
 799 024c FFF7FEFF 		bl	interrupt_manager
 800              	.L50:
 410:..\src/interruptions.c ****     }
 411:..\src/interruptions.c ****     
 412:..\src/interruptions.c ****     if (c_mem.dev.dev_type == SOFTHAND_PRO){   
 801              		.loc 1 412 0
 802 0250 774B     		ldr	r3, .L62+8
 803 0252 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 804 0256 002B     		cmp	r3, #0
 805 0258 1CD1     		bne	.L51
 413:..\src/interruptions.c ****     
 414:..\src/interruptions.c ****         //---------------------------------- Rest position check
 415:..\src/interruptions.c **** 
 416:..\src/interruptions.c ****         // Divider 10, freq = 500 Hz
 417:..\src/interruptions.c ****         if (c_mem.SH.rest_position_flag == TRUE){
 806              		.loc 1 417 0
 807 025a 754B     		ldr	r3, .L62+8
 808 025c 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 809 0260 012B     		cmp	r3, #1
 810 0262 17D1     		bne	.L51
 418:..\src/interruptions.c ****             if (counter_calibration == CALIBRATION_DIV) {
 811              		.loc 1 418 0
 812 0264 744B     		ldr	r3, .L62+16
 813 0266 1B88     		ldrh	r3, [r3]
 814 0268 0A2B     		cmp	r3, #10
 815 026a 04D1     		bne	.L52
 419:..\src/interruptions.c ****                     check_rest_position();
 816              		.loc 1 419 0
 817 026c FFF7FEFF 		bl	check_rest_position
 420:..\src/interruptions.c ****                     counter_calibration = 0;
 818              		.loc 1 420 0
 819 0270 714B     		ldr	r3, .L62+16
 820 0272 0022     		movs	r2, #0
 821 0274 1A80     		strh	r2, [r3]	@ movhi
 822              	.L52:
 421:..\src/interruptions.c ****             }
 422:..\src/interruptions.c ****             counter_calibration++;
 823              		.loc 1 422 0
 824 0276 704B     		ldr	r3, .L62+16
 825 0278 1B88     		ldrh	r3, [r3]
 826 027a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 23


 827 027c 9AB2     		uxth	r2, r3
 828 027e 6E4B     		ldr	r3, .L62+16
 829 0280 1A80     		strh	r2, [r3]	@ movhi
 423:..\src/interruptions.c **** 
 424:..\src/interruptions.c ****             // Check Interrupt     
 425:..\src/interruptions.c ****             if (interrupt_flag){
 830              		.loc 1 425 0
 831 0282 6A4B     		ldr	r3, .L62+4
 832 0284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 833 0286 002B     		cmp	r3, #0
 834 0288 04D0     		beq	.L51
 426:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 835              		.loc 1 426 0
 836 028a 684B     		ldr	r3, .L62+4
 837 028c 0022     		movs	r2, #0
 838 028e 1A70     		strb	r2, [r3]
 427:..\src/interruptions.c ****                 interrupt_manager();
 839              		.loc 1 427 0
 840 0290 FFF7FEFF 		bl	interrupt_manager
 841              	.L51:
 428:..\src/interruptions.c ****             }
 429:..\src/interruptions.c ****         }
 430:..\src/interruptions.c ****         
 431:..\src/interruptions.c ****     }
 432:..\src/interruptions.c ****     //---------------------------------- Control Cycles Counter
 433:..\src/interruptions.c **** 
 434:..\src/interruptions.c ****     cycles_counter_update();
 842              		.loc 1 434 0
 843 0294 FFF7FEFF 		bl	cycles_counter_update
 435:..\src/interruptions.c **** 
 436:..\src/interruptions.c ****     // Check Cycles Interrupt 
 437:..\src/interruptions.c ****     
 438:..\src/interruptions.c ****     if (cycles_interrupt_flag){
 844              		.loc 1 438 0
 845 0298 684B     		ldr	r3, .L62+20
 846 029a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 847 029c 002B     		cmp	r3, #0
 848 029e 25D0     		beq	.L53
 439:..\src/interruptions.c ****         cycles_interrupt_flag = FALSE;
 849              		.loc 1 439 0
 850 02a0 664B     		ldr	r3, .L62+20
 851 02a2 0022     		movs	r2, #0
 852 02a4 1A70     		strb	r2, [r3]
 440:..\src/interruptions.c **** 
 441:..\src/interruptions.c ****         // Cycles are written only every 120 seconds (CYCLES_TIMER interrupt)
 442:..\src/interruptions.c ****         // to save EEPROM writings (1M maximum)
 443:..\src/interruptions.c ****         if(can_write) {
 853              		.loc 1 443 0
 854 02a6 664B     		ldr	r3, .L62+24
 855 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 856 02aa 002B     		cmp	r3, #0
 857 02ac 1ED0     		beq	.L53
 444:..\src/interruptions.c ****             cycles_status = PREPARE_DATA;
 858              		.loc 1 444 0
 859 02ae 654B     		ldr	r3, .L62+28
 860 02b0 0022     		movs	r2, #0
 861 02b2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 24


 445:..\src/interruptions.c ****             
 446:..\src/interruptions.c ****             //Update time variable
 447:..\src/interruptions.c ****             g_mem.cnt.total_time_on = g_mem.cnt.total_time_on + 120;  // Add 120 seconds.
 862              		.loc 1 447 0
 863 02b4 644B     		ldr	r3, .L62+32
 864 02b6 9B6D     		ldr	r3, [r3, #88]
 865 02b8 7833     		adds	r3, r3, #120
 866 02ba 634A     		ldr	r2, .L62+32
 867 02bc 9365     		str	r3, [r2, #88]
 448:..\src/interruptions.c ****             
 449:..\src/interruptions.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 868              		.loc 1 449 0
 869 02be 5C4B     		ldr	r3, .L62+8
 870 02c0 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 871 02c4 012B     		cmp	r3, #1
 872 02c6 11D1     		bne	.L53
 450:..\src/interruptions.c ****                 
 451:..\src/interruptions.c ****                 store_RTC_current_time();
 873              		.loc 1 451 0
 874 02c8 FFF7FEFF 		bl	store_RTC_current_time
 452:..\src/interruptions.c ****                 
 453:..\src/interruptions.c ****                 //Write in SD card
 454:..\src/interruptions.c ****                 prepare_SD_info(info_);
 875              		.loc 1 454 0
 876 02cc 3B46     		mov	r3, r7
 877 02ce 1846     		mov	r0, r3
 878 02d0 FFF7FEFF 		bl	prepare_SD_info
 455:..\src/interruptions.c ****                 FS_Write(pFile, info_, strlen(info_));
 879              		.loc 1 455 0
 880 02d4 5D4B     		ldr	r3, .L62+36
 881 02d6 1C68     		ldr	r4, [r3]
 882 02d8 3B46     		mov	r3, r7
 883 02da 1846     		mov	r0, r3
 884 02dc FFF7FEFF 		bl	strlen
 885 02e0 0246     		mov	r2, r0
 886 02e2 3B46     		mov	r3, r7
 887 02e4 1946     		mov	r1, r3
 888 02e6 2046     		mov	r0, r4
 889 02e8 FFF7FEFF 		bl	FS_Write
 890              	.L53:
 456:..\src/interruptions.c ****             }
 457:..\src/interruptions.c ****         }
 458:..\src/interruptions.c ****     }
 459:..\src/interruptions.c ****     
 460:..\src/interruptions.c ****     // Check Interrupt 
 461:..\src/interruptions.c ****     
 462:..\src/interruptions.c ****     if (interrupt_flag){
 891              		.loc 1 462 0
 892 02ec 4F4B     		ldr	r3, .L62+4
 893 02ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 894 02f0 002B     		cmp	r3, #0
 895 02f2 04D0     		beq	.L54
 463:..\src/interruptions.c ****         interrupt_flag = FALSE;
 896              		.loc 1 463 0
 897 02f4 4D4B     		ldr	r3, .L62+4
 898 02f6 0022     		movs	r2, #0
 899 02f8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 25


 464:..\src/interruptions.c ****         interrupt_manager();
 900              		.loc 1 464 0
 901 02fa FFF7FEFF 		bl	interrupt_manager
 902              	.L54:
 465:..\src/interruptions.c ****     }
 466:..\src/interruptions.c ****     
 467:..\src/interruptions.c ****     
 468:..\src/interruptions.c ****     //---------------------------------- Check battery
 469:..\src/interruptions.c **** 
 470:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 471:..\src/interruptions.c ****     if (counter_tension_func == CALIBRATION_DIV) {
 903              		.loc 1 471 0
 904 02fe 544B     		ldr	r3, .L62+40
 905 0300 1B88     		ldrh	r3, [r3]
 906 0302 0A2B     		cmp	r3, #10
 907 0304 04D1     		bne	.L55
 472:..\src/interruptions.c ****         battery_management();   
 908              		.loc 1 472 0
 909 0306 FFF7FEFF 		bl	battery_management
 473:..\src/interruptions.c ****         counter_tension_func = 0;
 910              		.loc 1 473 0
 911 030a 514B     		ldr	r3, .L62+40
 912 030c 0022     		movs	r2, #0
 913 030e 1A80     		strh	r2, [r3]	@ movhi
 914              	.L55:
 474:..\src/interruptions.c ****     }
 475:..\src/interruptions.c ****     counter_tension_func++;
 915              		.loc 1 475 0
 916 0310 4F4B     		ldr	r3, .L62+40
 917 0312 1B88     		ldrh	r3, [r3]
 918 0314 0133     		adds	r3, r3, #1
 919 0316 9AB2     		uxth	r2, r3
 920 0318 4D4B     		ldr	r3, .L62+40
 921 031a 1A80     		strh	r2, [r3]	@ movhi
 476:..\src/interruptions.c **** 
 477:..\src/interruptions.c ****     // Check Interrupt 
 478:..\src/interruptions.c ****     
 479:..\src/interruptions.c ****     if (interrupt_flag){
 922              		.loc 1 479 0
 923 031c 434B     		ldr	r3, .L62+4
 924 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 925 0320 002B     		cmp	r3, #0
 926 0322 04D0     		beq	.L56
 480:..\src/interruptions.c ****         interrupt_flag = FALSE;
 927              		.loc 1 480 0
 928 0324 414B     		ldr	r3, .L62+4
 929 0326 0022     		movs	r2, #0
 930 0328 1A70     		strb	r2, [r3]
 481:..\src/interruptions.c ****         interrupt_manager();
 931              		.loc 1 481 0
 932 032a FFF7FEFF 		bl	interrupt_manager
 933              	.L56:
 482:..\src/interruptions.c ****     }
 483:..\src/interruptions.c ****    
 484:..\src/interruptions.c ****     //---------------------------------- Read IMUs
 485:..\src/interruptions.c ****     if (c_mem.imu.read_imu_flag) {
 934              		.loc 1 485 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 26


 935 032e 404B     		ldr	r3, .L62+8
 936 0330 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 937 0334 002B     		cmp	r3, #0
 938 0336 0AD0     		beq	.L57
 486:..\src/interruptions.c ****         ReadAllIMUs();      // IMU reading is atomic, no RS485 request is handled
 939              		.loc 1 486 0
 940 0338 FFF7FEFF 		bl	ReadAllIMUs
 487:..\src/interruptions.c ****         
 488:..\src/interruptions.c ****         if (interrupt_flag){
 941              		.loc 1 488 0
 942 033c 3B4B     		ldr	r3, .L62+4
 943 033e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 944 0340 002B     		cmp	r3, #0
 945 0342 04D0     		beq	.L57
 489:..\src/interruptions.c ****             interrupt_flag = FALSE;
 946              		.loc 1 489 0
 947 0344 394B     		ldr	r3, .L62+4
 948 0346 0022     		movs	r2, #0
 949 0348 1A70     		strb	r2, [r3]
 490:..\src/interruptions.c ****             interrupt_manager();
 950              		.loc 1 490 0
 951 034a FFF7FEFF 		bl	interrupt_manager
 952              	.L57:
 491:..\src/interruptions.c ****         }
 492:..\src/interruptions.c ****     }
 493:..\src/interruptions.c ****    
 494:..\src/interruptions.c ****     //---------------------------------- Update States
 495:..\src/interruptions.c ****     
 496:..\src/interruptions.c ****     // Load k-1 state
 497:..\src/interruptions.c ****     memcpy( &g_emg_measOld, &g_emg_meas, sizeof(g_emg_meas) );
 953              		.loc 1 497 0
 954 034e 414A     		ldr	r2, .L62+44
 955 0350 414B     		ldr	r3, .L62+48
 956 0352 1446     		mov	r4, r2
 957 0354 1D46     		mov	r5, r3
 958 0356 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 959 0358 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 960 035a 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 961 035e 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 498:..\src/interruptions.c ****     memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 962              		.loc 1 498 0
 963 0362 3E4A     		ldr	r2, .L62+52
 964 0364 3E4B     		ldr	r3, .L62+56
 965 0366 1046     		mov	r0, r2
 966 0368 1946     		mov	r1, r3
 967 036a 6023     		movs	r3, #96
 968 036c 1A46     		mov	r2, r3
 969 036e FFF7FEFF 		bl	memcpy
 499:..\src/interruptions.c ****     memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 970              		.loc 1 499 0
 971 0372 3C4A     		ldr	r2, .L62+60
 972 0374 3C4B     		ldr	r3, .L62+64
 973 0376 1446     		mov	r4, r2
 974 0378 1D46     		mov	r5, r3
 975 037a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 976 037c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 977 037e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 27


 978 0382 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 500:..\src/interruptions.c **** 
 501:..\src/interruptions.c ****     // Load k+1 state        
 502:..\src/interruptions.c ****     memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 979              		.loc 1 502 0
 980 0386 384A     		ldr	r2, .L62+64
 981 0388 384B     		ldr	r3, .L62+68
 982 038a 1446     		mov	r4, r2
 983 038c 1D46     		mov	r5, r3
 984 038e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 985 0390 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 986 0392 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 987 0396 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 503:..\src/interruptions.c ****     memcpy( &g_imu, &g_imuNew, sizeof(g_imu) );
 988              		.loc 1 503 0
 989 039a 354A     		ldr	r2, .L62+72
 990 039c 354B     		ldr	r3, .L62+76
 991 039e 1046     		mov	r0, r2
 992 03a0 1946     		mov	r1, r3
 993 03a2 C823     		movs	r3, #200
 994 03a4 1A46     		mov	r2, r3
 995 03a6 FFF7FEFF 		bl	memcpy
 504:..\src/interruptions.c ****                 
 505:..\src/interruptions.c ****     if (interrupt_flag){
 996              		.loc 1 505 0
 997 03aa 204B     		ldr	r3, .L62+4
 998 03ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 03ae 002B     		cmp	r3, #0
 1000 03b0 04D0     		beq	.L58
 506:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1001              		.loc 1 506 0
 1002 03b2 1E4B     		ldr	r3, .L62+4
 1003 03b4 0022     		movs	r2, #0
 1004 03b6 1A70     		strb	r2, [r3]
 507:..\src/interruptions.c ****         interrupt_manager();
 1005              		.loc 1 507 0
 1006 03b8 FFF7FEFF 		bl	interrupt_manager
 1007              	.L58:
 508:..\src/interruptions.c ****     }
 509:..\src/interruptions.c **** 
 510:..\src/interruptions.c ****     if (c_mem.dev.dev_type == SOFTHAND_PRO) {
 1008              		.loc 1 510 0
 1009 03bc 1C4B     		ldr	r3, .L62+8
 1010 03be 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1011 03c2 002B     		cmp	r3, #0
 1012 03c4 0FD1     		bne	.L59
 511:..\src/interruptions.c ****         if (c_mem.motor[MOTOR_IDX].input_mode == INPUT_MODE_EXTERNAL) {
 1013              		.loc 1 511 0
 1014 03c6 97F8C629 		ldrb	r2, [r7, #2502]	@ zero_extendqisi2
 1015 03ca 1949     		ldr	r1, .L62+8
 1016 03cc 1346     		mov	r3, r2
 1017 03ce DB00     		lsls	r3, r3, #3
 1018 03d0 9B1A     		subs	r3, r3, r2
 1019 03d2 1B01     		lsls	r3, r3, #4
 1020 03d4 0B44     		add	r3, r3, r1
 1021 03d6 03F58773 		add	r3, r3, #270
 1022 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 28


 1023 03dc 002B     		cmp	r3, #0
 1024 03de 02D1     		bne	.L59
 512:..\src/interruptions.c ****             change_ext_ref_flag = FALSE;
 1025              		.loc 1 512 0
 1026 03e0 254B     		ldr	r3, .L62+80
 1027 03e2 0022     		movs	r2, #0
 1028 03e4 1A70     		strb	r2, [r3]
 1029              	.L59:
 513:..\src/interruptions.c ****         }   
 514:..\src/interruptions.c ****     }
 515:..\src/interruptions.c **** 
 516:..\src/interruptions.c ****     timer_value = (uint16)MY_TIMER_ReadCounter();
 1030              		.loc 1 516 0
 1031 03e6 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 1032 03ea 0346     		mov	r3, r0
 1033 03ec 1A46     		mov	r2, r3
 1034 03ee 234B     		ldr	r3, .L62+84
 1035 03f0 1A80     		strh	r2, [r3]	@ movhi
 517:..\src/interruptions.c ****     cycle_time = ((float)(timer_value0 - timer_value)/1000000.0);
 1036              		.loc 1 517 0
 1037 03f2 234B     		ldr	r3, .L62+88
 1038 03f4 1B88     		ldrh	r3, [r3]
 1039 03f6 1A46     		mov	r2, r3
 1040 03f8 204B     		ldr	r3, .L62+84
 1041 03fa 1B88     		ldrh	r3, [r3]
 1042 03fc D31A     		subs	r3, r2, r3
 1043 03fe 1846     		mov	r0, r3
 1044 0400 FFF7FEFF 		bl	__aeabi_i2f
 1045 0404 0346     		mov	r3, r0
 1046 0406 1F49     		ldr	r1, .L62+92
 1047 0408 1846     		mov	r0, r3
 1048 040a FFF7FEFF 		bl	__aeabi_fdiv
 1049 040e 0346     		mov	r3, r0
 1050 0410 1A46     		mov	r2, r3
 1051 0412 1D4B     		ldr	r3, .L62+96
 1052 0414 1A60     		str	r2, [r3]	@ float
 518:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x01);   // reset timer
 1053              		.loc 1 518 0
 1054 0416 0120     		movs	r0, #1
 1055 0418 FFF7FEFF 		bl	MY_TIMER_REG_Write
 519:..\src/interruptions.c **** 
 520:..\src/interruptions.c **** }
 1056              		.loc 1 520 0
 1057 041c 00BF     		nop
 1058 041e 07F6C817 		addw	r7, r7, #2504
 1059              		.cfi_def_cfa_offset 16
 1060 0422 BD46     		mov	sp, r7
 1061              		.cfi_def_cfa_register 13
 1062              		@ sp needed
 1063 0424 B0BD     		pop	{r4, r5, r7, pc}
 1064              	.L63:
 1065 0426 00BF     		.align	2
 1066              	.L62:
 1067 0428 00000000 		.word	N_Encoder_Line_Connected
 1068 042c 00000000 		.word	interrupt_flag
 1069 0430 00000000 		.word	c_mem
 1070 0434 00000000 		.word	calib
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 29


 1071 0438 00000000 		.word	counter_calibration.10374
 1072 043c 00000000 		.word	cycles_interrupt_flag
 1073 0440 00000000 		.word	can_write
 1074 0444 00000000 		.word	cycles_status
 1075 0448 00000000 		.word	g_mem
 1076 044c 00000000 		.word	pFile
 1077 0450 02000000 		.word	counter_tension_func.10375
 1078 0454 00000000 		.word	g_emg_measOld
 1079 0458 00000000 		.word	g_emg_meas
 1080 045c 00000000 		.word	g_measOld
 1081 0460 00000000 		.word	g_meas
 1082 0464 00000000 		.word	g_refOld
 1083 0468 00000000 		.word	g_ref
 1084 046c 00000000 		.word	g_refNew
 1085 0470 00000000 		.word	g_imu
 1086 0474 00000000 		.word	g_imuNew
 1087 0478 00000000 		.word	change_ext_ref_flag
 1088 047c 00000000 		.word	timer_value
 1089 0480 00000000 		.word	timer_value0
 1090 0484 00247449 		.word	1232348160
 1091 0488 00000000 		.word	cycle_time
 1092              		.cfi_endproc
 1093              	.LFE67:
 1094              		.size	function_scheduler, .-function_scheduler
 1095              		.section	.text.motor_control_SH,"ax",%progbits
 1096              		.align	2
 1097              		.global	motor_control_SH
 1098              		.thumb
 1099              		.thumb_func
 1100              		.type	motor_control_SH, %function
 1101              	motor_control_SH:
 1102              	.LFB68:
 521:..\src/interruptions.c **** 
 522:..\src/interruptions.c **** //==============================================================================
 523:..\src/interruptions.c **** //                                                        MOTOR CONTROL SOFTHAND
 524:..\src/interruptions.c **** //==============================================================================
 525:..\src/interruptions.c **** void motor_control_SH() {
 1103              		.loc 1 525 0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 88
 1106              		@ frame_needed = 1, uses_anonymous_args = 0
 1107 0000 80B5     		push	{r7, lr}
 1108              		.cfi_def_cfa_offset 8
 1109              		.cfi_offset 7, -8
 1110              		.cfi_offset 14, -4
 1111 0002 96B0     		sub	sp, sp, #88
 1112              		.cfi_def_cfa_offset 96
 1113 0004 00AF     		add	r7, sp, #0
 1114              		.cfi_def_cfa_register 7
 526:..\src/interruptions.c **** 
 527:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 1115              		.loc 1 527 0
 1116 0006 0023     		movs	r3, #0
 1117 0008 7B65     		str	r3, [r7, #84]
 528:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
 529:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
 530:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 30


 531:..\src/interruptions.c ****     int32 CYDATA handle_value;
 532:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 533:..\src/interruptions.c **** 
 534:..\src/interruptions.c ****     uint8 MOTOR_IDX = 0;
 1118              		.loc 1 534 0
 1119 000a 0023     		movs	r3, #0
 1120 000c 87F84730 		strb	r3, [r7, #71]
 535:..\src/interruptions.c ****     
 536:..\src/interruptions.c ****     struct st_motor* SH_MOT = &c_mem.motor[MOTOR_IDX];      // SoftHand default motor
 1121              		.loc 1 536 0
 1122 0010 97F84720 		ldrb	r2, [r7, #71]	@ zero_extendqisi2
 1123 0014 1346     		mov	r3, r2
 1124 0016 DB00     		lsls	r3, r3, #3
 1125 0018 9B1A     		subs	r3, r3, r2
 1126 001a 1B01     		lsls	r3, r3, #4
 1127 001c B033     		adds	r3, r3, #176
 1128 001e A64A     		ldr	r2, .L177
 1129 0020 1344     		add	r3, r3, r2
 1130 0022 3B64     		str	r3, [r7, #64]
 537:..\src/interruptions.c ****     uint8 SH_ENC_L = SH_MOT->encoder_line;          // Associated encoder line
 1131              		.loc 1 537 0
 1132 0024 3B6C     		ldr	r3, [r7, #64]
 1133 0026 93F86030 		ldrb	r3, [r3, #96]
 1134 002a 87F83F30 		strb	r3, [r7, #63]
 538:..\src/interruptions.c ****     
 539:..\src/interruptions.c ****     int32 CYDATA k_p = SH_MOT->k_p;  
 1135              		.loc 1 539 0
 1136 002e 3B6C     		ldr	r3, [r7, #64]
 1137 0030 1B68     		ldr	r3, [r3]
 1138 0032 BB63     		str	r3, [r7, #56]
 540:..\src/interruptions.c ****     int32 CYDATA k_i = SH_MOT->k_i; 
 1139              		.loc 1 540 0
 1140 0034 3B6C     		ldr	r3, [r7, #64]
 1141 0036 5B68     		ldr	r3, [r3, #4]
 1142 0038 7B63     		str	r3, [r7, #52]
 541:..\src/interruptions.c ****     int32 CYDATA k_d = SH_MOT->k_d; 
 1143              		.loc 1 541 0
 1144 003a 3B6C     		ldr	r3, [r7, #64]
 1145 003c 9B68     		ldr	r3, [r3, #8]
 1146 003e 3B63     		str	r3, [r7, #48]
 542:..\src/interruptions.c **** 
 543:..\src/interruptions.c ****     int32 CYDATA k_p_c = SH_MOT->k_p_c;  
 1147              		.loc 1 543 0
 1148 0040 3B6C     		ldr	r3, [r7, #64]
 1149 0042 DB68     		ldr	r3, [r3, #12]
 1150 0044 FB62     		str	r3, [r7, #44]
 544:..\src/interruptions.c ****     int32 CYDATA k_i_c = SH_MOT->k_i_c; 
 1151              		.loc 1 544 0
 1152 0046 3B6C     		ldr	r3, [r7, #64]
 1153 0048 1B69     		ldr	r3, [r3, #16]
 1154 004a BB62     		str	r3, [r7, #40]
 545:..\src/interruptions.c ****     int32 CYDATA k_d_c = SH_MOT->k_d_c;   
 1155              		.loc 1 545 0
 1156 004c 3B6C     		ldr	r3, [r7, #64]
 1157 004e 5B69     		ldr	r3, [r3, #20]
 1158 0050 7B62     		str	r3, [r7, #36]
 546:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 31


 547:..\src/interruptions.c ****     int32 CYDATA k_p_dl = SH_MOT->k_p_dl;  
 1159              		.loc 1 547 0
 1160 0052 3B6C     		ldr	r3, [r7, #64]
 1161 0054 9B69     		ldr	r3, [r3, #24]
 1162 0056 3B62     		str	r3, [r7, #32]
 548:..\src/interruptions.c ****     int32 CYDATA k_i_dl = SH_MOT->k_i_dl; 
 1163              		.loc 1 548 0
 1164 0058 3B6C     		ldr	r3, [r7, #64]
 1165 005a DB69     		ldr	r3, [r3, #28]
 1166 005c FB61     		str	r3, [r7, #28]
 549:..\src/interruptions.c ****     int32 CYDATA k_d_dl = SH_MOT->k_d_dl;
 1167              		.loc 1 549 0
 1168 005e 3B6C     		ldr	r3, [r7, #64]
 1169 0060 1B6A     		ldr	r3, [r3, #32]
 1170 0062 BB61     		str	r3, [r7, #24]
 550:..\src/interruptions.c ****     
 551:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = SH_MOT->k_p_c_dl;  
 1171              		.loc 1 551 0
 1172 0064 3B6C     		ldr	r3, [r7, #64]
 1173 0066 5B6A     		ldr	r3, [r3, #36]
 1174 0068 7B61     		str	r3, [r7, #20]
 552:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = SH_MOT->k_i_c_dl; 
 1175              		.loc 1 552 0
 1176 006a 3B6C     		ldr	r3, [r7, #64]
 1177 006c 9B6A     		ldr	r3, [r3, #40]
 1178 006e 3B61     		str	r3, [r7, #16]
 553:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = SH_MOT->k_d_c_dl;   
 1179              		.loc 1 553 0
 1180 0070 3B6C     		ldr	r3, [r7, #64]
 1181 0072 DB6A     		ldr	r3, [r3, #44]
 1182 0074 FB60     		str	r3, [r7, #12]
 554:..\src/interruptions.c **** 
 555:..\src/interruptions.c ****     // Static Variables
 556:..\src/interruptions.c **** 
 557:..\src/interruptions.c ****     static int32 pos_error_sum;     // position error sum for integral
 558:..\src/interruptions.c ****     static int32 curr_error_sum;    // current error sum for integral
 559:..\src/interruptions.c ****     
 560:..\src/interruptions.c ****     static int32 prev_pos_err;      // previous position error for deriv. control
 561:..\src/interruptions.c ****     static int32 prev_curr_err;     // previous current error for deriv. control
 562:..\src/interruptions.c ****     static int32 prev_pwm;
 563:..\src/interruptions.c **** 
 564:..\src/interruptions.c ****     static CYBIT motor_dir = FALSE;
 565:..\src/interruptions.c ****     static uint32 position_counter = 0;
 566:..\src/interruptions.c ****     static uint8 current_emg = 0;   // 0 NONE
 567:..\src/interruptions.c ****                                     // 1 EMG 1
 568:..\src/interruptions.c ****                                     // 2 EMG 2
 569:..\src/interruptions.c ****                                     // wait for both to get down
 570:..\src/interruptions.c ****     
 571:..\src/interruptions.c **** 
 572:..\src/interruptions.c ****     err_emg_1 = g_emg_meas.emg[0] - c_mem.emg.emg_threshold[0];
 1183              		.loc 1 572 0
 1184 0076 914B     		ldr	r3, .L177+4
 1185 0078 1B68     		ldr	r3, [r3]
 1186 007a 8F4A     		ldr	r2, .L177
 1187 007c B2F8F021 		ldrh	r2, [r2, #496]
 1188 0080 9B1A     		subs	r3, r3, r2
 1189 0082 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 32


 573:..\src/interruptions.c ****     err_emg_2 = g_emg_meas.emg[1] - c_mem.emg.emg_threshold[1];
 1190              		.loc 1 573 0
 1191 0084 8D4B     		ldr	r3, .L177+4
 1192 0086 5B68     		ldr	r3, [r3, #4]
 1193 0088 8B4A     		ldr	r2, .L177
 1194 008a B2F8F221 		ldrh	r2, [r2, #498]
 1195 008e 9B1A     		subs	r3, r3, r2
 1196 0090 7B60     		str	r3, [r7, #4]
 574:..\src/interruptions.c **** 
 575:..\src/interruptions.c ****     // =========================== POSITION INPUT ==============================            
 576:..\src/interruptions.c ****     switch(SH_MOT->input_mode) {
 1197              		.loc 1 576 0
 1198 0092 3B6C     		ldr	r3, [r7, #64]
 1199 0094 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 1200 0098 013B     		subs	r3, r3, #1
 1201 009a 042B     		cmp	r3, #4
 1202 009c 00F2A581 		bhi	.L169
 1203 00a0 01A2     		adr	r2, .L67
 1204 00a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1205 00a6 00BF     		.p2align 2
 1206              	.L67:
 1207 00a8 BD000000 		.word	.L66+1
 1208 00ac A3010000 		.word	.L68+1
 1209 00b0 D1010000 		.word	.L69+1
 1210 00b4 39020000 		.word	.L70+1
 1211 00b8 11030000 		.word	.L71+1
 1212              		.p2align 1
 1213              	.L66:
 577:..\src/interruptions.c ****         case INPUT_MODE_ENCODER3:
 578:..\src/interruptions.c **** 
 579:..\src/interruptions.c ****             // Calculate handle value based on position of handle in the
 580:..\src/interruptions.c ****             // sensor chain and multiplication factor between handle and motor position
 581:..\src/interruptions.c ****             if (c_mem.enc[SH_ENC_L].double_encoder_on_off) 
 1214              		.loc 1 581 0
 1215 00bc 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 1216 00c0 7D49     		ldr	r1, .L177
 1217 00c2 1346     		mov	r3, r2
 1218 00c4 5B00     		lsls	r3, r3, #1
 1219 00c6 1344     		add	r3, r3, r2
 1220 00c8 1B01     		lsls	r3, r3, #4
 1221 00ca 0B44     		add	r3, r3, r1
 1222 00cc 03F5D873 		add	r3, r3, #432
 1223 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1224 00d2 002B     		cmp	r3, #0
 1225 00d4 1CD0     		beq	.L72
 582:..\src/interruptions.c ****                 handle_value = (g_meas[SH_ENC_L].pos[2] * c_mem.enc[SH_ENC_L].motor_handle_ratio) +
 1226              		.loc 1 582 0
 1227 00d6 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 1228 00da 7949     		ldr	r1, .L177+8
 1229 00dc 1346     		mov	r3, r2
 1230 00de 5B00     		lsls	r3, r3, #1
 1231 00e0 1344     		add	r3, r3, r2
 1232 00e2 1B01     		lsls	r3, r3, #4
 1233 00e4 0B44     		add	r3, r3, r1
 1234 00e6 0833     		adds	r3, r3, #8
 1235 00e8 1968     		ldr	r1, [r3]
 1236 00ea 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 33


 1237 00ee 7248     		ldr	r0, .L177
 1238 00f0 1346     		mov	r3, r2
 1239 00f2 5B00     		lsls	r3, r3, #1
 1240 00f4 1344     		add	r3, r3, r2
 1241 00f6 1B01     		lsls	r3, r3, #4
 1242 00f8 0344     		add	r3, r3, r0
 1243 00fa 03F5DA73 		add	r3, r3, #436
 1244 00fe 93F90030 		ldrsb	r3, [r3]
 1245 0102 03FB01F2 		mul	r2, r3, r1
 1246 0106 3B6C     		ldr	r3, [r7, #64]
 1247 0108 5B6B     		ldr	r3, [r3, #52]
 1248 010a 1344     		add	r3, r3, r2
 1249 010c BB64     		str	r3, [r7, #72]
 1250 010e 1BE0     		b	.L73
 1251              	.L72:
 583:..\src/interruptions.c ****             else
 584:..\src/interruptions.c ****                 handle_value = (g_meas[SH_ENC_L].pos[1] * c_mem.enc[SH_ENC_L].motor_handle_ratio) +
 1252              		.loc 1 584 0
 1253 0110 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 1254 0114 6A49     		ldr	r1, .L177+8
 1255 0116 1346     		mov	r3, r2
 1256 0118 5B00     		lsls	r3, r3, #1
 1257 011a 1344     		add	r3, r3, r2
 1258 011c 1B01     		lsls	r3, r3, #4
 1259 011e 0B44     		add	r3, r3, r1
 1260 0120 0433     		adds	r3, r3, #4
 1261 0122 1968     		ldr	r1, [r3]
 1262 0124 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 1263 0128 6348     		ldr	r0, .L177
 1264 012a 1346     		mov	r3, r2
 1265 012c 5B00     		lsls	r3, r3, #1
 1266 012e 1344     		add	r3, r3, r2
 1267 0130 1B01     		lsls	r3, r3, #4
 1268 0132 0344     		add	r3, r3, r0
 1269 0134 03F5DA73 		add	r3, r3, #436
 1270 0138 93F90030 		ldrsb	r3, [r3]
 1271 013c 03FB01F2 		mul	r2, r3, r1
 1272 0140 3B6C     		ldr	r3, [r7, #64]
 1273 0142 5B6B     		ldr	r3, [r3, #52]
 1274 0144 1344     		add	r3, r3, r2
 1275 0146 BB64     		str	r3, [r7, #72]
 1276              	.L73:
 585:..\src/interruptions.c ****             
 586:..\src/interruptions.c **** 
 587:..\src/interruptions.c ****             // Read handle and use it as reference for the motor
 588:..\src/interruptions.c ****             if (((handle_value - g_refOld[0].pos) > SH_MOT->max_step_pos) && (SH_MOT->max_step_pos 
 1277              		.loc 1 588 0
 1278 0148 5E4B     		ldr	r3, .L177+12
 1279 014a 1B68     		ldr	r3, [r3]
 1280 014c BA6C     		ldr	r2, [r7, #72]
 1281 014e D21A     		subs	r2, r2, r3
 1282 0150 3B6C     		ldr	r3, [r7, #64]
 1283 0152 1B6C     		ldr	r3, [r3, #64]
 1284 0154 9A42     		cmp	r2, r3
 1285 0156 0BDD     		ble	.L74
 1286              		.loc 1 588 0 is_stmt 0 discriminator 1
 1287 0158 3B6C     		ldr	r3, [r7, #64]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 34


 1288 015a 1B6C     		ldr	r3, [r3, #64]
 1289 015c 002B     		cmp	r3, #0
 1290 015e 07D0     		beq	.L74
 589:..\src/interruptions.c ****                 g_ref[0].pos += SH_MOT->max_step_pos;
 1291              		.loc 1 589 0 is_stmt 1
 1292 0160 594B     		ldr	r3, .L177+16
 1293 0162 1A68     		ldr	r2, [r3]
 1294 0164 3B6C     		ldr	r3, [r7, #64]
 1295 0166 1B6C     		ldr	r3, [r3, #64]
 1296 0168 1344     		add	r3, r3, r2
 1297 016a 574A     		ldr	r2, .L177+16
 1298 016c 1360     		str	r3, [r2]
 1299 016e 17E0     		b	.L75
 1300              	.L74:
 590:..\src/interruptions.c ****             else {
 591:..\src/interruptions.c ****                 if (((handle_value - g_refOld[0].pos) < SH_MOT->max_step_neg) && (SH_MOT->max_step_
 1301              		.loc 1 591 0
 1302 0170 544B     		ldr	r3, .L177+12
 1303 0172 1B68     		ldr	r3, [r3]
 1304 0174 BA6C     		ldr	r2, [r7, #72]
 1305 0176 D21A     		subs	r2, r2, r3
 1306 0178 3B6C     		ldr	r3, [r7, #64]
 1307 017a DB6B     		ldr	r3, [r3, #60]
 1308 017c 9A42     		cmp	r2, r3
 1309 017e 0BDA     		bge	.L76
 1310              		.loc 1 591 0 is_stmt 0 discriminator 1
 1311 0180 3B6C     		ldr	r3, [r7, #64]
 1312 0182 DB6B     		ldr	r3, [r3, #60]
 1313 0184 002B     		cmp	r3, #0
 1314 0186 07D0     		beq	.L76
 592:..\src/interruptions.c ****                     g_ref[0].pos += SH_MOT->max_step_neg;
 1315              		.loc 1 592 0 is_stmt 1
 1316 0188 4F4B     		ldr	r3, .L177+16
 1317 018a 1A68     		ldr	r2, [r3]
 1318 018c 3B6C     		ldr	r3, [r7, #64]
 1319 018e DB6B     		ldr	r3, [r3, #60]
 1320 0190 1344     		add	r3, r3, r2
 1321 0192 4D4A     		ldr	r2, .L177+16
 1322 0194 1360     		str	r3, [r2]
 1323 0196 03E0     		b	.L75
 1324              	.L76:
 593:..\src/interruptions.c ****                 else
 594:..\src/interruptions.c ****                     g_ref[0].pos = handle_value;
 1325              		.loc 1 594 0
 1326 0198 4B4A     		ldr	r2, .L177+16
 1327 019a BB6C     		ldr	r3, [r7, #72]
 1328 019c 1360     		str	r3, [r2]
 595:..\src/interruptions.c ****             }
 596:..\src/interruptions.c ****             break;
 1329              		.loc 1 596 0
 1330 019e 27E1     		b	.L77
 1331              	.L75:
 1332 01a0 26E1     		b	.L77
 1333              	.L68:
 597:..\src/interruptions.c ****             
 598:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
 599:..\src/interruptions.c ****             if (err_emg_1 > 0)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 35


 1334              		.loc 1 599 0
 1335 01a2 BB68     		ldr	r3, [r7, #8]
 1336 01a4 002B     		cmp	r3, #0
 1337 01a6 0FDD     		ble	.L78
 600:..\src/interruptions.c ****                 g_ref[0].pos = (err_emg_1 * g_mem.motor[0].pos_lim_sup) / (1024 - c_mem.emg.emg_thr
 1338              		.loc 1 600 0
 1339 01a8 484B     		ldr	r3, .L177+20
 1340 01aa D3F8E830 		ldr	r3, [r3, #232]
 1341 01ae BA68     		ldr	r2, [r7, #8]
 1342 01b0 02FB03F2 		mul	r2, r2, r3
 1343 01b4 404B     		ldr	r3, .L177
 1344 01b6 B3F8F031 		ldrh	r3, [r3, #496]
 1345 01ba C3F58063 		rsb	r3, r3, #1024
 1346 01be 92FBF3F3 		sdiv	r3, r2, r3
 1347 01c2 414A     		ldr	r2, .L177+16
 1348 01c4 1360     		str	r3, [r2]
 601:..\src/interruptions.c ****             else
 602:..\src/interruptions.c ****                 g_ref[0].pos = 0;
 603:..\src/interruptions.c ****             break;
 1349              		.loc 1 603 0
 1350 01c6 13E1     		b	.L77
 1351              	.L78:
 602:..\src/interruptions.c ****             break;
 1352              		.loc 1 602 0
 1353 01c8 3F4B     		ldr	r3, .L177+16
 1354 01ca 0022     		movs	r2, #0
 1355 01cc 1A60     		str	r2, [r3]
 1356              		.loc 1 603 0
 1357 01ce 0FE1     		b	.L77
 1358              	.L69:
 604:..\src/interruptions.c **** 
 605:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
 606:..\src/interruptions.c ****             g_ref[0].pos = g_refOld[0].pos;
 1359              		.loc 1 606 0
 1360 01d0 3C4B     		ldr	r3, .L177+12
 1361 01d2 1B68     		ldr	r3, [r3]
 1362 01d4 3C4A     		ldr	r2, .L177+16
 1363 01d6 1360     		str	r3, [r2]
 607:..\src/interruptions.c ****             if (err_emg_1 > 0) {
 1364              		.loc 1 607 0
 1365 01d8 BB68     		ldr	r3, [r7, #8]
 1366 01da 002B     		cmp	r3, #0
 1367 01dc 13DD     		ble	.L80
 608:..\src/interruptions.c ****                 g_ref[0].pos = g_refOld[0].pos + (err_emg_1 * (int)g_mem.emg.emg_speed * 2) / (1024
 1368              		.loc 1 608 0
 1369 01de 394B     		ldr	r3, .L177+12
 1370 01e0 1A68     		ldr	r2, [r3]
 1371 01e2 3A4B     		ldr	r3, .L177+20
 1372 01e4 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1373 01e8 1946     		mov	r1, r3
 1374 01ea BB68     		ldr	r3, [r7, #8]
 1375 01ec 03FB01F3 		mul	r3, r3, r1
 1376 01f0 5900     		lsls	r1, r3, #1
 1377 01f2 314B     		ldr	r3, .L177
 1378 01f4 B3F8F031 		ldrh	r3, [r3, #496]
 1379 01f8 C3F58063 		rsb	r3, r3, #1024
 1380 01fc 91FBF3F3 		sdiv	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 36


 1381 0200 1344     		add	r3, r3, r2
 1382 0202 314A     		ldr	r2, .L177+16
 1383 0204 1360     		str	r3, [r2]
 1384              	.L80:
 609:..\src/interruptions.c ****             }
 610:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 1385              		.loc 1 610 0
 1386 0206 7B68     		ldr	r3, [r7, #4]
 1387 0208 002B     		cmp	r3, #0
 1388 020a 40F3F080 		ble	.L170
 611:..\src/interruptions.c ****                 g_ref[0].pos = g_refOld[0].pos - (err_emg_2 * (int)g_mem.emg.emg_speed * 2) / (1024
 1389              		.loc 1 611 0
 1390 020e 2D4B     		ldr	r3, .L177+12
 1391 0210 1A68     		ldr	r2, [r3]
 1392 0212 2E4B     		ldr	r3, .L177+20
 1393 0214 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1394 0218 1946     		mov	r1, r3
 1395 021a 7B68     		ldr	r3, [r7, #4]
 1396 021c 03FB01F3 		mul	r3, r3, r1
 1397 0220 5900     		lsls	r1, r3, #1
 1398 0222 254B     		ldr	r3, .L177
 1399 0224 B3F8F231 		ldrh	r3, [r3, #498]
 1400 0228 C3F58063 		rsb	r3, r3, #1024
 1401 022c 91FBF3F3 		sdiv	r3, r1, r3
 1402 0230 D31A     		subs	r3, r2, r3
 1403 0232 254A     		ldr	r2, .L177+16
 1404 0234 1360     		str	r3, [r2]
 612:..\src/interruptions.c ****             }
 613:..\src/interruptions.c ****             break;
 1405              		.loc 1 613 0
 1406 0236 DAE0     		b	.L170
 1407              	.L70:
 614:..\src/interruptions.c **** 
 615:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
 616:..\src/interruptions.c ****             g_ref[0].pos = g_refOld[0].pos;
 1408              		.loc 1 616 0
 1409 0238 224B     		ldr	r3, .L177+12
 1410 023a 1B68     		ldr	r3, [r3]
 1411 023c 224A     		ldr	r2, .L177+16
 1412 023e 1360     		str	r3, [r2]
 617:..\src/interruptions.c ****             switch (current_emg) {
 1413              		.loc 1 617 0
 1414 0240 234B     		ldr	r3, .L177+24
 1415 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1416 0244 012B     		cmp	r3, #1
 1417 0246 1AD0     		beq	.L83
 1418 0248 022B     		cmp	r3, #2
 1419 024a 43D0     		beq	.L84
 1420 024c 002B     		cmp	r3, #0
 1421 024e 00D0     		beq	.L85
 618:..\src/interruptions.c ****                 case 0:
 619:..\src/interruptions.c ****                     // Look for the first EMG passing the threshold
 620:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 621:..\src/interruptions.c ****                         current_emg = 1;
 622:..\src/interruptions.c ****                         break;
 623:..\src/interruptions.c ****                     }
 624:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 37


 625:..\src/interruptions.c ****                         current_emg = 2;
 626:..\src/interruptions.c ****                         break;
 627:..\src/interruptions.c ****                     }
 628:..\src/interruptions.c ****                     break;
 629:..\src/interruptions.c **** 
 630:..\src/interruptions.c ****                 case 1:
 631:..\src/interruptions.c ****                     // EMG 1 is first
 632:..\src/interruptions.c ****                     if (err_emg_1 < 0) {
 633:..\src/interruptions.c ****                         current_emg = 0;
 634:..\src/interruptions.c ****                         break;
 635:..\src/interruptions.c ****                     }
 636:..\src/interruptions.c ****                     g_ref[0].pos = g_refOld[0].pos + (err_emg_1 * g_mem.emg.emg_speed << 2) / (1024
 637:..\src/interruptions.c ****                     break;
 638:..\src/interruptions.c **** 
 639:..\src/interruptions.c ****                 case 2:
 640:..\src/interruptions.c ****                     // EMG 2 is first
 641:..\src/interruptions.c ****                     if (err_emg_2 < 0) {
 642:..\src/interruptions.c ****                         current_emg = 0;
 643:..\src/interruptions.c ****                         break;
 644:..\src/interruptions.c ****                     }
 645:..\src/interruptions.c ****                     g_ref[0].pos = g_refOld[0].pos - (err_emg_2 * g_mem.emg.emg_speed << 2) / (1024
 646:..\src/interruptions.c ****                     break;
 647:..\src/interruptions.c **** 
 648:..\src/interruptions.c ****                 default:
 649:..\src/interruptions.c ****                     break;
 1422              		.loc 1 649 0
 1423 0250 5DE0     		b	.L87
 1424              	.L85:
 620:..\src/interruptions.c ****                         current_emg = 1;
 1425              		.loc 1 620 0
 1426 0252 BB68     		ldr	r3, [r7, #8]
 1427 0254 002B     		cmp	r3, #0
 1428 0256 07DD     		ble	.L86
 620:..\src/interruptions.c ****                         current_emg = 1;
 1429              		.loc 1 620 0 is_stmt 0 discriminator 1
 1430 0258 BA68     		ldr	r2, [r7, #8]
 1431 025a 7B68     		ldr	r3, [r7, #4]
 1432 025c 9A42     		cmp	r2, r3
 1433 025e 03DD     		ble	.L86
 621:..\src/interruptions.c ****                         break;
 1434              		.loc 1 621 0 is_stmt 1
 1435 0260 1B4B     		ldr	r3, .L177+24
 1436 0262 0122     		movs	r2, #1
 1437 0264 1A70     		strb	r2, [r3]
 622:..\src/interruptions.c ****                     }
 1438              		.loc 1 622 0
 1439 0266 52E0     		b	.L87
 1440              	.L86:
 624:..\src/interruptions.c ****                         current_emg = 2;
 1441              		.loc 1 624 0
 1442 0268 7B68     		ldr	r3, [r7, #4]
 1443 026a 002B     		cmp	r3, #0
 1444 026c 4EDD     		ble	.L171
 624:..\src/interruptions.c ****                         current_emg = 2;
 1445              		.loc 1 624 0 is_stmt 0 discriminator 1
 1446 026e 7A68     		ldr	r2, [r7, #4]
 1447 0270 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 38


 1448 0272 9A42     		cmp	r2, r3
 1449 0274 4ADD     		ble	.L171
 625:..\src/interruptions.c ****                         break;
 1450              		.loc 1 625 0 is_stmt 1
 1451 0276 164B     		ldr	r3, .L177+24
 1452 0278 0222     		movs	r2, #2
 1453 027a 1A70     		strb	r2, [r3]
 626:..\src/interruptions.c ****                     }
 1454              		.loc 1 626 0
 1455 027c 47E0     		b	.L87
 1456              	.L83:
 632:..\src/interruptions.c ****                         current_emg = 0;
 1457              		.loc 1 632 0
 1458 027e BB68     		ldr	r3, [r7, #8]
 1459 0280 002B     		cmp	r3, #0
 1460 0282 03DA     		bge	.L89
 633:..\src/interruptions.c ****                         break;
 1461              		.loc 1 633 0
 1462 0284 124B     		ldr	r3, .L177+24
 1463 0286 0022     		movs	r2, #0
 1464 0288 1A70     		strb	r2, [r3]
 634:..\src/interruptions.c ****                     }
 1465              		.loc 1 634 0
 1466 028a 40E0     		b	.L87
 1467              	.L89:
 636:..\src/interruptions.c ****                     break;
 1468              		.loc 1 636 0
 1469 028c 0D4B     		ldr	r3, .L177+12
 1470 028e 1A68     		ldr	r2, [r3]
 1471 0290 0E4B     		ldr	r3, .L177+20
 1472 0292 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1473 0296 1946     		mov	r1, r3
 1474 0298 BB68     		ldr	r3, [r7, #8]
 1475 029a 03FB01F3 		mul	r3, r3, r1
 1476 029e 9900     		lsls	r1, r3, #2
 1477 02a0 054B     		ldr	r3, .L177
 1478 02a2 B3F8F031 		ldrh	r3, [r3, #496]
 1479 02a6 C3F58063 		rsb	r3, r3, #1024
 1480 02aa 91FBF3F3 		sdiv	r3, r1, r3
 1481 02ae 1344     		add	r3, r3, r2
 1482 02b0 054A     		ldr	r2, .L177+16
 1483 02b2 1360     		str	r3, [r2]
 637:..\src/interruptions.c **** 
 1484              		.loc 1 637 0
 1485 02b4 2BE0     		b	.L87
 1486              	.L178:
 1487 02b6 00BF     		.align	2
 1488              	.L177:
 1489 02b8 00000000 		.word	c_mem
 1490 02bc 00000000 		.word	g_emg_meas
 1491 02c0 00000000 		.word	g_meas
 1492 02c4 00000000 		.word	g_refOld
 1493 02c8 00000000 		.word	g_ref
 1494 02cc 00000000 		.word	g_mem
 1495 02d0 8C000000 		.word	current_emg.10414
 1496              	.L84:
 641:..\src/interruptions.c ****                         current_emg = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 39


 1497              		.loc 1 641 0
 1498 02d4 7B68     		ldr	r3, [r7, #4]
 1499 02d6 002B     		cmp	r3, #0
 1500 02d8 03DA     		bge	.L90
 642:..\src/interruptions.c ****                         break;
 1501              		.loc 1 642 0
 1502 02da A14B     		ldr	r3, .L179
 1503 02dc 0022     		movs	r2, #0
 1504 02de 1A70     		strb	r2, [r3]
 643:..\src/interruptions.c ****                     }
 1505              		.loc 1 643 0
 1506 02e0 15E0     		b	.L87
 1507              	.L90:
 645:..\src/interruptions.c ****                     break;
 1508              		.loc 1 645 0
 1509 02e2 A04B     		ldr	r3, .L179+4
 1510 02e4 1A68     		ldr	r2, [r3]
 1511 02e6 A04B     		ldr	r3, .L179+8
 1512 02e8 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1513 02ec 1946     		mov	r1, r3
 1514 02ee 7B68     		ldr	r3, [r7, #4]
 1515 02f0 03FB01F3 		mul	r3, r3, r1
 1516 02f4 9900     		lsls	r1, r3, #2
 1517 02f6 9D4B     		ldr	r3, .L179+12
 1518 02f8 B3F8F231 		ldrh	r3, [r3, #498]
 1519 02fc C3F58063 		rsb	r3, r3, #1024
 1520 0300 91FBF3F3 		sdiv	r3, r1, r3
 1521 0304 D31A     		subs	r3, r2, r3
 1522 0306 9A4A     		ldr	r2, .L179+16
 1523 0308 1360     		str	r3, [r2]
 646:..\src/interruptions.c **** 
 1524              		.loc 1 646 0
 1525 030a 00E0     		b	.L87
 1526              	.L171:
 628:..\src/interruptions.c **** 
 1527              		.loc 1 628 0
 1528 030c 00BF     		nop
 1529              	.L87:
 650:..\src/interruptions.c ****             }
 651:..\src/interruptions.c ****             break;
 1530              		.loc 1 651 0 discriminator 1
 1531 030e 6FE0     		b	.L77
 1532              	.L71:
 652:..\src/interruptions.c **** 
 653:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
 654:..\src/interruptions.c ****             g_ref[0].pos = g_refOld[0].pos;
 1533              		.loc 1 654 0
 1534 0310 944B     		ldr	r3, .L179+4
 1535 0312 1B68     		ldr	r3, [r3]
 1536 0314 964A     		ldr	r2, .L179+16
 1537 0316 1360     		str	r3, [r2]
 655:..\src/interruptions.c ****             switch (current_emg) {
 1538              		.loc 1 655 0
 1539 0318 914B     		ldr	r3, .L179
 1540 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1541 031c 012B     		cmp	r3, #1
 1542 031e 1AD0     		beq	.L92
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 40


 1543 0320 022B     		cmp	r3, #2
 1544 0322 3AD0     		beq	.L93
 1545 0324 002B     		cmp	r3, #0
 1546 0326 00D0     		beq	.L94
 656:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
 657:..\src/interruptions.c ****                 case 0:
 658:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 659:..\src/interruptions.c ****                         current_emg = 1;
 660:..\src/interruptions.c ****                         break;
 661:..\src/interruptions.c ****                     }
 662:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 663:..\src/interruptions.c ****                         current_emg = 2;
 664:..\src/interruptions.c ****                         break;
 665:..\src/interruptions.c ****                     }
 666:..\src/interruptions.c ****                     break;
 667:..\src/interruptions.c **** 
 668:..\src/interruptions.c ****                 // EMG 1 is first
 669:..\src/interruptions.c ****                 case 1:
 670:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 671:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 672:..\src/interruptions.c ****                         current_emg = 0;
 673:..\src/interruptions.c ****                         break;
 674:..\src/interruptions.c ****                     }
 675:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 676:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
 677:..\src/interruptions.c ****                         g_ref[0].pos = g_refOld[0].pos + (err_emg_1 * g_mem.emg.emg_speed << 2) / (
 678:..\src/interruptions.c ****                     
 679:..\src/interruptions.c ****                     break;
 680:..\src/interruptions.c **** 
 681:..\src/interruptions.c ****                 // EMG 2 is first
 682:..\src/interruptions.c ****                 case 2:
 683:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 684:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 685:..\src/interruptions.c ****                         current_emg = 0;
 686:..\src/interruptions.c ****                         break;
 687:..\src/interruptions.c ****                     }
 688:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 689:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 690:..\src/interruptions.c ****                         g_ref[0].pos = g_refOld[0].pos - (err_emg_2 * c_mem.emg.emg_speed << 2) / (
 691:..\src/interruptions.c ****                     }
 692:..\src/interruptions.c ****                     break;
 693:..\src/interruptions.c **** 
 694:..\src/interruptions.c ****                 default:
 695:..\src/interruptions.c ****                     break;
 1547              		.loc 1 695 0
 1548 0328 5EE0     		b	.L96
 1549              	.L94:
 658:..\src/interruptions.c ****                         current_emg = 1;
 1550              		.loc 1 658 0
 1551 032a BB68     		ldr	r3, [r7, #8]
 1552 032c 002B     		cmp	r3, #0
 1553 032e 07DD     		ble	.L95
 658:..\src/interruptions.c ****                         current_emg = 1;
 1554              		.loc 1 658 0 is_stmt 0 discriminator 1
 1555 0330 BA68     		ldr	r2, [r7, #8]
 1556 0332 7B68     		ldr	r3, [r7, #4]
 1557 0334 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 41


 1558 0336 03DD     		ble	.L95
 659:..\src/interruptions.c ****                         break;
 1559              		.loc 1 659 0 is_stmt 1
 1560 0338 894B     		ldr	r3, .L179
 1561 033a 0122     		movs	r2, #1
 1562 033c 1A70     		strb	r2, [r3]
 660:..\src/interruptions.c ****                     }
 1563              		.loc 1 660 0
 1564 033e 53E0     		b	.L96
 1565              	.L95:
 662:..\src/interruptions.c ****                         current_emg = 2;
 1566              		.loc 1 662 0
 1567 0340 7B68     		ldr	r3, [r7, #4]
 1568 0342 002B     		cmp	r3, #0
 1569 0344 4BDD     		ble	.L172
 662:..\src/interruptions.c ****                         current_emg = 2;
 1570              		.loc 1 662 0 is_stmt 0 discriminator 1
 1571 0346 7A68     		ldr	r2, [r7, #4]
 1572 0348 BB68     		ldr	r3, [r7, #8]
 1573 034a 9A42     		cmp	r2, r3
 1574 034c 47DD     		ble	.L172
 663:..\src/interruptions.c ****                         break;
 1575              		.loc 1 663 0 is_stmt 1
 1576 034e 844B     		ldr	r3, .L179
 1577 0350 0222     		movs	r2, #2
 1578 0352 1A70     		strb	r2, [r3]
 664:..\src/interruptions.c ****                     }
 1579              		.loc 1 664 0
 1580 0354 48E0     		b	.L96
 1581              	.L92:
 671:..\src/interruptions.c ****                         current_emg = 0;
 1582              		.loc 1 671 0
 1583 0356 BB68     		ldr	r3, [r7, #8]
 1584 0358 002B     		cmp	r3, #0
 1585 035a 06DA     		bge	.L98
 671:..\src/interruptions.c ****                         current_emg = 0;
 1586              		.loc 1 671 0 is_stmt 0 discriminator 1
 1587 035c 7B68     		ldr	r3, [r7, #4]
 1588 035e 002B     		cmp	r3, #0
 1589 0360 03DA     		bge	.L98
 672:..\src/interruptions.c ****                         break;
 1590              		.loc 1 672 0 is_stmt 1
 1591 0362 7F4B     		ldr	r3, .L179
 1592 0364 0022     		movs	r2, #0
 1593 0366 1A70     		strb	r2, [r3]
 673:..\src/interruptions.c ****                     }
 1594              		.loc 1 673 0
 1595 0368 3EE0     		b	.L96
 1596              	.L98:
 676:..\src/interruptions.c ****                         g_ref[0].pos = g_refOld[0].pos + (err_emg_1 * g_mem.emg.emg_speed << 2) / (
 1597              		.loc 1 676 0
 1598 036a BB68     		ldr	r3, [r7, #8]
 1599 036c 002B     		cmp	r3, #0
 1600 036e 38DD     		ble	.L173
 677:..\src/interruptions.c ****                     
 1601              		.loc 1 677 0
 1602 0370 7C4B     		ldr	r3, .L179+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 42


 1603 0372 1A68     		ldr	r2, [r3]
 1604 0374 7C4B     		ldr	r3, .L179+8
 1605 0376 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1606 037a 1946     		mov	r1, r3
 1607 037c BB68     		ldr	r3, [r7, #8]
 1608 037e 03FB01F3 		mul	r3, r3, r1
 1609 0382 9900     		lsls	r1, r3, #2
 1610 0384 794B     		ldr	r3, .L179+12
 1611 0386 B3F8F031 		ldrh	r3, [r3, #496]
 1612 038a C3F58063 		rsb	r3, r3, #1024
 1613 038e 91FBF3F3 		sdiv	r3, r1, r3
 1614 0392 1344     		add	r3, r3, r2
 1615 0394 764A     		ldr	r2, .L179+16
 1616 0396 1360     		str	r3, [r2]
 679:..\src/interruptions.c **** 
 1617              		.loc 1 679 0
 1618 0398 23E0     		b	.L173
 1619              	.L93:
 684:..\src/interruptions.c ****                         current_emg = 0;
 1620              		.loc 1 684 0
 1621 039a BB68     		ldr	r3, [r7, #8]
 1622 039c 002B     		cmp	r3, #0
 1623 039e 06DA     		bge	.L100
 684:..\src/interruptions.c ****                         current_emg = 0;
 1624              		.loc 1 684 0 is_stmt 0 discriminator 1
 1625 03a0 7B68     		ldr	r3, [r7, #4]
 1626 03a2 002B     		cmp	r3, #0
 1627 03a4 03DA     		bge	.L100
 685:..\src/interruptions.c ****                         break;
 1628              		.loc 1 685 0 is_stmt 1
 1629 03a6 6E4B     		ldr	r3, .L179
 1630 03a8 0022     		movs	r2, #0
 1631 03aa 1A70     		strb	r2, [r3]
 686:..\src/interruptions.c ****                     }
 1632              		.loc 1 686 0
 1633 03ac 1CE0     		b	.L96
 1634              	.L100:
 689:..\src/interruptions.c ****                         g_ref[0].pos = g_refOld[0].pos - (err_emg_2 * c_mem.emg.emg_speed << 2) / (
 1635              		.loc 1 689 0
 1636 03ae 7B68     		ldr	r3, [r7, #4]
 1637 03b0 002B     		cmp	r3, #0
 1638 03b2 18DD     		ble	.L174
 690:..\src/interruptions.c ****                     }
 1639              		.loc 1 690 0
 1640 03b4 6B4B     		ldr	r3, .L179+4
 1641 03b6 1A68     		ldr	r2, [r3]
 1642 03b8 6C4B     		ldr	r3, .L179+12
 1643 03ba 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1644 03be 1946     		mov	r1, r3
 1645 03c0 7B68     		ldr	r3, [r7, #4]
 1646 03c2 03FB01F3 		mul	r3, r3, r1
 1647 03c6 9900     		lsls	r1, r3, #2
 1648 03c8 684B     		ldr	r3, .L179+12
 1649 03ca B3F8F231 		ldrh	r3, [r3, #498]
 1650 03ce C3F58063 		rsb	r3, r3, #1024
 1651 03d2 91FBF3F3 		sdiv	r3, r1, r3
 1652 03d6 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 43


 1653 03d8 654A     		ldr	r2, .L179+16
 1654 03da 1360     		str	r3, [r2]
 692:..\src/interruptions.c **** 
 1655              		.loc 1 692 0
 1656 03dc 03E0     		b	.L174
 1657              	.L172:
 666:..\src/interruptions.c **** 
 1658              		.loc 1 666 0
 1659 03de 00BF     		nop
 1660 03e0 06E0     		b	.L77
 1661              	.L173:
 679:..\src/interruptions.c **** 
 1662              		.loc 1 679 0
 1663 03e2 00BF     		nop
 1664 03e4 04E0     		b	.L77
 1665              	.L174:
 692:..\src/interruptions.c **** 
 1666              		.loc 1 692 0
 1667 03e6 00BF     		nop
 1668              	.L96:
 696:..\src/interruptions.c ****             }
 697:..\src/interruptions.c ****             break;
 1669              		.loc 1 697 0 discriminator 3
 1670 03e8 02E0     		b	.L77
 1671              	.L169:
 698:..\src/interruptions.c **** 
 699:..\src/interruptions.c ****         default:
 700:..\src/interruptions.c ****             break;
 1672              		.loc 1 700 0
 1673 03ea 00BF     		nop
 1674 03ec 00E0     		b	.L77
 1675              	.L170:
 613:..\src/interruptions.c **** 
 1676              		.loc 1 613 0
 1677 03ee 00BF     		nop
 1678              	.L77:
 701:..\src/interruptions.c ****     }
 702:..\src/interruptions.c **** 
 703:..\src/interruptions.c ****     // Position limit saturation
 704:..\src/interruptions.c ****     if (SH_MOT->pos_lim_flag) {
 1679              		.loc 1 704 0
 1680 03f0 3B6C     		ldr	r3, [r7, #64]
 1681 03f2 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 1682 03f6 002B     		cmp	r3, #0
 1683 03f8 13D0     		beq	.L102
 705:..\src/interruptions.c ****         if (g_ref[0].pos < SH_MOT->pos_lim_inf) 
 1684              		.loc 1 705 0
 1685 03fa 5D4B     		ldr	r3, .L179+16
 1686 03fc 1A68     		ldr	r2, [r3]
 1687 03fe 3B6C     		ldr	r3, [r7, #64]
 1688 0400 5B6B     		ldr	r3, [r3, #52]
 1689 0402 9A42     		cmp	r2, r3
 1690 0404 03DA     		bge	.L103
 706:..\src/interruptions.c ****             g_ref[0].pos = SH_MOT->pos_lim_inf;
 1691              		.loc 1 706 0
 1692 0406 3B6C     		ldr	r3, [r7, #64]
 1693 0408 5B6B     		ldr	r3, [r3, #52]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 44


 1694 040a 594A     		ldr	r2, .L179+16
 1695 040c 1360     		str	r3, [r2]
 1696              	.L103:
 707:..\src/interruptions.c ****         if (g_ref[0].pos > SH_MOT->pos_lim_sup) 
 1697              		.loc 1 707 0
 1698 040e 584B     		ldr	r3, .L179+16
 1699 0410 1A68     		ldr	r2, [r3]
 1700 0412 3B6C     		ldr	r3, [r7, #64]
 1701 0414 9B6B     		ldr	r3, [r3, #56]
 1702 0416 9A42     		cmp	r2, r3
 1703 0418 03DD     		ble	.L102
 708:..\src/interruptions.c ****             g_ref[0].pos = SH_MOT->pos_lim_sup;
 1704              		.loc 1 708 0
 1705 041a 3B6C     		ldr	r3, [r7, #64]
 1706 041c 9B6B     		ldr	r3, [r3, #56]
 1707 041e 544A     		ldr	r2, .L179+16
 1708 0420 1360     		str	r3, [r2]
 1709              	.L102:
 709:..\src/interruptions.c ****     }
 710:..\src/interruptions.c ****     
 711:..\src/interruptions.c ****     if (battery_low_SoC == 1) {
 1710              		.loc 1 711 0
 1711 0422 544B     		ldr	r3, .L179+20
 1712 0424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1713 0426 012B     		cmp	r3, #1
 1714 0428 02D1     		bne	.L104
 712:..\src/interruptions.c ****         //Reopen the terminal device before disabling motor
 713:..\src/interruptions.c ****         g_ref[0].pos = 0;
 1715              		.loc 1 713 0
 1716 042a 514B     		ldr	r3, .L179+16
 1717 042c 0022     		movs	r2, #0
 1718 042e 1A60     		str	r2, [r3]
 1719              	.L104:
 714:..\src/interruptions.c ****     }
 715:..\src/interruptions.c ****         
 716:..\src/interruptions.c ****     if (c_mem.SH.rest_position_flag == TRUE) {
 1720              		.loc 1 716 0
 1721 0430 4E4B     		ldr	r3, .L179+12
 1722 0432 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 1723 0436 012B     		cmp	r3, #1
 1724 0438 2AD1     		bne	.L105
 717:..\src/interruptions.c ****         if (rest_enabled == 1){
 1725              		.loc 1 717 0
 1726 043a 4F4B     		ldr	r3, .L179+24
 1727 043c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1728 043e 012B     		cmp	r3, #1
 1729 0440 03D1     		bne	.L106
 718:..\src/interruptions.c ****             // Change position reference to drive motor to rest position smoothly
 719:..\src/interruptions.c ****             g_ref[0].pos = rest_pos_curr_ref;
 1730              		.loc 1 719 0
 1731 0442 4E4B     		ldr	r3, .L179+28
 1732 0444 1B68     		ldr	r3, [r3]
 1733 0446 4A4A     		ldr	r2, .L179+16
 1734 0448 1360     		str	r3, [r2]
 1735              	.L106:
 720:..\src/interruptions.c ****         }
 721:..\src/interruptions.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 45


 722:..\src/interruptions.c ****         if (forced_open == 1) {
 1736              		.loc 1 722 0
 1737 044a 4D4B     		ldr	r3, .L179+32
 1738 044c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1739 044e 012B     		cmp	r3, #1
 1740 0450 1ED1     		bne	.L105
 723:..\src/interruptions.c ****             // Open the SoftHand as EMG PROPORTIONAL input mode 
 724:..\src/interruptions.c ****             if (err_emg_2 > 0)
 1741              		.loc 1 724 0
 1742 0452 7B68     		ldr	r3, [r7, #4]
 1743 0454 002B     		cmp	r3, #0
 1744 0456 13DD     		ble	.L107
 725:..\src/interruptions.c ****                 g_ref[0].pos = g_mem.SH.rest_pos - (err_emg_2 * g_mem.SH.rest_pos) / (1024 - c_mem.
 1745              		.loc 1 725 0
 1746 0458 434B     		ldr	r3, .L179+8
 1747 045a D3F8A022 		ldr	r2, [r3, #672]
 1748 045e 424B     		ldr	r3, .L179+8
 1749 0460 D3F8A032 		ldr	r3, [r3, #672]
 1750 0464 7968     		ldr	r1, [r7, #4]
 1751 0466 01FB03F1 		mul	r1, r1, r3
 1752 046a 404B     		ldr	r3, .L179+12
 1753 046c B3F8F231 		ldrh	r3, [r3, #498]
 1754 0470 C3F58063 		rsb	r3, r3, #1024
 1755 0474 91FBF3F3 		sdiv	r3, r1, r3
 1756 0478 D31A     		subs	r3, r2, r3
 1757 047a 3D4A     		ldr	r2, .L179+16
 1758 047c 1360     		str	r3, [r2]
 1759 047e 07E0     		b	.L105
 1760              	.L107:
 726:..\src/interruptions.c ****             else {
 727:..\src/interruptions.c ****                 g_ref[0].pos = g_mem.SH.rest_pos;
 1761              		.loc 1 727 0
 1762 0480 394B     		ldr	r3, .L179+8
 1763 0482 D3F8A032 		ldr	r3, [r3, #672]
 1764 0486 3A4A     		ldr	r2, .L179+16
 1765 0488 1360     		str	r3, [r2]
 728:..\src/interruptions.c ****                 forced_open = 0;
 1766              		.loc 1 728 0
 1767 048a 3D4B     		ldr	r3, .L179+32
 1768 048c 0022     		movs	r2, #0
 1769 048e 1A70     		strb	r2, [r3]
 1770              	.L105:
 729:..\src/interruptions.c ****             }
 730:..\src/interruptions.c ****         }
 731:..\src/interruptions.c ****     }
 732:..\src/interruptions.c **** 
 733:..\src/interruptions.c ****     switch(SH_MOT->control_mode) {
 1771              		.loc 1 733 0
 1772 0490 3B6C     		ldr	r3, [r7, #64]
 1773 0492 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 1774 0496 032B     		cmp	r3, #3
 1775 0498 00F2FF81 		bhi	.L108
 1776 049c 01A2     		adr	r2, .L110
 1777 049e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1778 04a2 00BF     		.p2align 2
 1779              	.L110:
 1780 04a4 8B060000 		.word	.L109+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 46


 1781 04a8 5F080000 		.word	.L111+1
 1782 04ac 37070000 		.word	.L112+1
 1783 04b0 B5040000 		.word	.L113+1
 1784              		.p2align 1
 1785              	.L113:
 734:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
 735:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
 736:..\src/interruptions.c ****             pos_error = g_ref[0].pos - g_meas[SH_ENC_L].pos[0];
 1786              		.loc 1 736 0
 1787 04b4 2E4B     		ldr	r3, .L179+16
 1788 04b6 1968     		ldr	r1, [r3]
 1789 04b8 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 1790 04bc 3148     		ldr	r0, .L179+36
 1791 04be 1346     		mov	r3, r2
 1792 04c0 5B00     		lsls	r3, r3, #1
 1793 04c2 1344     		add	r3, r3, r2
 1794 04c4 1B01     		lsls	r3, r3, #4
 1795 04c6 0344     		add	r3, r3, r0
 1796 04c8 1B68     		ldr	r3, [r3]
 1797 04ca CB1A     		subs	r3, r1, r3
 1798 04cc 3B65     		str	r3, [r7, #80]
 737:..\src/interruptions.c **** 
 738:..\src/interruptions.c ****             pos_error_sum += pos_error;
 1799              		.loc 1 738 0
 1800 04ce 2E4B     		ldr	r3, .L179+40
 1801 04d0 1A68     		ldr	r2, [r3]
 1802 04d2 3B6D     		ldr	r3, [r7, #80]
 1803 04d4 1344     		add	r3, r3, r2
 1804 04d6 2C4A     		ldr	r2, .L179+40
 1805 04d8 1360     		str	r3, [r2]
 739:..\src/interruptions.c **** 
 740:..\src/interruptions.c ****             // error_sum saturation
 741:..\src/interruptions.c ****             if (pos_error_sum > POS_INTEGRAL_SAT_LIMIT)
 1806              		.loc 1 741 0
 1807 04da 2B4B     		ldr	r3, .L179+40
 1808 04dc 1B68     		ldr	r3, [r3]
 1809 04de 2B4A     		ldr	r2, .L179+44
 1810 04e0 9342     		cmp	r3, r2
 1811 04e2 03DD     		ble	.L114
 742:..\src/interruptions.c ****                 pos_error_sum = POS_INTEGRAL_SAT_LIMIT;
 1812              		.loc 1 742 0
 1813 04e4 284B     		ldr	r3, .L179+40
 1814 04e6 294A     		ldr	r2, .L179+44
 1815 04e8 1A60     		str	r2, [r3]
 1816 04ea 07E0     		b	.L115
 1817              	.L114:
 743:..\src/interruptions.c ****             else {
 744:..\src/interruptions.c ****                 if (pos_error_sum < -POS_INTEGRAL_SAT_LIMIT) 
 1818              		.loc 1 744 0
 1819 04ec 264B     		ldr	r3, .L179+40
 1820 04ee 1B68     		ldr	r3, [r3]
 1821 04f0 274A     		ldr	r2, .L179+48
 1822 04f2 9342     		cmp	r3, r2
 1823 04f4 02DA     		bge	.L115
 745:..\src/interruptions.c ****                     pos_error_sum = -POS_INTEGRAL_SAT_LIMIT;
 1824              		.loc 1 745 0
 1825 04f6 244B     		ldr	r3, .L179+40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 47


 1826 04f8 254A     		ldr	r2, .L179+48
 1827 04fa 1A60     		str	r2, [r3]
 1828              	.L115:
 746:..\src/interruptions.c ****             }
 747:..\src/interruptions.c ****             
 748:..\src/interruptions.c ****             // ------ position PID control ------
 749:..\src/interruptions.c **** 
 750:..\src/interruptions.c ****             i_ref = 0;
 1829              		.loc 1 750 0
 1830 04fc 0023     		movs	r3, #0
 1831 04fe FB64     		str	r3, [r7, #76]
 751:..\src/interruptions.c ****             
 752:..\src/interruptions.c ****             // Proportional
 753:..\src/interruptions.c ****             if (k_p_dl != 0)
 1832              		.loc 1 753 0
 1833 0500 3B6A     		ldr	r3, [r7, #32]
 1834 0502 002B     		cmp	r3, #0
 1835 0504 07D0     		beq	.L116
 754:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 1836              		.loc 1 754 0
 1837 0506 3B6A     		ldr	r3, [r7, #32]
 1838 0508 3A6D     		ldr	r2, [r7, #80]
 1839 050a 02FB03F3 		mul	r3, r2, r3
 1840 050e 1B14     		asrs	r3, r3, #16
 1841 0510 FA6C     		ldr	r2, [r7, #76]
 1842 0512 1344     		add	r3, r3, r2
 1843 0514 FB64     		str	r3, [r7, #76]
 1844              	.L116:
 755:..\src/interruptions.c **** 
 756:..\src/interruptions.c ****             // Integral
 757:..\src/interruptions.c ****             if (k_i_dl != 0)
 1845              		.loc 1 757 0
 1846 0516 FB69     		ldr	r3, [r7, #28]
 1847 0518 002B     		cmp	r3, #0
 1848 051a 08D0     		beq	.L117
 758:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum) >> 16;
 1849              		.loc 1 758 0
 1850 051c 1A4B     		ldr	r3, .L179+40
 1851 051e 1B68     		ldr	r3, [r3]
 1852 0520 FA69     		ldr	r2, [r7, #28]
 1853 0522 02FB03F3 		mul	r3, r2, r3
 1854 0526 1B14     		asrs	r3, r3, #16
 1855 0528 FA6C     		ldr	r2, [r7, #76]
 1856 052a 1344     		add	r3, r3, r2
 1857 052c FB64     		str	r3, [r7, #76]
 1858              	.L117:
 759:..\src/interruptions.c **** 
 760:..\src/interruptions.c ****             // Derivative
 761:..\src/interruptions.c ****             if (k_d_dl != 0)
 1859              		.loc 1 761 0
 1860 052e BB69     		ldr	r3, [r7, #24]
 1861 0530 002B     		cmp	r3, #0
 1862 0532 0AD0     		beq	.L118
 762:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err)) >> 16;
 1863              		.loc 1 762 0
 1864 0534 174B     		ldr	r3, .L179+52
 1865 0536 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 48


 1866 0538 3A6D     		ldr	r2, [r7, #80]
 1867 053a D31A     		subs	r3, r2, r3
 1868 053c BA69     		ldr	r2, [r7, #24]
 1869 053e 02FB03F3 		mul	r3, r2, r3
 1870 0542 1B14     		asrs	r3, r3, #16
 1871 0544 FA6C     		ldr	r2, [r7, #76]
 1872 0546 1344     		add	r3, r3, r2
 1873 0548 FB64     		str	r3, [r7, #76]
 1874              	.L118:
 763:..\src/interruptions.c ****                         
 764:..\src/interruptions.c ****             // Update previous position
 765:..\src/interruptions.c ****             prev_pos_err = pos_error;
 1875              		.loc 1 765 0
 1876 054a 124A     		ldr	r2, .L179+52
 1877 054c 3B6D     		ldr	r3, [r7, #80]
 1878 054e 1360     		str	r3, [r2]
 766:..\src/interruptions.c **** 
 767:..\src/interruptions.c ****             // motor direction depends on i_ref
 768:..\src/interruptions.c ****             if (i_ref >= 0)
 1879              		.loc 1 768 0
 1880 0550 FB6C     		ldr	r3, [r7, #76]
 1881 0552 002B     		cmp	r3, #0
 1882 0554 22DB     		blt	.L119
 769:..\src/interruptions.c ****                 motor_dir = TRUE;
 1883              		.loc 1 769 0
 1884 0556 104B     		ldr	r3, .L179+56
 1885 0558 0122     		movs	r2, #1
 1886 055a 1A70     		strb	r2, [r3]
 1887 055c 21E0     		b	.L120
 1888              	.L180:
 1889 055e 00BF     		.align	2
 1890              	.L179:
 1891 0560 8C000000 		.word	current_emg.10414
 1892 0564 00000000 		.word	g_refOld
 1893 0568 00000000 		.word	g_mem
 1894 056c 00000000 		.word	c_mem
 1895 0570 00000000 		.word	g_ref
 1896 0574 00000000 		.word	battery_low_SoC
 1897 0578 00000000 		.word	rest_enabled
 1898 057c 00000000 		.word	rest_pos_curr_ref
 1899 0580 00000000 		.word	forced_open
 1900 0584 00000000 		.word	g_meas
 1901 0588 90000000 		.word	pos_error_sum.10407
 1902 058c 80F0FA02 		.word	50000000
 1903 0590 800F05FD 		.word	-50000000
 1904 0594 94000000 		.word	prev_pos_err.10409
 1905 0598 98000000 		.word	motor_dir.10412
 1906              	.L119:
 770:..\src/interruptions.c ****             else
 771:..\src/interruptions.c ****                 motor_dir = FALSE;
 1907              		.loc 1 771 0
 1908 059c 864B     		ldr	r3, .L181
 1909 059e 0022     		movs	r2, #0
 1910 05a0 1A70     		strb	r2, [r3]
 1911              	.L120:
 772:..\src/interruptions.c **** 
 773:..\src/interruptions.c ****             // saturate max current
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 49


 774:..\src/interruptions.c ****             if (i_ref > SH_MOT->current_limit)
 1912              		.loc 1 774 0
 1913 05a2 3B6C     		ldr	r3, [r7, #64]
 1914 05a4 B3F95C30 		ldrsh	r3, [r3, #92]
 1915 05a8 1A46     		mov	r2, r3
 1916 05aa FB6C     		ldr	r3, [r7, #76]
 1917 05ac 9A42     		cmp	r2, r3
 1918 05ae 04DA     		bge	.L121
 775:..\src/interruptions.c ****                 i_ref = SH_MOT->current_limit;
 1919              		.loc 1 775 0
 1920 05b0 3B6C     		ldr	r3, [r7, #64]
 1921 05b2 B3F95C30 		ldrsh	r3, [r3, #92]
 1922 05b6 FB64     		str	r3, [r7, #76]
 1923 05b8 0BE0     		b	.L122
 1924              	.L121:
 776:..\src/interruptions.c ****             else {
 777:..\src/interruptions.c ****                 if (i_ref < -SH_MOT->current_limit)
 1925              		.loc 1 777 0
 1926 05ba 3B6C     		ldr	r3, [r7, #64]
 1927 05bc B3F95C30 		ldrsh	r3, [r3, #92]
 1928 05c0 5A42     		negs	r2, r3
 1929 05c2 FB6C     		ldr	r3, [r7, #76]
 1930 05c4 9A42     		cmp	r2, r3
 1931 05c6 04DD     		ble	.L122
 778:..\src/interruptions.c ****                     i_ref = -SH_MOT->current_limit;
 1932              		.loc 1 778 0
 1933 05c8 3B6C     		ldr	r3, [r7, #64]
 1934 05ca B3F95C30 		ldrsh	r3, [r3, #92]
 1935 05ce 5B42     		negs	r3, r3
 1936 05d0 FB64     		str	r3, [r7, #76]
 1937              	.L122:
 779:..\src/interruptions.c ****         	}
 780:..\src/interruptions.c **** 
 781:..\src/interruptions.c ****             // current error and curr error sum
 782:..\src/interruptions.c ****             curr_error = i_ref - g_meas[SH_ENC_L].curr;
 1938              		.loc 1 782 0
 1939 05d2 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 1940 05d6 7949     		ldr	r1, .L181+4
 1941 05d8 1346     		mov	r3, r2
 1942 05da 5B00     		lsls	r3, r3, #1
 1943 05dc 1344     		add	r3, r3, r2
 1944 05de 1B01     		lsls	r3, r3, #4
 1945 05e0 0B44     		add	r3, r3, r1
 1946 05e2 0C33     		adds	r3, r3, #12
 1947 05e4 1B68     		ldr	r3, [r3]
 1948 05e6 FA6C     		ldr	r2, [r7, #76]
 1949 05e8 D31A     		subs	r3, r2, r3
 1950 05ea 3B60     		str	r3, [r7]
 783:..\src/interruptions.c ****             curr_error_sum += curr_error;
 1951              		.loc 1 783 0
 1952 05ec 744B     		ldr	r3, .L181+8
 1953 05ee 1A68     		ldr	r2, [r3]
 1954 05f0 3B68     		ldr	r3, [r7]
 1955 05f2 1344     		add	r3, r3, r2
 1956 05f4 724A     		ldr	r2, .L181+8
 1957 05f6 1360     		str	r3, [r2]
 784:..\src/interruptions.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 50


 785:..\src/interruptions.c ****             if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 1958              		.loc 1 785 0
 1959 05f8 714B     		ldr	r3, .L181+8
 1960 05fa 1B68     		ldr	r3, [r3]
 1961 05fc 714A     		ldr	r2, .L181+12
 1962 05fe 9342     		cmp	r3, r2
 1963 0600 03DD     		ble	.L123
 786:..\src/interruptions.c ****                 curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 1964              		.loc 1 786 0
 1965 0602 6F4B     		ldr	r3, .L181+8
 1966 0604 6F4A     		ldr	r2, .L181+12
 1967 0606 1A60     		str	r2, [r3]
 1968 0608 07E0     		b	.L124
 1969              	.L123:
 787:..\src/interruptions.c ****             else {
 788:..\src/interruptions.c ****                 if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT)
 1970              		.loc 1 788 0
 1971 060a 6D4B     		ldr	r3, .L181+8
 1972 060c 1B68     		ldr	r3, [r3]
 1973 060e 6E4A     		ldr	r2, .L181+16
 1974 0610 9342     		cmp	r3, r2
 1975 0612 02DA     		bge	.L124
 789:..\src/interruptions.c ****                     curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 1976              		.loc 1 789 0
 1977 0614 6A4B     		ldr	r3, .L181+8
 1978 0616 6C4A     		ldr	r2, .L181+16
 1979 0618 1A60     		str	r2, [r3]
 1980              	.L124:
 790:..\src/interruptions.c ****             }
 791:..\src/interruptions.c **** 
 792:..\src/interruptions.c ****             // ----- current PID control -----
 793:..\src/interruptions.c **** 
 794:..\src/interruptions.c ****             pwm_input = 0;
 1981              		.loc 1 794 0
 1982 061a 0023     		movs	r3, #0
 1983 061c 7B65     		str	r3, [r7, #84]
 795:..\src/interruptions.c **** 
 796:..\src/interruptions.c ****             // Proportional
 797:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 1984              		.loc 1 797 0
 1985 061e 7B69     		ldr	r3, [r7, #20]
 1986 0620 002B     		cmp	r3, #0
 1987 0622 07D0     		beq	.L125
 798:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 1988              		.loc 1 798 0
 1989 0624 7B69     		ldr	r3, [r7, #20]
 1990 0626 3A68     		ldr	r2, [r7]
 1991 0628 02FB03F3 		mul	r3, r2, r3
 1992 062c 1B14     		asrs	r3, r3, #16
 1993 062e 7A6D     		ldr	r2, [r7, #84]
 1994 0630 1344     		add	r3, r3, r2
 1995 0632 7B65     		str	r3, [r7, #84]
 1996              	.L125:
 799:..\src/interruptions.c **** 
 800:..\src/interruptions.c ****             // Integral
 801:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 1997              		.loc 1 801 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 51


 1998 0634 3B69     		ldr	r3, [r7, #16]
 1999 0636 002B     		cmp	r3, #0
 2000 0638 08D0     		beq	.L126
 802:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum) >> 16;
 2001              		.loc 1 802 0
 2002 063a 614B     		ldr	r3, .L181+8
 2003 063c 1B68     		ldr	r3, [r3]
 2004 063e 3A69     		ldr	r2, [r7, #16]
 2005 0640 02FB03F3 		mul	r3, r2, r3
 2006 0644 1B14     		asrs	r3, r3, #16
 2007 0646 7A6D     		ldr	r2, [r7, #84]
 2008 0648 1344     		add	r3, r3, r2
 2009 064a 7B65     		str	r3, [r7, #84]
 2010              	.L126:
 803:..\src/interruptions.c **** 
 804:..\src/interruptions.c ****             // Derivative
 805:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 2011              		.loc 1 805 0
 2012 064c FB68     		ldr	r3, [r7, #12]
 2013 064e 002B     		cmp	r3, #0
 2014 0650 0AD0     		beq	.L127
 806:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err)) >> 16;
 2015              		.loc 1 806 0
 2016 0652 5E4B     		ldr	r3, .L181+20
 2017 0654 1B68     		ldr	r3, [r3]
 2018 0656 3A68     		ldr	r2, [r7]
 2019 0658 D31A     		subs	r3, r2, r3
 2020 065a FA68     		ldr	r2, [r7, #12]
 2021 065c 02FB03F3 		mul	r3, r2, r3
 2022 0660 1B14     		asrs	r3, r3, #16
 2023 0662 7A6D     		ldr	r2, [r7, #84]
 2024 0664 1344     		add	r3, r3, r2
 2025 0666 7B65     		str	r3, [r7, #84]
 2026              	.L127:
 807:..\src/interruptions.c **** 
 808:..\src/interruptions.c ****             // pwm_input saturation
 809:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 2027              		.loc 1 809 0
 2028 0668 7B6D     		ldr	r3, [r7, #84]
 2029 066a 13F1640F 		cmn	r3, #100
 2030 066e 03DA     		bge	.L128
 810:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 2031              		.loc 1 810 0
 2032 0670 6FF06303 		mvn	r3, #99
 2033 0674 7B65     		str	r3, [r7, #84]
 2034 0676 04E0     		b	.L129
 2035              	.L128:
 811:..\src/interruptions.c ****             else {
 812:..\src/interruptions.c ****                 if (pwm_input > PWM_MAX_VALUE)
 2036              		.loc 1 812 0
 2037 0678 7B6D     		ldr	r3, [r7, #84]
 2038 067a 642B     		cmp	r3, #100
 2039 067c 01DD     		ble	.L129
 813:..\src/interruptions.c ****                     pwm_input = PWM_MAX_VALUE;
 2040              		.loc 1 813 0
 2041 067e 6423     		movs	r3, #100
 2042 0680 7B65     		str	r3, [r7, #84]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 52


 2043              	.L129:
 814:..\src/interruptions.c ****             }
 815:..\src/interruptions.c **** 
 816:..\src/interruptions.c ****             // Update previous current
 817:..\src/interruptions.c ****             prev_curr_err = curr_error;
 2044              		.loc 1 817 0
 2045 0682 524A     		ldr	r2, .L181+20
 2046 0684 3B68     		ldr	r3, [r7]
 2047 0686 1360     		str	r3, [r2]
 818:..\src/interruptions.c **** 
 819:..\src/interruptions.c ****         break;
 2048              		.loc 1 819 0
 2049 0688 07E1     		b	.L108
 2050              	.L109:
 820:..\src/interruptions.c **** 
 821:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
 822:..\src/interruptions.c ****         case CONTROL_ANGLE:
 823:..\src/interruptions.c ****             pos_error = g_ref[0].pos - g_meas[SH_ENC_L].pos[0];
 2051              		.loc 1 823 0
 2052 068a 514B     		ldr	r3, .L181+24
 2053 068c 1968     		ldr	r1, [r3]
 2054 068e 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 2055 0692 4A48     		ldr	r0, .L181+4
 2056 0694 1346     		mov	r3, r2
 2057 0696 5B00     		lsls	r3, r3, #1
 2058 0698 1344     		add	r3, r3, r2
 2059 069a 1B01     		lsls	r3, r3, #4
 2060 069c 0344     		add	r3, r3, r0
 2061 069e 1B68     		ldr	r3, [r3]
 2062 06a0 CB1A     		subs	r3, r1, r3
 2063 06a2 3B65     		str	r3, [r7, #80]
 824:..\src/interruptions.c **** 
 825:..\src/interruptions.c ****             pos_error_sum += pos_error;
 2064              		.loc 1 825 0
 2065 06a4 4B4B     		ldr	r3, .L181+28
 2066 06a6 1A68     		ldr	r2, [r3]
 2067 06a8 3B6D     		ldr	r3, [r7, #80]
 2068 06aa 1344     		add	r3, r3, r2
 2069 06ac 494A     		ldr	r2, .L181+28
 2070 06ae 1360     		str	r3, [r2]
 826:..\src/interruptions.c **** 
 827:..\src/interruptions.c ****             // anti-windup (for integral control)
 828:..\src/interruptions.c ****             if (pos_error_sum > ANTI_WINDUP)
 2071              		.loc 1 828 0
 2072 06b0 484B     		ldr	r3, .L181+28
 2073 06b2 1B68     		ldr	r3, [r3]
 2074 06b4 B3F57A7F 		cmp	r3, #1000
 2075 06b8 04DD     		ble	.L130
 829:..\src/interruptions.c ****                 pos_error_sum = ANTI_WINDUP;
 2076              		.loc 1 829 0
 2077 06ba 464B     		ldr	r3, .L181+28
 2078 06bc 4FF47A72 		mov	r2, #1000
 2079 06c0 1A60     		str	r2, [r3]
 2080 06c2 07E0     		b	.L131
 2081              	.L130:
 830:..\src/interruptions.c ****             else {
 831:..\src/interruptions.c **** 				if (pos_error_sum < -ANTI_WINDUP)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 53


 2082              		.loc 1 831 0
 2083 06c4 434B     		ldr	r3, .L181+28
 2084 06c6 1B68     		ldr	r3, [r3]
 2085 06c8 13F57A7F 		cmn	r3, #1000
 2086 06cc 02DA     		bge	.L131
 832:..\src/interruptions.c ****                 	pos_error_sum = -ANTI_WINDUP;
 2087              		.loc 1 832 0
 2088 06ce 414B     		ldr	r3, .L181+28
 2089 06d0 414A     		ldr	r2, .L181+32
 2090 06d2 1A60     		str	r2, [r3]
 2091              	.L131:
 833:..\src/interruptions.c ****             }
 834:..\src/interruptions.c **** 
 835:..\src/interruptions.c ****             // Proportional
 836:..\src/interruptions.c ****             if (k_p != 0) 
 2092              		.loc 1 836 0
 2093 06d4 BB6B     		ldr	r3, [r7, #56]
 2094 06d6 002B     		cmp	r3, #0
 2095 06d8 05D0     		beq	.L132
 837:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 2096              		.loc 1 837 0
 2097 06da BB6B     		ldr	r3, [r7, #56]
 2098 06dc 3A6D     		ldr	r2, [r7, #80]
 2099 06de 02FB03F3 		mul	r3, r2, r3
 2100 06e2 1B14     		asrs	r3, r3, #16
 2101 06e4 7B65     		str	r3, [r7, #84]
 2102              	.L132:
 838:..\src/interruptions.c ****             
 839:..\src/interruptions.c **** 
 840:..\src/interruptions.c ****             // Integral
 841:..\src/interruptions.c ****             if (k_i != 0) 
 2103              		.loc 1 841 0
 2104 06e6 7B6B     		ldr	r3, [r7, #52]
 2105 06e8 002B     		cmp	r3, #0
 2106 06ea 08D0     		beq	.L133
 842:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum) >> 16;
 2107              		.loc 1 842 0
 2108 06ec 394B     		ldr	r3, .L181+28
 2109 06ee 1B68     		ldr	r3, [r3]
 2110 06f0 7A6B     		ldr	r2, [r7, #52]
 2111 06f2 02FB03F3 		mul	r3, r2, r3
 2112 06f6 1B14     		asrs	r3, r3, #16
 2113 06f8 7A6D     		ldr	r2, [r7, #84]
 2114 06fa 1344     		add	r3, r3, r2
 2115 06fc 7B65     		str	r3, [r7, #84]
 2116              	.L133:
 843:..\src/interruptions.c ****             
 844:..\src/interruptions.c **** 
 845:..\src/interruptions.c ****             // Derivative
 846:..\src/interruptions.c ****             if (k_d != 0) 
 2117              		.loc 1 846 0
 2118 06fe 3B6B     		ldr	r3, [r7, #48]
 2119 0700 002B     		cmp	r3, #0
 2120 0702 0AD0     		beq	.L134
 847:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err)) >> 16;
 2121              		.loc 1 847 0
 2122 0704 354B     		ldr	r3, .L181+36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 54


 2123 0706 1B68     		ldr	r3, [r3]
 2124 0708 3A6D     		ldr	r2, [r7, #80]
 2125 070a D31A     		subs	r3, r2, r3
 2126 070c 3A6B     		ldr	r2, [r7, #48]
 2127 070e 02FB03F3 		mul	r3, r2, r3
 2128 0712 1B14     		asrs	r3, r3, #16
 2129 0714 7A6D     		ldr	r2, [r7, #84]
 2130 0716 1344     		add	r3, r3, r2
 2131 0718 7B65     		str	r3, [r7, #84]
 2132              	.L134:
 848:..\src/interruptions.c ****             
 849:..\src/interruptions.c **** 
 850:..\src/interruptions.c ****             // Update measure
 851:..\src/interruptions.c ****             prev_pos_err = pos_error;
 2133              		.loc 1 851 0
 2134 071a 304A     		ldr	r2, .L181+36
 2135 071c 3B6D     		ldr	r3, [r7, #80]
 2136 071e 1360     		str	r3, [r2]
 852:..\src/interruptions.c **** 
 853:..\src/interruptions.c ****             if (pwm_input > 0)
 2137              		.loc 1 853 0
 2138 0720 7B6D     		ldr	r3, [r7, #84]
 2139 0722 002B     		cmp	r3, #0
 2140 0724 03DD     		ble	.L135
 854:..\src/interruptions.c ****                 motor_dir = TRUE;
 2141              		.loc 1 854 0
 2142 0726 244B     		ldr	r3, .L181
 2143 0728 0122     		movs	r2, #1
 2144 072a 1A70     		strb	r2, [r3]
 855:..\src/interruptions.c ****             else
 856:..\src/interruptions.c ****                 motor_dir = FALSE;
 857:..\src/interruptions.c **** 
 858:..\src/interruptions.c ****         break;
 2145              		.loc 1 858 0
 2146 072c B5E0     		b	.L108
 2147              	.L135:
 856:..\src/interruptions.c **** 
 2148              		.loc 1 856 0
 2149 072e 224B     		ldr	r3, .L181
 2150 0730 0022     		movs	r2, #0
 2151 0732 1A70     		strb	r2, [r3]
 2152              		.loc 1 858 0
 2153 0734 B1E0     		b	.L108
 2154              	.L112:
 859:..\src/interruptions.c **** 
 860:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
 861:..\src/interruptions.c ****         case CONTROL_CURRENT:
 862:..\src/interruptions.c ****             if(g_ref[0].onoff && tension_valid) {
 2155              		.loc 1 862 0
 2156 0736 264B     		ldr	r3, .L181+24
 2157 0738 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2158 073a 002B     		cmp	r3, #0
 2159 073c 00F0AA80 		beq	.L175
 2160              		.loc 1 862 0 is_stmt 0 discriminator 1
 2161 0740 274B     		ldr	r3, .L181+40
 2162 0742 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2163 0744 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 55


 2164 0746 00F0A580 		beq	.L175
 863:..\src/interruptions.c ****                 
 864:..\src/interruptions.c ****                 i_ref = g_ref[0].curr;
 2165              		.loc 1 864 0 is_stmt 1
 2166 074a 214B     		ldr	r3, .L181+24
 2167 074c 5B68     		ldr	r3, [r3, #4]
 2168 074e FB64     		str	r3, [r7, #76]
 865:..\src/interruptions.c **** 
 866:..\src/interruptions.c ****                 if (i_ref > SH_MOT->current_limit) 
 2169              		.loc 1 866 0
 2170 0750 3B6C     		ldr	r3, [r7, #64]
 2171 0752 B3F95C30 		ldrsh	r3, [r3, #92]
 2172 0756 1A46     		mov	r2, r3
 2173 0758 FB6C     		ldr	r3, [r7, #76]
 2174 075a 9A42     		cmp	r2, r3
 2175 075c 04DA     		bge	.L138
 867:..\src/interruptions.c ****                     i_ref = SH_MOT->current_limit;
 2176              		.loc 1 867 0
 2177 075e 3B6C     		ldr	r3, [r7, #64]
 2178 0760 B3F95C30 		ldrsh	r3, [r3, #92]
 2179 0764 FB64     		str	r3, [r7, #76]
 2180 0766 0BE0     		b	.L139
 2181              	.L138:
 868:..\src/interruptions.c ****                 else {
 869:..\src/interruptions.c ****                     if (i_ref < -SH_MOT->current_limit)
 2182              		.loc 1 869 0
 2183 0768 3B6C     		ldr	r3, [r7, #64]
 2184 076a B3F95C30 		ldrsh	r3, [r3, #92]
 2185 076e 5A42     		negs	r2, r3
 2186 0770 FB6C     		ldr	r3, [r7, #76]
 2187 0772 9A42     		cmp	r2, r3
 2188 0774 04DD     		ble	.L139
 870:..\src/interruptions.c ****                         i_ref = -SH_MOT->current_limit;
 2189              		.loc 1 870 0
 2190 0776 3B6C     		ldr	r3, [r7, #64]
 2191 0778 B3F95C30 		ldrsh	r3, [r3, #92]
 2192 077c 5B42     		negs	r3, r3
 2193 077e FB64     		str	r3, [r7, #76]
 2194              	.L139:
 871:..\src/interruptions.c ****                 }
 872:..\src/interruptions.c ****                 
 873:..\src/interruptions.c ****                 // current error
 874:..\src/interruptions.c ****                 curr_error = i_ref - g_meas[SH_ENC_L].curr;            
 2195              		.loc 1 874 0
 2196 0780 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 2197 0784 0D49     		ldr	r1, .L181+4
 2198 0786 1346     		mov	r3, r2
 2199 0788 5B00     		lsls	r3, r3, #1
 2200 078a 1344     		add	r3, r3, r2
 2201 078c 1B01     		lsls	r3, r3, #4
 2202 078e 0B44     		add	r3, r3, r1
 2203 0790 0C33     		adds	r3, r3, #12
 2204 0792 1B68     		ldr	r3, [r3]
 2205 0794 FA6C     		ldr	r2, [r7, #76]
 2206 0796 D31A     		subs	r3, r2, r3
 2207 0798 3B60     		str	r3, [r7]
 875:..\src/interruptions.c ****                 curr_error_sum += curr_error;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 56


 2208              		.loc 1 875 0
 2209 079a 094B     		ldr	r3, .L181+8
 2210 079c 1A68     		ldr	r2, [r3]
 2211 079e 3B68     		ldr	r3, [r7]
 2212 07a0 1344     		add	r3, r3, r2
 2213 07a2 074A     		ldr	r2, .L181+8
 2214 07a4 1360     		str	r3, [r2]
 876:..\src/interruptions.c ****                 
 877:..\src/interruptions.c ****                 if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 2215              		.loc 1 877 0
 2216 07a6 064B     		ldr	r3, .L181+8
 2217 07a8 1B68     		ldr	r3, [r3]
 2218 07aa 064A     		ldr	r2, .L181+12
 2219 07ac 9342     		cmp	r3, r2
 2220 07ae 19DD     		ble	.L140
 878:..\src/interruptions.c ****                     curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 2221              		.loc 1 878 0
 2222 07b0 034B     		ldr	r3, .L181+8
 2223 07b2 044A     		ldr	r2, .L181+12
 2224 07b4 1A60     		str	r2, [r3]
 2225 07b6 1DE0     		b	.L141
 2226              	.L182:
 2227              		.align	2
 2228              	.L181:
 2229 07b8 98000000 		.word	motor_dir.10412
 2230 07bc 00000000 		.word	g_meas
 2231 07c0 9C000000 		.word	curr_error_sum.10408
 2232 07c4 A0860100 		.word	100000
 2233 07c8 6079FEFF 		.word	-100000
 2234 07cc A0000000 		.word	prev_curr_err.10410
 2235 07d0 00000000 		.word	g_ref
 2236 07d4 90000000 		.word	pos_error_sum.10407
 2237 07d8 18FCFFFF 		.word	-1000
 2238 07dc 94000000 		.word	prev_pos_err.10409
 2239 07e0 00000000 		.word	tension_valid
 2240              	.L140:
 879:..\src/interruptions.c ****                 else {
 880:..\src/interruptions.c ****                     if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT) 
 2241              		.loc 1 880 0
 2242 07e4 A74B     		ldr	r3, .L183
 2243 07e6 1B68     		ldr	r3, [r3]
 2244 07e8 A74A     		ldr	r2, .L183+4
 2245 07ea 9342     		cmp	r3, r2
 2246 07ec 02DA     		bge	.L141
 881:..\src/interruptions.c ****                         curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 2247              		.loc 1 881 0
 2248 07ee A54B     		ldr	r3, .L183
 2249 07f0 A54A     		ldr	r2, .L183+4
 2250 07f2 1A60     		str	r2, [r3]
 2251              	.L141:
 882:..\src/interruptions.c ****                 }
 883:..\src/interruptions.c **** 
 884:..\src/interruptions.c ****                 pwm_input = 0;
 2252              		.loc 1 884 0
 2253 07f4 0023     		movs	r3, #0
 2254 07f6 7B65     		str	r3, [r7, #84]
 885:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 57


 886:..\src/interruptions.c ****                 // Proportional
 887:..\src/interruptions.c ****                 if (k_p_c != 0)
 2255              		.loc 1 887 0
 2256 07f8 FB6A     		ldr	r3, [r7, #44]
 2257 07fa 002B     		cmp	r3, #0
 2258 07fc 07D0     		beq	.L142
 888:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 2259              		.loc 1 888 0
 2260 07fe FB6A     		ldr	r3, [r7, #44]
 2261 0800 3A68     		ldr	r2, [r7]
 2262 0802 02FB03F3 		mul	r3, r2, r3
 2263 0806 1B14     		asrs	r3, r3, #16
 2264 0808 7A6D     		ldr	r2, [r7, #84]
 2265 080a 1344     		add	r3, r3, r2
 2266 080c 7B65     		str	r3, [r7, #84]
 2267              	.L142:
 889:..\src/interruptions.c **** 
 890:..\src/interruptions.c ****                 // Integral
 891:..\src/interruptions.c ****                 if (k_i_c != 0)
 2268              		.loc 1 891 0
 2269 080e BB6A     		ldr	r3, [r7, #40]
 2270 0810 002B     		cmp	r3, #0
 2271 0812 08D0     		beq	.L143
 892:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum) >> 16;
 2272              		.loc 1 892 0
 2273 0814 9B4B     		ldr	r3, .L183
 2274 0816 1B68     		ldr	r3, [r3]
 2275 0818 BA6A     		ldr	r2, [r7, #40]
 2276 081a 02FB03F3 		mul	r3, r2, r3
 2277 081e 1B14     		asrs	r3, r3, #16
 2278 0820 7A6D     		ldr	r2, [r7, #84]
 2279 0822 1344     		add	r3, r3, r2
 2280 0824 7B65     		str	r3, [r7, #84]
 2281              	.L143:
 893:..\src/interruptions.c **** 
 894:..\src/interruptions.c ****                 // Derivative
 895:..\src/interruptions.c ****                 if (k_d_c != 0)
 2282              		.loc 1 895 0
 2283 0826 7B6A     		ldr	r3, [r7, #36]
 2284 0828 002B     		cmp	r3, #0
 2285 082a 0AD0     		beq	.L144
 896:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err)) >> 16;
 2286              		.loc 1 896 0
 2287 082c 974B     		ldr	r3, .L183+8
 2288 082e 1B68     		ldr	r3, [r3]
 2289 0830 3A68     		ldr	r2, [r7]
 2290 0832 D31A     		subs	r3, r2, r3
 2291 0834 7A6A     		ldr	r2, [r7, #36]
 2292 0836 02FB03F3 		mul	r3, r2, r3
 2293 083a 1B14     		asrs	r3, r3, #16
 2294 083c 7A6D     		ldr	r2, [r7, #84]
 2295 083e 1344     		add	r3, r3, r2
 2296 0840 7B65     		str	r3, [r7, #84]
 2297              	.L144:
 897:..\src/interruptions.c ****                 
 898:..\src/interruptions.c ****                 prev_curr_err = curr_error;
 2298              		.loc 1 898 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 58


 2299 0842 924A     		ldr	r2, .L183+8
 2300 0844 3B68     		ldr	r3, [r7]
 2301 0846 1360     		str	r3, [r2]
 899:..\src/interruptions.c ****                 
 900:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 2302              		.loc 1 900 0
 2303 0848 7B6D     		ldr	r3, [r7, #84]
 2304 084a 002B     		cmp	r3, #0
 2305 084c 03DB     		blt	.L145
 901:..\src/interruptions.c ****                     motor_dir = TRUE;
 2306              		.loc 1 901 0
 2307 084e 904B     		ldr	r3, .L183+12
 2308 0850 0122     		movs	r2, #1
 2309 0852 1A70     		strb	r2, [r3]
 902:..\src/interruptions.c ****                 else
 903:..\src/interruptions.c ****                     motor_dir = FALSE;
 904:..\src/interruptions.c ****             }
 905:..\src/interruptions.c ****         break;
 2310              		.loc 1 905 0
 2311 0854 1EE0     		b	.L175
 2312              	.L145:
 903:..\src/interruptions.c ****             }
 2313              		.loc 1 903 0
 2314 0856 8E4B     		ldr	r3, .L183+12
 2315 0858 0022     		movs	r2, #0
 2316 085a 1A70     		strb	r2, [r3]
 2317              		.loc 1 905 0
 2318 085c 1AE0     		b	.L175
 2319              	.L111:
 906:..\src/interruptions.c ****         
 907:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
 908:..\src/interruptions.c ****         case CONTROL_PWM:
 909:..\src/interruptions.c **** 
 910:..\src/interruptions.c ****             pwm_input = g_ref[0].pwm;
 2320              		.loc 1 910 0
 2321 085e 8D4B     		ldr	r3, .L183+16
 2322 0860 9B68     		ldr	r3, [r3, #8]
 2323 0862 7B65     		str	r3, [r7, #84]
 911:..\src/interruptions.c **** 
 912:..\src/interruptions.c ****             if (pwm_input > 0) 
 2324              		.loc 1 912 0
 2325 0864 7B6D     		ldr	r3, [r7, #84]
 2326 0866 002B     		cmp	r3, #0
 2327 0868 03DD     		ble	.L146
 913:..\src/interruptions.c ****                 motor_dir = TRUE;
 2328              		.loc 1 913 0
 2329 086a 894B     		ldr	r3, .L183+12
 2330 086c 0122     		movs	r2, #1
 2331 086e 1A70     		strb	r2, [r3]
 2332 0870 02E0     		b	.L147
 2333              	.L146:
 914:..\src/interruptions.c ****             else 
 915:..\src/interruptions.c ****                 motor_dir = FALSE;
 2334              		.loc 1 915 0
 2335 0872 874B     		ldr	r3, .L183+12
 2336 0874 0022     		movs	r2, #0
 2337 0876 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 59


 2338              	.L147:
 916:..\src/interruptions.c ****             
 917:..\src/interruptions.c **** 
 918:..\src/interruptions.c ****             // pwm_input saturation
 919:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 2339              		.loc 1 919 0
 2340 0878 7B6D     		ldr	r3, [r7, #84]
 2341 087a 13F1640F 		cmn	r3, #100
 2342 087e 03DA     		bge	.L148
 920:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 2343              		.loc 1 920 0
 2344 0880 6FF06303 		mvn	r3, #99
 2345 0884 7B65     		str	r3, [r7, #84]
 921:..\src/interruptions.c ****             else {
 922:..\src/interruptions.c **** 				if (pwm_input > PWM_MAX_VALUE) 
 923:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
 924:..\src/interruptions.c ****         	}
 925:..\src/interruptions.c **** 
 926:..\src/interruptions.c ****         break;
 2346              		.loc 1 926 0
 2347 0886 07E0     		b	.L176
 2348              	.L148:
 922:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
 2349              		.loc 1 922 0
 2350 0888 7B6D     		ldr	r3, [r7, #84]
 2351 088a 642B     		cmp	r3, #100
 2352 088c 04DD     		ble	.L176
 923:..\src/interruptions.c ****         	}
 2353              		.loc 1 923 0
 2354 088e 6423     		movs	r3, #100
 2355 0890 7B65     		str	r3, [r7, #84]
 2356              		.loc 1 926 0
 2357 0892 01E0     		b	.L176
 2358              	.L175:
 905:..\src/interruptions.c ****         
 2359              		.loc 1 905 0
 2360 0894 00BF     		nop
 2361 0896 00E0     		b	.L108
 2362              	.L176:
 2363              		.loc 1 926 0
 2364 0898 00BF     		nop
 2365              	.L108:
 927:..\src/interruptions.c ****             
 928:..\src/interruptions.c ****     }
 929:..\src/interruptions.c **** 
 930:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
 931:..\src/interruptions.c **** 
 932:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 2366              		.loc 1 932 0
 2367 089a 7B6D     		ldr	r3, [r7, #84]
 2368 089c 642B     		cmp	r3, #100
 2369 089e 01DD     		ble	.L150
 933:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 2370              		.loc 1 933 0
 2371 08a0 6423     		movs	r3, #100
 2372 08a2 7B65     		str	r3, [r7, #84]
 2373              	.L150:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 60


 934:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 2374              		.loc 1 934 0
 2375 08a4 7B6D     		ldr	r3, [r7, #84]
 2376 08a6 13F1640F 		cmn	r3, #100
 2377 08aa 02DA     		bge	.L151
 935:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 2378              		.loc 1 935 0
 2379 08ac 6FF06303 		mvn	r3, #99
 2380 08b0 7B65     		str	r3, [r7, #84]
 2381              	.L151:
 936:..\src/interruptions.c **** 
 937:..\src/interruptions.c ****     if (SH_MOT->control_mode != CONTROL_PWM) 
 2382              		.loc 1 937 0
 2383 08b2 3B6C     		ldr	r3, [r7, #64]
 2384 08b4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 2385 08b8 012B     		cmp	r3, #1
 2386 08ba 0DD0     		beq	.L152
 938:..\src/interruptions.c ****         pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE) * dev_pwm_limit[0]) >> 10;
 2387              		.loc 1 938 0
 2388 08bc 7B6D     		ldr	r3, [r7, #84]
 2389 08be 9B02     		lsls	r3, r3, #10
 2390 08c0 754A     		ldr	r2, .L183+20
 2391 08c2 82FB0312 		smull	r1, r2, r2, r3
 2392 08c6 5211     		asrs	r2, r2, #5
 2393 08c8 DB17     		asrs	r3, r3, #31
 2394 08ca D31A     		subs	r3, r2, r3
 2395 08cc 734A     		ldr	r2, .L183+24
 2396 08ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2397 08d0 02FB03F3 		mul	r3, r2, r3
 2398 08d4 9B12     		asrs	r3, r3, #10
 2399 08d6 7B65     		str	r3, [r7, #84]
 2400              	.L152:
 939:..\src/interruptions.c ****  
 940:..\src/interruptions.c ****     //// RATE LIMITER ////
 941:..\src/interruptions.c ****     if(SIGN(pwm_input-prev_pwm) == SIGN(pos_error))
 2401              		.loc 1 941 0
 2402 08d8 714B     		ldr	r3, .L183+28
 2403 08da 1B68     		ldr	r3, [r3]
 2404 08dc 7A6D     		ldr	r2, [r7, #84]
 2405 08de D31A     		subs	r3, r2, r3
 2406 08e0 002B     		cmp	r3, #0
 2407 08e2 01DB     		blt	.L153
 2408              		.loc 1 941 0 is_stmt 0 discriminator 1
 2409 08e4 0122     		movs	r2, #1
 2410 08e6 01E0     		b	.L154
 2411              	.L153:
 2412              		.loc 1 941 0 discriminator 2
 2413 08e8 4FF0FF32 		mov	r2, #-1
 2414              	.L154:
 2415              		.loc 1 941 0 discriminator 4
 2416 08ec 3B6D     		ldr	r3, [r7, #80]
 2417 08ee 002B     		cmp	r3, #0
 2418 08f0 01DB     		blt	.L155
 2419              		.loc 1 941 0 discriminator 5
 2420 08f2 0123     		movs	r3, #1
 2421 08f4 01E0     		b	.L156
 2422              	.L155:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 61


 2423              		.loc 1 941 0 discriminator 6
 2424 08f6 4FF0FF33 		mov	r3, #-1
 2425              	.L156:
 2426              		.loc 1 941 0 discriminator 8
 2427 08fa 9A42     		cmp	r2, r3
 2428 08fc 21D1     		bne	.L157
 942:..\src/interruptions.c ****     {
 943:..\src/interruptions.c ****         if((pwm_input-prev_pwm) > SH_MOT->pwm_rate_limiter)
 2429              		.loc 1 943 0 is_stmt 1
 2430 08fe 684B     		ldr	r3, .L183+28
 2431 0900 1B68     		ldr	r3, [r3]
 2432 0902 7A6D     		ldr	r2, [r7, #84]
 2433 0904 D31A     		subs	r3, r2, r3
 2434 0906 3A6C     		ldr	r2, [r7, #64]
 2435 0908 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 2436 090c 9342     		cmp	r3, r2
 2437 090e 07DD     		ble	.L158
 944:..\src/interruptions.c ****             pwm_input =  prev_pwm + SH_MOT->pwm_rate_limiter;
 2438              		.loc 1 944 0
 2439 0910 3B6C     		ldr	r3, [r7, #64]
 2440 0912 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 2441 0916 1A46     		mov	r2, r3
 2442 0918 614B     		ldr	r3, .L183+28
 2443 091a 1B68     		ldr	r3, [r3]
 2444 091c 1344     		add	r3, r3, r2
 2445 091e 7B65     		str	r3, [r7, #84]
 2446              	.L158:
 945:..\src/interruptions.c ****     
 946:..\src/interruptions.c ****         if((pwm_input-prev_pwm) < -SH_MOT->pwm_rate_limiter)
 2447              		.loc 1 946 0
 2448 0920 5F4B     		ldr	r3, .L183+28
 2449 0922 1B68     		ldr	r3, [r3]
 2450 0924 7A6D     		ldr	r2, [r7, #84]
 2451 0926 D21A     		subs	r2, r2, r3
 2452 0928 3B6C     		ldr	r3, [r7, #64]
 2453 092a 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 2454 092e 5B42     		negs	r3, r3
 2455 0930 9A42     		cmp	r2, r3
 2456 0932 06DA     		bge	.L157
 947:..\src/interruptions.c ****             pwm_input =  prev_pwm - SH_MOT->pwm_rate_limiter;
 2457              		.loc 1 947 0
 2458 0934 5A4B     		ldr	r3, .L183+28
 2459 0936 1B68     		ldr	r3, [r3]
 2460 0938 3A6C     		ldr	r2, [r7, #64]
 2461 093a 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 2462 093e 9B1A     		subs	r3, r3, r2
 2463 0940 7B65     		str	r3, [r7, #84]
 2464              	.L157:
 948:..\src/interruptions.c ****     }
 949:..\src/interruptions.c ****     
 950:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 2465              		.loc 1 950 0
 2466 0942 7B6D     		ldr	r3, [r7, #84]
 2467 0944 642B     		cmp	r3, #100
 2468 0946 01DD     		ble	.L159
 951:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 2469              		.loc 1 951 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 62


 2470 0948 6423     		movs	r3, #100
 2471 094a 7B65     		str	r3, [r7, #84]
 2472              	.L159:
 952:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 2473              		.loc 1 952 0
 2474 094c 7B6D     		ldr	r3, [r7, #84]
 2475 094e 13F1640F 		cmn	r3, #100
 2476 0952 02DA     		bge	.L160
 953:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 2477              		.loc 1 953 0
 2478 0954 6FF06303 		mvn	r3, #99
 2479 0958 7B65     		str	r3, [r7, #84]
 2480              	.L160:
 954:..\src/interruptions.c ****     
 955:..\src/interruptions.c ****     prev_pwm = pwm_input;
 2481              		.loc 1 955 0
 2482 095a 514A     		ldr	r2, .L183+28
 2483 095c 7B6D     		ldr	r3, [r7, #84]
 2484 095e 1360     		str	r3, [r2]
 956:..\src/interruptions.c **** 	
 957:..\src/interruptions.c ****     pwm_sign = SIGN(pwm_input);   
 2485              		.loc 1 957 0
 2486 0960 7B6D     		ldr	r3, [r7, #84]
 2487 0962 002B     		cmp	r3, #0
 2488 0964 01DB     		blt	.L161
 2489              		.loc 1 957 0 is_stmt 0 discriminator 1
 2490 0966 0122     		movs	r2, #1
 2491 0968 01E0     		b	.L162
 2492              	.L161:
 2493              		.loc 1 957 0 discriminator 2
 2494 096a 4FF0FF32 		mov	r2, #-1
 2495              	.L162:
 2496              		.loc 1 957 0 discriminator 4
 2497 096e 4D4B     		ldr	r3, .L183+32
 2498 0970 1A70     		strb	r2, [r3]
 958:..\src/interruptions.c ****     
 959:..\src/interruptions.c ****     if (SH_MOT->not_revers_motor_flag == TRUE) {
 2499              		.loc 1 959 0 is_stmt 1 discriminator 4
 2500 0972 3B6C     		ldr	r3, [r7, #64]
 2501 0974 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 2502 0978 012B     		cmp	r3, #1
 2503 097a 6CD1     		bne	.L163
 960:..\src/interruptions.c ****         // Block motor with pwm = 0 to exploit not reversible motor behaviour 
 961:..\src/interruptions.c ****     	if ( SH_MOT->control_mode != CONTROL_PWM && ((g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[
 2504              		.loc 1 961 0
 2505 097c 3B6C     		ldr	r3, [r7, #64]
 2506 097e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 2507 0982 012B     		cmp	r3, #1
 2508 0984 64D0     		beq	.L164
 2509              		.loc 1 961 0 is_stmt 0 discriminator 1
 2510 0986 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 2511 098a 4749     		ldr	r1, .L183+36
 2512 098c 1346     		mov	r3, r2
 2513 098e 5B00     		lsls	r3, r3, #1
 2514 0990 1344     		add	r3, r3, r2
 2515 0992 1B01     		lsls	r3, r3, #4
 2516 0994 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 63


 2517 0996 1968     		ldr	r1, [r3]
 2518 0998 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 2519 099c 4348     		ldr	r0, .L183+40
 2520 099e 1346     		mov	r3, r2
 2521 09a0 5B00     		lsls	r3, r3, #1
 2522 09a2 1344     		add	r3, r3, r2
 2523 09a4 1B01     		lsls	r3, r3, #4
 2524 09a6 0344     		add	r3, r3, r0
 2525 09a8 1B68     		ldr	r3, [r3]
 2526 09aa CB1A     		subs	r3, r1, r3
 2527 09ac 312B     		cmp	r3, #49
 2528 09ae 4FDC     		bgt	.L164
 962:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 2529              		.loc 1 962 0 is_stmt 1 discriminator 2
 2530 09b0 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 2531 09b4 3C49     		ldr	r1, .L183+36
 2532 09b6 1346     		mov	r3, r2
 2533 09b8 5B00     		lsls	r3, r3, #1
 2534 09ba 1344     		add	r3, r3, r2
 2535 09bc 1B01     		lsls	r3, r3, #4
 2536 09be 0B44     		add	r3, r3, r1
 2537 09c0 1968     		ldr	r1, [r3]
 2538 09c2 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 2539 09c6 3948     		ldr	r0, .L183+40
 2540 09c8 1346     		mov	r3, r2
 2541 09ca 5B00     		lsls	r3, r3, #1
 2542 09cc 1344     		add	r3, r3, r2
 2543 09ce 1B01     		lsls	r3, r3, #4
 2544 09d0 0344     		add	r3, r3, r0
 2545 09d2 1B68     		ldr	r3, [r3]
 2546 09d4 CB1A     		subs	r3, r1, r3
 961:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 2547              		.loc 1 961 0 discriminator 2
 2548 09d6 13F1310F 		cmn	r3, #49
 2549 09da 39DB     		blt	.L164
 963:..\src/interruptions.c ****             ((g_refOld[0].pos - g_ref[0].pos) < 100 && (g_refOld[0].pos - g_ref[0].pos) > -100) ) {
 2550              		.loc 1 963 0
 2551 09dc 344B     		ldr	r3, .L183+44
 2552 09de 1A68     		ldr	r2, [r3]
 2553 09e0 2C4B     		ldr	r3, .L183+16
 2554 09e2 1B68     		ldr	r3, [r3]
 2555 09e4 D31A     		subs	r3, r2, r3
 962:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 2556              		.loc 1 962 0
 2557 09e6 632B     		cmp	r3, #99
 2558 09e8 32DC     		bgt	.L164
 2559              		.loc 1 963 0
 2560 09ea 314B     		ldr	r3, .L183+44
 2561 09ec 1A68     		ldr	r2, [r3]
 2562 09ee 294B     		ldr	r3, .L183+16
 2563 09f0 1B68     		ldr	r3, [r3]
 2564 09f2 D31A     		subs	r3, r2, r3
 2565 09f4 13F1630F 		cmn	r3, #99
 2566 09f8 2ADB     		blt	.L164
 964:..\src/interruptions.c ****             position_counter++;
 2567              		.loc 1 964 0
 2568 09fa 2E4B     		ldr	r3, .L183+48
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 64


 2569 09fc 1B68     		ldr	r3, [r3]
 2570 09fe 0133     		adds	r3, r3, #1
 2571 0a00 2C4A     		ldr	r2, .L183+48
 2572 0a02 1360     		str	r3, [r2]
 965:..\src/interruptions.c ****             
 966:..\src/interruptions.c ****             if (position_counter > 250) { 
 2573              		.loc 1 966 0
 2574 0a04 2B4B     		ldr	r3, .L183+48
 2575 0a06 1B68     		ldr	r3, [r3]
 2576 0a08 FA2B     		cmp	r3, #250
 2577 0a0a 24D9     		bls	.L163
 967:..\src/interruptions.c ****                 if (SH_MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 2578              		.loc 1 967 0
 2579 0a0c 3B6C     		ldr	r3, [r7, #64]
 2580 0a0e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 2581 0a12 002B     		cmp	r3, #0
 2582 0a14 0ED1     		bne	.L166
 2583              		.loc 1 967 0 is_stmt 0 discriminator 1
 2584 0a16 284B     		ldr	r3, .L183+52
 2585 0a18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2586 0a1a 002B     		cmp	r3, #0
 2587 0a1c 0AD1     		bne	.L166
 968:..\src/interruptions.c ****                     g_refNew[0].pos = g_meas[SH_ENC_L].pos[0];       // Needed only when USB input 
 2588              		.loc 1 968 0 is_stmt 1
 2589 0a1e 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 2590 0a22 2249     		ldr	r1, .L183+40
 2591 0a24 1346     		mov	r3, r2
 2592 0a26 5B00     		lsls	r3, r3, #1
 2593 0a28 1344     		add	r3, r3, r2
 2594 0a2a 1B01     		lsls	r3, r3, #4
 2595 0a2c 0B44     		add	r3, r3, r1
 2596 0a2e 1B68     		ldr	r3, [r3]
 2597 0a30 224A     		ldr	r2, .L183+56
 2598 0a32 1360     		str	r3, [r2]
 2599              	.L166:
 969:..\src/interruptions.c ****                 }
 970:..\src/interruptions.c ****                 g_ref[0].pos = g_meas[SH_ENC_L].pos[0];
 2600              		.loc 1 970 0
 2601 0a34 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 2602 0a38 1C49     		ldr	r1, .L183+40
 2603 0a3a 1346     		mov	r3, r2
 2604 0a3c 5B00     		lsls	r3, r3, #1
 2605 0a3e 1344     		add	r3, r3, r2
 2606 0a40 1B01     		lsls	r3, r3, #4
 2607 0a42 0B44     		add	r3, r3, r1
 2608 0a44 1B68     		ldr	r3, [r3]
 2609 0a46 134A     		ldr	r2, .L183+16
 2610 0a48 1360     		str	r3, [r2]
 971:..\src/interruptions.c ****                 pwm_input = 0;            
 2611              		.loc 1 971 0
 2612 0a4a 0023     		movs	r3, #0
 2613 0a4c 7B65     		str	r3, [r7, #84]
 966:..\src/interruptions.c ****                 if (SH_MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 2614              		.loc 1 966 0
 2615 0a4e 02E0     		b	.L163
 2616              	.L164:
 972:..\src/interruptions.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 65


 973:..\src/interruptions.c ****         }
 974:..\src/interruptions.c ****         else {
 975:..\src/interruptions.c ****             position_counter = 0;
 2617              		.loc 1 975 0
 2618 0a50 184B     		ldr	r3, .L183+48
 2619 0a52 0022     		movs	r2, #0
 2620 0a54 1A60     		str	r2, [r3]
 2621              	.L163:
 976:..\src/interruptions.c ****         }
 977:..\src/interruptions.c ****     }
 978:..\src/interruptions.c ****     
 979:..\src/interruptions.c ****     if (motor_dir)
 2622              		.loc 1 979 0
 2623 0a56 0E4B     		ldr	r3, .L183+12
 2624 0a58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2625 0a5a 002B     		cmp	r3, #0
 2626 0a5c 03D0     		beq	.L167
 980:..\src/interruptions.c ****         MOTOR_DIR_1_Write(0x01);
 2627              		.loc 1 980 0
 2628 0a5e 0120     		movs	r0, #1
 2629 0a60 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 2630 0a64 02E0     		b	.L168
 2631              	.L167:
 981:..\src/interruptions.c ****     else
 982:..\src/interruptions.c ****         MOTOR_DIR_1_Write(0x00);
 2632              		.loc 1 982 0
 2633 0a66 0020     		movs	r0, #0
 2634 0a68 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 2635              	.L168:
 983:..\src/interruptions.c **** 
 984:..\src/interruptions.c ****     PWM_MOTORS_WriteCompare1(abs(pwm_input));
 2636              		.loc 1 984 0
 2637 0a6c 7B6D     		ldr	r3, [r7, #84]
 2638 0a6e 002B     		cmp	r3, #0
 2639 0a70 B8BF     		it	lt
 2640 0a72 5B42     		rsblt	r3, r3, #0
 2641 0a74 DBB2     		uxtb	r3, r3
 2642 0a76 1846     		mov	r0, r3
 2643 0a78 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
 985:..\src/interruptions.c **** }
 2644              		.loc 1 985 0
 2645 0a7c 00BF     		nop
 2646 0a7e 5837     		adds	r7, r7, #88
 2647              		.cfi_def_cfa_offset 8
 2648 0a80 BD46     		mov	sp, r7
 2649              		.cfi_def_cfa_register 13
 2650              		@ sp needed
 2651 0a82 80BD     		pop	{r7, pc}
 2652              	.L184:
 2653              		.align	2
 2654              	.L183:
 2655 0a84 9C000000 		.word	curr_error_sum.10408
 2656 0a88 6079FEFF 		.word	-100000
 2657 0a8c A0000000 		.word	prev_curr_err.10410
 2658 0a90 98000000 		.word	motor_dir.10412
 2659 0a94 00000000 		.word	g_ref
 2660 0a98 1F85EB51 		.word	1374389535
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 66


 2661 0a9c 00000000 		.word	dev_pwm_limit
 2662 0aa0 A4000000 		.word	prev_pwm.10411
 2663 0aa4 00000000 		.word	pwm_sign
 2664 0aa8 00000000 		.word	g_measOld
 2665 0aac 00000000 		.word	g_meas
 2666 0ab0 00000000 		.word	g_refOld
 2667 0ab4 A8000000 		.word	position_counter.10413
 2668 0ab8 00000000 		.word	change_ext_ref_flag
 2669 0abc 00000000 		.word	g_refNew
 2670              		.cfi_endproc
 2671              	.LFE68:
 2672              		.size	motor_control_SH, .-motor_control_SH
 2673              		.section	.text.motor_control_generic,"ax",%progbits
 2674              		.align	2
 2675              		.global	motor_control_generic
 2676              		.thumb
 2677              		.thumb_func
 2678              		.type	motor_control_generic, %function
 2679              	motor_control_generic:
 2680              	.LFB69:
 986:..\src/interruptions.c **** 
 987:..\src/interruptions.c **** //==============================================================================
 988:..\src/interruptions.c **** //                                                         MOTOR CONTROL GENERIC
 989:..\src/interruptions.c **** //==============================================================================
 990:..\src/interruptions.c **** void motor_control_generic(uint8 idx) {
 2681              		.loc 1 990 0
 2682              		.cfi_startproc
 2683              		@ args = 0, pretend = 0, frame = 96
 2684              		@ frame_needed = 1, uses_anonymous_args = 0
 2685 0000 90B5     		push	{r4, r7, lr}
 2686              		.cfi_def_cfa_offset 12
 2687              		.cfi_offset 4, -12
 2688              		.cfi_offset 7, -8
 2689              		.cfi_offset 14, -4
 2690 0002 99B0     		sub	sp, sp, #100
 2691              		.cfi_def_cfa_offset 112
 2692 0004 00AF     		add	r7, sp, #0
 2693              		.cfi_def_cfa_register 7
 2694 0006 0346     		mov	r3, r0
 2695 0008 FB71     		strb	r3, [r7, #7]
 991:..\src/interruptions.c ****     
 992:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 2696              		.loc 1 992 0
 2697 000a 0023     		movs	r3, #0
 2698 000c FB65     		str	r3, [r7, #92]
 993:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
 994:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
 995:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
 996:..\src/interruptions.c ****     int32 CYDATA handle_value;
 997:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 998:..\src/interruptions.c **** 
 999:..\src/interruptions.c ****     struct st_motor* MOT = &c_mem.motor[idx]; // Motor struct
 2699              		.loc 1 999 0
 2700 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2701 0010 1346     		mov	r3, r2
 2702 0012 DB00     		lsls	r3, r3, #3
 2703 0014 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 67


 2704 0016 1B01     		lsls	r3, r3, #4
 2705 0018 B033     		adds	r3, r3, #176
 2706 001a AA4A     		ldr	r2, .L306
 2707 001c 1344     		add	r3, r3, r2
 2708 001e FB64     		str	r3, [r7, #76]
1000:..\src/interruptions.c ****     uint8 ENC_L = MOT->encoder_line;          // Associated encoder line
 2709              		.loc 1 1000 0
 2710 0020 FB6C     		ldr	r3, [r7, #76]
 2711 0022 93F86030 		ldrb	r3, [r3, #96]
 2712 0026 87F84B30 		strb	r3, [r7, #75]
1001:..\src/interruptions.c ****     
1002:..\src/interruptions.c ****     int32 CYDATA k_p = MOT->k_p;  
 2713              		.loc 1 1002 0
 2714 002a FB6C     		ldr	r3, [r7, #76]
 2715 002c 1B68     		ldr	r3, [r3]
 2716 002e 7B64     		str	r3, [r7, #68]
1003:..\src/interruptions.c ****     int32 CYDATA k_i = MOT->k_i; 
 2717              		.loc 1 1003 0
 2718 0030 FB6C     		ldr	r3, [r7, #76]
 2719 0032 5B68     		ldr	r3, [r3, #4]
 2720 0034 3B64     		str	r3, [r7, #64]
1004:..\src/interruptions.c ****     int32 CYDATA k_d = MOT->k_d; 
 2721              		.loc 1 1004 0
 2722 0036 FB6C     		ldr	r3, [r7, #76]
 2723 0038 9B68     		ldr	r3, [r3, #8]
 2724 003a FB63     		str	r3, [r7, #60]
1005:..\src/interruptions.c **** 
1006:..\src/interruptions.c ****     int32 CYDATA k_p_c = MOT->k_p_c;  
 2725              		.loc 1 1006 0
 2726 003c FB6C     		ldr	r3, [r7, #76]
 2727 003e DB68     		ldr	r3, [r3, #12]
 2728 0040 BB63     		str	r3, [r7, #56]
1007:..\src/interruptions.c ****     int32 CYDATA k_i_c = MOT->k_i_c; 
 2729              		.loc 1 1007 0
 2730 0042 FB6C     		ldr	r3, [r7, #76]
 2731 0044 1B69     		ldr	r3, [r3, #16]
 2732 0046 7B63     		str	r3, [r7, #52]
1008:..\src/interruptions.c ****     int32 CYDATA k_d_c = MOT->k_d_c;   
 2733              		.loc 1 1008 0
 2734 0048 FB6C     		ldr	r3, [r7, #76]
 2735 004a 5B69     		ldr	r3, [r3, #20]
 2736 004c 3B63     		str	r3, [r7, #48]
1009:..\src/interruptions.c **** 
1010:..\src/interruptions.c ****     int32 CYDATA k_p_dl = MOT->k_p_dl;  
 2737              		.loc 1 1010 0
 2738 004e FB6C     		ldr	r3, [r7, #76]
 2739 0050 9B69     		ldr	r3, [r3, #24]
 2740 0052 FB62     		str	r3, [r7, #44]
1011:..\src/interruptions.c ****     int32 CYDATA k_i_dl = MOT->k_i_dl; 
 2741              		.loc 1 1011 0
 2742 0054 FB6C     		ldr	r3, [r7, #76]
 2743 0056 DB69     		ldr	r3, [r3, #28]
 2744 0058 BB62     		str	r3, [r7, #40]
1012:..\src/interruptions.c ****     int32 CYDATA k_d_dl = MOT->k_d_dl;
 2745              		.loc 1 1012 0
 2746 005a FB6C     		ldr	r3, [r7, #76]
 2747 005c 1B6A     		ldr	r3, [r3, #32]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 68


 2748 005e 7B62     		str	r3, [r7, #36]
1013:..\src/interruptions.c ****     
1014:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = MOT->k_p_c_dl;  
 2749              		.loc 1 1014 0
 2750 0060 FB6C     		ldr	r3, [r7, #76]
 2751 0062 5B6A     		ldr	r3, [r3, #36]
 2752 0064 3B62     		str	r3, [r7, #32]
1015:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = MOT->k_i_c_dl; 
 2753              		.loc 1 1015 0
 2754 0066 FB6C     		ldr	r3, [r7, #76]
 2755 0068 9B6A     		ldr	r3, [r3, #40]
 2756 006a FB61     		str	r3, [r7, #28]
1016:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = MOT->k_d_c_dl;   
 2757              		.loc 1 1016 0
 2758 006c FB6C     		ldr	r3, [r7, #76]
 2759 006e DB6A     		ldr	r3, [r3, #44]
 2760 0070 BB61     		str	r3, [r7, #24]
1017:..\src/interruptions.c **** 
1018:..\src/interruptions.c ****     // Static Variables
1019:..\src/interruptions.c **** 
1020:..\src/interruptions.c ****     static int32 pos_error_sum[NUM_OF_MOTORS];     // position error sum for integral
1021:..\src/interruptions.c ****     static int32 curr_error_sum[NUM_OF_MOTORS];    // current error sum for integral
1022:..\src/interruptions.c ****     
1023:..\src/interruptions.c ****     static int32 prev_pos_err[NUM_OF_MOTORS];      // previous position error for deriv. control
1024:..\src/interruptions.c ****     static int32 prev_curr_err[NUM_OF_MOTORS];     // previous current error for deriv. control
1025:..\src/interruptions.c ****     static int32 prev_pwm[NUM_OF_MOTORS];
1026:..\src/interruptions.c **** 
1027:..\src/interruptions.c ****     static CYBIT motor_dir[NUM_OF_MOTORS] = {FALSE, FALSE};
1028:..\src/interruptions.c ****     static uint32 position_counter[NUM_OF_MOTORS] = {0, 0};
1029:..\src/interruptions.c ****     static uint8 current_emg[NUM_OF_MOTORS] = {0, 0};   // 0 NONE
1030:..\src/interruptions.c ****                                                         // 1 EMG 1
1031:..\src/interruptions.c ****                                                         // 2 EMG 2
1032:..\src/interruptions.c ****                                                         // wait for both to get down
1033:..\src/interruptions.c ****     
1034:..\src/interruptions.c ****     err_emg_1 = g_emg_meas.emg[0] - c_mem.emg.emg_threshold[0];
 2761              		.loc 1 1034 0
 2762 0072 954B     		ldr	r3, .L306+4
 2763 0074 1B68     		ldr	r3, [r3]
 2764 0076 934A     		ldr	r2, .L306
 2765 0078 B2F8F021 		ldrh	r2, [r2, #496]
 2766 007c 9B1A     		subs	r3, r3, r2
 2767 007e 7B61     		str	r3, [r7, #20]
1035:..\src/interruptions.c ****     err_emg_2 = g_emg_meas.emg[1] - c_mem.emg.emg_threshold[1];
 2768              		.loc 1 1035 0
 2769 0080 914B     		ldr	r3, .L306+4
 2770 0082 5B68     		ldr	r3, [r3, #4]
 2771 0084 8F4A     		ldr	r2, .L306
 2772 0086 B2F8F221 		ldrh	r2, [r2, #498]
 2773 008a 9B1A     		subs	r3, r3, r2
 2774 008c 3B61     		str	r3, [r7, #16]
1036:..\src/interruptions.c **** 
1037:..\src/interruptions.c ****     // =========================== POSITION INPUT ==============================            
1038:..\src/interruptions.c ****     switch(MOT->input_mode) {
 2775              		.loc 1 1038 0
 2776 008e FB6C     		ldr	r3, [r7, #76]
 2777 0090 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 2778 0094 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 69


 2779 0096 042B     		cmp	r3, #4
 2780 0098 00F20682 		bhi	.L297
 2781 009c 01A2     		adr	r2, .L188
 2782 009e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2783 00a2 00BF     		.p2align 2
 2784              	.L188:
 2785 00a4 B9000000 		.word	.L187+1
 2786 00a8 C9010000 		.word	.L189+1
 2787 00ac 0F020000 		.word	.L190+1
 2788 00b0 9B020000 		.word	.L191+1
 2789 00b4 A1030000 		.word	.L192+1
 2790              		.p2align 1
 2791              	.L187:
1039:..\src/interruptions.c ****         case INPUT_MODE_ENCODER3:
1040:..\src/interruptions.c **** 
1041:..\src/interruptions.c ****             // Calculate handle value based on position of handle in the
1042:..\src/interruptions.c ****             // sensor chain and multiplication factor between handle and motor position
1043:..\src/interruptions.c ****             if (c_mem.enc[ENC_L].double_encoder_on_off) 
 2792              		.loc 1 1043 0
 2793 00b8 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2794 00bc 8149     		ldr	r1, .L306
 2795 00be 1346     		mov	r3, r2
 2796 00c0 5B00     		lsls	r3, r3, #1
 2797 00c2 1344     		add	r3, r3, r2
 2798 00c4 1B01     		lsls	r3, r3, #4
 2799 00c6 0B44     		add	r3, r3, r1
 2800 00c8 03F5D873 		add	r3, r3, #432
 2801 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2802 00ce 002B     		cmp	r3, #0
 2803 00d0 1CD0     		beq	.L193
1044:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[2] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 2804              		.loc 1 1044 0
 2805 00d2 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2806 00d6 7D49     		ldr	r1, .L306+8
 2807 00d8 1346     		mov	r3, r2
 2808 00da 5B00     		lsls	r3, r3, #1
 2809 00dc 1344     		add	r3, r3, r2
 2810 00de 1B01     		lsls	r3, r3, #4
 2811 00e0 0B44     		add	r3, r3, r1
 2812 00e2 0833     		adds	r3, r3, #8
 2813 00e4 1968     		ldr	r1, [r3]
 2814 00e6 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2815 00ea 7648     		ldr	r0, .L306
 2816 00ec 1346     		mov	r3, r2
 2817 00ee 5B00     		lsls	r3, r3, #1
 2818 00f0 1344     		add	r3, r3, r2
 2819 00f2 1B01     		lsls	r3, r3, #4
 2820 00f4 0344     		add	r3, r3, r0
 2821 00f6 03F5DA73 		add	r3, r3, #436
 2822 00fa 93F90030 		ldrsb	r3, [r3]
 2823 00fe 03FB01F2 		mul	r2, r3, r1
 2824 0102 FB6C     		ldr	r3, [r7, #76]
 2825 0104 5B6B     		ldr	r3, [r3, #52]
 2826 0106 1344     		add	r3, r3, r2
 2827 0108 3B65     		str	r3, [r7, #80]
 2828 010a 1BE0     		b	.L194
 2829              	.L193:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 70


1045:..\src/interruptions.c ****             else
1046:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[1] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 2830              		.loc 1 1046 0
 2831 010c 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2832 0110 6E49     		ldr	r1, .L306+8
 2833 0112 1346     		mov	r3, r2
 2834 0114 5B00     		lsls	r3, r3, #1
 2835 0116 1344     		add	r3, r3, r2
 2836 0118 1B01     		lsls	r3, r3, #4
 2837 011a 0B44     		add	r3, r3, r1
 2838 011c 0433     		adds	r3, r3, #4
 2839 011e 1968     		ldr	r1, [r3]
 2840 0120 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2841 0124 6748     		ldr	r0, .L306
 2842 0126 1346     		mov	r3, r2
 2843 0128 5B00     		lsls	r3, r3, #1
 2844 012a 1344     		add	r3, r3, r2
 2845 012c 1B01     		lsls	r3, r3, #4
 2846 012e 0344     		add	r3, r3, r0
 2847 0130 03F5DA73 		add	r3, r3, #436
 2848 0134 93F90030 		ldrsb	r3, [r3]
 2849 0138 03FB01F2 		mul	r2, r3, r1
 2850 013c FB6C     		ldr	r3, [r7, #76]
 2851 013e 5B6B     		ldr	r3, [r3, #52]
 2852 0140 1344     		add	r3, r3, r2
 2853 0142 3B65     		str	r3, [r7, #80]
 2854              	.L194:
1047:..\src/interruptions.c ****             
1048:..\src/interruptions.c **** 
1049:..\src/interruptions.c ****             // Read handle and use it as reference for the motor
1050:..\src/interruptions.c ****             if (((handle_value - g_refOld[idx].pos) > MOT->max_step_pos) && (MOT->max_step_pos != 0
 2855              		.loc 1 1050 0
 2856 0144 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2857 0146 624A     		ldr	r2, .L306+12
 2858 0148 1B01     		lsls	r3, r3, #4
 2859 014a 1344     		add	r3, r3, r2
 2860 014c 1B68     		ldr	r3, [r3]
 2861 014e 3A6D     		ldr	r2, [r7, #80]
 2862 0150 D21A     		subs	r2, r2, r3
 2863 0152 FB6C     		ldr	r3, [r7, #76]
 2864 0154 1B6C     		ldr	r3, [r3, #64]
 2865 0156 9A42     		cmp	r2, r3
 2866 0158 11DD     		ble	.L195
 2867              		.loc 1 1050 0 is_stmt 0 discriminator 1
 2868 015a FB6C     		ldr	r3, [r7, #76]
 2869 015c 1B6C     		ldr	r3, [r3, #64]
 2870 015e 002B     		cmp	r3, #0
 2871 0160 0DD0     		beq	.L195
1051:..\src/interruptions.c ****                 g_ref[idx].pos += MOT->max_step_pos;
 2872              		.loc 1 1051 0 is_stmt 1
 2873 0162 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2874 0164 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2875 0166 5B49     		ldr	r1, .L306+16
 2876 0168 1201     		lsls	r2, r2, #4
 2877 016a 0A44     		add	r2, r2, r1
 2878 016c 1168     		ldr	r1, [r2]
 2879 016e FA6C     		ldr	r2, [r7, #76]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 71


 2880 0170 126C     		ldr	r2, [r2, #64]
 2881 0172 0A44     		add	r2, r2, r1
 2882 0174 5749     		ldr	r1, .L306+16
 2883 0176 1B01     		lsls	r3, r3, #4
 2884 0178 0B44     		add	r3, r3, r1
 2885 017a 1A60     		str	r2, [r3]
 2886 017c 23E0     		b	.L196
 2887              	.L195:
1052:..\src/interruptions.c ****             else {
1053:..\src/interruptions.c ****                 if (((handle_value - g_refOld[idx].pos) < MOT->max_step_neg) && (MOT->max_step_neg 
 2888              		.loc 1 1053 0
 2889 017e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2890 0180 534A     		ldr	r2, .L306+12
 2891 0182 1B01     		lsls	r3, r3, #4
 2892 0184 1344     		add	r3, r3, r2
 2893 0186 1B68     		ldr	r3, [r3]
 2894 0188 3A6D     		ldr	r2, [r7, #80]
 2895 018a D21A     		subs	r2, r2, r3
 2896 018c FB6C     		ldr	r3, [r7, #76]
 2897 018e DB6B     		ldr	r3, [r3, #60]
 2898 0190 9A42     		cmp	r2, r3
 2899 0192 11DA     		bge	.L197
 2900              		.loc 1 1053 0 is_stmt 0 discriminator 1
 2901 0194 FB6C     		ldr	r3, [r7, #76]
 2902 0196 DB6B     		ldr	r3, [r3, #60]
 2903 0198 002B     		cmp	r3, #0
 2904 019a 0DD0     		beq	.L197
1054:..\src/interruptions.c ****                     g_ref[idx].pos += MOT->max_step_neg;
 2905              		.loc 1 1054 0 is_stmt 1
 2906 019c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2907 019e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2908 01a0 4C49     		ldr	r1, .L306+16
 2909 01a2 1201     		lsls	r2, r2, #4
 2910 01a4 0A44     		add	r2, r2, r1
 2911 01a6 1168     		ldr	r1, [r2]
 2912 01a8 FA6C     		ldr	r2, [r7, #76]
 2913 01aa D26B     		ldr	r2, [r2, #60]
 2914 01ac 0A44     		add	r2, r2, r1
 2915 01ae 4949     		ldr	r1, .L306+16
 2916 01b0 1B01     		lsls	r3, r3, #4
 2917 01b2 0B44     		add	r3, r3, r1
 2918 01b4 1A60     		str	r2, [r3]
 2919 01b6 06E0     		b	.L196
 2920              	.L197:
1055:..\src/interruptions.c ****                 else
1056:..\src/interruptions.c ****                     g_ref[idx].pos = handle_value;
 2921              		.loc 1 1056 0
 2922 01b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2923 01ba 464A     		ldr	r2, .L306+16
 2924 01bc 1B01     		lsls	r3, r3, #4
 2925 01be 1344     		add	r3, r3, r2
 2926 01c0 3A6D     		ldr	r2, [r7, #80]
 2927 01c2 1A60     		str	r2, [r3]
1057:..\src/interruptions.c ****             }
1058:..\src/interruptions.c ****             break;
 2928              		.loc 1 1058 0
 2929 01c4 73E1     		b	.L198
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 72


 2930              	.L196:
 2931 01c6 72E1     		b	.L198
 2932              	.L189:
1059:..\src/interruptions.c ****             
1060:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
1061:..\src/interruptions.c ****             if (err_emg_1 > 0)
 2933              		.loc 1 1061 0
 2934 01c8 7B69     		ldr	r3, [r7, #20]
 2935 01ca 002B     		cmp	r3, #0
 2936 01cc 18DD     		ble	.L199
1062:..\src/interruptions.c ****                 g_ref[idx].pos = (err_emg_1 * g_mem.motor[idx].pos_lim_sup) / (1024 - c_mem.emg.emg
 2937              		.loc 1 1062 0
 2938 01ce F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2939 01d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2940 01d2 4148     		ldr	r0, .L306+20
 2941 01d4 1346     		mov	r3, r2
 2942 01d6 DB00     		lsls	r3, r3, #3
 2943 01d8 9B1A     		subs	r3, r3, r2
 2944 01da 1B01     		lsls	r3, r3, #4
 2945 01dc 0344     		add	r3, r3, r0
 2946 01de E833     		adds	r3, r3, #232
 2947 01e0 1B68     		ldr	r3, [r3]
 2948 01e2 7A69     		ldr	r2, [r7, #20]
 2949 01e4 02FB03F2 		mul	r2, r2, r3
 2950 01e8 364B     		ldr	r3, .L306
 2951 01ea B3F8F031 		ldrh	r3, [r3, #496]
 2952 01ee C3F58063 		rsb	r3, r3, #1024
 2953 01f2 92FBF3F2 		sdiv	r2, r2, r3
 2954 01f6 3748     		ldr	r0, .L306+16
 2955 01f8 0B01     		lsls	r3, r1, #4
 2956 01fa 0344     		add	r3, r3, r0
 2957 01fc 1A60     		str	r2, [r3]
1063:..\src/interruptions.c ****             else
1064:..\src/interruptions.c ****                 g_ref[idx].pos = 0;
1065:..\src/interruptions.c ****             break;
 2958              		.loc 1 1065 0
 2959 01fe 56E1     		b	.L198
 2960              	.L199:
1064:..\src/interruptions.c ****             break;
 2961              		.loc 1 1064 0
 2962 0200 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2963 0202 344A     		ldr	r2, .L306+16
 2964 0204 1B01     		lsls	r3, r3, #4
 2965 0206 1344     		add	r3, r3, r2
 2966 0208 0022     		movs	r2, #0
 2967 020a 1A60     		str	r2, [r3]
 2968              		.loc 1 1065 0
 2969 020c 4FE1     		b	.L198
 2970              	.L190:
1066:..\src/interruptions.c **** 
1067:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
1068:..\src/interruptions.c ****             g_ref[idx].pos = g_refOld[idx].pos;
 2971              		.loc 1 1068 0
 2972 020e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2973 0210 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2974 0212 2F49     		ldr	r1, .L306+12
 2975 0214 1201     		lsls	r2, r2, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 73


 2976 0216 0A44     		add	r2, r2, r1
 2977 0218 1268     		ldr	r2, [r2]
 2978 021a 2E49     		ldr	r1, .L306+16
 2979 021c 1B01     		lsls	r3, r3, #4
 2980 021e 0B44     		add	r3, r3, r1
 2981 0220 1A60     		str	r2, [r3]
1069:..\src/interruptions.c ****             if (err_emg_1 > 0) {
 2982              		.loc 1 1069 0
 2983 0222 7B69     		ldr	r3, [r7, #20]
 2984 0224 002B     		cmp	r3, #0
 2985 0226 19DD     		ble	.L201
1070:..\src/interruptions.c ****                 g_ref[idx].pos = g_refOld[idx].pos + (err_emg_1 * (int)g_mem.emg.emg_speed * 2) / (
 2986              		.loc 1 1070 0
 2987 0228 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2988 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2989 022c 2849     		ldr	r1, .L306+12
 2990 022e 1201     		lsls	r2, r2, #4
 2991 0230 0A44     		add	r2, r2, r1
 2992 0232 1168     		ldr	r1, [r2]
 2993 0234 284A     		ldr	r2, .L306+20
 2994 0236 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 2995 023a 1046     		mov	r0, r2
 2996 023c 7A69     		ldr	r2, [r7, #20]
 2997 023e 02FB00F2 		mul	r2, r2, r0
 2998 0242 5000     		lsls	r0, r2, #1
 2999 0244 1F4A     		ldr	r2, .L306
 3000 0246 B2F8F021 		ldrh	r2, [r2, #496]
 3001 024a C2F58062 		rsb	r2, r2, #1024
 3002 024e 90FBF2F2 		sdiv	r2, r0, r2
 3003 0252 0A44     		add	r2, r2, r1
 3004 0254 1F49     		ldr	r1, .L306+16
 3005 0256 1B01     		lsls	r3, r3, #4
 3006 0258 0B44     		add	r3, r3, r1
 3007 025a 1A60     		str	r2, [r3]
 3008              	.L201:
1071:..\src/interruptions.c ****             }
1072:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 3009              		.loc 1 1072 0
 3010 025c 3B69     		ldr	r3, [r7, #16]
 3011 025e 002B     		cmp	r3, #0
 3012 0260 40F32481 		ble	.L298
1073:..\src/interruptions.c ****                 g_ref[idx].pos = g_refOld[idx].pos - (err_emg_2 * (int)g_mem.emg.emg_speed * 2) / (
 3013              		.loc 1 1073 0
 3014 0264 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3015 0266 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3016 0268 1949     		ldr	r1, .L306+12
 3017 026a 1201     		lsls	r2, r2, #4
 3018 026c 0A44     		add	r2, r2, r1
 3019 026e 1168     		ldr	r1, [r2]
 3020 0270 194A     		ldr	r2, .L306+20
 3021 0272 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 3022 0276 1046     		mov	r0, r2
 3023 0278 3A69     		ldr	r2, [r7, #16]
 3024 027a 02FB00F2 		mul	r2, r2, r0
 3025 027e 5000     		lsls	r0, r2, #1
 3026 0280 104A     		ldr	r2, .L306
 3027 0282 B2F8F221 		ldrh	r2, [r2, #498]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 74


 3028 0286 C2F58062 		rsb	r2, r2, #1024
 3029 028a 90FBF2F2 		sdiv	r2, r0, r2
 3030 028e 8A1A     		subs	r2, r1, r2
 3031 0290 1049     		ldr	r1, .L306+16
 3032 0292 1B01     		lsls	r3, r3, #4
 3033 0294 0B44     		add	r3, r3, r1
 3034 0296 1A60     		str	r2, [r3]
1074:..\src/interruptions.c ****             }
1075:..\src/interruptions.c ****             break;
 3035              		.loc 1 1075 0
 3036 0298 08E1     		b	.L298
 3037              	.L191:
1076:..\src/interruptions.c **** 
1077:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
1078:..\src/interruptions.c ****             g_ref[idx].pos = g_refOld[idx].pos;
 3038              		.loc 1 1078 0
 3039 029a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3040 029c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3041 029e 0C49     		ldr	r1, .L306+12
 3042 02a0 1201     		lsls	r2, r2, #4
 3043 02a2 0A44     		add	r2, r2, r1
 3044 02a4 1268     		ldr	r2, [r2]
 3045 02a6 0B49     		ldr	r1, .L306+16
 3046 02a8 1B01     		lsls	r3, r3, #4
 3047 02aa 0B44     		add	r3, r3, r1
 3048 02ac 1A60     		str	r2, [r3]
1079:..\src/interruptions.c ****             switch (current_emg[idx]) {
 3049              		.loc 1 1079 0
 3050 02ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3051 02b0 0A4A     		ldr	r2, .L306+24
 3052 02b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3053 02b4 012B     		cmp	r3, #1
 3054 02b6 2BD0     		beq	.L204
 3055 02b8 022B     		cmp	r3, #2
 3056 02ba 4CD0     		beq	.L205
 3057 02bc 002B     		cmp	r3, #0
 3058 02be 0FD0     		beq	.L206
1080:..\src/interruptions.c ****                 case 0:
1081:..\src/interruptions.c ****                     // Look for the first EMG passing the threshold
1082:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
1083:..\src/interruptions.c ****                         current_emg[idx] = 1;
1084:..\src/interruptions.c ****                         break;
1085:..\src/interruptions.c ****                     }
1086:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
1087:..\src/interruptions.c ****                         current_emg[idx] = 2;
1088:..\src/interruptions.c ****                         break;
1089:..\src/interruptions.c ****                     }
1090:..\src/interruptions.c ****                     break;
1091:..\src/interruptions.c **** 
1092:..\src/interruptions.c ****                 case 1:
1093:..\src/interruptions.c ****                     // EMG 1 is first
1094:..\src/interruptions.c ****                     if (err_emg_1 < 0) {
1095:..\src/interruptions.c ****                         current_emg[idx] = 0;
1096:..\src/interruptions.c ****                         break;
1097:..\src/interruptions.c ****                     }
1098:..\src/interruptions.c ****                     g_ref[idx].pos = g_refOld[idx].pos + (err_emg_1 * g_mem.emg.emg_speed << 2) / (
1099:..\src/interruptions.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 75


1100:..\src/interruptions.c **** 
1101:..\src/interruptions.c ****                 case 2:
1102:..\src/interruptions.c ****                     // EMG 2 is first
1103:..\src/interruptions.c ****                     if (err_emg_2 < 0) {
1104:..\src/interruptions.c ****                         current_emg[idx] = 0;
1105:..\src/interruptions.c ****                         break;
1106:..\src/interruptions.c ****                     }
1107:..\src/interruptions.c ****                     g_ref[idx].pos = g_refOld[idx].pos - (err_emg_2 * g_mem.emg.emg_speed << 2) / (
1108:..\src/interruptions.c ****                     break;
1109:..\src/interruptions.c **** 
1110:..\src/interruptions.c ****                 default:
1111:..\src/interruptions.c ****                     break;
 3059              		.loc 1 1111 0
 3060 02c0 6DE0     		b	.L208
 3061              	.L307:
 3062 02c2 00BF     		.align	2
 3063              	.L306:
 3064 02c4 00000000 		.word	c_mem
 3065 02c8 00000000 		.word	g_emg_meas
 3066 02cc 00000000 		.word	g_meas
 3067 02d0 00000000 		.word	g_refOld
 3068 02d4 00000000 		.word	g_ref
 3069 02d8 00000000 		.word	g_mem
 3070 02dc AC000000 		.word	current_emg.10468
 3071              	.L206:
1082:..\src/interruptions.c ****                         current_emg[idx] = 1;
 3072              		.loc 1 1082 0
 3073 02e0 7B69     		ldr	r3, [r7, #20]
 3074 02e2 002B     		cmp	r3, #0
 3075 02e4 08DD     		ble	.L207
1082:..\src/interruptions.c ****                         current_emg[idx] = 1;
 3076              		.loc 1 1082 0 is_stmt 0 discriminator 1
 3077 02e6 7A69     		ldr	r2, [r7, #20]
 3078 02e8 3B69     		ldr	r3, [r7, #16]
 3079 02ea 9A42     		cmp	r2, r3
 3080 02ec 04DD     		ble	.L207
1083:..\src/interruptions.c ****                         break;
 3081              		.loc 1 1083 0 is_stmt 1
 3082 02ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3083 02f0 A14A     		ldr	r2, .L308
 3084 02f2 0121     		movs	r1, #1
 3085 02f4 D154     		strb	r1, [r2, r3]
1084:..\src/interruptions.c ****                     }
 3086              		.loc 1 1084 0
 3087 02f6 52E0     		b	.L208
 3088              	.L207:
1086:..\src/interruptions.c ****                         current_emg[idx] = 2;
 3089              		.loc 1 1086 0
 3090 02f8 3B69     		ldr	r3, [r7, #16]
 3091 02fa 002B     		cmp	r3, #0
 3092 02fc 4EDD     		ble	.L299
1086:..\src/interruptions.c ****                         current_emg[idx] = 2;
 3093              		.loc 1 1086 0 is_stmt 0 discriminator 1
 3094 02fe 3A69     		ldr	r2, [r7, #16]
 3095 0300 7B69     		ldr	r3, [r7, #20]
 3096 0302 9A42     		cmp	r2, r3
 3097 0304 4ADD     		ble	.L299
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 76


1087:..\src/interruptions.c ****                         break;
 3098              		.loc 1 1087 0 is_stmt 1
 3099 0306 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3100 0308 9B4A     		ldr	r2, .L308
 3101 030a 0221     		movs	r1, #2
 3102 030c D154     		strb	r1, [r2, r3]
1088:..\src/interruptions.c ****                     }
 3103              		.loc 1 1088 0
 3104 030e 46E0     		b	.L208
 3105              	.L204:
1094:..\src/interruptions.c ****                         current_emg[idx] = 0;
 3106              		.loc 1 1094 0
 3107 0310 7B69     		ldr	r3, [r7, #20]
 3108 0312 002B     		cmp	r3, #0
 3109 0314 04DA     		bge	.L210
1095:..\src/interruptions.c ****                         break;
 3110              		.loc 1 1095 0
 3111 0316 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3112 0318 974A     		ldr	r2, .L308
 3113 031a 0021     		movs	r1, #0
 3114 031c D154     		strb	r1, [r2, r3]
1096:..\src/interruptions.c ****                     }
 3115              		.loc 1 1096 0
 3116 031e 3EE0     		b	.L208
 3117              	.L210:
1098:..\src/interruptions.c ****                     break;
 3118              		.loc 1 1098 0
 3119 0320 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3120 0322 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3121 0324 9549     		ldr	r1, .L308+4
 3122 0326 1201     		lsls	r2, r2, #4
 3123 0328 0A44     		add	r2, r2, r1
 3124 032a 1168     		ldr	r1, [r2]
 3125 032c 944A     		ldr	r2, .L308+8
 3126 032e 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 3127 0332 1046     		mov	r0, r2
 3128 0334 7A69     		ldr	r2, [r7, #20]
 3129 0336 02FB00F2 		mul	r2, r2, r0
 3130 033a 9000     		lsls	r0, r2, #2
 3131 033c 914A     		ldr	r2, .L308+12
 3132 033e B2F8F021 		ldrh	r2, [r2, #496]
 3133 0342 C2F58062 		rsb	r2, r2, #1024
 3134 0346 90FBF2F2 		sdiv	r2, r0, r2
 3135 034a 0A44     		add	r2, r2, r1
 3136 034c 8E49     		ldr	r1, .L308+16
 3137 034e 1B01     		lsls	r3, r3, #4
 3138 0350 0B44     		add	r3, r3, r1
 3139 0352 1A60     		str	r2, [r3]
1099:..\src/interruptions.c **** 
 3140              		.loc 1 1099 0
 3141 0354 23E0     		b	.L208
 3142              	.L205:
1103:..\src/interruptions.c ****                         current_emg[idx] = 0;
 3143              		.loc 1 1103 0
 3144 0356 3B69     		ldr	r3, [r7, #16]
 3145 0358 002B     		cmp	r3, #0
 3146 035a 04DA     		bge	.L211
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 77


1104:..\src/interruptions.c ****                         break;
 3147              		.loc 1 1104 0
 3148 035c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3149 035e 864A     		ldr	r2, .L308
 3150 0360 0021     		movs	r1, #0
 3151 0362 D154     		strb	r1, [r2, r3]
1105:..\src/interruptions.c ****                     }
 3152              		.loc 1 1105 0
 3153 0364 1BE0     		b	.L208
 3154              	.L211:
1107:..\src/interruptions.c ****                     break;
 3155              		.loc 1 1107 0
 3156 0366 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3157 0368 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3158 036a 8449     		ldr	r1, .L308+4
 3159 036c 1201     		lsls	r2, r2, #4
 3160 036e 0A44     		add	r2, r2, r1
 3161 0370 1168     		ldr	r1, [r2]
 3162 0372 834A     		ldr	r2, .L308+8
 3163 0374 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 3164 0378 1046     		mov	r0, r2
 3165 037a 3A69     		ldr	r2, [r7, #16]
 3166 037c 02FB00F2 		mul	r2, r2, r0
 3167 0380 9000     		lsls	r0, r2, #2
 3168 0382 804A     		ldr	r2, .L308+12
 3169 0384 B2F8F221 		ldrh	r2, [r2, #498]
 3170 0388 C2F58062 		rsb	r2, r2, #1024
 3171 038c 90FBF2F2 		sdiv	r2, r0, r2
 3172 0390 8A1A     		subs	r2, r1, r2
 3173 0392 7D49     		ldr	r1, .L308+16
 3174 0394 1B01     		lsls	r3, r3, #4
 3175 0396 0B44     		add	r3, r3, r1
 3176 0398 1A60     		str	r2, [r3]
1108:..\src/interruptions.c **** 
 3177              		.loc 1 1108 0
 3178 039a 00E0     		b	.L208
 3179              	.L299:
1090:..\src/interruptions.c **** 
 3180              		.loc 1 1090 0
 3181 039c 00BF     		nop
 3182              	.L208:
1112:..\src/interruptions.c ****             }
1113:..\src/interruptions.c ****             break;
 3183              		.loc 1 1113 0 discriminator 1
 3184 039e 86E0     		b	.L198
 3185              	.L192:
1114:..\src/interruptions.c **** 
1115:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
1116:..\src/interruptions.c ****             g_ref[idx].pos = g_refOld[idx].pos;
 3186              		.loc 1 1116 0
 3187 03a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3188 03a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3189 03a4 7549     		ldr	r1, .L308+4
 3190 03a6 1201     		lsls	r2, r2, #4
 3191 03a8 0A44     		add	r2, r2, r1
 3192 03aa 1268     		ldr	r2, [r2]
 3193 03ac 7649     		ldr	r1, .L308+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 78


 3194 03ae 1B01     		lsls	r3, r3, #4
 3195 03b0 0B44     		add	r3, r3, r1
 3196 03b2 1A60     		str	r2, [r3]
1117:..\src/interruptions.c ****             switch (current_emg[idx]) {
 3197              		.loc 1 1117 0
 3198 03b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3199 03b6 704A     		ldr	r2, .L308
 3200 03b8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3201 03ba 012B     		cmp	r3, #1
 3202 03bc 1CD0     		beq	.L213
 3203 03be 022B     		cmp	r3, #2
 3204 03c0 43D0     		beq	.L214
 3205 03c2 002B     		cmp	r3, #0
 3206 03c4 00D0     		beq	.L215
1118:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
1119:..\src/interruptions.c ****                 case 0:
1120:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
1121:..\src/interruptions.c ****                         current_emg[idx] = 1;
1122:..\src/interruptions.c ****                         break;
1123:..\src/interruptions.c ****                     }
1124:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
1125:..\src/interruptions.c ****                         current_emg[idx] = 2;
1126:..\src/interruptions.c ****                         break;
1127:..\src/interruptions.c ****                     }
1128:..\src/interruptions.c ****                     break;
1129:..\src/interruptions.c **** 
1130:..\src/interruptions.c ****                 // EMG 1 is first
1131:..\src/interruptions.c ****                 case 1:
1132:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
1133:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
1134:..\src/interruptions.c ****                         current_emg[idx] = 0;
1135:..\src/interruptions.c ****                         break;
1136:..\src/interruptions.c ****                     }
1137:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
1138:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
1139:..\src/interruptions.c ****                         g_ref[idx].pos = g_refOld[idx].pos + (err_emg_1 * g_mem.emg.emg_speed << 2)
1140:..\src/interruptions.c ****                     
1141:..\src/interruptions.c ****                     break;
1142:..\src/interruptions.c **** 
1143:..\src/interruptions.c ****                 // EMG 2 is first
1144:..\src/interruptions.c ****                 case 2:
1145:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
1146:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
1147:..\src/interruptions.c ****                         current_emg[idx] = 0;
1148:..\src/interruptions.c ****                         break;
1149:..\src/interruptions.c ****                     }
1150:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
1151:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
1152:..\src/interruptions.c ****                         g_ref[idx].pos = g_refOld[idx].pos - (err_emg_2 * c_mem.emg.emg_speed << 2)
1153:..\src/interruptions.c ****                     }
1154:..\src/interruptions.c ****                     break;
1155:..\src/interruptions.c **** 
1156:..\src/interruptions.c ****                 default:
1157:..\src/interruptions.c ****                     break;
 3207              		.loc 1 1157 0
 3208 03c6 6EE0     		b	.L217
 3209              	.L215:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 79


1120:..\src/interruptions.c ****                         current_emg[idx] = 1;
 3210              		.loc 1 1120 0
 3211 03c8 7B69     		ldr	r3, [r7, #20]
 3212 03ca 002B     		cmp	r3, #0
 3213 03cc 08DD     		ble	.L216
1120:..\src/interruptions.c ****                         current_emg[idx] = 1;
 3214              		.loc 1 1120 0 is_stmt 0 discriminator 1
 3215 03ce 7A69     		ldr	r2, [r7, #20]
 3216 03d0 3B69     		ldr	r3, [r7, #16]
 3217 03d2 9A42     		cmp	r2, r3
 3218 03d4 04DD     		ble	.L216
1121:..\src/interruptions.c ****                         break;
 3219              		.loc 1 1121 0 is_stmt 1
 3220 03d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3221 03d8 674A     		ldr	r2, .L308
 3222 03da 0121     		movs	r1, #1
 3223 03dc D154     		strb	r1, [r2, r3]
1122:..\src/interruptions.c ****                     }
 3224              		.loc 1 1122 0
 3225 03de 62E0     		b	.L217
 3226              	.L216:
1124:..\src/interruptions.c ****                         current_emg[idx] = 2;
 3227              		.loc 1 1124 0
 3228 03e0 3B69     		ldr	r3, [r7, #16]
 3229 03e2 002B     		cmp	r3, #0
 3230 03e4 5ADD     		ble	.L300
1124:..\src/interruptions.c ****                         current_emg[idx] = 2;
 3231              		.loc 1 1124 0 is_stmt 0 discriminator 1
 3232 03e6 3A69     		ldr	r2, [r7, #16]
 3233 03e8 7B69     		ldr	r3, [r7, #20]
 3234 03ea 9A42     		cmp	r2, r3
 3235 03ec 56DD     		ble	.L300
1125:..\src/interruptions.c ****                         break;
 3236              		.loc 1 1125 0 is_stmt 1
 3237 03ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3238 03f0 614A     		ldr	r2, .L308
 3239 03f2 0221     		movs	r1, #2
 3240 03f4 D154     		strb	r1, [r2, r3]
1126:..\src/interruptions.c ****                     }
 3241              		.loc 1 1126 0
 3242 03f6 56E0     		b	.L217
 3243              	.L213:
1133:..\src/interruptions.c ****                         current_emg[idx] = 0;
 3244              		.loc 1 1133 0
 3245 03f8 7B69     		ldr	r3, [r7, #20]
 3246 03fa 002B     		cmp	r3, #0
 3247 03fc 07DA     		bge	.L219
1133:..\src/interruptions.c ****                         current_emg[idx] = 0;
 3248              		.loc 1 1133 0 is_stmt 0 discriminator 1
 3249 03fe 3B69     		ldr	r3, [r7, #16]
 3250 0400 002B     		cmp	r3, #0
 3251 0402 04DA     		bge	.L219
1134:..\src/interruptions.c ****                         break;
 3252              		.loc 1 1134 0 is_stmt 1
 3253 0404 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3254 0406 5C4A     		ldr	r2, .L308
 3255 0408 0021     		movs	r1, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 80


 3256 040a D154     		strb	r1, [r2, r3]
1135:..\src/interruptions.c ****                     }
 3257              		.loc 1 1135 0
 3258 040c 4BE0     		b	.L217
 3259              	.L219:
1138:..\src/interruptions.c ****                         g_ref[idx].pos = g_refOld[idx].pos + (err_emg_1 * g_mem.emg.emg_speed << 2)
 3260              		.loc 1 1138 0
 3261 040e 7B69     		ldr	r3, [r7, #20]
 3262 0410 002B     		cmp	r3, #0
 3263 0412 45DD     		ble	.L301
1139:..\src/interruptions.c ****                     
 3264              		.loc 1 1139 0
 3265 0414 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3266 0416 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3267 0418 5849     		ldr	r1, .L308+4
 3268 041a 1201     		lsls	r2, r2, #4
 3269 041c 0A44     		add	r2, r2, r1
 3270 041e 1168     		ldr	r1, [r2]
 3271 0420 574A     		ldr	r2, .L308+8
 3272 0422 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 3273 0426 1046     		mov	r0, r2
 3274 0428 7A69     		ldr	r2, [r7, #20]
 3275 042a 02FB00F2 		mul	r2, r2, r0
 3276 042e 9000     		lsls	r0, r2, #2
 3277 0430 544A     		ldr	r2, .L308+12
 3278 0432 B2F8F021 		ldrh	r2, [r2, #496]
 3279 0436 C2F58062 		rsb	r2, r2, #1024
 3280 043a 90FBF2F2 		sdiv	r2, r0, r2
 3281 043e 0A44     		add	r2, r2, r1
 3282 0440 5149     		ldr	r1, .L308+16
 3283 0442 1B01     		lsls	r3, r3, #4
 3284 0444 0B44     		add	r3, r3, r1
 3285 0446 1A60     		str	r2, [r3]
1141:..\src/interruptions.c **** 
 3286              		.loc 1 1141 0
 3287 0448 2AE0     		b	.L301
 3288              	.L214:
1146:..\src/interruptions.c ****                         current_emg[idx] = 0;
 3289              		.loc 1 1146 0
 3290 044a 7B69     		ldr	r3, [r7, #20]
 3291 044c 002B     		cmp	r3, #0
 3292 044e 07DA     		bge	.L221
1146:..\src/interruptions.c ****                         current_emg[idx] = 0;
 3293              		.loc 1 1146 0 is_stmt 0 discriminator 1
 3294 0450 3B69     		ldr	r3, [r7, #16]
 3295 0452 002B     		cmp	r3, #0
 3296 0454 04DA     		bge	.L221
1147:..\src/interruptions.c ****                         break;
 3297              		.loc 1 1147 0 is_stmt 1
 3298 0456 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3299 0458 474A     		ldr	r2, .L308
 3300 045a 0021     		movs	r1, #0
 3301 045c D154     		strb	r1, [r2, r3]
1148:..\src/interruptions.c ****                     }
 3302              		.loc 1 1148 0
 3303 045e 22E0     		b	.L217
 3304              	.L221:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 81


1151:..\src/interruptions.c ****                         g_ref[idx].pos = g_refOld[idx].pos - (err_emg_2 * c_mem.emg.emg_speed << 2)
 3305              		.loc 1 1151 0
 3306 0460 3B69     		ldr	r3, [r7, #16]
 3307 0462 002B     		cmp	r3, #0
 3308 0464 1EDD     		ble	.L302
1152:..\src/interruptions.c ****                     }
 3309              		.loc 1 1152 0
 3310 0466 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3311 0468 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3312 046a 4449     		ldr	r1, .L308+4
 3313 046c 1201     		lsls	r2, r2, #4
 3314 046e 0A44     		add	r2, r2, r1
 3315 0470 1168     		ldr	r1, [r2]
 3316 0472 444A     		ldr	r2, .L308+12
 3317 0474 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 3318 0478 1046     		mov	r0, r2
 3319 047a 3A69     		ldr	r2, [r7, #16]
 3320 047c 02FB00F2 		mul	r2, r2, r0
 3321 0480 9000     		lsls	r0, r2, #2
 3322 0482 404A     		ldr	r2, .L308+12
 3323 0484 B2F8F221 		ldrh	r2, [r2, #498]
 3324 0488 C2F58062 		rsb	r2, r2, #1024
 3325 048c 90FBF2F2 		sdiv	r2, r0, r2
 3326 0490 8A1A     		subs	r2, r1, r2
 3327 0492 3D49     		ldr	r1, .L308+16
 3328 0494 1B01     		lsls	r3, r3, #4
 3329 0496 0B44     		add	r3, r3, r1
 3330 0498 1A60     		str	r2, [r3]
1154:..\src/interruptions.c **** 
 3331              		.loc 1 1154 0
 3332 049a 03E0     		b	.L302
 3333              	.L300:
1128:..\src/interruptions.c **** 
 3334              		.loc 1 1128 0
 3335 049c 00BF     		nop
 3336 049e 06E0     		b	.L198
 3337              	.L301:
1141:..\src/interruptions.c **** 
 3338              		.loc 1 1141 0
 3339 04a0 00BF     		nop
 3340 04a2 04E0     		b	.L198
 3341              	.L302:
1154:..\src/interruptions.c **** 
 3342              		.loc 1 1154 0
 3343 04a4 00BF     		nop
 3344              	.L217:
1158:..\src/interruptions.c ****             }
1159:..\src/interruptions.c ****             break;
 3345              		.loc 1 1159 0 discriminator 3
 3346 04a6 02E0     		b	.L198
 3347              	.L297:
1160:..\src/interruptions.c **** 
1161:..\src/interruptions.c ****         default:
1162:..\src/interruptions.c ****             break;
 3348              		.loc 1 1162 0
 3349 04a8 00BF     		nop
 3350 04aa 00E0     		b	.L198
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 82


 3351              	.L298:
1075:..\src/interruptions.c **** 
 3352              		.loc 1 1075 0
 3353 04ac 00BF     		nop
 3354              	.L198:
1163:..\src/interruptions.c ****     }
1164:..\src/interruptions.c **** 
1165:..\src/interruptions.c ****     // Position limit saturation
1166:..\src/interruptions.c ****     if (MOT->pos_lim_flag) {
 3355              		.loc 1 1166 0
 3356 04ae FB6C     		ldr	r3, [r7, #76]
 3357 04b0 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 3358 04b4 002B     		cmp	r3, #0
 3359 04b6 1FD0     		beq	.L223
1167:..\src/interruptions.c ****         if (g_ref[idx].pos < MOT->pos_lim_inf) 
 3360              		.loc 1 1167 0
 3361 04b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3362 04ba 334A     		ldr	r2, .L308+16
 3363 04bc 1B01     		lsls	r3, r3, #4
 3364 04be 1344     		add	r3, r3, r2
 3365 04c0 1A68     		ldr	r2, [r3]
 3366 04c2 FB6C     		ldr	r3, [r7, #76]
 3367 04c4 5B6B     		ldr	r3, [r3, #52]
 3368 04c6 9A42     		cmp	r2, r3
 3369 04c8 06DA     		bge	.L224
1168:..\src/interruptions.c ****             g_ref[idx].pos = MOT->pos_lim_inf;
 3370              		.loc 1 1168 0
 3371 04ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3372 04cc FA6C     		ldr	r2, [r7, #76]
 3373 04ce 526B     		ldr	r2, [r2, #52]
 3374 04d0 2D49     		ldr	r1, .L308+16
 3375 04d2 1B01     		lsls	r3, r3, #4
 3376 04d4 0B44     		add	r3, r3, r1
 3377 04d6 1A60     		str	r2, [r3]
 3378              	.L224:
1169:..\src/interruptions.c ****         if (g_ref[idx].pos > MOT->pos_lim_sup) 
 3379              		.loc 1 1169 0
 3380 04d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3381 04da 2B4A     		ldr	r2, .L308+16
 3382 04dc 1B01     		lsls	r3, r3, #4
 3383 04de 1344     		add	r3, r3, r2
 3384 04e0 1A68     		ldr	r2, [r3]
 3385 04e2 FB6C     		ldr	r3, [r7, #76]
 3386 04e4 9B6B     		ldr	r3, [r3, #56]
 3387 04e6 9A42     		cmp	r2, r3
 3388 04e8 06DD     		ble	.L223
1170:..\src/interruptions.c ****             g_ref[idx].pos = MOT->pos_lim_sup;
 3389              		.loc 1 1170 0
 3390 04ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3391 04ec FA6C     		ldr	r2, [r7, #76]
 3392 04ee 926B     		ldr	r2, [r2, #56]
 3393 04f0 2549     		ldr	r1, .L308+16
 3394 04f2 1B01     		lsls	r3, r3, #4
 3395 04f4 0B44     		add	r3, r3, r1
 3396 04f6 1A60     		str	r2, [r3]
 3397              	.L223:
1171:..\src/interruptions.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 83


1172:..\src/interruptions.c ****     
1173:..\src/interruptions.c ****     // SAFETY
1174:..\src/interruptions.c ****     if (battery_low_SoC == 1) {
 3398              		.loc 1 1174 0
 3399 04f8 244B     		ldr	r3, .L308+20
 3400 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3401 04fc 012B     		cmp	r3, #1
 3402 04fe 05D1     		bne	.L225
1175:..\src/interruptions.c ****         //Reopen the terminal device before disabling motor
1176:..\src/interruptions.c ****         g_ref[idx].pos = 0;
 3403              		.loc 1 1176 0
 3404 0500 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3405 0502 214A     		ldr	r2, .L308+16
 3406 0504 1B01     		lsls	r3, r3, #4
 3407 0506 1344     		add	r3, r3, r2
 3408 0508 0022     		movs	r2, #0
 3409 050a 1A60     		str	r2, [r3]
 3410              	.L225:
1177:..\src/interruptions.c ****     }        
1178:..\src/interruptions.c **** 
1179:..\src/interruptions.c ****     switch(MOT->control_mode) {
 3411              		.loc 1 1179 0
 3412 050c FB6C     		ldr	r3, [r7, #76]
 3413 050e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3414 0512 032B     		cmp	r3, #3
 3415 0514 00F25282 		bhi	.L226
 3416 0518 01A2     		adr	r2, .L228
 3417 051a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3418 051e 00BF     		.p2align 2
 3419              	.L228:
 3420 0520 39070000 		.word	.L227+1
 3421 0524 75090000 		.word	.L229+1
 3422 0528 41080000 		.word	.L230+1
 3423 052c 31050000 		.word	.L231+1
 3424              		.p2align 1
 3425              	.L231:
1180:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
1181:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
1182:..\src/interruptions.c ****             pos_error = g_ref[0].pos - g_meas[ENC_L].pos[0];
 3426              		.loc 1 1182 0
 3427 0530 154B     		ldr	r3, .L308+16
 3428 0532 1968     		ldr	r1, [r3]
 3429 0534 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 3430 0538 1548     		ldr	r0, .L308+24
 3431 053a 1346     		mov	r3, r2
 3432 053c 5B00     		lsls	r3, r3, #1
 3433 053e 1344     		add	r3, r3, r2
 3434 0540 1B01     		lsls	r3, r3, #4
 3435 0542 0344     		add	r3, r3, r0
 3436 0544 1B68     		ldr	r3, [r3]
 3437 0546 CB1A     		subs	r3, r1, r3
 3438 0548 BB65     		str	r3, [r7, #88]
1183:..\src/interruptions.c **** 
1184:..\src/interruptions.c ****             pos_error_sum[idx] += pos_error;
 3439              		.loc 1 1184 0
 3440 054a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3441 054c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 84


 3442 054e 1149     		ldr	r1, .L308+28
 3443 0550 51F82210 		ldr	r1, [r1, r2, lsl #2]
 3444 0554 BA6D     		ldr	r2, [r7, #88]
 3445 0556 0A44     		add	r2, r2, r1
 3446 0558 0E49     		ldr	r1, .L308+28
 3447 055a 41F82320 		str	r2, [r1, r3, lsl #2]
1185:..\src/interruptions.c **** 
1186:..\src/interruptions.c ****             // error_sum saturation
1187:..\src/interruptions.c ****             if (pos_error_sum[idx] > POS_INTEGRAL_SAT_LIMIT)
 3448              		.loc 1 1187 0
 3449 055e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3450 0560 0C4A     		ldr	r2, .L308+28
 3451 0562 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3452 0566 0C4A     		ldr	r2, .L308+32
 3453 0568 9342     		cmp	r3, r2
 3454 056a 17DD     		ble	.L232
1188:..\src/interruptions.c ****                 pos_error_sum[idx] = POS_INTEGRAL_SAT_LIMIT;
 3455              		.loc 1 1188 0
 3456 056c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3457 056e 094A     		ldr	r2, .L308+28
 3458 0570 0949     		ldr	r1, .L308+32
 3459 0572 42F82310 		str	r1, [r2, r3, lsl #2]
 3460 0576 1DE0     		b	.L233
 3461              	.L309:
 3462              		.align	2
 3463              	.L308:
 3464 0578 AC000000 		.word	current_emg.10468
 3465 057c 00000000 		.word	g_refOld
 3466 0580 00000000 		.word	g_mem
 3467 0584 00000000 		.word	c_mem
 3468 0588 00000000 		.word	g_ref
 3469 058c 00000000 		.word	battery_low_SoC
 3470 0590 00000000 		.word	g_meas
 3471 0594 B0000000 		.word	pos_error_sum.10461
 3472 0598 80F0FA02 		.word	50000000
 3473              	.L232:
1189:..\src/interruptions.c ****             else {
1190:..\src/interruptions.c ****                 if (pos_error_sum[idx] < -POS_INTEGRAL_SAT_LIMIT) 
 3474              		.loc 1 1190 0
 3475 059c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3476 059e 9D4A     		ldr	r2, .L310
 3477 05a0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3478 05a4 9C4A     		ldr	r2, .L310+4
 3479 05a6 9342     		cmp	r3, r2
 3480 05a8 04DA     		bge	.L233
1191:..\src/interruptions.c ****                     pos_error_sum[idx] = -POS_INTEGRAL_SAT_LIMIT;
 3481              		.loc 1 1191 0
 3482 05aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3483 05ac 994A     		ldr	r2, .L310
 3484 05ae 9A49     		ldr	r1, .L310+4
 3485 05b0 42F82310 		str	r1, [r2, r3, lsl #2]
 3486              	.L233:
1192:..\src/interruptions.c ****             }
1193:..\src/interruptions.c ****             
1194:..\src/interruptions.c ****             // ------ position PID control ------
1195:..\src/interruptions.c **** 
1196:..\src/interruptions.c ****             i_ref = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 85


 3487              		.loc 1 1196 0
 3488 05b4 0023     		movs	r3, #0
 3489 05b6 7B65     		str	r3, [r7, #84]
1197:..\src/interruptions.c ****             
1198:..\src/interruptions.c ****             // Proportional
1199:..\src/interruptions.c ****             if (k_p_dl != 0)
 3490              		.loc 1 1199 0
 3491 05b8 FB6A     		ldr	r3, [r7, #44]
 3492 05ba 002B     		cmp	r3, #0
 3493 05bc 07D0     		beq	.L234
1200:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 3494              		.loc 1 1200 0
 3495 05be FB6A     		ldr	r3, [r7, #44]
 3496 05c0 BA6D     		ldr	r2, [r7, #88]
 3497 05c2 02FB03F3 		mul	r3, r2, r3
 3498 05c6 1B14     		asrs	r3, r3, #16
 3499 05c8 7A6D     		ldr	r2, [r7, #84]
 3500 05ca 1344     		add	r3, r3, r2
 3501 05cc 7B65     		str	r3, [r7, #84]
 3502              	.L234:
1201:..\src/interruptions.c **** 
1202:..\src/interruptions.c ****             // Integral
1203:..\src/interruptions.c ****             if (k_i_dl != 0)
 3503              		.loc 1 1203 0
 3504 05ce BB6A     		ldr	r3, [r7, #40]
 3505 05d0 002B     		cmp	r3, #0
 3506 05d2 0AD0     		beq	.L235
1204:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum[idx]) >> 16;
 3507              		.loc 1 1204 0
 3508 05d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3509 05d6 8F4A     		ldr	r2, .L310
 3510 05d8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3511 05dc BA6A     		ldr	r2, [r7, #40]
 3512 05de 02FB03F3 		mul	r3, r2, r3
 3513 05e2 1B14     		asrs	r3, r3, #16
 3514 05e4 7A6D     		ldr	r2, [r7, #84]
 3515 05e6 1344     		add	r3, r3, r2
 3516 05e8 7B65     		str	r3, [r7, #84]
 3517              	.L235:
1205:..\src/interruptions.c **** 
1206:..\src/interruptions.c ****             // Derivative
1207:..\src/interruptions.c ****             if (k_d_dl != 0)
 3518              		.loc 1 1207 0
 3519 05ea 7B6A     		ldr	r3, [r7, #36]
 3520 05ec 002B     		cmp	r3, #0
 3521 05ee 0CD0     		beq	.L236
1208:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err[idx])) >> 16;
 3522              		.loc 1 1208 0
 3523 05f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3524 05f2 8A4A     		ldr	r2, .L310+8
 3525 05f4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3526 05f8 BA6D     		ldr	r2, [r7, #88]
 3527 05fa D31A     		subs	r3, r2, r3
 3528 05fc 7A6A     		ldr	r2, [r7, #36]
 3529 05fe 02FB03F3 		mul	r3, r2, r3
 3530 0602 1B14     		asrs	r3, r3, #16
 3531 0604 7A6D     		ldr	r2, [r7, #84]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 86


 3532 0606 1344     		add	r3, r3, r2
 3533 0608 7B65     		str	r3, [r7, #84]
 3534              	.L236:
1209:..\src/interruptions.c ****                         
1210:..\src/interruptions.c ****             // Update previous position
1211:..\src/interruptions.c ****             prev_pos_err[idx] = pos_error;
 3535              		.loc 1 1211 0
 3536 060a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3537 060c 8349     		ldr	r1, .L310+8
 3538 060e BA6D     		ldr	r2, [r7, #88]
 3539 0610 41F82320 		str	r2, [r1, r3, lsl #2]
1212:..\src/interruptions.c **** 
1213:..\src/interruptions.c ****             // motor direction depends on i_ref
1214:..\src/interruptions.c ****             if (i_ref >= 0)
 3540              		.loc 1 1214 0
 3541 0614 7B6D     		ldr	r3, [r7, #84]
 3542 0616 002B     		cmp	r3, #0
 3543 0618 04DB     		blt	.L237
1215:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 3544              		.loc 1 1215 0
 3545 061a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3546 061c 804A     		ldr	r2, .L310+12
 3547 061e 0121     		movs	r1, #1
 3548 0620 D154     		strb	r1, [r2, r3]
 3549 0622 03E0     		b	.L238
 3550              	.L237:
1216:..\src/interruptions.c ****             else
1217:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
 3551              		.loc 1 1217 0
 3552 0624 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3553 0626 7E4A     		ldr	r2, .L310+12
 3554 0628 0021     		movs	r1, #0
 3555 062a D154     		strb	r1, [r2, r3]
 3556              	.L238:
1218:..\src/interruptions.c **** 
1219:..\src/interruptions.c ****             // saturate max current
1220:..\src/interruptions.c ****             if (i_ref > MOT->current_limit)
 3557              		.loc 1 1220 0
 3558 062c FB6C     		ldr	r3, [r7, #76]
 3559 062e B3F95C30 		ldrsh	r3, [r3, #92]
 3560 0632 1A46     		mov	r2, r3
 3561 0634 7B6D     		ldr	r3, [r7, #84]
 3562 0636 9A42     		cmp	r2, r3
 3563 0638 04DA     		bge	.L239
1221:..\src/interruptions.c ****                 i_ref = MOT->current_limit;
 3564              		.loc 1 1221 0
 3565 063a FB6C     		ldr	r3, [r7, #76]
 3566 063c B3F95C30 		ldrsh	r3, [r3, #92]
 3567 0640 7B65     		str	r3, [r7, #84]
 3568 0642 0BE0     		b	.L240
 3569              	.L239:
1222:..\src/interruptions.c ****             else {
1223:..\src/interruptions.c ****                 if (i_ref < -MOT->current_limit)
 3570              		.loc 1 1223 0
 3571 0644 FB6C     		ldr	r3, [r7, #76]
 3572 0646 B3F95C30 		ldrsh	r3, [r3, #92]
 3573 064a 5A42     		negs	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 87


 3574 064c 7B6D     		ldr	r3, [r7, #84]
 3575 064e 9A42     		cmp	r2, r3
 3576 0650 04DD     		ble	.L240
1224:..\src/interruptions.c ****                     i_ref = -MOT->current_limit;
 3577              		.loc 1 1224 0
 3578 0652 FB6C     		ldr	r3, [r7, #76]
 3579 0654 B3F95C30 		ldrsh	r3, [r3, #92]
 3580 0658 5B42     		negs	r3, r3
 3581 065a 7B65     		str	r3, [r7, #84]
 3582              	.L240:
1225:..\src/interruptions.c ****         	}
1226:..\src/interruptions.c **** 
1227:..\src/interruptions.c ****             // current error and curr error sum
1228:..\src/interruptions.c ****             curr_error = i_ref - g_meas[ENC_L].curr;
 3583              		.loc 1 1228 0
 3584 065c 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 3585 0660 7049     		ldr	r1, .L310+16
 3586 0662 1346     		mov	r3, r2
 3587 0664 5B00     		lsls	r3, r3, #1
 3588 0666 1344     		add	r3, r3, r2
 3589 0668 1B01     		lsls	r3, r3, #4
 3590 066a 0B44     		add	r3, r3, r1
 3591 066c 0C33     		adds	r3, r3, #12
 3592 066e 1B68     		ldr	r3, [r3]
 3593 0670 7A6D     		ldr	r2, [r7, #84]
 3594 0672 D31A     		subs	r3, r2, r3
 3595 0674 FB60     		str	r3, [r7, #12]
1229:..\src/interruptions.c ****             curr_error_sum[idx] += curr_error;
 3596              		.loc 1 1229 0
 3597 0676 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3598 0678 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3599 067a 6B49     		ldr	r1, .L310+20
 3600 067c 51F82210 		ldr	r1, [r1, r2, lsl #2]
 3601 0680 FA68     		ldr	r2, [r7, #12]
 3602 0682 0A44     		add	r2, r2, r1
 3603 0684 6849     		ldr	r1, .L310+20
 3604 0686 41F82320 		str	r2, [r1, r3, lsl #2]
1230:..\src/interruptions.c ****             
1231:..\src/interruptions.c ****             if (curr_error_sum[idx] > CURR_INTEGRAL_SAT_LIMIT)
 3605              		.loc 1 1231 0
 3606 068a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3607 068c 664A     		ldr	r2, .L310+20
 3608 068e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3609 0692 664A     		ldr	r2, .L310+24
 3610 0694 9342     		cmp	r3, r2
 3611 0696 05DD     		ble	.L241
1232:..\src/interruptions.c ****                 curr_error_sum[idx] = CURR_INTEGRAL_SAT_LIMIT;
 3612              		.loc 1 1232 0
 3613 0698 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3614 069a 634A     		ldr	r2, .L310+20
 3615 069c 6349     		ldr	r1, .L310+24
 3616 069e 42F82310 		str	r1, [r2, r3, lsl #2]
 3617 06a2 0BE0     		b	.L242
 3618              	.L241:
1233:..\src/interruptions.c ****             else {
1234:..\src/interruptions.c ****                 if (curr_error_sum[idx] < -CURR_INTEGRAL_SAT_LIMIT)
 3619              		.loc 1 1234 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 88


 3620 06a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3621 06a6 604A     		ldr	r2, .L310+20
 3622 06a8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3623 06ac 604A     		ldr	r2, .L310+28
 3624 06ae 9342     		cmp	r3, r2
 3625 06b0 04DA     		bge	.L242
1235:..\src/interruptions.c ****                     curr_error_sum[idx] = -CURR_INTEGRAL_SAT_LIMIT;
 3626              		.loc 1 1235 0
 3627 06b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3628 06b4 5C4A     		ldr	r2, .L310+20
 3629 06b6 5E49     		ldr	r1, .L310+28
 3630 06b8 42F82310 		str	r1, [r2, r3, lsl #2]
 3631              	.L242:
1236:..\src/interruptions.c ****             }
1237:..\src/interruptions.c **** 
1238:..\src/interruptions.c ****             // ----- current PID control -----
1239:..\src/interruptions.c **** 
1240:..\src/interruptions.c ****             pwm_input = 0;
 3632              		.loc 1 1240 0
 3633 06bc 0023     		movs	r3, #0
 3634 06be FB65     		str	r3, [r7, #92]
1241:..\src/interruptions.c **** 
1242:..\src/interruptions.c ****             // Proportional
1243:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 3635              		.loc 1 1243 0
 3636 06c0 3B6A     		ldr	r3, [r7, #32]
 3637 06c2 002B     		cmp	r3, #0
 3638 06c4 07D0     		beq	.L243
1244:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 3639              		.loc 1 1244 0
 3640 06c6 3B6A     		ldr	r3, [r7, #32]
 3641 06c8 FA68     		ldr	r2, [r7, #12]
 3642 06ca 02FB03F3 		mul	r3, r2, r3
 3643 06ce 1B14     		asrs	r3, r3, #16
 3644 06d0 FA6D     		ldr	r2, [r7, #92]
 3645 06d2 1344     		add	r3, r3, r2
 3646 06d4 FB65     		str	r3, [r7, #92]
 3647              	.L243:
1245:..\src/interruptions.c **** 
1246:..\src/interruptions.c ****             // Integral
1247:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 3648              		.loc 1 1247 0
 3649 06d6 FB69     		ldr	r3, [r7, #28]
 3650 06d8 002B     		cmp	r3, #0
 3651 06da 0AD0     		beq	.L244
1248:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum[idx]) >> 16;
 3652              		.loc 1 1248 0
 3653 06dc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3654 06de 524A     		ldr	r2, .L310+20
 3655 06e0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3656 06e4 FA69     		ldr	r2, [r7, #28]
 3657 06e6 02FB03F3 		mul	r3, r2, r3
 3658 06ea 1B14     		asrs	r3, r3, #16
 3659 06ec FA6D     		ldr	r2, [r7, #92]
 3660 06ee 1344     		add	r3, r3, r2
 3661 06f0 FB65     		str	r3, [r7, #92]
 3662              	.L244:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 89


1249:..\src/interruptions.c **** 
1250:..\src/interruptions.c ****             // Derivative
1251:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 3663              		.loc 1 1251 0
 3664 06f2 BB69     		ldr	r3, [r7, #24]
 3665 06f4 002B     		cmp	r3, #0
 3666 06f6 0CD0     		beq	.L245
1252:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err[idx])) >> 16;
 3667              		.loc 1 1252 0
 3668 06f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3669 06fa 4E4A     		ldr	r2, .L310+32
 3670 06fc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3671 0700 FA68     		ldr	r2, [r7, #12]
 3672 0702 D31A     		subs	r3, r2, r3
 3673 0704 BA69     		ldr	r2, [r7, #24]
 3674 0706 02FB03F3 		mul	r3, r2, r3
 3675 070a 1B14     		asrs	r3, r3, #16
 3676 070c FA6D     		ldr	r2, [r7, #92]
 3677 070e 1344     		add	r3, r3, r2
 3678 0710 FB65     		str	r3, [r7, #92]
 3679              	.L245:
1253:..\src/interruptions.c **** 
1254:..\src/interruptions.c ****             // pwm_input saturation
1255:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 3680              		.loc 1 1255 0
 3681 0712 FB6D     		ldr	r3, [r7, #92]
 3682 0714 13F1640F 		cmn	r3, #100
 3683 0718 03DA     		bge	.L246
1256:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 3684              		.loc 1 1256 0
 3685 071a 6FF06303 		mvn	r3, #99
 3686 071e FB65     		str	r3, [r7, #92]
 3687 0720 04E0     		b	.L247
 3688              	.L246:
1257:..\src/interruptions.c ****             else {
1258:..\src/interruptions.c ****                 if (pwm_input > PWM_MAX_VALUE)
 3689              		.loc 1 1258 0
 3690 0722 FB6D     		ldr	r3, [r7, #92]
 3691 0724 642B     		cmp	r3, #100
 3692 0726 01DD     		ble	.L247
1259:..\src/interruptions.c ****                     pwm_input = PWM_MAX_VALUE;
 3693              		.loc 1 1259 0
 3694 0728 6423     		movs	r3, #100
 3695 072a FB65     		str	r3, [r7, #92]
 3696              	.L247:
1260:..\src/interruptions.c ****             }
1261:..\src/interruptions.c **** 
1262:..\src/interruptions.c ****             // Update previous current
1263:..\src/interruptions.c ****             prev_curr_err[idx] = curr_error;
 3697              		.loc 1 1263 0
 3698 072c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3699 072e 4149     		ldr	r1, .L310+32
 3700 0730 FA68     		ldr	r2, [r7, #12]
 3701 0732 41F82320 		str	r2, [r1, r3, lsl #2]
1264:..\src/interruptions.c **** 
1265:..\src/interruptions.c ****         break;
 3702              		.loc 1 1265 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 90


 3703 0736 41E1     		b	.L226
 3704              	.L227:
1266:..\src/interruptions.c **** 
1267:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
1268:..\src/interruptions.c ****         case CONTROL_ANGLE:
1269:..\src/interruptions.c ****             pos_error = g_ref[idx].pos - g_meas[ENC_L].pos[0];
 3705              		.loc 1 1269 0
 3706 0738 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3707 073a 3F4A     		ldr	r2, .L310+36
 3708 073c 1B01     		lsls	r3, r3, #4
 3709 073e 1344     		add	r3, r3, r2
 3710 0740 1968     		ldr	r1, [r3]
 3711 0742 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 3712 0746 3748     		ldr	r0, .L310+16
 3713 0748 1346     		mov	r3, r2
 3714 074a 5B00     		lsls	r3, r3, #1
 3715 074c 1344     		add	r3, r3, r2
 3716 074e 1B01     		lsls	r3, r3, #4
 3717 0750 0344     		add	r3, r3, r0
 3718 0752 1B68     		ldr	r3, [r3]
 3719 0754 CB1A     		subs	r3, r1, r3
 3720 0756 BB65     		str	r3, [r7, #88]
1270:..\src/interruptions.c **** 
1271:..\src/interruptions.c ****             pos_error_sum[idx] += pos_error;
 3721              		.loc 1 1271 0
 3722 0758 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3723 075a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3724 075c 2D49     		ldr	r1, .L310
 3725 075e 51F82210 		ldr	r1, [r1, r2, lsl #2]
 3726 0762 BA6D     		ldr	r2, [r7, #88]
 3727 0764 0A44     		add	r2, r2, r1
 3728 0766 2B49     		ldr	r1, .L310
 3729 0768 41F82320 		str	r2, [r1, r3, lsl #2]
1272:..\src/interruptions.c **** 
1273:..\src/interruptions.c ****             // anti-windup (for integral control)
1274:..\src/interruptions.c ****             if (pos_error_sum[idx] > ANTI_WINDUP)
 3730              		.loc 1 1274 0
 3731 076c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3732 076e 294A     		ldr	r2, .L310
 3733 0770 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3734 0774 B3F57A7F 		cmp	r3, #1000
 3735 0778 06DD     		ble	.L248
1275:..\src/interruptions.c ****                 pos_error_sum[idx] = ANTI_WINDUP;
 3736              		.loc 1 1275 0
 3737 077a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3738 077c 254A     		ldr	r2, .L310
 3739 077e 4FF47A71 		mov	r1, #1000
 3740 0782 42F82310 		str	r1, [r2, r3, lsl #2]
 3741 0786 0BE0     		b	.L249
 3742              	.L248:
1276:..\src/interruptions.c ****             else {
1277:..\src/interruptions.c **** 				if (pos_error_sum[idx] < -ANTI_WINDUP)
 3743              		.loc 1 1277 0
 3744 0788 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3745 078a 224A     		ldr	r2, .L310
 3746 078c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3747 0790 13F57A7F 		cmn	r3, #1000
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 91


 3748 0794 04DA     		bge	.L249
1278:..\src/interruptions.c ****                 	pos_error_sum[idx] = -ANTI_WINDUP;
 3749              		.loc 1 1278 0
 3750 0796 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3751 0798 1E4A     		ldr	r2, .L310
 3752 079a 2849     		ldr	r1, .L310+40
 3753 079c 42F82310 		str	r1, [r2, r3, lsl #2]
 3754              	.L249:
1279:..\src/interruptions.c ****             }
1280:..\src/interruptions.c **** 
1281:..\src/interruptions.c ****             // Proportional
1282:..\src/interruptions.c ****             if (k_p != 0) 
 3755              		.loc 1 1282 0
 3756 07a0 7B6C     		ldr	r3, [r7, #68]
 3757 07a2 002B     		cmp	r3, #0
 3758 07a4 05D0     		beq	.L250
1283:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 3759              		.loc 1 1283 0
 3760 07a6 7B6C     		ldr	r3, [r7, #68]
 3761 07a8 BA6D     		ldr	r2, [r7, #88]
 3762 07aa 02FB03F3 		mul	r3, r2, r3
 3763 07ae 1B14     		asrs	r3, r3, #16
 3764 07b0 FB65     		str	r3, [r7, #92]
 3765              	.L250:
1284:..\src/interruptions.c ****             
1285:..\src/interruptions.c **** 
1286:..\src/interruptions.c ****             // Integral
1287:..\src/interruptions.c ****             if (k_i != 0) 
 3766              		.loc 1 1287 0
 3767 07b2 3B6C     		ldr	r3, [r7, #64]
 3768 07b4 002B     		cmp	r3, #0
 3769 07b6 0AD0     		beq	.L251
1288:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum[idx]) >> 16;
 3770              		.loc 1 1288 0
 3771 07b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3772 07ba 164A     		ldr	r2, .L310
 3773 07bc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3774 07c0 3A6C     		ldr	r2, [r7, #64]
 3775 07c2 02FB03F3 		mul	r3, r2, r3
 3776 07c6 1B14     		asrs	r3, r3, #16
 3777 07c8 FA6D     		ldr	r2, [r7, #92]
 3778 07ca 1344     		add	r3, r3, r2
 3779 07cc FB65     		str	r3, [r7, #92]
 3780              	.L251:
1289:..\src/interruptions.c ****             
1290:..\src/interruptions.c **** 
1291:..\src/interruptions.c ****             // Derivative
1292:..\src/interruptions.c ****             if (k_d != 0) 
 3781              		.loc 1 1292 0
 3782 07ce FB6B     		ldr	r3, [r7, #60]
 3783 07d0 002B     		cmp	r3, #0
 3784 07d2 0CD0     		beq	.L252
1293:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err[idx])) >> 16;
 3785              		.loc 1 1293 0
 3786 07d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3787 07d6 114A     		ldr	r2, .L310+8
 3788 07d8 52F82330 		ldr	r3, [r2, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 92


 3789 07dc BA6D     		ldr	r2, [r7, #88]
 3790 07de D31A     		subs	r3, r2, r3
 3791 07e0 FA6B     		ldr	r2, [r7, #60]
 3792 07e2 02FB03F3 		mul	r3, r2, r3
 3793 07e6 1B14     		asrs	r3, r3, #16
 3794 07e8 FA6D     		ldr	r2, [r7, #92]
 3795 07ea 1344     		add	r3, r3, r2
 3796 07ec FB65     		str	r3, [r7, #92]
 3797              	.L252:
1294:..\src/interruptions.c ****             
1295:..\src/interruptions.c **** 
1296:..\src/interruptions.c ****             // Update measure
1297:..\src/interruptions.c ****             prev_pos_err[idx] = pos_error;
 3798              		.loc 1 1297 0
 3799 07ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3800 07f0 0A49     		ldr	r1, .L310+8
 3801 07f2 BA6D     		ldr	r2, [r7, #88]
 3802 07f4 41F82320 		str	r2, [r1, r3, lsl #2]
1298:..\src/interruptions.c **** 
1299:..\src/interruptions.c ****             if (pwm_input > 0)
 3803              		.loc 1 1299 0
 3804 07f8 FB6D     		ldr	r3, [r7, #92]
 3805 07fa 002B     		cmp	r3, #0
 3806 07fc 04DD     		ble	.L253
1300:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 3807              		.loc 1 1300 0
 3808 07fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3809 0800 074A     		ldr	r2, .L310+12
 3810 0802 0121     		movs	r1, #1
 3811 0804 D154     		strb	r1, [r2, r3]
1301:..\src/interruptions.c ****             else
1302:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
1303:..\src/interruptions.c **** 
1304:..\src/interruptions.c ****         break;
 3812              		.loc 1 1304 0
 3813 0806 D9E0     		b	.L226
 3814              	.L253:
1302:..\src/interruptions.c **** 
 3815              		.loc 1 1302 0
 3816 0808 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3817 080a 054A     		ldr	r2, .L310+12
 3818 080c 0021     		movs	r1, #0
 3819 080e D154     		strb	r1, [r2, r3]
 3820              		.loc 1 1304 0
 3821 0810 D4E0     		b	.L226
 3822              	.L311:
 3823 0812 00BF     		.align	2
 3824              	.L310:
 3825 0814 B0000000 		.word	pos_error_sum.10461
 3826 0818 800F05FD 		.word	-50000000
 3827 081c B8000000 		.word	prev_pos_err.10463
 3828 0820 C0000000 		.word	motor_dir.10466
 3829 0824 00000000 		.word	g_meas
 3830 0828 C4000000 		.word	curr_error_sum.10462
 3831 082c A0860100 		.word	100000
 3832 0830 6079FEFF 		.word	-100000
 3833 0834 CC000000 		.word	prev_curr_err.10464
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 93


 3834 0838 00000000 		.word	g_ref
 3835 083c 18FCFFFF 		.word	-1000
 3836              	.L230:
1305:..\src/interruptions.c **** 
1306:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
1307:..\src/interruptions.c ****         case CONTROL_CURRENT:
1308:..\src/interruptions.c ****             if(g_ref[idx].onoff && tension_valid) {
 3837              		.loc 1 1308 0
 3838 0840 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3839 0842 984A     		ldr	r2, .L312
 3840 0844 1B01     		lsls	r3, r3, #4
 3841 0846 1344     		add	r3, r3, r2
 3842 0848 0C33     		adds	r3, r3, #12
 3843 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3844 084c 002B     		cmp	r3, #0
 3845 084e 00F0B280 		beq	.L303
 3846              		.loc 1 1308 0 is_stmt 0 discriminator 1
 3847 0852 954B     		ldr	r3, .L312+4
 3848 0854 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3849 0856 002B     		cmp	r3, #0
 3850 0858 00F0AD80 		beq	.L303
1309:..\src/interruptions.c ****                 
1310:..\src/interruptions.c ****                 i_ref = g_ref[idx].curr;
 3851              		.loc 1 1310 0 is_stmt 1
 3852 085c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3853 085e 914A     		ldr	r2, .L312
 3854 0860 1B01     		lsls	r3, r3, #4
 3855 0862 1344     		add	r3, r3, r2
 3856 0864 0433     		adds	r3, r3, #4
 3857 0866 1B68     		ldr	r3, [r3]
 3858 0868 7B65     		str	r3, [r7, #84]
1311:..\src/interruptions.c **** 
1312:..\src/interruptions.c ****                 if (i_ref > MOT->current_limit) 
 3859              		.loc 1 1312 0
 3860 086a FB6C     		ldr	r3, [r7, #76]
 3861 086c B3F95C30 		ldrsh	r3, [r3, #92]
 3862 0870 1A46     		mov	r2, r3
 3863 0872 7B6D     		ldr	r3, [r7, #84]
 3864 0874 9A42     		cmp	r2, r3
 3865 0876 04DA     		bge	.L256
1313:..\src/interruptions.c ****                     i_ref = MOT->current_limit;
 3866              		.loc 1 1313 0
 3867 0878 FB6C     		ldr	r3, [r7, #76]
 3868 087a B3F95C30 		ldrsh	r3, [r3, #92]
 3869 087e 7B65     		str	r3, [r7, #84]
 3870 0880 0BE0     		b	.L257
 3871              	.L256:
1314:..\src/interruptions.c ****                 else {
1315:..\src/interruptions.c ****                     if (i_ref < -MOT->current_limit)
 3872              		.loc 1 1315 0
 3873 0882 FB6C     		ldr	r3, [r7, #76]
 3874 0884 B3F95C30 		ldrsh	r3, [r3, #92]
 3875 0888 5A42     		negs	r2, r3
 3876 088a 7B6D     		ldr	r3, [r7, #84]
 3877 088c 9A42     		cmp	r2, r3
 3878 088e 04DD     		ble	.L257
1316:..\src/interruptions.c ****                         i_ref = -MOT->current_limit;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 94


 3879              		.loc 1 1316 0
 3880 0890 FB6C     		ldr	r3, [r7, #76]
 3881 0892 B3F95C30 		ldrsh	r3, [r3, #92]
 3882 0896 5B42     		negs	r3, r3
 3883 0898 7B65     		str	r3, [r7, #84]
 3884              	.L257:
1317:..\src/interruptions.c ****                 }
1318:..\src/interruptions.c ****                 
1319:..\src/interruptions.c ****                 // current error
1320:..\src/interruptions.c ****                 curr_error = i_ref - g_meas[ENC_L].curr;            
 3885              		.loc 1 1320 0
 3886 089a 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 3887 089e 8349     		ldr	r1, .L312+8
 3888 08a0 1346     		mov	r3, r2
 3889 08a2 5B00     		lsls	r3, r3, #1
 3890 08a4 1344     		add	r3, r3, r2
 3891 08a6 1B01     		lsls	r3, r3, #4
 3892 08a8 0B44     		add	r3, r3, r1
 3893 08aa 0C33     		adds	r3, r3, #12
 3894 08ac 1B68     		ldr	r3, [r3]
 3895 08ae 7A6D     		ldr	r2, [r7, #84]
 3896 08b0 D31A     		subs	r3, r2, r3
 3897 08b2 FB60     		str	r3, [r7, #12]
1321:..\src/interruptions.c ****                 curr_error_sum[idx] += curr_error;
 3898              		.loc 1 1321 0
 3899 08b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3900 08b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3901 08b8 7D49     		ldr	r1, .L312+12
 3902 08ba 51F82210 		ldr	r1, [r1, r2, lsl #2]
 3903 08be FA68     		ldr	r2, [r7, #12]
 3904 08c0 0A44     		add	r2, r2, r1
 3905 08c2 7B49     		ldr	r1, .L312+12
 3906 08c4 41F82320 		str	r2, [r1, r3, lsl #2]
1322:..\src/interruptions.c ****                 
1323:..\src/interruptions.c ****                 if (curr_error_sum[idx] > CURR_INTEGRAL_SAT_LIMIT)
 3907              		.loc 1 1323 0
 3908 08c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3909 08ca 794A     		ldr	r2, .L312+12
 3910 08cc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3911 08d0 784A     		ldr	r2, .L312+16
 3912 08d2 9342     		cmp	r3, r2
 3913 08d4 05DD     		ble	.L258
1324:..\src/interruptions.c ****                     curr_error_sum[idx] = CURR_INTEGRAL_SAT_LIMIT;
 3914              		.loc 1 1324 0
 3915 08d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3916 08d8 754A     		ldr	r2, .L312+12
 3917 08da 7649     		ldr	r1, .L312+16
 3918 08dc 42F82310 		str	r1, [r2, r3, lsl #2]
 3919 08e0 0BE0     		b	.L259
 3920              	.L258:
1325:..\src/interruptions.c ****                 else {
1326:..\src/interruptions.c ****                     if (curr_error_sum[idx] < -CURR_INTEGRAL_SAT_LIMIT) 
 3921              		.loc 1 1326 0
 3922 08e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3923 08e4 724A     		ldr	r2, .L312+12
 3924 08e6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3925 08ea 734A     		ldr	r2, .L312+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 95


 3926 08ec 9342     		cmp	r3, r2
 3927 08ee 04DA     		bge	.L259
1327:..\src/interruptions.c ****                         curr_error_sum[idx] = -CURR_INTEGRAL_SAT_LIMIT;
 3928              		.loc 1 1327 0
 3929 08f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3930 08f2 6F4A     		ldr	r2, .L312+12
 3931 08f4 7049     		ldr	r1, .L312+20
 3932 08f6 42F82310 		str	r1, [r2, r3, lsl #2]
 3933              	.L259:
1328:..\src/interruptions.c ****                 }
1329:..\src/interruptions.c **** 
1330:..\src/interruptions.c ****                 pwm_input = 0;
 3934              		.loc 1 1330 0
 3935 08fa 0023     		movs	r3, #0
 3936 08fc FB65     		str	r3, [r7, #92]
1331:..\src/interruptions.c **** 
1332:..\src/interruptions.c ****                 // Proportional
1333:..\src/interruptions.c ****                 if (k_p_c != 0)
 3937              		.loc 1 1333 0
 3938 08fe BB6B     		ldr	r3, [r7, #56]
 3939 0900 002B     		cmp	r3, #0
 3940 0902 07D0     		beq	.L260
1334:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 3941              		.loc 1 1334 0
 3942 0904 BB6B     		ldr	r3, [r7, #56]
 3943 0906 FA68     		ldr	r2, [r7, #12]
 3944 0908 02FB03F3 		mul	r3, r2, r3
 3945 090c 1B14     		asrs	r3, r3, #16
 3946 090e FA6D     		ldr	r2, [r7, #92]
 3947 0910 1344     		add	r3, r3, r2
 3948 0912 FB65     		str	r3, [r7, #92]
 3949              	.L260:
1335:..\src/interruptions.c **** 
1336:..\src/interruptions.c ****                 // Integral
1337:..\src/interruptions.c ****                 if (k_i_c != 0)
 3950              		.loc 1 1337 0
 3951 0914 7B6B     		ldr	r3, [r7, #52]
 3952 0916 002B     		cmp	r3, #0
 3953 0918 0AD0     		beq	.L261
1338:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum[idx]) >> 16;
 3954              		.loc 1 1338 0
 3955 091a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3956 091c 644A     		ldr	r2, .L312+12
 3957 091e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3958 0922 7A6B     		ldr	r2, [r7, #52]
 3959 0924 02FB03F3 		mul	r3, r2, r3
 3960 0928 1B14     		asrs	r3, r3, #16
 3961 092a FA6D     		ldr	r2, [r7, #92]
 3962 092c 1344     		add	r3, r3, r2
 3963 092e FB65     		str	r3, [r7, #92]
 3964              	.L261:
1339:..\src/interruptions.c **** 
1340:..\src/interruptions.c ****                 // Derivative
1341:..\src/interruptions.c ****                 if (k_d_c != 0)
 3965              		.loc 1 1341 0
 3966 0930 3B6B     		ldr	r3, [r7, #48]
 3967 0932 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 96


 3968 0934 0CD0     		beq	.L262
1342:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err[idx])) >> 16;
 3969              		.loc 1 1342 0
 3970 0936 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3971 0938 604A     		ldr	r2, .L312+24
 3972 093a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3973 093e FA68     		ldr	r2, [r7, #12]
 3974 0940 D31A     		subs	r3, r2, r3
 3975 0942 3A6B     		ldr	r2, [r7, #48]
 3976 0944 02FB03F3 		mul	r3, r2, r3
 3977 0948 1B14     		asrs	r3, r3, #16
 3978 094a FA6D     		ldr	r2, [r7, #92]
 3979 094c 1344     		add	r3, r3, r2
 3980 094e FB65     		str	r3, [r7, #92]
 3981              	.L262:
1343:..\src/interruptions.c ****                 
1344:..\src/interruptions.c ****                 prev_curr_err[idx] = curr_error;
 3982              		.loc 1 1344 0
 3983 0950 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3984 0952 5A49     		ldr	r1, .L312+24
 3985 0954 FA68     		ldr	r2, [r7, #12]
 3986 0956 41F82320 		str	r2, [r1, r3, lsl #2]
1345:..\src/interruptions.c ****                 
1346:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 3987              		.loc 1 1346 0
 3988 095a FB6D     		ldr	r3, [r7, #92]
 3989 095c 002B     		cmp	r3, #0
 3990 095e 04DB     		blt	.L263
1347:..\src/interruptions.c ****                     motor_dir[idx] = TRUE;
 3991              		.loc 1 1347 0
 3992 0960 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3993 0962 574A     		ldr	r2, .L312+28
 3994 0964 0121     		movs	r1, #1
 3995 0966 D154     		strb	r1, [r2, r3]
1348:..\src/interruptions.c ****                 else
1349:..\src/interruptions.c ****                     motor_dir[idx] = FALSE;
1350:..\src/interruptions.c ****             }
1351:..\src/interruptions.c ****         break;
 3996              		.loc 1 1351 0
 3997 0968 25E0     		b	.L303
 3998              	.L263:
1349:..\src/interruptions.c ****             }
 3999              		.loc 1 1349 0
 4000 096a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4001 096c 544A     		ldr	r2, .L312+28
 4002 096e 0021     		movs	r1, #0
 4003 0970 D154     		strb	r1, [r2, r3]
 4004              		.loc 1 1351 0
 4005 0972 20E0     		b	.L303
 4006              	.L229:
1352:..\src/interruptions.c ****         
1353:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
1354:..\src/interruptions.c ****         case CONTROL_PWM:
1355:..\src/interruptions.c **** 
1356:..\src/interruptions.c ****             pwm_input = g_ref[idx].pwm;
 4007              		.loc 1 1356 0
 4008 0974 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 97


 4009 0976 4B4A     		ldr	r2, .L312
 4010 0978 1B01     		lsls	r3, r3, #4
 4011 097a 1344     		add	r3, r3, r2
 4012 097c 0833     		adds	r3, r3, #8
 4013 097e 1B68     		ldr	r3, [r3]
 4014 0980 FB65     		str	r3, [r7, #92]
1357:..\src/interruptions.c **** 
1358:..\src/interruptions.c ****             if (pwm_input > 0) 
 4015              		.loc 1 1358 0
 4016 0982 FB6D     		ldr	r3, [r7, #92]
 4017 0984 002B     		cmp	r3, #0
 4018 0986 04DD     		ble	.L264
1359:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 4019              		.loc 1 1359 0
 4020 0988 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4021 098a 4D4A     		ldr	r2, .L312+28
 4022 098c 0121     		movs	r1, #1
 4023 098e D154     		strb	r1, [r2, r3]
 4024 0990 03E0     		b	.L265
 4025              	.L264:
1360:..\src/interruptions.c ****             else 
1361:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
 4026              		.loc 1 1361 0
 4027 0992 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4028 0994 4A4A     		ldr	r2, .L312+28
 4029 0996 0021     		movs	r1, #0
 4030 0998 D154     		strb	r1, [r2, r3]
 4031              	.L265:
1362:..\src/interruptions.c ****             
1363:..\src/interruptions.c **** 
1364:..\src/interruptions.c ****             // pwm_input saturation
1365:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 4032              		.loc 1 1365 0
 4033 099a FB6D     		ldr	r3, [r7, #92]
 4034 099c 13F1640F 		cmn	r3, #100
 4035 09a0 03DA     		bge	.L266
1366:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 4036              		.loc 1 1366 0
 4037 09a2 6FF06303 		mvn	r3, #99
 4038 09a6 FB65     		str	r3, [r7, #92]
1367:..\src/interruptions.c ****             else {
1368:..\src/interruptions.c **** 				if (pwm_input > PWM_MAX_VALUE) 
1369:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
1370:..\src/interruptions.c ****         	}
1371:..\src/interruptions.c **** 
1372:..\src/interruptions.c ****         break;
 4039              		.loc 1 1372 0
 4040 09a8 07E0     		b	.L304
 4041              	.L266:
1368:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
 4042              		.loc 1 1368 0
 4043 09aa FB6D     		ldr	r3, [r7, #92]
 4044 09ac 642B     		cmp	r3, #100
 4045 09ae 04DD     		ble	.L304
1369:..\src/interruptions.c ****         	}
 4046              		.loc 1 1369 0
 4047 09b0 6423     		movs	r3, #100
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 98


 4048 09b2 FB65     		str	r3, [r7, #92]
 4049              		.loc 1 1372 0
 4050 09b4 01E0     		b	.L304
 4051              	.L303:
1351:..\src/interruptions.c ****         
 4052              		.loc 1 1351 0
 4053 09b6 00BF     		nop
 4054 09b8 00E0     		b	.L226
 4055              	.L304:
 4056              		.loc 1 1372 0
 4057 09ba 00BF     		nop
 4058              	.L226:
1373:..\src/interruptions.c ****             
1374:..\src/interruptions.c ****     }
1375:..\src/interruptions.c **** 
1376:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
1377:..\src/interruptions.c ****      ////////////////////////////////////////////////////////////////////////////
1378:..\src/interruptions.c **** 
1379:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 4059              		.loc 1 1379 0
 4060 09bc FB6D     		ldr	r3, [r7, #92]
 4061 09be 642B     		cmp	r3, #100
 4062 09c0 01DD     		ble	.L268
1380:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 4063              		.loc 1 1380 0
 4064 09c2 6423     		movs	r3, #100
 4065 09c4 FB65     		str	r3, [r7, #92]
 4066              	.L268:
1381:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 4067              		.loc 1 1381 0
 4068 09c6 FB6D     		ldr	r3, [r7, #92]
 4069 09c8 13F1640F 		cmn	r3, #100
 4070 09cc 02DA     		bge	.L269
1382:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 4071              		.loc 1 1382 0
 4072 09ce 6FF06303 		mvn	r3, #99
 4073 09d2 FB65     		str	r3, [r7, #92]
 4074              	.L269:
1383:..\src/interruptions.c **** 
1384:..\src/interruptions.c ****     if (MOT->control_mode != CONTROL_PWM) 
 4075              		.loc 1 1384 0
 4076 09d4 FB6C     		ldr	r3, [r7, #76]
 4077 09d6 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 4078 09da 012B     		cmp	r3, #1
 4079 09dc 0DD0     		beq	.L270
1385:..\src/interruptions.c ****         pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE) * dev_pwm_limit[0]) >> 10;
 4080              		.loc 1 1385 0
 4081 09de FB6D     		ldr	r3, [r7, #92]
 4082 09e0 9B02     		lsls	r3, r3, #10
 4083 09e2 384A     		ldr	r2, .L312+32
 4084 09e4 82FB0312 		smull	r1, r2, r2, r3
 4085 09e8 5211     		asrs	r2, r2, #5
 4086 09ea DB17     		asrs	r3, r3, #31
 4087 09ec D31A     		subs	r3, r2, r3
 4088 09ee 364A     		ldr	r2, .L312+36
 4089 09f0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4090 09f2 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 99


 4091 09f6 9B12     		asrs	r3, r3, #10
 4092 09f8 FB65     		str	r3, [r7, #92]
 4093              	.L270:
1386:..\src/interruptions.c ****  
1387:..\src/interruptions.c ****     //// RATE LIMITER ////
1388:..\src/interruptions.c ****     if(SIGN(pwm_input-prev_pwm[idx]) == SIGN(pos_error))
 4094              		.loc 1 1388 0
 4095 09fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4096 09fc 334A     		ldr	r2, .L312+40
 4097 09fe 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4098 0a02 FA6D     		ldr	r2, [r7, #92]
 4099 0a04 D31A     		subs	r3, r2, r3
 4100 0a06 002B     		cmp	r3, #0
 4101 0a08 01DB     		blt	.L271
 4102              		.loc 1 1388 0 is_stmt 0 discriminator 1
 4103 0a0a 0122     		movs	r2, #1
 4104 0a0c 01E0     		b	.L272
 4105              	.L271:
 4106              		.loc 1 1388 0 discriminator 2
 4107 0a0e 4FF0FF32 		mov	r2, #-1
 4108              	.L272:
 4109              		.loc 1 1388 0 discriminator 4
 4110 0a12 BB6D     		ldr	r3, [r7, #88]
 4111 0a14 002B     		cmp	r3, #0
 4112 0a16 01DB     		blt	.L273
 4113              		.loc 1 1388 0 discriminator 5
 4114 0a18 0123     		movs	r3, #1
 4115 0a1a 01E0     		b	.L274
 4116              	.L273:
 4117              		.loc 1 1388 0 discriminator 6
 4118 0a1c 4FF0FF33 		mov	r3, #-1
 4119              	.L274:
 4120              		.loc 1 1388 0 discriminator 8
 4121 0a20 9A42     		cmp	r2, r3
 4122 0a22 28D1     		bne	.L275
1389:..\src/interruptions.c ****     {
1390:..\src/interruptions.c ****         if((pwm_input-prev_pwm[idx]) > MOT->pwm_rate_limiter)
 4123              		.loc 1 1390 0 is_stmt 1
 4124 0a24 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4125 0a26 294A     		ldr	r2, .L312+40
 4126 0a28 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4127 0a2c FA6D     		ldr	r2, [r7, #92]
 4128 0a2e D31A     		subs	r3, r2, r3
 4129 0a30 FA6C     		ldr	r2, [r7, #76]
 4130 0a32 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 4131 0a36 9342     		cmp	r3, r2
 4132 0a38 08DD     		ble	.L276
1391:..\src/interruptions.c ****             pwm_input =  prev_pwm[idx] + MOT->pwm_rate_limiter;
 4133              		.loc 1 1391 0
 4134 0a3a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4135 0a3c 234A     		ldr	r2, .L312+40
 4136 0a3e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4137 0a42 FA6C     		ldr	r2, [r7, #76]
 4138 0a44 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 4139 0a48 1344     		add	r3, r3, r2
 4140 0a4a FB65     		str	r3, [r7, #92]
 4141              	.L276:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 100


1392:..\src/interruptions.c ****     
1393:..\src/interruptions.c ****         if((pwm_input-prev_pwm[idx]) < -MOT->pwm_rate_limiter)
 4142              		.loc 1 1393 0
 4143 0a4c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4144 0a4e 1F4A     		ldr	r2, .L312+40
 4145 0a50 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4146 0a54 FA6D     		ldr	r2, [r7, #92]
 4147 0a56 D21A     		subs	r2, r2, r3
 4148 0a58 FB6C     		ldr	r3, [r7, #76]
 4149 0a5a 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 4150 0a5e 5B42     		negs	r3, r3
 4151 0a60 9A42     		cmp	r2, r3
 4152 0a62 08DA     		bge	.L275
1394:..\src/interruptions.c ****             pwm_input =  prev_pwm[idx] - MOT->pwm_rate_limiter;
 4153              		.loc 1 1394 0
 4154 0a64 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4155 0a66 194A     		ldr	r2, .L312+40
 4156 0a68 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4157 0a6c FA6C     		ldr	r2, [r7, #76]
 4158 0a6e 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 4159 0a72 9B1A     		subs	r3, r3, r2
 4160 0a74 FB65     		str	r3, [r7, #92]
 4161              	.L275:
1395:..\src/interruptions.c ****     }
1396:..\src/interruptions.c ****     
1397:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 4162              		.loc 1 1397 0
 4163 0a76 FB6D     		ldr	r3, [r7, #92]
 4164 0a78 642B     		cmp	r3, #100
 4165 0a7a 01DD     		ble	.L277
1398:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 4166              		.loc 1 1398 0
 4167 0a7c 6423     		movs	r3, #100
 4168 0a7e FB65     		str	r3, [r7, #92]
 4169              	.L277:
1399:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 4170              		.loc 1 1399 0
 4171 0a80 FB6D     		ldr	r3, [r7, #92]
 4172 0a82 13F1640F 		cmn	r3, #100
 4173 0a86 02DA     		bge	.L278
1400:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 4174              		.loc 1 1400 0
 4175 0a88 6FF06303 		mvn	r3, #99
 4176 0a8c FB65     		str	r3, [r7, #92]
 4177              	.L278:
1401:..\src/interruptions.c ****     
1402:..\src/interruptions.c ****     prev_pwm[idx] = pwm_input;
 4178              		.loc 1 1402 0
 4179 0a8e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4180 0a90 0E49     		ldr	r1, .L312+40
 4181 0a92 FA6D     		ldr	r2, [r7, #92]
 4182 0a94 41F82320 		str	r2, [r1, r3, lsl #2]
1403:..\src/interruptions.c **** 	
1404:..\src/interruptions.c ****     pwm_sign = SIGN(pwm_input);   
 4183              		.loc 1 1404 0
 4184 0a98 FB6D     		ldr	r3, [r7, #92]
 4185 0a9a 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 101


 4186 0a9c 18DB     		blt	.L279
 4187              		.loc 1 1404 0 is_stmt 0 discriminator 1
 4188 0a9e 0122     		movs	r2, #1
 4189 0aa0 18E0     		b	.L280
 4190              	.L313:
 4191 0aa2 00BF     		.align	2
 4192              	.L312:
 4193 0aa4 00000000 		.word	g_ref
 4194 0aa8 00000000 		.word	tension_valid
 4195 0aac 00000000 		.word	g_meas
 4196 0ab0 C4000000 		.word	curr_error_sum.10462
 4197 0ab4 A0860100 		.word	100000
 4198 0ab8 6079FEFF 		.word	-100000
 4199 0abc CC000000 		.word	prev_curr_err.10464
 4200 0ac0 C0000000 		.word	motor_dir.10466
 4201 0ac4 1F85EB51 		.word	1374389535
 4202 0ac8 00000000 		.word	dev_pwm_limit
 4203 0acc D4000000 		.word	prev_pwm.10465
 4204              	.L279:
 4205              		.loc 1 1404 0 discriminator 2
 4206 0ad0 4FF0FF32 		mov	r2, #-1
 4207              	.L280:
 4208              		.loc 1 1404 0 discriminator 4
 4209 0ad4 764B     		ldr	r3, .L314
 4210 0ad6 1A70     		strb	r2, [r3]
1405:..\src/interruptions.c ****     
1406:..\src/interruptions.c ****     if (MOT->not_revers_motor_flag == TRUE) {
 4211              		.loc 1 1406 0 is_stmt 1 discriminator 4
 4212 0ad8 FB6C     		ldr	r3, [r7, #76]
 4213 0ada 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 4214 0ade 012B     		cmp	r3, #1
 4215 0ae0 40F08F80 		bne	.L281
1407:..\src/interruptions.c ****         // Block motor with pwm = 0 to exploit not reversible motor behaviour 
1408:..\src/interruptions.c ****     	if ( MOT->control_mode != CONTROL_PWM && ((g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) <
 4216              		.loc 1 1408 0
 4217 0ae4 FB6C     		ldr	r3, [r7, #76]
 4218 0ae6 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 4219 0aea 012B     		cmp	r3, #1
 4220 0aec 00F08480 		beq	.L282
 4221              		.loc 1 1408 0 is_stmt 0 discriminator 1
 4222 0af0 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4223 0af4 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4224 0af6 6F48     		ldr	r0, .L314+4
 4225 0af8 1346     		mov	r3, r2
 4226 0afa 5B00     		lsls	r3, r3, #1
 4227 0afc 1344     		add	r3, r3, r2
 4228 0afe 9B00     		lsls	r3, r3, #2
 4229 0b00 0B44     		add	r3, r3, r1
 4230 0b02 50F82310 		ldr	r1, [r0, r3, lsl #2]
 4231 0b06 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4232 0b0a F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 4233 0b0c 6A4C     		ldr	r4, .L314+8
 4234 0b0e 1346     		mov	r3, r2
 4235 0b10 5B00     		lsls	r3, r3, #1
 4236 0b12 1344     		add	r3, r3, r2
 4237 0b14 9B00     		lsls	r3, r3, #2
 4238 0b16 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 102


 4239 0b18 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4240 0b1c CB1A     		subs	r3, r1, r3
 4241 0b1e 312B     		cmp	r3, #49
 4242 0b20 6ADC     		bgt	.L282
1409:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 4243              		.loc 1 1409 0 is_stmt 1 discriminator 2
 4244 0b22 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4245 0b26 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4246 0b28 6248     		ldr	r0, .L314+4
 4247 0b2a 1346     		mov	r3, r2
 4248 0b2c 5B00     		lsls	r3, r3, #1
 4249 0b2e 1344     		add	r3, r3, r2
 4250 0b30 9B00     		lsls	r3, r3, #2
 4251 0b32 0B44     		add	r3, r3, r1
 4252 0b34 50F82310 		ldr	r1, [r0, r3, lsl #2]
 4253 0b38 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4254 0b3c F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 4255 0b3e 5E4C     		ldr	r4, .L314+8
 4256 0b40 1346     		mov	r3, r2
 4257 0b42 5B00     		lsls	r3, r3, #1
 4258 0b44 1344     		add	r3, r3, r2
 4259 0b46 9B00     		lsls	r3, r3, #2
 4260 0b48 0344     		add	r3, r3, r0
 4261 0b4a 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4262 0b4e CB1A     		subs	r3, r1, r3
1408:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 4263              		.loc 1 1408 0 discriminator 2
 4264 0b50 13F1310F 		cmn	r3, #49
 4265 0b54 50DB     		blt	.L282
1410:..\src/interruptions.c ****             ((g_refOld[idx].pos - g_ref[idx].pos) < 100 && (g_refOld[idx].pos - g_ref[idx].pos) > -
 4266              		.loc 1 1410 0
 4267 0b56 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4268 0b58 584A     		ldr	r2, .L314+12
 4269 0b5a 1B01     		lsls	r3, r3, #4
 4270 0b5c 1344     		add	r3, r3, r2
 4271 0b5e 1A68     		ldr	r2, [r3]
 4272 0b60 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4273 0b62 5749     		ldr	r1, .L314+16
 4274 0b64 1B01     		lsls	r3, r3, #4
 4275 0b66 0B44     		add	r3, r3, r1
 4276 0b68 1B68     		ldr	r3, [r3]
 4277 0b6a D31A     		subs	r3, r2, r3
1409:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 4278              		.loc 1 1409 0
 4279 0b6c 632B     		cmp	r3, #99
 4280 0b6e 43DC     		bgt	.L282
 4281              		.loc 1 1410 0
 4282 0b70 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4283 0b72 524A     		ldr	r2, .L314+12
 4284 0b74 1B01     		lsls	r3, r3, #4
 4285 0b76 1344     		add	r3, r3, r2
 4286 0b78 1A68     		ldr	r2, [r3]
 4287 0b7a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4288 0b7c 5049     		ldr	r1, .L314+16
 4289 0b7e 1B01     		lsls	r3, r3, #4
 4290 0b80 0B44     		add	r3, r3, r1
 4291 0b82 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 103


 4292 0b84 D31A     		subs	r3, r2, r3
 4293 0b86 13F1630F 		cmn	r3, #99
 4294 0b8a 35DB     		blt	.L282
1411:..\src/interruptions.c ****             position_counter[idx]++;
 4295              		.loc 1 1411 0
 4296 0b8c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4297 0b8e 4D4A     		ldr	r2, .L314+20
 4298 0b90 52F82320 		ldr	r2, [r2, r3, lsl #2]
 4299 0b94 0132     		adds	r2, r2, #1
 4300 0b96 4B49     		ldr	r1, .L314+20
 4301 0b98 41F82320 		str	r2, [r1, r3, lsl #2]
1412:..\src/interruptions.c ****             
1413:..\src/interruptions.c ****             if (position_counter[idx] > 250) { 
 4302              		.loc 1 1413 0
 4303 0b9c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4304 0b9e 494A     		ldr	r2, .L314+20
 4305 0ba0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4306 0ba4 FA2B     		cmp	r3, #250
 4307 0ba6 2CD9     		bls	.L281
1414:..\src/interruptions.c ****                 if (MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 4308              		.loc 1 1414 0
 4309 0ba8 FB6C     		ldr	r3, [r7, #76]
 4310 0baa 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 4311 0bae 002B     		cmp	r3, #0
 4312 0bb0 11D1     		bne	.L284
 4313              		.loc 1 1414 0 is_stmt 0 discriminator 1
 4314 0bb2 454B     		ldr	r3, .L314+24
 4315 0bb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4316 0bb6 002B     		cmp	r3, #0
 4317 0bb8 0DD1     		bne	.L284
1415:..\src/interruptions.c ****                     g_refNew[idx].pos = g_meas[ENC_L].pos[0];       // Needed only when USB input m
 4318              		.loc 1 1415 0 is_stmt 1
 4319 0bba F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4320 0bbc 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4321 0bc0 3D48     		ldr	r0, .L314+8
 4322 0bc2 1346     		mov	r3, r2
 4323 0bc4 5B00     		lsls	r3, r3, #1
 4324 0bc6 1344     		add	r3, r3, r2
 4325 0bc8 1B01     		lsls	r3, r3, #4
 4326 0bca 0344     		add	r3, r3, r0
 4327 0bcc 1A68     		ldr	r2, [r3]
 4328 0bce 3F48     		ldr	r0, .L314+28
 4329 0bd0 0B01     		lsls	r3, r1, #4
 4330 0bd2 0344     		add	r3, r3, r0
 4331 0bd4 1A60     		str	r2, [r3]
 4332              	.L284:
1416:..\src/interruptions.c ****                 }
1417:..\src/interruptions.c ****                 g_ref[idx].pos = g_meas[ENC_L].pos[0];
 4333              		.loc 1 1417 0
 4334 0bd6 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4335 0bd8 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4336 0bdc 3648     		ldr	r0, .L314+8
 4337 0bde 1346     		mov	r3, r2
 4338 0be0 5B00     		lsls	r3, r3, #1
 4339 0be2 1344     		add	r3, r3, r2
 4340 0be4 1B01     		lsls	r3, r3, #4
 4341 0be6 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 104


 4342 0be8 1A68     		ldr	r2, [r3]
 4343 0bea 3548     		ldr	r0, .L314+16
 4344 0bec 0B01     		lsls	r3, r1, #4
 4345 0bee 0344     		add	r3, r3, r0
 4346 0bf0 1A60     		str	r2, [r3]
1418:..\src/interruptions.c ****                 pwm_input = 0;            
 4347              		.loc 1 1418 0
 4348 0bf2 0023     		movs	r3, #0
 4349 0bf4 FB65     		str	r3, [r7, #92]
1413:..\src/interruptions.c ****                 if (MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 4350              		.loc 1 1413 0
 4351 0bf6 04E0     		b	.L281
 4352              	.L282:
1419:..\src/interruptions.c ****             }
1420:..\src/interruptions.c ****         }
1421:..\src/interruptions.c ****         else {
1422:..\src/interruptions.c ****             position_counter[idx] = 0;
 4353              		.loc 1 1422 0
 4354 0bf8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4355 0bfa 324A     		ldr	r2, .L314+20
 4356 0bfc 0021     		movs	r1, #0
 4357 0bfe 42F82310 		str	r1, [r2, r3, lsl #2]
 4358              	.L281:
1423:..\src/interruptions.c ****         }
1424:..\src/interruptions.c ****     }
1425:..\src/interruptions.c ****     
1426:..\src/interruptions.c ****     // Set motor direction and write pwm value
1427:..\src/interruptions.c ****     switch (idx) {
 4359              		.loc 1 1427 0
 4360 0c02 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4361 0c04 002B     		cmp	r3, #0
 4362 0c06 02D0     		beq	.L286
 4363 0c08 012B     		cmp	r3, #1
 4364 0c0a 26D0     		beq	.L287
1428:..\src/interruptions.c ****         case 0:         // Motor 1
1429:..\src/interruptions.c ****             if (motor_dir[idx])
1430:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x01);
1431:..\src/interruptions.c ****             else
1432:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x00);
1433:..\src/interruptions.c ****             
1434:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_VNH5019) {
1435:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(PWM_MAX_VALUE - abs(pwm_input));
1436:..\src/interruptions.c ****             }
1437:..\src/interruptions.c ****             else {  // DRIVER_MC33887 standard
1438:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(abs(pwm_input));    
1439:..\src/interruptions.c ****             }
1440:..\src/interruptions.c ****             
1441:..\src/interruptions.c ****             break;
1442:..\src/interruptions.c ****         case 1:         // Motor 2
1443:..\src/interruptions.c ****             
1444:..\src/interruptions.c ****             if (motor_dir[idx])
1445:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x01);
1446:..\src/interruptions.c ****             else
1447:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x00);
1448:..\src/interruptions.c ****             
1449:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_VNH5019) {
1450:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(PWM_MAX_VALUE - abs(pwm_input));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 105


1451:..\src/interruptions.c ****             }
1452:..\src/interruptions.c ****             else {  // DRIVER_MC33887 standard
1453:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(abs(pwm_input));    
1454:..\src/interruptions.c ****             }
1455:..\src/interruptions.c ****             
1456:..\src/interruptions.c ****             break;
1457:..\src/interruptions.c ****         default:
1458:..\src/interruptions.c ****             break;
 4365              		.loc 1 1458 0
 4366 0c0c 4BE0     		b	.L292
 4367              	.L286:
1429:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x01);
 4368              		.loc 1 1429 0
 4369 0c0e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4370 0c10 2F4A     		ldr	r2, .L314+32
 4371 0c12 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4372 0c14 002B     		cmp	r3, #0
 4373 0c16 03D0     		beq	.L288
1430:..\src/interruptions.c ****             else
 4374              		.loc 1 1430 0
 4375 0c18 0120     		movs	r0, #1
 4376 0c1a FFF7FEFF 		bl	MOTOR_DIR_1_Write
 4377 0c1e 02E0     		b	.L289
 4378              	.L288:
1432:..\src/interruptions.c ****             
 4379              		.loc 1 1432 0
 4380 0c20 0020     		movs	r0, #0
 4381 0c22 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 4382              	.L289:
1434:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(PWM_MAX_VALUE - abs(pwm_input));
 4383              		.loc 1 1434 0
 4384 0c26 FB6C     		ldr	r3, [r7, #76]
 4385 0c28 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 4386 0c2c 012B     		cmp	r3, #1
 4387 0c2e 0BD1     		bne	.L290
1435:..\src/interruptions.c ****             }
 4388              		.loc 1 1435 0
 4389 0c30 FB6D     		ldr	r3, [r7, #92]
 4390 0c32 002B     		cmp	r3, #0
 4391 0c34 B8BF     		it	lt
 4392 0c36 5B42     		rsblt	r3, r3, #0
 4393 0c38 DBB2     		uxtb	r3, r3
 4394 0c3a C3F16403 		rsb	r3, r3, #100
 4395 0c3e DBB2     		uxtb	r3, r3
 4396 0c40 1846     		mov	r0, r3
 4397 0c42 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1441:..\src/interruptions.c ****         case 1:         // Motor 2
 4398              		.loc 1 1441 0
 4399 0c46 2EE0     		b	.L292
 4400              	.L290:
1438:..\src/interruptions.c ****             }
 4401              		.loc 1 1438 0
 4402 0c48 FB6D     		ldr	r3, [r7, #92]
 4403 0c4a 002B     		cmp	r3, #0
 4404 0c4c B8BF     		it	lt
 4405 0c4e 5B42     		rsblt	r3, r3, #0
 4406 0c50 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 106


 4407 0c52 1846     		mov	r0, r3
 4408 0c54 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1441:..\src/interruptions.c ****         case 1:         // Motor 2
 4409              		.loc 1 1441 0
 4410 0c58 25E0     		b	.L292
 4411              	.L287:
1444:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x01);
 4412              		.loc 1 1444 0
 4413 0c5a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4414 0c5c 1C4A     		ldr	r2, .L314+32
 4415 0c5e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4416 0c60 002B     		cmp	r3, #0
 4417 0c62 03D0     		beq	.L293
1445:..\src/interruptions.c ****             else
 4418              		.loc 1 1445 0
 4419 0c64 0120     		movs	r0, #1
 4420 0c66 FFF7FEFF 		bl	MOTOR_DIR_2_Write
 4421 0c6a 02E0     		b	.L294
 4422              	.L293:
1447:..\src/interruptions.c ****             
 4423              		.loc 1 1447 0
 4424 0c6c 0020     		movs	r0, #0
 4425 0c6e FFF7FEFF 		bl	MOTOR_DIR_2_Write
 4426              	.L294:
1449:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(PWM_MAX_VALUE - abs(pwm_input));
 4427              		.loc 1 1449 0
 4428 0c72 FB6C     		ldr	r3, [r7, #76]
 4429 0c74 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 4430 0c78 012B     		cmp	r3, #1
 4431 0c7a 0BD1     		bne	.L295
1450:..\src/interruptions.c ****             }
 4432              		.loc 1 1450 0
 4433 0c7c FB6D     		ldr	r3, [r7, #92]
 4434 0c7e 002B     		cmp	r3, #0
 4435 0c80 B8BF     		it	lt
 4436 0c82 5B42     		rsblt	r3, r3, #0
 4437 0c84 DBB2     		uxtb	r3, r3
 4438 0c86 C3F16403 		rsb	r3, r3, #100
 4439 0c8a DBB2     		uxtb	r3, r3
 4440 0c8c 1846     		mov	r0, r3
 4441 0c8e FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
1456:..\src/interruptions.c ****         default:
 4442              		.loc 1 1456 0
 4443 0c92 07E0     		b	.L305
 4444              	.L295:
1453:..\src/interruptions.c ****             }
 4445              		.loc 1 1453 0
 4446 0c94 FB6D     		ldr	r3, [r7, #92]
 4447 0c96 002B     		cmp	r3, #0
 4448 0c98 B8BF     		it	lt
 4449 0c9a 5B42     		rsblt	r3, r3, #0
 4450 0c9c DBB2     		uxtb	r3, r3
 4451 0c9e 1846     		mov	r0, r3
 4452 0ca0 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
 4453              	.L305:
1456:..\src/interruptions.c ****         default:
 4454              		.loc 1 1456 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 107


 4455 0ca4 00BF     		nop
 4456              	.L292:
1459:..\src/interruptions.c ****     }
1460:..\src/interruptions.c ****     
1461:..\src/interruptions.c **** }
 4457              		.loc 1 1461 0
 4458 0ca6 00BF     		nop
 4459 0ca8 6437     		adds	r7, r7, #100
 4460              		.cfi_def_cfa_offset 12
 4461 0caa BD46     		mov	sp, r7
 4462              		.cfi_def_cfa_register 13
 4463              		@ sp needed
 4464 0cac 90BD     		pop	{r4, r7, pc}
 4465              	.L315:
 4466 0cae 00BF     		.align	2
 4467              	.L314:
 4468 0cb0 00000000 		.word	pwm_sign
 4469 0cb4 00000000 		.word	g_measOld
 4470 0cb8 00000000 		.word	g_meas
 4471 0cbc 00000000 		.word	g_refOld
 4472 0cc0 00000000 		.word	g_ref
 4473 0cc4 DC000000 		.word	position_counter.10467
 4474 0cc8 00000000 		.word	change_ext_ref_flag
 4475 0ccc 00000000 		.word	g_refNew
 4476 0cd0 C0000000 		.word	motor_dir.10466
 4477              		.cfi_endproc
 4478              	.LFE69:
 4479              		.size	motor_control_generic, .-motor_control_generic
 4480              		.global	__aeabi_fcmpeq
 4481              		.global	__aeabi_fmul
 4482              		.global	__aeabi_f2iz
 4483              		.global	__aeabi_fcmplt
 4484              		.section	.text.encoder_reading_SPI,"ax",%progbits
 4485              		.align	2
 4486              		.global	encoder_reading_SPI
 4487              		.thumb
 4488              		.thumb_func
 4489              		.type	encoder_reading_SPI, %function
 4490              	encoder_reading_SPI:
 4491              	.LFB70:
1462:..\src/interruptions.c **** 
1463:..\src/interruptions.c **** //==============================================================================
1464:..\src/interruptions.c **** //                                                           ENCODER READING SPI
1465:..\src/interruptions.c **** //==============================================================================
1466:..\src/interruptions.c **** 
1467:..\src/interruptions.c **** void encoder_reading_SPI(uint8 n_line, uint8 assoc_motor) {
 4492              		.loc 1 1467 0
 4493              		.cfi_startproc
 4494              		@ args = 0, pretend = 0, frame = 48
 4495              		@ frame_needed = 1, uses_anonymous_args = 0
 4496 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4497              		.cfi_def_cfa_offset 20
 4498              		.cfi_offset 4, -20
 4499              		.cfi_offset 5, -16
 4500              		.cfi_offset 6, -12
 4501              		.cfi_offset 7, -8
 4502              		.cfi_offset 14, -4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 108


 4503 0002 8FB0     		sub	sp, sp, #60
 4504              		.cfi_def_cfa_offset 80
 4505 0004 02AF     		add	r7, sp, #8
 4506              		.cfi_def_cfa 7, 72
 4507 0006 0346     		mov	r3, r0
 4508 0008 0A46     		mov	r2, r1
 4509 000a FB71     		strb	r3, [r7, #7]
 4510 000c 1346     		mov	r3, r2
 4511 000e BB71     		strb	r3, [r7, #6]
1468:..\src/interruptions.c **** 
1469:..\src/interruptions.c ****     uint8 CYDATA index = 0;
 4512              		.loc 1 1469 0
 4513 0010 0023     		movs	r3, #0
 4514 0012 87F82F30 		strb	r3, [r7, #47]
1470:..\src/interruptions.c ****     
1471:..\src/interruptions.c ****     // Encoder Variables  
1472:..\src/interruptions.c ****     uint8 jj;
1473:..\src/interruptions.c ****      
1474:..\src/interruptions.c ****     uint32 aux_encoder[NUM_OF_SENSORS];
1475:..\src/interruptions.c ****     int16 tmp_value_encoder;
1476:..\src/interruptions.c ****     int32 tmp_value_encoder_32;
1477:..\src/interruptions.c ****     int32 value_encoder;
1478:..\src/interruptions.c ****     int32 speed_encoder;
1479:..\src/interruptions.c ****     int32 value_diff;
1480:..\src/interruptions.c **** 	int8 init_rot = 0;
 4515              		.loc 1 1480 0
 4516 0016 0023     		movs	r3, #0
 4517 0018 87F82730 		strb	r3, [r7, #39]
1481:..\src/interruptions.c **** 
1482:..\src/interruptions.c ****     static int32 last_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1483:..\src/interruptions.c ****     static int32 comp_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1484:..\src/interruptions.c ****     static uint8 error[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1485:..\src/interruptions.c ****     
1486:..\src/interruptions.c ****     static CYBIT only_first_time[N_ENCODER_LINE_MAX] = {TRUE, TRUE};
1487:..\src/interruptions.c ****     static CYBIT safe_startup_motor_activation[N_ENCODER_LINE_MAX] = {FALSE, FALSE};
1488:..\src/interruptions.c ****     static uint8 one_time_execute[N_ENCODER_LINE_MAX] = {0, 0};
1489:..\src/interruptions.c ****     static uint32 count_startup_motor[N_ENCODER_LINE_MAX] = {0, 0};
1490:..\src/interruptions.c ****     static CYBIT pos_reconstruct[N_ENCODER_LINE_MAX] = {FALSE, FALSE};
1491:..\src/interruptions.c **** 
1492:..\src/interruptions.c ****     static int32 v_value[N_ENCODER_LINE_MAX][N_ENCODERS];   //last value for velocity
1493:..\src/interruptions.c ****     static int32 vv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last value for velocity
1494:..\src/interruptions.c ****     static int32 vvv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last last value for velocity
1495:..\src/interruptions.c **** //    
1496:..\src/interruptions.c ****     if (reset_last_value_flag) {
 4518              		.loc 1 1496 0
 4519 001c 904B     		ldr	r3, .L352
 4520 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4521 0020 002B     		cmp	r3, #0
 4522 0022 18D0     		beq	.L317
1497:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 4523              		.loc 1 1497 0
 4524 0024 0323     		movs	r3, #3
 4525 0026 87F82E30 		strb	r3, [r7, #46]
 4526 002a 0AE0     		b	.L318
 4527              	.L319:
1498:..\src/interruptions.c ****             last_value_encoder[n_line][jj] = 0;
 4528              		.loc 1 1498 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 109


 4529 002c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4530 002e 97F82E10 		ldrb	r1, [r7, #46]	@ zero_extendqisi2
 4531 0032 8C48     		ldr	r0, .L352+4
 4532 0034 1346     		mov	r3, r2
 4533 0036 5B00     		lsls	r3, r3, #1
 4534 0038 1344     		add	r3, r3, r2
 4535 003a 0B44     		add	r3, r3, r1
 4536 003c 0022     		movs	r2, #0
 4537 003e 40F82320 		str	r2, [r0, r3, lsl #2]
 4538              	.L318:
1497:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 4539              		.loc 1 1497 0 discriminator 1
 4540 0042 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 4541 0046 5A1E     		subs	r2, r3, #1
 4542 0048 87F82E20 		strb	r2, [r7, #46]
 4543 004c 002B     		cmp	r3, #0
 4544 004e EDD1     		bne	.L319
1499:..\src/interruptions.c ****         
1500:..\src/interruptions.c ****         reset_last_value_flag = 0;
 4545              		.loc 1 1500 0
 4546 0050 834B     		ldr	r3, .L352
 4547 0052 0022     		movs	r2, #0
 4548 0054 1A70     		strb	r2, [r3]
 4549              	.L317:
1501:..\src/interruptions.c ****     }
1502:..\src/interruptions.c **** 
1503:..\src/interruptions.c ****     //======================================================     reading sensors
1504:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 4550              		.loc 1 1504 0
 4551 0056 0023     		movs	r3, #0
 4552 0058 87F82F30 		strb	r3, [r7, #47]
 4553 005c 0DE0     		b	.L320
 4554              	.L321:
1505:..\src/interruptions.c ****         aux_encoder[index] = 0;
 4555              		.loc 1 1505 0 discriminator 3
 4556 005e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4557 0062 9B00     		lsls	r3, r3, #2
 4558 0064 07F13002 		add	r2, r7, #48
 4559 0068 1344     		add	r3, r3, r2
 4560 006a 0022     		movs	r2, #0
 4561 006c 43F8282C 		str	r2, [r3, #-40]
1504:..\src/interruptions.c ****         aux_encoder[index] = 0;
 4562              		.loc 1 1504 0 discriminator 3
 4563 0070 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4564 0074 0133     		adds	r3, r3, #1
 4565 0076 87F82F30 		strb	r3, [r7, #47]
 4566              	.L320:
1504:..\src/interruptions.c ****         aux_encoder[index] = 0;
 4567              		.loc 1 1504 0 is_stmt 0 discriminator 1
 4568 007a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4569 007e 022B     		cmp	r3, #2
 4570 0080 EDD9     		bls	.L321
1506:..\src/interruptions.c ****     }   
1507:..\src/interruptions.c ****     
1508:..\src/interruptions.c ****     ReadEncoderLine(N_Encoder_Line_Connected[n_line] , n_line);         //CS0 for right hand
 4571              		.loc 1 1508 0 is_stmt 1
 4572 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 110


 4573 0084 784A     		ldr	r2, .L352+8
 4574 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4575 0088 1A46     		mov	r2, r3
 4576 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4577 008c 1946     		mov	r1, r3
 4578 008e 1046     		mov	r0, r2
 4579 0090 FFF7FEFF 		bl	ReadEncoderLine
 4580              	.LBB3:
1509:..\src/interruptions.c ****                                                                         //CS1 for left hand
1510:..\src/interruptions.c ****     for (int j = 0; j < N_ENCODERS; j++) {    
 4581              		.loc 1 1510 0
 4582 0094 0023     		movs	r3, #0
 4583 0096 3B62     		str	r3, [r7, #32]
 4584 0098 2EE0     		b	.L322
 4585              	.L324:
1511:..\src/interruptions.c ****         
1512:..\src/interruptions.c ****         // As default, index=0 reads SoftHand Pro encoder positioned on screw, while index=1 reads 
1513:..\src/interruptions.c ****         index = c_mem.enc[n_line].Enc_idx_use_for_control[j];       // take encoder idx used for mo
 4586              		.loc 1 1513 0
 4587 009a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4588 009c 7349     		ldr	r1, .L352+12
 4589 009e 1346     		mov	r3, r2
 4590 00a0 5B00     		lsls	r3, r3, #1
 4591 00a2 1344     		add	r3, r3, r2
 4592 00a4 1B01     		lsls	r3, r3, #4
 4593 00a6 CA18     		adds	r2, r1, r3
 4594 00a8 3B6A     		ldr	r3, [r7, #32]
 4595 00aa 1344     		add	r3, r3, r2
 4596 00ac 03F2B113 		addw	r3, r3, #433
 4597 00b0 1B78     		ldrb	r3, [r3]
 4598 00b2 87F82F30 		strb	r3, [r7, #47]
1514:..\src/interruptions.c ****         
1515:..\src/interruptions.c ****         if (Encoder_Check[n_line][index] > 15){  // check on encoder data
 4599              		.loc 1 1515 0
 4600 00b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4601 00b8 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4602 00bc 6C48     		ldr	r0, .L352+16
 4603 00be 1346     		mov	r3, r2
 4604 00c0 9B00     		lsls	r3, r3, #2
 4605 00c2 1344     		add	r3, r3, r2
 4606 00c4 0344     		add	r3, r3, r0
 4607 00c6 0B44     		add	r3, r3, r1
 4608 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4609 00ca 0F2B     		cmp	r3, #15
 4610 00cc 11D9     		bls	.L323
1516:..\src/interruptions.c ****             aux_encoder[j] = (uint32)Encoder_Value[n_line][index];     // 00000000000000[20] XXXXXX
 4611              		.loc 1 1516 0
 4612 00ce FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4613 00d0 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4614 00d4 6748     		ldr	r0, .L352+20
 4615 00d6 1346     		mov	r3, r2
 4616 00d8 9B00     		lsls	r3, r3, #2
 4617 00da 1344     		add	r3, r3, r2
 4618 00dc 0B44     		add	r3, r3, r1
 4619 00de 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 4620 00e2 1A46     		mov	r2, r3
 4621 00e4 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 111


 4622 00e6 9B00     		lsls	r3, r3, #2
 4623 00e8 07F13001 		add	r1, r7, #48
 4624 00ec 0B44     		add	r3, r3, r1
 4625 00ee 43F8282C 		str	r2, [r3, #-40]
 4626              	.L323:
1510:..\src/interruptions.c ****         
 4627              		.loc 1 1510 0 discriminator 2
 4628 00f2 3B6A     		ldr	r3, [r7, #32]
 4629 00f4 0133     		adds	r3, r3, #1
 4630 00f6 3B62     		str	r3, [r7, #32]
 4631              	.L322:
1510:..\src/interruptions.c ****         
 4632              		.loc 1 1510 0 is_stmt 0 discriminator 1
 4633 00f8 3B6A     		ldr	r3, [r7, #32]
 4634 00fa 022B     		cmp	r3, #2
 4635 00fc CDDD     		ble	.L324
 4636              	.LBE3:
1517:..\src/interruptions.c ****         }
1518:..\src/interruptions.c ****     }
1519:..\src/interruptions.c ****     
1520:..\src/interruptions.c ****     // S = SIGN BIT
1521:..\src/interruptions.c ****     // X = ENCODER VALUE BIT
1522:..\src/interruptions.c ****     // 0 = 0 BIT
1523:..\src/interruptions.c ****     // C = CONTROL BIT
1524:..\src/interruptions.c ****     
1525:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 4637              		.loc 1 1525 0 is_stmt 1
 4638 00fe 0023     		movs	r3, #0
 4639 0100 87F82F30 		strb	r3, [r7, #47]
 4640 0104 3DE3     		b	.L325
 4641              	.L345:
1526:..\src/interruptions.c ****         
1527:..\src/interruptions.c ****         data_encoder_raw[index] = aux_encoder[index];
 4642              		.loc 1 1527 0
 4643 0106 97F82F20 		ldrb	r2, [r7, #47]	@ zero_extendqisi2
 4644 010a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4645 010e 9B00     		lsls	r3, r3, #2
 4646 0110 07F13001 		add	r1, r7, #48
 4647 0114 0B44     		add	r3, r3, r1
 4648 0116 53F8283C 		ldr	r3, [r3, #-40]
 4649 011a 5749     		ldr	r1, .L352+24
 4650 011c 41F82230 		str	r3, [r1, r2, lsl #2]
1528:..\src/interruptions.c ****         
1529:..\src/interruptions.c ****         tmp_value_encoder = (int16)(aux_encoder[index] - (uint16)g_mem.enc[n_line].m_off[index]);
 4651              		.loc 1 1529 0
 4652 0120 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4653 0124 9B00     		lsls	r3, r3, #2
 4654 0126 07F13002 		add	r2, r7, #48
 4655 012a 1344     		add	r3, r3, r2
 4656 012c 53F8283C 		ldr	r3, [r3, #-40]
 4657 0130 99B2     		uxth	r1, r3
 4658 0132 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4659 0134 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 4660 0138 504C     		ldr	r4, .L352+28
 4661 013a 1346     		mov	r3, r2
 4662 013c 5B00     		lsls	r3, r3, #1
 4663 013e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 112


 4664 0140 9B00     		lsls	r3, r3, #2
 4665 0142 0344     		add	r3, r3, r0
 4666 0144 6633     		adds	r3, r3, #102
 4667 0146 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4668 014a 9BB2     		uxth	r3, r3
 4669 014c CB1A     		subs	r3, r1, r3
 4670 014e 9BB2     		uxth	r3, r3
 4671 0150 BB85     		strh	r3, [r7, #44]	@ movhi
1530:..\src/interruptions.c ****         if (tmp_value_encoder < 0){
 4672              		.loc 1 1530 0
 4673 0152 B7F92C30 		ldrsh	r3, [r7, #44]
 4674 0156 002B     		cmp	r3, #0
 4675 0158 04DA     		bge	.L326
1531:..\src/interruptions.c ****             tmp_value_encoder = tmp_value_encoder + 4096;   //SSSS[4] XXXXXXXXXXXX[12] worst case r
 4676              		.loc 1 1531 0
 4677 015a BB8D     		ldrh	r3, [r7, #44]
 4678 015c 03F58053 		add	r3, r3, #4096
 4679 0160 9BB2     		uxth	r3, r3
 4680 0162 BB85     		strh	r3, [r7, #44]	@ movhi
 4681              	.L326:
1532:..\src/interruptions.c ****         }       // Range [0, 4096]
1533:..\src/interruptions.c **** 
1534:..\src/interruptions.c ****         if (tmp_value_encoder >= 2048) {
 4682              		.loc 1 1534 0
 4683 0164 B7F92C30 		ldrsh	r3, [r7, #44]
 4684 0168 B3F5006F 		cmp	r3, #2048
 4685 016c 04DB     		blt	.L327
1535:..\src/interruptions.c ****            tmp_value_encoder = tmp_value_encoder - 4096;    //SSSS[4] XXXXXXXXXXXX[12] range [-2048
 4686              		.loc 1 1535 0
 4687 016e BB8D     		ldrh	r3, [r7, #44]
 4688 0170 A3F58053 		sub	r3, r3, #4096
 4689 0174 9BB2     		uxth	r3, r3
 4690 0176 BB85     		strh	r3, [r7, #44]	@ movhi
 4691              	.L327:
1536:..\src/interruptions.c ****         }       // Range [-2048, 2047]
1537:..\src/interruptions.c **** 
1538:..\src/interruptions.c ****         tmp_value_encoder_32 = (((int32)(tmp_value_encoder)) << 4);     //SSSSSSSSSSSSSSSS[16] XXXX
 4692              		.loc 1 1538 0
 4693 0178 B7F92C30 		ldrsh	r3, [r7, #44]
 4694 017c 1B01     		lsls	r3, r3, #4
 4695 017e FB61     		str	r3, [r7, #28]
1539:..\src/interruptions.c ****         comp_value_encoder[n_line][index] = tmp_value_encoder_32;
 4696              		.loc 1 1539 0
 4697 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4698 0182 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4699 0186 3E48     		ldr	r0, .L352+32
 4700 0188 1346     		mov	r3, r2
 4701 018a 5B00     		lsls	r3, r3, #1
 4702 018c 1344     		add	r3, r3, r2
 4703 018e 0B44     		add	r3, r3, r1
 4704 0190 FA69     		ldr	r2, [r7, #28]
 4705 0192 40F82320 		str	r2, [r0, r3, lsl #2]
1540:..\src/interruptions.c **** 
1541:..\src/interruptions.c ****         // Initialize last_value_encoder
1542:..\src/interruptions.c ****         if (only_first_time[n_line]) {
 4706              		.loc 1 1542 0
 4707 0196 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 113


 4708 0198 3A4A     		ldr	r2, .L352+36
 4709 019a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4710 019c 002B     		cmp	r3, #0
 4711 019e 12D0     		beq	.L328
1543:..\src/interruptions.c ****             last_value_encoder[n_line][index] = tmp_value_encoder_32;
 4712              		.loc 1 1543 0
 4713 01a0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4714 01a2 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4715 01a6 2F48     		ldr	r0, .L352+4
 4716 01a8 1346     		mov	r3, r2
 4717 01aa 5B00     		lsls	r3, r3, #1
 4718 01ac 1344     		add	r3, r3, r2
 4719 01ae 0B44     		add	r3, r3, r1
 4720 01b0 FA69     		ldr	r2, [r7, #28]
 4721 01b2 40F82320 		str	r2, [r0, r3, lsl #2]
1544:..\src/interruptions.c ****             if (index == 2)
 4722              		.loc 1 1544 0
 4723 01b6 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4724 01ba 022B     		cmp	r3, #2
 4725 01bc 03D1     		bne	.L328
1545:..\src/interruptions.c ****                 only_first_time[n_line] = 0;
 4726              		.loc 1 1545 0
 4727 01be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4728 01c0 304A     		ldr	r2, .L352+36
 4729 01c2 0021     		movs	r1, #0
 4730 01c4 D154     		strb	r1, [r2, r3]
 4731              	.L328:
1546:..\src/interruptions.c ****         }
1547:..\src/interruptions.c **** 
1548:..\src/interruptions.c ****         // Take care of rotations
1549:..\src/interruptions.c ****         value_diff = tmp_value_encoder_32 - last_value_encoder[n_line][index];     // worst case SS
 4732              		.loc 1 1549 0
 4733 01c6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4734 01c8 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4735 01cc 2548     		ldr	r0, .L352+4
 4736 01ce 1346     		mov	r3, r2
 4737 01d0 5B00     		lsls	r3, r3, #1
 4738 01d2 1344     		add	r3, r3, r2
 4739 01d4 0B44     		add	r3, r3, r1
 4740 01d6 50F82330 		ldr	r3, [r0, r3, lsl #2]
 4741 01da FA69     		ldr	r2, [r7, #28]
 4742 01dc D31A     		subs	r3, r2, r3
 4743 01de BB61     		str	r3, [r7, #24]
1550:..\src/interruptions.c **** 
1551:..\src/interruptions.c ****         // ====================== 1 TURN ======================
1552:..\src/interruptions.c ****         // -32768                    0                    32767 -32768                   0         
1553:..\src/interruptions.c ****         // |-------------------------|-------------------------|-------------------------|---------
1554:..\src/interruptions.c ****         //              |                         |      |           |      |                      
1555:..\src/interruptions.c ****         //           -16384                     16383    |           |   -16384                    
1556:..\src/interruptions.c ****         //                                               |           |
1557:..\src/interruptions.c ****         //                                           24575           -24576
1558:..\src/interruptions.c ****         //                                               |___________|
1559:..\src/interruptions.c ****         //                                                   49152
1560:..\src/interruptions.c **** 
1561:..\src/interruptions.c ****         // if we are in the right interval, take care of rotation
1562:..\src/interruptions.c ****         // and update the variable only if the difference between
1563:..\src/interruptions.c ****         // one measure and another is less than 1/4 of turn
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 114


1564:..\src/interruptions.c **** 
1565:..\src/interruptions.c ****         // Considering we are sampling at 1kHz, this means that our shaft needs
1566:..\src/interruptions.c ****         // to go slower than 1/4 turn every ms -> 1 turn every 4ms
1567:..\src/interruptions.c ****         // equal to 250 turn/s -> 15000 RPM
1568:..\src/interruptions.c **** 
1569:..\src/interruptions.c ****         if (value_diff > 49152)
 4744              		.loc 1 1569 0
 4745 01e0 BB69     		ldr	r3, [r7, #24]
 4746 01e2 B3F5404F 		cmp	r3, #49152
 4747 01e6 1BDD     		ble	.L329
1570:..\src/interruptions.c ****             g_meas[n_line].rot[index]--;
 4748              		.loc 1 1570 0
 4749 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4750 01ea 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4751 01ee 2648     		ldr	r0, .L352+40
 4752 01f0 1346     		mov	r3, r2
 4753 01f2 5B00     		lsls	r3, r3, #1
 4754 01f4 1344     		add	r3, r3, r2
 4755 01f6 1B01     		lsls	r3, r3, #4
 4756 01f8 0344     		add	r3, r3, r0
 4757 01fa 0B44     		add	r3, r3, r1
 4758 01fc 1433     		adds	r3, r3, #20
 4759 01fe 93F90030 		ldrsb	r3, [r3]
 4760 0202 DBB2     		uxtb	r3, r3
 4761 0204 013B     		subs	r3, r3, #1
 4762 0206 DBB2     		uxtb	r3, r3
 4763 0208 5CB2     		sxtb	r4, r3
 4764 020a 1F48     		ldr	r0, .L352+40
 4765 020c 1346     		mov	r3, r2
 4766 020e 5B00     		lsls	r3, r3, #1
 4767 0210 1344     		add	r3, r3, r2
 4768 0212 1B01     		lsls	r3, r3, #4
 4769 0214 0344     		add	r3, r3, r0
 4770 0216 0B44     		add	r3, r3, r1
 4771 0218 1433     		adds	r3, r3, #20
 4772 021a 2246     		mov	r2, r4
 4773 021c 1A70     		strb	r2, [r3]
 4774 021e 5DE0     		b	.L330
 4775              	.L329:
1571:..\src/interruptions.c ****         else{ 
1572:..\src/interruptions.c ****             if (value_diff < -49152)
 4776              		.loc 1 1572 0
 4777 0220 BB69     		ldr	r3, [r7, #24]
 4778 0222 13F5404F 		cmn	r3, #49152
 4779 0226 31DA     		bge	.L331
1573:..\src/interruptions.c ****                 g_meas[n_line].rot[index]++;
 4780              		.loc 1 1573 0
 4781 0228 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4782 022a 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4783 022e 1648     		ldr	r0, .L352+40
 4784 0230 1346     		mov	r3, r2
 4785 0232 5B00     		lsls	r3, r3, #1
 4786 0234 1344     		add	r3, r3, r2
 4787 0236 1B01     		lsls	r3, r3, #4
 4788 0238 0344     		add	r3, r3, r0
 4789 023a 0B44     		add	r3, r3, r1
 4790 023c 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 115


 4791 023e 93F90030 		ldrsb	r3, [r3]
 4792 0242 DBB2     		uxtb	r3, r3
 4793 0244 0133     		adds	r3, r3, #1
 4794 0246 DBB2     		uxtb	r3, r3
 4795 0248 5CB2     		sxtb	r4, r3
 4796 024a 0F48     		ldr	r0, .L352+40
 4797 024c 1346     		mov	r3, r2
 4798 024e 5B00     		lsls	r3, r3, #1
 4799 0250 1344     		add	r3, r3, r2
 4800 0252 1B01     		lsls	r3, r3, #4
 4801 0254 0344     		add	r3, r3, r0
 4802 0256 0B44     		add	r3, r3, r1
 4803 0258 1433     		adds	r3, r3, #20
 4804 025a 2246     		mov	r2, r4
 4805 025c 1A70     		strb	r2, [r3]
 4806 025e 3DE0     		b	.L330
 4807              	.L353:
 4808              		.align	2
 4809              	.L352:
 4810 0260 00000000 		.word	reset_last_value_flag
 4811 0264 E4000000 		.word	last_value_encoder.10508
 4812 0268 00000000 		.word	N_Encoder_Line_Connected
 4813 026c 00000000 		.word	c_mem
 4814 0270 00000000 		.word	Encoder_Check
 4815 0274 00000000 		.word	Encoder_Value
 4816 0278 00000000 		.word	data_encoder_raw
 4817 027c 00000000 		.word	g_mem
 4818 0280 FC000000 		.word	comp_value_encoder.10509
 4819 0284 04000000 		.word	only_first_time.10511
 4820 0288 00000000 		.word	g_meas
 4821              	.L331:
1574:..\src/interruptions.c ****             else{
1575:..\src/interruptions.c ****                 if (abs(value_diff) > 16384) { // if two measure are too far
 4822              		.loc 1 1575 0
 4823 028c BB69     		ldr	r3, [r7, #24]
 4824 028e 002B     		cmp	r3, #0
 4825 0290 B8BF     		it	lt
 4826 0292 5B42     		rsblt	r3, r3, #0
 4827 0294 B3F5804F 		cmp	r3, #16384
 4828 0298 20DD     		ble	.L330
1576:..\src/interruptions.c ****                     error[n_line][index]++;
 4829              		.loc 1 1576 0
 4830 029a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4831 029c 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4832 02a0 9A48     		ldr	r0, .L354
 4833 02a2 1346     		mov	r3, r2
 4834 02a4 5B00     		lsls	r3, r3, #1
 4835 02a6 1344     		add	r3, r3, r2
 4836 02a8 0344     		add	r3, r3, r0
 4837 02aa 0B44     		add	r3, r3, r1
 4838 02ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4839 02ae 0133     		adds	r3, r3, #1
 4840 02b0 DCB2     		uxtb	r4, r3
 4841 02b2 9648     		ldr	r0, .L354
 4842 02b4 1346     		mov	r3, r2
 4843 02b6 5B00     		lsls	r3, r3, #1
 4844 02b8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 116


 4845 02ba 0344     		add	r3, r3, r0
 4846 02bc 0B44     		add	r3, r3, r1
 4847 02be 2246     		mov	r2, r4
 4848 02c0 1A70     		strb	r2, [r3]
1577:..\src/interruptions.c ****                                 
1578:..\src/interruptions.c ****                     if (error[n_line][index] < 10)
 4849              		.loc 1 1578 0
 4850 02c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4851 02c4 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4852 02c8 9048     		ldr	r0, .L354
 4853 02ca 1346     		mov	r3, r2
 4854 02cc 5B00     		lsls	r3, r3, #1
 4855 02ce 1344     		add	r3, r3, r2
 4856 02d0 0344     		add	r3, r3, r0
 4857 02d2 0B44     		add	r3, r3, r1
 4858 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4859 02d6 092B     		cmp	r3, #9
 4860 02d8 40F29282 		bls	.L351
 4861              	.L330:
1579:..\src/interruptions.c ****                         // Discard
1580:..\src/interruptions.c ****                         return;
1581:..\src/interruptions.c ****                 }
1582:..\src/interruptions.c ****             }
1583:..\src/interruptions.c ****         }
1584:..\src/interruptions.c **** 
1585:..\src/interruptions.c ****         error[n_line][index] = 0;
 4862              		.loc 1 1585 0
 4863 02dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4864 02de 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4865 02e2 8A48     		ldr	r0, .L354
 4866 02e4 1346     		mov	r3, r2
 4867 02e6 5B00     		lsls	r3, r3, #1
 4868 02e8 1344     		add	r3, r3, r2
 4869 02ea 0344     		add	r3, r3, r0
 4870 02ec 0B44     		add	r3, r3, r1
 4871 02ee 0022     		movs	r2, #0
 4872 02f0 1A70     		strb	r2, [r3]
1586:..\src/interruptions.c ****         
1587:..\src/interruptions.c ****         last_value_encoder[n_line][index] = tmp_value_encoder_32;
 4873              		.loc 1 1587 0
 4874 02f2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4875 02f4 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4876 02f8 8548     		ldr	r0, .L354+4
 4877 02fa 1346     		mov	r3, r2
 4878 02fc 5B00     		lsls	r3, r3, #1
 4879 02fe 1344     		add	r3, r3, r2
 4880 0300 0B44     		add	r3, r3, r1
 4881 0302 FA69     		ldr	r2, [r7, #28]
 4882 0304 40F82320 		str	r2, [r0, r3, lsl #2]
1588:..\src/interruptions.c **** 
1589:..\src/interruptions.c ****         value_encoder = (int32)tmp_value_encoder_32;   // SSSSSSSSSSSSSSSS[16] XXXXXXXXXXXX[12] 000
 4883              		.loc 1 1589 0
 4884 0308 FB69     		ldr	r3, [r7, #28]
 4885 030a BB62     		str	r3, [r7, #40]
1590:..\src/interruptions.c **** 
1591:..\src/interruptions.c ****         value_encoder += ((int32)g_meas[n_line].rot[index] << 16);    
 4886              		.loc 1 1591 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 117


 4887 030c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4888 030e 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4889 0312 8048     		ldr	r0, .L354+8
 4890 0314 1346     		mov	r3, r2
 4891 0316 5B00     		lsls	r3, r3, #1
 4892 0318 1344     		add	r3, r3, r2
 4893 031a 1B01     		lsls	r3, r3, #4
 4894 031c 0344     		add	r3, r3, r0
 4895 031e 0B44     		add	r3, r3, r1
 4896 0320 1433     		adds	r3, r3, #20
 4897 0322 93F90030 		ldrsb	r3, [r3]
 4898 0326 1B04     		lsls	r3, r3, #16
 4899 0328 BA6A     		ldr	r2, [r7, #40]
 4900 032a 1344     		add	r3, r3, r2
 4901 032c BB62     		str	r3, [r7, #40]
1592:..\src/interruptions.c ****         
1593:..\src/interruptions.c ****         if (c_mem.enc[n_line].m_mult[index] != 1.0) {
 4902              		.loc 1 1593 0
 4903 032e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4904 0330 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4905 0334 7848     		ldr	r0, .L354+12
 4906 0336 1346     		mov	r3, r2
 4907 0338 5B00     		lsls	r3, r3, #1
 4908 033a 1344     		add	r3, r3, r2
 4909 033c 9B00     		lsls	r3, r3, #2
 4910 033e 0B44     		add	r3, r3, r1
 4911 0340 6833     		adds	r3, r3, #104
 4912 0342 9B00     		lsls	r3, r3, #2
 4913 0344 0344     		add	r3, r3, r0
 4914 0346 5B68     		ldr	r3, [r3, #4]	@ float
 4915 0348 4FF07E51 		mov	r1, #1065353216
 4916 034c 1846     		mov	r0, r3
 4917 034e FFF7FEFF 		bl	__aeabi_fcmpeq
 4918 0352 0346     		mov	r3, r0
 4919 0354 002B     		cmp	r3, #0
 4920 0356 1AD1     		bne	.L333
1594:..\src/interruptions.c ****             value_encoder *= c_mem.enc[n_line].m_mult[index];
 4921              		.loc 1 1594 0
 4922 0358 B86A     		ldr	r0, [r7, #40]
 4923 035a FFF7FEFF 		bl	__aeabi_i2f
 4924 035e 0446     		mov	r4, r0
 4925 0360 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4926 0362 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4927 0366 6C48     		ldr	r0, .L354+12
 4928 0368 1346     		mov	r3, r2
 4929 036a 5B00     		lsls	r3, r3, #1
 4930 036c 1344     		add	r3, r3, r2
 4931 036e 9B00     		lsls	r3, r3, #2
 4932 0370 0B44     		add	r3, r3, r1
 4933 0372 6833     		adds	r3, r3, #104
 4934 0374 9B00     		lsls	r3, r3, #2
 4935 0376 0344     		add	r3, r3, r0
 4936 0378 5B68     		ldr	r3, [r3, #4]	@ float
 4937 037a 1946     		mov	r1, r3
 4938 037c 2046     		mov	r0, r4
 4939 037e FFF7FEFF 		bl	__aeabi_fmul
 4940 0382 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 118


 4941 0384 1846     		mov	r0, r3
 4942 0386 FFF7FEFF 		bl	__aeabi_f2iz
 4943 038a 0346     		mov	r3, r0
 4944 038c BB62     		str	r3, [r7, #40]
 4945              	.L333:
1595:..\src/interruptions.c ****         }
1596:..\src/interruptions.c **** 
1597:..\src/interruptions.c ****         if (c_mem.dev.dev_type == SOFTHAND_PRO) {
 4946              		.loc 1 1597 0
 4947 038e 624B     		ldr	r3, .L354+12
 4948 0390 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 4949 0394 002B     		cmp	r3, #0
 4950 0396 0BD1     		bne	.L335
1598:..\src/interruptions.c ****             // Right / Left hand turn
1599:..\src/interruptions.c ****             if (index == 0) {
 4951              		.loc 1 1599 0
 4952 0398 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4953 039c 002B     		cmp	r3, #0
 4954 039e 07D1     		bne	.L335
1600:..\src/interruptions.c ****                 if (c_mem.dev.right_left == RIGHT_HAND){
 4955              		.loc 1 1600 0
 4956 03a0 5D4B     		ldr	r3, .L354+12
 4957 03a2 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 4958 03a6 002B     		cmp	r3, #0
 4959 03a8 02D1     		bne	.L335
1601:..\src/interruptions.c ****                     value_encoder *= -1;        
 4960              		.loc 1 1601 0
 4961 03aa BB6A     		ldr	r3, [r7, #40]
 4962 03ac 5B42     		negs	r3, r3
 4963 03ae BB62     		str	r3, [r7, #40]
 4964              	.L335:
1602:..\src/interruptions.c ****                 }
1603:..\src/interruptions.c ****             }
1604:..\src/interruptions.c ****         }
1605:..\src/interruptions.c ****  
1606:..\src/interruptions.c **** 
1607:..\src/interruptions.c ****         g_meas[n_line].pos[index] = value_encoder;
 4965              		.loc 1 1607 0
 4966 03b0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4967 03b2 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4968 03b6 5748     		ldr	r0, .L354+8
 4969 03b8 1346     		mov	r3, r2
 4970 03ba 5B00     		lsls	r3, r3, #1
 4971 03bc 1344     		add	r3, r3, r2
 4972 03be 9B00     		lsls	r3, r3, #2
 4973 03c0 0B44     		add	r3, r3, r1
 4974 03c2 BA6A     		ldr	r2, [r7, #40]
 4975 03c4 40F82320 		str	r2, [r0, r3, lsl #2]
1608:..\src/interruptions.c ****     
1609:..\src/interruptions.c ****         speed_encoder = (int16)filter((11*value_encoder - 18* v_value[n_line][index] + 9 * vv_value
 4976              		.loc 1 1609 0
 4977 03c8 BA6A     		ldr	r2, [r7, #40]
 4978 03ca 1346     		mov	r3, r2
 4979 03cc 9B00     		lsls	r3, r3, #2
 4980 03ce 1344     		add	r3, r3, r2
 4981 03d0 5B00     		lsls	r3, r3, #1
 4982 03d2 9918     		adds	r1, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 119


 4983 03d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4984 03d6 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 4985 03da 504C     		ldr	r4, .L354+16
 4986 03dc 1346     		mov	r3, r2
 4987 03de 5B00     		lsls	r3, r3, #1
 4988 03e0 1344     		add	r3, r3, r2
 4989 03e2 0344     		add	r3, r3, r0
 4990 03e4 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4991 03e8 6FF01102 		mvn	r2, #17
 4992 03ec 02FB03F3 		mul	r3, r2, r3
 4993 03f0 1944     		add	r1, r1, r3
 4994 03f2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4995 03f4 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 4996 03f8 494C     		ldr	r4, .L354+20
 4997 03fa 1346     		mov	r3, r2
 4998 03fc 5B00     		lsls	r3, r3, #1
 4999 03fe 1344     		add	r3, r3, r2
 5000 0400 0344     		add	r3, r3, r0
 5001 0402 54F82320 		ldr	r2, [r4, r3, lsl #2]
 5002 0406 1346     		mov	r3, r2
 5003 0408 DB00     		lsls	r3, r3, #3
 5004 040a 1344     		add	r3, r3, r2
 5005 040c 1944     		add	r1, r1, r3
 5006 040e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5007 0410 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5008 0414 434C     		ldr	r4, .L354+24
 5009 0416 1346     		mov	r3, r2
 5010 0418 5B00     		lsls	r3, r3, #1
 5011 041a 1344     		add	r3, r3, r2
 5012 041c 0344     		add	r3, r3, r0
 5013 041e 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5014 0422 5B00     		lsls	r3, r3, #1
 5015 0424 C81A     		subs	r0, r1, r3
 5016 0426 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5017 042a DB00     		lsls	r3, r3, #3
 5018 042c 3E4A     		ldr	r2, .L354+28
 5019 042e 1344     		add	r3, r3, r2
 5020 0430 1946     		mov	r1, r3
 5021 0432 FFF7FEFF 		bl	filter
 5022 0436 0346     		mov	r3, r0
 5023 0438 1BB2     		sxth	r3, r3
 5024 043a 7B61     		str	r3, [r7, #20]
1610:..\src/interruptions.c **** 
1611:..\src/interruptions.c ****         //Update current speed
1612:..\src/interruptions.c ****         speed_encoder = speed_encoder / (6*cycle_time);
 5025              		.loc 1 1612 0
 5026 043c 7869     		ldr	r0, [r7, #20]
 5027 043e FFF7FEFF 		bl	__aeabi_i2f
 5028 0442 0446     		mov	r4, r0
 5029 0444 394B     		ldr	r3, .L354+32
 5030 0446 1B68     		ldr	r3, [r3]	@ float
 5031 0448 3949     		ldr	r1, .L354+36
 5032 044a 1846     		mov	r0, r3
 5033 044c FFF7FEFF 		bl	__aeabi_fmul
 5034 0450 0346     		mov	r3, r0
 5035 0452 1946     		mov	r1, r3
 5036 0454 2046     		mov	r0, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 120


 5037 0456 FFF7FEFF 		bl	__aeabi_fdiv
 5038 045a 0346     		mov	r3, r0
 5039 045c 1846     		mov	r0, r3
 5040 045e FFF7FEFF 		bl	__aeabi_f2iz
 5041 0462 0346     		mov	r3, r0
 5042 0464 7B61     		str	r3, [r7, #20]
1613:..\src/interruptions.c ****         g_meas[n_line].vel[index] = speed_encoder;
 5043              		.loc 1 1613 0
 5044 0466 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5045 0468 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5046 046c 2948     		ldr	r0, .L354+8
 5047 046e 1346     		mov	r3, r2
 5048 0470 5B00     		lsls	r3, r3, #1
 5049 0472 1344     		add	r3, r3, r2
 5050 0474 9B00     		lsls	r3, r3, #2
 5051 0476 0B44     		add	r3, r3, r1
 5052 0478 0633     		adds	r3, r3, #6
 5053 047a 7A69     		ldr	r2, [r7, #20]
 5054 047c 40F82320 		str	r2, [r0, r3, lsl #2]
1614:..\src/interruptions.c **** 
1615:..\src/interruptions.c ****         // update old velocity and acceleration values
1616:..\src/interruptions.c ****         vvv_value[n_line][index] = vv_value[n_line][index];
 5055              		.loc 1 1616 0
 5056 0480 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5057 0482 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5058 0486 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5059 0488 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 5060 048c 244D     		ldr	r5, .L354+20
 5061 048e 0B46     		mov	r3, r1
 5062 0490 5B00     		lsls	r3, r3, #1
 5063 0492 0B44     		add	r3, r3, r1
 5064 0494 2344     		add	r3, r3, r4
 5065 0496 55F82310 		ldr	r1, [r5, r3, lsl #2]
 5066 049a 224C     		ldr	r4, .L354+24
 5067 049c 1346     		mov	r3, r2
 5068 049e 5B00     		lsls	r3, r3, #1
 5069 04a0 1344     		add	r3, r3, r2
 5070 04a2 0344     		add	r3, r3, r0
 5071 04a4 44F82310 		str	r1, [r4, r3, lsl #2]
1617:..\src/interruptions.c ****         vv_value[n_line][index] = v_value[n_line][index];
 5072              		.loc 1 1617 0
 5073 04a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5074 04aa 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5075 04ae F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5076 04b0 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 5077 04b4 194D     		ldr	r5, .L354+16
 5078 04b6 0B46     		mov	r3, r1
 5079 04b8 5B00     		lsls	r3, r3, #1
 5080 04ba 0B44     		add	r3, r3, r1
 5081 04bc 2344     		add	r3, r3, r4
 5082 04be 55F82310 		ldr	r1, [r5, r3, lsl #2]
 5083 04c2 174C     		ldr	r4, .L354+20
 5084 04c4 1346     		mov	r3, r2
 5085 04c6 5B00     		lsls	r3, r3, #1
 5086 04c8 1344     		add	r3, r3, r2
 5087 04ca 0344     		add	r3, r3, r0
 5088 04cc 44F82310 		str	r1, [r4, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 121


1618:..\src/interruptions.c ****         v_value[n_line][index] = value_encoder;
 5089              		.loc 1 1618 0
 5090 04d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5091 04d2 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5092 04d6 1148     		ldr	r0, .L354+16
 5093 04d8 1346     		mov	r3, r2
 5094 04da 5B00     		lsls	r3, r3, #1
 5095 04dc 1344     		add	r3, r3, r2
 5096 04de 0B44     		add	r3, r3, r1
 5097 04e0 BA6A     		ldr	r2, [r7, #40]
 5098 04e2 40F82320 		str	r2, [r0, r3, lsl #2]
1619:..\src/interruptions.c **** 
1620:..\src/interruptions.c ****         // wait at least 3 * max_num_of_error (10) + 5 = 35 cycles to reconstruct the right turn
1621:..\src/interruptions.c ****         if (pos_reconstruct[n_line] == FALSE){
 5099              		.loc 1 1621 0
 5100 04e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5101 04e8 124A     		ldr	r2, .L354+40
 5102 04ea D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5103 04ec 002B     		cmp	r3, #0
 5104 04ee 40F04381 		bne	.L336
1622:..\src/interruptions.c ****             if (one_time_execute[n_line] < 34) 
 5105              		.loc 1 1622 0
 5106 04f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5107 04f4 104A     		ldr	r2, .L354+44
 5108 04f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5109 04f8 212B     		cmp	r3, #33
 5110 04fa 1FD8     		bhi	.L337
1623:..\src/interruptions.c ****                 one_time_execute[n_line]++;
 5111              		.loc 1 1623 0
 5112 04fc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5113 04fe 0E4A     		ldr	r2, .L354+44
 5114 0500 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 5115 0502 0132     		adds	r2, r2, #1
 5116 0504 D1B2     		uxtb	r1, r2
 5117 0506 0C4A     		ldr	r2, .L354+44
 5118 0508 D154     		strb	r1, [r2, r3]
 5119 050a 35E1     		b	.L336
 5120              	.L355:
 5121              		.align	2
 5122              	.L354:
 5123 050c 14010000 		.word	error.10510
 5124 0510 E4000000 		.word	last_value_encoder.10508
 5125 0514 00000000 		.word	g_meas
 5126 0518 00000000 		.word	c_mem
 5127 051c 1C010000 		.word	v_value.10516
 5128 0520 34010000 		.word	vv_value.10517
 5129 0524 4C010000 		.word	vvv_value.10518
 5130 0528 00000000 		.word	filt_vel
 5131 052c 00000000 		.word	cycle_time
 5132 0530 0000C040 		.word	1086324736
 5133 0534 64010000 		.word	pos_reconstruct.10515
 5134 0538 68010000 		.word	one_time_execute.10513
 5135              	.L337:
1624:..\src/interruptions.c ****             else {
1625:..\src/interruptions.c ****                 //Double encoder translation
1626:..\src/interruptions.c ****                 if (c_mem.enc[n_line].double_encoder_on_off){
 5136              		.loc 1 1626 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 122


 5137 053c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5138 053e B249     		ldr	r1, .L356
 5139 0540 1346     		mov	r3, r2
 5140 0542 5B00     		lsls	r3, r3, #1
 5141 0544 1344     		add	r3, r3, r2
 5142 0546 1B01     		lsls	r3, r3, #4
 5143 0548 0B44     		add	r3, r3, r1
 5144 054a 03F5D873 		add	r3, r3, #432
 5145 054e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5146 0550 002B     		cmp	r3, #0
 5147 0552 5FD0     		beq	.L338
1627:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 5148              		.loc 1 1627 0
 5149 0554 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5150 0556 AD49     		ldr	r1, .L356+4
 5151 0558 1346     		mov	r3, r2
 5152 055a 5B00     		lsls	r3, r3, #1
 5153 055c 1344     		add	r3, r3, r2
 5154 055e 9B00     		lsls	r3, r3, #2
 5155 0560 0B44     		add	r3, r3, r1
 5156 0562 1868     		ldr	r0, [r3]
 5157 0564 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5158 0566 A949     		ldr	r1, .L356+4
 5159 0568 1346     		mov	r3, r2
 5160 056a 5B00     		lsls	r3, r3, #1
 5161 056c 1344     		add	r3, r3, r2
 5162 056e 9B00     		lsls	r3, r3, #2
 5163 0570 0B44     		add	r3, r3, r1
 5164 0572 0433     		adds	r3, r3, #4
 5165 0574 1C68     		ldr	r4, [r3]
1628:..\src/interruptions.c ****                                 c_mem.enc[n_line].gears_params[0], c_mem.enc[n_line].gears_params[1
 5166              		.loc 1 1628 0
 5167 0576 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5168 0578 A349     		ldr	r1, .L356
 5169 057a 1346     		mov	r3, r2
 5170 057c 5B00     		lsls	r3, r3, #1
 5171 057e 1344     		add	r3, r3, r2
 5172 0580 1B01     		lsls	r3, r3, #4
 5173 0582 0B44     		add	r3, r3, r1
 5174 0584 03F2B513 		addw	r3, r3, #437
 5175 0588 93F90030 		ldrsb	r3, [r3]
1627:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 5176              		.loc 1 1627 0
 5177 058c 1D46     		mov	r5, r3
 5178              		.loc 1 1628 0
 5179 058e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5180 0590 9D49     		ldr	r1, .L356
 5181 0592 1346     		mov	r3, r2
 5182 0594 5B00     		lsls	r3, r3, #1
 5183 0596 1344     		add	r3, r3, r2
 5184 0598 1B01     		lsls	r3, r3, #4
 5185 059a 0B44     		add	r3, r3, r1
 5186 059c 03F5DB73 		add	r3, r3, #438
 5187 05a0 93F90030 		ldrsb	r3, [r3]
1627:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 5188              		.loc 1 1627 0
 5189 05a4 1E46     		mov	r6, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 123


 5190              		.loc 1 1628 0
 5191 05a6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5192 05a8 9749     		ldr	r1, .L356
 5193 05aa 1346     		mov	r3, r2
 5194 05ac 5B00     		lsls	r3, r3, #1
 5195 05ae 1344     		add	r3, r3, r2
 5196 05b0 1B01     		lsls	r3, r3, #4
 5197 05b2 0B44     		add	r3, r3, r1
 5198 05b4 03F2B713 		addw	r3, r3, #439
 5199 05b8 93F90030 		ldrsb	r3, [r3]
1627:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 5200              		.loc 1 1627 0
 5201 05bc 0093     		str	r3, [sp]
 5202 05be 3346     		mov	r3, r6
 5203 05c0 2A46     		mov	r2, r5
 5204 05c2 2146     		mov	r1, r4
 5205 05c4 FFF7FEFF 		bl	calc_turns_fcn
 5206 05c8 0346     		mov	r3, r0
 5207 05ca 87F82730 		strb	r3, [r7, #39]
1629:..\src/interruptions.c **** 
1630:..\src/interruptions.c ****                     if (c_mem.enc[n_line].m_mult[0] < 0)
 5208              		.loc 1 1630 0
 5209 05ce FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5210 05d0 8D49     		ldr	r1, .L356
 5211 05d2 1346     		mov	r3, r2
 5212 05d4 5B00     		lsls	r3, r3, #1
 5213 05d6 1344     		add	r3, r3, r2
 5214 05d8 1B01     		lsls	r3, r3, #4
 5215 05da 0B44     		add	r3, r3, r1
 5216 05dc 03F5D273 		add	r3, r3, #420
 5217 05e0 1B68     		ldr	r3, [r3]	@ float
 5218 05e2 4FF00001 		mov	r1, #0
 5219 05e6 1846     		mov	r0, r3
 5220 05e8 FFF7FEFF 		bl	__aeabi_fcmplt
 5221 05ec 0346     		mov	r3, r0
 5222 05ee 002B     		cmp	r3, #0
 5223 05f0 05D0     		beq	.L339
1631:..\src/interruptions.c ****                         init_rot = -init_rot;
 5224              		.loc 1 1631 0
 5225 05f2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5226 05f6 5B42     		negs	r3, r3
 5227 05f8 DBB2     		uxtb	r3, r3
 5228 05fa 87F82730 		strb	r3, [r7, #39]
 5229              	.L339:
1632:..\src/interruptions.c ****                     
1633:..\src/interruptions.c ****                     g_meas[n_line].rot[0] = (int8)init_rot;
 5230              		.loc 1 1633 0
 5231 05fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5232 0600 8349     		ldr	r1, .L356+8
 5233 0602 1346     		mov	r3, r2
 5234 0604 5B00     		lsls	r3, r3, #1
 5235 0606 1344     		add	r3, r3, r2
 5236 0608 1B01     		lsls	r3, r3, #4
 5237 060a 0B44     		add	r3, r3, r1
 5238 060c 1433     		adds	r3, r3, #20
 5239 060e 97F82720 		ldrb	r2, [r7, #39]
 5240 0612 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 124


 5241              	.L338:
1634:..\src/interruptions.c ****                 }    
1635:..\src/interruptions.c **** 
1636:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0)
 5242              		.loc 1 1636 0
 5243 0614 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5244 0616 7C49     		ldr	r1, .L356
 5245 0618 1346     		mov	r3, r2
 5246 061a 5B00     		lsls	r3, r3, #1
 5247 061c 1344     		add	r3, r3, r2
 5248 061e 1B01     		lsls	r3, r3, #4
 5249 0620 0B44     		add	r3, r3, r1
 5250 0622 03F5D273 		add	r3, r3, #420
 5251 0626 1B68     		ldr	r3, [r3]	@ float
 5252 0628 4FF07E51 		mov	r1, #1065353216
 5253 062c 1846     		mov	r0, r3
 5254 062e FFF7FEFF 		bl	__aeabi_fcmpeq
 5255 0632 0346     		mov	r3, r0
 5256 0634 002B     		cmp	r3, #0
 5257 0636 24D1     		bne	.L341
1637:..\src/interruptions.c ****                     g_meas[n_line].pos[0] /= c_mem.enc[n_line].m_mult[0];
 5258              		.loc 1 1637 0
 5259 0638 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 5260 063a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5261 063c 7449     		ldr	r1, .L356+8
 5262 063e 1346     		mov	r3, r2
 5263 0640 5B00     		lsls	r3, r3, #1
 5264 0642 1344     		add	r3, r3, r2
 5265 0644 1B01     		lsls	r3, r3, #4
 5266 0646 0B44     		add	r3, r3, r1
 5267 0648 1B68     		ldr	r3, [r3]
 5268 064a 1846     		mov	r0, r3
 5269 064c FFF7FEFF 		bl	__aeabi_i2f
 5270 0650 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5271 0652 6D49     		ldr	r1, .L356
 5272 0654 1346     		mov	r3, r2
 5273 0656 5B00     		lsls	r3, r3, #1
 5274 0658 1344     		add	r3, r3, r2
 5275 065a 1B01     		lsls	r3, r3, #4
 5276 065c 0B44     		add	r3, r3, r1
 5277 065e 03F5D273 		add	r3, r3, #420
 5278 0662 1B68     		ldr	r3, [r3]	@ float
 5279 0664 1946     		mov	r1, r3
 5280 0666 FFF7FEFF 		bl	__aeabi_fdiv
 5281 066a 0346     		mov	r3, r0
 5282 066c 1846     		mov	r0, r3
 5283 066e FFF7FEFF 		bl	__aeabi_f2iz
 5284 0672 0146     		mov	r1, r0
 5285 0674 664A     		ldr	r2, .L356+8
 5286 0676 2346     		mov	r3, r4
 5287 0678 5B00     		lsls	r3, r3, #1
 5288 067a 2344     		add	r3, r3, r4
 5289 067c 1B01     		lsls	r3, r3, #4
 5290 067e 1344     		add	r3, r3, r2
 5291 0680 1960     		str	r1, [r3]
 5292              	.L341:
1638:..\src/interruptions.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 125


1639:..\src/interruptions.c ****                 g_meas[n_line].pos[0] += (int32)(init_rot << 16);
 5293              		.loc 1 1639 0
 5294 0682 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5295 0684 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5296 0686 6248     		ldr	r0, .L356+8
 5297 0688 0B46     		mov	r3, r1
 5298 068a 5B00     		lsls	r3, r3, #1
 5299 068c 0B44     		add	r3, r3, r1
 5300 068e 1B01     		lsls	r3, r3, #4
 5301 0690 0344     		add	r3, r3, r0
 5302 0692 1968     		ldr	r1, [r3]
 5303 0694 97F92730 		ldrsb	r3, [r7, #39]
 5304 0698 1B04     		lsls	r3, r3, #16
 5305 069a 1944     		add	r1, r1, r3
 5306 069c 5C48     		ldr	r0, .L356+8
 5307 069e 1346     		mov	r3, r2
 5308 06a0 5B00     		lsls	r3, r3, #1
 5309 06a2 1344     		add	r3, r3, r2
 5310 06a4 1B01     		lsls	r3, r3, #4
 5311 06a6 0344     		add	r3, r3, r0
 5312 06a8 1960     		str	r1, [r3]
1640:..\src/interruptions.c ****             
1641:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0)
 5313              		.loc 1 1641 0
 5314 06aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5315 06ac 5649     		ldr	r1, .L356
 5316 06ae 1346     		mov	r3, r2
 5317 06b0 5B00     		lsls	r3, r3, #1
 5318 06b2 1344     		add	r3, r3, r2
 5319 06b4 1B01     		lsls	r3, r3, #4
 5320 06b6 0B44     		add	r3, r3, r1
 5321 06b8 03F5D273 		add	r3, r3, #420
 5322 06bc 1B68     		ldr	r3, [r3]	@ float
 5323 06be 4FF07E51 		mov	r1, #1065353216
 5324 06c2 1846     		mov	r0, r3
 5325 06c4 FFF7FEFF 		bl	__aeabi_fcmpeq
 5326 06c8 0346     		mov	r3, r0
 5327 06ca 002B     		cmp	r3, #0
 5328 06cc 24D1     		bne	.L343
1642:..\src/interruptions.c ****                     g_meas[n_line].pos[0] *= c_mem.enc[n_line].m_mult[0];
 5329              		.loc 1 1642 0
 5330 06ce FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 5331 06d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5332 06d2 4F49     		ldr	r1, .L356+8
 5333 06d4 1346     		mov	r3, r2
 5334 06d6 5B00     		lsls	r3, r3, #1
 5335 06d8 1344     		add	r3, r3, r2
 5336 06da 1B01     		lsls	r3, r3, #4
 5337 06dc 0B44     		add	r3, r3, r1
 5338 06de 1B68     		ldr	r3, [r3]
 5339 06e0 1846     		mov	r0, r3
 5340 06e2 FFF7FEFF 		bl	__aeabi_i2f
 5341 06e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5342 06e8 4749     		ldr	r1, .L356
 5343 06ea 1346     		mov	r3, r2
 5344 06ec 5B00     		lsls	r3, r3, #1
 5345 06ee 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 126


 5346 06f0 1B01     		lsls	r3, r3, #4
 5347 06f2 0B44     		add	r3, r3, r1
 5348 06f4 03F5D273 		add	r3, r3, #420
 5349 06f8 1B68     		ldr	r3, [r3]	@ float
 5350 06fa 1946     		mov	r1, r3
 5351 06fc FFF7FEFF 		bl	__aeabi_fmul
 5352 0700 0346     		mov	r3, r0
 5353 0702 1846     		mov	r0, r3
 5354 0704 FFF7FEFF 		bl	__aeabi_f2iz
 5355 0708 0146     		mov	r1, r0
 5356 070a 414A     		ldr	r2, .L356+8
 5357 070c 2346     		mov	r3, r4
 5358 070e 5B00     		lsls	r3, r3, #1
 5359 0710 2344     		add	r3, r3, r4
 5360 0712 1B01     		lsls	r3, r3, #4
 5361 0714 1344     		add	r3, r3, r2
 5362 0716 1960     		str	r1, [r3]
 5363              	.L343:
1643:..\src/interruptions.c ****             
1644:..\src/interruptions.c ****                 g_refNew[assoc_motor].pos = g_meas[n_line].pos[0];
 5364              		.loc 1 1644 0
 5365 0718 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 5366 071a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5367 071c 3C48     		ldr	r0, .L356+8
 5368 071e 1346     		mov	r3, r2
 5369 0720 5B00     		lsls	r3, r3, #1
 5370 0722 1344     		add	r3, r3, r2
 5371 0724 1B01     		lsls	r3, r3, #4
 5372 0726 0344     		add	r3, r3, r0
 5373 0728 1A68     		ldr	r2, [r3]
 5374 072a 3A48     		ldr	r0, .L356+12
 5375 072c 0B01     		lsls	r3, r1, #4
 5376 072e 0344     		add	r3, r3, r0
 5377 0730 1A60     		str	r2, [r3]
1645:..\src/interruptions.c **** 
1646:..\src/interruptions.c ****                 // If necessary activate motor
1647:..\src/interruptions.c ****     			safe_startup_motor_activation[n_line] = TRUE;
 5378              		.loc 1 1647 0
 5379 0732 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5380 0734 384A     		ldr	r2, .L356+16
 5381 0736 0121     		movs	r1, #1
 5382 0738 D154     		strb	r1, [r2, r3]
1648:..\src/interruptions.c ****                 // Activate the motor associated to this encoder line
1649:..\src/interruptions.c ****                 g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 5383              		.loc 1 1649 0
 5384 073a B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 5385 073c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5386 073e 3248     		ldr	r0, .L356
 5387 0740 1346     		mov	r3, r2
 5388 0742 DB00     		lsls	r3, r3, #3
 5389 0744 9B1A     		subs	r3, r3, r2
 5390 0746 1B01     		lsls	r3, r3, #4
 5391 0748 0344     		add	r3, r3, r0
 5392 074a E033     		adds	r3, r3, #224
 5393 074c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5394 074e 314A     		ldr	r2, .L356+12
 5395 0750 0B01     		lsls	r3, r1, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 127


 5396 0752 1344     		add	r3, r3, r2
 5397 0754 0C33     		adds	r3, r3, #12
 5398 0756 0246     		mov	r2, r0
 5399 0758 1A70     		strb	r2, [r3]
1650:..\src/interruptions.c ****                 enable_motor(assoc_motor, g_refNew[assoc_motor].onoff);                
 5400              		.loc 1 1650 0
 5401 075a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5402 075c 2D4A     		ldr	r2, .L356+12
 5403 075e 1B01     		lsls	r3, r3, #4
 5404 0760 1344     		add	r3, r3, r2
 5405 0762 0C33     		adds	r3, r3, #12
 5406 0764 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5407 0766 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5408 0768 1146     		mov	r1, r2
 5409 076a 1846     		mov	r0, r3
 5410 076c FFF7FEFF 		bl	enable_motor
1651:..\src/interruptions.c ****                 
1652:..\src/interruptions.c ****                 pos_reconstruct[n_line] = TRUE;
 5411              		.loc 1 1652 0
 5412 0770 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5413 0772 2A4A     		ldr	r2, .L356+20
 5414 0774 0121     		movs	r1, #1
 5415 0776 D154     		strb	r1, [r2, r3]
 5416              	.L336:
1525:..\src/interruptions.c ****         
 5417              		.loc 1 1525 0 discriminator 2
 5418 0778 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5419 077c 0133     		adds	r3, r3, #1
 5420 077e 87F82F30 		strb	r3, [r7, #47]
 5421              	.L325:
1525:..\src/interruptions.c ****         
 5422              		.loc 1 1525 0 is_stmt 0 discriminator 1
 5423 0782 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5424 0786 022B     		cmp	r3, #2
 5425 0788 7FF6BDAC 		bls	.L345
1653:..\src/interruptions.c ****             }
1654:..\src/interruptions.c ****         }
1655:..\src/interruptions.c ****     } 
1656:..\src/interruptions.c **** 
1657:..\src/interruptions.c **** 	
1658:..\src/interruptions.c **** 	// Wait for 35+SAFE_STARTUP_MOTOR_READINGS cycles before starting motors
1659:..\src/interruptions.c ****     if (safe_startup_motor_activation[n_line]){
 5426              		.loc 1 1659 0 is_stmt 1
 5427 078c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5428 078e 224A     		ldr	r2, .L356+16
 5429 0790 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5430 0792 002B     		cmp	r3, #0
 5431 0794 35D0     		beq	.L316
1660:..\src/interruptions.c ****         count_startup_motor[n_line]++;
 5432              		.loc 1 1660 0
 5433 0796 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5434 0798 214A     		ldr	r2, .L356+24
 5435 079a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5436 079e 0132     		adds	r2, r2, #1
 5437 07a0 1F49     		ldr	r1, .L356+24
 5438 07a2 41F82320 		str	r2, [r1, r3, lsl #2]
1661:..\src/interruptions.c ****         if (count_startup_motor[n_line] >= (uint32)SAFE_STARTUP_MOTOR_READINGS) {                  
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 128


 5439              		.loc 1 1661 0
 5440 07a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5441 07a8 1D4A     		ldr	r2, .L356+24
 5442 07aa 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5443 07ae B3F5FA5F 		cmp	r3, #8000
 5444 07b2 26D3     		bcc	.L316
1662:..\src/interruptions.c ****             g_refNew[assoc_motor].pos = 0;
 5445              		.loc 1 1662 0
 5446 07b4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5447 07b6 174A     		ldr	r2, .L356+12
 5448 07b8 1B01     		lsls	r3, r3, #4
 5449 07ba 1344     		add	r3, r3, r2
 5450 07bc 0022     		movs	r2, #0
 5451 07be 1A60     		str	r2, [r3]
1663:..\src/interruptions.c ****             
1664:..\src/interruptions.c ****             // Activate the motor associated to this encoder line
1665:..\src/interruptions.c ****             g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 5452              		.loc 1 1665 0
 5453 07c0 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 5454 07c2 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5455 07c4 1048     		ldr	r0, .L356
 5456 07c6 1346     		mov	r3, r2
 5457 07c8 DB00     		lsls	r3, r3, #3
 5458 07ca 9B1A     		subs	r3, r3, r2
 5459 07cc 1B01     		lsls	r3, r3, #4
 5460 07ce 0344     		add	r3, r3, r0
 5461 07d0 E033     		adds	r3, r3, #224
 5462 07d2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5463 07d4 0F4A     		ldr	r2, .L356+12
 5464 07d6 0B01     		lsls	r3, r1, #4
 5465 07d8 1344     		add	r3, r3, r2
 5466 07da 0C33     		adds	r3, r3, #12
 5467 07dc 0246     		mov	r2, r0
 5468 07de 1A70     		strb	r2, [r3]
1666:..\src/interruptions.c ****             enable_motor(assoc_motor, g_refNew[assoc_motor].onoff); 
 5469              		.loc 1 1666 0
 5470 07e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5471 07e2 0C4A     		ldr	r2, .L356+12
 5472 07e4 1B01     		lsls	r3, r3, #4
 5473 07e6 1344     		add	r3, r3, r2
 5474 07e8 0C33     		adds	r3, r3, #12
 5475 07ea 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5476 07ec BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5477 07ee 1146     		mov	r1, r2
 5478 07f0 1846     		mov	r0, r3
 5479 07f2 FFF7FEFF 		bl	enable_motor
1667:..\src/interruptions.c ****                         
1668:..\src/interruptions.c ****             safe_startup_motor_activation[n_line] = FALSE;
 5480              		.loc 1 1668 0
 5481 07f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5482 07f8 074A     		ldr	r2, .L356+16
 5483 07fa 0021     		movs	r1, #0
 5484 07fc D154     		strb	r1, [r2, r3]
 5485 07fe 00E0     		b	.L316
 5486              	.L351:
1580:..\src/interruptions.c ****                 }
 5487              		.loc 1 1580 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 129


 5488 0800 00BF     		nop
 5489              	.L316:
1669:..\src/interruptions.c ****         }
1670:..\src/interruptions.c ****     }
1671:..\src/interruptions.c ****  
1672:..\src/interruptions.c **** }
 5490              		.loc 1 1672 0
 5491 0802 3437     		adds	r7, r7, #52
 5492              		.cfi_def_cfa_offset 20
 5493 0804 BD46     		mov	sp, r7
 5494              		.cfi_def_cfa_register 13
 5495              		@ sp needed
 5496 0806 F0BD     		pop	{r4, r5, r6, r7, pc}
 5497              	.L357:
 5498              		.align	2
 5499              	.L356:
 5500 0808 00000000 		.word	c_mem
 5501 080c FC000000 		.word	comp_value_encoder.10509
 5502 0810 00000000 		.word	g_meas
 5503 0814 00000000 		.word	g_refNew
 5504 0818 6C010000 		.word	safe_startup_motor_activation.10512
 5505 081c 64010000 		.word	pos_reconstruct.10515
 5506 0820 70010000 		.word	count_startup_motor.10514
 5507              		.cfi_endproc
 5508              	.LFE70:
 5509              		.size	encoder_reading_SPI, .-encoder_reading_SPI
 5510              		.section	.text.analog_read_end,"ax",%progbits
 5511              		.align	2
 5512              		.global	analog_read_end
 5513              		.thumb
 5514              		.thumb_func
 5515              		.type	analog_read_end, %function
 5516              	analog_read_end:
 5517              	.LFB71:
1673:..\src/interruptions.c **** 
1674:..\src/interruptions.c **** //==============================================================================
1675:..\src/interruptions.c **** //                                                           ANALOG MEASUREMENTS
1676:..\src/interruptions.c **** //==============================================================================
1677:..\src/interruptions.c **** 
1678:..\src/interruptions.c **** void analog_read_end() {
 5518              		.loc 1 1678 0
 5519              		.cfi_startproc
 5520              		@ args = 0, pretend = 0, frame = 8
 5521              		@ frame_needed = 1, uses_anonymous_args = 0
 5522 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5523              		.cfi_def_cfa_offset 20
 5524              		.cfi_offset 4, -20
 5525              		.cfi_offset 5, -16
 5526              		.cfi_offset 6, -12
 5527              		.cfi_offset 7, -8
 5528              		.cfi_offset 14, -4
 5529 0002 83B0     		sub	sp, sp, #12
 5530              		.cfi_def_cfa_offset 32
 5531 0004 00AF     		add	r7, sp, #0
 5532              		.cfi_def_cfa_register 7
1679:..\src/interruptions.c **** 
1680:..\src/interruptions.c ****     /* =========================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 130


1681:..\src/interruptions.c ****     /   Ideal formulation to calculate tension and current
1682:..\src/interruptions.c ****     /
1683:..\src/interruptions.c ****     /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
1684:..\src/interruptions.c ****     /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
1685:..\src/interruptions.c ****     /
1686:..\src/interruptions.c ****     /   Definition:
1687:..\src/interruptions.c ****     /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
1688:..\src/interruptions.c ****     /   offset = 2000 -> hardware amplifier bias in mV
1689:..\src/interruptions.c ****     /   gain = 8.086 -> amplifier gain
1690:..\src/interruptions.c ****     /   resistor = 18 -> resistor of voltage divider in KOhm 
1691:..\src/interruptions.c ****     /
1692:..\src/interruptions.c ****     /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
1693:..\src/interruptions.c ****     /   and offset unit of measurement is counts, instead dev_tension and
1694:..\src/interruptions.c ****     /   g_meas.curr[] are converted in properly unit.
1695:..\src/interruptions.c ****     /  =========================================================================
1696:..\src/interruptions.c ****     */
1697:..\src/interruptions.c **** 
1698:..\src/interruptions.c ****     int32 CYDATA i_aux;
1699:..\src/interruptions.c **** 
1700:..\src/interruptions.c ****     static uint16 emg_counter_1 = 0;
1701:..\src/interruptions.c ****     static uint16 emg_counter_2 = 0;
1702:..\src/interruptions.c **** 	static uint8 first_tension_valid = TRUE;
1703:..\src/interruptions.c ****     //static int32 pow_tension = 12000;       //12000 mV (12 V)
1704:..\src/interruptions.c ****     static uint16 count = 0;
1705:..\src/interruptions.c ****     static uint32 v_count = 0;
1706:..\src/interruptions.c ****     static uint8 idx = 0;
1707:..\src/interruptions.c ****     
1708:..\src/interruptions.c ****     // Wait for conversion end
1709:..\src/interruptions.c ****     
1710:..\src/interruptions.c ****     while(!ADC_STATUS_Read()){
 5533              		.loc 1 1710 0
 5534 0006 08E0     		b	.L359
 5535              	.L360:
1711:..\src/interruptions.c ****         
1712:..\src/interruptions.c ****         if (interrupt_flag){
 5536              		.loc 1 1712 0
 5537 0008 A84B     		ldr	r3, .L464
 5538 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5539 000c 002B     		cmp	r3, #0
 5540 000e 04D0     		beq	.L359
1713:..\src/interruptions.c ****             interrupt_flag = FALSE;
 5541              		.loc 1 1713 0
 5542 0010 A64B     		ldr	r3, .L464
 5543 0012 0022     		movs	r2, #0
 5544 0014 1A70     		strb	r2, [r3]
1714:..\src/interruptions.c ****             interrupt_manager();
 5545              		.loc 1 1714 0
 5546 0016 FFF7FEFF 		bl	interrupt_manager
 5547              	.L359:
1710:..\src/interruptions.c ****         
 5548              		.loc 1 1710 0
 5549 001a FFF7FEFF 		bl	ADC_STATUS_Read
 5550 001e 0346     		mov	r3, r0
 5551 0020 002B     		cmp	r3, #0
 5552 0022 F1D0     		beq	.L360
1715:..\src/interruptions.c ****         }
1716:..\src/interruptions.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 131


1717:..\src/interruptions.c ****     
1718:..\src/interruptions.c ****     // Convert tension read
1719:..\src/interruptions.c ****     dev_tension[0] = ((int32)(ADC_buf[0] - 1621) * 1990) >> 7;
 5553              		.loc 1 1719 0
 5554 0024 A24B     		ldr	r3, .L464+4
 5555 0026 B3F90030 		ldrsh	r3, [r3]
 5556 002a A3F25563 		subw	r3, r3, #1621
 5557 002e 40F2C672 		movw	r2, #1990
 5558 0032 02FB03F3 		mul	r3, r2, r3
 5559 0036 DB11     		asrs	r3, r3, #7
 5560 0038 9E4A     		ldr	r2, .L464+8
 5561 003a 1360     		str	r3, [r2]
1720:..\src/interruptions.c ****     
1721:..\src/interruptions.c ****     // Read also 2nd power tension (if necessary)
1722:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 4) {
 5562              		.loc 1 1722 0
 5563 003c 9E4B     		ldr	r3, .L464+12
 5564 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5565 0040 042B     		cmp	r3, #4
 5566 0042 0BD9     		bls	.L361
1723:..\src/interruptions.c ****         dev_tension[1] = ((int32)(ADC_buf[4] - 1621) * 1990) >> 7;
 5567              		.loc 1 1723 0
 5568 0044 9A4B     		ldr	r3, .L464+4
 5569 0046 B3F90830 		ldrsh	r3, [r3, #8]
 5570 004a A3F25563 		subw	r3, r3, #1621
 5571 004e 40F2C672 		movw	r2, #1990
 5572 0052 02FB03F3 		mul	r3, r2, r3
 5573 0056 DB11     		asrs	r3, r3, #7
 5574 0058 964A     		ldr	r2, .L464+8
 5575 005a 5360     		str	r3, [r2, #4]
 5576              	.L361:
1724:..\src/interruptions.c ****     }
1725:..\src/interruptions.c ****     
1726:..\src/interruptions.c ****     if (interrupt_flag){
 5577              		.loc 1 1726 0
 5578 005c 934B     		ldr	r3, .L464
 5579 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5580 0060 002B     		cmp	r3, #0
 5581 0062 04D0     		beq	.L362
1727:..\src/interruptions.c ****         interrupt_flag = FALSE;                                                                    
 5582              		.loc 1 1727 0
 5583 0064 914B     		ldr	r3, .L464
 5584 0066 0022     		movs	r2, #0
 5585 0068 1A70     		strb	r2, [r3]
1728:..\src/interruptions.c ****         interrupt_manager();
 5586              		.loc 1 1728 0
 5587 006a FFF7FEFF 		bl	interrupt_manager
 5588              	.L362:
1729:..\src/interruptions.c ****     }
1730:..\src/interruptions.c ****     
1731:..\src/interruptions.c ****     // VOLTAGE READING
1732:..\src/interruptions.c ****     // Once firmware starts, first_tension_valid flag is set to TRUE while tension_valid status is 
1733:..\src/interruptions.c ****     // Step 1) Wait for battery voltage stabilization and filter convergence for 1000 cycles (v_cou
1734:..\src/interruptions.c ****     // Step 2) Wait for another 1000 cycles (count counter) to decide which is full charge power te
1735:..\src/interruptions.c ****     // Low voltage condition) Whenever dev_tension ADC value is under 7000 mV, tension_valid flag i
1736:..\src/interruptions.c ****     
1737:..\src/interruptions.c **** 	if (first_tension_valid && tension_valid) {     // Voltage reading (Step 2)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 132


 5589              		.loc 1 1737 0
 5590 006e 934B     		ldr	r3, .L464+16
 5591 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5592 0072 002B     		cmp	r3, #0
 5593 0074 4DD0     		beq	.L363
 5594              		.loc 1 1737 0 is_stmt 0 discriminator 1
 5595 0076 924B     		ldr	r3, .L464+20
 5596 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5597 007a 002B     		cmp	r3, #0
 5598 007c 49D0     		beq	.L363
1738:..\src/interruptions.c ****         count = count + 1;
 5599              		.loc 1 1738 0 is_stmt 1
 5600 007e 914B     		ldr	r3, .L464+24
 5601 0080 1B88     		ldrh	r3, [r3]
 5602 0082 0133     		adds	r3, r3, #1
 5603 0084 9AB2     		uxth	r2, r3
 5604 0086 8F4B     		ldr	r3, .L464+24
 5605 0088 1A80     		strh	r2, [r3]	@ movhi
1739:..\src/interruptions.c ****         
1740:..\src/interruptions.c ****         if (count == 1000){
 5606              		.loc 1 1740 0
 5607 008a 8E4B     		ldr	r3, .L464+24
 5608 008c 1B88     		ldrh	r3, [r3]
 5609 008e B3F57A7F 		cmp	r3, #1000
 5610 0092 3ED1     		bne	.L363
1741:..\src/interruptions.c ****             for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 5611              		.loc 1 1741 0
 5612 0094 8C4B     		ldr	r3, .L464+28
 5613 0096 0022     		movs	r2, #0
 5614 0098 1A70     		strb	r2, [r3]
 5615 009a 33E0     		b	.L364
 5616              	.L368:
1742:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 5617              		.loc 1 1742 0
 5618 009c 8A4B     		ldr	r3, .L464+28
 5619 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5620 00a0 1A46     		mov	r2, r3
 5621 00a2 844B     		ldr	r3, .L464+8
 5622 00a4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 5623 00a8 42F22732 		movw	r2, #8999
 5624 00ac 9342     		cmp	r3, r2
 5625 00ae 08DC     		bgt	.L365
1743:..\src/interruptions.c ****                     pow_tension[idx] = 8000;
 5626              		.loc 1 1743 0
 5627 00b0 854B     		ldr	r3, .L464+28
 5628 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5629 00b4 1946     		mov	r1, r3
 5630 00b6 854B     		ldr	r3, .L464+32
 5631 00b8 4FF4FA52 		mov	r2, #8000
 5632 00bc 43F82120 		str	r2, [r3, r1, lsl #2]
 5633 00c0 1AE0     		b	.L366
 5634              	.L365:
1744:..\src/interruptions.c ****                 }
1745:..\src/interruptions.c ****                 else {      // 12 V - 24 V cases
1746:..\src/interruptions.c ****                     if (dev_tension[idx] < 13000) {
 5635              		.loc 1 1746 0
 5636 00c2 814B     		ldr	r3, .L464+28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 133


 5637 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5638 00c6 1A46     		mov	r2, r3
 5639 00c8 7A4B     		ldr	r3, .L464+8
 5640 00ca 53F82230 		ldr	r3, [r3, r2, lsl #2]
 5641 00ce 43F2C722 		movw	r2, #12999
 5642 00d2 9342     		cmp	r3, r2
 5643 00d4 08DC     		bgt	.L367
1747:..\src/interruptions.c ****                         pow_tension[idx] = 12000;
 5644              		.loc 1 1747 0
 5645 00d6 7C4B     		ldr	r3, .L464+28
 5646 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5647 00da 1946     		mov	r1, r3
 5648 00dc 7B4B     		ldr	r3, .L464+32
 5649 00de 42F6E062 		movw	r2, #12000
 5650 00e2 43F82120 		str	r2, [r3, r1, lsl #2]
 5651 00e6 07E0     		b	.L366
 5652              	.L367:
1748:..\src/interruptions.c ****                     }
1749:..\src/interruptions.c ****                     else
1750:..\src/interruptions.c ****                         pow_tension[idx] = 24000;
 5653              		.loc 1 1750 0
 5654 00e8 774B     		ldr	r3, .L464+28
 5655 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5656 00ec 1946     		mov	r1, r3
 5657 00ee 774B     		ldr	r3, .L464+32
 5658 00f0 45F6C052 		movw	r2, #24000
 5659 00f4 43F82120 		str	r2, [r3, r1, lsl #2]
 5660              	.L366:
1741:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 5661              		.loc 1 1741 0 discriminator 2
 5662 00f8 734B     		ldr	r3, .L464+28
 5663 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5664 00fc 0133     		adds	r3, r3, #1
 5665 00fe DAB2     		uxtb	r2, r3
 5666 0100 714B     		ldr	r3, .L464+28
 5667 0102 1A70     		strb	r2, [r3]
 5668              	.L364:
1741:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 5669              		.loc 1 1741 0 is_stmt 0 discriminator 1
 5670 0104 704B     		ldr	r3, .L464+28
 5671 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5672 0108 012B     		cmp	r3, #1
 5673 010a C7D9     		bls	.L368
1751:..\src/interruptions.c ****                 }
1752:..\src/interruptions.c ****             }
1753:..\src/interruptions.c ****             first_tension_valid = FALSE;
 5674              		.loc 1 1753 0 is_stmt 1
 5675 010c 6B4B     		ldr	r3, .L464+16
 5676 010e 0022     		movs	r2, #0
 5677 0110 1A70     		strb	r2, [r3]
 5678              	.L363:
1754:..\src/interruptions.c ****         }
1755:..\src/interruptions.c ****     }
1756:..\src/interruptions.c **** 
1757:..\src/interruptions.c ****     // Until there is no valid input tension repeat this measurement
1758:..\src/interruptions.c **** 
1759:..\src/interruptions.c ****     if (dev_tension[0] < 7000 && (NUM_OF_ANALOG_INPUTS<=4 || dev_tension[1] < 7000)) {       // Vol
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 134


 5679              		.loc 1 1759 0
 5680 0112 684B     		ldr	r3, .L464+8
 5681 0114 1B68     		ldr	r3, [r3]
 5682 0116 41F65732 		movw	r2, #6999
 5683 011a 9342     		cmp	r3, r2
 5684 011c 00F3E280 		bgt	.L369
 5685              		.loc 1 1759 0 is_stmt 0 discriminator 1
 5686 0120 654B     		ldr	r3, .L464+12
 5687 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5688 0124 042B     		cmp	r3, #4
 5689 0126 06D9     		bls	.L370
 5690              		.loc 1 1759 0 discriminator 2
 5691 0128 624B     		ldr	r3, .L464+8
 5692 012a 5B68     		ldr	r3, [r3, #4]
 5693 012c 41F65732 		movw	r2, #6999
 5694 0130 9342     		cmp	r3, r2
 5695 0132 00F3D780 		bgt	.L369
 5696              	.L370:
1760:..\src/interruptions.c ****         // PSoC is powered through uUSB
1761:..\src/interruptions.c ****         
1762:..\src/interruptions.c ****         tension_valid = FALSE;
 5697              		.loc 1 1762 0 is_stmt 1
 5698 0136 624B     		ldr	r3, .L464+20
 5699 0138 0022     		movs	r2, #0
 5700 013a 1A70     		strb	r2, [r3]
1763:..\src/interruptions.c ****             
1764:..\src/interruptions.c ****         if (interrupt_flag){
 5701              		.loc 1 1764 0
 5702 013c 5B4B     		ldr	r3, .L464
 5703 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5704 0140 002B     		cmp	r3, #0
 5705 0142 04D0     		beq	.L371
1765:..\src/interruptions.c ****             interrupt_flag = FALSE;
 5706              		.loc 1 1765 0
 5707 0144 594B     		ldr	r3, .L464
 5708 0146 0022     		movs	r2, #0
 5709 0148 1A70     		strb	r2, [r3]
1766:..\src/interruptions.c ****             interrupt_manager();
 5710              		.loc 1 1766 0
 5711 014a FFF7FEFF 		bl	interrupt_manager
 5712              	.L371:
1767:..\src/interruptions.c ****         }
1768:..\src/interruptions.c ****         
1769:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 5713              		.loc 1 1769 0
 5714 014e 5E4B     		ldr	r3, .L464+28
 5715 0150 0022     		movs	r2, #0
 5716 0152 1A70     		strb	r2, [r3]
 5717 0154 74E0     		b	.L372
 5718              	.L375:
1770:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 5719              		.loc 1 1770 0
 5720 0156 5E4B     		ldr	r3, .L464+36
 5721 0158 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 5722 015c 002B     		cmp	r3, #0
 5723 015e 4BD0     		beq	.L373
1771:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 135


 5724              		.loc 1 1771 0
 5725 0160 594B     		ldr	r3, .L464+28
 5726 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5727 0164 1946     		mov	r1, r3
 5728 0166 5A4A     		ldr	r2, .L464+36
 5729 0168 0B46     		mov	r3, r1
 5730 016a DB00     		lsls	r3, r3, #3
 5731 016c 5B1A     		subs	r3, r3, r1
 5732 016e 1B01     		lsls	r3, r3, #4
 5733 0170 1344     		add	r3, r3, r2
 5734 0172 03F58773 		add	r3, r3, #270
 5735 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5736 0178 022B     		cmp	r3, #2
 5737 017a 29D0     		beq	.L374
1772:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 5738              		.loc 1 1772 0 discriminator 1
 5739 017c 524B     		ldr	r3, .L464+28
 5740 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5741 0180 1946     		mov	r1, r3
 5742 0182 534A     		ldr	r2, .L464+36
 5743 0184 0B46     		mov	r3, r1
 5744 0186 DB00     		lsls	r3, r3, #3
 5745 0188 5B1A     		subs	r3, r3, r1
 5746 018a 1B01     		lsls	r3, r3, #4
 5747 018c 1344     		add	r3, r3, r2
 5748 018e 03F58773 		add	r3, r3, #270
 5749 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1771:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 5750              		.loc 1 1771 0 discriminator 1
 5751 0194 032B     		cmp	r3, #3
 5752 0196 1BD0     		beq	.L374
1773:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 5753              		.loc 1 1773 0
 5754 0198 4B4B     		ldr	r3, .L464+28
 5755 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5756 019c 1946     		mov	r1, r3
 5757 019e 4C4A     		ldr	r2, .L464+36
 5758 01a0 0B46     		mov	r3, r1
 5759 01a2 DB00     		lsls	r3, r3, #3
 5760 01a4 5B1A     		subs	r3, r3, r1
 5761 01a6 1B01     		lsls	r3, r3, #4
 5762 01a8 1344     		add	r3, r3, r2
 5763 01aa 03F58773 		add	r3, r3, #270
 5764 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1772:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 5765              		.loc 1 1772 0
 5766 01b0 042B     		cmp	r3, #4
 5767 01b2 0DD0     		beq	.L374
1774:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 5768              		.loc 1 1774 0
 5769 01b4 444B     		ldr	r3, .L464+28
 5770 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5771 01b8 1946     		mov	r1, r3
 5772 01ba 454A     		ldr	r2, .L464+36
 5773 01bc 0B46     		mov	r3, r1
 5774 01be DB00     		lsls	r3, r3, #3
 5775 01c0 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 136


 5776 01c2 1B01     		lsls	r3, r3, #4
 5777 01c4 1344     		add	r3, r3, r2
 5778 01c6 03F58773 		add	r3, r3, #270
 5779 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1773:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 5780              		.loc 1 1773 0
 5781 01cc 052B     		cmp	r3, #5
 5782 01ce 13D1     		bne	.L373
 5783              	.L374:
1775:..\src/interruptions.c ****                     g_ref[idx].onoff = 0x00;
 5784              		.loc 1 1775 0
 5785 01d0 3D4B     		ldr	r3, .L464+28
 5786 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5787 01d4 3F4A     		ldr	r2, .L464+40
 5788 01d6 1B01     		lsls	r3, r3, #4
 5789 01d8 1344     		add	r3, r3, r2
 5790 01da 0C33     		adds	r3, r3, #12
 5791 01dc 0022     		movs	r2, #0
 5792 01de 1A70     		strb	r2, [r3]
1776:..\src/interruptions.c ****                     enable_motor(idx, g_ref[idx].onoff); 
 5793              		.loc 1 1776 0
 5794 01e0 394B     		ldr	r3, .L464+28
 5795 01e2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5796 01e4 384B     		ldr	r3, .L464+28
 5797 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5798 01e8 3A4A     		ldr	r2, .L464+40
 5799 01ea 1B01     		lsls	r3, r3, #4
 5800 01ec 1344     		add	r3, r3, r2
 5801 01ee 0C33     		adds	r3, r3, #12
 5802 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5803 01f2 1946     		mov	r1, r3
 5804 01f4 FFF7FEFF 		bl	enable_motor
 5805              	.L373:
1777:..\src/interruptions.c ****                     
1778:..\src/interruptions.c ****                 }
1779:..\src/interruptions.c ****             }
1780:..\src/interruptions.c **** 
1781:..\src/interruptions.c ****             // Assign dev_tension and reset current
1782:..\src/interruptions.c ****             dev_tension[idx] = 5000;
 5806              		.loc 1 1782 0 discriminator 2
 5807 01f8 334B     		ldr	r3, .L464+28
 5808 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5809 01fc 1946     		mov	r1, r3
 5810 01fe 2D4B     		ldr	r3, .L464+8
 5811 0200 41F28832 		movw	r2, #5000
 5812 0204 43F82120 		str	r2, [r3, r1, lsl #2]
1783:..\src/interruptions.c ****             g_meas[g_mem.motor[idx].encoder_line].curr = 0;
 5813              		.loc 1 1783 0 discriminator 2
 5814 0208 2F4B     		ldr	r3, .L464+28
 5815 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5816 020c 1946     		mov	r1, r3
 5817 020e 324A     		ldr	r2, .L464+44
 5818 0210 0B46     		mov	r3, r1
 5819 0212 DB00     		lsls	r3, r3, #3
 5820 0214 5B1A     		subs	r3, r3, r1
 5821 0216 1B01     		lsls	r3, r3, #4
 5822 0218 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 137


 5823 021a 03F58873 		add	r3, r3, #272
 5824 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5825 0220 1946     		mov	r1, r3
 5826 0222 2E4A     		ldr	r2, .L464+48
 5827 0224 0B46     		mov	r3, r1
 5828 0226 5B00     		lsls	r3, r3, #1
 5829 0228 0B44     		add	r3, r3, r1
 5830 022a 1B01     		lsls	r3, r3, #4
 5831 022c 1344     		add	r3, r3, r2
 5832 022e 0C33     		adds	r3, r3, #12
 5833 0230 0022     		movs	r2, #0
 5834 0232 1A60     		str	r2, [r3]
1769:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 5835              		.loc 1 1769 0 discriminator 2
 5836 0234 244B     		ldr	r3, .L464+28
 5837 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5838 0238 0133     		adds	r3, r3, #1
 5839 023a DAB2     		uxtb	r2, r3
 5840 023c 224B     		ldr	r3, .L464+28
 5841 023e 1A70     		strb	r2, [r3]
 5842              	.L372:
1769:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 5843              		.loc 1 1769 0 is_stmt 0 discriminator 1
 5844 0240 214B     		ldr	r3, .L464+28
 5845 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5846 0244 012B     		cmp	r3, #1
 5847 0246 86D9     		bls	.L375
1784:..\src/interruptions.c ****         }
1785:..\src/interruptions.c ****         
1786:..\src/interruptions.c ****         // Reset emg
1787:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_INPUT_EMGS; idx++){
 5848              		.loc 1 1787 0 is_stmt 1
 5849 0248 1F4B     		ldr	r3, .L464+28
 5850 024a 0022     		movs	r2, #0
 5851 024c 1A70     		strb	r2, [r3]
 5852 024e 0CE0     		b	.L376
 5853              	.L377:
1788:..\src/interruptions.c ****             g_emg_meas.emg[idx] = 0;
 5854              		.loc 1 1788 0 discriminator 3
 5855 0250 1D4B     		ldr	r3, .L464+28
 5856 0252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5857 0254 1946     		mov	r1, r3
 5858 0256 224B     		ldr	r3, .L464+52
 5859 0258 0022     		movs	r2, #0
 5860 025a 43F82120 		str	r2, [r3, r1, lsl #2]
1787:..\src/interruptions.c ****             g_emg_meas.emg[idx] = 0;
 5861              		.loc 1 1787 0 discriminator 3
 5862 025e 1A4B     		ldr	r3, .L464+28
 5863 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5864 0262 0133     		adds	r3, r3, #1
 5865 0264 DAB2     		uxtb	r2, r3
 5866 0266 184B     		ldr	r3, .L464+28
 5867 0268 1A70     		strb	r2, [r3]
 5868              	.L376:
1787:..\src/interruptions.c ****             g_emg_meas.emg[idx] = 0;
 5869              		.loc 1 1787 0 is_stmt 0 discriminator 1
 5870 026a 174B     		ldr	r3, .L464+28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 138


 5871 026c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5872 026e 012B     		cmp	r3, #1
 5873 0270 EED9     		bls	.L377
1789:..\src/interruptions.c ****         }
1790:..\src/interruptions.c ****         for (idx = 0; c_mem.exp.read_ADC_sensors_port_flag && idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 5874              		.loc 1 1790 0 is_stmt 1
 5875 0272 154B     		ldr	r3, .L464+28
 5876 0274 0022     		movs	r2, #0
 5877 0276 1A70     		strb	r2, [r3]
 5878 0278 0CE0     		b	.L378
 5879              	.L380:
1791:..\src/interruptions.c ****             g_emg_meas.add_emg[idx] = 0;
 5880              		.loc 1 1791 0 discriminator 4
 5881 027a 134B     		ldr	r3, .L464+28
 5882 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5883 027e 184A     		ldr	r2, .L464+52
 5884 0280 0233     		adds	r3, r3, #2
 5885 0282 0021     		movs	r1, #0
 5886 0284 42F82310 		str	r1, [r2, r3, lsl #2]
1790:..\src/interruptions.c ****             g_emg_meas.add_emg[idx] = 0;
 5887              		.loc 1 1790 0 discriminator 4
 5888 0288 0F4B     		ldr	r3, .L464+28
 5889 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5890 028c 0133     		adds	r3, r3, #1
 5891 028e DAB2     		uxtb	r2, r3
 5892 0290 0D4B     		ldr	r3, .L464+28
 5893 0292 1A70     		strb	r2, [r3]
 5894              	.L378:
1790:..\src/interruptions.c ****             g_emg_meas.add_emg[idx] = 0;
 5895              		.loc 1 1790 0 is_stmt 0 discriminator 1
 5896 0294 0E4B     		ldr	r3, .L464+36
 5897 0296 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 5898 029a 002B     		cmp	r3, #0
 5899 029c 00F01382 		beq	.L453
1790:..\src/interruptions.c ****             g_emg_meas.add_emg[idx] = 0;
 5900              		.loc 1 1790 0 discriminator 3
 5901 02a0 094B     		ldr	r3, .L464+28
 5902 02a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5903 02a4 052B     		cmp	r3, #5
 5904 02a6 E8D9     		bls	.L380
1759:..\src/interruptions.c ****         // PSoC is powered through uUSB
 5905              		.loc 1 1759 0 is_stmt 1
 5906 02a8 0DE2     		b	.L453
 5907              	.L465:
 5908 02aa 00BF     		.align	2
 5909              	.L464:
 5910 02ac 00000000 		.word	interrupt_flag
 5911 02b0 00000000 		.word	ADC_buf
 5912 02b4 00000000 		.word	dev_tension
 5913 02b8 00000000 		.word	NUM_OF_ANALOG_INPUTS
 5914 02bc 06000000 		.word	first_tension_valid.10537
 5915 02c0 00000000 		.word	tension_valid
 5916 02c4 78010000 		.word	count.10538
 5917 02c8 7A010000 		.word	idx.10540
 5918 02cc 00000000 		.word	pow_tension
 5919 02d0 00000000 		.word	c_mem
 5920 02d4 00000000 		.word	g_ref
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 139


 5921 02d8 00000000 		.word	g_mem
 5922 02dc 00000000 		.word	g_meas
 5923 02e0 00000000 		.word	g_emg_meas
 5924              	.L369:
1792:..\src/interruptions.c ****         }
1793:..\src/interruptions.c ****         
1794:..\src/interruptions.c ****     }
1795:..\src/interruptions.c ****     else {
1796:..\src/interruptions.c ****         // PSoC is powered through battery or power source
1797:..\src/interruptions.c ****         // (at least > 7.36 V (92% of 8 V) that is minimum charge of smallest battery)
1798:..\src/interruptions.c ****         
1799:..\src/interruptions.c ****         // Read ADC sampled value of power source tension and motor current
1800:..\src/interruptions.c ****         
1801:..\src/interruptions.c ****         if (v_count == 1000 && !tension_valid){     // Voltage reading (Step 1)
 5925              		.loc 1 1801 0
 5926 02e4 9E4B     		ldr	r3, .L466
 5927 02e6 1B68     		ldr	r3, [r3]
 5928 02e8 B3F57A7F 		cmp	r3, #1000
 5929 02ec 0DD1     		bne	.L382
 5930              		.loc 1 1801 0 is_stmt 0 discriminator 1
 5931 02ee 9D4B     		ldr	r3, .L466+4
 5932 02f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5933 02f2 002B     		cmp	r3, #0
 5934 02f4 09D1     		bne	.L382
1802:..\src/interruptions.c ****             // After 1000 v_count cycles, dev_tension_f is stable
1803:..\src/interruptions.c ****             tension_valid = TRUE;   
 5935              		.loc 1 1803 0 is_stmt 1
 5936 02f6 9B4B     		ldr	r3, .L466+4
 5937 02f8 0122     		movs	r2, #1
 5938 02fa 1A70     		strb	r2, [r3]
1804:..\src/interruptions.c ****             count = 0;
 5939              		.loc 1 1804 0
 5940 02fc 9A4B     		ldr	r3, .L466+8
 5941 02fe 0022     		movs	r2, #0
 5942 0300 1A80     		strh	r2, [r3]	@ movhi
1805:..\src/interruptions.c ****             v_count = 0;
 5943              		.loc 1 1805 0
 5944 0302 974B     		ldr	r3, .L466
 5945 0304 0022     		movs	r2, #0
 5946 0306 1A60     		str	r2, [r3]
 5947 0308 2CE0     		b	.L383
 5948              	.L382:
1806:..\src/interruptions.c ****         }
1807:..\src/interruptions.c ****         else {  
1808:..\src/interruptions.c ****             // wait for battery voltage stabilization
1809:..\src/interruptions.c ****             if (v_count < 1000) {
 5949              		.loc 1 1809 0
 5950 030a 954B     		ldr	r3, .L466
 5951 030c 1B68     		ldr	r3, [r3]
 5952 030e B3F57A7F 		cmp	r3, #1000
 5953 0312 04D2     		bcs	.L384
1810:..\src/interruptions.c ****                 v_count = v_count + 1;
 5954              		.loc 1 1810 0
 5955 0314 924B     		ldr	r3, .L466
 5956 0316 1B68     		ldr	r3, [r3]
 5957 0318 0133     		adds	r3, r3, #1
 5958 031a 914A     		ldr	r2, .L466
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 140


 5959 031c 1360     		str	r3, [r2]
 5960              	.L384:
1811:..\src/interruptions.c ****             }
1812:..\src/interruptions.c ****             for(idx = 0; idx < NUM_OF_MOTORS; idx++) {
 5961              		.loc 1 1812 0
 5962 031e 934B     		ldr	r3, .L466+12
 5963 0320 0022     		movs	r2, #0
 5964 0322 1A70     		strb	r2, [r3]
 5965 0324 1AE0     		b	.L385
 5966              	.L386:
1813:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 5967              		.loc 1 1813 0 discriminator 3
 5968 0326 914B     		ldr	r3, .L466+12
 5969 0328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5970 032a 1C46     		mov	r4, r3
 5971 032c 8F4B     		ldr	r3, .L466+12
 5972 032e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5973 0330 1A46     		mov	r2, r3
 5974 0332 8F4B     		ldr	r3, .L466+16
 5975 0334 53F82200 		ldr	r0, [r3, r2, lsl #2]
 5976 0338 8C4B     		ldr	r3, .L466+12
 5977 033a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5978 033c DB00     		lsls	r3, r3, #3
 5979 033e 8D4A     		ldr	r2, .L466+20
 5980 0340 1344     		add	r3, r3, r2
 5981 0342 1946     		mov	r1, r3
 5982 0344 FFF7FEFF 		bl	filter
 5983 0348 0246     		mov	r2, r0
 5984 034a 8B4B     		ldr	r3, .L466+24
 5985 034c 43F82420 		str	r2, [r3, r4, lsl #2]
1812:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 5986              		.loc 1 1812 0 discriminator 3
 5987 0350 864B     		ldr	r3, .L466+12
 5988 0352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5989 0354 0133     		adds	r3, r3, #1
 5990 0356 DAB2     		uxtb	r2, r3
 5991 0358 844B     		ldr	r3, .L466+12
 5992 035a 1A70     		strb	r2, [r3]
 5993              	.L385:
1812:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 5994              		.loc 1 1812 0 is_stmt 0 discriminator 1
 5995 035c 834B     		ldr	r3, .L466+12
 5996 035e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5997 0360 012B     		cmp	r3, #1
 5998 0362 E0D9     		bls	.L386
 5999              	.L383:
1814:..\src/interruptions.c ****             }
1815:..\src/interruptions.c ****         }
1816:..\src/interruptions.c **** 
1817:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 6000              		.loc 1 1817 0 is_stmt 1
 6001 0364 814B     		ldr	r3, .L466+12
 6002 0366 0022     		movs	r2, #0
 6003 0368 1A70     		strb	r2, [r3]
 6004 036a 17E0     		b	.L387
 6005              	.L389:
1818:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 141


 6006              		.loc 1 1818 0
 6007 036c 7F4B     		ldr	r3, .L466+12
 6008 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6009 0370 1946     		mov	r1, r3
 6010 0372 824A     		ldr	r2, .L466+28
 6011 0374 0B46     		mov	r3, r1
 6012 0376 DB00     		lsls	r3, r3, #3
 6013 0378 5B1A     		subs	r3, r3, r1
 6014 037a 1B01     		lsls	r3, r3, #4
 6015 037c 1344     		add	r3, r3, r2
 6016 037e E133     		adds	r3, r3, #225
 6017 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6018 0382 002B     		cmp	r3, #0
 6019 0384 04D0     		beq	.L388
1819:..\src/interruptions.c ****                 pwm_limit_search(idx);                 //only for 12V motor
 6020              		.loc 1 1819 0
 6021 0386 794B     		ldr	r3, .L466+12
 6022 0388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6023 038a 1846     		mov	r0, r3
 6024 038c FFF7FEFF 		bl	pwm_limit_search
 6025              	.L388:
1817:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 6026              		.loc 1 1817 0 discriminator 2
 6027 0390 764B     		ldr	r3, .L466+12
 6028 0392 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6029 0394 0133     		adds	r3, r3, #1
 6030 0396 DAB2     		uxtb	r2, r3
 6031 0398 744B     		ldr	r3, .L466+12
 6032 039a 1A70     		strb	r2, [r3]
 6033              	.L387:
1817:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 6034              		.loc 1 1817 0 is_stmt 0 discriminator 1
 6035 039c 734B     		ldr	r3, .L466+12
 6036 039e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6037 03a0 012B     		cmp	r3, #1
 6038 03a2 E3D9     		bls	.L389
1820:..\src/interruptions.c ****         }
1821:..\src/interruptions.c ****         
1822:..\src/interruptions.c ****         // Filter and Set currents
1823:..\src/interruptions.c ****         if (g_mem.motor[0].motor_driver_type == DRIVER_MC33887) { // [GS]
 6039              		.loc 1 1823 0 is_stmt 1
 6040 03a4 754B     		ldr	r3, .L466+28
 6041 03a6 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 6042 03aa 002B     		cmp	r3, #0
 6043 03ac 22D1     		bne	.L390
1824:..\src/interruptions.c ****             g_meas[g_mem.motor[0].encoder_line].curr = filter((int16) (((int32)(ADC_buf[1] - 1648) 
 6044              		.loc 1 1824 0
 6045 03ae 734B     		ldr	r3, .L466+28
 6046 03b0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6047 03b4 1C46     		mov	r4, r3
 6048 03b6 724B     		ldr	r3, .L466+32
 6049 03b8 B3F90230 		ldrsh	r3, [r3, #2]
 6050 03bc A3F5CE63 		sub	r3, r3, #1648
 6051 03c0 45F66A02 		movw	r2, #22634
 6052 03c4 02FB03F3 		mul	r3, r2, r3
 6053 03c8 5B13     		asrs	r3, r3, #13
 6054 03ca 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 142


 6055 03cc 1A46     		mov	r2, r3
 6056 03ce 6D4B     		ldr	r3, .L466+36
 6057 03d0 93F90030 		ldrsb	r3, [r3]
 6058 03d4 03FB02F3 		mul	r3, r3, r2
 6059 03d8 6B49     		ldr	r1, .L466+40
 6060 03da 1846     		mov	r0, r3
 6061 03dc FFF7FEFF 		bl	filter
 6062 03e0 0146     		mov	r1, r0
 6063 03e2 6A4A     		ldr	r2, .L466+44
 6064 03e4 2346     		mov	r3, r4
 6065 03e6 5B00     		lsls	r3, r3, #1
 6066 03e8 2344     		add	r3, r3, r4
 6067 03ea 1B01     		lsls	r3, r3, #4
 6068 03ec 1344     		add	r3, r3, r2
 6069 03ee 0C33     		adds	r3, r3, #12
 6070 03f0 1960     		str	r1, [r3]
 6071 03f2 1CE0     		b	.L391
 6072              	.L390:
1825:..\src/interruptions.c ****         } else { // [GS]
1826:..\src/interruptions.c ****             g_meas[g_mem.motor[0].encoder_line].curr = ((int16) ((int32)((ADC_buf[1] - 1635) * 480)
 6073              		.loc 1 1826 0
 6074 03f4 614B     		ldr	r3, .L466+28
 6075 03f6 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6076 03fa 1846     		mov	r0, r3
 6077 03fc 604B     		ldr	r3, .L466+32
 6078 03fe B3F90230 		ldrsh	r3, [r3, #2]
 6079 0402 A3F26362 		subw	r2, r3, #1635
 6080 0406 1346     		mov	r3, r2
 6081 0408 1B01     		lsls	r3, r3, #4
 6082 040a 9B1A     		subs	r3, r3, r2
 6083 040c 5B01     		lsls	r3, r3, #5
 6084 040e 1B11     		asrs	r3, r3, #4
 6085 0410 1BB2     		sxth	r3, r3
 6086 0412 1A46     		mov	r2, r3
 6087 0414 5B4B     		ldr	r3, .L466+36
 6088 0416 93F90030 		ldrsb	r3, [r3]
 6089 041a 03FB02F2 		mul	r2, r3, r2
 6090 041e 5B49     		ldr	r1, .L466+44
 6091 0420 0346     		mov	r3, r0
 6092 0422 5B00     		lsls	r3, r3, #1
 6093 0424 0344     		add	r3, r3, r0
 6094 0426 1B01     		lsls	r3, r3, #4
 6095 0428 0B44     		add	r3, r3, r1
 6096 042a 0C33     		adds	r3, r3, #12
 6097 042c 1A60     		str	r2, [r3]
 6098              	.L391:
1827:..\src/interruptions.c ****         }  
1828:..\src/interruptions.c **** 
1829:..\src/interruptions.c ****         // Calculate current estimation and put it in the second part of the current measurement ar
1830:..\src/interruptions.c **** 		g_meas[g_mem.motor[0].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.motor[0].en
 6099              		.loc 1 1830 0
 6100 042e 534B     		ldr	r3, .L466+28
 6101 0430 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6102 0434 1D46     		mov	r5, r3
 6103 0436 514B     		ldr	r3, .L466+28
 6104 0438 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6105 043c 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 143


 6106 043e 534A     		ldr	r2, .L466+44
 6107 0440 0B46     		mov	r3, r1
 6108 0442 5B00     		lsls	r3, r3, #1
 6109 0444 0B44     		add	r3, r3, r1
 6110 0446 1B01     		lsls	r3, r3, #4
 6111 0448 1344     		add	r3, r3, r2
 6112 044a 0C33     		adds	r3, r3, #12
 6113 044c 1C68     		ldr	r4, [r3]
 6114 044e 4B4B     		ldr	r3, .L466+28
 6115 0450 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6116 0454 1946     		mov	r1, r3
 6117 0456 4D4A     		ldr	r2, .L466+44
 6118 0458 0B46     		mov	r3, r1
 6119 045a 5B00     		lsls	r3, r3, #1
 6120 045c 0B44     		add	r3, r3, r1
 6121 045e 1B01     		lsls	r3, r3, #4
 6122 0460 1344     		add	r3, r3, r2
 6123 0462 1A68     		ldr	r2, [r3]
 6124 0464 454B     		ldr	r3, .L466+28
 6125 0466 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6126 046a 1846     		mov	r0, r3
 6127 046c 4349     		ldr	r1, .L466+28
 6128 046e 0346     		mov	r3, r0
 6129 0470 5B00     		lsls	r3, r3, #1
 6130 0472 0344     		add	r3, r3, r0
 6131 0474 1B01     		lsls	r3, r3, #4
 6132 0476 0B44     		add	r3, r3, r1
 6133 0478 03F29513 		addw	r3, r3, #405
 6134 047c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6135 047e 42FA03F6 		asr	r6, r2, r3
 6136 0482 3E4B     		ldr	r3, .L466+28
 6137 0484 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6138 0488 1946     		mov	r1, r3
 6139 048a 404A     		ldr	r2, .L466+44
 6140 048c 0B46     		mov	r3, r1
 6141 048e 5B00     		lsls	r3, r3, #1
 6142 0490 0B44     		add	r3, r3, r1
 6143 0492 1B01     		lsls	r3, r3, #4
 6144 0494 1344     		add	r3, r3, r2
 6145 0496 1833     		adds	r3, r3, #24
 6146 0498 1A68     		ldr	r2, [r3]
 6147 049a 384B     		ldr	r3, .L466+28
 6148 049c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6149 04a0 1846     		mov	r0, r3
 6150 04a2 3649     		ldr	r1, .L466+28
 6151 04a4 0346     		mov	r3, r0
 6152 04a6 5B00     		lsls	r3, r3, #1
 6153 04a8 0344     		add	r3, r3, r0
 6154 04aa 1B01     		lsls	r3, r3, #4
 6155 04ac 0B44     		add	r3, r3, r1
 6156 04ae 03F29513 		addw	r3, r3, #405
 6157 04b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6158 04b4 42FA03FE 		asr	lr, r2, r3
 6159 04b8 354B     		ldr	r3, .L466+48
 6160 04ba 1A68     		ldr	r2, [r3]
 6161 04bc 2F4B     		ldr	r3, .L466+28
 6162 04be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 144


 6163 04c2 1846     		mov	r0, r3
 6164 04c4 2D49     		ldr	r1, .L466+28
 6165 04c6 0346     		mov	r3, r0
 6166 04c8 5B00     		lsls	r3, r3, #1
 6167 04ca 0344     		add	r3, r3, r0
 6168 04cc 1B01     		lsls	r3, r3, #4
 6169 04ce 0B44     		add	r3, r3, r1
 6170 04d0 03F29513 		addw	r3, r3, #405
 6171 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6172 04d6 42FA03F3 		asr	r3, r2, r3
 6173 04da 7246     		mov	r2, lr
 6174 04dc 3146     		mov	r1, r6
 6175 04de 0020     		movs	r0, #0
 6176 04e0 FFF7FEFF 		bl	curr_estim
 6177 04e4 0346     		mov	r3, r0
 6178 04e6 E31A     		subs	r3, r4, r3
 6179 04e8 2A49     		ldr	r1, .L466+52
 6180 04ea 1846     		mov	r0, r3
 6181 04ec FFF7FEFF 		bl	filter
 6182 04f0 0346     		mov	r3, r0
 6183 04f2 1BB2     		sxth	r3, r3
 6184 04f4 1946     		mov	r1, r3
 6185 04f6 254A     		ldr	r2, .L466+44
 6186 04f8 2B46     		mov	r3, r5
 6187 04fa 5B00     		lsls	r3, r3, #1
 6188 04fc 2B44     		add	r3, r3, r5
 6189 04fe 1B01     		lsls	r3, r3, #4
 6190 0500 1344     		add	r3, r3, r2
 6191 0502 1033     		adds	r3, r3, #16
 6192 0504 1960     		str	r1, [r3]
1831:..\src/interruptions.c ****         
1832:..\src/interruptions.c ****         // Read also 2nd power current (if necessary)
1833:..\src/interruptions.c ****         if (NUM_OF_ANALOG_INPUTS > 4) {
 6193              		.loc 1 1833 0
 6194 0506 244B     		ldr	r3, .L466+56
 6195 0508 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6196 050a 042B     		cmp	r3, #4
 6197 050c 40F2D180 		bls	.L392
1834:..\src/interruptions.c ****             // Filter and Set currents
1835:..\src/interruptions.c ****             if (g_mem.motor[1].motor_driver_type == DRIVER_MC33887) { // [GS]
 6198              		.loc 1 1835 0
 6199 0510 1A4B     		ldr	r3, .L466+28
 6200 0512 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 6201 0516 002B     		cmp	r3, #0
 6202 0518 42D1     		bne	.L393
1836:..\src/interruptions.c ****                 g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] - 16
 6203              		.loc 1 1836 0
 6204 051a 184B     		ldr	r3, .L466+28
 6205 051c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6206 0520 1C46     		mov	r4, r3
 6207 0522 174B     		ldr	r3, .L466+32
 6208 0524 B3F90A30 		ldrsh	r3, [r3, #10]
 6209 0528 A3F5CE63 		sub	r3, r3, #1648
 6210 052c 45F66A02 		movw	r2, #22634
 6211 0530 02FB03F3 		mul	r3, r2, r3
 6212 0534 5B13     		asrs	r3, r3, #13
 6213 0536 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 145


 6214 0538 1A46     		mov	r2, r3
 6215 053a 124B     		ldr	r3, .L466+36
 6216 053c 93F90030 		ldrsb	r3, [r3]
 6217 0540 03FB02F3 		mul	r3, r3, r2
 6218 0544 1549     		ldr	r1, .L466+60
 6219 0546 1846     		mov	r0, r3
 6220 0548 FFF7FEFF 		bl	filter
 6221 054c 0146     		mov	r1, r0
 6222 054e 0F4A     		ldr	r2, .L466+44
 6223 0550 2346     		mov	r3, r4
 6224 0552 5B00     		lsls	r3, r3, #1
 6225 0554 2344     		add	r3, r3, r4
 6226 0556 1B01     		lsls	r3, r3, #4
 6227 0558 1344     		add	r3, r3, r2
 6228 055a 0C33     		adds	r3, r3, #12
 6229 055c 1960     		str	r1, [r3]
 6230 055e 3CE0     		b	.L394
 6231              	.L467:
 6232              		.align	2
 6233              	.L466:
 6234 0560 7C010000 		.word	v_count.10539
 6235 0564 00000000 		.word	tension_valid
 6236 0568 78010000 		.word	count.10538
 6237 056c 7A010000 		.word	idx.10540
 6238 0570 00000000 		.word	dev_tension
 6239 0574 00000000 		.word	filt_v
 6240 0578 00000000 		.word	dev_tension_f
 6241 057c 00000000 		.word	g_mem
 6242 0580 00000000 		.word	ADC_buf
 6243 0584 00000000 		.word	pwm_sign
 6244 0588 00000000 		.word	filt_i
 6245 058c 00000000 		.word	g_meas
 6246 0590 00000000 		.word	g_ref
 6247 0594 00000000 		.word	filt_curr_diff
 6248 0598 00000000 		.word	NUM_OF_ANALOG_INPUTS
 6249 059c 08000000 		.word	filt_i+8
 6250              	.L393:
1837:..\src/interruptions.c ****             } else { // [GS]
1838:..\src/interruptions.c ****                 g_meas[g_mem.motor[1].encoder_line].curr = ((int16) ((int32)((ADC_buf[5] - 1635) * 
 6251              		.loc 1 1838 0
 6252 05a0 BC4B     		ldr	r3, .L468
 6253 05a2 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6254 05a6 1846     		mov	r0, r3
 6255 05a8 BB4B     		ldr	r3, .L468+4
 6256 05aa B3F90A30 		ldrsh	r3, [r3, #10]
 6257 05ae A3F26362 		subw	r2, r3, #1635
 6258 05b2 1346     		mov	r3, r2
 6259 05b4 1B01     		lsls	r3, r3, #4
 6260 05b6 9B1A     		subs	r3, r3, r2
 6261 05b8 5B01     		lsls	r3, r3, #5
 6262 05ba 1B11     		asrs	r3, r3, #4
 6263 05bc 1BB2     		sxth	r3, r3
 6264 05be 1A46     		mov	r2, r3
 6265 05c0 B64B     		ldr	r3, .L468+8
 6266 05c2 93F90030 		ldrsb	r3, [r3]
 6267 05c6 03FB02F2 		mul	r2, r3, r2
 6268 05ca B549     		ldr	r1, .L468+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 146


 6269 05cc 0346     		mov	r3, r0
 6270 05ce 5B00     		lsls	r3, r3, #1
 6271 05d0 0344     		add	r3, r3, r0
 6272 05d2 1B01     		lsls	r3, r3, #4
 6273 05d4 0B44     		add	r3, r3, r1
 6274 05d6 0C33     		adds	r3, r3, #12
 6275 05d8 1A60     		str	r2, [r3]
 6276              	.L394:
1839:..\src/interruptions.c ****             }  
1840:..\src/interruptions.c ****             //g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] - 1648
1841:..\src/interruptions.c ****             
1842:..\src/interruptions.c ****             g_meas[g_mem.motor[1].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.m
 6277              		.loc 1 1842 0
 6278 05da AE4B     		ldr	r3, .L468
 6279 05dc 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6280 05e0 1D46     		mov	r5, r3
 6281 05e2 AC4B     		ldr	r3, .L468
 6282 05e4 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6283 05e8 1946     		mov	r1, r3
 6284 05ea AD4A     		ldr	r2, .L468+12
 6285 05ec 0B46     		mov	r3, r1
 6286 05ee 5B00     		lsls	r3, r3, #1
 6287 05f0 0B44     		add	r3, r3, r1
 6288 05f2 1B01     		lsls	r3, r3, #4
 6289 05f4 1344     		add	r3, r3, r2
 6290 05f6 0C33     		adds	r3, r3, #12
 6291 05f8 1C68     		ldr	r4, [r3]
 6292 05fa A64B     		ldr	r3, .L468
 6293 05fc 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6294 0600 1946     		mov	r1, r3
 6295 0602 A74A     		ldr	r2, .L468+12
 6296 0604 0B46     		mov	r3, r1
 6297 0606 5B00     		lsls	r3, r3, #1
 6298 0608 0B44     		add	r3, r3, r1
 6299 060a 1B01     		lsls	r3, r3, #4
 6300 060c 1344     		add	r3, r3, r2
 6301 060e 1A68     		ldr	r2, [r3]
 6302 0610 A04B     		ldr	r3, .L468
 6303 0612 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6304 0616 1846     		mov	r0, r3
 6305 0618 9E49     		ldr	r1, .L468
 6306 061a 0346     		mov	r3, r0
 6307 061c 5B00     		lsls	r3, r3, #1
 6308 061e 0344     		add	r3, r3, r0
 6309 0620 1B01     		lsls	r3, r3, #4
 6310 0622 0B44     		add	r3, r3, r1
 6311 0624 03F29513 		addw	r3, r3, #405
 6312 0628 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6313 062a 42FA03F6 		asr	r6, r2, r3
 6314 062e 994B     		ldr	r3, .L468
 6315 0630 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6316 0634 1946     		mov	r1, r3
 6317 0636 9A4A     		ldr	r2, .L468+12
 6318 0638 0B46     		mov	r3, r1
 6319 063a 5B00     		lsls	r3, r3, #1
 6320 063c 0B44     		add	r3, r3, r1
 6321 063e 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 147


 6322 0640 1344     		add	r3, r3, r2
 6323 0642 1833     		adds	r3, r3, #24
 6324 0644 1A68     		ldr	r2, [r3]
 6325 0646 934B     		ldr	r3, .L468
 6326 0648 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6327 064c 1846     		mov	r0, r3
 6328 064e 9149     		ldr	r1, .L468
 6329 0650 0346     		mov	r3, r0
 6330 0652 5B00     		lsls	r3, r3, #1
 6331 0654 0344     		add	r3, r3, r0
 6332 0656 1B01     		lsls	r3, r3, #4
 6333 0658 0B44     		add	r3, r3, r1
 6334 065a 03F29513 		addw	r3, r3, #405
 6335 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6336 0660 42FA03FE 		asr	lr, r2, r3
 6337 0664 8F4B     		ldr	r3, .L468+16
 6338 0666 1A69     		ldr	r2, [r3, #16]
 6339 0668 8A4B     		ldr	r3, .L468
 6340 066a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6341 066e 1846     		mov	r0, r3
 6342 0670 8849     		ldr	r1, .L468
 6343 0672 0346     		mov	r3, r0
 6344 0674 5B00     		lsls	r3, r3, #1
 6345 0676 0344     		add	r3, r3, r0
 6346 0678 1B01     		lsls	r3, r3, #4
 6347 067a 0B44     		add	r3, r3, r1
 6348 067c 03F29513 		addw	r3, r3, #405
 6349 0680 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6350 0682 42FA03F3 		asr	r3, r2, r3
 6351 0686 7246     		mov	r2, lr
 6352 0688 3146     		mov	r1, r6
 6353 068a 0120     		movs	r0, #1
 6354 068c FFF7FEFF 		bl	curr_estim
 6355 0690 0346     		mov	r3, r0
 6356 0692 E31A     		subs	r3, r4, r3
 6357 0694 8449     		ldr	r1, .L468+20
 6358 0696 1846     		mov	r0, r3
 6359 0698 FFF7FEFF 		bl	filter
 6360 069c 0346     		mov	r3, r0
 6361 069e 1BB2     		sxth	r3, r3
 6362 06a0 1946     		mov	r1, r3
 6363 06a2 7F4A     		ldr	r2, .L468+12
 6364 06a4 2B46     		mov	r3, r5
 6365 06a6 5B00     		lsls	r3, r3, #1
 6366 06a8 2B44     		add	r3, r3, r5
 6367 06aa 1B01     		lsls	r3, r3, #4
 6368 06ac 1344     		add	r3, r3, r2
 6369 06ae 1033     		adds	r3, r3, #16
 6370 06b0 1960     		str	r1, [r3]
 6371              	.L392:
1843:..\src/interruptions.c ****         }
1844:..\src/interruptions.c ****     
1845:..\src/interruptions.c ****         // Check Interrupt 
1846:..\src/interruptions.c ****     
1847:..\src/interruptions.c ****         if (interrupt_flag){
 6372              		.loc 1 1847 0
 6373 06b2 7E4B     		ldr	r3, .L468+24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 148


 6374 06b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6375 06b6 002B     		cmp	r3, #0
 6376 06b8 06D0     		beq	.L381
1848:..\src/interruptions.c ****             interrupt_flag = FALSE;
 6377              		.loc 1 1848 0
 6378 06ba 7C4B     		ldr	r3, .L468+24
 6379 06bc 0022     		movs	r2, #0
 6380 06be 1A70     		strb	r2, [r3]
1849:..\src/interruptions.c ****             interrupt_manager();
 6381              		.loc 1 1849 0
 6382 06c0 FFF7FEFF 		bl	interrupt_manager
 6383 06c4 00E0     		b	.L381
 6384              	.L453:
1759:..\src/interruptions.c ****         // PSoC is powered through uUSB
 6385              		.loc 1 1759 0
 6386 06c6 00BF     		nop
 6387              	.L381:
1850:..\src/interruptions.c ****         }
1851:..\src/interruptions.c **** 
1852:..\src/interruptions.c ****     }
1853:..\src/interruptions.c ****     
1854:..\src/interruptions.c ****     // Read EMG (always even if the board is not powered)
1855:..\src/interruptions.c ****         
1856:..\src/interruptions.c ****     // if calibration is not needed go to "normal execution"
1857:..\src/interruptions.c ****     if (!c_mem.emg.emg_calibration_flag){
 6388              		.loc 1 1857 0
 6389 06c8 794B     		ldr	r3, .L468+28
 6390 06ca 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 6391 06ce 002B     		cmp	r3, #0
 6392 06d0 05D1     		bne	.L395
1858:..\src/interruptions.c ****         emg_1_status = NORMAL; // normal execution
 6393              		.loc 1 1858 0
 6394 06d2 784B     		ldr	r3, .L468+32
 6395 06d4 0022     		movs	r2, #0
 6396 06d6 1A70     		strb	r2, [r3]
1859:..\src/interruptions.c ****         emg_2_status = NORMAL; // normal execution
 6397              		.loc 1 1859 0
 6398 06d8 774B     		ldr	r3, .L468+36
 6399 06da 0022     		movs	r2, #0
 6400 06dc 1A70     		strb	r2, [r3]
 6401              	.L395:
1860:..\src/interruptions.c ****     }
1861:..\src/interruptions.c **** 
1862:..\src/interruptions.c ****     // EMG 1 calibration state machine
1863:..\src/interruptions.c ****    
1864:..\src/interruptions.c ****     // Calibration state machine
1865:..\src/interruptions.c ****     switch(emg_1_status) {
 6402              		.loc 1 1865 0
 6403 06de 754B     		ldr	r3, .L468+32
 6404 06e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6405 06e2 032B     		cmp	r3, #3
 6406 06e4 00F2CF80 		bhi	.L454
 6407 06e8 01A2     		adr	r2, .L398
 6408 06ea 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6409 06ee 00BF     		.p2align 2
 6410              	.L398:
 6411 06f0 01070000 		.word	.L397+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 149


 6412 06f4 8B070000 		.word	.L399+1
 6413 06f8 A1070000 		.word	.L400+1
 6414 06fc DD070000 		.word	.L401+1
 6415              		.p2align 1
 6416              	.L397:
1866:..\src/interruptions.c ****         case NORMAL: // normal execution
1867:..\src/interruptions.c ****             i_aux = ((int32)(ADC_buf[2 + c_mem.emg.switch_emg] - 1639) * 87) >> 5;  //map range to 
 6417              		.loc 1 1867 0
 6418 0700 6B4B     		ldr	r3, .L468+28
 6419 0702 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6420 0706 0233     		adds	r3, r3, #2
 6421 0708 634A     		ldr	r2, .L468+4
 6422 070a 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6423 070e A3F26763 		subw	r3, r3, #1639
 6424 0712 5722     		movs	r2, #87
 6425 0714 02FB03F3 		mul	r3, r2, r3
 6426 0718 5B11     		asrs	r3, r3, #5
 6427 071a 7B60     		str	r3, [r7, #4]
1868:..\src/interruptions.c ****             //i_aux = (int32)(ADC_buf[2 + c_mem.switch_emg]);
1869:..\src/interruptions.c ****             if (i_aux < 0) 
 6428              		.loc 1 1869 0
 6429 071c 7B68     		ldr	r3, [r7, #4]
 6430 071e 002B     		cmp	r3, #0
 6431 0720 01DA     		bge	.L402
1870:..\src/interruptions.c ****                 i_aux = 0;
 6432              		.loc 1 1870 0
 6433 0722 0023     		movs	r3, #0
 6434 0724 7B60     		str	r3, [r7, #4]
 6435              	.L402:
1871:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[0]);
 6436              		.loc 1 1871 0
 6437 0726 6549     		ldr	r1, .L468+40
 6438 0728 7868     		ldr	r0, [r7, #4]
 6439 072a FFF7FEFF 		bl	filter
 6440 072e 7860     		str	r0, [r7, #4]
1872:..\src/interruptions.c ****             i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[0];
 6441              		.loc 1 1872 0
 6442 0730 7B68     		ldr	r3, [r7, #4]
 6443 0732 9B02     		lsls	r3, r3, #10
 6444 0734 1A46     		mov	r2, r3
 6445 0736 574B     		ldr	r3, .L468
 6446 0738 D3F8F431 		ldr	r3, [r3, #500]
 6447 073c B2FBF3F3 		udiv	r3, r2, r3
 6448 0740 7B60     		str	r3, [r7, #4]
1873:..\src/interruptions.c **** 
1874:..\src/interruptions.c ****             if (interrupt_flag){
 6449              		.loc 1 1874 0
 6450 0742 5A4B     		ldr	r3, .L468+24
 6451 0744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6452 0746 002B     		cmp	r3, #0
 6453 0748 04D0     		beq	.L403
1875:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6454              		.loc 1 1875 0
 6455 074a 584B     		ldr	r3, .L468+24
 6456 074c 0022     		movs	r2, #0
 6457 074e 1A70     		strb	r2, [r3]
1876:..\src/interruptions.c ****                 interrupt_manager();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 150


 6458              		.loc 1 1876 0
 6459 0750 FFF7FEFF 		bl	interrupt_manager
 6460              	.L403:
1877:..\src/interruptions.c ****             }
1878:..\src/interruptions.c ****             //Saturation
1879:..\src/interruptions.c ****             if (i_aux < 0)
 6461              		.loc 1 1879 0
 6462 0754 7B68     		ldr	r3, [r7, #4]
 6463 0756 002B     		cmp	r3, #0
 6464 0758 02DA     		bge	.L404
1880:..\src/interruptions.c ****                 i_aux = 0;
 6465              		.loc 1 1880 0
 6466 075a 0023     		movs	r3, #0
 6467 075c 7B60     		str	r3, [r7, #4]
 6468 075e 06E0     		b	.L405
 6469              	.L404:
1881:..\src/interruptions.c ****             else 
1882:..\src/interruptions.c ****                 if (i_aux > 1024) 
 6470              		.loc 1 1882 0
 6471 0760 7B68     		ldr	r3, [r7, #4]
 6472 0762 B3F5806F 		cmp	r3, #1024
 6473 0766 02DD     		ble	.L405
1883:..\src/interruptions.c ****                     i_aux = 1024;
 6474              		.loc 1 1883 0
 6475 0768 4FF48063 		mov	r3, #1024
 6476 076c 7B60     		str	r3, [r7, #4]
 6477              	.L405:
1884:..\src/interruptions.c ****             
1885:..\src/interruptions.c ****             g_emg_meas.emg[0] = i_aux;
 6478              		.loc 1 1885 0
 6479 076e 544A     		ldr	r2, .L468+44
 6480 0770 7B68     		ldr	r3, [r7, #4]
 6481 0772 1360     		str	r3, [r2]
1886:..\src/interruptions.c **** 
1887:..\src/interruptions.c ****             if (interrupt_flag){
 6482              		.loc 1 1887 0
 6483 0774 4D4B     		ldr	r3, .L468+24
 6484 0776 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6485 0778 002B     		cmp	r3, #0
 6486 077a 00F08680 		beq	.L455
1888:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6487              		.loc 1 1888 0
 6488 077e 4B4B     		ldr	r3, .L468+24
 6489 0780 0022     		movs	r2, #0
 6490 0782 1A70     		strb	r2, [r3]
1889:..\src/interruptions.c ****                 interrupt_manager();
 6491              		.loc 1 1889 0
 6492 0784 FFF7FEFF 		bl	interrupt_manager
1890:..\src/interruptions.c ****             }
1891:..\src/interruptions.c ****             
1892:..\src/interruptions.c ****             break;
 6493              		.loc 1 1892 0
 6494 0788 7FE0     		b	.L455
 6495              	.L399:
1893:..\src/interruptions.c **** 
1894:..\src/interruptions.c ****         case RESET: // reset variables
1895:..\src/interruptions.c ****             emg_counter_1 = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 151


 6496              		.loc 1 1895 0
 6497 078a 4E4B     		ldr	r3, .L468+48
 6498 078c 0022     		movs	r2, #0
 6499 078e 1A80     		strh	r2, [r3]	@ movhi
1896:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] = 0;
 6500              		.loc 1 1896 0
 6501 0790 404B     		ldr	r3, .L468
 6502 0792 0022     		movs	r2, #0
 6503 0794 C3F8F421 		str	r2, [r3, #500]
1897:..\src/interruptions.c ****             emg_1_status = DISCARD; // goto next status  
 6504              		.loc 1 1897 0
 6505 0798 464B     		ldr	r3, .L468+32
 6506 079a 0222     		movs	r2, #2
 6507 079c 1A70     		strb	r2, [r3]
1898:..\src/interruptions.c ****             break;
 6508              		.loc 1 1898 0
 6509 079e 96E0     		b	.L407
 6510              	.L400:
1899:..\src/interruptions.c **** 
1900:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1901:..\src/interruptions.c ****             emg_counter_1++;
 6511              		.loc 1 1901 0
 6512 07a0 484B     		ldr	r3, .L468+48
 6513 07a2 1B88     		ldrh	r3, [r3]
 6514 07a4 0133     		adds	r3, r3, #1
 6515 07a6 9AB2     		uxth	r2, r3
 6516 07a8 464B     		ldr	r3, .L468+48
 6517 07aa 1A80     		strh	r2, [r3]	@ movhi
1902:..\src/interruptions.c ****             if (emg_counter_1 == EMG_SAMPLE_TO_DISCARD) {
 6518              		.loc 1 1902 0
 6519 07ac 454B     		ldr	r3, .L468+48
 6520 07ae 1B88     		ldrh	r3, [r3]
 6521 07b0 B3F5FA7F 		cmp	r3, #500
 6522 07b4 6BD1     		bne	.L456
1903:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 6523              		.loc 1 1903 0
 6524 07b6 434B     		ldr	r3, .L468+48
 6525 07b8 0022     		movs	r2, #0
 6526 07ba 1A80     		strh	r2, [r3]	@ movhi
1904:..\src/interruptions.c ****                 LED_control(1);
 6527              		.loc 1 1904 0
 6528 07bc 0120     		movs	r0, #1
 6529 07be FFF7FEFF 		bl	LED_control
1905:..\src/interruptions.c **** 				
1906:..\src/interruptions.c ****                 if (interrupt_flag){
 6530              		.loc 1 1906 0
 6531 07c2 3A4B     		ldr	r3, .L468+24
 6532 07c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6533 07c6 002B     		cmp	r3, #0
 6534 07c8 04D0     		beq	.L409
1907:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6535              		.loc 1 1907 0
 6536 07ca 384B     		ldr	r3, .L468+24
 6537 07cc 0022     		movs	r2, #0
 6538 07ce 1A70     		strb	r2, [r3]
1908:..\src/interruptions.c ****                     interrupt_manager();
 6539              		.loc 1 1908 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 152


 6540 07d0 FFF7FEFF 		bl	interrupt_manager
 6541              	.L409:
1909:..\src/interruptions.c ****                 }
1910:..\src/interruptions.c ****                 
1911:..\src/interruptions.c ****                 emg_1_status = SUM_AND_MEAN;    // sum and mean status
 6542              		.loc 1 1911 0
 6543 07d4 374B     		ldr	r3, .L468+32
 6544 07d6 0322     		movs	r2, #3
 6545 07d8 1A70     		strb	r2, [r3]
1912:..\src/interruptions.c ****             }
1913:..\src/interruptions.c ****             break;
 6546              		.loc 1 1913 0
 6547 07da 58E0     		b	.L456
 6548              	.L401:
1914:..\src/interruptions.c **** 
1915:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1916:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1917:..\src/interruptions.c ****             emg_counter_1++;
 6549              		.loc 1 1917 0
 6550 07dc 394B     		ldr	r3, .L468+48
 6551 07de 1B88     		ldrh	r3, [r3]
 6552 07e0 0133     		adds	r3, r3, #1
 6553 07e2 9AB2     		uxth	r2, r3
 6554 07e4 374B     		ldr	r3, .L468+48
 6555 07e6 1A80     		strh	r2, [r3]	@ movhi
1918:..\src/interruptions.c ****             if (ADC_buf[2 + c_mem.emg.switch_emg] < 0) 
 6556              		.loc 1 1918 0
 6557 07e8 314B     		ldr	r3, .L468+28
 6558 07ea 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6559 07ee 0233     		adds	r3, r3, #2
 6560 07f0 294A     		ldr	r2, .L468+4
 6561 07f2 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6562 07f6 002B     		cmp	r3, #0
 6563 07f8 07DA     		bge	.L410
1919:..\src/interruptions.c ****                 ADC_buf[2 + c_mem.emg.switch_emg] = 0;
 6564              		.loc 1 1919 0
 6565 07fa 2D4B     		ldr	r3, .L468+28
 6566 07fc 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6567 0800 0233     		adds	r3, r3, #2
 6568 0802 254A     		ldr	r2, .L468+4
 6569 0804 0021     		movs	r1, #0
 6570 0806 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 6571              	.L410:
1920:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] += filter((int32)ADC_buf[2 + c_mem.emg.switch_emg], &filt_em
 6572              		.loc 1 1920 0
 6573 080a 294B     		ldr	r3, .L468+28
 6574 080c 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6575 0810 0233     		adds	r3, r3, #2
 6576 0812 214A     		ldr	r2, .L468+4
 6577 0814 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6578 0818 2849     		ldr	r1, .L468+40
 6579 081a 1846     		mov	r0, r3
 6580 081c FFF7FEFF 		bl	filter
 6581 0820 0246     		mov	r2, r0
 6582 0822 1C4B     		ldr	r3, .L468
 6583 0824 D3F8F431 		ldr	r3, [r3, #500]
 6584 0828 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 153


 6585 082a 1A4A     		ldr	r2, .L468
 6586 082c C2F8F431 		str	r3, [r2, #500]
1921:..\src/interruptions.c ****             
1922:..\src/interruptions.c ****             if (interrupt_flag){
 6587              		.loc 1 1922 0
 6588 0830 1E4B     		ldr	r3, .L468+24
 6589 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6590 0834 002B     		cmp	r3, #0
 6591 0836 04D0     		beq	.L411
1923:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6592              		.loc 1 1923 0
 6593 0838 1C4B     		ldr	r3, .L468+24
 6594 083a 0022     		movs	r2, #0
 6595 083c 1A70     		strb	r2, [r3]
1924:..\src/interruptions.c ****                 interrupt_manager();
 6596              		.loc 1 1924 0
 6597 083e FFF7FEFF 		bl	interrupt_manager
 6598              	.L411:
1925:..\src/interruptions.c ****             }
1926:..\src/interruptions.c ****             
1927:..\src/interruptions.c ****             if (emg_counter_1 == SAMPLES_FOR_EMG_MEAN) {
 6599              		.loc 1 1927 0
 6600 0842 204B     		ldr	r3, .L468+48
 6601 0844 1B88     		ldrh	r3, [r3]
 6602 0846 B3F57A7F 		cmp	r3, #1000
 6603 084a 3FD1     		bne	.L457
1928:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[0] = g_mem.emg.emg_max_value[0] / SAMPLES_FOR_EMG_MEAN; // 
 6604              		.loc 1 1928 0
 6605 084c 114B     		ldr	r3, .L468
 6606 084e D3F8F431 		ldr	r3, [r3, #500]
 6607 0852 1D4A     		ldr	r2, .L468+52
 6608 0854 A2FB0323 		umull	r2, r3, r2, r3
 6609 0858 9B09     		lsrs	r3, r3, #6
 6610 085a 0E4A     		ldr	r2, .L468
 6611 085c C2F8F431 		str	r3, [r2, #500]
1929:..\src/interruptions.c **** 
1930:..\src/interruptions.c ****                 if (interrupt_flag){
 6612              		.loc 1 1930 0
 6613 0860 124B     		ldr	r3, .L468+24
 6614 0862 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6615 0864 002B     		cmp	r3, #0
 6616 0866 04D0     		beq	.L413
1931:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6617              		.loc 1 1931 0
 6618 0868 104B     		ldr	r3, .L468+24
 6619 086a 0022     		movs	r2, #0
 6620 086c 1A70     		strb	r2, [r3]
1932:..\src/interruptions.c ****                     interrupt_manager();
 6621              		.loc 1 1932 0
 6622 086e FFF7FEFF 		bl	interrupt_manager
 6623              	.L413:
1933:..\src/interruptions.c ****                 }                    
1934:..\src/interruptions.c ****                 
1935:..\src/interruptions.c ****                 LED_control(0);
 6624              		.loc 1 1935 0
 6625 0872 0020     		movs	r0, #0
 6626 0874 FFF7FEFF 		bl	LED_control
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 154


1936:..\src/interruptions.c **** 				
1937:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 6627              		.loc 1 1937 0
 6628 0878 124B     		ldr	r3, .L468+48
 6629 087a 0022     		movs	r2, #0
 6630 087c 1A80     		strh	r2, [r3]	@ movhi
1938:..\src/interruptions.c **** 
1939:..\src/interruptions.c ****                 emg_1_status = NORMAL;      // goto normal execution
 6631              		.loc 1 1939 0
 6632 087e 0D4B     		ldr	r3, .L468+32
 6633 0880 0022     		movs	r2, #0
 6634 0882 1A70     		strb	r2, [r3]
1940:..\src/interruptions.c ****             }
1941:..\src/interruptions.c ****             break;
 6635              		.loc 1 1941 0
 6636 0884 22E0     		b	.L457
 6637              	.L454:
1942:..\src/interruptions.c **** 
1943:..\src/interruptions.c ****         default:
1944:..\src/interruptions.c ****             break;
 6638              		.loc 1 1944 0
 6639 0886 00BF     		nop
 6640 0888 21E0     		b	.L407
 6641              	.L455:
1892:..\src/interruptions.c **** 
 6642              		.loc 1 1892 0
 6643 088a 00BF     		nop
 6644 088c 1FE0     		b	.L407
 6645              	.L456:
1913:..\src/interruptions.c **** 
 6646              		.loc 1 1913 0
 6647 088e 00BF     		nop
 6648 0890 1DE0     		b	.L407
 6649              	.L469:
 6650 0892 00BF     		.align	2
 6651              	.L468:
 6652 0894 00000000 		.word	g_mem
 6653 0898 00000000 		.word	ADC_buf
 6654 089c 00000000 		.word	pwm_sign
 6655 08a0 00000000 		.word	g_meas
 6656 08a4 00000000 		.word	g_ref
 6657 08a8 08000000 		.word	filt_curr_diff+8
 6658 08ac 00000000 		.word	interrupt_flag
 6659 08b0 00000000 		.word	c_mem
 6660 08b4 00000000 		.word	emg_1_status
 6661 08b8 00000000 		.word	emg_2_status
 6662 08bc 00000000 		.word	filt_emg
 6663 08c0 00000000 		.word	g_emg_meas
 6664 08c4 80010000 		.word	emg_counter_1.10535
 6665 08c8 D34D6210 		.word	274877907
 6666              	.L457:
1941:..\src/interruptions.c **** 
 6667              		.loc 1 1941 0
 6668 08cc 00BF     		nop
 6669              	.L407:
1945:..\src/interruptions.c ****     }
1946:..\src/interruptions.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 155


1947:..\src/interruptions.c ****     if (interrupt_flag){
 6670              		.loc 1 1947 0
 6671 08ce 854B     		ldr	r3, .L470
 6672 08d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6673 08d2 002B     		cmp	r3, #0
 6674 08d4 04D0     		beq	.L414
1948:..\src/interruptions.c ****         interrupt_flag = FALSE;
 6675              		.loc 1 1948 0
 6676 08d6 834B     		ldr	r3, .L470
 6677 08d8 0022     		movs	r2, #0
 6678 08da 1A70     		strb	r2, [r3]
1949:..\src/interruptions.c ****         interrupt_manager();
 6679              		.loc 1 1949 0
 6680 08dc FFF7FEFF 		bl	interrupt_manager
 6681              	.L414:
1950:..\src/interruptions.c ****     }
1951:..\src/interruptions.c ****     // EMG 2 calibration state machine
1952:..\src/interruptions.c ****     switch(emg_2_status) {
 6682              		.loc 1 1952 0
 6683 08e0 814B     		ldr	r3, .L470+4
 6684 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6685 08e4 052B     		cmp	r3, #5
 6686 08e6 00F2A681 		bhi	.L458
 6687 08ea 01A2     		adr	r2, .L417
 6688 08ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6689              		.p2align 2
 6690              	.L417:
 6691 08f0 09090000 		.word	.L416+1
 6692 08f4 81090000 		.word	.L418+1
 6693 08f8 A9090000 		.word	.L419+1
 6694 08fc E7090000 		.word	.L420+1
 6695 0900 990A0000 		.word	.L421+1
 6696 0904 AB0A0000 		.word	.L422+1
 6697              		.p2align 1
 6698              	.L416:
1953:..\src/interruptions.c ****         case NORMAL: // normal execution
1954:..\src/interruptions.c ****             i_aux = ((int32)(ADC_buf[3 - c_mem.emg.switch_emg] - 1640) * 87) >> 5;  //map range to 
 6699              		.loc 1 1954 0
 6700 0908 784B     		ldr	r3, .L470+8
 6701 090a 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6702 090e C3F10303 		rsb	r3, r3, #3
 6703 0912 774A     		ldr	r2, .L470+12
 6704 0914 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6705 0918 A3F5CD63 		sub	r3, r3, #1640
 6706 091c 5722     		movs	r2, #87
 6707 091e 02FB03F3 		mul	r3, r2, r3
 6708 0922 5B11     		asrs	r3, r3, #5
 6709 0924 7B60     		str	r3, [r7, #4]
1955:..\src/interruptions.c ****             //i_aux = (int32)(ADC_buf[3 - c_mem.switch_emg]);
1956:..\src/interruptions.c ****                 if (i_aux < 0)
 6710              		.loc 1 1956 0
 6711 0926 7B68     		ldr	r3, [r7, #4]
 6712 0928 002B     		cmp	r3, #0
 6713 092a 01DA     		bge	.L423
1957:..\src/interruptions.c ****                     i_aux = 0;
 6714              		.loc 1 1957 0
 6715 092c 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 156


 6716 092e 7B60     		str	r3, [r7, #4]
 6717              	.L423:
1958:..\src/interruptions.c ****                 i_aux = filter(i_aux, &filt_emg[1]);
 6718              		.loc 1 1958 0
 6719 0930 7049     		ldr	r1, .L470+16
 6720 0932 7868     		ldr	r0, [r7, #4]
 6721 0934 FFF7FEFF 		bl	filter
 6722 0938 7860     		str	r0, [r7, #4]
1959:..\src/interruptions.c ****                 i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[1];
 6723              		.loc 1 1959 0
 6724 093a 7B68     		ldr	r3, [r7, #4]
 6725 093c 9B02     		lsls	r3, r3, #10
 6726 093e 1A46     		mov	r2, r3
 6727 0940 6D4B     		ldr	r3, .L470+20
 6728 0942 D3F8F831 		ldr	r3, [r3, #504]
 6729 0946 B2FBF3F3 		udiv	r3, r2, r3
 6730 094a 7B60     		str	r3, [r7, #4]
1960:..\src/interruptions.c ****     
1961:..\src/interruptions.c ****                 if (interrupt_flag){
 6731              		.loc 1 1961 0
 6732 094c 654B     		ldr	r3, .L470
 6733 094e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6734 0950 002B     		cmp	r3, #0
 6735 0952 04D0     		beq	.L424
1962:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6736              		.loc 1 1962 0
 6737 0954 634B     		ldr	r3, .L470
 6738 0956 0022     		movs	r2, #0
 6739 0958 1A70     		strb	r2, [r3]
1963:..\src/interruptions.c ****                     interrupt_manager();
 6740              		.loc 1 1963 0
 6741 095a FFF7FEFF 		bl	interrupt_manager
 6742              	.L424:
1964:..\src/interruptions.c ****                 }
1965:..\src/interruptions.c ****                 
1966:..\src/interruptions.c ****                 if (i_aux < 0) 
 6743              		.loc 1 1966 0
 6744 095e 7B68     		ldr	r3, [r7, #4]
 6745 0960 002B     		cmp	r3, #0
 6746 0962 02DA     		bge	.L425
1967:..\src/interruptions.c ****                     i_aux = 0;
 6747              		.loc 1 1967 0
 6748 0964 0023     		movs	r3, #0
 6749 0966 7B60     		str	r3, [r7, #4]
 6750 0968 06E0     		b	.L426
 6751              	.L425:
1968:..\src/interruptions.c ****                 else 
1969:..\src/interruptions.c ****                     if (i_aux > 1024)
 6752              		.loc 1 1969 0
 6753 096a 7B68     		ldr	r3, [r7, #4]
 6754 096c B3F5806F 		cmp	r3, #1024
 6755 0970 02DD     		ble	.L426
1970:..\src/interruptions.c ****                         i_aux = 1024;
 6756              		.loc 1 1970 0
 6757 0972 4FF48063 		mov	r3, #1024
 6758 0976 7B60     		str	r3, [r7, #4]
 6759              	.L426:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 157


1971:..\src/interruptions.c ****                 
1972:..\src/interruptions.c ****                 g_emg_meas.emg[1] = i_aux;
 6760              		.loc 1 1972 0
 6761 0978 604A     		ldr	r2, .L470+24
 6762 097a 7B68     		ldr	r3, [r7, #4]
 6763 097c 5360     		str	r3, [r2, #4]
1973:..\src/interruptions.c **** 
1974:..\src/interruptions.c ****             break;
 6764              		.loc 1 1974 0
 6765 097e 63E1     		b	.L427
 6766              	.L418:
1975:..\src/interruptions.c **** 
1976:..\src/interruptions.c ****         case RESET: // reset variables
1977:..\src/interruptions.c ****             emg_counter_2 = 0;
 6767              		.loc 1 1977 0
 6768 0980 5F4B     		ldr	r3, .L470+28
 6769 0982 0022     		movs	r2, #0
 6770 0984 1A80     		strh	r2, [r3]	@ movhi
1978:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] = 0;
 6771              		.loc 1 1978 0
 6772 0986 5C4B     		ldr	r3, .L470+20
 6773 0988 0022     		movs	r2, #0
 6774 098a C3F8F821 		str	r2, [r3, #504]
1979:..\src/interruptions.c **** 
1980:..\src/interruptions.c ****             if (interrupt_flag){
 6775              		.loc 1 1980 0
 6776 098e 554B     		ldr	r3, .L470
 6777 0990 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6778 0992 002B     		cmp	r3, #0
 6779 0994 04D0     		beq	.L428
1981:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6780              		.loc 1 1981 0
 6781 0996 534B     		ldr	r3, .L470
 6782 0998 0022     		movs	r2, #0
 6783 099a 1A70     		strb	r2, [r3]
1982:..\src/interruptions.c ****                 interrupt_manager();
 6784              		.loc 1 1982 0
 6785 099c FFF7FEFF 		bl	interrupt_manager
 6786              	.L428:
1983:..\src/interruptions.c ****             }
1984:..\src/interruptions.c ****             
1985:..\src/interruptions.c ****             emg_2_status = WAIT; // wait for EMG 1 calibration
 6787              		.loc 1 1985 0
 6788 09a0 514B     		ldr	r3, .L470+4
 6789 09a2 0422     		movs	r2, #4
 6790 09a4 1A70     		strb	r2, [r3]
1986:..\src/interruptions.c ****             break;
 6791              		.loc 1 1986 0
 6792 09a6 4FE1     		b	.L427
 6793              	.L419:
1987:..\src/interruptions.c **** 
1988:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1989:..\src/interruptions.c ****             emg_counter_2++;
 6794              		.loc 1 1989 0
 6795 09a8 554B     		ldr	r3, .L470+28
 6796 09aa 1B88     		ldrh	r3, [r3]
 6797 09ac 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 158


 6798 09ae 9AB2     		uxth	r2, r3
 6799 09b0 534B     		ldr	r3, .L470+28
 6800 09b2 1A80     		strh	r2, [r3]	@ movhi
1990:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 6801              		.loc 1 1990 0
 6802 09b4 524B     		ldr	r3, .L470+28
 6803 09b6 1B88     		ldrh	r3, [r3]
 6804 09b8 B3F5FA7F 		cmp	r3, #500
 6805 09bc 40F03D81 		bne	.L459
1991:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 6806              		.loc 1 1991 0
 6807 09c0 4F4B     		ldr	r3, .L470+28
 6808 09c2 0022     		movs	r2, #0
 6809 09c4 1A80     		strh	r2, [r3]	@ movhi
1992:..\src/interruptions.c ****                 LED_control(1);
 6810              		.loc 1 1992 0
 6811 09c6 0120     		movs	r0, #1
 6812 09c8 FFF7FEFF 		bl	LED_control
1993:..\src/interruptions.c **** 
1994:..\src/interruptions.c ****                 if (interrupt_flag){
 6813              		.loc 1 1994 0
 6814 09cc 454B     		ldr	r3, .L470
 6815 09ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6816 09d0 002B     		cmp	r3, #0
 6817 09d2 04D0     		beq	.L430
1995:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6818              		.loc 1 1995 0
 6819 09d4 434B     		ldr	r3, .L470
 6820 09d6 0022     		movs	r2, #0
 6821 09d8 1A70     		strb	r2, [r3]
1996:..\src/interruptions.c ****                     interrupt_manager();
 6822              		.loc 1 1996 0
 6823 09da FFF7FEFF 		bl	interrupt_manager
 6824              	.L430:
1997:..\src/interruptions.c ****                 }
1998:..\src/interruptions.c ****                 
1999:..\src/interruptions.c ****                 emg_2_status = SUM_AND_MEAN;           // sum and mean status
 6825              		.loc 1 1999 0
 6826 09de 424B     		ldr	r3, .L470+4
 6827 09e0 0322     		movs	r2, #3
 6828 09e2 1A70     		strb	r2, [r3]
2000:..\src/interruptions.c ****             }
2001:..\src/interruptions.c ****             break;
 6829              		.loc 1 2001 0
 6830 09e4 29E1     		b	.L459
 6831              	.L420:
2002:..\src/interruptions.c **** 
2003:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2004:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2005:..\src/interruptions.c ****             emg_counter_2++;
 6832              		.loc 1 2005 0
 6833 09e6 464B     		ldr	r3, .L470+28
 6834 09e8 1B88     		ldrh	r3, [r3]
 6835 09ea 0133     		adds	r3, r3, #1
 6836 09ec 9AB2     		uxth	r2, r3
 6837 09ee 444B     		ldr	r3, .L470+28
 6838 09f0 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 159


2006:..\src/interruptions.c ****             if (ADC_buf[3 - c_mem.emg.switch_emg] < 0)
 6839              		.loc 1 2006 0
 6840 09f2 3E4B     		ldr	r3, .L470+8
 6841 09f4 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6842 09f8 C3F10303 		rsb	r3, r3, #3
 6843 09fc 3C4A     		ldr	r2, .L470+12
 6844 09fe 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6845 0a02 002B     		cmp	r3, #0
 6846 0a04 08DA     		bge	.L431
2007:..\src/interruptions.c ****                 ADC_buf[3 - c_mem.emg.switch_emg] = 0;
 6847              		.loc 1 2007 0
 6848 0a06 394B     		ldr	r3, .L470+8
 6849 0a08 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6850 0a0c C3F10303 		rsb	r3, r3, #3
 6851 0a10 374A     		ldr	r2, .L470+12
 6852 0a12 0021     		movs	r1, #0
 6853 0a14 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 6854              	.L431:
2008:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] += filter((int32)ADC_buf[3 - c_mem.emg.switch_emg], &filt_em
 6855              		.loc 1 2008 0
 6856 0a18 344B     		ldr	r3, .L470+8
 6857 0a1a 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6858 0a1e C3F10303 		rsb	r3, r3, #3
 6859 0a22 334A     		ldr	r2, .L470+12
 6860 0a24 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6861 0a28 3249     		ldr	r1, .L470+16
 6862 0a2a 1846     		mov	r0, r3
 6863 0a2c FFF7FEFF 		bl	filter
 6864 0a30 0246     		mov	r2, r0
 6865 0a32 314B     		ldr	r3, .L470+20
 6866 0a34 D3F8F831 		ldr	r3, [r3, #504]
 6867 0a38 1344     		add	r3, r3, r2
 6868 0a3a 2F4A     		ldr	r2, .L470+20
 6869 0a3c C2F8F831 		str	r3, [r2, #504]
2009:..\src/interruptions.c **** 
2010:..\src/interruptions.c ****             if (interrupt_flag){
 6870              		.loc 1 2010 0
 6871 0a40 284B     		ldr	r3, .L470
 6872 0a42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6873 0a44 002B     		cmp	r3, #0
 6874 0a46 04D0     		beq	.L432
2011:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6875              		.loc 1 2011 0
 6876 0a48 264B     		ldr	r3, .L470
 6877 0a4a 0022     		movs	r2, #0
 6878 0a4c 1A70     		strb	r2, [r3]
2012:..\src/interruptions.c ****                 interrupt_manager();
 6879              		.loc 1 2012 0
 6880 0a4e FFF7FEFF 		bl	interrupt_manager
 6881              	.L432:
2013:..\src/interruptions.c ****             }
2014:..\src/interruptions.c ****             
2015:..\src/interruptions.c ****             if (emg_counter_2 == SAMPLES_FOR_EMG_MEAN) {
 6882              		.loc 1 2015 0
 6883 0a52 2B4B     		ldr	r3, .L470+28
 6884 0a54 1B88     		ldrh	r3, [r3]
 6885 0a56 B3F57A7F 		cmp	r3, #1000
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 160


 6886 0a5a 40F0F080 		bne	.L460
2016:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[1] = g_mem.emg.emg_max_value[1] / SAMPLES_FOR_EMG_MEAN; // 
 6887              		.loc 1 2016 0
 6888 0a5e 264B     		ldr	r3, .L470+20
 6889 0a60 D3F8F831 		ldr	r3, [r3, #504]
 6890 0a64 274A     		ldr	r2, .L470+32
 6891 0a66 A2FB0323 		umull	r2, r3, r2, r3
 6892 0a6a 9B09     		lsrs	r3, r3, #6
 6893 0a6c 224A     		ldr	r2, .L470+20
 6894 0a6e C2F8F831 		str	r3, [r2, #504]
2017:..\src/interruptions.c ****                 LED_control(0);
 6895              		.loc 1 2017 0
 6896 0a72 0020     		movs	r0, #0
 6897 0a74 FFF7FEFF 		bl	LED_control
2018:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 6898              		.loc 1 2018 0
 6899 0a78 214B     		ldr	r3, .L470+28
 6900 0a7a 0022     		movs	r2, #0
 6901 0a7c 1A80     		strh	r2, [r3]	@ movhi
2019:..\src/interruptions.c ****             
2020:..\src/interruptions.c ****                 if (interrupt_flag){
 6902              		.loc 1 2020 0
 6903 0a7e 194B     		ldr	r3, .L470
 6904 0a80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6905 0a82 002B     		cmp	r3, #0
 6906 0a84 04D0     		beq	.L434
2021:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6907              		.loc 1 2021 0
 6908 0a86 174B     		ldr	r3, .L470
 6909 0a88 0022     		movs	r2, #0
 6910 0a8a 1A70     		strb	r2, [r3]
2022:..\src/interruptions.c ****                     interrupt_manager();
 6911              		.loc 1 2022 0
 6912 0a8c FFF7FEFF 		bl	interrupt_manager
 6913              	.L434:
2023:..\src/interruptions.c ****                 }
2024:..\src/interruptions.c ****                 
2025:..\src/interruptions.c ****                 emg_2_status = WAIT_EoC;    // goto end of calibration wait
 6914              		.loc 1 2025 0
 6915 0a90 154B     		ldr	r3, .L470+4
 6916 0a92 0522     		movs	r2, #5
 6917 0a94 1A70     		strb	r2, [r3]
2026:..\src/interruptions.c ****             }
2027:..\src/interruptions.c ****             break;
 6918              		.loc 1 2027 0
 6919 0a96 D2E0     		b	.L460
 6920              	.L421:
2028:..\src/interruptions.c **** 
2029:..\src/interruptions.c ****         case WAIT: // wait for EMG calibration to be done
2030:..\src/interruptions.c ****             if (emg_1_status == NORMAL)
 6921              		.loc 1 2030 0
 6922 0a98 1B4B     		ldr	r3, .L470+36
 6923 0a9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6924 0a9c 002B     		cmp	r3, #0
 6925 0a9e 40F0D080 		bne	.L461
2031:..\src/interruptions.c ****                 emg_2_status = DISCARD;           // goto discard sample
 6926              		.loc 1 2031 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 161


 6927 0aa2 114B     		ldr	r3, .L470+4
 6928 0aa4 0222     		movs	r2, #2
 6929 0aa6 1A70     		strb	r2, [r3]
2032:..\src/interruptions.c ****             break;
 6930              		.loc 1 2032 0
 6931 0aa8 CBE0     		b	.L461
 6932              	.L422:
2033:..\src/interruptions.c **** 
2034:..\src/interruptions.c ****         case WAIT_EoC:  // wait for end of calibration procedure (only for LED visibility reasons)
2035:..\src/interruptions.c ****             emg_counter_2++;
 6933              		.loc 1 2035 0
 6934 0aaa 154B     		ldr	r3, .L470+28
 6935 0aac 1B88     		ldrh	r3, [r3]
 6936 0aae 0133     		adds	r3, r3, #1
 6937 0ab0 9AB2     		uxth	r2, r3
 6938 0ab2 134B     		ldr	r3, .L470+28
 6939 0ab4 1A80     		strh	r2, [r3]	@ movhi
2036:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 6940              		.loc 1 2036 0
 6941 0ab6 124B     		ldr	r3, .L470+28
 6942 0ab8 1B88     		ldrh	r3, [r3]
 6943 0aba B3F5FA7F 		cmp	r3, #500
 6944 0abe 40F0C280 		bne	.L462
2037:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 6945              		.loc 1 2037 0
 6946 0ac2 0F4B     		ldr	r3, .L470+28
 6947 0ac4 0022     		movs	r2, #0
 6948 0ac6 1A80     		strh	r2, [r3]	@ movhi
2038:..\src/interruptions.c ****                 
2039:..\src/interruptions.c ****                 if (interrupt_flag){
 6949              		.loc 1 2039 0
 6950 0ac8 064B     		ldr	r3, .L470
 6951 0aca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6952 0acc 002B     		cmp	r3, #0
 6953 0ace 04D0     		beq	.L437
2040:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6954              		.loc 1 2040 0
 6955 0ad0 044B     		ldr	r3, .L470
 6956 0ad2 0022     		movs	r2, #0
 6957 0ad4 1A70     		strb	r2, [r3]
2041:..\src/interruptions.c ****                     interrupt_manager();
 6958              		.loc 1 2041 0
 6959 0ad6 FFF7FEFF 		bl	interrupt_manager
 6960              	.L437:
2042:..\src/interruptions.c ****                 }
2043:..\src/interruptions.c ****                 
2044:..\src/interruptions.c ****                 for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 6961              		.loc 1 2044 0
 6962 0ada 0C4B     		ldr	r3, .L470+40
 6963 0adc 0022     		movs	r2, #0
 6964 0ade 1A70     		strb	r2, [r3]
 6965 0ae0 9DE0     		b	.L438
 6966              	.L471:
 6967 0ae2 00BF     		.align	2
 6968              	.L470:
 6969 0ae4 00000000 		.word	interrupt_flag
 6970 0ae8 00000000 		.word	emg_2_status
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 162


 6971 0aec 00000000 		.word	c_mem
 6972 0af0 00000000 		.word	ADC_buf
 6973 0af4 08000000 		.word	filt_emg+8
 6974 0af8 00000000 		.word	g_mem
 6975 0afc 00000000 		.word	g_emg_meas
 6976 0b00 82010000 		.word	emg_counter_2.10536
 6977 0b04 D34D6210 		.word	274877907
 6978 0b08 00000000 		.word	emg_1_status
 6979 0b0c 7A010000 		.word	idx.10540
 6980              	.L442:
2045:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6981              		.loc 1 2045 0
 6982 0b10 7F4B     		ldr	r3, .L472
 6983 0b12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6984 0b14 1946     		mov	r1, r3
 6985 0b16 7F4A     		ldr	r2, .L472+4
 6986 0b18 0B46     		mov	r3, r1
 6987 0b1a DB00     		lsls	r3, r3, #3
 6988 0b1c 5B1A     		subs	r3, r3, r1
 6989 0b1e 1B01     		lsls	r3, r3, #4
 6990 0b20 1344     		add	r3, r3, r2
 6991 0b22 03F58773 		add	r3, r3, #270
 6992 0b26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6993 0b28 022B     		cmp	r3, #2
 6994 0b2a 29D0     		beq	.L439
2046:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 6995              		.loc 1 2046 0 discriminator 1
 6996 0b2c 784B     		ldr	r3, .L472
 6997 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6998 0b30 1946     		mov	r1, r3
 6999 0b32 784A     		ldr	r2, .L472+4
 7000 0b34 0B46     		mov	r3, r1
 7001 0b36 DB00     		lsls	r3, r3, #3
 7002 0b38 5B1A     		subs	r3, r3, r1
 7003 0b3a 1B01     		lsls	r3, r3, #4
 7004 0b3c 1344     		add	r3, r3, r2
 7005 0b3e 03F58773 		add	r3, r3, #270
 7006 0b42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2045:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 7007              		.loc 1 2045 0 discriminator 1
 7008 0b44 032B     		cmp	r3, #3
 7009 0b46 1BD0     		beq	.L439
2047:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 7010              		.loc 1 2047 0
 7011 0b48 714B     		ldr	r3, .L472
 7012 0b4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7013 0b4c 1946     		mov	r1, r3
 7014 0b4e 714A     		ldr	r2, .L472+4
 7015 0b50 0B46     		mov	r3, r1
 7016 0b52 DB00     		lsls	r3, r3, #3
 7017 0b54 5B1A     		subs	r3, r3, r1
 7018 0b56 1B01     		lsls	r3, r3, #4
 7019 0b58 1344     		add	r3, r3, r2
 7020 0b5a 03F58773 		add	r3, r3, #270
 7021 0b5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2046:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 7022              		.loc 1 2046 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 163


 7023 0b60 042B     		cmp	r3, #4
 7024 0b62 0DD0     		beq	.L439
2048:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 7025              		.loc 1 2048 0
 7026 0b64 6A4B     		ldr	r3, .L472
 7027 0b66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7028 0b68 1946     		mov	r1, r3
 7029 0b6a 6A4A     		ldr	r2, .L472+4
 7030 0b6c 0B46     		mov	r3, r1
 7031 0b6e DB00     		lsls	r3, r3, #3
 7032 0b70 5B1A     		subs	r3, r3, r1
 7033 0b72 1B01     		lsls	r3, r3, #4
 7034 0b74 1344     		add	r3, r3, r2
 7035 0b76 03F58773 		add	r3, r3, #270
 7036 0b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2047:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 7037              		.loc 1 2047 0
 7038 0b7c 052B     		cmp	r3, #5
 7039 0b7e 48D1     		bne	.L440
 7040              	.L439:
2049:..\src/interruptions.c ****                         if (c_mem.motor[idx].control_mode == CONTROL_ANGLE) {
 7041              		.loc 1 2049 0
 7042 0b80 634B     		ldr	r3, .L472
 7043 0b82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7044 0b84 1946     		mov	r1, r3
 7045 0b86 634A     		ldr	r2, .L472+4
 7046 0b88 0B46     		mov	r3, r1
 7047 0b8a DB00     		lsls	r3, r3, #3
 7048 0b8c 5B1A     		subs	r3, r3, r1
 7049 0b8e 1B01     		lsls	r3, r3, #4
 7050 0b90 1344     		add	r3, r3, r2
 7051 0b92 03F20F13 		addw	r3, r3, #271
 7052 0b96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7053 0b98 002B     		cmp	r3, #0
 7054 0b9a 1AD1     		bne	.L441
2050:..\src/interruptions.c ****                             g_ref[idx].pos = g_meas[g_mem.motor[idx].encoder_line].pos[0];
 7055              		.loc 1 2050 0
 7056 0b9c 5C4B     		ldr	r3, .L472
 7057 0b9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7058 0ba0 1846     		mov	r0, r3
 7059 0ba2 5B4B     		ldr	r3, .L472
 7060 0ba4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7061 0ba6 1946     		mov	r1, r3
 7062 0ba8 5B4A     		ldr	r2, .L472+8
 7063 0baa 0B46     		mov	r3, r1
 7064 0bac DB00     		lsls	r3, r3, #3
 7065 0bae 5B1A     		subs	r3, r3, r1
 7066 0bb0 1B01     		lsls	r3, r3, #4
 7067 0bb2 1344     		add	r3, r3, r2
 7068 0bb4 03F58873 		add	r3, r3, #272
 7069 0bb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7070 0bba 1946     		mov	r1, r3
 7071 0bbc 574A     		ldr	r2, .L472+12
 7072 0bbe 0B46     		mov	r3, r1
 7073 0bc0 5B00     		lsls	r3, r3, #1
 7074 0bc2 0B44     		add	r3, r3, r1
 7075 0bc4 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 164


 7076 0bc6 1344     		add	r3, r3, r2
 7077 0bc8 1A68     		ldr	r2, [r3]
 7078 0bca 5549     		ldr	r1, .L472+16
 7079 0bcc 0301     		lsls	r3, r0, #4
 7080 0bce 0B44     		add	r3, r3, r1
 7081 0bd0 1A60     		str	r2, [r3]
 7082              	.L441:
2051:..\src/interruptions.c ****                         }
2052:..\src/interruptions.c ****                         g_ref[idx].onoff = c_mem.motor[idx].activ;
 7083              		.loc 1 2052 0
 7084 0bd2 4F4B     		ldr	r3, .L472
 7085 0bd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7086 0bd6 1846     		mov	r0, r3
 7087 0bd8 4D4B     		ldr	r3, .L472
 7088 0bda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7089 0bdc 1946     		mov	r1, r3
 7090 0bde 4D4A     		ldr	r2, .L472+4
 7091 0be0 0B46     		mov	r3, r1
 7092 0be2 DB00     		lsls	r3, r3, #3
 7093 0be4 5B1A     		subs	r3, r3, r1
 7094 0be6 1B01     		lsls	r3, r3, #4
 7095 0be8 1344     		add	r3, r3, r2
 7096 0bea E033     		adds	r3, r3, #224
 7097 0bec 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 7098 0bee 4C4A     		ldr	r2, .L472+16
 7099 0bf0 0301     		lsls	r3, r0, #4
 7100 0bf2 1344     		add	r3, r3, r2
 7101 0bf4 0C33     		adds	r3, r3, #12
 7102 0bf6 0A46     		mov	r2, r1
 7103 0bf8 1A70     		strb	r2, [r3]
2053:..\src/interruptions.c ****                         enable_motor(idx, g_ref[idx].onoff); 
 7104              		.loc 1 2053 0
 7105 0bfa 454B     		ldr	r3, .L472
 7106 0bfc 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 7107 0bfe 444B     		ldr	r3, .L472
 7108 0c00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7109 0c02 474A     		ldr	r2, .L472+16
 7110 0c04 1B01     		lsls	r3, r3, #4
 7111 0c06 1344     		add	r3, r3, r2
 7112 0c08 0C33     		adds	r3, r3, #12
 7113 0c0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7114 0c0c 1946     		mov	r1, r3
 7115 0c0e FFF7FEFF 		bl	enable_motor
 7116              	.L440:
2044:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 7117              		.loc 1 2044 0 discriminator 2
 7118 0c12 3F4B     		ldr	r3, .L472
 7119 0c14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7120 0c16 0133     		adds	r3, r3, #1
 7121 0c18 DAB2     		uxtb	r2, r3
 7122 0c1a 3D4B     		ldr	r3, .L472
 7123 0c1c 1A70     		strb	r2, [r3]
 7124              	.L438:
2044:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 7125              		.loc 1 2044 0 is_stmt 0 discriminator 1
 7126 0c1e 3C4B     		ldr	r3, .L472
 7127 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 165


 7128 0c22 012B     		cmp	r3, #1
 7129 0c24 7FF674AF 		bls	.L442
2054:..\src/interruptions.c ****                     }
2055:..\src/interruptions.c ****                 }
2056:..\src/interruptions.c ****                     
2057:..\src/interruptions.c ****                 memStore(0);        // Store emg_max_value
 7130              		.loc 1 2057 0 is_stmt 1
 7131 0c28 0020     		movs	r0, #0
 7132 0c2a FFF7FEFF 		bl	memStore
2058:..\src/interruptions.c ****                     
2059:..\src/interruptions.c ****                 emg_2_status = NORMAL;           // goto normal execution
 7133              		.loc 1 2059 0
 7134 0c2e 3D4B     		ldr	r3, .L472+20
 7135 0c30 0022     		movs	r2, #0
 7136 0c32 1A70     		strb	r2, [r3]
2060:..\src/interruptions.c ****             }
2061:..\src/interruptions.c ****             break;
 7137              		.loc 1 2061 0
 7138 0c34 07E0     		b	.L462
 7139              	.L458:
2062:..\src/interruptions.c ****         default:
2063:..\src/interruptions.c ****             break;
 7140              		.loc 1 2063 0
 7141 0c36 00BF     		nop
 7142 0c38 06E0     		b	.L427
 7143              	.L459:
2001:..\src/interruptions.c **** 
 7144              		.loc 1 2001 0
 7145 0c3a 00BF     		nop
 7146 0c3c 04E0     		b	.L427
 7147              	.L460:
2027:..\src/interruptions.c **** 
 7148              		.loc 1 2027 0
 7149 0c3e 00BF     		nop
 7150 0c40 02E0     		b	.L427
 7151              	.L461:
2032:..\src/interruptions.c **** 
 7152              		.loc 1 2032 0
 7153 0c42 00BF     		nop
 7154 0c44 00E0     		b	.L427
 7155              	.L462:
2061:..\src/interruptions.c ****         default:
 7156              		.loc 1 2061 0
 7157 0c46 00BF     		nop
 7158              	.L427:
2064:..\src/interruptions.c ****     }
2065:..\src/interruptions.c ****         
2066:..\src/interruptions.c ****     if (interrupt_flag){
 7159              		.loc 1 2066 0
 7160 0c48 374B     		ldr	r3, .L472+24
 7161 0c4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7162 0c4c 002B     		cmp	r3, #0
 7163 0c4e 04D0     		beq	.L443
2067:..\src/interruptions.c ****         interrupt_flag = FALSE;
 7164              		.loc 1 2067 0
 7165 0c50 354B     		ldr	r3, .L472+24
 7166 0c52 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 166


 7167 0c54 1A70     		strb	r2, [r3]
2068:..\src/interruptions.c ****         interrupt_manager();
 7168              		.loc 1 2068 0
 7169 0c56 FFF7FEFF 		bl	interrupt_manager
 7170              	.L443:
2069:..\src/interruptions.c ****     }
2070:..\src/interruptions.c ****     
2071:..\src/interruptions.c ****     // Read also EMG additional sensors port
2072:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 6) {
 7171              		.loc 1 2072 0
 7172 0c5a 344B     		ldr	r3, .L472+28
 7173 0c5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7174 0c5e 062B     		cmp	r3, #6
 7175 0c60 52D9     		bls	.L463
2073:..\src/interruptions.c ****         
2074:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 7176              		.loc 1 2074 0
 7177 0c62 2B4B     		ldr	r3, .L472
 7178 0c64 0022     		movs	r2, #0
 7179 0c66 1A70     		strb	r2, [r3]
 7180 0c68 4AE0     		b	.L445
 7181              	.L452:
2075:..\src/interruptions.c ****             
2076:..\src/interruptions.c ****             i_aux = (int32)(ADC_buf[6 + idx]);
 7182              		.loc 1 2076 0
 7183 0c6a 294B     		ldr	r3, .L472
 7184 0c6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7185 0c6e 0633     		adds	r3, r3, #6
 7186 0c70 2F4A     		ldr	r2, .L472+32
 7187 0c72 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7188 0c76 7B60     		str	r3, [r7, #4]
2077:..\src/interruptions.c ****             if (i_aux < 0) 
 7189              		.loc 1 2077 0
 7190 0c78 7B68     		ldr	r3, [r7, #4]
 7191 0c7a 002B     		cmp	r3, #0
 7192 0c7c 01DA     		bge	.L446
2078:..\src/interruptions.c ****                 i_aux = 0;
 7193              		.loc 1 2078 0
 7194 0c7e 0023     		movs	r3, #0
 7195 0c80 7B60     		str	r3, [r7, #4]
 7196              	.L446:
2079:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[2+idx]);
 7197              		.loc 1 2079 0
 7198 0c82 234B     		ldr	r3, .L472
 7199 0c84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7200 0c86 0233     		adds	r3, r3, #2
 7201 0c88 DB00     		lsls	r3, r3, #3
 7202 0c8a 2A4A     		ldr	r2, .L472+36
 7203 0c8c 1344     		add	r3, r3, r2
 7204 0c8e 1946     		mov	r1, r3
 7205 0c90 7868     		ldr	r0, [r7, #4]
 7206 0c92 FFF7FEFF 		bl	filter
 7207 0c96 7860     		str	r0, [r7, #4]
2080:..\src/interruptions.c ****             i_aux = (i_aux << 10) / 1024;
 7208              		.loc 1 2080 0
 7209 0c98 7B68     		ldr	r3, [r7, #4]
 7210 0c9a 9B02     		lsls	r3, r3, #10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 167


 7211 0c9c 002B     		cmp	r3, #0
 7212 0c9e 01DA     		bge	.L447
 7213 0ca0 03F2FF33 		addw	r3, r3, #1023
 7214              	.L447:
 7215 0ca4 9B12     		asrs	r3, r3, #10
 7216 0ca6 7B60     		str	r3, [r7, #4]
2081:..\src/interruptions.c **** 
2082:..\src/interruptions.c ****             if (interrupt_flag){
 7217              		.loc 1 2082 0
 7218 0ca8 1F4B     		ldr	r3, .L472+24
 7219 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7220 0cac 002B     		cmp	r3, #0
 7221 0cae 04D0     		beq	.L448
2083:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7222              		.loc 1 2083 0
 7223 0cb0 1D4B     		ldr	r3, .L472+24
 7224 0cb2 0022     		movs	r2, #0
 7225 0cb4 1A70     		strb	r2, [r3]
2084:..\src/interruptions.c ****                 interrupt_manager();
 7226              		.loc 1 2084 0
 7227 0cb6 FFF7FEFF 		bl	interrupt_manager
 7228              	.L448:
2085:..\src/interruptions.c ****             }
2086:..\src/interruptions.c ****             //Saturation
2087:..\src/interruptions.c ****             if (i_aux < 0)
 7229              		.loc 1 2087 0
 7230 0cba 7B68     		ldr	r3, [r7, #4]
 7231 0cbc 002B     		cmp	r3, #0
 7232 0cbe 02DA     		bge	.L449
2088:..\src/interruptions.c ****                 i_aux = 0;
 7233              		.loc 1 2088 0
 7234 0cc0 0023     		movs	r3, #0
 7235 0cc2 7B60     		str	r3, [r7, #4]
 7236 0cc4 06E0     		b	.L450
 7237              	.L449:
2089:..\src/interruptions.c ****             else 
2090:..\src/interruptions.c ****                 if (i_aux > 1024) 
 7238              		.loc 1 2090 0
 7239 0cc6 7B68     		ldr	r3, [r7, #4]
 7240 0cc8 B3F5806F 		cmp	r3, #1024
 7241 0ccc 02DD     		ble	.L450
2091:..\src/interruptions.c ****                     i_aux = 1024;
 7242              		.loc 1 2091 0
 7243 0cce 4FF48063 		mov	r3, #1024
 7244 0cd2 7B60     		str	r3, [r7, #4]
 7245              	.L450:
2092:..\src/interruptions.c ****             
2093:..\src/interruptions.c ****             g_emg_meas.add_emg[idx] = i_aux;
 7246              		.loc 1 2093 0
 7247 0cd4 0E4B     		ldr	r3, .L472
 7248 0cd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7249 0cd8 1749     		ldr	r1, .L472+40
 7250 0cda 0233     		adds	r3, r3, #2
 7251 0cdc 7A68     		ldr	r2, [r7, #4]
 7252 0cde 41F82320 		str	r2, [r1, r3, lsl #2]
2094:..\src/interruptions.c **** 
2095:..\src/interruptions.c ****             if (interrupt_flag){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 168


 7253              		.loc 1 2095 0
 7254 0ce2 114B     		ldr	r3, .L472+24
 7255 0ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7256 0ce6 002B     		cmp	r3, #0
 7257 0ce8 04D0     		beq	.L451
2096:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7258              		.loc 1 2096 0
 7259 0cea 0F4B     		ldr	r3, .L472+24
 7260 0cec 0022     		movs	r2, #0
 7261 0cee 1A70     		strb	r2, [r3]
2097:..\src/interruptions.c ****                 interrupt_manager();
 7262              		.loc 1 2097 0
 7263 0cf0 FFF7FEFF 		bl	interrupt_manager
 7264              	.L451:
2074:..\src/interruptions.c ****             
 7265              		.loc 1 2074 0 discriminator 2
 7266 0cf4 064B     		ldr	r3, .L472
 7267 0cf6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7268 0cf8 0133     		adds	r3, r3, #1
 7269 0cfa DAB2     		uxtb	r2, r3
 7270 0cfc 044B     		ldr	r3, .L472
 7271 0cfe 1A70     		strb	r2, [r3]
 7272              	.L445:
2074:..\src/interruptions.c ****             
 7273              		.loc 1 2074 0 is_stmt 0 discriminator 1
 7274 0d00 034B     		ldr	r3, .L472
 7275 0d02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7276 0d04 052B     		cmp	r3, #5
 7277 0d06 B0D9     		bls	.L452
 7278              	.L463:
2098:..\src/interruptions.c ****             }
2099:..\src/interruptions.c ****         }
2100:..\src/interruptions.c ****     }
2101:..\src/interruptions.c ****     
2102:..\src/interruptions.c **** }
 7279              		.loc 1 2102 0 is_stmt 1
 7280 0d08 00BF     		nop
 7281 0d0a 0C37     		adds	r7, r7, #12
 7282              		.cfi_def_cfa_offset 20
 7283 0d0c BD46     		mov	sp, r7
 7284              		.cfi_def_cfa_register 13
 7285              		@ sp needed
 7286 0d0e F0BD     		pop	{r4, r5, r6, r7, pc}
 7287              	.L473:
 7288              		.align	2
 7289              	.L472:
 7290 0d10 7A010000 		.word	idx.10540
 7291 0d14 00000000 		.word	c_mem
 7292 0d18 00000000 		.word	g_mem
 7293 0d1c 00000000 		.word	g_meas
 7294 0d20 00000000 		.word	g_ref
 7295 0d24 00000000 		.word	emg_2_status
 7296 0d28 00000000 		.word	interrupt_flag
 7297 0d2c 00000000 		.word	NUM_OF_ANALOG_INPUTS
 7298 0d30 00000000 		.word	ADC_buf
 7299 0d34 00000000 		.word	filt_emg
 7300 0d38 00000000 		.word	g_emg_meas
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 169


 7301              		.cfi_endproc
 7302              	.LFE71:
 7303              		.size	analog_read_end, .-analog_read_end
 7304              		.section	.text.overcurrent_control,"ax",%progbits
 7305              		.align	2
 7306              		.global	overcurrent_control
 7307              		.thumb
 7308              		.thumb_func
 7309              		.type	overcurrent_control, %function
 7310              	overcurrent_control:
 7311              	.LFB72:
2103:..\src/interruptions.c **** 
2104:..\src/interruptions.c **** //==============================================================================
2105:..\src/interruptions.c **** //                                                           OVERCURRENT CONTROL
2106:..\src/interruptions.c **** //==============================================================================
2107:..\src/interruptions.c **** 
2108:..\src/interruptions.c **** void overcurrent_control() {
 7312              		.loc 1 2108 0
 7313              		.cfi_startproc
 7314              		@ args = 0, pretend = 0, frame = 8
 7315              		@ frame_needed = 1, uses_anonymous_args = 0
 7316              		@ link register save eliminated.
 7317 0000 80B4     		push	{r7}
 7318              		.cfi_def_cfa_offset 4
 7319              		.cfi_offset 7, -4
 7320 0002 83B0     		sub	sp, sp, #12
 7321              		.cfi_def_cfa_offset 16
 7322 0004 00AF     		add	r7, sp, #0
 7323              		.cfi_def_cfa_register 7
 7324              	.LBB4:
2109:..\src/interruptions.c ****     
2110:..\src/interruptions.c ****     for (uint8 i = 0; i <NUM_OF_MOTORS; i++) {
 7325              		.loc 1 2110 0
 7326 0006 0023     		movs	r3, #0
 7327 0008 FB71     		strb	r3, [r7, #7]
 7328 000a 59E0     		b	.L475
 7329              	.L479:
2111:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 7330              		.loc 1 2111 0
 7331 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7332 000e 3049     		ldr	r1, .L481
 7333 0010 1346     		mov	r3, r2
 7334 0012 DB00     		lsls	r3, r3, #3
 7335 0014 9B1A     		subs	r3, r3, r2
 7336 0016 1B01     		lsls	r3, r3, #4
 7337 0018 0B44     		add	r3, r3, r1
 7338 001a 03F58673 		add	r3, r3, #268
 7339 001e B3F90030 		ldrsh	r3, [r3]
 7340 0022 002B     		cmp	r3, #0
 7341 0024 49D0     		beq	.L476
2112:..\src/interruptions.c ****             // if the current is over the limit
2113:..\src/interruptions.c ****             if (g_meas[i].curr > c_mem.motor[i].current_limit) {
 7342              		.loc 1 2113 0
 7343 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7344 0028 2A49     		ldr	r1, .L481+4
 7345 002a 1346     		mov	r3, r2
 7346 002c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 170


 7347 002e 1344     		add	r3, r3, r2
 7348 0030 1B01     		lsls	r3, r3, #4
 7349 0032 0B44     		add	r3, r3, r1
 7350 0034 0C33     		adds	r3, r3, #12
 7351 0036 1968     		ldr	r1, [r3]
 7352 0038 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7353 003a 2548     		ldr	r0, .L481
 7354 003c 1346     		mov	r3, r2
 7355 003e DB00     		lsls	r3, r3, #3
 7356 0040 9B1A     		subs	r3, r3, r2
 7357 0042 1B01     		lsls	r3, r3, #4
 7358 0044 0344     		add	r3, r3, r0
 7359 0046 03F58673 		add	r3, r3, #268
 7360 004a B3F90030 		ldrsh	r3, [r3]
 7361 004e 9942     		cmp	r1, r3
 7362 0050 07DD     		ble	.L477
2114:..\src/interruptions.c ****                 //decrease pwm_limit
2115:..\src/interruptions.c ****                 dev_pwm_limit[i]--;
 7363              		.loc 1 2115 0
 7364 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7365 0054 204A     		ldr	r2, .L481+8
 7366 0056 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 7367 0058 013A     		subs	r2, r2, #1
 7368 005a D1B2     		uxtb	r1, r2
 7369 005c 1E4A     		ldr	r2, .L481+8
 7370 005e D154     		strb	r1, [r2, r3]
 7371 0060 1DE0     		b	.L480
 7372              	.L477:
2116:..\src/interruptions.c ****             // if the current is in the safe zone
2117:..\src/interruptions.c ****             } else if (g_meas[i].curr < (c_mem.motor[i].current_limit - CURRENT_HYSTERESIS)) {
 7373              		.loc 1 2117 0
 7374 0062 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7375 0064 1B49     		ldr	r1, .L481+4
 7376 0066 1346     		mov	r3, r2
 7377 0068 5B00     		lsls	r3, r3, #1
 7378 006a 1344     		add	r3, r3, r2
 7379 006c 1B01     		lsls	r3, r3, #4
 7380 006e 0B44     		add	r3, r3, r1
 7381 0070 0C33     		adds	r3, r3, #12
 7382 0072 1968     		ldr	r1, [r3]
 7383 0074 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7384 0076 1648     		ldr	r0, .L481
 7385 0078 1346     		mov	r3, r2
 7386 007a DB00     		lsls	r3, r3, #3
 7387 007c 9B1A     		subs	r3, r3, r2
 7388 007e 1B01     		lsls	r3, r3, #4
 7389 0080 0344     		add	r3, r3, r0
 7390 0082 03F58673 		add	r3, r3, #268
 7391 0086 B3F90030 		ldrsh	r3, [r3]
 7392 008a 0A3B     		subs	r3, r3, #10
 7393 008c 9942     		cmp	r1, r3
 7394 008e 06DA     		bge	.L480
2118:..\src/interruptions.c ****                 //increase pwm_limit
2119:..\src/interruptions.c ****                 dev_pwm_limit[i]++;
 7395              		.loc 1 2119 0
 7396 0090 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7397 0092 114A     		ldr	r2, .L481+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 171


 7398 0094 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 7399 0096 0132     		adds	r2, r2, #1
 7400 0098 D1B2     		uxtb	r1, r2
 7401 009a 0F4A     		ldr	r2, .L481+8
 7402 009c D154     		strb	r1, [r2, r3]
 7403              	.L480:
2120:..\src/interruptions.c ****             }
2121:..\src/interruptions.c **** 
2122:..\src/interruptions.c ****             // Bound pwm_limit
2123:..\src/interruptions.c ****             if (dev_pwm_limit[i] < 0) 
2124:..\src/interruptions.c ****                 dev_pwm_limit[i] = 0;
2125:..\src/interruptions.c ****             else 
2126:..\src/interruptions.c ****                 if (dev_pwm_limit[i] > dev_pwm_sat[i]) 
 7404              		.loc 1 2126 0
 7405 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7406 00a0 0D4A     		ldr	r2, .L481+8
 7407 00a2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 7408 00a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7409 00a6 0D49     		ldr	r1, .L481+12
 7410 00a8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7411 00aa 9A42     		cmp	r2, r3
 7412 00ac 05D9     		bls	.L476
2127:..\src/interruptions.c ****                     dev_pwm_limit[i] = dev_pwm_sat[i];
 7413              		.loc 1 2127 0
 7414 00ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7415 00b0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7416 00b2 0A49     		ldr	r1, .L481+12
 7417 00b4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 7418 00b6 084A     		ldr	r2, .L481+8
 7419 00b8 D154     		strb	r1, [r2, r3]
 7420              	.L476:
2110:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 7421              		.loc 1 2110 0 discriminator 2
 7422 00ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7423 00bc 0133     		adds	r3, r3, #1
 7424 00be FB71     		strb	r3, [r7, #7]
 7425              	.L475:
2110:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 7426              		.loc 1 2110 0 is_stmt 0 discriminator 1
 7427 00c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7428 00c2 012B     		cmp	r3, #1
 7429 00c4 A2D9     		bls	.L479
 7430              	.LBE4:
2128:..\src/interruptions.c ****         }
2129:..\src/interruptions.c ****     }
2130:..\src/interruptions.c **** }
 7431              		.loc 1 2130 0 is_stmt 1
 7432 00c6 00BF     		nop
 7433 00c8 0C37     		adds	r7, r7, #12
 7434              		.cfi_def_cfa_offset 4
 7435 00ca BD46     		mov	sp, r7
 7436              		.cfi_def_cfa_register 13
 7437              		@ sp needed
 7438 00cc 80BC     		pop	{r7}
 7439              		.cfi_restore 7
 7440              		.cfi_def_cfa_offset 0
 7441 00ce 7047     		bx	lr
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 172


 7442              	.L482:
 7443              		.align	2
 7444              	.L481:
 7445 00d0 00000000 		.word	c_mem
 7446 00d4 00000000 		.word	g_meas
 7447 00d8 00000000 		.word	dev_pwm_limit
 7448 00dc 00000000 		.word	dev_pwm_sat
 7449              		.cfi_endproc
 7450              	.LFE72:
 7451              		.size	overcurrent_control, .-overcurrent_control
 7452              		.section	.text.pwm_limit_search,"ax",%progbits
 7453              		.align	2
 7454              		.global	pwm_limit_search
 7455              		.thumb
 7456              		.thumb_func
 7457              		.type	pwm_limit_search, %function
 7458              	pwm_limit_search:
 7459              	.LFB73:
2131:..\src/interruptions.c **** 
2132:..\src/interruptions.c **** //==============================================================================
2133:..\src/interruptions.c **** //                                                              PWM_LIMIT_SEARCH
2134:..\src/interruptions.c **** //==============================================================================
2135:..\src/interruptions.c **** 
2136:..\src/interruptions.c **** void pwm_limit_search(uint8 mot_idx) {
 7460              		.loc 1 2136 0
 7461              		.cfi_startproc
 7462              		@ args = 0, pretend = 0, frame = 16
 7463              		@ frame_needed = 1, uses_anonymous_args = 0
 7464              		@ link register save eliminated.
 7465 0000 80B4     		push	{r7}
 7466              		.cfi_def_cfa_offset 4
 7467              		.cfi_offset 7, -4
 7468 0002 85B0     		sub	sp, sp, #20
 7469              		.cfi_def_cfa_offset 24
 7470 0004 00AF     		add	r7, sp, #0
 7471              		.cfi_def_cfa_register 7
 7472 0006 0346     		mov	r3, r0
 7473 0008 FB71     		strb	r3, [r7, #7]
2137:..\src/interruptions.c **** 
2138:..\src/interruptions.c ****     uint8 CYDATA index;
2139:..\src/interruptions.c ****     uint16 CYDATA max_tension = 25500;
 7474              		.loc 1 2139 0
 7475 000a 46F29C33 		movw	r3, #25500
 7476 000e FB81     		strh	r3, [r7, #14]	@ movhi
2140:..\src/interruptions.c ****     uint16 CYDATA min_tension = 11500;
 7477              		.loc 1 2140 0
 7478 0010 42F6EC43 		movw	r3, #11500
 7479 0014 BB81     		strh	r3, [r7, #12]	@ movhi
2141:..\src/interruptions.c ****     
2142:..\src/interruptions.c ****     if (dev_tension[mot_idx] > max_tension) {
 7480              		.loc 1 2142 0
 7481 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7482 0018 144A     		ldr	r2, .L488
 7483 001a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 7484 001e FB89     		ldrh	r3, [r7, #14]
 7485 0020 9A42     		cmp	r2, r3
 7486 0022 04DD     		ble	.L484
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 173


2143:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = 0;
 7487              		.loc 1 2143 0
 7488 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7489 0026 124A     		ldr	r2, .L488+4
 7490 0028 0021     		movs	r1, #0
 7491 002a D154     		strb	r1, [r2, r3]
2144:..\src/interruptions.c ****     } else if (dev_tension[mot_idx] < min_tension) {
2145:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = 100;
2146:..\src/interruptions.c ****     } else {
2147:..\src/interruptions.c ****         index = (uint8)((dev_tension[mot_idx] - min_tension) >> 9);
2148:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = pwm_preload_values[index];
2149:..\src/interruptions.c ****     }
2150:..\src/interruptions.c **** }
 7492              		.loc 1 2150 0
 7493 002c 19E0     		b	.L487
 7494              	.L484:
2144:..\src/interruptions.c ****     } else if (dev_tension[mot_idx] < min_tension) {
 7495              		.loc 1 2144 0
 7496 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7497 0030 0E4A     		ldr	r2, .L488
 7498 0032 52F82320 		ldr	r2, [r2, r3, lsl #2]
 7499 0036 BB89     		ldrh	r3, [r7, #12]
 7500 0038 9A42     		cmp	r2, r3
 7501 003a 04DA     		bge	.L486
2145:..\src/interruptions.c ****     } else {
 7502              		.loc 1 2145 0
 7503 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7504 003e 0C4A     		ldr	r2, .L488+4
 7505 0040 6421     		movs	r1, #100
 7506 0042 D154     		strb	r1, [r2, r3]
 7507              		.loc 1 2150 0
 7508 0044 0DE0     		b	.L487
 7509              	.L486:
2147:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = pwm_preload_values[index];
 7510              		.loc 1 2147 0
 7511 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7512 0048 084A     		ldr	r2, .L488
 7513 004a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 7514 004e BB89     		ldrh	r3, [r7, #12]
 7515 0050 D31A     		subs	r3, r2, r3
 7516 0052 5B12     		asrs	r3, r3, #9
 7517 0054 FB72     		strb	r3, [r7, #11]
2148:..\src/interruptions.c ****     }
 7518              		.loc 1 2148 0
 7519 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7520 0058 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 7521 005a 0649     		ldr	r1, .L488+8
 7522 005c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 7523 005e 044A     		ldr	r2, .L488+4
 7524 0060 D154     		strb	r1, [r2, r3]
 7525              	.L487:
 7526              		.loc 1 2150 0
 7527 0062 00BF     		nop
 7528 0064 1437     		adds	r7, r7, #20
 7529              		.cfi_def_cfa_offset 4
 7530 0066 BD46     		mov	sp, r7
 7531              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 174


 7532              		@ sp needed
 7533 0068 80BC     		pop	{r7}
 7534              		.cfi_restore 7
 7535              		.cfi_def_cfa_offset 0
 7536 006a 7047     		bx	lr
 7537              	.L489:
 7538              		.align	2
 7539              	.L488:
 7540 006c 00000000 		.word	dev_tension
 7541 0070 00000000 		.word	dev_pwm_sat
 7542 0074 00000000 		.word	pwm_preload_values
 7543              		.cfi_endproc
 7544              	.LFE73:
 7545              		.size	pwm_limit_search, .-pwm_limit_search
 7546              		.section	.text.cycles_counter_update,"ax",%progbits
 7547              		.align	2
 7548              		.global	cycles_counter_update
 7549              		.thumb
 7550              		.thumb_func
 7551              		.type	cycles_counter_update, %function
 7552              	cycles_counter_update:
 7553              	.LFB74:
2151:..\src/interruptions.c **** 
2152:..\src/interruptions.c **** //==============================================================================
2153:..\src/interruptions.c **** //                                                         CYCLES COUNTER UPDATE
2154:..\src/interruptions.c **** //==============================================================================
2155:..\src/interruptions.c **** 
2156:..\src/interruptions.c **** void cycles_counter_update() {
 7554              		.loc 1 2156 0
 7555              		.cfi_startproc
 7556              		@ args = 0, pretend = 0, frame = 24
 7557              		@ frame_needed = 1, uses_anonymous_args = 0
 7558 0000 80B5     		push	{r7, lr}
 7559              		.cfi_def_cfa_offset 8
 7560              		.cfi_offset 7, -8
 7561              		.cfi_offset 14, -4
 7562 0002 86B0     		sub	sp, sp, #24
 7563              		.cfi_def_cfa_offset 32
 7564 0004 00AF     		add	r7, sp, #0
 7565              		.cfi_def_cfa_register 7
2157:..\src/interruptions.c **** 	static uint8 pos_cycle_status = STATE_INACTIVE;
2158:..\src/interruptions.c ****     static uint8 emg_cycle_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
2159:..\src/interruptions.c ****     static uint8 rest_cycle_status = STATE_INACTIVE;
2160:..\src/interruptions.c ****     static int32 bin_threshold = 250;
2161:..\src/interruptions.c ****     static int32 thr_pos = 0, max_pos = 0;
2162:..\src/interruptions.c ****     uint8 i, bin_st, bin_max;
2163:..\src/interruptions.c ****     int32 curr_pos, curr_off;
2164:..\src/interruptions.c ****     int32 step;
2165:..\src/interruptions.c ****     static uint32 timer_value_s, timer_value_e;
2166:..\src/interruptions.c **** 
2167:..\src/interruptions.c ****     curr_pos = (int32)(g_meas[g_mem.motor[0].encoder_line].pos[0] >> g_mem.enc[0].res[0]);
 7566              		.loc 1 2167 0
 7567 0006 9A4B     		ldr	r3, .L530
 7568 0008 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7569 000c 1946     		mov	r1, r3
 7570 000e 994A     		ldr	r2, .L530+4
 7571 0010 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 175


 7572 0012 5B00     		lsls	r3, r3, #1
 7573 0014 0B44     		add	r3, r3, r1
 7574 0016 1B01     		lsls	r3, r3, #4
 7575 0018 1344     		add	r3, r3, r2
 7576 001a 1B68     		ldr	r3, [r3]
 7577 001c 944A     		ldr	r2, .L530
 7578 001e 92F89521 		ldrb	r2, [r2, #405]	@ zero_extendqisi2
 7579 0022 1341     		asrs	r3, r3, r2
 7580 0024 3B61     		str	r3, [r7, #16]
2168:..\src/interruptions.c ****     
2169:..\src/interruptions.c ****     // State machine - Evaluate position counter update
2170:..\src/interruptions.c ****     switch (pos_cycle_status){
 7581              		.loc 1 2170 0
 7582 0026 944B     		ldr	r3, .L530+8
 7583 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7584 002a 012B     		cmp	r3, #1
 7585 002c 29D0     		beq	.L492
 7586 002e 022B     		cmp	r3, #2
 7587 0030 4DD0     		beq	.L493
 7588 0032 002B     		cmp	r3, #0
 7589 0034 40F0E280 		bne	.L491
2171:..\src/interruptions.c ****         case STATE_INACTIVE:
2172:..\src/interruptions.c ****             if (pwm_sign == 1){
 7590              		.loc 1 2172 0
 7591 0038 904B     		ldr	r3, .L530+12
 7592 003a 93F90030 		ldrsb	r3, [r3]
 7593 003e 012B     		cmp	r3, #1
 7594 0040 40F0D980 		bne	.L524
2173:..\src/interruptions.c ****                 thr_pos = curr_pos; 
 7595              		.loc 1 2173 0
 7596 0044 8E4A     		ldr	r2, .L530+16
 7597 0046 3B69     		ldr	r3, [r7, #16]
 7598 0048 1360     		str	r3, [r2]
2174:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 7599              		.loc 1 2174 0
 7600 004a 8E4B     		ldr	r3, .L530+20
 7601 004c 1A68     		ldr	r2, [r3]
 7602 004e 8C4B     		ldr	r3, .L530+16
 7603 0050 1B68     		ldr	r3, [r3]
 7604 0052 9A42     		cmp	r2, r3
 7605 0054 05DD     		ble	.L496
 7606              		.loc 1 2174 0 is_stmt 0 discriminator 1
 7607 0056 8B4B     		ldr	r3, .L530+20
 7608 0058 1A68     		ldr	r2, [r3]
 7609 005a 894B     		ldr	r3, .L530+16
 7610 005c 1B68     		ldr	r3, [r3]
 7611 005e D31A     		subs	r3, r2, r3
 7612 0060 04E0     		b	.L497
 7613              	.L496:
 7614              		.loc 1 2174 0 discriminator 2
 7615 0062 874B     		ldr	r3, .L530+16
 7616 0064 1A68     		ldr	r2, [r3]
 7617 0066 874B     		ldr	r3, .L530+20
 7618 0068 1B68     		ldr	r3, [r3]
 7619 006a D31A     		subs	r3, r2, r3
 7620              	.L497:
 7621              		.loc 1 2174 0 discriminator 4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 176


 7622 006c FB60     		str	r3, [r7, #12]
2175:..\src/interruptions.c ****                 g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum opening track
 7623              		.loc 1 2175 0 is_stmt 1 discriminator 4
 7624 006e 804B     		ldr	r3, .L530
 7625 0070 5A6D     		ldr	r2, [r3, #84]
 7626 0072 FB68     		ldr	r3, [r7, #12]
 7627 0074 1344     		add	r3, r3, r2
 7628 0076 7E4A     		ldr	r2, .L530
 7629 0078 5365     		str	r3, [r2, #84]
2176:..\src/interruptions.c ****                 pos_cycle_status = STATE_ACTIVE;
 7630              		.loc 1 2176 0 discriminator 4
 7631 007a 7F4B     		ldr	r3, .L530+8
 7632 007c 0122     		movs	r2, #1
 7633 007e 1A70     		strb	r2, [r3]
2177:..\src/interruptions.c ****             }
2178:..\src/interruptions.c ****             break;
 7634              		.loc 1 2178 0 discriminator 4
 7635 0080 B9E0     		b	.L524
 7636              	.L492:
2179:..\src/interruptions.c ****         case STATE_ACTIVE:
2180:..\src/interruptions.c ****             if (pwm_sign == -1){
 7637              		.loc 1 2180 0
 7638 0082 7E4B     		ldr	r3, .L530+12
 7639 0084 93F90030 		ldrsb	r3, [r3]
 7640 0088 B3F1FF3F 		cmp	r3, #-1
 7641 008c 40F0B580 		bne	.L525
2181:..\src/interruptions.c ****                 max_pos = curr_pos;
 7642              		.loc 1 2181 0
 7643 0090 7C4A     		ldr	r2, .L530+20
 7644 0092 3B69     		ldr	r3, [r7, #16]
 7645 0094 1360     		str	r3, [r2]
2182:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 7646              		.loc 1 2182 0
 7647 0096 7B4B     		ldr	r3, .L530+20
 7648 0098 1A68     		ldr	r2, [r3]
 7649 009a 794B     		ldr	r3, .L530+16
 7650 009c 1B68     		ldr	r3, [r3]
 7651 009e 9A42     		cmp	r2, r3
 7652 00a0 05DD     		ble	.L499
 7653              		.loc 1 2182 0 is_stmt 0 discriminator 1
 7654 00a2 784B     		ldr	r3, .L530+20
 7655 00a4 1A68     		ldr	r2, [r3]
 7656 00a6 764B     		ldr	r3, .L530+16
 7657 00a8 1B68     		ldr	r3, [r3]
 7658 00aa D31A     		subs	r3, r2, r3
 7659 00ac 04E0     		b	.L500
 7660              	.L499:
 7661              		.loc 1 2182 0 discriminator 2
 7662 00ae 744B     		ldr	r3, .L530+16
 7663 00b0 1A68     		ldr	r2, [r3]
 7664 00b2 744B     		ldr	r3, .L530+20
 7665 00b4 1B68     		ldr	r3, [r3]
 7666 00b6 D31A     		subs	r3, r2, r3
 7667              	.L500:
 7668              		.loc 1 2182 0 discriminator 4
 7669 00b8 FB60     		str	r3, [r7, #12]
2183:..\src/interruptions.c ****                 g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum closure track
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 177


 7670              		.loc 1 2183 0 is_stmt 1 discriminator 4
 7671 00ba 6D4B     		ldr	r3, .L530
 7672 00bc 5A6D     		ldr	r2, [r3, #84]
 7673 00be FB68     		ldr	r3, [r7, #12]
 7674 00c0 1344     		add	r3, r3, r2
 7675 00c2 6B4A     		ldr	r2, .L530
 7676 00c4 5365     		str	r3, [r2, #84]
2184:..\src/interruptions.c ****                 pos_cycle_status = COUNTER_INC;
 7677              		.loc 1 2184 0 discriminator 4
 7678 00c6 6C4B     		ldr	r3, .L530+8
 7679 00c8 0222     		movs	r2, #2
 7680 00ca 1A70     		strb	r2, [r3]
2185:..\src/interruptions.c ****             }
2186:..\src/interruptions.c ****             break;
 7681              		.loc 1 2186 0 discriminator 4
 7682 00cc 95E0     		b	.L525
 7683              	.L493:
2187:..\src/interruptions.c ****         case COUNTER_INC:
2188:..\src/interruptions.c **** 
2189:..\src/interruptions.c ****             curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 7684              		.loc 1 2189 0
 7685 00ce 6D4B     		ldr	r3, .L530+20
 7686 00d0 1A68     		ldr	r2, [r3]
 7687 00d2 6B4B     		ldr	r3, .L530+16
 7688 00d4 1B68     		ldr	r3, [r3]
 7689 00d6 9A42     		cmp	r2, r3
 7690 00d8 05DD     		ble	.L501
 7691              		.loc 1 2189 0 is_stmt 0 discriminator 1
 7692 00da 6A4B     		ldr	r3, .L530+20
 7693 00dc 1A68     		ldr	r2, [r3]
 7694 00de 684B     		ldr	r3, .L530+16
 7695 00e0 1B68     		ldr	r3, [r3]
 7696 00e2 D31A     		subs	r3, r2, r3
 7697 00e4 04E0     		b	.L502
 7698              	.L501:
 7699              		.loc 1 2189 0 discriminator 2
 7700 00e6 664B     		ldr	r3, .L530+16
 7701 00e8 1A68     		ldr	r2, [r3]
 7702 00ea 664B     		ldr	r3, .L530+20
 7703 00ec 1B68     		ldr	r3, [r3]
 7704 00ee D31A     		subs	r3, r2, r3
 7705              	.L502:
 7706              		.loc 1 2189 0 discriminator 4
 7707 00f0 FB60     		str	r3, [r7, #12]
2190:..\src/interruptions.c ****             if (curr_off > bin_threshold){
 7708              		.loc 1 2190 0 is_stmt 1 discriminator 4
 7709 00f2 654B     		ldr	r3, .L530+24
 7710 00f4 1B68     		ldr	r3, [r3]
 7711 00f6 FA68     		ldr	r2, [r7, #12]
 7712 00f8 9A42     		cmp	r2, r3
 7713 00fa 78DD     		ble	.L503
2191:..\src/interruptions.c ****                 //update position histogram
2192:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].pos_lim_sup >> g_mem.enc[0].res[0]) / 10);
 7714              		.loc 1 2192 0
 7715 00fc 5C4B     		ldr	r3, .L530
 7716 00fe D3F8E830 		ldr	r3, [r3, #232]
 7717 0102 5B4A     		ldr	r2, .L530
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 178


 7718 0104 92F89521 		ldrb	r2, [r2, #405]	@ zero_extendqisi2
 7719 0108 1341     		asrs	r3, r3, r2
 7720 010a 604A     		ldr	r2, .L530+28
 7721 010c 82FB0312 		smull	r1, r2, r2, r3
 7722 0110 9210     		asrs	r2, r2, #2
 7723 0112 DB17     		asrs	r3, r3, #31
 7724 0114 D31A     		subs	r3, r2, r3
 7725 0116 BB60     		str	r3, [r7, #8]
2193:..\src/interruptions.c ****                 bin_st  = (uint8)(thr_pos/step);
 7726              		.loc 1 2193 0
 7727 0118 594B     		ldr	r3, .L530+16
 7728 011a 1A68     		ldr	r2, [r3]
 7729 011c BB68     		ldr	r3, [r7, #8]
 7730 011e 92FBF3F3 		sdiv	r3, r2, r3
 7731 0122 FB71     		strb	r3, [r7, #7]
2194:..\src/interruptions.c ****                 bin_max = (uint8)(max_pos/step);
 7732              		.loc 1 2194 0
 7733 0124 574B     		ldr	r3, .L530+20
 7734 0126 1A68     		ldr	r2, [r3]
 7735 0128 BB68     		ldr	r3, [r7, #8]
 7736 012a 92FBF3F3 		sdiv	r3, r2, r3
 7737 012e BB71     		strb	r3, [r7, #6]
2195:..\src/interruptions.c ****                 for (i=bin_st; i<= bin_max; i++){
 7738              		.loc 1 2195 0
 7739 0130 FB79     		ldrb	r3, [r7, #7]
 7740 0132 FB75     		strb	r3, [r7, #23]
 7741 0134 0DE0     		b	.L504
 7742              	.L505:
2196:..\src/interruptions.c ****                     //position_hist counts how many times the SoftHand stays in bin while closing
2197:..\src/interruptions.c ****                     g_mem.cnt.position_hist[i] = g_mem.cnt.position_hist[i] + 1;
 7743              		.loc 1 2197 0 discriminator 3
 7744 0136 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7745 0138 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7746 013a 4D49     		ldr	r1, .L530
 7747 013c 0632     		adds	r2, r2, #6
 7748 013e 51F82220 		ldr	r2, [r1, r2, lsl #2]
 7749 0142 0132     		adds	r2, r2, #1
 7750 0144 4A49     		ldr	r1, .L530
 7751 0146 0633     		adds	r3, r3, #6
 7752 0148 41F82320 		str	r2, [r1, r3, lsl #2]
2195:..\src/interruptions.c ****                 for (i=bin_st; i<= bin_max; i++){
 7753              		.loc 1 2195 0 discriminator 3
 7754 014c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7755 014e 0133     		adds	r3, r3, #1
 7756 0150 FB75     		strb	r3, [r7, #23]
 7757              	.L504:
2195:..\src/interruptions.c ****                 for (i=bin_st; i<= bin_max; i++){
 7758              		.loc 1 2195 0 is_stmt 0 discriminator 1
 7759 0152 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7760 0154 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 7761 0156 9A42     		cmp	r2, r3
 7762 0158 EDD9     		bls	.L505
2198:..\src/interruptions.c ****                 }
2199:..\src/interruptions.c ****                 
2200:..\src/interruptions.c ****                 //update current histogram
2201:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].current_limit) / 4);
 7763              		.loc 1 2201 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 179


 7764 015a 454B     		ldr	r3, .L530
 7765 015c B3F90C31 		ldrsh	r3, [r3, #268]
 7766 0160 002B     		cmp	r3, #0
 7767 0162 00DA     		bge	.L506
 7768 0164 0333     		adds	r3, r3, #3
 7769              	.L506:
 7770 0166 9B10     		asrs	r3, r3, #2
 7771 0168 1BB2     		sxth	r3, r3
 7772 016a BB60     		str	r3, [r7, #8]
2202:..\src/interruptions.c ****                 if (g_meas[g_mem.motor[0].encoder_line].curr > g_mem.motor[0].current_limit)
 7773              		.loc 1 2202 0
 7774 016c 404B     		ldr	r3, .L530
 7775 016e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7776 0172 1946     		mov	r1, r3
 7777 0174 3F4A     		ldr	r2, .L530+4
 7778 0176 0B46     		mov	r3, r1
 7779 0178 5B00     		lsls	r3, r3, #1
 7780 017a 0B44     		add	r3, r3, r1
 7781 017c 1B01     		lsls	r3, r3, #4
 7782 017e 1344     		add	r3, r3, r2
 7783 0180 0C33     		adds	r3, r3, #12
 7784 0182 1B68     		ldr	r3, [r3]
 7785 0184 3A4A     		ldr	r2, .L530
 7786 0186 B2F90C21 		ldrsh	r2, [r2, #268]
 7787 018a 9342     		cmp	r3, r2
 7788 018c 05DD     		ble	.L507
2203:..\src/interruptions.c ****                     g_mem.cnt.current_hist[3] = g_mem.cnt.current_hist[3] + 1; 
 7789              		.loc 1 2203 0
 7790 018e 384B     		ldr	r3, .L530
 7791 0190 DB6C     		ldr	r3, [r3, #76]
 7792 0192 0133     		adds	r3, r3, #1
 7793 0194 364A     		ldr	r2, .L530
 7794 0196 D364     		str	r3, [r2, #76]
 7795 0198 29E0     		b	.L503
 7796              	.L507:
2204:..\src/interruptions.c ****                 else
2205:..\src/interruptions.c ****                     g_mem.cnt.current_hist[(uint8)(g_meas[g_mem.motor[0].encoder_line].curr/step)] 
 7797              		.loc 1 2205 0
 7798 019a 354B     		ldr	r3, .L530
 7799 019c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7800 01a0 1946     		mov	r1, r3
 7801 01a2 344A     		ldr	r2, .L530+4
 7802 01a4 0B46     		mov	r3, r1
 7803 01a6 5B00     		lsls	r3, r3, #1
 7804 01a8 0B44     		add	r3, r3, r1
 7805 01aa 1B01     		lsls	r3, r3, #4
 7806 01ac 1344     		add	r3, r3, r2
 7807 01ae 0C33     		adds	r3, r3, #12
 7808 01b0 1A68     		ldr	r2, [r3]
 7809 01b2 BB68     		ldr	r3, [r7, #8]
 7810 01b4 92FBF3F3 		sdiv	r3, r2, r3
 7811 01b8 D9B2     		uxtb	r1, r3
 7812 01ba 2D4B     		ldr	r3, .L530
 7813 01bc 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7814 01c0 1846     		mov	r0, r3
 7815 01c2 2C4A     		ldr	r2, .L530+4
 7816 01c4 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 180


 7817 01c6 5B00     		lsls	r3, r3, #1
 7818 01c8 0344     		add	r3, r3, r0
 7819 01ca 1B01     		lsls	r3, r3, #4
 7820 01cc 1344     		add	r3, r3, r2
 7821 01ce 0C33     		adds	r3, r3, #12
 7822 01d0 1A68     		ldr	r2, [r3]
 7823 01d2 BB68     		ldr	r3, [r7, #8]
 7824 01d4 92FBF3F3 		sdiv	r3, r2, r3
 7825 01d8 DBB2     		uxtb	r3, r3
 7826 01da 254A     		ldr	r2, .L530
 7827 01dc 1033     		adds	r3, r3, #16
 7828 01de 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7829 01e2 5A1C     		adds	r2, r3, #1
 7830 01e4 2248     		ldr	r0, .L530
 7831 01e6 01F11003 		add	r3, r1, #16
 7832 01ea 40F82320 		str	r2, [r0, r3, lsl #2]
 7833              	.L503:
2206:..\src/interruptions.c ****             }
2207:..\src/interruptions.c ****             pos_cycle_status = STATE_INACTIVE;
 7834              		.loc 1 2207 0
 7835 01ee 224B     		ldr	r3, .L530+8
 7836 01f0 0022     		movs	r2, #0
 7837 01f2 1A70     		strb	r2, [r3]
2208:..\src/interruptions.c ****             break;
 7838              		.loc 1 2208 0
 7839 01f4 02E0     		b	.L491
 7840              	.L524:
2178:..\src/interruptions.c ****         case STATE_ACTIVE:
 7841              		.loc 1 2178 0
 7842 01f6 00BF     		nop
 7843 01f8 00E0     		b	.L491
 7844              	.L525:
2186:..\src/interruptions.c ****         case COUNTER_INC:
 7845              		.loc 1 2186 0
 7846 01fa 00BF     		nop
 7847              	.L491:
2209:..\src/interruptions.c ****     }
2210:..\src/interruptions.c ****     
2211:..\src/interruptions.c ****     // State machine - Evaluate EMG counter update
2212:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 7848              		.loc 1 2212 0
 7849 01fc 0023     		movs	r3, #0
 7850 01fe FB75     		strb	r3, [r7, #23]
 7851 0200 4EE0     		b	.L508
 7852              	.L516:
2213:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 7853              		.loc 1 2213 0
 7854 0202 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7855 0204 224A     		ldr	r2, .L530+32
 7856 0206 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7857 0208 012B     		cmp	r3, #1
 7858 020a 13D0     		beq	.L510
 7859 020c 022B     		cmp	r3, #2
 7860 020e 1CD0     		beq	.L511
 7861 0210 002B     		cmp	r3, #0
 7862 0212 42D1     		bne	.L509
2214:..\src/interruptions.c ****             case STATE_INACTIVE:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 181


2215:..\src/interruptions.c ****                 if (g_emg_meas.emg[i] > g_mem.emg.emg_threshold[i]){
 7863              		.loc 1 2215 0
 7864 0214 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7865 0216 1F4A     		ldr	r2, .L530+36
 7866 0218 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7867 021c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7868 021e 1449     		ldr	r1, .L530
 7869 0220 F832     		adds	r2, r2, #248
 7870 0222 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 7871 0226 9342     		cmp	r3, r2
 7872 0228 1FDD     		ble	.L526
2216:..\src/interruptions.c ****                     emg_cycle_status[i] = STATE_ACTIVE;
 7873              		.loc 1 2216 0
 7874 022a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7875 022c 184A     		ldr	r2, .L530+32
 7876 022e 0121     		movs	r1, #1
 7877 0230 D154     		strb	r1, [r2, r3]
2217:..\src/interruptions.c ****                 }
2218:..\src/interruptions.c ****                 break;
 7878              		.loc 1 2218 0
 7879 0232 1AE0     		b	.L526
 7880              	.L510:
2219:..\src/interruptions.c ****             case STATE_ACTIVE:
2220:..\src/interruptions.c ****                 if (g_emg_meas.emg[i] < 10){
 7881              		.loc 1 2220 0
 7882 0234 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7883 0236 174A     		ldr	r2, .L530+36
 7884 0238 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7885 023c 092B     		cmp	r3, #9
 7886 023e 2BDC     		bgt	.L527
2221:..\src/interruptions.c ****                     emg_cycle_status[i] = COUNTER_INC;
 7887              		.loc 1 2221 0
 7888 0240 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7889 0242 134A     		ldr	r2, .L530+32
 7890 0244 0221     		movs	r1, #2
 7891 0246 D154     		strb	r1, [r2, r3]
2222:..\src/interruptions.c ****                 }
2223:..\src/interruptions.c ****                 break;
 7892              		.loc 1 2223 0
 7893 0248 26E0     		b	.L527
 7894              	.L511:
2224:..\src/interruptions.c ****             case COUNTER_INC:
2225:..\src/interruptions.c ****                 g_mem.cnt.emg_counter[i] = g_mem.cnt.emg_counter[i] + 1;
 7895              		.loc 1 2225 0
 7896 024a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7897 024c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7898 024e 0849     		ldr	r1, .L530
 7899 0250 0432     		adds	r2, r2, #4
 7900 0252 51F82220 		ldr	r2, [r1, r2, lsl #2]
 7901 0256 0132     		adds	r2, r2, #1
 7902 0258 0549     		ldr	r1, .L530
 7903 025a 0433     		adds	r3, r3, #4
 7904 025c 41F82320 		str	r2, [r1, r3, lsl #2]
2226:..\src/interruptions.c ****                 emg_cycle_status[i] = STATE_INACTIVE;
 7905              		.loc 1 2226 0
 7906 0260 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7907 0262 0B4A     		ldr	r2, .L530+32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 182


 7908 0264 0021     		movs	r1, #0
 7909 0266 D154     		strb	r1, [r2, r3]
2227:..\src/interruptions.c ****                 break;
 7910              		.loc 1 2227 0
 7911 0268 17E0     		b	.L509
 7912              	.L526:
2218:..\src/interruptions.c ****             case STATE_ACTIVE:
 7913              		.loc 1 2218 0
 7914 026a 00BF     		nop
 7915 026c 15E0     		b	.L509
 7916              	.L531:
 7917 026e 00BF     		.align	2
 7918              	.L530:
 7919 0270 00000000 		.word	g_mem
 7920 0274 00000000 		.word	g_meas
 7921 0278 84010000 		.word	pos_cycle_status.10596
 7922 027c 00000000 		.word	pwm_sign
 7923 0280 88010000 		.word	thr_pos.10600
 7924 0284 8C010000 		.word	max_pos.10601
 7925 0288 08000000 		.word	bin_threshold.10599
 7926 028c 67666666 		.word	1717986919
 7927 0290 90010000 		.word	emg_cycle_status.10597
 7928 0294 00000000 		.word	g_emg_meas
 7929              	.L527:
2223:..\src/interruptions.c ****             case COUNTER_INC:
 7930              		.loc 1 2223 0
 7931 0298 00BF     		nop
 7932              	.L509:
2212:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 7933              		.loc 1 2212 0 discriminator 2
 7934 029a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7935 029c 0133     		adds	r3, r3, #1
 7936 029e FB75     		strb	r3, [r7, #23]
 7937              	.L508:
2212:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 7938              		.loc 1 2212 0 is_stmt 0 discriminator 1
 7939 02a0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7940 02a2 012B     		cmp	r3, #1
 7941 02a4 07D8     		bhi	.L515
2212:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 7942              		.loc 1 2212 0 discriminator 3
 7943 02a6 2C4B     		ldr	r3, .L532
 7944 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7945 02aa 002B     		cmp	r3, #0
 7946 02ac 03D1     		bne	.L515
2212:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 7947              		.loc 1 2212 0 discriminator 4
 7948 02ae 2B4B     		ldr	r3, .L532+4
 7949 02b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7950 02b2 002B     		cmp	r3, #0
 7951 02b4 A5D0     		beq	.L516
 7952              	.L515:
2228:..\src/interruptions.c ****         }
2229:..\src/interruptions.c ****     }
2230:..\src/interruptions.c ****     
2231:..\src/interruptions.c ****     // State machine - Evaluate rest counter update
2232:..\src/interruptions.c ****     switch (rest_cycle_status){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 183


 7953              		.loc 1 2232 0 is_stmt 1
 7954 02b6 2A4B     		ldr	r3, .L532+8
 7955 02b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7956 02ba 012B     		cmp	r3, #1
 7957 02bc 11D0     		beq	.L518
 7958 02be 022B     		cmp	r3, #2
 7959 02c0 29D0     		beq	.L519
 7960 02c2 002B     		cmp	r3, #0
 7961 02c4 41D1     		bne	.L517
2233:..\src/interruptions.c ****         case STATE_INACTIVE:
2234:..\src/interruptions.c ****             if (rest_enabled){
 7962              		.loc 1 2234 0
 7963 02c6 274B     		ldr	r3, .L532+12
 7964 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7965 02ca 002B     		cmp	r3, #0
 7966 02cc 3AD0     		beq	.L528
2235:..\src/interruptions.c ****                 timer_value_s = (uint32)CYCLES_TIMER_ReadCounter();
 7967              		.loc 1 2235 0
 7968 02ce FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 7969 02d2 0346     		mov	r3, r0
 7970 02d4 1A46     		mov	r2, r3
 7971 02d6 244B     		ldr	r3, .L532+16
 7972 02d8 1A60     		str	r2, [r3]
2236:..\src/interruptions.c ****                 rest_cycle_status = STATE_ACTIVE;
 7973              		.loc 1 2236 0
 7974 02da 214B     		ldr	r3, .L532+8
 7975 02dc 0122     		movs	r2, #1
 7976 02de 1A70     		strb	r2, [r3]
2237:..\src/interruptions.c ****             }
2238:..\src/interruptions.c ****             break;
 7977              		.loc 1 2238 0
 7978 02e0 30E0     		b	.L528
 7979              	.L518:
2239:..\src/interruptions.c ****         case STATE_ACTIVE:
2240:..\src/interruptions.c ****             if (!rest_enabled){
 7980              		.loc 1 2240 0
 7981 02e2 204B     		ldr	r3, .L532+12
 7982 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7983 02e6 002B     		cmp	r3, #0
 7984 02e8 2ED1     		bne	.L529
2241:..\src/interruptions.c ****                 timer_value_e = (uint32)CYCLES_TIMER_ReadCounter();
 7985              		.loc 1 2241 0
 7986 02ea FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 7987 02ee 0346     		mov	r3, r0
 7988 02f0 1A46     		mov	r2, r3
 7989 02f2 1E4B     		ldr	r3, .L532+20
 7990 02f4 1A60     		str	r2, [r3]
2242:..\src/interruptions.c ****                 if (timer_value_s < timer_value_e) {
 7991              		.loc 1 2242 0
 7992 02f6 1C4B     		ldr	r3, .L532+16
 7993 02f8 1A68     		ldr	r2, [r3]
 7994 02fa 1C4B     		ldr	r3, .L532+20
 7995 02fc 1B68     		ldr	r3, [r3]
 7996 02fe 9A42     		cmp	r2, r3
 7997 0300 05D2     		bcs	.L523
2243:..\src/interruptions.c ****                     timer_value_s = timer_value_s + (uint32)1200;
 7998              		.loc 1 2243 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 184


 7999 0302 194B     		ldr	r3, .L532+16
 8000 0304 1B68     		ldr	r3, [r3]
 8001 0306 03F59663 		add	r3, r3, #1200
 8002 030a 174A     		ldr	r2, .L532+16
 8003 030c 1360     		str	r3, [r2]
 8004              	.L523:
2244:..\src/interruptions.c ****                 }
2245:..\src/interruptions.c ****                 rest_cycle_status = COUNTER_INC;
 8005              		.loc 1 2245 0
 8006 030e 144B     		ldr	r3, .L532+8
 8007 0310 0222     		movs	r2, #2
 8008 0312 1A70     		strb	r2, [r3]
2246:..\src/interruptions.c ****             }
2247:..\src/interruptions.c ****             break;
 8009              		.loc 1 2247 0
 8010 0314 18E0     		b	.L529
 8011              	.L519:
2248:..\src/interruptions.c ****         case COUNTER_INC: 
2249:..\src/interruptions.c ****             g_mem.cnt.total_time_rest = g_mem.cnt.total_time_rest + (uint32)((timer_value_s - timer
 8012              		.loc 1 2249 0
 8013 0316 164B     		ldr	r3, .L532+24
 8014 0318 DA6D     		ldr	r2, [r3, #92]
 8015 031a 134B     		ldr	r3, .L532+16
 8016 031c 1968     		ldr	r1, [r3]
 8017 031e 134B     		ldr	r3, .L532+20
 8018 0320 1B68     		ldr	r3, [r3]
 8019 0322 CB1A     		subs	r3, r1, r3
 8020 0324 1349     		ldr	r1, .L532+28
 8021 0326 A1FB0313 		umull	r1, r3, r1, r3
 8022 032a DB08     		lsrs	r3, r3, #3
 8023 032c 1344     		add	r3, r3, r2
 8024 032e 104A     		ldr	r2, .L532+24
 8025 0330 D365     		str	r3, [r2, #92]
2250:..\src/interruptions.c ****             g_mem.cnt.rest_counter = g_mem.cnt.rest_counter + 1;
 8026              		.loc 1 2250 0
 8027 0332 0F4B     		ldr	r3, .L532+24
 8028 0334 1B6D     		ldr	r3, [r3, #80]
 8029 0336 0133     		adds	r3, r3, #1
 8030 0338 0D4A     		ldr	r2, .L532+24
 8031 033a 1365     		str	r3, [r2, #80]
2251:..\src/interruptions.c ****             rest_cycle_status = STATE_INACTIVE;
 8032              		.loc 1 2251 0
 8033 033c 084B     		ldr	r3, .L532+8
 8034 033e 0022     		movs	r2, #0
 8035 0340 1A70     		strb	r2, [r3]
2252:..\src/interruptions.c ****             break;
 8036              		.loc 1 2252 0
 8037 0342 02E0     		b	.L517
 8038              	.L528:
2238:..\src/interruptions.c ****         case STATE_ACTIVE:
 8039              		.loc 1 2238 0
 8040 0344 00BF     		nop
 8041 0346 00E0     		b	.L517
 8042              	.L529:
2247:..\src/interruptions.c ****         case COUNTER_INC: 
 8043              		.loc 1 2247 0
 8044 0348 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 185


 8045              	.L517:
2253:..\src/interruptions.c ****     }
2254:..\src/interruptions.c ****           
2255:..\src/interruptions.c ****     // This function writes rows [row_start, row_end] on EEPROM
2256:..\src/interruptions.c ****     save_cycles_eeprom();
 8046              		.loc 1 2256 0
 8047 034a FFF7FEFF 		bl	save_cycles_eeprom
2257:..\src/interruptions.c ****     
2258:..\src/interruptions.c **** }
 8048              		.loc 1 2258 0
 8049 034e 00BF     		nop
 8050 0350 1837     		adds	r7, r7, #24
 8051              		.cfi_def_cfa_offset 8
 8052 0352 BD46     		mov	sp, r7
 8053              		.cfi_def_cfa_register 13
 8054              		@ sp needed
 8055 0354 80BD     		pop	{r7, pc}
 8056              	.L533:
 8057 0356 00BF     		.align	2
 8058              	.L532:
 8059 0358 00000000 		.word	emg_1_status
 8060 035c 00000000 		.word	emg_2_status
 8061 0360 92010000 		.word	rest_cycle_status.10598
 8062 0364 00000000 		.word	rest_enabled
 8063 0368 94010000 		.word	timer_value_s.10608
 8064 036c 98010000 		.word	timer_value_e.10609
 8065 0370 00000000 		.word	g_mem
 8066 0374 CDCCCCCC 		.word	-858993459
 8067              		.cfi_endproc
 8068              	.LFE74:
 8069              		.size	cycles_counter_update, .-cycles_counter_update
 8070              		.section	.text.save_cycles_eeprom,"ax",%progbits
 8071              		.align	2
 8072              		.global	save_cycles_eeprom
 8073              		.thumb
 8074              		.thumb_func
 8075              		.type	save_cycles_eeprom, %function
 8076              	save_cycles_eeprom:
 8077              	.LFB75:
2259:..\src/interruptions.c **** 
2260:..\src/interruptions.c **** //==============================================================================
2261:..\src/interruptions.c **** //                                                            SAVE CYCLES EEPROM
2262:..\src/interruptions.c **** //==============================================================================
2263:..\src/interruptions.c **** 
2264:..\src/interruptions.c **** void save_cycles_eeprom() {
 8078              		.loc 1 2264 0
 8079              		.cfi_startproc
 8080              		@ args = 0, pretend = 0, frame = 24
 8081              		@ frame_needed = 1, uses_anonymous_args = 0
 8082 0000 80B5     		push	{r7, lr}
 8083              		.cfi_def_cfa_offset 8
 8084              		.cfi_offset 7, -8
 8085              		.cfi_offset 14, -4
 8086 0002 86B0     		sub	sp, sp, #24
 8087              		.cfi_def_cfa_offset 32
 8088 0004 00AF     		add	r7, sp, #0
 8089              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 186


2265:..\src/interruptions.c **** 
2266:..\src/interruptions.c ****     cystatus status;
2267:..\src/interruptions.c ****     static uint8 row_number;
2268:..\src/interruptions.c ****     uint8 row_start = 1;
 8090              		.loc 1 2268 0
 8091 0006 0123     		movs	r3, #1
 8092 0008 FB75     		strb	r3, [r7, #23]
2269:..\src/interruptions.c ****     uint8* addr_start   = (uint8*)&g_mem.cnt.emg_counter[0];    //Data at beginning of the row 1
 8093              		.loc 1 2269 0
 8094 000a 394B     		ldr	r3, .L550
 8095 000c 3B61     		str	r3, [r7, #16]
2270:..\src/interruptions.c ****     uint8* addr_start_c = (uint8*)&c_mem.cnt.emg_counter[0];
 8096              		.loc 1 2270 0
 8097 000e 394B     		ldr	r3, .L550+4
 8098 0010 FB60     		str	r3, [r7, #12]
2271:..\src/interruptions.c ****     uint8 row_end   = row_start + EEPROM_COUNTERS_ROWS - 1;
 8099              		.loc 1 2271 0
 8100 0012 FB7D     		ldrb	r3, [r7, #23]
 8101 0014 0433     		adds	r3, r3, #4
 8102 0016 FB72     		strb	r3, [r7, #11]
2272:..\src/interruptions.c ****     static uint8* m_addr = NULL; 
2273:..\src/interruptions.c **** 
2274:..\src/interruptions.c ****     // This part of code writes rows [row_start, row_end] on EEPROM    
2275:..\src/interruptions.c ****     switch(cycles_status) {
 8103              		.loc 1 2275 0
 8104 0018 374B     		ldr	r3, .L550+8
 8105 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8106 001c 042B     		cmp	r3, #4
 8107 001e 63D8     		bhi	.L546
 8108 0020 01A2     		adr	r2, .L537
 8109 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8110 0026 00BF     		.p2align 2
 8111              	.L537:
 8112 0028 3D000000 		.word	.L536+1
 8113 002c 5B000000 		.word	.L538+1
 8114 0030 8B000000 		.word	.L539+1
 8115 0034 C7000000 		.word	.L540+1
 8116 0038 DF000000 		.word	.L547+1
 8117              		.p2align 1
 8118              	.L536:
2276:..\src/interruptions.c ****         case PREPARE_DATA:
2277:..\src/interruptions.c ****             // Store data in c_mem structure to have consistent counters
2278:..\src/interruptions.c ****             memcpy( addr_start_c, addr_start, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );            
 8119              		.loc 1 2278 0
 8120 003c 5022     		movs	r2, #80
 8121 003e 3969     		ldr	r1, [r7, #16]
 8122 0040 F868     		ldr	r0, [r7, #12]
 8123 0042 FFF7FEFF 		bl	memcpy
2279:..\src/interruptions.c ****             m_addr = addr_start;
 8124              		.loc 1 2279 0
 8125 0046 2D4A     		ldr	r2, .L550+12
 8126 0048 3B69     		ldr	r3, [r7, #16]
 8127 004a 1360     		str	r3, [r2]
2280:..\src/interruptions.c ****             row_number = row_start;
 8128              		.loc 1 2280 0
 8129 004c 2C4A     		ldr	r2, .L550+16
 8130 004e FB7D     		ldrb	r3, [r7, #23]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 187


 8131 0050 1370     		strb	r3, [r2]
2281:..\src/interruptions.c ****             cycles_status = WRITE_CYCLES;
 8132              		.loc 1 2281 0
 8133 0052 294B     		ldr	r3, .L550+8
 8134 0054 0122     		movs	r2, #1
 8135 0056 1A70     		strb	r2, [r3]
2282:..\src/interruptions.c ****             break;
 8136              		.loc 1 2282 0
 8137 0058 46E0     		b	.L535
 8138              	.L538:
2283:..\src/interruptions.c ****             
2284:..\src/interruptions.c ****         case WRITE_CYCLES:
2285:..\src/interruptions.c ****             EEPROM_UpdateTemperature();     //Check temperature of chip before writing
 8139              		.loc 1 2285 0
 8140 005a FFF7FEFF 		bl	EEPROM_UpdateTemperature
2286:..\src/interruptions.c ****             status = EEPROM_StartWrite((uint8*) m_addr, row_number);           
 8141              		.loc 1 2286 0
 8142 005e 274B     		ldr	r3, .L550+12
 8143 0060 1A68     		ldr	r2, [r3]
 8144 0062 274B     		ldr	r3, .L550+16
 8145 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8146 0066 1946     		mov	r1, r3
 8147 0068 1046     		mov	r0, r2
 8148 006a FFF7FEFF 		bl	EEPROM_StartWrite
 8149 006e 7860     		str	r0, [r7, #4]
2287:..\src/interruptions.c ****             if(status == CYRET_STARTED || status == CYRET_SUCCESS) {
 8150              		.loc 1 2287 0
 8151 0070 7B68     		ldr	r3, [r7, #4]
 8152 0072 072B     		cmp	r3, #7
 8153 0074 02D0     		beq	.L542
 8154              		.loc 1 2287 0 is_stmt 0 discriminator 1
 8155 0076 7B68     		ldr	r3, [r7, #4]
 8156 0078 002B     		cmp	r3, #0
 8157 007a 32D1     		bne	.L548
 8158              	.L542:
2288:..\src/interruptions.c ****                 cycles_status = WAIT_QUERY;
 8159              		.loc 1 2288 0 is_stmt 1
 8160 007c 1E4B     		ldr	r3, .L550+8
 8161 007e 0222     		movs	r2, #2
 8162 0080 1A70     		strb	r2, [r3]
2289:..\src/interruptions.c ****                 can_write = FALSE;
 8163              		.loc 1 2289 0
 8164 0082 204B     		ldr	r3, .L550+20
 8165 0084 0022     		movs	r2, #0
 8166 0086 1A70     		strb	r2, [r3]
2290:..\src/interruptions.c ****             }
2291:..\src/interruptions.c ****             break;
 8167              		.loc 1 2291 0
 8168 0088 2BE0     		b	.L548
 8169              	.L539:
2292:..\src/interruptions.c ****             
2293:..\src/interruptions.c ****         case WAIT_QUERY:
2294:..\src/interruptions.c ****             status = EEPROM_Query();
 8170              		.loc 1 2294 0
 8171 008a FFF7FEFF 		bl	EEPROM_Query
 8172 008e 7860     		str	r0, [r7, #4]
2295:..\src/interruptions.c ****             if(status == CYRET_SUCCESS) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 188


 8173              		.loc 1 2295 0
 8174 0090 7B68     		ldr	r3, [r7, #4]
 8175 0092 002B     		cmp	r3, #0
 8176 0094 27D1     		bne	.L549
2296:..\src/interruptions.c ****                 if (row_number < row_end) {
 8177              		.loc 1 2296 0
 8178 0096 1A4B     		ldr	r3, .L550+16
 8179 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8180 009a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 8181 009c 9A42     		cmp	r2, r3
 8182 009e 0ED9     		bls	.L545
2297:..\src/interruptions.c ****                     m_addr = m_addr + EEPROM_BYTES_ROW;
 8183              		.loc 1 2297 0
 8184 00a0 164B     		ldr	r3, .L550+12
 8185 00a2 1B68     		ldr	r3, [r3]
 8186 00a4 1033     		adds	r3, r3, #16
 8187 00a6 154A     		ldr	r2, .L550+12
 8188 00a8 1360     		str	r3, [r2]
2298:..\src/interruptions.c ****                     row_number = row_number + 1;
 8189              		.loc 1 2298 0
 8190 00aa 154B     		ldr	r3, .L550+16
 8191 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8192 00ae 0133     		adds	r3, r3, #1
 8193 00b0 DAB2     		uxtb	r2, r3
 8194 00b2 134B     		ldr	r3, .L550+16
 8195 00b4 1A70     		strb	r2, [r3]
2299:..\src/interruptions.c ****                     cycles_status = WRITE_CYCLES;
 8196              		.loc 1 2299 0
 8197 00b6 104B     		ldr	r3, .L550+8
 8198 00b8 0122     		movs	r2, #1
 8199 00ba 1A70     		strb	r2, [r3]
2300:..\src/interruptions.c ****                 }
2301:..\src/interruptions.c ****                 else {
2302:..\src/interruptions.c ****                     cycles_status = WRITE_END;
2303:..\src/interruptions.c ****                 }
2304:..\src/interruptions.c ****             }
2305:..\src/interruptions.c ****             break;
 8200              		.loc 1 2305 0
 8201 00bc 13E0     		b	.L549
 8202              	.L545:
2302:..\src/interruptions.c ****                 }
 8203              		.loc 1 2302 0
 8204 00be 0E4B     		ldr	r3, .L550+8
 8205 00c0 0322     		movs	r2, #3
 8206 00c2 1A70     		strb	r2, [r3]
 8207              		.loc 1 2305 0
 8208 00c4 0FE0     		b	.L549
 8209              	.L540:
2306:..\src/interruptions.c ****            
2307:..\src/interruptions.c ****         case WRITE_END:
2308:..\src/interruptions.c ****             can_write = TRUE;            
 8210              		.loc 1 2308 0
 8211 00c6 0F4B     		ldr	r3, .L550+20
 8212 00c8 0122     		movs	r2, #1
 8213 00ca 1A70     		strb	r2, [r3]
2309:..\src/interruptions.c ****             cycles_status = NONE;
 8214              		.loc 1 2309 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 189


 8215 00cc 0A4B     		ldr	r3, .L550+8
 8216 00ce 0422     		movs	r2, #4
 8217 00d0 1A70     		strb	r2, [r3]
2310:..\src/interruptions.c ****             
2311:..\src/interruptions.c ****             // Restore data saved in c_mem structure
2312:..\src/interruptions.c ****             memcpy( addr_start, addr_start_c, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );
 8218              		.loc 1 2312 0
 8219 00d2 5022     		movs	r2, #80
 8220 00d4 F968     		ldr	r1, [r7, #12]
 8221 00d6 3869     		ldr	r0, [r7, #16]
 8222 00d8 FFF7FEFF 		bl	memcpy
2313:..\src/interruptions.c ****             break;
 8223              		.loc 1 2313 0
 8224 00dc 04E0     		b	.L535
 8225              	.L547:
2314:..\src/interruptions.c ****             
2315:..\src/interruptions.c ****         case NONE:
2316:..\src/interruptions.c ****             break;
 8226              		.loc 1 2316 0
 8227 00de 00BF     		nop
 8228 00e0 02E0     		b	.L546
 8229              	.L548:
2291:..\src/interruptions.c ****             
 8230              		.loc 1 2291 0
 8231 00e2 00BF     		nop
 8232 00e4 00E0     		b	.L546
 8233              	.L549:
2305:..\src/interruptions.c ****            
 8234              		.loc 1 2305 0
 8235 00e6 00BF     		nop
 8236              	.L535:
 8237              	.L546:
2317:..\src/interruptions.c ****     }
2318:..\src/interruptions.c ****     
2319:..\src/interruptions.c **** }
 8238              		.loc 1 2319 0
 8239 00e8 00BF     		nop
 8240 00ea 1837     		adds	r7, r7, #24
 8241              		.cfi_def_cfa_offset 8
 8242 00ec BD46     		mov	sp, r7
 8243              		.cfi_def_cfa_register 13
 8244              		@ sp needed
 8245 00ee 80BD     		pop	{r7, pc}
 8246              	.L551:
 8247              		.align	2
 8248              	.L550:
 8249 00f0 10000000 		.word	g_mem+16
 8250 00f4 10000000 		.word	c_mem+16
 8251 00f8 00000000 		.word	cycles_status
 8252 00fc 9C010000 		.word	m_addr.10636
 8253 0100 A0010000 		.word	row_number.10631
 8254 0104 00000000 		.word	can_write
 8255              		.cfi_endproc
 8256              	.LFE75:
 8257              		.size	save_cycles_eeprom, .-save_cycles_eeprom
 8258              		.bss
 8259              	state.10354:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 190


 8260 0000 00       		.space	1
 8261 0001 000000   		.align	2
 8262              	rx_queue.10358:
 8263 0004 000000   		.space	3
 8264              	data_packet_length.10356:
 8265 0007 00       		.space	1
 8266              	data_packet_index.10355:
 8267 0008 00       		.space	1
 8268 0009 000000   		.align	2
 8269              	data_packet_buffer.10357:
 8270 000c 00000000 		.space	128
 8270      00000000 
 8270      00000000 
 8270      00000000 
 8270      00000000 
 8271              		.data
 8272              		.align	1
 8273              		.type	counter_calibration.10374, %object
 8274              		.size	counter_calibration.10374, 2
 8275              	counter_calibration.10374:
 8276 0000 0100     		.short	1
 8277              		.align	1
 8278              		.type	counter_tension_func.10375, %object
 8279              		.size	counter_tension_func.10375, 2
 8280              	counter_tension_func.10375:
 8281 0002 0100     		.short	1
 8282              		.bss
 8283              	current_emg.10414:
 8284 008c 00       		.space	1
 8285 008d 000000   		.align	2
 8286              	pos_error_sum.10407:
 8287 0090 00000000 		.space	4
 8288              		.align	2
 8289              	prev_pos_err.10409:
 8290 0094 00000000 		.space	4
 8291              	motor_dir.10412:
 8292 0098 00       		.space	1
 8293 0099 000000   		.align	2
 8294              	curr_error_sum.10408:
 8295 009c 00000000 		.space	4
 8296              		.align	2
 8297              	prev_curr_err.10410:
 8298 00a0 00000000 		.space	4
 8299              		.align	2
 8300              	prev_pwm.10411:
 8301 00a4 00000000 		.space	4
 8302              		.align	2
 8303              	position_counter.10413:
 8304 00a8 00000000 		.space	4
 8305              		.align	2
 8306              	current_emg.10468:
 8307 00ac 0000     		.space	2
 8308 00ae 0000     		.align	2
 8309              	pos_error_sum.10461:
 8310 00b0 00000000 		.space	8
 8310      00000000 
 8311              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 191


 8312              	prev_pos_err.10463:
 8313 00b8 00000000 		.space	8
 8313      00000000 
 8314              		.align	2
 8315              	motor_dir.10466:
 8316 00c0 0000     		.space	2
 8317 00c2 0000     		.align	2
 8318              	curr_error_sum.10462:
 8319 00c4 00000000 		.space	8
 8319      00000000 
 8320              		.align	2
 8321              	prev_curr_err.10464:
 8322 00cc 00000000 		.space	8
 8322      00000000 
 8323              		.align	2
 8324              	prev_pwm.10465:
 8325 00d4 00000000 		.space	8
 8325      00000000 
 8326              		.align	2
 8327              	position_counter.10467:
 8328 00dc 00000000 		.space	8
 8328      00000000 
 8329              		.align	2
 8330              	last_value_encoder.10508:
 8331 00e4 00000000 		.space	24
 8331      00000000 
 8331      00000000 
 8331      00000000 
 8331      00000000 
 8332              		.align	2
 8333              	comp_value_encoder.10509:
 8334 00fc 00000000 		.space	24
 8334      00000000 
 8334      00000000 
 8334      00000000 
 8334      00000000 
 8335              		.data
 8336              		.align	2
 8337              		.type	only_first_time.10511, %object
 8338              		.size	only_first_time.10511, 2
 8339              	only_first_time.10511:
 8340 0004 01       		.byte	1
 8341 0005 01       		.byte	1
 8342              		.bss
 8343              		.align	2
 8344              	error.10510:
 8345 0114 00000000 		.space	6
 8345      0000
 8346 011a 0000     		.align	2
 8347              	v_value.10516:
 8348 011c 00000000 		.space	24
 8348      00000000 
 8348      00000000 
 8348      00000000 
 8348      00000000 
 8349              		.align	2
 8350              	vv_value.10517:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 192


 8351 0134 00000000 		.space	24
 8351      00000000 
 8351      00000000 
 8351      00000000 
 8351      00000000 
 8352              		.align	2
 8353              	vvv_value.10518:
 8354 014c 00000000 		.space	24
 8354      00000000 
 8354      00000000 
 8354      00000000 
 8354      00000000 
 8355              		.align	2
 8356              	pos_reconstruct.10515:
 8357 0164 0000     		.space	2
 8358 0166 0000     		.align	2
 8359              	one_time_execute.10513:
 8360 0168 0000     		.space	2
 8361 016a 0000     		.align	2
 8362              	safe_startup_motor_activation.10512:
 8363 016c 0000     		.space	2
 8364 016e 0000     		.align	2
 8365              	count_startup_motor.10514:
 8366 0170 00000000 		.space	8
 8366      00000000 
 8367              		.data
 8368              		.type	first_tension_valid.10537, %object
 8369              		.size	first_tension_valid.10537, 1
 8370              	first_tension_valid.10537:
 8371 0006 01       		.byte	1
 8372              		.bss
 8373              		.align	1
 8374              	count.10538:
 8375 0178 0000     		.space	2
 8376              	idx.10540:
 8377 017a 00       		.space	1
 8378 017b 00       		.align	2
 8379              	v_count.10539:
 8380 017c 00000000 		.space	4
 8381              		.align	1
 8382              	emg_counter_1.10535:
 8383 0180 0000     		.space	2
 8384              		.align	1
 8385              	emg_counter_2.10536:
 8386 0182 0000     		.space	2
 8387              	pos_cycle_status.10596:
 8388 0184 00       		.space	1
 8389 0185 000000   		.align	2
 8390              	thr_pos.10600:
 8391 0188 00000000 		.space	4
 8392              		.align	2
 8393              	max_pos.10601:
 8394 018c 00000000 		.space	4
 8395              		.data
 8396 0007 00       		.align	2
 8397              		.type	bin_threshold.10599, %object
 8398              		.size	bin_threshold.10599, 4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 193


 8399              	bin_threshold.10599:
 8400 0008 FA000000 		.word	250
 8401              		.bss
 8402              		.align	2
 8403              	emg_cycle_status.10597:
 8404 0190 0000     		.space	2
 8405              	rest_cycle_status.10598:
 8406 0192 00       		.space	1
 8407 0193 00       		.align	2
 8408              	timer_value_s.10608:
 8409 0194 00000000 		.space	4
 8410              		.align	2
 8411              	timer_value_e.10609:
 8412 0198 00000000 		.space	4
 8413              		.align	2
 8414              	m_addr.10636:
 8415 019c 00000000 		.space	4
 8416              	row_number.10631:
 8417 01a0 00       		.space	1
 8418              		.text
 8419              	.Letext0:
 8420              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 8421              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 8422              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 8423              		.file 5 "..\\src\\commands.h"
 8424              		.file 6 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 8425              		.file 7 "..\\src\\globals.h"
 8426              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 8427              		.section	.debug_info,"",%progbits
 8428              	.Ldebug_info0:
 8429 0000 5C170000 		.4byte	0x175c
 8430 0004 0400     		.2byte	0x4
 8431 0006 00000000 		.4byte	.Ldebug_abbrev0
 8432 000a 04       		.byte	0x4
 8433 000b 01       		.uleb128 0x1
 8434 000c 48070000 		.4byte	.LASF298
 8435 0010 0C       		.byte	0xc
 8436 0011 1F0E0000 		.4byte	.LASF299
 8437 0015 410C0000 		.4byte	.LASF300
 8438 0019 00000000 		.4byte	.Ldebug_ranges0+0
 8439 001d 00000000 		.4byte	0
 8440 0021 00000000 		.4byte	.Ldebug_line0
 8441 0025 02       		.uleb128 0x2
 8442 0026 01       		.byte	0x1
 8443 0027 06       		.byte	0x6
 8444 0028 25030000 		.4byte	.LASF0
 8445 002c 02       		.uleb128 0x2
 8446 002d 01       		.byte	0x1
 8447 002e 08       		.byte	0x8
 8448 002f A2030000 		.4byte	.LASF1
 8449 0033 02       		.uleb128 0x2
 8450 0034 02       		.byte	0x2
 8451 0035 05       		.byte	0x5
 8452 0036 A40C0000 		.4byte	.LASF2
 8453 003a 02       		.uleb128 0x2
 8454 003b 02       		.byte	0x2
 8455 003c 07       		.byte	0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 194


 8456 003d F10D0000 		.4byte	.LASF3
 8457 0041 03       		.uleb128 0x3
 8458 0042 860E0000 		.4byte	.LASF9
 8459 0046 02       		.byte	0x2
 8460 0047 3F       		.byte	0x3f
 8461 0048 4C000000 		.4byte	0x4c
 8462 004c 02       		.uleb128 0x2
 8463 004d 04       		.byte	0x4
 8464 004e 05       		.byte	0x5
 8465 004f 30020000 		.4byte	.LASF4
 8466 0053 02       		.uleb128 0x2
 8467 0054 04       		.byte	0x4
 8468 0055 07       		.byte	0x7
 8469 0056 75060000 		.4byte	.LASF5
 8470 005a 02       		.uleb128 0x2
 8471 005b 08       		.byte	0x8
 8472 005c 05       		.byte	0x5
 8473 005d 03080000 		.4byte	.LASF6
 8474 0061 02       		.uleb128 0x2
 8475 0062 08       		.byte	0x8
 8476 0063 07       		.byte	0x7
 8477 0064 9A0A0000 		.4byte	.LASF7
 8478 0068 04       		.uleb128 0x4
 8479 0069 04       		.byte	0x4
 8480 006a 05       		.byte	0x5
 8481 006b 696E7400 		.ascii	"int\000"
 8482 006f 02       		.uleb128 0x2
 8483 0070 04       		.byte	0x4
 8484 0071 07       		.byte	0x7
 8485 0072 DD080000 		.4byte	.LASF8
 8486 0076 03       		.uleb128 0x3
 8487 0077 52000000 		.4byte	.LASF10
 8488 007b 03       		.byte	0x3
 8489 007c 2C       		.byte	0x2c
 8490 007d 41000000 		.4byte	0x41
 8491 0081 05       		.uleb128 0x5
 8492 0082 930C0000 		.4byte	.LASF11
 8493 0086 04       		.byte	0x4
 8494 0087 E401     		.2byte	0x1e4
 8495 0089 2C000000 		.4byte	0x2c
 8496 008d 05       		.uleb128 0x5
 8497 008e D30E0000 		.4byte	.LASF12
 8498 0092 04       		.byte	0x4
 8499 0093 E501     		.2byte	0x1e5
 8500 0095 3A000000 		.4byte	0x3a
 8501 0099 05       		.uleb128 0x5
 8502 009a 83000000 		.4byte	.LASF13
 8503 009e 04       		.byte	0x4
 8504 009f E601     		.2byte	0x1e6
 8505 00a1 53000000 		.4byte	0x53
 8506 00a5 05       		.uleb128 0x5
 8507 00a6 45010000 		.4byte	.LASF14
 8508 00aa 04       		.byte	0x4
 8509 00ab E701     		.2byte	0x1e7
 8510 00ad 25000000 		.4byte	0x25
 8511 00b1 05       		.uleb128 0x5
 8512 00b2 300D0000 		.4byte	.LASF15
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 195


 8513 00b6 04       		.byte	0x4
 8514 00b7 E801     		.2byte	0x1e8
 8515 00b9 33000000 		.4byte	0x33
 8516 00bd 05       		.uleb128 0x5
 8517 00be 360E0000 		.4byte	.LASF16
 8518 00c2 04       		.byte	0x4
 8519 00c3 E901     		.2byte	0x1e9
 8520 00c5 4C000000 		.4byte	0x4c
 8521 00c9 05       		.uleb128 0x5
 8522 00ca CC020000 		.4byte	.LASF17
 8523 00ce 04       		.byte	0x4
 8524 00cf EA01     		.2byte	0x1ea
 8525 00d1 D5000000 		.4byte	0xd5
 8526 00d5 02       		.uleb128 0x2
 8527 00d6 04       		.byte	0x4
 8528 00d7 04       		.byte	0x4
 8529 00d8 B2080000 		.4byte	.LASF18
 8530 00dc 02       		.uleb128 0x2
 8531 00dd 08       		.byte	0x8
 8532 00de 04       		.byte	0x4
 8533 00df 46080000 		.4byte	.LASF19
 8534 00e3 02       		.uleb128 0x2
 8535 00e4 01       		.byte	0x1
 8536 00e5 08       		.byte	0x8
 8537 00e6 34040000 		.4byte	.LASF20
 8538 00ea 05       		.uleb128 0x5
 8539 00eb 16090000 		.4byte	.LASF21
 8540 00ef 04       		.byte	0x4
 8541 00f0 8602     		.2byte	0x286
 8542 00f2 53000000 		.4byte	0x53
 8543 00f6 05       		.uleb128 0x5
 8544 00f7 370B0000 		.4byte	.LASF22
 8545 00fb 04       		.byte	0x4
 8546 00fc 8E02     		.2byte	0x28e
 8547 00fe 02010000 		.4byte	0x102
 8548 0102 06       		.uleb128 0x6
 8549 0103 81000000 		.4byte	0x81
 8550 0107 02       		.uleb128 0x2
 8551 0108 08       		.byte	0x8
 8552 0109 04       		.byte	0x4
 8553 010a A7090000 		.4byte	.LASF23
 8554 010e 02       		.uleb128 0x2
 8555 010f 04       		.byte	0x4
 8556 0110 07       		.byte	0x7
 8557 0111 00000000 		.4byte	.LASF24
 8558 0115 07       		.uleb128 0x7
 8559 0116 E3000000 		.4byte	0xe3
 8560 011a 25010000 		.4byte	0x125
 8561 011e 08       		.uleb128 0x8
 8562 011f 0E010000 		.4byte	0x10e
 8563 0123 07       		.byte	0x7
 8564 0124 00       		.byte	0
 8565 0125 09       		.uleb128 0x9
 8566 0126 C00E0000 		.4byte	.LASF31
 8567 012a 01       		.byte	0x1
 8568 012b 2C000000 		.4byte	0x2c
 8569 012f 05       		.byte	0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 196


 8570 0130 8B       		.byte	0x8b
 8571 0131 5A010000 		.4byte	0x15a
 8572 0135 0A       		.uleb128 0xa
 8573 0136 0E060000 		.4byte	.LASF25
 8574 013a 00       		.byte	0
 8575 013b 0A       		.uleb128 0xa
 8576 013c 1F090000 		.4byte	.LASF26
 8577 0140 01       		.byte	0x1
 8578 0141 0A       		.uleb128 0xa
 8579 0142 C6010000 		.4byte	.LASF27
 8580 0146 02       		.byte	0x2
 8581 0147 0A       		.uleb128 0xa
 8582 0148 13010000 		.4byte	.LASF28
 8583 014c 03       		.byte	0x3
 8584 014d 0A       		.uleb128 0xa
 8585 014e DC000000 		.4byte	.LASF29
 8586 0152 04       		.byte	0x4
 8587 0153 0A       		.uleb128 0xa
 8588 0154 1A000000 		.4byte	.LASF30
 8589 0158 05       		.byte	0x5
 8590 0159 00       		.byte	0
 8591 015a 09       		.uleb128 0x9
 8592 015b 11080000 		.4byte	.LASF32
 8593 015f 01       		.byte	0x1
 8594 0160 2C000000 		.4byte	0x2c
 8595 0164 05       		.byte	0x5
 8596 0165 9D       		.byte	0x9d
 8597 0166 83010000 		.4byte	0x183
 8598 016a 0A       		.uleb128 0xa
 8599 016b 780E0000 		.4byte	.LASF33
 8600 016f 00       		.byte	0
 8601 0170 0A       		.uleb128 0xa
 8602 0171 26070000 		.4byte	.LASF34
 8603 0175 01       		.byte	0x1
 8604 0176 0A       		.uleb128 0xa
 8605 0177 97090000 		.4byte	.LASF35
 8606 017b 02       		.byte	0x2
 8607 017c 0A       		.uleb128 0xa
 8608 017d 58060000 		.4byte	.LASF36
 8609 0181 03       		.byte	0x3
 8610 0182 00       		.byte	0
 8611 0183 03       		.uleb128 0x3
 8612 0184 510E0000 		.4byte	.LASF37
 8613 0188 06       		.byte	0x6
 8614 0189 7E       		.byte	0x7e
 8615 018a 8E010000 		.4byte	0x18e
 8616 018e 0B       		.uleb128 0xb
 8617 018f 510E0000 		.4byte	.LASF37
 8618 0193 0C       		.uleb128 0xc
 8619 0194 04       		.byte	0x4
 8620 0195 83010000 		.4byte	0x183
 8621 0199 0D       		.uleb128 0xd
 8622 019a D6070000 		.4byte	.LASF40
 8623 019e 10       		.byte	0x10
 8624 019f 07       		.byte	0x7
 8625 01a0 CE       		.byte	0xce
 8626 01a1 D6010000 		.4byte	0x1d6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 197


 8627 01a5 0E       		.uleb128 0xe
 8628 01a6 706F7300 		.ascii	"pos\000"
 8629 01aa 07       		.byte	0x7
 8630 01ab CF       		.byte	0xcf
 8631 01ac BD000000 		.4byte	0xbd
 8632 01b0 00       		.byte	0
 8633 01b1 0F       		.uleb128 0xf
 8634 01b2 0B070000 		.4byte	.LASF38
 8635 01b6 07       		.byte	0x7
 8636 01b7 D0       		.byte	0xd0
 8637 01b8 BD000000 		.4byte	0xbd
 8638 01bc 04       		.byte	0x4
 8639 01bd 0E       		.uleb128 0xe
 8640 01be 70776D00 		.ascii	"pwm\000"
 8641 01c2 07       		.byte	0x7
 8642 01c3 D1       		.byte	0xd1
 8643 01c4 BD000000 		.4byte	0xbd
 8644 01c8 08       		.byte	0x8
 8645 01c9 0F       		.uleb128 0xf
 8646 01ca CE0A0000 		.4byte	.LASF39
 8647 01ce 07       		.byte	0x7
 8648 01cf D2       		.byte	0xd2
 8649 01d0 81000000 		.4byte	0x81
 8650 01d4 0C       		.byte	0xc
 8651 01d5 00       		.byte	0
 8652 01d6 0D       		.uleb128 0xd
 8653 01d7 EA0B0000 		.4byte	.LASF41
 8654 01db 30       		.byte	0x30
 8655 01dc 07       		.byte	0x7
 8656 01dd D9       		.byte	0xd9
 8657 01de 2B020000 		.4byte	0x22b
 8658 01e2 0E       		.uleb128 0xe
 8659 01e3 706F7300 		.ascii	"pos\000"
 8660 01e7 07       		.byte	0x7
 8661 01e8 DA       		.byte	0xda
 8662 01e9 2B020000 		.4byte	0x22b
 8663 01ed 00       		.byte	0
 8664 01ee 0F       		.uleb128 0xf
 8665 01ef 0B070000 		.4byte	.LASF38
 8666 01f3 07       		.byte	0x7
 8667 01f4 DB       		.byte	0xdb
 8668 01f5 BD000000 		.4byte	0xbd
 8669 01f9 0C       		.byte	0xc
 8670 01fa 0F       		.uleb128 0xf
 8671 01fb 670D0000 		.4byte	.LASF42
 8672 01ff 07       		.byte	0x7
 8673 0200 DC       		.byte	0xdc
 8674 0201 BD000000 		.4byte	0xbd
 8675 0205 10       		.byte	0x10
 8676 0206 0E       		.uleb128 0xe
 8677 0207 726F7400 		.ascii	"rot\000"
 8678 020b 07       		.byte	0x7
 8679 020c DD       		.byte	0xdd
 8680 020d 3B020000 		.4byte	0x23b
 8681 0211 14       		.byte	0x14
 8682 0212 0E       		.uleb128 0xe
 8683 0213 76656C00 		.ascii	"vel\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 198


 8684 0217 07       		.byte	0x7
 8685 0218 DE       		.byte	0xde
 8686 0219 2B020000 		.4byte	0x22b
 8687 021d 18       		.byte	0x18
 8688 021e 0E       		.uleb128 0xe
 8689 021f 61636300 		.ascii	"acc\000"
 8690 0223 07       		.byte	0x7
 8691 0224 DF       		.byte	0xdf
 8692 0225 2B020000 		.4byte	0x22b
 8693 0229 24       		.byte	0x24
 8694 022a 00       		.byte	0
 8695 022b 07       		.uleb128 0x7
 8696 022c BD000000 		.4byte	0xbd
 8697 0230 3B020000 		.4byte	0x23b
 8698 0234 08       		.uleb128 0x8
 8699 0235 0E010000 		.4byte	0x10e
 8700 0239 02       		.byte	0x2
 8701 023a 00       		.byte	0
 8702 023b 07       		.uleb128 0x7
 8703 023c A5000000 		.4byte	0xa5
 8704 0240 4B020000 		.4byte	0x24b
 8705 0244 08       		.uleb128 0x8
 8706 0245 0E010000 		.4byte	0x10e
 8707 0249 02       		.byte	0x2
 8708 024a 00       		.byte	0
 8709 024b 0D       		.uleb128 0xd
 8710 024c D9090000 		.4byte	.LASF43
 8711 0250 20       		.byte	0x20
 8712 0251 07       		.byte	0x7
 8713 0252 E2       		.byte	0xe2
 8714 0253 70020000 		.4byte	0x270
 8715 0257 0E       		.uleb128 0xe
 8716 0258 656D6700 		.ascii	"emg\000"
 8717 025c 07       		.byte	0x7
 8718 025d E3       		.byte	0xe3
 8719 025e 70020000 		.4byte	0x270
 8720 0262 00       		.byte	0
 8721 0263 0F       		.uleb128 0xf
 8722 0264 5B090000 		.4byte	.LASF44
 8723 0268 07       		.byte	0x7
 8724 0269 E4       		.byte	0xe4
 8725 026a 80020000 		.4byte	0x280
 8726 026e 08       		.byte	0x8
 8727 026f 00       		.byte	0
 8728 0270 07       		.uleb128 0x7
 8729 0271 BD000000 		.4byte	0xbd
 8730 0275 80020000 		.4byte	0x280
 8731 0279 08       		.uleb128 0x8
 8732 027a 0E010000 		.4byte	0x10e
 8733 027e 01       		.byte	0x1
 8734 027f 00       		.byte	0
 8735 0280 07       		.uleb128 0x7
 8736 0281 BD000000 		.4byte	0xbd
 8737 0285 90020000 		.4byte	0x290
 8738 0289 08       		.uleb128 0x8
 8739 028a 0E010000 		.4byte	0x10e
 8740 028e 05       		.byte	0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 199


 8741 028f 00       		.byte	0
 8742 0290 0D       		.uleb128 0xd
 8743 0291 70000000 		.4byte	.LASF45
 8744 0295 86       		.byte	0x86
 8745 0296 07       		.byte	0x7
 8746 0297 EB       		.byte	0xeb
 8747 0298 CD020000 		.4byte	0x2cd
 8748 029c 0F       		.uleb128 0xf
 8749 029d 2F050000 		.4byte	.LASF46
 8750 02a1 07       		.byte	0x7
 8751 02a2 EC       		.byte	0xec
 8752 02a3 CD020000 		.4byte	0x2cd
 8753 02a7 00       		.byte	0
 8754 02a8 0F       		.uleb128 0xf
 8755 02a9 B10A0000 		.4byte	.LASF47
 8756 02ad 07       		.byte	0x7
 8757 02ae ED       		.byte	0xed
 8758 02af B1000000 		.4byte	0xb1
 8759 02b3 80       		.byte	0x80
 8760 02b4 0E       		.uleb128 0xe
 8761 02b5 696E6400 		.ascii	"ind\000"
 8762 02b9 07       		.byte	0x7
 8763 02ba EE       		.byte	0xee
 8764 02bb B1000000 		.4byte	0xb1
 8765 02bf 82       		.byte	0x82
 8766 02c0 0F       		.uleb128 0xf
 8767 02c1 99010000 		.4byte	.LASF48
 8768 02c5 07       		.byte	0x7
 8769 02c6 EF       		.byte	0xef
 8770 02c7 81000000 		.4byte	0x81
 8771 02cb 84       		.byte	0x84
 8772 02cc 00       		.byte	0
 8773 02cd 07       		.uleb128 0x7
 8774 02ce 81000000 		.4byte	0x81
 8775 02d2 DD020000 		.4byte	0x2dd
 8776 02d6 08       		.uleb128 0x8
 8777 02d7 0E010000 		.4byte	0x10e
 8778 02db 7F       		.byte	0x7f
 8779 02dc 00       		.byte	0
 8780 02dd 0D       		.uleb128 0xd
 8781 02de B9020000 		.4byte	.LASF49
 8782 02e2 50       		.byte	0x50
 8783 02e3 07       		.byte	0x7
 8784 02e4 F7       		.byte	0xf7
 8785 02e5 3E030000 		.4byte	0x33e
 8786 02e9 0F       		.uleb128 0xf
 8787 02ea EE020000 		.4byte	.LASF50
 8788 02ee 07       		.byte	0x7
 8789 02ef F8       		.byte	0xf8
 8790 02f0 3E030000 		.4byte	0x33e
 8791 02f4 00       		.byte	0
 8792 02f5 0F       		.uleb128 0xf
 8793 02f6 6B010000 		.4byte	.LASF51
 8794 02fa 07       		.byte	0x7
 8795 02fb F9       		.byte	0xf9
 8796 02fc 4E030000 		.4byte	0x34e
 8797 0300 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 200


 8798 0301 0F       		.uleb128 0xf
 8799 0302 8A090000 		.4byte	.LASF52
 8800 0306 07       		.byte	0x7
 8801 0307 FA       		.byte	0xfa
 8802 0308 5E030000 		.4byte	0x35e
 8803 030c 30       		.byte	0x30
 8804 030d 0F       		.uleb128 0xf
 8805 030e 06010000 		.4byte	.LASF53
 8806 0312 07       		.byte	0x7
 8807 0313 FB       		.byte	0xfb
 8808 0314 99000000 		.4byte	0x99
 8809 0318 40       		.byte	0x40
 8810 0319 0F       		.uleb128 0xf
 8811 031a 900E0000 		.4byte	.LASF54
 8812 031e 07       		.byte	0x7
 8813 031f FC       		.byte	0xfc
 8814 0320 99000000 		.4byte	0x99
 8815 0324 44       		.byte	0x44
 8816 0325 0F       		.uleb128 0xf
 8817 0326 87060000 		.4byte	.LASF55
 8818 032a 07       		.byte	0x7
 8819 032b FD       		.byte	0xfd
 8820 032c 99000000 		.4byte	0x99
 8821 0330 48       		.byte	0x48
 8822 0331 0F       		.uleb128 0xf
 8823 0332 A9060000 		.4byte	.LASF56
 8824 0336 07       		.byte	0x7
 8825 0337 FE       		.byte	0xfe
 8826 0338 99000000 		.4byte	0x99
 8827 033c 4C       		.byte	0x4c
 8828 033d 00       		.byte	0
 8829 033e 07       		.uleb128 0x7
 8830 033f 99000000 		.4byte	0x99
 8831 0343 4E030000 		.4byte	0x34e
 8832 0347 08       		.uleb128 0x8
 8833 0348 0E010000 		.4byte	0x10e
 8834 034c 01       		.byte	0x1
 8835 034d 00       		.byte	0
 8836 034e 07       		.uleb128 0x7
 8837 034f 99000000 		.4byte	0x99
 8838 0353 5E030000 		.4byte	0x35e
 8839 0357 08       		.uleb128 0x8
 8840 0358 0E010000 		.4byte	0x10e
 8841 035c 09       		.byte	0x9
 8842 035d 00       		.byte	0
 8843 035e 07       		.uleb128 0x7
 8844 035f 99000000 		.4byte	0x99
 8845 0363 6E030000 		.4byte	0x36e
 8846 0367 08       		.uleb128 0x8
 8847 0368 0E010000 		.4byte	0x10e
 8848 036c 03       		.byte	0x3
 8849 036d 00       		.byte	0
 8850 036e 10       		.uleb128 0x10
 8851 036f BC010000 		.4byte	.LASF57
 8852 0373 10       		.byte	0x10
 8853 0374 07       		.byte	0x7
 8854 0375 0101     		.2byte	0x101
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 201


 8855 0377 FD030000 		.4byte	0x3fd
 8856 037b 11       		.uleb128 0x11
 8857 037c 696400   		.ascii	"id\000"
 8858 037f 07       		.byte	0x7
 8859 0380 0201     		.2byte	0x102
 8860 0382 81000000 		.4byte	0x81
 8861 0386 00       		.byte	0
 8862 0387 12       		.uleb128 0x12
 8863 0388 D50C0000 		.4byte	.LASF58
 8864 038c 07       		.byte	0x7
 8865 038d 0301     		.2byte	0x103
 8866 038f FD030000 		.4byte	0x3fd
 8867 0393 01       		.byte	0x1
 8868 0394 12       		.uleb128 0x12
 8869 0395 FF0C0000 		.4byte	.LASF59
 8870 0399 07       		.byte	0x7
 8871 039a 0401     		.2byte	0x104
 8872 039c FD030000 		.4byte	0x3fd
 8873 03a0 04       		.byte	0x4
 8874 03a1 12       		.uleb128 0x12
 8875 03a2 FC030000 		.4byte	.LASF60
 8876 03a6 07       		.byte	0x7
 8877 03a7 0501     		.2byte	0x105
 8878 03a9 81000000 		.4byte	0x81
 8879 03ad 07       		.byte	0x7
 8880 03ae 12       		.uleb128 0x12
 8881 03af 50020000 		.4byte	.LASF61
 8882 03b3 07       		.byte	0x7
 8883 03b4 0601     		.2byte	0x106
 8884 03b6 81000000 		.4byte	0x81
 8885 03ba 08       		.byte	0x8
 8886 03bb 12       		.uleb128 0x12
 8887 03bc E2010000 		.4byte	.LASF62
 8888 03c0 07       		.byte	0x7
 8889 03c1 0701     		.2byte	0x107
 8890 03c3 81000000 		.4byte	0x81
 8891 03c7 09       		.byte	0x9
 8892 03c8 12       		.uleb128 0x12
 8893 03c9 D80D0000 		.4byte	.LASF63
 8894 03cd 07       		.byte	0x7
 8895 03ce 0801     		.2byte	0x108
 8896 03d0 81000000 		.4byte	0x81
 8897 03d4 0A       		.byte	0xa
 8898 03d5 12       		.uleb128 0x12
 8899 03d6 990D0000 		.4byte	.LASF64
 8900 03da 07       		.byte	0x7
 8901 03db 0901     		.2byte	0x109
 8902 03dd 81000000 		.4byte	0x81
 8903 03e1 0B       		.byte	0xb
 8904 03e2 12       		.uleb128 0x12
 8905 03e3 990B0000 		.4byte	.LASF65
 8906 03e7 07       		.byte	0x7
 8907 03e8 0A01     		.2byte	0x10a
 8908 03ea 81000000 		.4byte	0x81
 8909 03ee 0C       		.byte	0xc
 8910 03ef 12       		.uleb128 0x12
 8911 03f0 94020000 		.4byte	.LASF66
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 202


 8912 03f4 07       		.byte	0x7
 8913 03f5 0B01     		.2byte	0x10b
 8914 03f7 FD030000 		.4byte	0x3fd
 8915 03fb 0D       		.byte	0xd
 8916 03fc 00       		.byte	0
 8917 03fd 07       		.uleb128 0x7
 8918 03fe 81000000 		.4byte	0x81
 8919 0402 0D040000 		.4byte	0x40d
 8920 0406 08       		.uleb128 0x8
 8921 0407 0E010000 		.4byte	0x10e
 8922 040b 02       		.byte	0x2
 8923 040c 00       		.byte	0
 8924 040d 10       		.uleb128 0x10
 8925 040e C7080000 		.4byte	.LASF67
 8926 0412 70       		.byte	0x70
 8927 0413 07       		.byte	0x7
 8928 0414 0E01     		.2byte	0x10e
 8929 0416 87050000 		.4byte	0x587
 8930 041a 11       		.uleb128 0x11
 8931 041b 6B5F7000 		.ascii	"k_p\000"
 8932 041f 07       		.byte	0x7
 8933 0420 0F01     		.2byte	0x10f
 8934 0422 BD000000 		.4byte	0xbd
 8935 0426 00       		.byte	0
 8936 0427 11       		.uleb128 0x11
 8937 0428 6B5F6900 		.ascii	"k_i\000"
 8938 042c 07       		.byte	0x7
 8939 042d 1001     		.2byte	0x110
 8940 042f BD000000 		.4byte	0xbd
 8941 0433 04       		.byte	0x4
 8942 0434 11       		.uleb128 0x11
 8943 0435 6B5F6400 		.ascii	"k_d\000"
 8944 0439 07       		.byte	0x7
 8945 043a 1101     		.2byte	0x111
 8946 043c BD000000 		.4byte	0xbd
 8947 0440 08       		.byte	0x8
 8948 0441 12       		.uleb128 0x12
 8949 0442 0A0B0000 		.4byte	.LASF68
 8950 0446 07       		.byte	0x7
 8951 0447 1201     		.2byte	0x112
 8952 0449 BD000000 		.4byte	0xbd
 8953 044d 0C       		.byte	0xc
 8954 044e 12       		.uleb128 0x12
 8955 044f 8C040000 		.4byte	.LASF69
 8956 0453 07       		.byte	0x7
 8957 0454 1301     		.2byte	0x113
 8958 0456 BD000000 		.4byte	0xbd
 8959 045a 10       		.byte	0x10
 8960 045b 12       		.uleb128 0x12
 8961 045c 7F040000 		.4byte	.LASF70
 8962 0460 07       		.byte	0x7
 8963 0461 1401     		.2byte	0x114
 8964 0463 BD000000 		.4byte	0xbd
 8965 0467 14       		.byte	0x14
 8966 0468 12       		.uleb128 0x12
 8967 0469 600D0000 		.4byte	.LASF71
 8968 046d 07       		.byte	0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 203


 8969 046e 1501     		.2byte	0x115
 8970 0470 BD000000 		.4byte	0xbd
 8971 0474 18       		.byte	0x18
 8972 0475 12       		.uleb128 0x12
 8973 0476 28050000 		.4byte	.LASF72
 8974 047a 07       		.byte	0x7
 8975 047b 1601     		.2byte	0x116
 8976 047d BD000000 		.4byte	0xbd
 8977 0481 1C       		.byte	0x1c
 8978 0482 12       		.uleb128 0x12
 8979 0483 AE0C0000 		.4byte	.LASF73
 8980 0487 07       		.byte	0x7
 8981 0488 1701     		.2byte	0x117
 8982 048a BD000000 		.4byte	0xbd
 8983 048e 20       		.byte	0x20
 8984 048f 12       		.uleb128 0x12
 8985 0490 36050000 		.4byte	.LASF74
 8986 0494 07       		.byte	0x7
 8987 0495 1801     		.2byte	0x118
 8988 0497 BD000000 		.4byte	0xbd
 8989 049b 24       		.byte	0x24
 8990 049c 12       		.uleb128 0x12
 8991 049d 41060000 		.4byte	.LASF75
 8992 04a1 07       		.byte	0x7
 8993 04a2 1901     		.2byte	0x119
 8994 04a4 BD000000 		.4byte	0xbd
 8995 04a8 28       		.byte	0x28
 8996 04a9 12       		.uleb128 0x12
 8997 04aa 060F0000 		.4byte	.LASF76
 8998 04ae 07       		.byte	0x7
 8999 04af 1A01     		.2byte	0x11a
 9000 04b1 BD000000 		.4byte	0xbd
 9001 04b5 2C       		.byte	0x2c
 9002 04b6 12       		.uleb128 0x12
 9003 04b7 B9060000 		.4byte	.LASF77
 9004 04bb 07       		.byte	0x7
 9005 04bc 1B01     		.2byte	0x11b
 9006 04be 81000000 		.4byte	0x81
 9007 04c2 30       		.byte	0x30
 9008 04c3 12       		.uleb128 0x12
 9009 04c4 490D0000 		.4byte	.LASF78
 9010 04c8 07       		.byte	0x7
 9011 04c9 1C01     		.2byte	0x11c
 9012 04cb 81000000 		.4byte	0x81
 9013 04cf 31       		.byte	0x31
 9014 04d0 12       		.uleb128 0x12
 9015 04d1 1C0B0000 		.4byte	.LASF79
 9016 04d5 07       		.byte	0x7
 9017 04d6 1D01     		.2byte	0x11d
 9018 04d8 81000000 		.4byte	0x81
 9019 04dc 32       		.byte	0x32
 9020 04dd 12       		.uleb128 0x12
 9021 04de 590E0000 		.4byte	.LASF80
 9022 04e2 07       		.byte	0x7
 9023 04e3 1E01     		.2byte	0x11e
 9024 04e5 81000000 		.4byte	0x81
 9025 04e9 33       		.byte	0x33
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 204


 9026 04ea 12       		.uleb128 0x12
 9027 04eb 91000000 		.4byte	.LASF81
 9028 04ef 07       		.byte	0x7
 9029 04f0 1F01     		.2byte	0x11f
 9030 04f2 BD000000 		.4byte	0xbd
 9031 04f6 34       		.byte	0x34
 9032 04f7 12       		.uleb128 0x12
 9033 04f8 BC040000 		.4byte	.LASF82
 9034 04fc 07       		.byte	0x7
 9035 04fd 2001     		.2byte	0x120
 9036 04ff BD000000 		.4byte	0xbd
 9037 0503 38       		.byte	0x38
 9038 0504 12       		.uleb128 0x12
 9039 0505 8C080000 		.4byte	.LASF83
 9040 0509 07       		.byte	0x7
 9041 050a 2101     		.2byte	0x121
 9042 050c BD000000 		.4byte	0xbd
 9043 0510 3C       		.byte	0x3c
 9044 0511 12       		.uleb128 0x12
 9045 0512 39040000 		.4byte	.LASF84
 9046 0516 07       		.byte	0x7
 9047 0517 2201     		.2byte	0x122
 9048 0519 BD000000 		.4byte	0xbd
 9049 051d 40       		.byte	0x40
 9050 051e 12       		.uleb128 0x12
 9051 051f F0000000 		.4byte	.LASF85
 9052 0523 07       		.byte	0x7
 9053 0524 2301     		.2byte	0x123
 9054 0526 87050000 		.4byte	0x587
 9055 052a 44       		.byte	0x44
 9056 052b 12       		.uleb128 0x12
 9057 052c B20E0000 		.4byte	.LASF86
 9058 0530 07       		.byte	0x7
 9059 0531 2401     		.2byte	0x124
 9060 0533 B1000000 		.4byte	0xb1
 9061 0537 5C       		.byte	0x5c
 9062 0538 12       		.uleb128 0x12
 9063 0539 1B070000 		.4byte	.LASF87
 9064 053d 07       		.byte	0x7
 9065 053e 2501     		.2byte	0x125
 9066 0540 81000000 		.4byte	0x81
 9067 0544 5E       		.byte	0x5e
 9068 0545 12       		.uleb128 0x12
 9069 0546 09090000 		.4byte	.LASF88
 9070 054a 07       		.byte	0x7
 9071 054b 2601     		.2byte	0x126
 9072 054d 81000000 		.4byte	0x81
 9073 0551 5F       		.byte	0x5f
 9074 0552 12       		.uleb128 0x12
 9075 0553 07040000 		.4byte	.LASF89
 9076 0557 07       		.byte	0x7
 9077 0558 2701     		.2byte	0x127
 9078 055a 81000000 		.4byte	0x81
 9079 055e 60       		.byte	0x60
 9080 055f 12       		.uleb128 0x12
 9081 0560 6E040000 		.4byte	.LASF90
 9082 0564 07       		.byte	0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 205


 9083 0565 2801     		.2byte	0x128
 9084 0567 81000000 		.4byte	0x81
 9085 056b 61       		.byte	0x61
 9086 056c 12       		.uleb128 0x12
 9087 056d B0030000 		.4byte	.LASF91
 9088 0571 07       		.byte	0x7
 9089 0572 2901     		.2byte	0x129
 9090 0574 81000000 		.4byte	0x81
 9091 0578 62       		.byte	0x62
 9092 0579 12       		.uleb128 0x12
 9093 057a 94020000 		.4byte	.LASF66
 9094 057e 07       		.byte	0x7
 9095 057f 2A01     		.2byte	0x12a
 9096 0581 97050000 		.4byte	0x597
 9097 0585 63       		.byte	0x63
 9098 0586 00       		.byte	0
 9099 0587 07       		.uleb128 0x7
 9100 0588 D5000000 		.4byte	0xd5
 9101 058c 97050000 		.4byte	0x597
 9102 0590 08       		.uleb128 0x8
 9103 0591 0E010000 		.4byte	0x10e
 9104 0595 05       		.byte	0x5
 9105 0596 00       		.byte	0
 9106 0597 07       		.uleb128 0x7
 9107 0598 81000000 		.4byte	0x81
 9108 059c A7050000 		.4byte	0x5a7
 9109 05a0 08       		.uleb128 0x8
 9110 05a1 0E010000 		.4byte	0x10e
 9111 05a5 0C       		.byte	0xc
 9112 05a6 00       		.byte	0
 9113 05a7 10       		.uleb128 0x10
 9114 05a8 040E0000 		.4byte	.LASF92
 9115 05ac 30       		.byte	0x30
 9116 05ad 07       		.byte	0x7
 9117 05ae 2D01     		.2byte	0x12d
 9118 05b0 2A060000 		.4byte	0x62a
 9119 05b4 12       		.uleb128 0x12
 9120 05b5 6E080000 		.4byte	.LASF93
 9121 05b9 07       		.byte	0x7
 9122 05ba 2E01     		.2byte	0x12e
 9123 05bc 2A060000 		.4byte	0x62a
 9124 05c0 00       		.byte	0
 9125 05c1 11       		.uleb128 0x11
 9126 05c2 72657300 		.ascii	"res\000"
 9127 05c6 07       		.byte	0x7
 9128 05c7 2F01     		.2byte	0x12f
 9129 05c9 FD030000 		.4byte	0x3fd
 9130 05cd 05       		.byte	0x5
 9131 05ce 12       		.uleb128 0x12
 9132 05cf DB060000 		.4byte	.LASF94
 9133 05d3 07       		.byte	0x7
 9134 05d4 3001     		.2byte	0x130
 9135 05d6 2B020000 		.4byte	0x22b
 9136 05da 08       		.byte	0x8
 9137 05db 12       		.uleb128 0x12
 9138 05dc 85040000 		.4byte	.LASF95
 9139 05e0 07       		.byte	0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 206


 9140 05e1 3101     		.2byte	0x131
 9141 05e3 3A060000 		.4byte	0x63a
 9142 05e7 14       		.byte	0x14
 9143 05e8 12       		.uleb128 0x12
 9144 05e9 3B0A0000 		.4byte	.LASF96
 9145 05ed 07       		.byte	0x7
 9146 05ee 3201     		.2byte	0x132
 9147 05f0 81000000 		.4byte	0x81
 9148 05f4 20       		.byte	0x20
 9149 05f5 12       		.uleb128 0x12
 9150 05f6 9F010000 		.4byte	.LASF97
 9151 05fa 07       		.byte	0x7
 9152 05fb 3301     		.2byte	0x133
 9153 05fd FD030000 		.4byte	0x3fd
 9154 0601 21       		.byte	0x21
 9155 0602 12       		.uleb128 0x12
 9156 0603 EC090000 		.4byte	.LASF98
 9157 0607 07       		.byte	0x7
 9158 0608 3401     		.2byte	0x134
 9159 060a A5000000 		.4byte	0xa5
 9160 060e 24       		.byte	0x24
 9161 060f 12       		.uleb128 0x12
 9162 0610 BB0B0000 		.4byte	.LASF99
 9163 0614 07       		.byte	0x7
 9164 0615 3501     		.2byte	0x135
 9165 0617 3B020000 		.4byte	0x23b
 9166 061b 25       		.byte	0x25
 9167 061c 12       		.uleb128 0x12
 9168 061d 94020000 		.4byte	.LASF66
 9169 0621 07       		.byte	0x7
 9170 0622 3601     		.2byte	0x136
 9171 0624 4A060000 		.4byte	0x64a
 9172 0628 28       		.byte	0x28
 9173 0629 00       		.byte	0
 9174 062a 07       		.uleb128 0x7
 9175 062b 81000000 		.4byte	0x81
 9176 062f 3A060000 		.4byte	0x63a
 9177 0633 08       		.uleb128 0x8
 9178 0634 0E010000 		.4byte	0x10e
 9179 0638 04       		.byte	0x4
 9180 0639 00       		.byte	0
 9181 063a 07       		.uleb128 0x7
 9182 063b C9000000 		.4byte	0xc9
 9183 063f 4A060000 		.4byte	0x64a
 9184 0643 08       		.uleb128 0x8
 9185 0644 0E010000 		.4byte	0x10e
 9186 0648 02       		.byte	0x2
 9187 0649 00       		.byte	0
 9188 064a 07       		.uleb128 0x7
 9189 064b 81000000 		.4byte	0x81
 9190 064f 5A060000 		.4byte	0x65a
 9191 0653 08       		.uleb128 0x8
 9192 0654 0E010000 		.4byte	0x10e
 9193 0658 07       		.byte	0x7
 9194 0659 00       		.byte	0
 9195 065a 10       		.uleb128 0x10
 9196 065b 64010000 		.4byte	.LASF100
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 207


 9197 065f 10       		.byte	0x10
 9198 0660 07       		.byte	0x7
 9199 0661 3901     		.2byte	0x139
 9200 0663 B6060000 		.4byte	0x6b6
 9201 0667 12       		.uleb128 0x12
 9202 0668 69090000 		.4byte	.LASF101
 9203 066c 07       		.byte	0x7
 9204 066d 3A01     		.2byte	0x13a
 9205 066f B6060000 		.4byte	0x6b6
 9206 0673 00       		.byte	0
 9207 0674 12       		.uleb128 0x12
 9208 0675 A40E0000 		.4byte	.LASF102
 9209 0679 07       		.byte	0x7
 9210 067a 3B01     		.2byte	0x13b
 9211 067c 3E030000 		.4byte	0x33e
 9212 0680 04       		.byte	0x4
 9213 0681 12       		.uleb128 0x12
 9214 0682 D2040000 		.4byte	.LASF103
 9215 0686 07       		.byte	0x7
 9216 0687 3C01     		.2byte	0x13c
 9217 0689 81000000 		.4byte	0x81
 9218 068d 0C       		.byte	0xc
 9219 068e 12       		.uleb128 0x12
 9220 068f D50B0000 		.4byte	.LASF104
 9221 0693 07       		.byte	0x7
 9222 0694 3D01     		.2byte	0x13d
 9223 0696 81000000 		.4byte	0x81
 9224 069a 0D       		.byte	0xd
 9225 069b 12       		.uleb128 0x12
 9226 069c 5F030000 		.4byte	.LASF105
 9227 06a0 07       		.byte	0x7
 9228 06a1 3E01     		.2byte	0x13e
 9229 06a3 81000000 		.4byte	0x81
 9230 06a7 0E       		.byte	0xe
 9231 06a8 12       		.uleb128 0x12
 9232 06a9 94020000 		.4byte	.LASF66
 9233 06ad 07       		.byte	0x7
 9234 06ae 3F01     		.2byte	0x13f
 9235 06b0 C6060000 		.4byte	0x6c6
 9236 06b4 0F       		.byte	0xf
 9237 06b5 00       		.byte	0
 9238 06b6 07       		.uleb128 0x7
 9239 06b7 8D000000 		.4byte	0x8d
 9240 06bb C6060000 		.4byte	0x6c6
 9241 06bf 08       		.uleb128 0x8
 9242 06c0 0E010000 		.4byte	0x10e
 9243 06c4 01       		.byte	0x1
 9244 06c5 00       		.byte	0
 9245 06c6 07       		.uleb128 0x7
 9246 06c7 81000000 		.4byte	0x81
 9247 06cb D6060000 		.4byte	0x6d6
 9248 06cf 08       		.uleb128 0x8
 9249 06d0 0E010000 		.4byte	0x10e
 9250 06d4 00       		.byte	0
 9251 06d5 00       		.byte	0
 9252 06d6 10       		.uleb128 0x10
 9253 06d7 33090000 		.4byte	.LASF106
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 208


 9254 06db 20       		.byte	0x20
 9255 06dc 07       		.byte	0x7
 9256 06dd 4201     		.2byte	0x142
 9257 06df 18070000 		.4byte	0x718
 9258 06e3 12       		.uleb128 0x12
 9259 06e4 02020000 		.4byte	.LASF107
 9260 06e8 07       		.byte	0x7
 9261 06e9 4301     		.2byte	0x143
 9262 06eb 81000000 		.4byte	0x81
 9263 06ef 00       		.byte	0
 9264 06f0 12       		.uleb128 0x12
 9265 06f1 E20D0000 		.4byte	.LASF108
 9266 06f5 07       		.byte	0x7
 9267 06f6 4401     		.2byte	0x144
 9268 06f8 81000000 		.4byte	0x81
 9269 06fc 01       		.byte	0x1
 9270 06fd 12       		.uleb128 0x12
 9271 06fe B8080000 		.4byte	.LASF109
 9272 0702 07       		.byte	0x7
 9273 0703 4501     		.2byte	0x145
 9274 0705 18070000 		.4byte	0x718
 9275 0709 02       		.byte	0x2
 9276 070a 12       		.uleb128 0x12
 9277 070b 94020000 		.4byte	.LASF66
 9278 070f 07       		.byte	0x7
 9279 0710 4601     		.2byte	0x146
 9280 0712 2A060000 		.4byte	0x62a
 9281 0716 1B       		.byte	0x1b
 9282 0717 00       		.byte	0
 9283 0718 07       		.uleb128 0x7
 9284 0719 81000000 		.4byte	0x81
 9285 071d 2E070000 		.4byte	0x72e
 9286 0721 08       		.uleb128 0x8
 9287 0722 0E010000 		.4byte	0x10e
 9288 0726 04       		.byte	0x4
 9289 0727 08       		.uleb128 0x8
 9290 0728 0E010000 		.4byte	0x10e
 9291 072c 04       		.byte	0x4
 9292 072d 00       		.byte	0
 9293 072e 10       		.uleb128 0x10
 9294 072f C80B0000 		.4byte	.LASF110
 9295 0733 20       		.byte	0x20
 9296 0734 07       		.byte	0x7
 9297 0735 4901     		.2byte	0x149
 9298 0737 7D070000 		.4byte	0x77d
 9299 073b 12       		.uleb128 0x12
 9300 073c 310A0000 		.4byte	.LASF111
 9301 0740 07       		.byte	0x7
 9302 0741 4A01     		.2byte	0x14a
 9303 0743 7D070000 		.4byte	0x77d
 9304 0747 00       		.byte	0
 9305 0748 12       		.uleb128 0x12
 9306 0749 360D0000 		.4byte	.LASF112
 9307 074d 07       		.byte	0x7
 9308 074e 4B01     		.2byte	0x14b
 9309 0750 81000000 		.4byte	0x81
 9310 0754 06       		.byte	0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 209


 9311 0755 12       		.uleb128 0x12
 9312 0756 32000000 		.4byte	.LASF113
 9313 075a 07       		.byte	0x7
 9314 075b 4C01     		.2byte	0x14c
 9315 075d 81000000 		.4byte	0x81
 9316 0761 07       		.byte	0x7
 9317 0762 12       		.uleb128 0x12
 9318 0763 11050000 		.4byte	.LASF114
 9319 0767 07       		.byte	0x7
 9320 0768 4D01     		.2byte	0x14d
 9321 076a 8D070000 		.4byte	0x78d
 9322 076e 08       		.byte	0x8
 9323 076f 12       		.uleb128 0x12
 9324 0770 94020000 		.4byte	.LASF66
 9325 0774 07       		.byte	0x7
 9326 0775 4E01     		.2byte	0x14e
 9327 0777 8D070000 		.4byte	0x78d
 9328 077b 14       		.byte	0x14
 9329 077c 00       		.byte	0
 9330 077d 07       		.uleb128 0x7
 9331 077e 81000000 		.4byte	0x81
 9332 0782 8D070000 		.4byte	0x78d
 9333 0786 08       		.uleb128 0x8
 9334 0787 0E010000 		.4byte	0x10e
 9335 078b 05       		.byte	0x5
 9336 078c 00       		.byte	0
 9337 078d 07       		.uleb128 0x7
 9338 078e 81000000 		.4byte	0x81
 9339 0792 9D070000 		.4byte	0x79d
 9340 0796 08       		.uleb128 0x8
 9341 0797 0E010000 		.4byte	0x10e
 9342 079b 0B       		.byte	0xb
 9343 079c 00       		.byte	0
 9344 079d 10       		.uleb128 0x10
 9345 079e B30B0000 		.4byte	.LASF115
 9346 07a2 20       		.byte	0x20
 9347 07a3 07       		.byte	0x7
 9348 07a4 5101     		.2byte	0x151
 9349 07a6 D2070000 		.4byte	0x7d2
 9350 07aa 12       		.uleb128 0x12
 9351 07ab 31030000 		.4byte	.LASF116
 9352 07af 07       		.byte	0x7
 9353 07b0 5201     		.2byte	0x152
 9354 07b2 15010000 		.4byte	0x115
 9355 07b6 00       		.byte	0
 9356 07b7 12       		.uleb128 0x12
 9357 07b8 6D020000 		.4byte	.LASF117
 9358 07bc 07       		.byte	0x7
 9359 07bd 5301     		.2byte	0x153
 9360 07bf 5A060000 		.4byte	0x65a
 9361 07c3 08       		.byte	0x8
 9362 07c4 12       		.uleb128 0x12
 9363 07c5 94020000 		.4byte	.LASF66
 9364 07c9 07       		.byte	0x7
 9365 07ca 5401     		.2byte	0x154
 9366 07cc 4A060000 		.4byte	0x64a
 9367 07d0 18       		.byte	0x18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 210


 9368 07d1 00       		.byte	0
 9369 07d2 10       		.uleb128 0x10
 9370 07d3 EA070000 		.4byte	.LASF118
 9371 07d7 10       		.byte	0x10
 9372 07d8 07       		.byte	0x7
 9373 07d9 5701     		.2byte	0x157
 9374 07db 21080000 		.4byte	0x821
 9375 07df 12       		.uleb128 0x12
 9376 07e0 02070000 		.4byte	.LASF119
 9377 07e4 07       		.byte	0x7
 9378 07e5 5801     		.2byte	0x158
 9379 07e7 BD000000 		.4byte	0xbd
 9380 07eb 00       		.byte	0
 9381 07ec 12       		.uleb128 0x12
 9382 07ed E80E0000 		.4byte	.LASF120
 9383 07f1 07       		.byte	0x7
 9384 07f2 5901     		.2byte	0x159
 9385 07f4 BD000000 		.4byte	0xbd
 9386 07f8 04       		.byte	0x4
 9387 07f9 12       		.uleb128 0x12
 9388 07fa DC040000 		.4byte	.LASF121
 9389 07fe 07       		.byte	0x7
 9390 07ff 5A01     		.2byte	0x15a
 9391 0801 BD000000 		.4byte	0xbd
 9392 0805 08       		.byte	0x8
 9393 0806 12       		.uleb128 0x12
 9394 0807 28060000 		.4byte	.LASF122
 9395 080b 07       		.byte	0x7
 9396 080c 5B01     		.2byte	0x15b
 9397 080e 81000000 		.4byte	0x81
 9398 0812 0C       		.byte	0xc
 9399 0813 12       		.uleb128 0x12
 9400 0814 94020000 		.4byte	.LASF66
 9401 0818 07       		.byte	0x7
 9402 0819 5C01     		.2byte	0x15c
 9403 081b FD030000 		.4byte	0x3fd
 9404 081f 0D       		.byte	0xd
 9405 0820 00       		.byte	0
 9406 0821 13       		.uleb128 0x13
 9407 0822 150E0000 		.4byte	.LASF123
 9408 0826 B002     		.2byte	0x2b0
 9409 0828 07       		.byte	0x7
 9410 0829 6101     		.2byte	0x161
 9411 082b D1080000 		.4byte	0x8d1
 9412 082f 12       		.uleb128 0x12
 9413 0830 04090000 		.4byte	.LASF124
 9414 0834 07       		.byte	0x7
 9415 0835 6301     		.2byte	0x163
 9416 0837 81000000 		.4byte	0x81
 9417 083b 00       		.byte	0
 9418 083c 12       		.uleb128 0x12
 9419 083d 94020000 		.4byte	.LASF66
 9420 0841 07       		.byte	0x7
 9421 0842 6401     		.2byte	0x164
 9422 0844 D1080000 		.4byte	0x8d1
 9423 0848 01       		.byte	0x1
 9424 0849 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 211


 9425 084a 636E7400 		.ascii	"cnt\000"
 9426 084e 07       		.byte	0x7
 9427 084f 6501     		.2byte	0x165
 9428 0851 DD020000 		.4byte	0x2dd
 9429 0855 10       		.byte	0x10
 9430 0856 12       		.uleb128 0x12
 9431 0857 39020000 		.4byte	.LASF125
 9432 085b 07       		.byte	0x7
 9433 085c 6601     		.2byte	0x166
 9434 085e E1080000 		.4byte	0x8e1
 9435 0862 60       		.byte	0x60
 9436 0863 11       		.uleb128 0x11
 9437 0864 64657600 		.ascii	"dev\000"
 9438 0868 07       		.byte	0x7
 9439 0869 6701     		.2byte	0x167
 9440 086b 6E030000 		.4byte	0x36e
 9441 086f A0       		.byte	0xa0
 9442 0870 12       		.uleb128 0x12
 9443 0871 C30C0000 		.4byte	.LASF126
 9444 0875 07       		.byte	0x7
 9445 0876 6801     		.2byte	0x168
 9446 0878 F1080000 		.4byte	0x8f1
 9447 087c B0       		.byte	0xb0
 9448 087d 14       		.uleb128 0x14
 9449 087e 656E6300 		.ascii	"enc\000"
 9450 0882 07       		.byte	0x7
 9451 0883 6901     		.2byte	0x169
 9452 0885 01090000 		.4byte	0x901
 9453 0889 9001     		.2byte	0x190
 9454 088b 14       		.uleb128 0x14
 9455 088c 656D6700 		.ascii	"emg\000"
 9456 0890 07       		.byte	0x7
 9457 0891 6A01     		.2byte	0x16a
 9458 0893 5A060000 		.4byte	0x65a
 9459 0897 F001     		.2byte	0x1f0
 9460 0899 14       		.uleb128 0x14
 9461 089a 696D7500 		.ascii	"imu\000"
 9462 089e 07       		.byte	0x7
 9463 089f 6B01     		.2byte	0x16b
 9464 08a1 D6060000 		.4byte	0x6d6
 9465 08a5 0002     		.2byte	0x200
 9466 08a7 14       		.uleb128 0x14
 9467 08a8 65787000 		.ascii	"exp\000"
 9468 08ac 07       		.byte	0x7
 9469 08ad 6C01     		.2byte	0x16c
 9470 08af 2E070000 		.4byte	0x72e
 9471 08b3 2002     		.2byte	0x220
 9472 08b5 15       		.uleb128 0x15
 9473 08b6 4D000000 		.4byte	.LASF127
 9474 08ba 07       		.byte	0x7
 9475 08bb 6D01     		.2byte	0x16d
 9476 08bd 11090000 		.4byte	0x911
 9477 08c1 4002     		.2byte	0x240
 9478 08c3 14       		.uleb128 0x14
 9479 08c4 534800   		.ascii	"SH\000"
 9480 08c7 07       		.byte	0x7
 9481 08c8 6F01     		.2byte	0x16f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 212


 9482 08ca D2070000 		.4byte	0x7d2
 9483 08ce A002     		.2byte	0x2a0
 9484 08d0 00       		.byte	0
 9485 08d1 07       		.uleb128 0x7
 9486 08d2 81000000 		.4byte	0x81
 9487 08d6 E1080000 		.4byte	0x8e1
 9488 08da 08       		.uleb128 0x8
 9489 08db 0E010000 		.4byte	0x10e
 9490 08df 0E       		.byte	0xe
 9491 08e0 00       		.byte	0
 9492 08e1 07       		.uleb128 0x7
 9493 08e2 81000000 		.4byte	0x81
 9494 08e6 F1080000 		.4byte	0x8f1
 9495 08ea 08       		.uleb128 0x8
 9496 08eb 0E010000 		.4byte	0x10e
 9497 08ef 3F       		.byte	0x3f
 9498 08f0 00       		.byte	0
 9499 08f1 07       		.uleb128 0x7
 9500 08f2 0D040000 		.4byte	0x40d
 9501 08f6 01090000 		.4byte	0x901
 9502 08fa 08       		.uleb128 0x8
 9503 08fb 0E010000 		.4byte	0x10e
 9504 08ff 01       		.byte	0x1
 9505 0900 00       		.byte	0
 9506 0901 07       		.uleb128 0x7
 9507 0902 A7050000 		.4byte	0x5a7
 9508 0906 11090000 		.4byte	0x911
 9509 090a 08       		.uleb128 0x8
 9510 090b 0E010000 		.4byte	0x10e
 9511 090f 01       		.byte	0x1
 9512 0910 00       		.byte	0
 9513 0911 07       		.uleb128 0x7
 9514 0912 9D070000 		.4byte	0x79d
 9515 0916 21090000 		.4byte	0x921
 9516 091a 08       		.uleb128 0x8
 9517 091b 0E010000 		.4byte	0x10e
 9518 091f 02       		.byte	0x2
 9519 0920 00       		.byte	0
 9520 0921 10       		.uleb128 0x10
 9521 0922 B80A0000 		.4byte	.LASF128
 9522 0926 28       		.byte	0x28
 9523 0927 07       		.byte	0x7
 9524 0928 7A01     		.2byte	0x17a
 9525 092a 7D090000 		.4byte	0x97d
 9526 092e 12       		.uleb128 0x12
 9527 092f 21040000 		.4byte	.LASF129
 9528 0933 07       		.byte	0x7
 9529 0934 7B01     		.2byte	0x17b
 9530 0936 81000000 		.4byte	0x81
 9531 093a 00       		.byte	0
 9532 093b 12       		.uleb128 0x12
 9533 093c A1020000 		.4byte	.LASF130
 9534 0940 07       		.byte	0x7
 9535 0941 7C01     		.2byte	0x17c
 9536 0943 7D090000 		.4byte	0x97d
 9537 0947 02       		.byte	0x2
 9538 0948 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 213


 9539 0949 260A0000 		.4byte	.LASF131
 9540 094d 07       		.byte	0x7
 9541 094e 7D01     		.2byte	0x17d
 9542 0950 7D090000 		.4byte	0x97d
 9543 0954 08       		.byte	0x8
 9544 0955 12       		.uleb128 0x12
 9545 0956 C40A0000 		.4byte	.LASF132
 9546 095a 07       		.byte	0x7
 9547 095b 7E01     		.2byte	0x17e
 9548 095d 7D090000 		.4byte	0x97d
 9549 0961 0E       		.byte	0xe
 9550 0962 12       		.uleb128 0x12
 9551 0963 F7060000 		.4byte	.LASF133
 9552 0967 07       		.byte	0x7
 9553 0968 7F01     		.2byte	0x17f
 9554 096a 8D090000 		.4byte	0x98d
 9555 096e 14       		.byte	0x14
 9556 096f 12       		.uleb128 0x12
 9557 0970 86010000 		.4byte	.LASF134
 9558 0974 07       		.byte	0x7
 9559 0975 8001     		.2byte	0x180
 9560 0977 B1000000 		.4byte	0xb1
 9561 097b 24       		.byte	0x24
 9562 097c 00       		.byte	0
 9563 097d 07       		.uleb128 0x7
 9564 097e B1000000 		.4byte	0xb1
 9565 0982 8D090000 		.4byte	0x98d
 9566 0986 08       		.uleb128 0x8
 9567 0987 0E010000 		.4byte	0x10e
 9568 098b 02       		.byte	0x2
 9569 098c 00       		.byte	0
 9570 098d 07       		.uleb128 0x7
 9571 098e D5000000 		.4byte	0xd5
 9572 0992 9D090000 		.4byte	0x99d
 9573 0996 08       		.uleb128 0x8
 9574 0997 0E010000 		.4byte	0x10e
 9575 099b 03       		.byte	0x3
 9576 099c 00       		.byte	0
 9577 099d 10       		.uleb128 0x10
 9578 099e F30E0000 		.4byte	.LASF135
 9579 09a2 08       		.byte	0x8
 9580 09a3 07       		.byte	0x7
 9581 09a4 8701     		.2byte	0x187
 9582 09a6 C5090000 		.4byte	0x9c5
 9583 09aa 12       		.uleb128 0x12
 9584 09ab C8040000 		.4byte	.LASF136
 9585 09af 07       		.byte	0x7
 9586 09b0 8801     		.2byte	0x188
 9587 09b2 BD000000 		.4byte	0xbd
 9588 09b6 00       		.byte	0
 9589 09b7 12       		.uleb128 0x12
 9590 09b8 B7010000 		.4byte	.LASF137
 9591 09bc 07       		.byte	0x7
 9592 09bd 8901     		.2byte	0x189
 9593 09bf BD000000 		.4byte	0xbd
 9594 09c3 04       		.byte	0x4
 9595 09c4 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 214


 9596 09c5 10       		.uleb128 0x10
 9597 09c6 42030000 		.4byte	.LASF138
 9598 09ca 06       		.byte	0x6
 9599 09cb 07       		.byte	0x7
 9600 09cc 9001     		.2byte	0x190
 9601 09ce 070A0000 		.4byte	0xa07
 9602 09d2 12       		.uleb128 0x12
 9603 09d3 6D060000 		.4byte	.LASF139
 9604 09d7 07       		.byte	0x7
 9605 09d8 9101     		.2byte	0x191
 9606 09da 81000000 		.4byte	0x81
 9607 09de 00       		.byte	0
 9608 09df 12       		.uleb128 0x12
 9609 09e0 0F0F0000 		.4byte	.LASF140
 9610 09e4 07       		.byte	0x7
 9611 09e5 9201     		.2byte	0x192
 9612 09e7 81000000 		.4byte	0x81
 9613 09eb 01       		.byte	0x1
 9614 09ec 12       		.uleb128 0x12
 9615 09ed 55050000 		.4byte	.LASF141
 9616 09f1 07       		.byte	0x7
 9617 09f2 9301     		.2byte	0x193
 9618 09f4 B1000000 		.4byte	0xb1
 9619 09f8 02       		.byte	0x2
 9620 09f9 12       		.uleb128 0x12
 9621 09fa 80080000 		.4byte	.LASF142
 9622 09fe 07       		.byte	0x7
 9623 09ff 9401     		.2byte	0x194
 9624 0a01 B1000000 		.4byte	0xb1
 9625 0a05 04       		.byte	0x4
 9626 0a06 00       		.byte	0
 9627 0a07 16       		.uleb128 0x16
 9628 0a08 01       		.byte	0x1
 9629 0a09 2C000000 		.4byte	0x2c
 9630 0a0d 07       		.byte	0x7
 9631 0a0e 9801     		.2byte	0x198
 9632 0a10 390A0000 		.4byte	0xa39
 9633 0a14 0A       		.uleb128 0xa
 9634 0a15 E5040000 		.4byte	.LASF143
 9635 0a19 00       		.byte	0
 9636 0a1a 0A       		.uleb128 0xa
 9637 0a1b 6A0B0000 		.4byte	.LASF144
 9638 0a1f 01       		.byte	0x1
 9639 0a20 0A       		.uleb128 0xa
 9640 0a21 B3090000 		.4byte	.LASF145
 9641 0a25 02       		.byte	0x2
 9642 0a26 0A       		.uleb128 0xa
 9643 0a27 F5010000 		.4byte	.LASF146
 9644 0a2b 03       		.byte	0x3
 9645 0a2c 0A       		.uleb128 0xa
 9646 0a2d AD080000 		.4byte	.LASF147
 9647 0a31 04       		.byte	0x4
 9648 0a32 0A       		.uleb128 0xa
 9649 0a33 2E0B0000 		.4byte	.LASF148
 9650 0a37 05       		.byte	0x5
 9651 0a38 00       		.byte	0
 9652 0a39 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 215


 9653 0a3a 50010000 		.4byte	.LASF149
 9654 0a3e 07       		.byte	0x7
 9655 0a3f A001     		.2byte	0x1a0
 9656 0a41 070A0000 		.4byte	0xa07
 9657 0a45 16       		.uleb128 0x16
 9658 0a46 01       		.byte	0x1
 9659 0a47 2C000000 		.4byte	0x2c
 9660 0a4b 07       		.byte	0x7
 9661 0a4c A201     		.2byte	0x1a2
 9662 0a4e 710A0000 		.4byte	0xa71
 9663 0a52 0A       		.uleb128 0xa
 9664 0a53 79010000 		.4byte	.LASF150
 9665 0a57 00       		.byte	0
 9666 0a58 0A       		.uleb128 0xa
 9667 0a59 95060000 		.4byte	.LASF151
 9668 0a5d 01       		.byte	0x1
 9669 0a5e 0A       		.uleb128 0xa
 9670 0a5f 10070000 		.4byte	.LASF152
 9671 0a63 02       		.byte	0x2
 9672 0a64 0A       		.uleb128 0xa
 9673 0a65 FA020000 		.4byte	.LASF153
 9674 0a69 03       		.byte	0x3
 9675 0a6a 0A       		.uleb128 0xa
 9676 0a6b CE0E0000 		.4byte	.LASF154
 9677 0a6f 04       		.byte	0x4
 9678 0a70 00       		.byte	0
 9679 0a71 05       		.uleb128 0x5
 9680 0a72 100C0000 		.4byte	.LASF155
 9681 0a76 07       		.byte	0x7
 9682 0a77 A901     		.2byte	0x1a9
 9683 0a79 450A0000 		.4byte	0xa45
 9684 0a7d 17       		.uleb128 0x17
 9685 0a7e A3040000 		.4byte	.LASF156
 9686 0a82 01       		.byte	0x1
 9687 0a83 62       		.byte	0x62
 9688 0a84 00000000 		.4byte	.LFB64
 9689 0a88 18000000 		.4byte	.LFE64-.LFB64
 9690 0a8c 01       		.uleb128 0x1
 9691 0a8d 9C       		.byte	0x9c
 9692 0a8e 17       		.uleb128 0x17
 9693 0a8f C50D0000 		.4byte	.LASF157
 9694 0a93 01       		.byte	0x1
 9695 0a94 6D       		.byte	0x6d
 9696 0a95 00000000 		.4byte	.LFB65
 9697 0a99 20000000 		.4byte	.LFE65-.LFB65
 9698 0a9d 01       		.uleb128 0x1
 9699 0a9e 9C       		.byte	0x9c
 9700 0a9f 18       		.uleb128 0x18
 9701 0aa0 5C080000 		.4byte	.LASF171
 9702 0aa4 01       		.byte	0x1
 9703 0aa5 86       		.byte	0x86
 9704 0aa6 00000000 		.4byte	.LFB66
 9705 0aaa F4010000 		.4byte	.LFE66-.LFB66
 9706 0aae 01       		.uleb128 0x1
 9707 0aaf 9C       		.byte	0x9c
 9708 0ab0 340B0000 		.4byte	0xb34
 9709 0ab4 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 216


 9710 0ab5 AB000000 		.4byte	.LASF158
 9711 0ab9 01       		.byte	0x1
 9712 0aba 8B       		.byte	0x8b
 9713 0abb 81000000 		.4byte	0x81
 9714 0abf 05       		.uleb128 0x5
 9715 0ac0 03       		.byte	0x3
 9716 0ac1 00000000 		.4byte	state.10354
 9717 0ac5 19       		.uleb128 0x19
 9718 0ac6 7A050000 		.4byte	.LASF159
 9719 0aca 01       		.byte	0x1
 9720 0acb 8E       		.byte	0x8e
 9721 0acc 81000000 		.4byte	0x81
 9722 0ad0 05       		.uleb128 0x5
 9723 0ad1 03       		.byte	0x3
 9724 0ad2 08000000 		.4byte	data_packet_index.10355
 9725 0ad6 19       		.uleb128 0x19
 9726 0ad7 F70A0000 		.4byte	.LASF160
 9727 0adb 01       		.byte	0x1
 9728 0adc 8F       		.byte	0x8f
 9729 0add 81000000 		.4byte	0x81
 9730 0ae1 05       		.uleb128 0x5
 9731 0ae2 03       		.byte	0x3
 9732 0ae3 07000000 		.4byte	data_packet_length.10356
 9733 0ae7 19       		.uleb128 0x19
 9734 0ae8 8C050000 		.4byte	.LASF161
 9735 0aec 01       		.byte	0x1
 9736 0aed 90       		.byte	0x90
 9737 0aee CD020000 		.4byte	0x2cd
 9738 0af2 05       		.uleb128 0x5
 9739 0af3 03       		.byte	0x3
 9740 0af4 0C000000 		.4byte	data_packet_buffer.10357
 9741 0af8 19       		.uleb128 0x19
 9742 0af9 46090000 		.4byte	.LASF162
 9743 0afd 01       		.byte	0x1
 9744 0afe 91       		.byte	0x91
 9745 0aff FD030000 		.4byte	0x3fd
 9746 0b03 05       		.uleb128 0x5
 9747 0b04 03       		.byte	0x3
 9748 0b05 04000000 		.4byte	rx_queue.10358
 9749 0b09 19       		.uleb128 0x19
 9750 0b0a 33010000 		.4byte	.LASF163
 9751 0b0e 01       		.byte	0x1
 9752 0b0f 94       		.byte	0x94
 9753 0b10 81000000 		.4byte	0x81
 9754 0b14 02       		.uleb128 0x2
 9755 0b15 91       		.byte	0x91
 9756 0b16 75       		.sleb128 -11
 9757 0b17 19       		.uleb128 0x19
 9758 0b18 3F050000 		.4byte	.LASF164
 9759 0b1c 01       		.byte	0x1
 9760 0b1d 95       		.byte	0x95
 9761 0b1e 81000000 		.4byte	0x81
 9762 0b22 02       		.uleb128 0x2
 9763 0b23 91       		.byte	0x91
 9764 0b24 77       		.sleb128 -9
 9765 0b25 19       		.uleb128 0x19
 9766 0b26 4A060000 		.4byte	.LASF165
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 217


 9767 0b2a 01       		.byte	0x1
 9768 0b2b 96       		.byte	0x96
 9769 0b2c 81000000 		.4byte	0x81
 9770 0b30 02       		.uleb128 0x2
 9771 0b31 91       		.byte	0x91
 9772 0b32 76       		.sleb128 -10
 9773 0b33 00       		.byte	0
 9774 0b34 1A       		.uleb128 0x1a
 9775 0b35 E30C0000 		.4byte	.LASF190
 9776 0b39 01       		.byte	0x1
 9777 0b3a 0601     		.2byte	0x106
 9778 0b3c 00000000 		.4byte	.LFB67
 9779 0b40 8C040000 		.4byte	.LFE67-.LFB67
 9780 0b44 01       		.uleb128 0x1
 9781 0b45 9C       		.byte	0x9c
 9782 0b46 B40B0000 		.4byte	0xbb4
 9783 0b4a 1B       		.uleb128 0x1b
 9784 0b4b AD050000 		.4byte	.LASF166
 9785 0b4f 01       		.byte	0x1
 9786 0b50 0801     		.2byte	0x108
 9787 0b52 8D000000 		.4byte	0x8d
 9788 0b56 05       		.uleb128 0x5
 9789 0b57 03       		.byte	0x3
 9790 0b58 00000000 		.4byte	counter_calibration.10374
 9791 0b5c 1B       		.uleb128 0x1b
 9792 0b5d 7A0A0000 		.4byte	.LASF167
 9793 0b61 01       		.byte	0x1
 9794 0b62 0901     		.2byte	0x109
 9795 0b64 8D000000 		.4byte	0x8d
 9796 0b68 05       		.uleb128 0x5
 9797 0b69 03       		.byte	0x3
 9798 0b6a 02000000 		.4byte	counter_tension_func.10375
 9799 0b6e 1B       		.uleb128 0x1b
 9800 0b6f 4A010000 		.4byte	.LASF168
 9801 0b73 01       		.byte	0x1
 9802 0b74 0A01     		.2byte	0x10a
 9803 0b76 B40B0000 		.4byte	0xbb4
 9804 0b7a 03       		.uleb128 0x3
 9805 0b7b 91       		.byte	0x91
 9806 0b7c A86C     		.sleb128 -2520
 9807 0b7e 1B       		.uleb128 0x1b
 9808 0b7f 5D0A0000 		.4byte	.LASF169
 9809 0b83 01       		.byte	0x1
 9810 0b84 0C01     		.2byte	0x10c
 9811 0b86 81000000 		.4byte	0x81
 9812 0b8a 02       		.uleb128 0x2
 9813 0b8b 91       		.byte	0x91
 9814 0b8c 6E       		.sleb128 -18
 9815 0b8d 1B       		.uleb128 0x1b
 9816 0b8e 21080000 		.4byte	.LASF170
 9817 0b92 01       		.byte	0x1
 9818 0b93 0D01     		.2byte	0x10d
 9819 0b95 81000000 		.4byte	0x81
 9820 0b99 02       		.uleb128 0x2
 9821 0b9a 91       		.byte	0x91
 9822 0b9b 6D       		.sleb128 -19
 9823 0b9c 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 218


 9824 0b9d E2000000 		.4byte	.LBB2
 9825 0ba1 C8000000 		.4byte	.LBE2-.LBB2
 9826 0ba5 1D       		.uleb128 0x1d
 9827 0ba6 6900     		.ascii	"i\000"
 9828 0ba8 01       		.byte	0x1
 9829 0ba9 3F01     		.2byte	0x13f
 9830 0bab 81000000 		.4byte	0x81
 9831 0baf 02       		.uleb128 0x2
 9832 0bb0 91       		.byte	0x91
 9833 0bb1 6F       		.sleb128 -17
 9834 0bb2 00       		.byte	0
 9835 0bb3 00       		.byte	0
 9836 0bb4 07       		.uleb128 0x7
 9837 0bb5 E3000000 		.4byte	0xe3
 9838 0bb9 C50B0000 		.4byte	0xbc5
 9839 0bbd 1E       		.uleb128 0x1e
 9840 0bbe 0E010000 		.4byte	0x10e
 9841 0bc2 C309     		.2byte	0x9c3
 9842 0bc4 00       		.byte	0
 9843 0bc5 1F       		.uleb128 0x1f
 9844 0bc6 EC040000 		.4byte	.LASF172
 9845 0bca 01       		.byte	0x1
 9846 0bcb 0D02     		.2byte	0x20d
 9847 0bcd 00000000 		.4byte	.LFB68
 9848 0bd1 C00A0000 		.4byte	.LFE68-.LFB68
 9849 0bd5 01       		.uleb128 0x1
 9850 0bd6 9C       		.byte	0x9c
 9851 0bd7 BE0D0000 		.4byte	0xdbe
 9852 0bdb 1B       		.uleb128 0x1b
 9853 0bdc FC000000 		.4byte	.LASF173
 9854 0be0 01       		.byte	0x1
 9855 0be1 0F02     		.2byte	0x20f
 9856 0be3 BD000000 		.4byte	0xbd
 9857 0be7 02       		.uleb128 0x2
 9858 0be8 91       		.byte	0x91
 9859 0be9 74       		.sleb128 -12
 9860 0bea 1B       		.uleb128 0x1b
 9861 0beb 1C0A0000 		.4byte	.LASF174
 9862 0bef 01       		.byte	0x1
 9863 0bf0 1002     		.2byte	0x210
 9864 0bf2 BD000000 		.4byte	0xbd
 9865 0bf6 02       		.uleb128 0x2
 9866 0bf7 91       		.byte	0x91
 9867 0bf8 70       		.sleb128 -16
 9868 0bf9 1B       		.uleb128 0x1b
 9869 0bfa 800D0000 		.4byte	.LASF175
 9870 0bfe 01       		.byte	0x1
 9871 0bff 1102     		.2byte	0x211
 9872 0c01 BD000000 		.4byte	0xbd
 9873 0c05 03       		.uleb128 0x3
 9874 0c06 91       		.byte	0x91
 9875 0c07 A07F     		.sleb128 -96
 9876 0c09 1B       		.uleb128 0x1b
 9877 0c0a 63090000 		.4byte	.LASF176
 9878 0c0e 01       		.byte	0x1
 9879 0c0f 1202     		.2byte	0x212
 9880 0c11 BD000000 		.4byte	0xbd
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 219


 9881 0c15 02       		.uleb128 0x2
 9882 0c16 91       		.byte	0x91
 9883 0c17 6C       		.sleb128 -20
 9884 0c18 1B       		.uleb128 0x1b
 9885 0c19 27040000 		.4byte	.LASF177
 9886 0c1d 01       		.byte	0x1
 9887 0c1e 1302     		.2byte	0x213
 9888 0c20 BD000000 		.4byte	0xbd
 9889 0c24 02       		.uleb128 0x2
 9890 0c25 91       		.byte	0x91
 9891 0c26 68       		.sleb128 -24
 9892 0c27 1B       		.uleb128 0x1b
 9893 0c28 4B030000 		.4byte	.LASF178
 9894 0c2c 01       		.byte	0x1
 9895 0c2d 1402     		.2byte	0x214
 9896 0c2f BD000000 		.4byte	0xbd
 9897 0c33 03       		.uleb128 0x3
 9898 0c34 91       		.byte	0x91
 9899 0c35 A87F     		.sleb128 -88
 9900 0c37 1B       		.uleb128 0x1b
 9901 0c38 55030000 		.4byte	.LASF179
 9902 0c3c 01       		.byte	0x1
 9903 0c3d 1402     		.2byte	0x214
 9904 0c3f BD000000 		.4byte	0xbd
 9905 0c43 03       		.uleb128 0x3
 9906 0c44 91       		.byte	0x91
 9907 0c45 A47F     		.sleb128 -92
 9908 0c47 1B       		.uleb128 0x1b
 9909 0c48 5D0A0000 		.4byte	.LASF169
 9910 0c4c 01       		.byte	0x1
 9911 0c4d 1602     		.2byte	0x216
 9912 0c4f 81000000 		.4byte	0x81
 9913 0c53 02       		.uleb128 0x2
 9914 0c54 91       		.byte	0x91
 9915 0c55 67       		.sleb128 -25
 9916 0c56 1B       		.uleb128 0x1b
 9917 0c57 C5020000 		.4byte	.LASF180
 9918 0c5b 01       		.byte	0x1
 9919 0c5c 1802     		.2byte	0x218
 9920 0c5e BE0D0000 		.4byte	0xdbe
 9921 0c62 02       		.uleb128 0x2
 9922 0c63 91       		.byte	0x91
 9923 0c64 60       		.sleb128 -32
 9924 0c65 1B       		.uleb128 0x1b
 9925 0c66 47020000 		.4byte	.LASF181
 9926 0c6a 01       		.byte	0x1
 9927 0c6b 1902     		.2byte	0x219
 9928 0c6d 81000000 		.4byte	0x81
 9929 0c71 02       		.uleb128 0x2
 9930 0c72 91       		.byte	0x91
 9931 0c73 5F       		.sleb128 -33
 9932 0c74 1D       		.uleb128 0x1d
 9933 0c75 6B5F7000 		.ascii	"k_p\000"
 9934 0c79 01       		.byte	0x1
 9935 0c7a 1B02     		.2byte	0x21b
 9936 0c7c BD000000 		.4byte	0xbd
 9937 0c80 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 220


 9938 0c81 91       		.byte	0x91
 9939 0c82 58       		.sleb128 -40
 9940 0c83 1D       		.uleb128 0x1d
 9941 0c84 6B5F6900 		.ascii	"k_i\000"
 9942 0c88 01       		.byte	0x1
 9943 0c89 1C02     		.2byte	0x21c
 9944 0c8b BD000000 		.4byte	0xbd
 9945 0c8f 02       		.uleb128 0x2
 9946 0c90 91       		.byte	0x91
 9947 0c91 54       		.sleb128 -44
 9948 0c92 1D       		.uleb128 0x1d
 9949 0c93 6B5F6400 		.ascii	"k_d\000"
 9950 0c97 01       		.byte	0x1
 9951 0c98 1D02     		.2byte	0x21d
 9952 0c9a BD000000 		.4byte	0xbd
 9953 0c9e 02       		.uleb128 0x2
 9954 0c9f 91       		.byte	0x91
 9955 0ca0 50       		.sleb128 -48
 9956 0ca1 1B       		.uleb128 0x1b
 9957 0ca2 0A0B0000 		.4byte	.LASF68
 9958 0ca6 01       		.byte	0x1
 9959 0ca7 1F02     		.2byte	0x21f
 9960 0ca9 BD000000 		.4byte	0xbd
 9961 0cad 02       		.uleb128 0x2
 9962 0cae 91       		.byte	0x91
 9963 0caf 4C       		.sleb128 -52
 9964 0cb0 1B       		.uleb128 0x1b
 9965 0cb1 8C040000 		.4byte	.LASF69
 9966 0cb5 01       		.byte	0x1
 9967 0cb6 2002     		.2byte	0x220
 9968 0cb8 BD000000 		.4byte	0xbd
 9969 0cbc 02       		.uleb128 0x2
 9970 0cbd 91       		.byte	0x91
 9971 0cbe 48       		.sleb128 -56
 9972 0cbf 1B       		.uleb128 0x1b
 9973 0cc0 7F040000 		.4byte	.LASF70
 9974 0cc4 01       		.byte	0x1
 9975 0cc5 2102     		.2byte	0x221
 9976 0cc7 BD000000 		.4byte	0xbd
 9977 0ccb 02       		.uleb128 0x2
 9978 0ccc 91       		.byte	0x91
 9979 0ccd 44       		.sleb128 -60
 9980 0cce 1B       		.uleb128 0x1b
 9981 0ccf 600D0000 		.4byte	.LASF71
 9982 0cd3 01       		.byte	0x1
 9983 0cd4 2302     		.2byte	0x223
 9984 0cd6 BD000000 		.4byte	0xbd
 9985 0cda 02       		.uleb128 0x2
 9986 0cdb 91       		.byte	0x91
 9987 0cdc 40       		.sleb128 -64
 9988 0cdd 1B       		.uleb128 0x1b
 9989 0cde 28050000 		.4byte	.LASF72
 9990 0ce2 01       		.byte	0x1
 9991 0ce3 2402     		.2byte	0x224
 9992 0ce5 BD000000 		.4byte	0xbd
 9993 0ce9 03       		.uleb128 0x3
 9994 0cea 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 221


 9995 0ceb BC7F     		.sleb128 -68
 9996 0ced 1B       		.uleb128 0x1b
 9997 0cee AE0C0000 		.4byte	.LASF73
 9998 0cf2 01       		.byte	0x1
 9999 0cf3 2502     		.2byte	0x225
 10000 0cf5 BD000000 		.4byte	0xbd
 10001 0cf9 03       		.uleb128 0x3
 10002 0cfa 91       		.byte	0x91
 10003 0cfb B87F     		.sleb128 -72
 10004 0cfd 1B       		.uleb128 0x1b
 10005 0cfe 36050000 		.4byte	.LASF74
 10006 0d02 01       		.byte	0x1
 10007 0d03 2702     		.2byte	0x227
 10008 0d05 BD000000 		.4byte	0xbd
 10009 0d09 03       		.uleb128 0x3
 10010 0d0a 91       		.byte	0x91
 10011 0d0b B47F     		.sleb128 -76
 10012 0d0d 1B       		.uleb128 0x1b
 10013 0d0e 41060000 		.4byte	.LASF75
 10014 0d12 01       		.byte	0x1
 10015 0d13 2802     		.2byte	0x228
 10016 0d15 BD000000 		.4byte	0xbd
 10017 0d19 03       		.uleb128 0x3
 10018 0d1a 91       		.byte	0x91
 10019 0d1b B07F     		.sleb128 -80
 10020 0d1d 1B       		.uleb128 0x1b
 10021 0d1e 060F0000 		.4byte	.LASF76
 10022 0d22 01       		.byte	0x1
 10023 0d23 2902     		.2byte	0x229
 10024 0d25 BD000000 		.4byte	0xbd
 10025 0d29 03       		.uleb128 0x3
 10026 0d2a 91       		.byte	0x91
 10027 0d2b AC7F     		.sleb128 -84
 10028 0d2d 1B       		.uleb128 0x1b
 10029 0d2e 03050000 		.4byte	.LASF182
 10030 0d32 01       		.byte	0x1
 10031 0d33 2D02     		.2byte	0x22d
 10032 0d35 BD000000 		.4byte	0xbd
 10033 0d39 05       		.uleb128 0x5
 10034 0d3a 03       		.byte	0x3
 10035 0d3b 90000000 		.4byte	pos_error_sum.10407
 10036 0d3f 1B       		.uleb128 0x1b
 10037 0d40 93030000 		.4byte	.LASF183
 10038 0d44 01       		.byte	0x1
 10039 0d45 2E02     		.2byte	0x22e
 10040 0d47 BD000000 		.4byte	0xbd
 10041 0d4b 05       		.uleb128 0x5
 10042 0d4c 03       		.byte	0x3
 10043 0d4d 9C000000 		.4byte	curr_error_sum.10408
 10044 0d51 1B       		.uleb128 0x1b
 10045 0d52 BB090000 		.4byte	.LASF184
 10046 0d56 01       		.byte	0x1
 10047 0d57 3002     		.2byte	0x230
 10048 0d59 BD000000 		.4byte	0xbd
 10049 0d5d 05       		.uleb128 0x5
 10050 0d5e 03       		.byte	0x3
 10051 0d5f 94000000 		.4byte	prev_pos_err.10409
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 222


 10052 0d63 1B       		.uleb128 0x1b
 10053 0d64 E90A0000 		.4byte	.LASF185
 10054 0d68 01       		.byte	0x1
 10055 0d69 3102     		.2byte	0x231
 10056 0d6b BD000000 		.4byte	0xbd
 10057 0d6f 05       		.uleb128 0x5
 10058 0d70 03       		.byte	0x3
 10059 0d71 A0000000 		.4byte	prev_curr_err.10410
 10060 0d75 1B       		.uleb128 0x1b
 10061 0d76 F60C0000 		.4byte	.LASF186
 10062 0d7a 01       		.byte	0x1
 10063 0d7b 3202     		.2byte	0x232
 10064 0d7d BD000000 		.4byte	0xbd
 10065 0d81 05       		.uleb128 0x5
 10066 0d82 03       		.byte	0x3
 10067 0d83 A4000000 		.4byte	prev_pwm.10411
 10068 0d87 1B       		.uleb128 0x1b
 10069 0d88 92040000 		.4byte	.LASF187
 10070 0d8c 01       		.byte	0x1
 10071 0d8d 3402     		.2byte	0x234
 10072 0d8f 81000000 		.4byte	0x81
 10073 0d93 05       		.uleb128 0x5
 10074 0d94 03       		.byte	0x3
 10075 0d95 98000000 		.4byte	motor_dir.10412
 10076 0d99 1B       		.uleb128 0x1b
 10077 0d9a 5B050000 		.4byte	.LASF188
 10078 0d9e 01       		.byte	0x1
 10079 0d9f 3502     		.2byte	0x235
 10080 0da1 99000000 		.4byte	0x99
 10081 0da5 05       		.uleb128 0x5
 10082 0da6 03       		.byte	0x3
 10083 0da7 A8000000 		.4byte	position_counter.10413
 10084 0dab 1B       		.uleb128 0x1b
 10085 0dac 3A090000 		.4byte	.LASF189
 10086 0db0 01       		.byte	0x1
 10087 0db1 3602     		.2byte	0x236
 10088 0db3 81000000 		.4byte	0x81
 10089 0db7 05       		.uleb128 0x5
 10090 0db8 03       		.byte	0x3
 10091 0db9 8C000000 		.4byte	current_emg.10414
 10092 0dbd 00       		.byte	0
 10093 0dbe 0C       		.uleb128 0xc
 10094 0dbf 04       		.byte	0x4
 10095 0dc0 0D040000 		.4byte	0x40d
 10096 0dc4 1A       		.uleb128 0x1a
 10097 0dc5 4F040000 		.4byte	.LASF191
 10098 0dc9 01       		.byte	0x1
 10099 0dca DE03     		.2byte	0x3de
 10100 0dcc 00000000 		.4byte	.LFB69
 10101 0dd0 D40C0000 		.4byte	.LFE69-.LFB69
 10102 0dd4 01       		.uleb128 0x1
 10103 0dd5 9C       		.byte	0x9c
 10104 0dd6 BF0F0000 		.4byte	0xfbf
 10105 0dda 20       		.uleb128 0x20
 10106 0ddb 69647800 		.ascii	"idx\000"
 10107 0ddf 01       		.byte	0x1
 10108 0de0 DE03     		.2byte	0x3de
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 223


 10109 0de2 81000000 		.4byte	0x81
 10110 0de6 03       		.uleb128 0x3
 10111 0de7 91       		.byte	0x91
 10112 0de8 977F     		.sleb128 -105
 10113 0dea 1B       		.uleb128 0x1b
 10114 0deb FC000000 		.4byte	.LASF173
 10115 0def 01       		.byte	0x1
 10116 0df0 E003     		.2byte	0x3e0
 10117 0df2 BD000000 		.4byte	0xbd
 10118 0df6 02       		.uleb128 0x2
 10119 0df7 91       		.byte	0x91
 10120 0df8 6C       		.sleb128 -20
 10121 0df9 1B       		.uleb128 0x1b
 10122 0dfa 1C0A0000 		.4byte	.LASF174
 10123 0dfe 01       		.byte	0x1
 10124 0dff E103     		.2byte	0x3e1
 10125 0e01 BD000000 		.4byte	0xbd
 10126 0e05 02       		.uleb128 0x2
 10127 0e06 91       		.byte	0x91
 10128 0e07 68       		.sleb128 -24
 10129 0e08 1B       		.uleb128 0x1b
 10130 0e09 800D0000 		.4byte	.LASF175
 10131 0e0d 01       		.byte	0x1
 10132 0e0e E203     		.2byte	0x3e2
 10133 0e10 BD000000 		.4byte	0xbd
 10134 0e14 03       		.uleb128 0x3
 10135 0e15 91       		.byte	0x91
 10136 0e16 9C7F     		.sleb128 -100
 10137 0e18 1B       		.uleb128 0x1b
 10138 0e19 63090000 		.4byte	.LASF176
 10139 0e1d 01       		.byte	0x1
 10140 0e1e E303     		.2byte	0x3e3
 10141 0e20 BD000000 		.4byte	0xbd
 10142 0e24 02       		.uleb128 0x2
 10143 0e25 91       		.byte	0x91
 10144 0e26 64       		.sleb128 -28
 10145 0e27 1B       		.uleb128 0x1b
 10146 0e28 27040000 		.4byte	.LASF177
 10147 0e2c 01       		.byte	0x1
 10148 0e2d E403     		.2byte	0x3e4
 10149 0e2f BD000000 		.4byte	0xbd
 10150 0e33 02       		.uleb128 0x2
 10151 0e34 91       		.byte	0x91
 10152 0e35 60       		.sleb128 -32
 10153 0e36 1B       		.uleb128 0x1b
 10154 0e37 4B030000 		.4byte	.LASF178
 10155 0e3b 01       		.byte	0x1
 10156 0e3c E503     		.2byte	0x3e5
 10157 0e3e BD000000 		.4byte	0xbd
 10158 0e42 03       		.uleb128 0x3
 10159 0e43 91       		.byte	0x91
 10160 0e44 A47F     		.sleb128 -92
 10161 0e46 1B       		.uleb128 0x1b
 10162 0e47 55030000 		.4byte	.LASF179
 10163 0e4b 01       		.byte	0x1
 10164 0e4c E503     		.2byte	0x3e5
 10165 0e4e BD000000 		.4byte	0xbd
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 224


 10166 0e52 03       		.uleb128 0x3
 10167 0e53 91       		.byte	0x91
 10168 0e54 A07F     		.sleb128 -96
 10169 0e56 1D       		.uleb128 0x1d
 10170 0e57 4D4F5400 		.ascii	"MOT\000"
 10171 0e5b 01       		.byte	0x1
 10172 0e5c E703     		.2byte	0x3e7
 10173 0e5e BE0D0000 		.4byte	0xdbe
 10174 0e62 02       		.uleb128 0x2
 10175 0e63 91       		.byte	0x91
 10176 0e64 5C       		.sleb128 -36
 10177 0e65 1B       		.uleb128 0x1b
 10178 0e66 0F0E0000 		.4byte	.LASF192
 10179 0e6a 01       		.byte	0x1
 10180 0e6b E803     		.2byte	0x3e8
 10181 0e6d 81000000 		.4byte	0x81
 10182 0e71 02       		.uleb128 0x2
 10183 0e72 91       		.byte	0x91
 10184 0e73 5B       		.sleb128 -37
 10185 0e74 1D       		.uleb128 0x1d
 10186 0e75 6B5F7000 		.ascii	"k_p\000"
 10187 0e79 01       		.byte	0x1
 10188 0e7a EA03     		.2byte	0x3ea
 10189 0e7c BD000000 		.4byte	0xbd
 10190 0e80 02       		.uleb128 0x2
 10191 0e81 91       		.byte	0x91
 10192 0e82 54       		.sleb128 -44
 10193 0e83 1D       		.uleb128 0x1d
 10194 0e84 6B5F6900 		.ascii	"k_i\000"
 10195 0e88 01       		.byte	0x1
 10196 0e89 EB03     		.2byte	0x3eb
 10197 0e8b BD000000 		.4byte	0xbd
 10198 0e8f 02       		.uleb128 0x2
 10199 0e90 91       		.byte	0x91
 10200 0e91 50       		.sleb128 -48
 10201 0e92 1D       		.uleb128 0x1d
 10202 0e93 6B5F6400 		.ascii	"k_d\000"
 10203 0e97 01       		.byte	0x1
 10204 0e98 EC03     		.2byte	0x3ec
 10205 0e9a BD000000 		.4byte	0xbd
 10206 0e9e 02       		.uleb128 0x2
 10207 0e9f 91       		.byte	0x91
 10208 0ea0 4C       		.sleb128 -52
 10209 0ea1 1B       		.uleb128 0x1b
 10210 0ea2 0A0B0000 		.4byte	.LASF68
 10211 0ea6 01       		.byte	0x1
 10212 0ea7 EE03     		.2byte	0x3ee
 10213 0ea9 BD000000 		.4byte	0xbd
 10214 0ead 02       		.uleb128 0x2
 10215 0eae 91       		.byte	0x91
 10216 0eaf 48       		.sleb128 -56
 10217 0eb0 1B       		.uleb128 0x1b
 10218 0eb1 8C040000 		.4byte	.LASF69
 10219 0eb5 01       		.byte	0x1
 10220 0eb6 EF03     		.2byte	0x3ef
 10221 0eb8 BD000000 		.4byte	0xbd
 10222 0ebc 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 225


 10223 0ebd 91       		.byte	0x91
 10224 0ebe 44       		.sleb128 -60
 10225 0ebf 1B       		.uleb128 0x1b
 10226 0ec0 7F040000 		.4byte	.LASF70
 10227 0ec4 01       		.byte	0x1
 10228 0ec5 F003     		.2byte	0x3f0
 10229 0ec7 BD000000 		.4byte	0xbd
 10230 0ecb 02       		.uleb128 0x2
 10231 0ecc 91       		.byte	0x91
 10232 0ecd 40       		.sleb128 -64
 10233 0ece 1B       		.uleb128 0x1b
 10234 0ecf 600D0000 		.4byte	.LASF71
 10235 0ed3 01       		.byte	0x1
 10236 0ed4 F203     		.2byte	0x3f2
 10237 0ed6 BD000000 		.4byte	0xbd
 10238 0eda 03       		.uleb128 0x3
 10239 0edb 91       		.byte	0x91
 10240 0edc BC7F     		.sleb128 -68
 10241 0ede 1B       		.uleb128 0x1b
 10242 0edf 28050000 		.4byte	.LASF72
 10243 0ee3 01       		.byte	0x1
 10244 0ee4 F303     		.2byte	0x3f3
 10245 0ee6 BD000000 		.4byte	0xbd
 10246 0eea 03       		.uleb128 0x3
 10247 0eeb 91       		.byte	0x91
 10248 0eec B87F     		.sleb128 -72
 10249 0eee 1B       		.uleb128 0x1b
 10250 0eef AE0C0000 		.4byte	.LASF73
 10251 0ef3 01       		.byte	0x1
 10252 0ef4 F403     		.2byte	0x3f4
 10253 0ef6 BD000000 		.4byte	0xbd
 10254 0efa 03       		.uleb128 0x3
 10255 0efb 91       		.byte	0x91
 10256 0efc B47F     		.sleb128 -76
 10257 0efe 1B       		.uleb128 0x1b
 10258 0eff 36050000 		.4byte	.LASF74
 10259 0f03 01       		.byte	0x1
 10260 0f04 F603     		.2byte	0x3f6
 10261 0f06 BD000000 		.4byte	0xbd
 10262 0f0a 03       		.uleb128 0x3
 10263 0f0b 91       		.byte	0x91
 10264 0f0c B07F     		.sleb128 -80
 10265 0f0e 1B       		.uleb128 0x1b
 10266 0f0f 41060000 		.4byte	.LASF75
 10267 0f13 01       		.byte	0x1
 10268 0f14 F703     		.2byte	0x3f7
 10269 0f16 BD000000 		.4byte	0xbd
 10270 0f1a 03       		.uleb128 0x3
 10271 0f1b 91       		.byte	0x91
 10272 0f1c AC7F     		.sleb128 -84
 10273 0f1e 1B       		.uleb128 0x1b
 10274 0f1f 060F0000 		.4byte	.LASF76
 10275 0f23 01       		.byte	0x1
 10276 0f24 F803     		.2byte	0x3f8
 10277 0f26 BD000000 		.4byte	0xbd
 10278 0f2a 03       		.uleb128 0x3
 10279 0f2b 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 226


 10280 0f2c A87F     		.sleb128 -88
 10281 0f2e 1B       		.uleb128 0x1b
 10282 0f2f 03050000 		.4byte	.LASF182
 10283 0f33 01       		.byte	0x1
 10284 0f34 FC03     		.2byte	0x3fc
 10285 0f36 70020000 		.4byte	0x270
 10286 0f3a 05       		.uleb128 0x5
 10287 0f3b 03       		.byte	0x3
 10288 0f3c B0000000 		.4byte	pos_error_sum.10461
 10289 0f40 1B       		.uleb128 0x1b
 10290 0f41 93030000 		.4byte	.LASF183
 10291 0f45 01       		.byte	0x1
 10292 0f46 FD03     		.2byte	0x3fd
 10293 0f48 70020000 		.4byte	0x270
 10294 0f4c 05       		.uleb128 0x5
 10295 0f4d 03       		.byte	0x3
 10296 0f4e C4000000 		.4byte	curr_error_sum.10462
 10297 0f52 1B       		.uleb128 0x1b
 10298 0f53 BB090000 		.4byte	.LASF184
 10299 0f57 01       		.byte	0x1
 10300 0f58 FF03     		.2byte	0x3ff
 10301 0f5a 70020000 		.4byte	0x270
 10302 0f5e 05       		.uleb128 0x5
 10303 0f5f 03       		.byte	0x3
 10304 0f60 B8000000 		.4byte	prev_pos_err.10463
 10305 0f64 1B       		.uleb128 0x1b
 10306 0f65 E90A0000 		.4byte	.LASF185
 10307 0f69 01       		.byte	0x1
 10308 0f6a 0004     		.2byte	0x400
 10309 0f6c 70020000 		.4byte	0x270
 10310 0f70 05       		.uleb128 0x5
 10311 0f71 03       		.byte	0x3
 10312 0f72 CC000000 		.4byte	prev_curr_err.10464
 10313 0f76 1B       		.uleb128 0x1b
 10314 0f77 F60C0000 		.4byte	.LASF186
 10315 0f7b 01       		.byte	0x1
 10316 0f7c 0104     		.2byte	0x401
 10317 0f7e 70020000 		.4byte	0x270
 10318 0f82 05       		.uleb128 0x5
 10319 0f83 03       		.byte	0x3
 10320 0f84 D4000000 		.4byte	prev_pwm.10465
 10321 0f88 1B       		.uleb128 0x1b
 10322 0f89 92040000 		.4byte	.LASF187
 10323 0f8d 01       		.byte	0x1
 10324 0f8e 0304     		.2byte	0x403
 10325 0f90 BF0F0000 		.4byte	0xfbf
 10326 0f94 05       		.uleb128 0x5
 10327 0f95 03       		.byte	0x3
 10328 0f96 C0000000 		.4byte	motor_dir.10466
 10329 0f9a 1B       		.uleb128 0x1b
 10330 0f9b 5B050000 		.4byte	.LASF188
 10331 0f9f 01       		.byte	0x1
 10332 0fa0 0404     		.2byte	0x404
 10333 0fa2 3E030000 		.4byte	0x33e
 10334 0fa6 05       		.uleb128 0x5
 10335 0fa7 03       		.byte	0x3
 10336 0fa8 DC000000 		.4byte	position_counter.10467
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 227


 10337 0fac 1B       		.uleb128 0x1b
 10338 0fad 3A090000 		.4byte	.LASF189
 10339 0fb1 01       		.byte	0x1
 10340 0fb2 0504     		.2byte	0x405
 10341 0fb4 BF0F0000 		.4byte	0xfbf
 10342 0fb8 05       		.uleb128 0x5
 10343 0fb9 03       		.byte	0x3
 10344 0fba AC000000 		.4byte	current_emg.10468
 10345 0fbe 00       		.byte	0
 10346 0fbf 07       		.uleb128 0x7
 10347 0fc0 81000000 		.4byte	0x81
 10348 0fc4 CF0F0000 		.4byte	0xfcf
 10349 0fc8 08       		.uleb128 0x8
 10350 0fc9 0E010000 		.4byte	0x10e
 10351 0fcd 01       		.byte	0x1
 10352 0fce 00       		.byte	0
 10353 0fcf 1A       		.uleb128 0x1a
 10354 0fd0 D4020000 		.4byte	.LASF193
 10355 0fd4 01       		.byte	0x1
 10356 0fd5 BB05     		.2byte	0x5bb
 10357 0fd7 00000000 		.4byte	.LFB70
 10358 0fdb 24080000 		.4byte	.LFE70-.LFB70
 10359 0fdf 01       		.uleb128 0x1
 10360 0fe0 9C       		.byte	0x9c
 10361 0fe1 69110000 		.4byte	0x1169
 10362 0fe5 21       		.uleb128 0x21
 10363 0fe6 8A000000 		.4byte	.LASF194
 10364 0fea 01       		.byte	0x1
 10365 0feb BB05     		.2byte	0x5bb
 10366 0fed 81000000 		.4byte	0x81
 10367 0ff1 03       		.uleb128 0x3
 10368 0ff2 91       		.byte	0x91
 10369 0ff3 BF7F     		.sleb128 -65
 10370 0ff5 21       		.uleb128 0x21
 10371 0ff6 4F090000 		.4byte	.LASF195
 10372 0ffa 01       		.byte	0x1
 10373 0ffb BB05     		.2byte	0x5bb
 10374 0ffd 81000000 		.4byte	0x81
 10375 1001 03       		.uleb128 0x3
 10376 1002 91       		.byte	0x91
 10377 1003 BE7F     		.sleb128 -66
 10378 1005 1B       		.uleb128 0x1b
 10379 1006 22060000 		.4byte	.LASF196
 10380 100a 01       		.byte	0x1
 10381 100b BD05     		.2byte	0x5bd
 10382 100d 81000000 		.4byte	0x81
 10383 1011 02       		.uleb128 0x2
 10384 1012 91       		.byte	0x91
 10385 1013 67       		.sleb128 -25
 10386 1014 1D       		.uleb128 0x1d
 10387 1015 6A6A00   		.ascii	"jj\000"
 10388 1018 01       		.byte	0x1
 10389 1019 C005     		.2byte	0x5c0
 10390 101b 81000000 		.4byte	0x81
 10391 101f 02       		.uleb128 0x2
 10392 1020 91       		.byte	0x91
 10393 1021 66       		.sleb128 -26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 228


 10394 1022 1B       		.uleb128 0x1b
 10395 1023 AD020000 		.4byte	.LASF197
 10396 1027 01       		.byte	0x1
 10397 1028 C205     		.2byte	0x5c2
 10398 102a 69110000 		.4byte	0x1169
 10399 102e 02       		.uleb128 0x2
 10400 102f 91       		.byte	0x91
 10401 1030 40       		.sleb128 -64
 10402 1031 1B       		.uleb128 0x1b
 10403 1032 B30D0000 		.4byte	.LASF198
 10404 1036 01       		.byte	0x1
 10405 1037 C305     		.2byte	0x5c3
 10406 1039 B1000000 		.4byte	0xb1
 10407 103d 02       		.uleb128 0x2
 10408 103e 91       		.byte	0x91
 10409 103f 64       		.sleb128 -28
 10410 1040 1B       		.uleb128 0x1b
 10411 1041 D40A0000 		.4byte	.LASF199
 10412 1045 01       		.byte	0x1
 10413 1046 C405     		.2byte	0x5c4
 10414 1048 BD000000 		.4byte	0xbd
 10415 104c 02       		.uleb128 0x2
 10416 104d 91       		.byte	0x91
 10417 104e 54       		.sleb128 -44
 10418 104f 1B       		.uleb128 0x1b
 10419 1050 B50C0000 		.4byte	.LASF200
 10420 1054 01       		.byte	0x1
 10421 1055 C505     		.2byte	0x5c5
 10422 1057 BD000000 		.4byte	0xbd
 10423 105b 02       		.uleb128 0x2
 10424 105c 91       		.byte	0x91
 10425 105d 60       		.sleb128 -32
 10426 105e 1B       		.uleb128 0x1b
 10427 105f DC030000 		.4byte	.LASF201
 10428 1063 01       		.byte	0x1
 10429 1064 C605     		.2byte	0x5c6
 10430 1066 BD000000 		.4byte	0xbd
 10431 106a 02       		.uleb128 0x2
 10432 106b 91       		.byte	0x91
 10433 106c 4C       		.sleb128 -52
 10434 106d 1B       		.uleb128 0x1b
 10435 106e 990C0000 		.4byte	.LASF202
 10436 1072 01       		.byte	0x1
 10437 1073 C705     		.2byte	0x5c7
 10438 1075 BD000000 		.4byte	0xbd
 10439 1079 02       		.uleb128 0x2
 10440 107a 91       		.byte	0x91
 10441 107b 50       		.sleb128 -48
 10442 107c 1B       		.uleb128 0x1b
 10443 107d C8090000 		.4byte	.LASF203
 10444 1081 01       		.byte	0x1
 10445 1082 C805     		.2byte	0x5c8
 10446 1084 A5000000 		.4byte	0xa5
 10447 1088 02       		.uleb128 0x2
 10448 1089 91       		.byte	0x91
 10449 108a 5F       		.sleb128 -33
 10450 108b 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 229


 10451 108c 670A0000 		.4byte	.LASF204
 10452 1090 01       		.byte	0x1
 10453 1091 CA05     		.2byte	0x5ca
 10454 1093 79110000 		.4byte	0x1179
 10455 1097 05       		.uleb128 0x5
 10456 1098 03       		.byte	0x3
 10457 1099 E4000000 		.4byte	last_value_encoder.10508
 10458 109d 1B       		.uleb128 0x1b
 10459 109e E4050000 		.4byte	.LASF205
 10460 10a2 01       		.byte	0x1
 10461 10a3 CB05     		.2byte	0x5cb
 10462 10a5 79110000 		.4byte	0x1179
 10463 10a9 05       		.uleb128 0x5
 10464 10aa 03       		.byte	0x3
 10465 10ab FC000000 		.4byte	comp_value_encoder.10509
 10466 10af 1B       		.uleb128 0x1b
 10467 10b0 E8020000 		.4byte	.LASF206
 10468 10b4 01       		.byte	0x1
 10469 10b5 CC05     		.2byte	0x5cc
 10470 10b7 8F110000 		.4byte	0x118f
 10471 10bb 05       		.uleb128 0x5
 10472 10bc 03       		.byte	0x3
 10473 10bd 14010000 		.4byte	error.10510
 10474 10c1 1B       		.uleb128 0x1b
 10475 10c2 830C0000 		.4byte	.LASF207
 10476 10c6 01       		.byte	0x1
 10477 10c7 CE05     		.2byte	0x5ce
 10478 10c9 BF0F0000 		.4byte	0xfbf
 10479 10cd 05       		.uleb128 0x5
 10480 10ce 03       		.byte	0x3
 10481 10cf 04000000 		.4byte	only_first_time.10511
 10482 10d3 1B       		.uleb128 0x1b
 10483 10d4 76020000 		.4byte	.LASF208
 10484 10d8 01       		.byte	0x1
 10485 10d9 CF05     		.2byte	0x5cf
 10486 10db BF0F0000 		.4byte	0xfbf
 10487 10df 05       		.uleb128 0x5
 10488 10e0 03       		.byte	0x3
 10489 10e1 6C010000 		.4byte	safe_startup_motor_activation.10512
 10490 10e5 1B       		.uleb128 0x1b
 10491 10e6 5F000000 		.4byte	.LASF209
 10492 10ea 01       		.byte	0x1
 10493 10eb D005     		.2byte	0x5d0
 10494 10ed BF0F0000 		.4byte	0xfbf
 10495 10f1 05       		.uleb128 0x5
 10496 10f2 03       		.byte	0x3
 10497 10f3 68010000 		.4byte	one_time_execute.10513
 10498 10f7 1B       		.uleb128 0x1b
 10499 10f8 99080000 		.4byte	.LASF210
 10500 10fc 01       		.byte	0x1
 10501 10fd D105     		.2byte	0x5d1
 10502 10ff 3E030000 		.4byte	0x33e
 10503 1103 05       		.uleb128 0x5
 10504 1104 03       		.byte	0x3
 10505 1105 70010000 		.4byte	count_startup_motor.10514
 10506 1109 1B       		.uleb128 0x1b
 10507 110a 04030000 		.4byte	.LASF211
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 230


 10508 110e 01       		.byte	0x1
 10509 110f D205     		.2byte	0x5d2
 10510 1111 BF0F0000 		.4byte	0xfbf
 10511 1115 05       		.uleb128 0x5
 10512 1116 03       		.byte	0x3
 10513 1117 64010000 		.4byte	pos_reconstruct.10515
 10514 111b 1B       		.uleb128 0x1b
 10515 111c F5070000 		.4byte	.LASF212
 10516 1120 01       		.byte	0x1
 10517 1121 D405     		.2byte	0x5d4
 10518 1123 79110000 		.4byte	0x1179
 10519 1127 05       		.uleb128 0x5
 10520 1128 03       		.byte	0x3
 10521 1129 1C010000 		.4byte	v_value.10516
 10522 112d 1B       		.uleb128 0x1b
 10523 112e FD0E0000 		.4byte	.LASF213
 10524 1132 01       		.byte	0x1
 10525 1133 D505     		.2byte	0x5d5
 10526 1135 79110000 		.4byte	0x1179
 10527 1139 05       		.uleb128 0x5
 10528 113a 03       		.byte	0x3
 10529 113b 34010000 		.4byte	vv_value.10517
 10530 113f 1B       		.uleb128 0x1b
 10531 1140 3B010000 		.4byte	.LASF214
 10532 1144 01       		.byte	0x1
 10533 1145 D605     		.2byte	0x5d6
 10534 1147 79110000 		.4byte	0x1179
 10535 114b 05       		.uleb128 0x5
 10536 114c 03       		.byte	0x3
 10537 114d 4C010000 		.4byte	vvv_value.10518
 10538 1151 1C       		.uleb128 0x1c
 10539 1152 94000000 		.4byte	.LBB3
 10540 1156 6A000000 		.4byte	.LBE3-.LBB3
 10541 115a 1D       		.uleb128 0x1d
 10542 115b 6A00     		.ascii	"j\000"
 10543 115d 01       		.byte	0x1
 10544 115e E605     		.2byte	0x5e6
 10545 1160 68000000 		.4byte	0x68
 10546 1164 02       		.uleb128 0x2
 10547 1165 91       		.byte	0x91
 10548 1166 58       		.sleb128 -40
 10549 1167 00       		.byte	0
 10550 1168 00       		.byte	0
 10551 1169 07       		.uleb128 0x7
 10552 116a 99000000 		.4byte	0x99
 10553 116e 79110000 		.4byte	0x1179
 10554 1172 08       		.uleb128 0x8
 10555 1173 0E010000 		.4byte	0x10e
 10556 1177 02       		.byte	0x2
 10557 1178 00       		.byte	0
 10558 1179 07       		.uleb128 0x7
 10559 117a BD000000 		.4byte	0xbd
 10560 117e 8F110000 		.4byte	0x118f
 10561 1182 08       		.uleb128 0x8
 10562 1183 0E010000 		.4byte	0x10e
 10563 1187 01       		.byte	0x1
 10564 1188 08       		.uleb128 0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 231


 10565 1189 0E010000 		.4byte	0x10e
 10566 118d 02       		.byte	0x2
 10567 118e 00       		.byte	0
 10568 118f 07       		.uleb128 0x7
 10569 1190 81000000 		.4byte	0x81
 10570 1194 A5110000 		.4byte	0x11a5
 10571 1198 08       		.uleb128 0x8
 10572 1199 0E010000 		.4byte	0x10e
 10573 119d 01       		.byte	0x1
 10574 119e 08       		.uleb128 0x8
 10575 119f 0E010000 		.4byte	0x10e
 10576 11a3 02       		.byte	0x2
 10577 11a4 00       		.byte	0
 10578 11a5 1F       		.uleb128 0x1f
 10579 11a6 700B0000 		.4byte	.LASF215
 10580 11aa 01       		.byte	0x1
 10581 11ab 8E06     		.2byte	0x68e
 10582 11ad 00000000 		.4byte	.LFB71
 10583 11b1 3C0D0000 		.4byte	.LFE71-.LFB71
 10584 11b5 01       		.uleb128 0x1
 10585 11b6 9C       		.byte	0x9c
 10586 11b7 37120000 		.4byte	0x1237
 10587 11bb 1B       		.uleb128 0x1b
 10588 11bc 3C0B0000 		.4byte	.LASF216
 10589 11c0 01       		.byte	0x1
 10590 11c1 A206     		.2byte	0x6a2
 10591 11c3 BD000000 		.4byte	0xbd
 10592 11c7 02       		.uleb128 0x2
 10593 11c8 91       		.byte	0x91
 10594 11c9 64       		.sleb128 -28
 10595 11ca 1B       		.uleb128 0x1b
 10596 11cb 250C0000 		.4byte	.LASF217
 10597 11cf 01       		.byte	0x1
 10598 11d0 A406     		.2byte	0x6a4
 10599 11d2 8D000000 		.4byte	0x8d
 10600 11d6 05       		.uleb128 0x5
 10601 11d7 03       		.byte	0x3
 10602 11d8 80010000 		.4byte	emg_counter_1.10535
 10603 11dc 1B       		.uleb128 0x1b
 10604 11dd 330C0000 		.4byte	.LASF218
 10605 11e1 01       		.byte	0x1
 10606 11e2 A506     		.2byte	0x6a5
 10607 11e4 8D000000 		.4byte	0x8d
 10608 11e8 05       		.uleb128 0x5
 10609 11e9 03       		.byte	0x3
 10610 11ea 82010000 		.4byte	emg_counter_2.10536
 10611 11ee 1B       		.uleb128 0x1b
 10612 11ef 10020000 		.4byte	.LASF219
 10613 11f3 01       		.byte	0x1
 10614 11f4 A606     		.2byte	0x6a6
 10615 11f6 81000000 		.4byte	0x81
 10616 11fa 05       		.uleb128 0x5
 10617 11fb 03       		.byte	0x3
 10618 11fc 06000000 		.4byte	first_tension_valid.10537
 10619 1200 1B       		.uleb128 0x1b
 10620 1201 C1080000 		.4byte	.LASF220
 10621 1205 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 232


 10622 1206 A806     		.2byte	0x6a8
 10623 1208 8D000000 		.4byte	0x8d
 10624 120c 05       		.uleb128 0x5
 10625 120d 03       		.byte	0x3
 10626 120e 78010000 		.4byte	count.10538
 10627 1212 1B       		.uleb128 0x1b
 10628 1213 2B010000 		.4byte	.LASF221
 10629 1217 01       		.byte	0x1
 10630 1218 A906     		.2byte	0x6a9
 10631 121a 99000000 		.4byte	0x99
 10632 121e 05       		.uleb128 0x5
 10633 121f 03       		.byte	0x3
 10634 1220 7C010000 		.4byte	v_count.10539
 10635 1224 1D       		.uleb128 0x1d
 10636 1225 69647800 		.ascii	"idx\000"
 10637 1229 01       		.byte	0x1
 10638 122a AA06     		.2byte	0x6aa
 10639 122c 81000000 		.4byte	0x81
 10640 1230 05       		.uleb128 0x5
 10641 1231 03       		.byte	0x3
 10642 1232 7A010000 		.4byte	idx.10540
 10643 1236 00       		.byte	0
 10644 1237 22       		.uleb128 0x22
 10645 1238 4D0B0000 		.4byte	.LASF222
 10646 123c 01       		.byte	0x1
 10647 123d 3C08     		.2byte	0x83c
 10648 123f 00000000 		.4byte	.LFB72
 10649 1243 E0000000 		.4byte	.LFE72-.LFB72
 10650 1247 01       		.uleb128 0x1
 10651 1248 9C       		.byte	0x9c
 10652 1249 65120000 		.4byte	0x1265
 10653 124d 1C       		.uleb128 0x1c
 10654 124e 06000000 		.4byte	.LBB4
 10655 1252 C0000000 		.4byte	.LBE4-.LBB4
 10656 1256 1D       		.uleb128 0x1d
 10657 1257 6900     		.ascii	"i\000"
 10658 1259 01       		.byte	0x1
 10659 125a 3E08     		.2byte	0x83e
 10660 125c 81000000 		.4byte	0x81
 10661 1260 02       		.uleb128 0x2
 10662 1261 91       		.byte	0x91
 10663 1262 77       		.sleb128 -9
 10664 1263 00       		.byte	0
 10665 1264 00       		.byte	0
 10666 1265 23       		.uleb128 0x23
 10667 1266 14030000 		.4byte	.LASF223
 10668 126a 01       		.byte	0x1
 10669 126b 5808     		.2byte	0x858
 10670 126d 00000000 		.4byte	.LFB73
 10671 1271 78000000 		.4byte	.LFE73-.LFB73
 10672 1275 01       		.uleb128 0x1
 10673 1276 9C       		.byte	0x9c
 10674 1277 B8120000 		.4byte	0x12b8
 10675 127b 21       		.uleb128 0x21
 10676 127c D1090000 		.4byte	.LASF224
 10677 1280 01       		.byte	0x1
 10678 1281 5808     		.2byte	0x858
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 233


 10679 1283 81000000 		.4byte	0x81
 10680 1287 02       		.uleb128 0x2
 10681 1288 91       		.byte	0x91
 10682 1289 6F       		.sleb128 -17
 10683 128a 1B       		.uleb128 0x1b
 10684 128b 22060000 		.4byte	.LASF196
 10685 128f 01       		.byte	0x1
 10686 1290 5A08     		.2byte	0x85a
 10687 1292 81000000 		.4byte	0x81
 10688 1296 02       		.uleb128 0x2
 10689 1297 91       		.byte	0x91
 10690 1298 73       		.sleb128 -13
 10691 1299 1B       		.uleb128 0x1b
 10692 129a 510A0000 		.4byte	.LASF225
 10693 129e 01       		.byte	0x1
 10694 129f 5B08     		.2byte	0x85b
 10695 12a1 8D000000 		.4byte	0x8d
 10696 12a5 02       		.uleb128 0x2
 10697 12a6 91       		.byte	0x91
 10698 12a7 76       		.sleb128 -10
 10699 12a8 1B       		.uleb128 0x1b
 10700 12a9 BF060000 		.4byte	.LASF226
 10701 12ad 01       		.byte	0x1
 10702 12ae 5C08     		.2byte	0x85c
 10703 12b0 8D000000 		.4byte	0x8d
 10704 12b4 02       		.uleb128 0x2
 10705 12b5 91       		.byte	0x91
 10706 12b6 74       		.sleb128 -12
 10707 12b7 00       		.byte	0
 10708 12b8 1F       		.uleb128 0x1f
 10709 12b9 32070000 		.4byte	.LASF227
 10710 12bd 01       		.byte	0x1
 10711 12be 6C08     		.2byte	0x86c
 10712 12c0 00000000 		.4byte	.LFB74
 10713 12c4 78030000 		.4byte	.LFE74-.LFB74
 10714 12c8 01       		.uleb128 0x1
 10715 12c9 9C       		.byte	0x9c
 10716 12ca B7130000 		.4byte	0x13b7
 10717 12ce 1B       		.uleb128 0x1b
 10718 12cf 09000000 		.4byte	.LASF228
 10719 12d3 01       		.byte	0x1
 10720 12d4 6D08     		.2byte	0x86d
 10721 12d6 81000000 		.4byte	0x81
 10722 12da 05       		.uleb128 0x5
 10723 12db 03       		.byte	0x3
 10724 12dc 84010000 		.4byte	pos_cycle_status.10596
 10725 12e0 1B       		.uleb128 0x1b
 10726 12e1 A20B0000 		.4byte	.LASF229
 10727 12e5 01       		.byte	0x1
 10728 12e6 6E08     		.2byte	0x86e
 10729 12e8 BF0F0000 		.4byte	0xfbf
 10730 12ec 05       		.uleb128 0x5
 10731 12ed 03       		.byte	0x3
 10732 12ee 90010000 		.4byte	emg_cycle_status.10597
 10733 12f2 1B       		.uleb128 0x1b
 10734 12f3 A10D0000 		.4byte	.LASF230
 10735 12f7 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 234


 10736 12f8 6F08     		.2byte	0x86f
 10737 12fa 81000000 		.4byte	0x81
 10738 12fe 05       		.uleb128 0x5
 10739 12ff 03       		.byte	0x3
 10740 1300 92010000 		.4byte	rest_cycle_status.10598
 10741 1304 1B       		.uleb128 0x1b
 10742 1305 5F020000 		.4byte	.LASF231
 10743 1309 01       		.byte	0x1
 10744 130a 7008     		.2byte	0x870
 10745 130c BD000000 		.4byte	0xbd
 10746 1310 05       		.uleb128 0x5
 10747 1311 03       		.byte	0x3
 10748 1312 08000000 		.4byte	bin_threshold.10599
 10749 1316 1B       		.uleb128 0x1b
 10750 1317 91010000 		.4byte	.LASF232
 10751 131b 01       		.byte	0x1
 10752 131c 7108     		.2byte	0x871
 10753 131e BD000000 		.4byte	0xbd
 10754 1322 05       		.uleb128 0x5
 10755 1323 03       		.byte	0x3
 10756 1324 88010000 		.4byte	thr_pos.10600
 10757 1328 1B       		.uleb128 0x1b
 10758 1329 EA080000 		.4byte	.LASF233
 10759 132d 01       		.byte	0x1
 10760 132e 7108     		.2byte	0x871
 10761 1330 BD000000 		.4byte	0xbd
 10762 1334 05       		.uleb128 0x5
 10763 1335 03       		.byte	0x3
 10764 1336 8C010000 		.4byte	max_pos.10601
 10765 133a 1D       		.uleb128 0x1d
 10766 133b 6900     		.ascii	"i\000"
 10767 133d 01       		.byte	0x1
 10768 133e 7208     		.2byte	0x872
 10769 1340 81000000 		.4byte	0x81
 10770 1344 02       		.uleb128 0x2
 10771 1345 91       		.byte	0x91
 10772 1346 77       		.sleb128 -9
 10773 1347 1B       		.uleb128 0x1b
 10774 1348 9C040000 		.4byte	.LASF234
 10775 134c 01       		.byte	0x1
 10776 134d 7208     		.2byte	0x872
 10777 134f 81000000 		.4byte	0x81
 10778 1353 02       		.uleb128 0x2
 10779 1354 91       		.byte	0x91
 10780 1355 67       		.sleb128 -25
 10781 1356 1B       		.uleb128 0x1b
 10782 1357 C7000000 		.4byte	.LASF235
 10783 135b 01       		.byte	0x1
 10784 135c 7208     		.2byte	0x872
 10785 135e 81000000 		.4byte	0x81
 10786 1362 02       		.uleb128 0x2
 10787 1363 91       		.byte	0x91
 10788 1364 66       		.sleb128 -26
 10789 1365 1B       		.uleb128 0x1b
 10790 1366 610B0000 		.4byte	.LASF236
 10791 136a 01       		.byte	0x1
 10792 136b 7308     		.2byte	0x873
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 235


 10793 136d BD000000 		.4byte	0xbd
 10794 1371 02       		.uleb128 0x2
 10795 1372 91       		.byte	0x91
 10796 1373 70       		.sleb128 -16
 10797 1374 1B       		.uleb128 0x1b
 10798 1375 F3030000 		.4byte	.LASF237
 10799 1379 01       		.byte	0x1
 10800 137a 7308     		.2byte	0x873
 10801 137c BD000000 		.4byte	0xbd
 10802 1380 02       		.uleb128 0x2
 10803 1381 91       		.byte	0x91
 10804 1382 6C       		.sleb128 -20
 10805 1383 1B       		.uleb128 0x1b
 10806 1384 8E030000 		.4byte	.LASF238
 10807 1388 01       		.byte	0x1
 10808 1389 7408     		.2byte	0x874
 10809 138b BD000000 		.4byte	0xbd
 10810 138f 02       		.uleb128 0x2
 10811 1390 91       		.byte	0x91
 10812 1391 68       		.sleb128 -24
 10813 1392 1B       		.uleb128 0x1b
 10814 1393 C8050000 		.4byte	.LASF239
 10815 1397 01       		.byte	0x1
 10816 1398 7508     		.2byte	0x875
 10817 139a 99000000 		.4byte	0x99
 10818 139e 05       		.uleb128 0x5
 10819 139f 03       		.byte	0x3
 10820 13a0 94010000 		.4byte	timer_value_s.10608
 10821 13a4 1B       		.uleb128 0x1b
 10822 13a5 6C050000 		.4byte	.LASF240
 10823 13a9 01       		.byte	0x1
 10824 13aa 7508     		.2byte	0x875
 10825 13ac 99000000 		.4byte	0x99
 10826 13b0 05       		.uleb128 0x5
 10827 13b1 03       		.byte	0x3
 10828 13b2 98010000 		.4byte	timer_value_e.10609
 10829 13b6 00       		.byte	0
 10830 13b7 1F       		.uleb128 0x1f
 10831 13b8 77090000 		.4byte	.LASF241
 10832 13bc 01       		.byte	0x1
 10833 13bd D808     		.2byte	0x8d8
 10834 13bf 00000000 		.4byte	.LFB75
 10835 13c3 08010000 		.4byte	.LFE75-.LFB75
 10836 13c7 01       		.uleb128 0x1
 10837 13c8 9C       		.byte	0x9c
 10838 13c9 3D140000 		.4byte	0x143d
 10839 13cd 1B       		.uleb128 0x1b
 10840 13ce A2060000 		.4byte	.LASF242
 10841 13d2 01       		.byte	0x1
 10842 13d3 DA08     		.2byte	0x8da
 10843 13d5 EA000000 		.4byte	0xea
 10844 13d9 02       		.uleb128 0x2
 10845 13da 91       		.byte	0x91
 10846 13db 64       		.sleb128 -28
 10847 13dc 1B       		.uleb128 0x1b
 10848 13dd 420B0000 		.4byte	.LASF243
 10849 13e1 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 236


 10850 13e2 DB08     		.2byte	0x8db
 10851 13e4 81000000 		.4byte	0x81
 10852 13e8 05       		.uleb128 0x5
 10853 13e9 03       		.byte	0x3
 10854 13ea A0010000 		.4byte	row_number.10631
 10855 13ee 1B       		.uleb128 0x1b
 10856 13ef C6030000 		.4byte	.LASF244
 10857 13f3 01       		.byte	0x1
 10858 13f4 DC08     		.2byte	0x8dc
 10859 13f6 81000000 		.4byte	0x81
 10860 13fa 02       		.uleb128 0x2
 10861 13fb 91       		.byte	0x91
 10862 13fc 77       		.sleb128 -9
 10863 13fd 1B       		.uleb128 0x1b
 10864 13fe F20B0000 		.4byte	.LASF245
 10865 1402 01       		.byte	0x1
 10866 1403 DD08     		.2byte	0x8dd
 10867 1405 3D140000 		.4byte	0x143d
 10868 1409 02       		.uleb128 0x2
 10869 140a 91       		.byte	0x91
 10870 140b 70       		.sleb128 -16
 10871 140c 1B       		.uleb128 0x1b
 10872 140d CF000000 		.4byte	.LASF246
 10873 1411 01       		.byte	0x1
 10874 1412 DE08     		.2byte	0x8de
 10875 1414 3D140000 		.4byte	0x143d
 10876 1418 02       		.uleb128 0x2
 10877 1419 91       		.byte	0x91
 10878 141a 6C       		.sleb128 -20
 10879 141b 1B       		.uleb128 0x1b
 10880 141c 700E0000 		.4byte	.LASF247
 10881 1420 01       		.byte	0x1
 10882 1421 DF08     		.2byte	0x8df
 10883 1423 81000000 		.4byte	0x81
 10884 1427 02       		.uleb128 0x2
 10885 1428 91       		.byte	0x91
 10886 1429 6B       		.sleb128 -21
 10887 142a 1B       		.uleb128 0x1b
 10888 142b D0080000 		.4byte	.LASF248
 10889 142f 01       		.byte	0x1
 10890 1430 E008     		.2byte	0x8e0
 10891 1432 3D140000 		.4byte	0x143d
 10892 1436 05       		.uleb128 0x5
 10893 1437 03       		.byte	0x3
 10894 1438 9C010000 		.4byte	m_addr.10636
 10895 143c 00       		.byte	0
 10896 143d 0C       		.uleb128 0xc
 10897 143e 04       		.byte	0x4
 10898 143f 81000000 		.4byte	0x81
 10899 1443 07       		.uleb128 0x7
 10900 1444 53140000 		.4byte	0x1453
 10901 1448 53140000 		.4byte	0x1453
 10902 144c 08       		.uleb128 0x8
 10903 144d 0E010000 		.4byte	0x10e
 10904 1451 1C       		.byte	0x1c
 10905 1452 00       		.byte	0
 10906 1453 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 237


 10907 1454 81000000 		.4byte	0x81
 10908 1458 19       		.uleb128 0x19
 10909 1459 FD0B0000 		.4byte	.LASF249
 10910 145d 01       		.byte	0x1
 10911 145e 40       		.byte	0x40
 10912 145f 69140000 		.4byte	0x1469
 10913 1463 05       		.uleb128 0x5
 10914 1464 03       		.byte	0x3
 10915 1465 00000000 		.4byte	pwm_preload_values
 10916 1469 24       		.uleb128 0x24
 10917 146a 43140000 		.4byte	0x1443
 10918 146e 25       		.uleb128 0x25
 10919 146f 170D0000 		.4byte	.LASF250
 10920 1473 08       		.byte	0x8
 10921 1474 1207     		.2byte	0x712
 10922 1476 7A140000 		.4byte	0x147a
 10923 147a 06       		.uleb128 0x6
 10924 147b 76000000 		.4byte	0x76
 10925 147f 07       		.uleb128 0x7
 10926 1480 99010000 		.4byte	0x199
 10927 1484 8F140000 		.4byte	0x148f
 10928 1488 08       		.uleb128 0x8
 10929 1489 0E010000 		.4byte	0x10e
 10930 148d 01       		.byte	0x1
 10931 148e 00       		.byte	0
 10932 148f 25       		.uleb128 0x25
 10933 1490 08060000 		.4byte	.LASF251
 10934 1494 07       		.byte	0x7
 10935 1495 AD01     		.2byte	0x1ad
 10936 1497 7F140000 		.4byte	0x147f
 10937 149b 25       		.uleb128 0x25
 10938 149c EA030000 		.4byte	.LASF252
 10939 14a0 07       		.byte	0x7
 10940 14a1 AD01     		.2byte	0x1ad
 10941 14a3 7F140000 		.4byte	0x147f
 10942 14a7 25       		.uleb128 0x25
 10943 14a8 130A0000 		.4byte	.LASF253
 10944 14ac 07       		.byte	0x7
 10945 14ad AD01     		.2byte	0x1ad
 10946 14af 7F140000 		.4byte	0x147f
 10947 14b3 07       		.uleb128 0x7
 10948 14b4 D6010000 		.4byte	0x1d6
 10949 14b8 C3140000 		.4byte	0x14c3
 10950 14bc 08       		.uleb128 0x8
 10951 14bd 0E010000 		.4byte	0x10e
 10952 14c1 01       		.byte	0x1
 10953 14c2 00       		.byte	0
 10954 14c3 25       		.uleb128 0x25
 10955 14c4 C1050000 		.4byte	.LASF254
 10956 14c8 07       		.byte	0x7
 10957 14c9 AE01     		.2byte	0x1ae
 10958 14cb B3140000 		.4byte	0x14b3
 10959 14cf 25       		.uleb128 0x25
 10960 14d0 660E0000 		.4byte	.LASF255
 10961 14d4 07       		.byte	0x7
 10962 14d5 AE01     		.2byte	0x1ae
 10963 14d7 B3140000 		.4byte	0x14b3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 238


 10964 14db 25       		.uleb128 0x25
 10965 14dc 78000000 		.4byte	.LASF256
 10966 14e0 07       		.byte	0x7
 10967 14e1 AF01     		.2byte	0x1af
 10968 14e3 4B020000 		.4byte	0x24b
 10969 14e7 25       		.uleb128 0x25
 10970 14e8 DA0E0000 		.4byte	.LASF257
 10971 14ec 07       		.byte	0x7
 10972 14ed AF01     		.2byte	0x1af
 10973 14ef 4B020000 		.4byte	0x24b
 10974 14f3 25       		.uleb128 0x25
 10975 14f4 5A000000 		.4byte	.LASF258
 10976 14f8 07       		.byte	0x7
 10977 14f9 B001     		.2byte	0x1b0
 10978 14fb 90020000 		.4byte	0x290
 10979 14ff 25       		.uleb128 0x25
 10980 1500 1F0C0000 		.4byte	.LASF259
 10981 1504 07       		.byte	0x7
 10982 1505 B101     		.2byte	0x1b1
 10983 1507 21080000 		.4byte	0x821
 10984 150b 25       		.uleb128 0x25
 10985 150c D7080000 		.4byte	.LASF260
 10986 1510 07       		.byte	0x7
 10987 1511 B101     		.2byte	0x1b1
 10988 1513 21080000 		.4byte	0x821
 10989 1517 25       		.uleb128 0x25
 10990 1518 FD070000 		.4byte	.LASF261
 10991 151c 07       		.byte	0x7
 10992 151d B201     		.2byte	0x1b2
 10993 151f C5090000 		.4byte	0x9c5
 10994 1523 07       		.uleb128 0x7
 10995 1524 9D090000 		.4byte	0x99d
 10996 1528 33150000 		.4byte	0x1533
 10997 152c 08       		.uleb128 0x8
 10998 152d 0E010000 		.4byte	0x10e
 10999 1531 01       		.byte	0x1
 11000 1532 00       		.byte	0
 11001 1533 25       		.uleb128 0x25
 11002 1534 FF090000 		.4byte	.LASF262
 11003 1538 07       		.byte	0x7
 11004 1539 B301     		.2byte	0x1b3
 11005 153b 23150000 		.4byte	0x1523
 11006 153f 25       		.uleb128 0x25
 11007 1540 4D080000 		.4byte	.LASF263
 11008 1544 07       		.byte	0x7
 11009 1545 B301     		.2byte	0x1b3
 11010 1547 23150000 		.4byte	0x1523
 11011 154b 25       		.uleb128 0x25
 11012 154c E5090000 		.4byte	.LASF264
 11013 1550 07       		.byte	0x7
 11014 1551 B301     		.2byte	0x1b3
 11015 1553 23150000 		.4byte	0x1523
 11016 1557 07       		.uleb128 0x7
 11017 1558 9D090000 		.4byte	0x99d
 11018 155c 67150000 		.4byte	0x1567
 11019 1560 08       		.uleb128 0x8
 11020 1561 0E010000 		.4byte	0x10e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 239


 11021 1565 02       		.byte	0x2
 11022 1566 00       		.byte	0
 11023 1567 25       		.uleb128 0x25
 11024 1568 65040000 		.4byte	.LASF265
 11025 156c 07       		.byte	0x7
 11026 156d B401     		.2byte	0x1b4
 11027 156f 57150000 		.4byte	0x1557
 11028 1573 07       		.uleb128 0x7
 11029 1574 9D090000 		.4byte	0x99d
 11030 1578 83150000 		.4byte	0x1583
 11031 157c 08       		.uleb128 0x8
 11032 157d 0E010000 		.4byte	0x10e
 11033 1581 07       		.byte	0x7
 11034 1582 00       		.byte	0
 11035 1583 25       		.uleb128 0x25
 11036 1584 5B010000 		.4byte	.LASF266
 11037 1588 07       		.byte	0x7
 11038 1589 B501     		.2byte	0x1b5
 11039 158b 73150000 		.4byte	0x1573
 11040 158f 25       		.uleb128 0x25
 11041 1590 24020000 		.4byte	.LASF267
 11042 1594 07       		.byte	0x7
 11043 1595 B701     		.2byte	0x1b7
 11044 1597 8D000000 		.4byte	0x8d
 11045 159b 25       		.uleb128 0x25
 11046 159c DD070000 		.4byte	.LASF268
 11047 15a0 07       		.byte	0x7
 11048 15a1 B801     		.2byte	0x1b8
 11049 15a3 8D000000 		.4byte	0x8d
 11050 15a7 25       		.uleb128 0x25
 11051 15a8 8F0A0000 		.4byte	.LASF269
 11052 15ac 07       		.byte	0x7
 11053 15ad B901     		.2byte	0x1b9
 11054 15af D5000000 		.4byte	0xd5
 11055 15b3 25       		.uleb128 0x25
 11056 15b4 100B0000 		.4byte	.LASF270
 11057 15b8 07       		.byte	0x7
 11058 15b9 BB01     		.2byte	0x1bb
 11059 15bb 70020000 		.4byte	0x270
 11060 15bf 25       		.uleb128 0x25
 11061 15c0 720D0000 		.4byte	.LASF271
 11062 15c4 07       		.byte	0x7
 11063 15c5 BC01     		.2byte	0x1bc
 11064 15c7 BF0F0000 		.4byte	0xfbf
 11065 15cb 25       		.uleb128 0x25
 11066 15cc C90C0000 		.4byte	.LASF272
 11067 15d0 07       		.byte	0x7
 11068 15d1 BD01     		.2byte	0x1bd
 11069 15d3 BF0F0000 		.4byte	0xfbf
 11070 15d7 25       		.uleb128 0x25
 11071 15d8 1A050000 		.4byte	.LASF273
 11072 15dc 07       		.byte	0x7
 11073 15dd BE01     		.2byte	0x1be
 11074 15df 70020000 		.4byte	0x270
 11075 15e3 25       		.uleb128 0x25
 11076 15e4 240D0000 		.4byte	.LASF274
 11077 15e8 07       		.byte	0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 240


 11078 15e9 BF01     		.2byte	0x1bf
 11079 15eb 70020000 		.4byte	0x270
 11080 15ef 25       		.uleb128 0x25
 11081 15f0 9F050000 		.4byte	.LASF275
 11082 15f4 07       		.byte	0x7
 11083 15f5 C101     		.2byte	0x1c1
 11084 15f7 710A0000 		.4byte	0xa71
 11085 15fb 25       		.uleb128 0x25
 11086 15fc 14040000 		.4byte	.LASF276
 11087 1600 07       		.byte	0x7
 11088 1601 C201     		.2byte	0x1c2
 11089 1603 390A0000 		.4byte	0xa39
 11090 1607 25       		.uleb128 0x25
 11091 1608 6A030000 		.4byte	.LASF277
 11092 160c 07       		.byte	0x7
 11093 160d C301     		.2byte	0x1c3
 11094 160f 390A0000 		.4byte	0xa39
 11095 1613 25       		.uleb128 0x25
 11096 1614 E1060000 		.4byte	.LASF278
 11097 1618 07       		.byte	0x7
 11098 1619 C601     		.2byte	0x1c6
 11099 161b 81000000 		.4byte	0x81
 11100 161f 25       		.uleb128 0x25
 11101 1620 9D000000 		.4byte	.LASF279
 11102 1624 07       		.byte	0x7
 11103 1625 C701     		.2byte	0x1c7
 11104 1627 81000000 		.4byte	0x81
 11105 162b 25       		.uleb128 0x25
 11106 162c 7F030000 		.4byte	.LASF280
 11107 1630 07       		.byte	0x7
 11108 1631 C801     		.2byte	0x1c8
 11109 1633 81000000 		.4byte	0x81
 11110 1637 25       		.uleb128 0x25
 11111 1638 B1000000 		.4byte	.LASF281
 11112 163c 07       		.byte	0x7
 11113 163d C901     		.2byte	0x1c9
 11114 163f 81000000 		.4byte	0x81
 11115 1643 25       		.uleb128 0x25
 11116 1644 9A0E0000 		.4byte	.LASF282
 11117 1648 07       		.byte	0x7
 11118 1649 CB01     		.2byte	0x1cb
 11119 164b 81000000 		.4byte	0x81
 11120 164f 25       		.uleb128 0x25
 11121 1650 060A0000 		.4byte	.LASF283
 11122 1654 07       		.byte	0x7
 11123 1655 CC01     		.2byte	0x1cc
 11124 1657 81000000 		.4byte	0x81
 11125 165b 25       		.uleb128 0x25
 11126 165c D0030000 		.4byte	.LASF284
 11127 1660 07       		.byte	0x7
 11128 1661 CD01     		.2byte	0x1cd
 11129 1663 81000000 		.4byte	0x81
 11130 1667 25       		.uleb128 0x25
 11131 1668 CB060000 		.4byte	.LASF285
 11132 166c 07       		.byte	0x7
 11133 166d CE01     		.2byte	0x1ce
 11134 166f 81000000 		.4byte	0x81
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 241


 11135 1673 25       		.uleb128 0x25
 11136 1674 32080000 		.4byte	.LASF286
 11137 1678 07       		.byte	0x7
 11138 1679 CF01     		.2byte	0x1cf
 11139 167b 81000000 		.4byte	0x81
 11140 167f 07       		.uleb128 0x7
 11141 1680 B1000000 		.4byte	0xb1
 11142 1684 8F160000 		.4byte	0x168f
 11143 1688 08       		.uleb128 0x8
 11144 1689 0E010000 		.4byte	0x10e
 11145 168d 0B       		.byte	0xb
 11146 168e 00       		.byte	0
 11147 168f 25       		.uleb128 0x25
 11148 1690 77030000 		.4byte	.LASF287
 11149 1694 07       		.byte	0x7
 11150 1695 D301     		.2byte	0x1d3
 11151 1697 7F160000 		.4byte	0x167f
 11152 169b 25       		.uleb128 0x25
 11153 169c 3C0E0000 		.4byte	.LASF288
 11154 16a0 07       		.byte	0x7
 11155 16a1 D401     		.2byte	0x1d4
 11156 16a3 81000000 		.4byte	0x81
 11157 16a7 25       		.uleb128 0x25
 11158 16a8 46040000 		.4byte	.LASF289
 11159 16ac 07       		.byte	0x7
 11160 16ad D701     		.2byte	0x1d7
 11161 16af A5000000 		.4byte	0xa5
 11162 16b3 07       		.uleb128 0x7
 11163 16b4 99000000 		.4byte	0x99
 11164 16b8 C3160000 		.4byte	0x16c3
 11165 16bc 08       		.uleb128 0x8
 11166 16bd 0E010000 		.4byte	0x10e
 11167 16c1 04       		.byte	0x4
 11168 16c2 00       		.byte	0
 11169 16c3 25       		.uleb128 0x25
 11170 16c4 F7050000 		.4byte	.LASF290
 11171 16c8 07       		.byte	0x7
 11172 16c9 DA01     		.2byte	0x1da
 11173 16cb B3160000 		.4byte	0x16b3
 11174 16cf 25       		.uleb128 0x25
 11175 16d0 800B0000 		.4byte	.LASF291
 11176 16d4 07       		.byte	0x7
 11177 16d5 DB01     		.2byte	0x1db
 11178 16d7 BF0F0000 		.4byte	0xfbf
 11179 16db 07       		.uleb128 0x7
 11180 16dc 8D000000 		.4byte	0x8d
 11181 16e0 F1160000 		.4byte	0x16f1
 11182 16e4 08       		.uleb128 0x8
 11183 16e5 0E010000 		.4byte	0x10e
 11184 16e9 01       		.byte	0x1
 11185 16ea 08       		.uleb128 0x8
 11186 16eb 0E010000 		.4byte	0x10e
 11187 16ef 04       		.byte	0x4
 11188 16f0 00       		.byte	0
 11189 16f1 25       		.uleb128 0x25
 11190 16f2 8B0D0000 		.4byte	.LASF292
 11191 16f6 07       		.byte	0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 242


 11192 16f7 DC01     		.2byte	0x1dc
 11193 16f9 DB160000 		.4byte	0x16db
 11194 16fd 07       		.uleb128 0x7
 11195 16fe 81000000 		.4byte	0x81
 11196 1702 13170000 		.4byte	0x1713
 11197 1706 08       		.uleb128 0x8
 11198 1707 0E010000 		.4byte	0x10e
 11199 170b 01       		.byte	0x1
 11200 170c 08       		.uleb128 0x8
 11201 170d 0E010000 		.4byte	0x10e
 11202 1711 04       		.byte	0x4
 11203 1712 00       		.byte	0
 11204 1713 25       		.uleb128 0x25
 11205 1714 D6050000 		.4byte	.LASF293
 11206 1718 07       		.byte	0x7
 11207 1719 DD01     		.2byte	0x1dd
 11208 171b FD160000 		.4byte	0x16fd
 11209 171f 25       		.uleb128 0x25
 11210 1720 F2080000 		.4byte	.LASF294
 11211 1724 07       		.byte	0x7
 11212 1725 E001     		.2byte	0x1e0
 11213 1727 BD000000 		.4byte	0xbd
 11214 172b 25       		.uleb128 0x25
 11215 172c FD040000 		.4byte	.LASF295
 11216 1730 07       		.byte	0x7
 11217 1731 E301     		.2byte	0x1e3
 11218 1733 93010000 		.4byte	0x193
 11219 1737 07       		.uleb128 0x7
 11220 1738 21090000 		.4byte	0x921
 11221 173c 47170000 		.4byte	0x1747
 11222 1740 08       		.uleb128 0x8
 11223 1741 0E010000 		.4byte	0x10e
 11224 1745 04       		.byte	0x4
 11225 1746 00       		.byte	0
 11226 1747 25       		.uleb128 0x25
 11227 1748 3B060000 		.4byte	.LASF296
 11228 174c 07       		.byte	0x7
 11229 174d EC01     		.2byte	0x1ec
 11230 174f 37170000 		.4byte	0x1737
 11231 1753 25       		.uleb128 0x25
 11232 1754 4C050000 		.4byte	.LASF297
 11233 1758 07       		.byte	0x7
 11234 1759 EC01     		.2byte	0x1ec
 11235 175b 37170000 		.4byte	0x1737
 11236 175f 00       		.byte	0
 11237              		.section	.debug_abbrev,"",%progbits
 11238              	.Ldebug_abbrev0:
 11239 0000 01       		.uleb128 0x1
 11240 0001 11       		.uleb128 0x11
 11241 0002 01       		.byte	0x1
 11242 0003 25       		.uleb128 0x25
 11243 0004 0E       		.uleb128 0xe
 11244 0005 13       		.uleb128 0x13
 11245 0006 0B       		.uleb128 0xb
 11246 0007 03       		.uleb128 0x3
 11247 0008 0E       		.uleb128 0xe
 11248 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 243


 11249 000a 0E       		.uleb128 0xe
 11250 000b 55       		.uleb128 0x55
 11251 000c 17       		.uleb128 0x17
 11252 000d 11       		.uleb128 0x11
 11253 000e 01       		.uleb128 0x1
 11254 000f 10       		.uleb128 0x10
 11255 0010 17       		.uleb128 0x17
 11256 0011 00       		.byte	0
 11257 0012 00       		.byte	0
 11258 0013 02       		.uleb128 0x2
 11259 0014 24       		.uleb128 0x24
 11260 0015 00       		.byte	0
 11261 0016 0B       		.uleb128 0xb
 11262 0017 0B       		.uleb128 0xb
 11263 0018 3E       		.uleb128 0x3e
 11264 0019 0B       		.uleb128 0xb
 11265 001a 03       		.uleb128 0x3
 11266 001b 0E       		.uleb128 0xe
 11267 001c 00       		.byte	0
 11268 001d 00       		.byte	0
 11269 001e 03       		.uleb128 0x3
 11270 001f 16       		.uleb128 0x16
 11271 0020 00       		.byte	0
 11272 0021 03       		.uleb128 0x3
 11273 0022 0E       		.uleb128 0xe
 11274 0023 3A       		.uleb128 0x3a
 11275 0024 0B       		.uleb128 0xb
 11276 0025 3B       		.uleb128 0x3b
 11277 0026 0B       		.uleb128 0xb
 11278 0027 49       		.uleb128 0x49
 11279 0028 13       		.uleb128 0x13
 11280 0029 00       		.byte	0
 11281 002a 00       		.byte	0
 11282 002b 04       		.uleb128 0x4
 11283 002c 24       		.uleb128 0x24
 11284 002d 00       		.byte	0
 11285 002e 0B       		.uleb128 0xb
 11286 002f 0B       		.uleb128 0xb
 11287 0030 3E       		.uleb128 0x3e
 11288 0031 0B       		.uleb128 0xb
 11289 0032 03       		.uleb128 0x3
 11290 0033 08       		.uleb128 0x8
 11291 0034 00       		.byte	0
 11292 0035 00       		.byte	0
 11293 0036 05       		.uleb128 0x5
 11294 0037 16       		.uleb128 0x16
 11295 0038 00       		.byte	0
 11296 0039 03       		.uleb128 0x3
 11297 003a 0E       		.uleb128 0xe
 11298 003b 3A       		.uleb128 0x3a
 11299 003c 0B       		.uleb128 0xb
 11300 003d 3B       		.uleb128 0x3b
 11301 003e 05       		.uleb128 0x5
 11302 003f 49       		.uleb128 0x49
 11303 0040 13       		.uleb128 0x13
 11304 0041 00       		.byte	0
 11305 0042 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 244


 11306 0043 06       		.uleb128 0x6
 11307 0044 35       		.uleb128 0x35
 11308 0045 00       		.byte	0
 11309 0046 49       		.uleb128 0x49
 11310 0047 13       		.uleb128 0x13
 11311 0048 00       		.byte	0
 11312 0049 00       		.byte	0
 11313 004a 07       		.uleb128 0x7
 11314 004b 01       		.uleb128 0x1
 11315 004c 01       		.byte	0x1
 11316 004d 49       		.uleb128 0x49
 11317 004e 13       		.uleb128 0x13
 11318 004f 01       		.uleb128 0x1
 11319 0050 13       		.uleb128 0x13
 11320 0051 00       		.byte	0
 11321 0052 00       		.byte	0
 11322 0053 08       		.uleb128 0x8
 11323 0054 21       		.uleb128 0x21
 11324 0055 00       		.byte	0
 11325 0056 49       		.uleb128 0x49
 11326 0057 13       		.uleb128 0x13
 11327 0058 2F       		.uleb128 0x2f
 11328 0059 0B       		.uleb128 0xb
 11329 005a 00       		.byte	0
 11330 005b 00       		.byte	0
 11331 005c 09       		.uleb128 0x9
 11332 005d 04       		.uleb128 0x4
 11333 005e 01       		.byte	0x1
 11334 005f 03       		.uleb128 0x3
 11335 0060 0E       		.uleb128 0xe
 11336 0061 0B       		.uleb128 0xb
 11337 0062 0B       		.uleb128 0xb
 11338 0063 49       		.uleb128 0x49
 11339 0064 13       		.uleb128 0x13
 11340 0065 3A       		.uleb128 0x3a
 11341 0066 0B       		.uleb128 0xb
 11342 0067 3B       		.uleb128 0x3b
 11343 0068 0B       		.uleb128 0xb
 11344 0069 01       		.uleb128 0x1
 11345 006a 13       		.uleb128 0x13
 11346 006b 00       		.byte	0
 11347 006c 00       		.byte	0
 11348 006d 0A       		.uleb128 0xa
 11349 006e 28       		.uleb128 0x28
 11350 006f 00       		.byte	0
 11351 0070 03       		.uleb128 0x3
 11352 0071 0E       		.uleb128 0xe
 11353 0072 1C       		.uleb128 0x1c
 11354 0073 0B       		.uleb128 0xb
 11355 0074 00       		.byte	0
 11356 0075 00       		.byte	0
 11357 0076 0B       		.uleb128 0xb
 11358 0077 13       		.uleb128 0x13
 11359 0078 00       		.byte	0
 11360 0079 03       		.uleb128 0x3
 11361 007a 0E       		.uleb128 0xe
 11362 007b 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 245


 11363 007c 19       		.uleb128 0x19
 11364 007d 00       		.byte	0
 11365 007e 00       		.byte	0
 11366 007f 0C       		.uleb128 0xc
 11367 0080 0F       		.uleb128 0xf
 11368 0081 00       		.byte	0
 11369 0082 0B       		.uleb128 0xb
 11370 0083 0B       		.uleb128 0xb
 11371 0084 49       		.uleb128 0x49
 11372 0085 13       		.uleb128 0x13
 11373 0086 00       		.byte	0
 11374 0087 00       		.byte	0
 11375 0088 0D       		.uleb128 0xd
 11376 0089 13       		.uleb128 0x13
 11377 008a 01       		.byte	0x1
 11378 008b 03       		.uleb128 0x3
 11379 008c 0E       		.uleb128 0xe
 11380 008d 0B       		.uleb128 0xb
 11381 008e 0B       		.uleb128 0xb
 11382 008f 3A       		.uleb128 0x3a
 11383 0090 0B       		.uleb128 0xb
 11384 0091 3B       		.uleb128 0x3b
 11385 0092 0B       		.uleb128 0xb
 11386 0093 01       		.uleb128 0x1
 11387 0094 13       		.uleb128 0x13
 11388 0095 00       		.byte	0
 11389 0096 00       		.byte	0
 11390 0097 0E       		.uleb128 0xe
 11391 0098 0D       		.uleb128 0xd
 11392 0099 00       		.byte	0
 11393 009a 03       		.uleb128 0x3
 11394 009b 08       		.uleb128 0x8
 11395 009c 3A       		.uleb128 0x3a
 11396 009d 0B       		.uleb128 0xb
 11397 009e 3B       		.uleb128 0x3b
 11398 009f 0B       		.uleb128 0xb
 11399 00a0 49       		.uleb128 0x49
 11400 00a1 13       		.uleb128 0x13
 11401 00a2 38       		.uleb128 0x38
 11402 00a3 0B       		.uleb128 0xb
 11403 00a4 00       		.byte	0
 11404 00a5 00       		.byte	0
 11405 00a6 0F       		.uleb128 0xf
 11406 00a7 0D       		.uleb128 0xd
 11407 00a8 00       		.byte	0
 11408 00a9 03       		.uleb128 0x3
 11409 00aa 0E       		.uleb128 0xe
 11410 00ab 3A       		.uleb128 0x3a
 11411 00ac 0B       		.uleb128 0xb
 11412 00ad 3B       		.uleb128 0x3b
 11413 00ae 0B       		.uleb128 0xb
 11414 00af 49       		.uleb128 0x49
 11415 00b0 13       		.uleb128 0x13
 11416 00b1 38       		.uleb128 0x38
 11417 00b2 0B       		.uleb128 0xb
 11418 00b3 00       		.byte	0
 11419 00b4 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 246


 11420 00b5 10       		.uleb128 0x10
 11421 00b6 13       		.uleb128 0x13
 11422 00b7 01       		.byte	0x1
 11423 00b8 03       		.uleb128 0x3
 11424 00b9 0E       		.uleb128 0xe
 11425 00ba 0B       		.uleb128 0xb
 11426 00bb 0B       		.uleb128 0xb
 11427 00bc 3A       		.uleb128 0x3a
 11428 00bd 0B       		.uleb128 0xb
 11429 00be 3B       		.uleb128 0x3b
 11430 00bf 05       		.uleb128 0x5
 11431 00c0 01       		.uleb128 0x1
 11432 00c1 13       		.uleb128 0x13
 11433 00c2 00       		.byte	0
 11434 00c3 00       		.byte	0
 11435 00c4 11       		.uleb128 0x11
 11436 00c5 0D       		.uleb128 0xd
 11437 00c6 00       		.byte	0
 11438 00c7 03       		.uleb128 0x3
 11439 00c8 08       		.uleb128 0x8
 11440 00c9 3A       		.uleb128 0x3a
 11441 00ca 0B       		.uleb128 0xb
 11442 00cb 3B       		.uleb128 0x3b
 11443 00cc 05       		.uleb128 0x5
 11444 00cd 49       		.uleb128 0x49
 11445 00ce 13       		.uleb128 0x13
 11446 00cf 38       		.uleb128 0x38
 11447 00d0 0B       		.uleb128 0xb
 11448 00d1 00       		.byte	0
 11449 00d2 00       		.byte	0
 11450 00d3 12       		.uleb128 0x12
 11451 00d4 0D       		.uleb128 0xd
 11452 00d5 00       		.byte	0
 11453 00d6 03       		.uleb128 0x3
 11454 00d7 0E       		.uleb128 0xe
 11455 00d8 3A       		.uleb128 0x3a
 11456 00d9 0B       		.uleb128 0xb
 11457 00da 3B       		.uleb128 0x3b
 11458 00db 05       		.uleb128 0x5
 11459 00dc 49       		.uleb128 0x49
 11460 00dd 13       		.uleb128 0x13
 11461 00de 38       		.uleb128 0x38
 11462 00df 0B       		.uleb128 0xb
 11463 00e0 00       		.byte	0
 11464 00e1 00       		.byte	0
 11465 00e2 13       		.uleb128 0x13
 11466 00e3 13       		.uleb128 0x13
 11467 00e4 01       		.byte	0x1
 11468 00e5 03       		.uleb128 0x3
 11469 00e6 0E       		.uleb128 0xe
 11470 00e7 0B       		.uleb128 0xb
 11471 00e8 05       		.uleb128 0x5
 11472 00e9 3A       		.uleb128 0x3a
 11473 00ea 0B       		.uleb128 0xb
 11474 00eb 3B       		.uleb128 0x3b
 11475 00ec 05       		.uleb128 0x5
 11476 00ed 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 247


 11477 00ee 13       		.uleb128 0x13
 11478 00ef 00       		.byte	0
 11479 00f0 00       		.byte	0
 11480 00f1 14       		.uleb128 0x14
 11481 00f2 0D       		.uleb128 0xd
 11482 00f3 00       		.byte	0
 11483 00f4 03       		.uleb128 0x3
 11484 00f5 08       		.uleb128 0x8
 11485 00f6 3A       		.uleb128 0x3a
 11486 00f7 0B       		.uleb128 0xb
 11487 00f8 3B       		.uleb128 0x3b
 11488 00f9 05       		.uleb128 0x5
 11489 00fa 49       		.uleb128 0x49
 11490 00fb 13       		.uleb128 0x13
 11491 00fc 38       		.uleb128 0x38
 11492 00fd 05       		.uleb128 0x5
 11493 00fe 00       		.byte	0
 11494 00ff 00       		.byte	0
 11495 0100 15       		.uleb128 0x15
 11496 0101 0D       		.uleb128 0xd
 11497 0102 00       		.byte	0
 11498 0103 03       		.uleb128 0x3
 11499 0104 0E       		.uleb128 0xe
 11500 0105 3A       		.uleb128 0x3a
 11501 0106 0B       		.uleb128 0xb
 11502 0107 3B       		.uleb128 0x3b
 11503 0108 05       		.uleb128 0x5
 11504 0109 49       		.uleb128 0x49
 11505 010a 13       		.uleb128 0x13
 11506 010b 38       		.uleb128 0x38
 11507 010c 05       		.uleb128 0x5
 11508 010d 00       		.byte	0
 11509 010e 00       		.byte	0
 11510 010f 16       		.uleb128 0x16
 11511 0110 04       		.uleb128 0x4
 11512 0111 01       		.byte	0x1
 11513 0112 0B       		.uleb128 0xb
 11514 0113 0B       		.uleb128 0xb
 11515 0114 49       		.uleb128 0x49
 11516 0115 13       		.uleb128 0x13
 11517 0116 3A       		.uleb128 0x3a
 11518 0117 0B       		.uleb128 0xb
 11519 0118 3B       		.uleb128 0x3b
 11520 0119 05       		.uleb128 0x5
 11521 011a 01       		.uleb128 0x1
 11522 011b 13       		.uleb128 0x13
 11523 011c 00       		.byte	0
 11524 011d 00       		.byte	0
 11525 011e 17       		.uleb128 0x17
 11526 011f 2E       		.uleb128 0x2e
 11527 0120 00       		.byte	0
 11528 0121 3F       		.uleb128 0x3f
 11529 0122 19       		.uleb128 0x19
 11530 0123 03       		.uleb128 0x3
 11531 0124 0E       		.uleb128 0xe
 11532 0125 3A       		.uleb128 0x3a
 11533 0126 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 248


 11534 0127 3B       		.uleb128 0x3b
 11535 0128 0B       		.uleb128 0xb
 11536 0129 27       		.uleb128 0x27
 11537 012a 19       		.uleb128 0x19
 11538 012b 11       		.uleb128 0x11
 11539 012c 01       		.uleb128 0x1
 11540 012d 12       		.uleb128 0x12
 11541 012e 06       		.uleb128 0x6
 11542 012f 40       		.uleb128 0x40
 11543 0130 18       		.uleb128 0x18
 11544 0131 9742     		.uleb128 0x2117
 11545 0133 19       		.uleb128 0x19
 11546 0134 00       		.byte	0
 11547 0135 00       		.byte	0
 11548 0136 18       		.uleb128 0x18
 11549 0137 2E       		.uleb128 0x2e
 11550 0138 01       		.byte	0x1
 11551 0139 3F       		.uleb128 0x3f
 11552 013a 19       		.uleb128 0x19
 11553 013b 03       		.uleb128 0x3
 11554 013c 0E       		.uleb128 0xe
 11555 013d 3A       		.uleb128 0x3a
 11556 013e 0B       		.uleb128 0xb
 11557 013f 3B       		.uleb128 0x3b
 11558 0140 0B       		.uleb128 0xb
 11559 0141 11       		.uleb128 0x11
 11560 0142 01       		.uleb128 0x1
 11561 0143 12       		.uleb128 0x12
 11562 0144 06       		.uleb128 0x6
 11563 0145 40       		.uleb128 0x40
 11564 0146 18       		.uleb128 0x18
 11565 0147 9642     		.uleb128 0x2116
 11566 0149 19       		.uleb128 0x19
 11567 014a 01       		.uleb128 0x1
 11568 014b 13       		.uleb128 0x13
 11569 014c 00       		.byte	0
 11570 014d 00       		.byte	0
 11571 014e 19       		.uleb128 0x19
 11572 014f 34       		.uleb128 0x34
 11573 0150 00       		.byte	0
 11574 0151 03       		.uleb128 0x3
 11575 0152 0E       		.uleb128 0xe
 11576 0153 3A       		.uleb128 0x3a
 11577 0154 0B       		.uleb128 0xb
 11578 0155 3B       		.uleb128 0x3b
 11579 0156 0B       		.uleb128 0xb
 11580 0157 49       		.uleb128 0x49
 11581 0158 13       		.uleb128 0x13
 11582 0159 02       		.uleb128 0x2
 11583 015a 18       		.uleb128 0x18
 11584 015b 00       		.byte	0
 11585 015c 00       		.byte	0
 11586 015d 1A       		.uleb128 0x1a
 11587 015e 2E       		.uleb128 0x2e
 11588 015f 01       		.byte	0x1
 11589 0160 3F       		.uleb128 0x3f
 11590 0161 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 249


 11591 0162 03       		.uleb128 0x3
 11592 0163 0E       		.uleb128 0xe
 11593 0164 3A       		.uleb128 0x3a
 11594 0165 0B       		.uleb128 0xb
 11595 0166 3B       		.uleb128 0x3b
 11596 0167 05       		.uleb128 0x5
 11597 0168 27       		.uleb128 0x27
 11598 0169 19       		.uleb128 0x19
 11599 016a 11       		.uleb128 0x11
 11600 016b 01       		.uleb128 0x1
 11601 016c 12       		.uleb128 0x12
 11602 016d 06       		.uleb128 0x6
 11603 016e 40       		.uleb128 0x40
 11604 016f 18       		.uleb128 0x18
 11605 0170 9642     		.uleb128 0x2116
 11606 0172 19       		.uleb128 0x19
 11607 0173 01       		.uleb128 0x1
 11608 0174 13       		.uleb128 0x13
 11609 0175 00       		.byte	0
 11610 0176 00       		.byte	0
 11611 0177 1B       		.uleb128 0x1b
 11612 0178 34       		.uleb128 0x34
 11613 0179 00       		.byte	0
 11614 017a 03       		.uleb128 0x3
 11615 017b 0E       		.uleb128 0xe
 11616 017c 3A       		.uleb128 0x3a
 11617 017d 0B       		.uleb128 0xb
 11618 017e 3B       		.uleb128 0x3b
 11619 017f 05       		.uleb128 0x5
 11620 0180 49       		.uleb128 0x49
 11621 0181 13       		.uleb128 0x13
 11622 0182 02       		.uleb128 0x2
 11623 0183 18       		.uleb128 0x18
 11624 0184 00       		.byte	0
 11625 0185 00       		.byte	0
 11626 0186 1C       		.uleb128 0x1c
 11627 0187 0B       		.uleb128 0xb
 11628 0188 01       		.byte	0x1
 11629 0189 11       		.uleb128 0x11
 11630 018a 01       		.uleb128 0x1
 11631 018b 12       		.uleb128 0x12
 11632 018c 06       		.uleb128 0x6
 11633 018d 00       		.byte	0
 11634 018e 00       		.byte	0
 11635 018f 1D       		.uleb128 0x1d
 11636 0190 34       		.uleb128 0x34
 11637 0191 00       		.byte	0
 11638 0192 03       		.uleb128 0x3
 11639 0193 08       		.uleb128 0x8
 11640 0194 3A       		.uleb128 0x3a
 11641 0195 0B       		.uleb128 0xb
 11642 0196 3B       		.uleb128 0x3b
 11643 0197 05       		.uleb128 0x5
 11644 0198 49       		.uleb128 0x49
 11645 0199 13       		.uleb128 0x13
 11646 019a 02       		.uleb128 0x2
 11647 019b 18       		.uleb128 0x18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 250


 11648 019c 00       		.byte	0
 11649 019d 00       		.byte	0
 11650 019e 1E       		.uleb128 0x1e
 11651 019f 21       		.uleb128 0x21
 11652 01a0 00       		.byte	0
 11653 01a1 49       		.uleb128 0x49
 11654 01a2 13       		.uleb128 0x13
 11655 01a3 2F       		.uleb128 0x2f
 11656 01a4 05       		.uleb128 0x5
 11657 01a5 00       		.byte	0
 11658 01a6 00       		.byte	0
 11659 01a7 1F       		.uleb128 0x1f
 11660 01a8 2E       		.uleb128 0x2e
 11661 01a9 01       		.byte	0x1
 11662 01aa 3F       		.uleb128 0x3f
 11663 01ab 19       		.uleb128 0x19
 11664 01ac 03       		.uleb128 0x3
 11665 01ad 0E       		.uleb128 0xe
 11666 01ae 3A       		.uleb128 0x3a
 11667 01af 0B       		.uleb128 0xb
 11668 01b0 3B       		.uleb128 0x3b
 11669 01b1 05       		.uleb128 0x5
 11670 01b2 11       		.uleb128 0x11
 11671 01b3 01       		.uleb128 0x1
 11672 01b4 12       		.uleb128 0x12
 11673 01b5 06       		.uleb128 0x6
 11674 01b6 40       		.uleb128 0x40
 11675 01b7 18       		.uleb128 0x18
 11676 01b8 9642     		.uleb128 0x2116
 11677 01ba 19       		.uleb128 0x19
 11678 01bb 01       		.uleb128 0x1
 11679 01bc 13       		.uleb128 0x13
 11680 01bd 00       		.byte	0
 11681 01be 00       		.byte	0
 11682 01bf 20       		.uleb128 0x20
 11683 01c0 05       		.uleb128 0x5
 11684 01c1 00       		.byte	0
 11685 01c2 03       		.uleb128 0x3
 11686 01c3 08       		.uleb128 0x8
 11687 01c4 3A       		.uleb128 0x3a
 11688 01c5 0B       		.uleb128 0xb
 11689 01c6 3B       		.uleb128 0x3b
 11690 01c7 05       		.uleb128 0x5
 11691 01c8 49       		.uleb128 0x49
 11692 01c9 13       		.uleb128 0x13
 11693 01ca 02       		.uleb128 0x2
 11694 01cb 18       		.uleb128 0x18
 11695 01cc 00       		.byte	0
 11696 01cd 00       		.byte	0
 11697 01ce 21       		.uleb128 0x21
 11698 01cf 05       		.uleb128 0x5
 11699 01d0 00       		.byte	0
 11700 01d1 03       		.uleb128 0x3
 11701 01d2 0E       		.uleb128 0xe
 11702 01d3 3A       		.uleb128 0x3a
 11703 01d4 0B       		.uleb128 0xb
 11704 01d5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 251


 11705 01d6 05       		.uleb128 0x5
 11706 01d7 49       		.uleb128 0x49
 11707 01d8 13       		.uleb128 0x13
 11708 01d9 02       		.uleb128 0x2
 11709 01da 18       		.uleb128 0x18
 11710 01db 00       		.byte	0
 11711 01dc 00       		.byte	0
 11712 01dd 22       		.uleb128 0x22
 11713 01de 2E       		.uleb128 0x2e
 11714 01df 01       		.byte	0x1
 11715 01e0 3F       		.uleb128 0x3f
 11716 01e1 19       		.uleb128 0x19
 11717 01e2 03       		.uleb128 0x3
 11718 01e3 0E       		.uleb128 0xe
 11719 01e4 3A       		.uleb128 0x3a
 11720 01e5 0B       		.uleb128 0xb
 11721 01e6 3B       		.uleb128 0x3b
 11722 01e7 05       		.uleb128 0x5
 11723 01e8 11       		.uleb128 0x11
 11724 01e9 01       		.uleb128 0x1
 11725 01ea 12       		.uleb128 0x12
 11726 01eb 06       		.uleb128 0x6
 11727 01ec 40       		.uleb128 0x40
 11728 01ed 18       		.uleb128 0x18
 11729 01ee 9742     		.uleb128 0x2117
 11730 01f0 19       		.uleb128 0x19
 11731 01f1 01       		.uleb128 0x1
 11732 01f2 13       		.uleb128 0x13
 11733 01f3 00       		.byte	0
 11734 01f4 00       		.byte	0
 11735 01f5 23       		.uleb128 0x23
 11736 01f6 2E       		.uleb128 0x2e
 11737 01f7 01       		.byte	0x1
 11738 01f8 3F       		.uleb128 0x3f
 11739 01f9 19       		.uleb128 0x19
 11740 01fa 03       		.uleb128 0x3
 11741 01fb 0E       		.uleb128 0xe
 11742 01fc 3A       		.uleb128 0x3a
 11743 01fd 0B       		.uleb128 0xb
 11744 01fe 3B       		.uleb128 0x3b
 11745 01ff 05       		.uleb128 0x5
 11746 0200 27       		.uleb128 0x27
 11747 0201 19       		.uleb128 0x19
 11748 0202 11       		.uleb128 0x11
 11749 0203 01       		.uleb128 0x1
 11750 0204 12       		.uleb128 0x12
 11751 0205 06       		.uleb128 0x6
 11752 0206 40       		.uleb128 0x40
 11753 0207 18       		.uleb128 0x18
 11754 0208 9742     		.uleb128 0x2117
 11755 020a 19       		.uleb128 0x19
 11756 020b 01       		.uleb128 0x1
 11757 020c 13       		.uleb128 0x13
 11758 020d 00       		.byte	0
 11759 020e 00       		.byte	0
 11760 020f 24       		.uleb128 0x24
 11761 0210 26       		.uleb128 0x26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 252


 11762 0211 00       		.byte	0
 11763 0212 49       		.uleb128 0x49
 11764 0213 13       		.uleb128 0x13
 11765 0214 00       		.byte	0
 11766 0215 00       		.byte	0
 11767 0216 25       		.uleb128 0x25
 11768 0217 34       		.uleb128 0x34
 11769 0218 00       		.byte	0
 11770 0219 03       		.uleb128 0x3
 11771 021a 0E       		.uleb128 0xe
 11772 021b 3A       		.uleb128 0x3a
 11773 021c 0B       		.uleb128 0xb
 11774 021d 3B       		.uleb128 0x3b
 11775 021e 05       		.uleb128 0x5
 11776 021f 49       		.uleb128 0x49
 11777 0220 13       		.uleb128 0x13
 11778 0221 3F       		.uleb128 0x3f
 11779 0222 19       		.uleb128 0x19
 11780 0223 3C       		.uleb128 0x3c
 11781 0224 19       		.uleb128 0x19
 11782 0225 00       		.byte	0
 11783 0226 00       		.byte	0
 11784 0227 00       		.byte	0
 11785              		.section	.debug_aranges,"",%progbits
 11786 0000 74000000 		.4byte	0x74
 11787 0004 0200     		.2byte	0x2
 11788 0006 00000000 		.4byte	.Ldebug_info0
 11789 000a 04       		.byte	0x4
 11790 000b 00       		.byte	0
 11791 000c 0000     		.2byte	0
 11792 000e 0000     		.2byte	0
 11793 0010 00000000 		.4byte	.LFB64
 11794 0014 18000000 		.4byte	.LFE64-.LFB64
 11795 0018 00000000 		.4byte	.LFB65
 11796 001c 20000000 		.4byte	.LFE65-.LFB65
 11797 0020 00000000 		.4byte	.LFB66
 11798 0024 F4010000 		.4byte	.LFE66-.LFB66
 11799 0028 00000000 		.4byte	.LFB67
 11800 002c 8C040000 		.4byte	.LFE67-.LFB67
 11801 0030 00000000 		.4byte	.LFB68
 11802 0034 C00A0000 		.4byte	.LFE68-.LFB68
 11803 0038 00000000 		.4byte	.LFB69
 11804 003c D40C0000 		.4byte	.LFE69-.LFB69
 11805 0040 00000000 		.4byte	.LFB70
 11806 0044 24080000 		.4byte	.LFE70-.LFB70
 11807 0048 00000000 		.4byte	.LFB71
 11808 004c 3C0D0000 		.4byte	.LFE71-.LFB71
 11809 0050 00000000 		.4byte	.LFB72
 11810 0054 E0000000 		.4byte	.LFE72-.LFB72
 11811 0058 00000000 		.4byte	.LFB73
 11812 005c 78000000 		.4byte	.LFE73-.LFB73
 11813 0060 00000000 		.4byte	.LFB74
 11814 0064 78030000 		.4byte	.LFE74-.LFB74
 11815 0068 00000000 		.4byte	.LFB75
 11816 006c 08010000 		.4byte	.LFE75-.LFB75
 11817 0070 00000000 		.4byte	0
 11818 0074 00000000 		.4byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 253


 11819              		.section	.debug_ranges,"",%progbits
 11820              	.Ldebug_ranges0:
 11821 0000 00000000 		.4byte	.LFB64
 11822 0004 18000000 		.4byte	.LFE64
 11823 0008 00000000 		.4byte	.LFB65
 11824 000c 20000000 		.4byte	.LFE65
 11825 0010 00000000 		.4byte	.LFB66
 11826 0014 F4010000 		.4byte	.LFE66
 11827 0018 00000000 		.4byte	.LFB67
 11828 001c 8C040000 		.4byte	.LFE67
 11829 0020 00000000 		.4byte	.LFB68
 11830 0024 C00A0000 		.4byte	.LFE68
 11831 0028 00000000 		.4byte	.LFB69
 11832 002c D40C0000 		.4byte	.LFE69
 11833 0030 00000000 		.4byte	.LFB70
 11834 0034 24080000 		.4byte	.LFE70
 11835 0038 00000000 		.4byte	.LFB71
 11836 003c 3C0D0000 		.4byte	.LFE71
 11837 0040 00000000 		.4byte	.LFB72
 11838 0044 E0000000 		.4byte	.LFE72
 11839 0048 00000000 		.4byte	.LFB73
 11840 004c 78000000 		.4byte	.LFE73
 11841 0050 00000000 		.4byte	.LFB74
 11842 0054 78030000 		.4byte	.LFE74
 11843 0058 00000000 		.4byte	.LFB75
 11844 005c 08010000 		.4byte	.LFE75
 11845 0060 00000000 		.4byte	0
 11846 0064 00000000 		.4byte	0
 11847              		.section	.debug_line,"",%progbits
 11848              	.Ldebug_line0:
 11849 0000 480A0000 		.section	.debug_str,"MS",%progbits,1
 11849      0200AC01 
 11849      00000201 
 11849      FB0E0D00 
 11849      01010101 
 11850              	.LASF24:
 11851 0000 73697A65 		.ascii	"sizetype\000"
 11851      74797065 
 11851      00
 11852              	.LASF228:
 11853 0009 706F735F 		.ascii	"pos_cycle_status\000"
 11853      6379636C 
 11853      655F7374 
 11853      61747573 
 11853      00
 11854              	.LASF30:
 11855 001a 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 11855      545F4D4F 
 11855      44455F45 
 11855      4D475F46 
 11855      4346535F 
 11856              	.LASF113:
 11857 0032 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 11857      5F414443 
 11857      5F73656E 
 11857      736F7273 
 11857      5F706F72 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 254


 11858              	.LASF127:
 11859 004d 75736572 		.ascii	"user\000"
 11859      00
 11860              	.LASF10:
 11861 0052 696E7433 		.ascii	"int32_t\000"
 11861      325F7400 
 11862              	.LASF258:
 11863 005a 675F7278 		.ascii	"g_rx\000"
 11863      00
 11864              	.LASF209:
 11865 005f 6F6E655F 		.ascii	"one_time_execute\000"
 11865      74696D65 
 11865      5F657865 
 11865      63757465 
 11865      00
 11866              	.LASF45:
 11867 0070 73745F64 		.ascii	"st_data\000"
 11867      61746100 
 11868              	.LASF256:
 11869 0078 675F656D 		.ascii	"g_emg_meas\000"
 11869      675F6D65 
 11869      617300
 11870              	.LASF13:
 11871 0083 75696E74 		.ascii	"uint32\000"
 11871      333200
 11872              	.LASF194:
 11873 008a 6E5F6C69 		.ascii	"n_line\000"
 11873      6E6500
 11874              	.LASF81:
 11875 0091 706F735F 		.ascii	"pos_lim_inf\000"
 11875      6C696D5F 
 11875      696E6600 
 11876              	.LASF279:
 11877 009d 74656E73 		.ascii	"tension_valid\000"
 11877      696F6E5F 
 11877      76616C69 
 11877      6400
 11878              	.LASF158:
 11879 00ab 73746174 		.ascii	"state\000"
 11879      6500
 11880              	.LASF281:
 11881 00b1 6379636C 		.ascii	"cycles_interrupt_flag\000"
 11881      65735F69 
 11881      6E746572 
 11881      72757074 
 11881      5F666C61 
 11882              	.LASF235:
 11883 00c7 62696E5F 		.ascii	"bin_max\000"
 11883      6D617800 
 11884              	.LASF246:
 11885 00cf 61646472 		.ascii	"addr_start_c\000"
 11885      5F737461 
 11885      72745F63 
 11885      00
 11886              	.LASF29:
 11887 00dc 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 11887      545F4D4F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 255


 11887      44455F45 
 11887      4D475F46 
 11887      43465300 
 11888              	.LASF85:
 11889 00f0 63757272 		.ascii	"curr_lookup\000"
 11889      5F6C6F6F 
 11889      6B757000 
 11890              	.LASF173:
 11891 00fc 70776D5F 		.ascii	"pwm_input\000"
 11891      696E7075 
 11891      7400
 11892              	.LASF53:
 11893 0106 72657374 		.ascii	"rest_counter\000"
 11893      5F636F75 
 11893      6E746572 
 11893      00
 11894              	.LASF28:
 11895 0113 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 11895      545F4D4F 
 11895      44455F45 
 11895      4D475F49 
 11895      4E544547 
 11896              	.LASF221:
 11897 012b 765F636F 		.ascii	"v_count\000"
 11897      756E7400 
 11898              	.LASF163:
 11899 0133 72785F64 		.ascii	"rx_data\000"
 11899      61746100 
 11900              	.LASF214:
 11901 013b 7676765F 		.ascii	"vvv_value\000"
 11901      76616C75 
 11901      6500
 11902              	.LASF14:
 11903 0145 696E7438 		.ascii	"int8\000"
 11903      00
 11904              	.LASF168:
 11905 014a 696E666F 		.ascii	"info_\000"
 11905      5F00
 11906              	.LASF149:
 11907 0150 656D675F 		.ascii	"emg_status\000"
 11907      73746174 
 11907      757300
 11908              	.LASF266:
 11909 015b 66696C74 		.ascii	"filt_emg\000"
 11909      5F656D67 
 11909      00
 11910              	.LASF100:
 11911 0164 73745F65 		.ascii	"st_emg\000"
 11911      6D6700
 11912              	.LASF51:
 11913 016b 706F7369 		.ascii	"position_hist\000"
 11913      74696F6E 
 11913      5F686973 
 11913      7400
 11914              	.LASF150:
 11915 0179 50524550 		.ascii	"PREPARE_DATA\000"
 11915      4152455F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 256


 11915      44415441 
 11915      00
 11916              	.LASF134:
 11917 0186 74656D70 		.ascii	"temp_value\000"
 11917      5F76616C 
 11917      756500
 11918              	.LASF232:
 11919 0191 7468725F 		.ascii	"thr_pos\000"
 11919      706F7300 
 11920              	.LASF48:
 11921 0199 72656164 		.ascii	"ready\000"
 11921      7900
 11922              	.LASF97:
 11923 019f 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 11923      6964785F 
 11923      7573655F 
 11923      666F725F 
 11923      636F6E74 
 11924              	.LASF137:
 11925 01b7 6761696E 		.ascii	"gain\000"
 11925      00
 11926              	.LASF57:
 11927 01bc 73745F64 		.ascii	"st_device\000"
 11927      65766963 
 11927      6500
 11928              	.LASF27:
 11929 01c6 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 11929      545F4D4F 
 11929      44455F45 
 11929      4D475F50 
 11929      524F504F 
 11930              	.LASF62:
 11931 01e2 7573655F 		.ascii	"use_2nd_motor_flag\000"
 11931      326E645F 
 11931      6D6F746F 
 11931      725F666C 
 11931      616700
 11932              	.LASF146:
 11933 01f5 53554D5F 		.ascii	"SUM_AND_MEAN\000"
 11933      414E445F 
 11933      4D45414E 
 11933      00
 11934              	.LASF107:
 11935 0202 72656164 		.ascii	"read_imu_flag\000"
 11935      5F696D75 
 11935      5F666C61 
 11935      6700
 11936              	.LASF219:
 11937 0210 66697273 		.ascii	"first_tension_valid\000"
 11937      745F7465 
 11937      6E73696F 
 11937      6E5F7661 
 11937      6C696400 
 11938              	.LASF267:
 11939 0224 74696D65 		.ascii	"timer_value\000"
 11939      725F7661 
 11939      6C756500 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 257


 11940              	.LASF4:
 11941 0230 6C6F6E67 		.ascii	"long int\000"
 11941      20696E74 
 11941      00
 11942              	.LASF125:
 11943 0239 756E7573 		.ascii	"unused_bytes1\000"
 11943      65645F62 
 11943      79746573 
 11943      3100
 11944              	.LASF181:
 11945 0247 53485F45 		.ascii	"SH_ENC_L\000"
 11945      4E435F4C 
 11945      00
 11946              	.LASF61:
 11947 0250 72657365 		.ascii	"reset_counters\000"
 11947      745F636F 
 11947      756E7465 
 11947      727300
 11948              	.LASF231:
 11949 025f 62696E5F 		.ascii	"bin_threshold\000"
 11949      74687265 
 11949      73686F6C 
 11949      6400
 11950              	.LASF117:
 11951 026d 75736572 		.ascii	"user_emg\000"
 11951      5F656D67 
 11951      00
 11952              	.LASF208:
 11953 0276 73616665 		.ascii	"safe_startup_motor_activation\000"
 11953      5F737461 
 11953      72747570 
 11953      5F6D6F74 
 11953      6F725F61 
 11954              	.LASF66:
 11955 0294 756E7573 		.ascii	"unused_bytes\000"
 11955      65645F62 
 11955      79746573 
 11955      00
 11956              	.LASF130:
 11957 02a1 61636365 		.ascii	"accel_value\000"
 11957      6C5F7661 
 11957      6C756500 
 11958              	.LASF197:
 11959 02ad 6175785F 		.ascii	"aux_encoder\000"
 11959      656E636F 
 11959      64657200 
 11960              	.LASF49:
 11961 02b9 73745F63 		.ascii	"st_counters\000"
 11961      6F756E74 
 11961      65727300 
 11962              	.LASF180:
 11963 02c5 53485F4D 		.ascii	"SH_MOT\000"
 11963      4F5400
 11964              	.LASF17:
 11965 02cc 666C6F61 		.ascii	"float32\000"
 11965      74333200 
 11966              	.LASF193:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 258


 11967 02d4 656E636F 		.ascii	"encoder_reading_SPI\000"
 11967      6465725F 
 11967      72656164 
 11967      696E675F 
 11967      53504900 
 11968              	.LASF206:
 11969 02e8 6572726F 		.ascii	"error\000"
 11969      7200
 11970              	.LASF50:
 11971 02ee 656D675F 		.ascii	"emg_counter\000"
 11971      636F756E 
 11971      74657200 
 11972              	.LASF153:
 11973 02fa 57524954 		.ascii	"WRITE_END\000"
 11973      455F454E 
 11973      4400
 11974              	.LASF211:
 11975 0304 706F735F 		.ascii	"pos_reconstruct\000"
 11975      7265636F 
 11975      6E737472 
 11975      75637400 
 11976              	.LASF223:
 11977 0314 70776D5F 		.ascii	"pwm_limit_search\000"
 11977      6C696D69 
 11977      745F7365 
 11977      61726368 
 11977      00
 11978              	.LASF0:
 11979 0325 7369676E 		.ascii	"signed char\000"
 11979      65642063 
 11979      68617200 
 11980              	.LASF116:
 11981 0331 75736572 		.ascii	"user_code_string\000"
 11981      5F636F64 
 11981      655F7374 
 11981      72696E67 
 11981      00
 11982              	.LASF138:
 11983 0342 73745F63 		.ascii	"st_calib\000"
 11983      616C6962 
 11983      00
 11984              	.LASF178:
 11985 034b 6572725F 		.ascii	"err_emg_1\000"
 11985      656D675F 
 11985      3100
 11986              	.LASF179:
 11987 0355 6572725F 		.ascii	"err_emg_2\000"
 11987      656D675F 
 11987      3200
 11988              	.LASF105:
 11989 035f 73776974 		.ascii	"switch_emg\000"
 11989      63685F65 
 11989      6D6700
 11990              	.LASF277:
 11991 036a 656D675F 		.ascii	"emg_2_status\000"
 11991      325F7374 
 11991      61747573 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 259


 11991      00
 11992              	.LASF287:
 11993 0377 4144435F 		.ascii	"ADC_buf\000"
 11993      62756600 
 11994              	.LASF280:
 11995 037f 696E7465 		.ascii	"interrupt_flag\000"
 11995      72727570 
 11995      745F666C 
 11995      616700
 11996              	.LASF238:
 11997 038e 73746570 		.ascii	"step\000"
 11997      00
 11998              	.LASF183:
 11999 0393 63757272 		.ascii	"curr_error_sum\000"
 11999      5F657272 
 11999      6F725F73 
 11999      756D00
 12000              	.LASF1:
 12001 03a2 756E7369 		.ascii	"unsigned char\000"
 12001      676E6564 
 12001      20636861 
 12001      7200
 12002              	.LASF91:
 12003 03b0 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 12003      72657665 
 12003      72735F6D 
 12003      6F746F72 
 12003      5F666C61 
 12004              	.LASF244:
 12005 03c6 726F775F 		.ascii	"row_start\000"
 12005      73746172 
 12005      7400
 12006              	.LASF284:
 12007 03d0 666F7263 		.ascii	"forced_open\000"
 12007      65645F6F 
 12007      70656E00 
 12008              	.LASF201:
 12009 03dc 73706565 		.ascii	"speed_encoder\000"
 12009      645F656E 
 12009      636F6465 
 12009      7200
 12010              	.LASF252:
 12011 03ea 675F7265 		.ascii	"g_refNew\000"
 12011      664E6577 
 12011      00
 12012              	.LASF237:
 12013 03f3 63757272 		.ascii	"curr_off\000"
 12013      5F6F6666 
 12013      00
 12014              	.LASF60:
 12015 03fc 72696768 		.ascii	"right_left\000"
 12015      745F6C65 
 12015      667400
 12016              	.LASF89:
 12017 0407 656E636F 		.ascii	"encoder_line\000"
 12017      6465725F 
 12017      6C696E65 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 260


 12017      00
 12018              	.LASF276:
 12019 0414 656D675F 		.ascii	"emg_1_status\000"
 12019      315F7374 
 12019      61747573 
 12019      00
 12020              	.LASF129:
 12021 0421 666C6167 		.ascii	"flags\000"
 12021      7300
 12022              	.LASF177:
 12023 0427 68616E64 		.ascii	"handle_value\000"
 12023      6C655F76 
 12023      616C7565 
 12023      00
 12024              	.LASF20:
 12025 0434 63686172 		.ascii	"char\000"
 12025      00
 12026              	.LASF84:
 12027 0439 6D61785F 		.ascii	"max_step_pos\000"
 12027      73746570 
 12027      5F706F73 
 12027      00
 12028              	.LASF289:
 12029 0446 70776D5F 		.ascii	"pwm_sign\000"
 12029      7369676E 
 12029      00
 12030              	.LASF191:
 12031 044f 6D6F746F 		.ascii	"motor_control_generic\000"
 12031      725F636F 
 12031      6E74726F 
 12031      6C5F6765 
 12031      6E657269 
 12032              	.LASF265:
 12033 0465 66696C74 		.ascii	"filt_vel\000"
 12033      5F76656C 
 12033      00
 12034              	.LASF90:
 12035 046e 70776D5F 		.ascii	"pwm_rate_limiter\000"
 12035      72617465 
 12035      5F6C696D 
 12035      69746572 
 12035      00
 12036              	.LASF70:
 12037 047f 6B5F645F 		.ascii	"k_d_c\000"
 12037      6300
 12038              	.LASF95:
 12039 0485 6D5F6D75 		.ascii	"m_mult\000"
 12039      6C7400
 12040              	.LASF69:
 12041 048c 6B5F695F 		.ascii	"k_i_c\000"
 12041      6300
 12042              	.LASF187:
 12043 0492 6D6F746F 		.ascii	"motor_dir\000"
 12043      725F6469 
 12043      7200
 12044              	.LASF234:
 12045 049c 62696E5F 		.ascii	"bin_st\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 261


 12045      737400
 12046              	.LASF156:
 12047 04a3 4953525F 		.ascii	"ISR_RS485_RX_ExInterrupt\000"
 12047      52533438 
 12047      355F5258 
 12047      5F457849 
 12047      6E746572 
 12048              	.LASF82:
 12049 04bc 706F735F 		.ascii	"pos_lim_sup\000"
 12049      6C696D5F 
 12049      73757000 
 12050              	.LASF136:
 12051 04c8 6F6C645F 		.ascii	"old_value\000"
 12051      76616C75 
 12051      6500
 12052              	.LASF103:
 12053 04d2 656D675F 		.ascii	"emg_speed\000"
 12053      73706565 
 12053      6400
 12054              	.LASF121:
 12055 04dc 72657374 		.ascii	"rest_vel\000"
 12055      5F76656C 
 12055      00
 12056              	.LASF143:
 12057 04e5 4E4F524D 		.ascii	"NORMAL\000"
 12057      414C00
 12058              	.LASF172:
 12059 04ec 6D6F746F 		.ascii	"motor_control_SH\000"
 12059      725F636F 
 12059      6E74726F 
 12059      6C5F5348 
 12059      00
 12060              	.LASF295:
 12061 04fd 7046696C 		.ascii	"pFile\000"
 12061      6500
 12062              	.LASF182:
 12063 0503 706F735F 		.ascii	"pos_error_sum\000"
 12063      6572726F 
 12063      725F7375 
 12063      6D00
 12064              	.LASF114:
 12065 0511 4144435F 		.ascii	"ADC_conf\000"
 12065      636F6E66 
 12065      00
 12066              	.LASF273:
 12067 051a 6465765F 		.ascii	"dev_tension_f\000"
 12067      74656E73 
 12067      696F6E5F 
 12067      6600
 12068              	.LASF72:
 12069 0528 6B5F695F 		.ascii	"k_i_dl\000"
 12069      646C00
 12070              	.LASF46:
 12071 052f 62756666 		.ascii	"buffer\000"
 12071      657200
 12072              	.LASF74:
 12073 0536 6B5F705F 		.ascii	"k_p_c_dl\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 262


 12073      635F646C 
 12073      00
 12074              	.LASF164:
 12075 053f 72785F64 		.ascii	"rx_data_type\000"
 12075      6174615F 
 12075      74797065 
 12075      00
 12076              	.LASF297:
 12077 054c 675F696D 		.ascii	"g_imuNew\000"
 12077      754E6577 
 12077      00
 12078              	.LASF141:
 12079 0555 73706565 		.ascii	"speed\000"
 12079      6400
 12080              	.LASF188:
 12081 055b 706F7369 		.ascii	"position_counter\000"
 12081      74696F6E 
 12081      5F636F75 
 12081      6E746572 
 12081      00
 12082              	.LASF240:
 12083 056c 74696D65 		.ascii	"timer_value_e\000"
 12083      725F7661 
 12083      6C75655F 
 12083      6500
 12084              	.LASF159:
 12085 057a 64617461 		.ascii	"data_packet_index\000"
 12085      5F706163 
 12085      6B65745F 
 12085      696E6465 
 12085      7800
 12086              	.LASF161:
 12087 058c 64617461 		.ascii	"data_packet_buffer\000"
 12087      5F706163 
 12087      6B65745F 
 12087      62756666 
 12087      657200
 12088              	.LASF275:
 12089 059f 6379636C 		.ascii	"cycles_status\000"
 12089      65735F73 
 12089      74617475 
 12089      7300
 12090              	.LASF166:
 12091 05ad 636F756E 		.ascii	"counter_calibration\000"
 12091      7465725F 
 12091      63616C69 
 12091      62726174 
 12091      696F6E00 
 12092              	.LASF254:
 12093 05c1 675F6D65 		.ascii	"g_meas\000"
 12093      617300
 12094              	.LASF239:
 12095 05c8 74696D65 		.ascii	"timer_value_s\000"
 12095      725F7661 
 12095      6C75655F 
 12095      7300
 12096              	.LASF293:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 263


 12097 05d6 456E636F 		.ascii	"Encoder_Check\000"
 12097      6465725F 
 12097      43686563 
 12097      6B00
 12098              	.LASF205:
 12099 05e4 636F6D70 		.ascii	"comp_value_encoder\000"
 12099      5F76616C 
 12099      75655F65 
 12099      6E636F64 
 12099      657200
 12100              	.LASF290:
 12101 05f7 64617461 		.ascii	"data_encoder_raw\000"
 12101      5F656E63 
 12101      6F646572 
 12101      5F726177 
 12101      00
 12102              	.LASF251:
 12103 0608 675F7265 		.ascii	"g_ref\000"
 12103      6600
 12104              	.LASF25:
 12105 060e 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 12105      545F4D4F 
 12105      44455F45 
 12105      58544552 
 12105      4E414C00 
 12106              	.LASF196:
 12107 0622 696E6465 		.ascii	"index\000"
 12107      7800
 12108              	.LASF122:
 12109 0628 72657374 		.ascii	"rest_position_flag\000"
 12109      5F706F73 
 12109      6974696F 
 12109      6E5F666C 
 12109      616700
 12110              	.LASF296:
 12111 063b 675F696D 		.ascii	"g_imu\000"
 12111      7500
 12112              	.LASF75:
 12113 0641 6B5F695F 		.ascii	"k_i_c_dl\000"
 12113      635F646C 
 12113      00
 12114              	.LASF165:
 12115 064a 7061636B 		.ascii	"package_count\000"
 12115      6167655F 
 12115      636F756E 
 12115      7400
 12116              	.LASF36:
 12117 0658 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 12117      5F414E44 
 12117      5F504F53 
 12117      5F434F4E 
 12117      54524F4C 
 12118              	.LASF139:
 12119 066d 656E6162 		.ascii	"enabled\000"
 12119      6C656400 
 12120              	.LASF5:
 12121 0675 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 264


 12121      20756E73 
 12121      69676E65 
 12121      6420696E 
 12121      7400
 12122              	.LASF55:
 12123 0687 746F7461 		.ascii	"total_time_on\000"
 12123      6C5F7469 
 12123      6D655F6F 
 12123      6E00
 12124              	.LASF151:
 12125 0695 57524954 		.ascii	"WRITE_CYCLES\000"
 12125      455F4359 
 12125      434C4553 
 12125      00
 12126              	.LASF242:
 12127 06a2 73746174 		.ascii	"status\000"
 12127      757300
 12128              	.LASF56:
 12129 06a9 746F7461 		.ascii	"total_time_rest\000"
 12129      6C5F7469 
 12129      6D655F72 
 12129      65737400 
 12130              	.LASF77:
 12131 06b9 61637469 		.ascii	"activ\000"
 12131      7600
 12132              	.LASF226:
 12133 06bf 6D696E5F 		.ascii	"min_tension\000"
 12133      74656E73 
 12133      696F6E00 
 12134              	.LASF285:
 12135 06cb 62617474 		.ascii	"battery_low_SoC\000"
 12135      6572795F 
 12135      6C6F775F 
 12135      536F4300 
 12136              	.LASF94:
 12137 06db 6D5F6F66 		.ascii	"m_off\000"
 12137      6600
 12138              	.LASF278:
 12139 06e1 72657365 		.ascii	"reset_last_value_flag\000"
 12139      745F6C61 
 12139      73745F76 
 12139      616C7565 
 12139      5F666C61 
 12140              	.LASF133:
 12141 06f7 71756174 		.ascii	"quat_value\000"
 12141      5F76616C 
 12141      756500
 12142              	.LASF119:
 12143 0702 72657374 		.ascii	"rest_pos\000"
 12143      5F706F73 
 12143      00
 12144              	.LASF38:
 12145 070b 63757272 		.ascii	"curr\000"
 12145      00
 12146              	.LASF152:
 12147 0710 57414954 		.ascii	"WAIT_QUERY\000"
 12147      5F515545 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 265


 12147      525900
 12148              	.LASF87:
 12149 071b 696E7075 		.ascii	"input_mode\000"
 12149      745F6D6F 
 12149      646500
 12150              	.LASF34:
 12151 0726 434F4E54 		.ascii	"CONTROL_PWM\000"
 12151      524F4C5F 
 12151      50574D00 
 12152              	.LASF227:
 12153 0732 6379636C 		.ascii	"cycles_counter_update\000"
 12153      65735F63 
 12153      6F756E74 
 12153      65725F75 
 12153      70646174 
 12154              	.LASF298:
 12155 0748 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 12155      43313120 
 12155      352E342E 
 12155      31203230 
 12155      31363036 
 12156 077b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 12156      20726576 
 12156      6973696F 
 12156      6E203233 
 12156      37373135 
 12157 07ae 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 12157      66756E63 
 12157      74696F6E 
 12157      2D736563 
 12157      74696F6E 
 12158              	.LASF40:
 12159 07d6 73745F72 		.ascii	"st_ref\000"
 12159      656600
 12160              	.LASF268:
 12161 07dd 74696D65 		.ascii	"timer_value0\000"
 12161      725F7661 
 12161      6C756530 
 12161      00
 12162              	.LASF118:
 12163 07ea 73745F53 		.ascii	"st_SH_spec\000"
 12163      485F7370 
 12163      656300
 12164              	.LASF212:
 12165 07f5 765F7661 		.ascii	"v_value\000"
 12165      6C756500 
 12166              	.LASF261:
 12167 07fd 63616C69 		.ascii	"calib\000"
 12167      6200
 12168              	.LASF6:
 12169 0803 6C6F6E67 		.ascii	"long long int\000"
 12169      206C6F6E 
 12169      6720696E 
 12169      7400
 12170              	.LASF32:
 12171 0811 53485F63 		.ascii	"SH_control_mode\000"
 12171      6F6E7472 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 266


 12171      6F6C5F6D 
 12171      6F646500 
 12172              	.LASF170:
 12173 0821 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 12173      4E445F4D 
 12173      4F544F52 
 12173      5F494458 
 12173      00
 12174              	.LASF286:
 12175 0832 6368616E 		.ascii	"change_ext_ref_flag\000"
 12175      67655F65 
 12175      78745F72 
 12175      65665F66 
 12175      6C616700 
 12176              	.LASF19:
 12177 0846 646F7562 		.ascii	"double\000"
 12177      6C6500
 12178              	.LASF263:
 12179 084d 66696C74 		.ascii	"filt_curr_diff\000"
 12179      5F637572 
 12179      725F6469 
 12179      666600
 12180              	.LASF171:
 12181 085c 696E7465 		.ascii	"interrupt_manager\000"
 12181      72727570 
 12181      745F6D61 
 12181      6E616765 
 12181      7200
 12182              	.LASF93:
 12183 086e 456E635F 		.ascii	"Enc_raw_read_conf\000"
 12183      7261775F 
 12183      72656164 
 12183      5F636F6E 
 12183      6600
 12184              	.LASF142:
 12185 0880 72657065 		.ascii	"repetitions\000"
 12185      74697469 
 12185      6F6E7300 
 12186              	.LASF83:
 12187 088c 6D61785F 		.ascii	"max_step_neg\000"
 12187      73746570 
 12187      5F6E6567 
 12187      00
 12188              	.LASF210:
 12189 0899 636F756E 		.ascii	"count_startup_motor\000"
 12189      745F7374 
 12189      61727475 
 12189      705F6D6F 
 12189      746F7200 
 12190              	.LASF147:
 12191 08ad 57414954 		.ascii	"WAIT\000"
 12191      00
 12192              	.LASF18:
 12193 08b2 666C6F61 		.ascii	"float\000"
 12193      7400
 12194              	.LASF109:
 12195 08b8 494D555F 		.ascii	"IMU_conf\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 267


 12195      636F6E66 
 12195      00
 12196              	.LASF220:
 12197 08c1 636F756E 		.ascii	"count\000"
 12197      7400
 12198              	.LASF67:
 12199 08c7 73745F6D 		.ascii	"st_motor\000"
 12199      6F746F72 
 12199      00
 12200              	.LASF248:
 12201 08d0 6D5F6164 		.ascii	"m_addr\000"
 12201      647200
 12202              	.LASF260:
 12203 08d7 635F6D65 		.ascii	"c_mem\000"
 12203      6D00
 12204              	.LASF8:
 12205 08dd 756E7369 		.ascii	"unsigned int\000"
 12205      676E6564 
 12205      20696E74 
 12205      00
 12206              	.LASF233:
 12207 08ea 6D61785F 		.ascii	"max_pos\000"
 12207      706F7300 
 12208              	.LASF294:
 12209 08f2 72657374 		.ascii	"rest_pos_curr_ref\000"
 12209      5F706F73 
 12209      5F637572 
 12209      725F7265 
 12209      6600
 12210              	.LASF124:
 12211 0904 666C6167 		.ascii	"flag\000"
 12211      00
 12212              	.LASF88:
 12213 0909 636F6E74 		.ascii	"control_mode\000"
 12213      726F6C5F 
 12213      6D6F6465 
 12213      00
 12214              	.LASF21:
 12215 0916 63797374 		.ascii	"cystatus\000"
 12215      61747573 
 12215      00
 12216              	.LASF26:
 12217 091f 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 12217      545F4D4F 
 12217      44455F45 
 12217      4E434F44 
 12217      45523300 
 12218              	.LASF106:
 12219 0933 73745F69 		.ascii	"st_imu\000"
 12219      6D7500
 12220              	.LASF189:
 12221 093a 63757272 		.ascii	"current_emg\000"
 12221      656E745F 
 12221      656D6700 
 12222              	.LASF162:
 12223 0946 72785F71 		.ascii	"rx_queue\000"
 12223      75657565 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 268


 12223      00
 12224              	.LASF195:
 12225 094f 6173736F 		.ascii	"assoc_motor\000"
 12225      635F6D6F 
 12225      746F7200 
 12226              	.LASF44:
 12227 095b 6164645F 		.ascii	"add_emg\000"
 12227      656D6700 
 12228              	.LASF176:
 12229 0963 695F7265 		.ascii	"i_ref\000"
 12229      6600
 12230              	.LASF101:
 12231 0969 656D675F 		.ascii	"emg_threshold\000"
 12231      74687265 
 12231      73686F6C 
 12231      6400
 12232              	.LASF241:
 12233 0977 73617665 		.ascii	"save_cycles_eeprom\000"
 12233      5F637963 
 12233      6C65735F 
 12233      65657072 
 12233      6F6D00
 12234              	.LASF52:
 12235 098a 63757272 		.ascii	"current_hist\000"
 12235      656E745F 
 12235      68697374 
 12235      00
 12236              	.LASF35:
 12237 0997 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 12237      524F4C5F 
 12237      43555252 
 12237      454E5400 
 12238              	.LASF23:
 12239 09a7 6C6F6E67 		.ascii	"long double\000"
 12239      20646F75 
 12239      626C6500 
 12240              	.LASF145:
 12241 09b3 44495343 		.ascii	"DISCARD\000"
 12241      41524400 
 12242              	.LASF184:
 12243 09bb 70726576 		.ascii	"prev_pos_err\000"
 12243      5F706F73 
 12243      5F657272 
 12243      00
 12244              	.LASF203:
 12245 09c8 696E6974 		.ascii	"init_rot\000"
 12245      5F726F74 
 12245      00
 12246              	.LASF224:
 12247 09d1 6D6F745F 		.ascii	"mot_idx\000"
 12247      69647800 
 12248              	.LASF43:
 12249 09d9 73745F65 		.ascii	"st_emg_meas\000"
 12249      6D675F6D 
 12249      65617300 
 12250              	.LASF264:
 12251 09e5 66696C74 		.ascii	"filt_i\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 269


 12251      5F6900
 12252              	.LASF98:
 12253 09ec 6D6F746F 		.ascii	"motor_handle_ratio\000"
 12253      725F6861 
 12253      6E646C65 
 12253      5F726174 
 12253      696F00
 12254              	.LASF262:
 12255 09ff 66696C74 		.ascii	"filt_v\000"
 12255      5F7600
 12256              	.LASF283:
 12257 0a06 72657374 		.ascii	"rest_enabled\000"
 12257      5F656E61 
 12257      626C6564 
 12257      00
 12258              	.LASF253:
 12259 0a13 675F7265 		.ascii	"g_refOld\000"
 12259      664F6C64 
 12259      00
 12260              	.LASF174:
 12261 0a1c 706F735F 		.ascii	"pos_error\000"
 12261      6572726F 
 12261      7200
 12262              	.LASF131:
 12263 0a26 6779726F 		.ascii	"gyro_value\000"
 12263      5F76616C 
 12263      756500
 12264              	.LASF111:
 12265 0a31 63757272 		.ascii	"curr_time\000"
 12265      5F74696D 
 12265      6500
 12266              	.LASF96:
 12267 0a3b 646F7562 		.ascii	"double_encoder_on_off\000"
 12267      6C655F65 
 12267      6E636F64 
 12267      65725F6F 
 12267      6E5F6F66 
 12268              	.LASF225:
 12269 0a51 6D61785F 		.ascii	"max_tension\000"
 12269      74656E73 
 12269      696F6E00 
 12270              	.LASF169:
 12271 0a5d 4D4F544F 		.ascii	"MOTOR_IDX\000"
 12271      525F4944 
 12271      5800
 12272              	.LASF204:
 12273 0a67 6C617374 		.ascii	"last_value_encoder\000"
 12273      5F76616C 
 12273      75655F65 
 12273      6E636F64 
 12273      657200
 12274              	.LASF167:
 12275 0a7a 636F756E 		.ascii	"counter_tension_func\000"
 12275      7465725F 
 12275      74656E73 
 12275      696F6E5F 
 12275      66756E63 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 270


 12276              	.LASF269:
 12277 0a8f 6379636C 		.ascii	"cycle_time\000"
 12277      655F7469 
 12277      6D6500
 12278              	.LASF7:
 12279 0a9a 6C6F6E67 		.ascii	"long long unsigned int\000"
 12279      206C6F6E 
 12279      6720756E 
 12279      7369676E 
 12279      65642069 
 12280              	.LASF47:
 12281 0ab1 6C656E67 		.ascii	"length\000"
 12281      746800
 12282              	.LASF128:
 12283 0ab8 73745F69 		.ascii	"st_imu_data\000"
 12283      6D755F64 
 12283      61746100 
 12284              	.LASF132:
 12285 0ac4 6D61675F 		.ascii	"mag_value\000"
 12285      76616C75 
 12285      6500
 12286              	.LASF39:
 12287 0ace 6F6E6F66 		.ascii	"onoff\000"
 12287      6600
 12288              	.LASF199:
 12289 0ad4 746D705F 		.ascii	"tmp_value_encoder_32\000"
 12289      76616C75 
 12289      655F656E 
 12289      636F6465 
 12289      725F3332 
 12290              	.LASF185:
 12291 0ae9 70726576 		.ascii	"prev_curr_err\000"
 12291      5F637572 
 12291      725F6572 
 12291      7200
 12292              	.LASF160:
 12293 0af7 64617461 		.ascii	"data_packet_length\000"
 12293      5F706163 
 12293      6B65745F 
 12293      6C656E67 
 12293      746800
 12294              	.LASF68:
 12295 0b0a 6B5F705F 		.ascii	"k_p_c\000"
 12295      6300
 12296              	.LASF270:
 12297 0b10 6465765F 		.ascii	"dev_tension\000"
 12297      74656E73 
 12297      696F6E00 
 12298              	.LASF79:
 12299 0b1c 6D6F746F 		.ascii	"motor_driver_type\000"
 12299      725F6472 
 12299      69766572 
 12299      5F747970 
 12299      6500
 12300              	.LASF148:
 12301 0b2e 57414954 		.ascii	"WAIT_EoC\000"
 12301      5F456F43 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 271


 12301      00
 12302              	.LASF22:
 12303 0b37 72656738 		.ascii	"reg8\000"
 12303      00
 12304              	.LASF216:
 12305 0b3c 695F6175 		.ascii	"i_aux\000"
 12305      7800
 12306              	.LASF243:
 12307 0b42 726F775F 		.ascii	"row_number\000"
 12307      6E756D62 
 12307      657200
 12308              	.LASF222:
 12309 0b4d 6F766572 		.ascii	"overcurrent_control\000"
 12309      63757272 
 12309      656E745F 
 12309      636F6E74 
 12309      726F6C00 
 12310              	.LASF236:
 12311 0b61 63757272 		.ascii	"curr_pos\000"
 12311      5F706F73 
 12311      00
 12312              	.LASF144:
 12313 0b6a 52455345 		.ascii	"RESET\000"
 12313      5400
 12314              	.LASF215:
 12315 0b70 616E616C 		.ascii	"analog_read_end\000"
 12315      6F675F72 
 12315      6561645F 
 12315      656E6400 
 12316              	.LASF291:
 12317 0b80 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 12317      636F6465 
 12317      725F4C69 
 12317      6E655F43 
 12317      6F6E6E65 
 12318              	.LASF65:
 12319 0b99 6465765F 		.ascii	"dev_type\000"
 12319      74797065 
 12319      00
 12320              	.LASF229:
 12321 0ba2 656D675F 		.ascii	"emg_cycle_status\000"
 12321      6379636C 
 12321      655F7374 
 12321      61747573 
 12321      00
 12322              	.LASF115:
 12323 0bb3 73745F75 		.ascii	"st_user\000"
 12323      73657200 
 12324              	.LASF99:
 12325 0bbb 67656172 		.ascii	"gears_params\000"
 12325      735F7061 
 12325      72616D73 
 12325      00
 12326              	.LASF110:
 12327 0bc8 73745F65 		.ascii	"st_expansion\000"
 12327      7870616E 
 12327      73696F6E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 272


 12327      00
 12328              	.LASF104:
 12329 0bd5 656D675F 		.ascii	"emg_calibration_flag\000"
 12329      63616C69 
 12329      62726174 
 12329      696F6E5F 
 12329      666C6167 
 12330              	.LASF41:
 12331 0bea 73745F6D 		.ascii	"st_meas\000"
 12331      65617300 
 12332              	.LASF245:
 12333 0bf2 61646472 		.ascii	"addr_start\000"
 12333      5F737461 
 12333      727400
 12334              	.LASF249:
 12335 0bfd 70776D5F 		.ascii	"pwm_preload_values\000"
 12335      7072656C 
 12335      6F61645F 
 12335      76616C75 
 12335      657300
 12336              	.LASF155:
 12337 0c10 636F756E 		.ascii	"counter_status\000"
 12337      7465725F 
 12337      73746174 
 12337      757300
 12338              	.LASF259:
 12339 0c1f 675F6D65 		.ascii	"g_mem\000"
 12339      6D00
 12340              	.LASF217:
 12341 0c25 656D675F 		.ascii	"emg_counter_1\000"
 12341      636F756E 
 12341      7465725F 
 12341      3100
 12342              	.LASF218:
 12343 0c33 656D675F 		.ascii	"emg_counter_2\000"
 12343      636F756E 
 12343      7465725F 
 12343      3200
 12344              	.LASF300:
 12345 0c41 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHand-PRO-"
 12345      73657273 
 12345      5C4D6174 
 12345      7469615C 
 12345      446F6375 
 12346 0c6f 50536F43 		.ascii	"PSoC5\\Generic.cydsn\000"
 12346      355C4765 
 12346      6E657269 
 12346      632E6379 
 12346      64736E00 
 12347              	.LASF207:
 12348 0c83 6F6E6C79 		.ascii	"only_first_time\000"
 12348      5F666972 
 12348      73745F74 
 12348      696D6500 
 12349              	.LASF11:
 12350 0c93 75696E74 		.ascii	"uint8\000"
 12350      3800
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 273


 12351              	.LASF202:
 12352 0c99 76616C75 		.ascii	"value_diff\000"
 12352      655F6469 
 12352      666600
 12353              	.LASF2:
 12354 0ca4 73686F72 		.ascii	"short int\000"
 12354      7420696E 
 12354      7400
 12355              	.LASF73:
 12356 0cae 6B5F645F 		.ascii	"k_d_dl\000"
 12356      646C00
 12357              	.LASF200:
 12358 0cb5 76616C75 		.ascii	"value_encoder\000"
 12358      655F656E 
 12358      636F6465 
 12358      7200
 12359              	.LASF126:
 12360 0cc3 6D6F746F 		.ascii	"motor\000"
 12360      7200
 12361              	.LASF272:
 12362 0cc9 6465765F 		.ascii	"dev_pwm_sat\000"
 12362      70776D5F 
 12362      73617400 
 12363              	.LASF58:
 12364 0cd5 68775F6D 		.ascii	"hw_maint_date\000"
 12364      61696E74 
 12364      5F646174 
 12364      6500
 12365              	.LASF190:
 12366 0ce3 66756E63 		.ascii	"function_scheduler\000"
 12366      74696F6E 
 12366      5F736368 
 12366      6564756C 
 12366      657200
 12367              	.LASF186:
 12368 0cf6 70726576 		.ascii	"prev_pwm\000"
 12368      5F70776D 
 12368      00
 12369              	.LASF59:
 12370 0cff 73746174 		.ascii	"stats_period_begin_date\000"
 12370      735F7065 
 12370      72696F64 
 12370      5F626567 
 12370      696E5F64 
 12371              	.LASF250:
 12372 0d17 49544D5F 		.ascii	"ITM_RxBuffer\000"
 12372      52784275 
 12372      66666572 
 12372      00
 12373              	.LASF274:
 12374 0d24 706F775F 		.ascii	"pow_tension\000"
 12374      74656E73 
 12374      696F6E00 
 12375              	.LASF15:
 12376 0d30 696E7431 		.ascii	"int16\000"
 12376      3600
 12377              	.LASF112:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 274


 12378 0d36 72656164 		.ascii	"read_exp_port_flag\000"
 12378      5F657870 
 12378      5F706F72 
 12378      745F666C 
 12378      616700
 12379              	.LASF78:
 12380 0d49 61637469 		.ascii	"activate_pwm_rescaling\000"
 12380      76617465 
 12380      5F70776D 
 12380      5F726573 
 12380      63616C69 
 12381              	.LASF71:
 12382 0d60 6B5F705F 		.ascii	"k_p_dl\000"
 12382      646C00
 12383              	.LASF42:
 12384 0d67 65737469 		.ascii	"estim_curr\000"
 12384      6D5F6375 
 12384      727200
 12385              	.LASF271:
 12386 0d72 6465765F 		.ascii	"dev_pwm_limit\000"
 12386      70776D5F 
 12386      6C696D69 
 12386      7400
 12387              	.LASF175:
 12388 0d80 63757272 		.ascii	"curr_error\000"
 12388      5F657272 
 12388      6F7200
 12389              	.LASF292:
 12390 0d8b 456E636F 		.ascii	"Encoder_Value\000"
 12390      6465725F 
 12390      56616C75 
 12390      6500
 12391              	.LASF64:
 12392 0d99 75736572 		.ascii	"user_id\000"
 12392      5F696400 
 12393              	.LASF230:
 12394 0da1 72657374 		.ascii	"rest_cycle_status\000"
 12394      5F637963 
 12394      6C655F73 
 12394      74617475 
 12394      7300
 12395              	.LASF198:
 12396 0db3 746D705F 		.ascii	"tmp_value_encoder\000"
 12396      76616C75 
 12396      655F656E 
 12396      636F6465 
 12396      7200
 12397              	.LASF157:
 12398 0dc5 4953525F 		.ascii	"ISR_CYCLES_Handler\000"
 12398      4359434C 
 12398      45535F48 
 12398      616E646C 
 12398      657200
 12399              	.LASF63:
 12400 0dd8 62617564 		.ascii	"baud_rate\000"
 12400      5F726174 
 12400      6500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 275


 12401              	.LASF108:
 12402 0de2 5350495F 		.ascii	"SPI_read_delay\000"
 12402      72656164 
 12402      5F64656C 
 12402      617900
 12403              	.LASF3:
 12404 0df1 73686F72 		.ascii	"short unsigned int\000"
 12404      7420756E 
 12404      7369676E 
 12404      65642069 
 12404      6E7400
 12405              	.LASF92:
 12406 0e04 73745F65 		.ascii	"st_encoder\000"
 12406      6E636F64 
 12406      657200
 12407              	.LASF192:
 12408 0e0f 454E435F 		.ascii	"ENC_L\000"
 12408      4C00
 12409              	.LASF123:
 12410 0e15 73745F65 		.ascii	"st_eeprom\000"
 12410      6570726F 
 12410      6D00
 12411              	.LASF299:
 12412 0e1f 2E2E5C73 		.ascii	"..\\src\\interruptions.c\000"
 12412      72635C69 
 12412      6E746572 
 12412      72757074 
 12412      696F6E73 
 12413              	.LASF16:
 12414 0e36 696E7433 		.ascii	"int32\000"
 12414      3200
 12415              	.LASF288:
 12416 0e3c 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 12416      4F465F41 
 12416      4E414C4F 
 12416      475F494E 
 12416      50555453 
 12417              	.LASF37:
 12418 0e51 46535F46 		.ascii	"FS_FILE\000"
 12418      494C4500 
 12419              	.LASF80:
 12420 0e59 706F735F 		.ascii	"pos_lim_flag\000"
 12420      6C696D5F 
 12420      666C6167 
 12420      00
 12421              	.LASF255:
 12422 0e66 675F6D65 		.ascii	"g_measOld\000"
 12422      61734F6C 
 12422      6400
 12423              	.LASF247:
 12424 0e70 726F775F 		.ascii	"row_end\000"
 12424      656E6400 
 12425              	.LASF33:
 12426 0e78 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 12426      524F4C5F 
 12426      414E474C 
 12426      4500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 276


 12427              	.LASF9:
 12428 0e86 5F5F696E 		.ascii	"__int32_t\000"
 12428      7433325F 
 12428      7400
 12429              	.LASF54:
 12430 0e90 77697265 		.ascii	"wire_disp\000"
 12430      5F646973 
 12430      7000
 12431              	.LASF282:
 12432 0e9a 63616E5F 		.ascii	"can_write\000"
 12432      77726974 
 12432      6500
 12433              	.LASF102:
 12434 0ea4 656D675F 		.ascii	"emg_max_value\000"
 12434      6D61785F 
 12434      76616C75 
 12434      6500
 12435              	.LASF86:
 12436 0eb2 63757272 		.ascii	"current_limit\000"
 12436      656E745F 
 12436      6C696D69 
 12436      7400
 12437              	.LASF31:
 12438 0ec0 53485F69 		.ascii	"SH_input_mode\000"
 12438      6E707574 
 12438      5F6D6F64 
 12438      6500
 12439              	.LASF154:
 12440 0ece 4E4F4E45 		.ascii	"NONE\000"
 12440      00
 12441              	.LASF12:
 12442 0ed3 75696E74 		.ascii	"uint16\000"
 12442      313600
 12443              	.LASF257:
 12444 0eda 675F656D 		.ascii	"g_emg_measOld\000"
 12444      675F6D65 
 12444      61734F6C 
 12444      6400
 12445              	.LASF120:
 12446 0ee8 72657374 		.ascii	"rest_delay\000"
 12446      5F64656C 
 12446      617900
 12447              	.LASF135:
 12448 0ef3 73745F66 		.ascii	"st_filter\000"
 12448      696C7465 
 12448      7200
 12449              	.LASF213:
 12450 0efd 76765F76 		.ascii	"vv_value\000"
 12450      616C7565 
 12450      00
 12451              	.LASF76:
 12452 0f06 6B5F645F 		.ascii	"k_d_c_dl\000"
 12452      635F646C 
 12452      00
 12453              	.LASF140:
 12454 0f0f 64697265 		.ascii	"direction\000"
 12454      6374696F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccjttf3K.s 			page 277


 12454      6E00
 12455              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
